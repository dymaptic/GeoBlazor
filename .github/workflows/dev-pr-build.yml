# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Develop Branch PR Build

on:
  pull_request:
    branches: [ "develop" ]
  push:
    branches: [ "develop" ]

concurrency:
  group: dev-pr-build
  cancel-in-progress: true

jobs:
  actor-check:
    runs-on: ubuntu-latest
    outputs:
      was-bot: ${{ steps.check-bot.outputs.was-bot }}
    steps:
      - name: Check for previous bot commit
        id: check-bot
        if: contains(github.actor, '[bot]')
        run: |
          echo "was-bot=true" >> "$GITHUB_OUTPUT"
          echo "Skipping build for bot commit"
  build: 
    needs: actor-check
    if: needs.actor-check.outputs.was-bot != 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Generate Github App token
      uses: actions/create-github-app-token@v2
      id: app-token
      with:
        app-id: ${{ secrets.SUBMODULE_APP_ID }}
        private-key: ${{ secrets.SUBMODULE_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}
        repositories: 'GeoBlazor'
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ steps.app-token.outputs.token }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
        ref: ${{ github.event.pull_request.head.ref || github.ref }}
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Update NPM
      uses: actions/setup-node@v4
      with:
        node-version: '>=22.11.0'
        check-latest: 'true'
          
      # This runs the main GeoBlazor build script
    - name: Build GeoBlazor
      shell: pwsh
      run: |
        ./GeoBlazorBuild.ps1 -pkg -docs -c "Release"
        
      # Copies the nuget package to the artifacts directory
    - name: Upload nuget artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: .core-nuget
        retention-days: 4
        path: ./src/dymaptic.GeoBlazor.Core/bin/Release/dymaptic.GeoBlazor.Core.*.nupkg

    - name: Get GitHub App User ID
      id: get-user-id
      run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}

    - name: Add & Commit
      run: |
        git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
        git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
        git add .
        git commit -m "Pipeline Build Commit of Version Bump"
        git push