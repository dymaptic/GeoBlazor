@page "/layer-lists"
@inject IJSRuntime JsRuntime

<PageTitle>LayerLists</PageTitle>
<h1>LayerLists</h1>
<div class="links-div">
    <a class="btn btn-secondary" target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-LayerList.html">ArcGIS API for JavaScript Reference</a>
    <a class="btn btn-primary" target="_blank" href="https://www.arcgis.com/home/item.html?id=adfad6ee6c6043238ea64e121bb6429a">San Francisco - Urban Planning Web Scene</a>
</div>
<p class="instructions">
    A simple demo of loading multiple layers into the LayerList widget.
    Select the right arrow to open the sublayers within the layer.
    Select the "eye" icons to toggle a layer's visibility on the basemap.
</p>

@if (_windowWidth is not null)
{
    if (_windowWidth >= 800)
    {
        <SceneView Class="map-view">
            <WebScene>
                <PortalItem Id="adfad6ee6c6043238ea64e121bb6429a" />
            </WebScene>
            <LayerListWidget Position="OverlayPosition.TopRight" OnListItemCreatedHandler="OnListItemCreated" />
        </SceneView>
    }
    else // for mobile, move the widget off of the map so you can see the whole map
    {
        <div id="widget-holder" />
        <SceneView Class="map-view">
            <WebScene>
                <PortalItem Id="adfad6ee6c6043238ea64e121bb6429a" />
            </WebScene>
            <LayerListWidget ContainerId="widget-holder" OnListItemCreatedHandler="OnListItemCreated" />
        </SceneView>
    }
}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        int? oldWidth = _windowWidth;
        _windowWidth = await JsRuntime.InvokeAsync<int>("window.getWidth");
        if (oldWidth != _windowWidth)
        {
            StateHasChanged();
        }
    }

    private int? _windowWidth;

    private async Task<ListItem> OnListItemCreated(ListItem item)
    {
        await item.SetVisibility(true);
        if (item.Title?.StartsWith("Transit") ?? false)
        {
            item.Title = $"Mass {item.Title}";
        }
        return item;
    }

}