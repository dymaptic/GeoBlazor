@page "/basemap-layer-lists"


@inject IJSRuntime JsRuntime

<PageTitle>BasemapLayerLists</PageTitle>
<h1>Basemap and Reference LayerLists</h1>
<div class="links-div">
    <a class="btn btn-secondary" target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapLayerList.html">ArcGIS API for JavaScript Reference</a>
    <a class="btn btn-primary" target="_blank" href="https://www.arcgis.com/home/item.html?id=bfefe7a603c94fc29edca0f4a6662b44">City of Bend 3D Scene</a>
</div>
<p class="instructions">
    A simple demo of loading multiple layers into the BaseMapLayerList widget.
    Select the right arrow to open the sublayers within the BaseMapLayerList.
    Select the "eye" icons to toggle a layer's visibility on the basemap.
</p>

<div id="control-set">
    <div class="form-group">
        <label>
            Toggle Reference Layers Visibility in Widget
            <input type="checkbox" checked @onchange="ToggleReferenceLayersVisibility" />
        </label>
    </div>
    <div class="form-group">
        <label>
            Toggle Base Layers Visibility in Widget
            <input type="checkbox" checked @onchange="ToggleBaseLayersVisibility" />
        </label>
    </div>
</div>

@if (_windowWidth is not null)
{
    if (_windowWidth >= 800)
    {
        <SceneView Class="map-view">
            <WebScene>
                <PortalItem PortalItemId="bfefe7a603c94fc29edca0f4a6662b44" />
            </WebScene>
            <BasemapLayerListWidget @ref="_widget" Position="OverlayPosition.TopRight" />
        </SceneView>
    }
    else // for mobile, move the widget off of the map so you can see the whole map
    {
        <div id="widget-holder" />
        <SceneView Class="map-view">
            <WebScene>
                <PortalItem PortalItemId="bfefe7a603c94fc29edca0f4a6662b44" />
            </WebScene>
            <BasemapLayerListWidget @ref="_widget" ContainerId="widget-holder" />
        </SceneView>
    }
}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        int? oldWidth = _windowWidth;
        _windowWidth = await JsRuntime.InvokeAsync<int>("window.getWidth");
        if (oldWidth != _windowWidth)
        {
            StateHasChanged();
        }
    }
    
    private async Task ToggleReferenceLayersVisibility()
    {
        BasemapLayerListWidgetVisibleElements visibleElements = await _widget!.GetVisibleElements()
            ?? new BasemapLayerListWidgetVisibleElements(baseLayers: true, referenceLayers: true);
        
        await visibleElements.SetReferenceLayers(!visibleElements.ReferenceLayers ?? false);
        await _widget.SetVisibleElements(visibleElements);
    }
    
    private async Task ToggleBaseLayersVisibility()
    {
        BasemapLayerListWidgetVisibleElements visibleElements = await _widget!.GetVisibleElements()
            ?? new BasemapLayerListWidgetVisibleElements(baseLayers: true, referenceLayers: true);
        
        await visibleElements.SetBaseLayers(!visibleElements.BaseLayers);
        await _widget.SetVisibleElements(visibleElements);
    }

    private int? _windowWidth;
    private BasemapLayerListWidget? _widget;
}