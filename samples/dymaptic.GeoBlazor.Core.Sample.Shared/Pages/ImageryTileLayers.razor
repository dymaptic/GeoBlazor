@page "/imagery-tile-layer"

<h3>Imagery Layers</h3>

<div class="links-div">
    <a class="btn btn-secondary" target="_blank" href="https://developers.arcgis.com/javascript/latest/sample-code/layers-hosted-imagerytilelayer-landcover/">ArcGIS API for JavaScript</a>
    <a class="btn btn-primary" target="_blank" href="https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/2">States Feature Layer</a>
    <a class="btn btn-accent" target="_blank" href="https://tiledimageservices.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/NLCD_2016_Land_Cover_L48_20190424/ImageServer">Land Cover Imagery Tile Layer</a>
</div>
<p class="instructions">
    This sample shows how to add an instance of a hosted ImageryTileLayer to a Map in a MapView. The ImageryTileLayer in this sample shows the National Land Cover Database (NLCD) 2016 land cover types for the United States.
</p>

<MapView @ref="_mapView"
         class="map-view"
         Center="@(new Point(-100, 40))"
         Zoom="4"
         OnLayerViewCreate="OnLayerViewCreated"
         BackgroundColor="@(new MapColor("#F5F5F5"))">
    <SpatialReference Wkid="102003" />
    <Map>
        <Basemap>
            <FeatureLayer @ref="_states"
                          Url="https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/2"
                          Effect="@(new Effect("drop-shadow(-10px, 10px, 6px gray)"))">
                <SimpleRenderer>
                    <SimpleFillSymbol Color="@(new MapColor("#505050"))">
                        <Outline Color="@(new MapColor("#DCDCDC"))" Width="@("0.5px")" />
                    </SimpleFillSymbol>
                </SimpleRenderer>
            </FeatureLayer>
        </Basemap>
        <ImageryTileLayer @ref="_layer"
                          Url="https://tiledimageservices.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/NLCD_2016_Land_Cover_L48_20190424/ImageServer" />
    </Map>
    <CustomOverlay Position="OverlayPosition.TopRight">
        <div id="land-cover" class="esri-widget">
            <h4 id="titleText" class="esri-widget__heading esri-editor__title">
                Land cover types - 2016
            </h4>
            <br>
            <div class="esri-widget">
                <calcite-label>
                    <b>Select land type:</b>
                    <calcite-radio-button-group name="Select land type" layout="vertical"
                                                id="landCoverTypeSelect" scale="s">
                        <calcite-label layout="inline" 
                                       @onclick="@(e => UpdateLandCoverType("forests"))">
                            <calcite-radio-button id="forests"
                                                  value="forests"
                                                  checked>
                            </calcite-radio-button>
                            <span style="color: black">Forested Areas</span>
                        </calcite-label>
                        <calcite-label layout="inline" @onclick="@(e => UpdateLandCoverType("developed"))">
                            <calcite-radio-button value="developed">
                            </calcite-radio-button>
                            <span style="color: black">Developed Areas</span>
                        </calcite-label>
                        <calcite-label layout="inline" @onclick="@(e => UpdateLandCoverType("crops"))">
                            <calcite-radio-button value="crops">
                            </calcite-radio-button>
                            <span style="color: black">Cultivated Areas</span>
                        </calcite-label>
                        <calcite-label layout="inline" @onclick="@(e => UpdateLandCoverType("hay"))">
                            <calcite-radio-button value="hay">
                            </calcite-radio-button>
                            <span style="color: black">Hay/Pasture Areas</span>
                        </calcite-label>
                        <calcite-label layout="inline" @onclick="@(e => UpdateLandCoverType("wetlands"))">
                            <calcite-radio-button value="wetlands">
                            </calcite-radio-button>
                            <span style="color: black">Wetlands</span>
                        </calcite-label>
                    </calcite-radio-button-group>
                </calcite-label>

            </div>
            <div id="projectionDiv" class="esri-widget">
                <p><b>Change view's projection:</b></p>
                <select id="projectWKID" class="esri-input esri-select"
                        @onchange="UpdateSpatialReference">
                    <option value="102003" selected>Albers Equal Area</option>
                    <option value="102100">Web Mercator</option>
                    <option value="4326">WGS 84</option>
                </select>
            </div>
        </div>
    </CustomOverlay>
</MapView>


@code {

    private async Task OnLayerViewCreated(LayerViewCreateEvent createEvent)
    {
        if (createEvent.Layer?.Id == _layer?.Id)
        {
            await UpdateSpatialReference(new ChangeEventArgs{Value = "102003"});
            await UpdateLandCoverType("forests");
        }
    }

    private async Task UpdateSpatialReference(ChangeEventArgs args)
    {
        SpatialReference spatialReference = new SpatialReference(int.Parse(args.Value!.ToString() ?? "102003"));
        await _states!.SetSpatialReference(spatialReference);
        await _mapView!.SetSpatialReference(spatialReference);
    }

    private async Task UpdateLandCoverType(string type)
    {
        if (_layer is null || _layer.Loaded != true)
        {
            return;
        }
        
        LandType? landType = _landTypes.FirstOrDefault(t => t.Name == type);
        List<UniqueValueInfo> infos = [];

        if (landType is not null)
        {
            for (int i = 0; i < landType.Categories.Length; i++)
            {
                infos.Add(new UniqueValueInfo(
                    symbol: new SimpleFillSymbol(color: new MapColor(landType.Colors[i])),
                    value: landType.Categories[i]));
            }
        }
        
        await _layer.SetRenderer(new UniqueValueRenderer(field: "NLCD_Land",
            uniqueValueInfos: infos));
    }

    private ImageryTileLayer? _layer;
    private FeatureLayer? _states;
    private MapView? _mapView;
    
    private readonly LandType[] _landTypes =
    [
        new("forests", 
            ["Deciduous Forest", "Evergreen Forest", "Mixed Forest"], 
            ["#006622", "#006622", "#006622", "#006622"]),
        new("developed", 
            ["Developed, Open Space", "Developed, Low Intensity", "Developed, Medium Intensity", "Developed, High Intensity"], 
            ["#E5D0DD", "#E08B88", "#FF0000", "#A70000"]),
        new("crops", 
            ["Cultivated Crops"], 
            ["#A56400"]),
        new("hay", 
            ["Hay/Pasture"], 
            ["#D3F40E"]),
        new("wetlands", 
            ["Woody Wetlands", "Emergent Herbaceuous Wetlands"], 
            ["#0073e6", "#0073e6"])
    ];
    
    private record LandType(string Name, string[] Categories, string[] Colors);
}
