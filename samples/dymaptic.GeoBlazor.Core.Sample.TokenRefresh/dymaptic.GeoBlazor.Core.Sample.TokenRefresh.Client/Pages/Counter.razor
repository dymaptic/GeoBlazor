@page "/counter"
@rendermode InteractiveAuto

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p>
    Click on the map to increment the counter and add markers. Use the Search widget to find locations.
</p>

<SceneView @ref="_sceneView" 
           Style="height:500px; width:100%;" 
           OnClick="OnClick"
           OnViewRendered="OnViewRendered">
    <Map>
        <Basemap>
            <BasemapStyle Name="BasemapStyleName.ArcgisImagery" />
        </Basemap>
        <GraphicsLayer @ref="_graphicsLayer" />
    </Map>
    <SearchWidget Position="OverlayPosition.TopRight" />
</SceneView>

<div>
    <h2>Points Clicked</h2>
    <h3 role="status">Current count: @_points.Count</h3>
    @foreach (Point point in _points)
    {
        <p>Long: @point.Longitude!.Value.ToString("N2") Lat: @point.Latitude!.Value.ToString("N2")</p>
    }
</div>

@code {
    private void OnViewRendered()
    {
        _viewRendered = true;
    }

    private async Task OnClick(ClickEvent arg)
    {
        Point point = arg.MapPoint;

        if (point.Longitude is null || point.Latitude is null || !_viewRendered)
        {
            // Invalid point, do not add
            return;
        }

        _points.Add(point);
        
        HitTestResult result = await _sceneView!.HitTest(arg);
        
        if (result.Results is { Length: > 0 } && result.Results[0] is GraphicHit)
        {
            // already added this point
            return;
        }

        SimpleMarkerSymbol symbol = new SimpleMarkerSymbol(new Outline(new MapColor("blue")),
            new MapColor("yellow"), 10);
        
        PopupTemplate popupTemplate = new PopupTemplate(
            $"New Point at Long: {point.Longitude!.Value:N2} Lat: {point.Latitude!.Value:N2}");
        
        Graphic graphic = new Graphic(point, symbol, popupTemplate);
        await _graphicsLayer!.Add(graphic);
        await _sceneView.OpenPopup(new PopupOpenOptions(null, null, null, [graphic]));
        await InvokeAsync(StateHasChanged);
    }

    private GraphicsLayer? _graphicsLayer;
    private SceneView? _sceneView;
    private bool _viewRendered;
    private readonly List<Point> _points = [];
}