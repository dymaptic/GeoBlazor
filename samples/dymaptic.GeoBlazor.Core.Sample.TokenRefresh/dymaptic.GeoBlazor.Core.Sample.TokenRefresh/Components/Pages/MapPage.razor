@page "/map"

@if (!_isInitialized)
{
    <p>Loading...</p>
}
else
{
    <MapView Class="map-view">
        <WebMap>
            <PortalItem PortalItemId="c50ab669b0da4af9b51170e65ecab00b" />
        </WebMap>
    </MapView>
}

@code {
    [Inject]
    public required ArcGisAuthService AuthService { get; set; }

    [Inject]
    public required AuthenticationManager AuthenticationManager { get; set; }

    // GeoBlazor AuthenticationManager cannot initialize until after the first render, when JavaScript interop is available.
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Get the token from the authentication service
            TokenResponse tokenResponse = await AuthService.GetTokenAsync(false);

            if (tokenResponse.Success && tokenResponse.AccessToken != null)
            {
                // Register the token with the GeoBlazor AuthenticationManager
                // This will allow the GeoBlazor maps to use the token for authentication
                if (tokenResponse.Expires != null) await AuthenticationManager.RegisterToken(tokenResponse.AccessToken, (DateTimeOffset)tokenResponse.Expires);
                _isInitialized = true;
                StateHasChanged(); // Trigger a re-render to show the map
            }
            else
            {
                // Handle error (e.g., show a message to the user)
                Console.WriteLine($"Error retrieving token: {tokenResponse.ErrorMessage}");
            }
        }

    }

    private bool _isInitialized = false;
}
