// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Interfaces;

/// <summary>
///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Interfaces.IArcGISCachedService.html">GeoBlazor Docs</a>
///     Interface for types ElevationLayer, TileLayer
/// </summary>
[JsonConverter(typeof(MultiTypeConverter<IArcGISCachedService>))]
public partial interface IArcGISCachedService : IMapComponent
{
#region Properties

    /// <summary>
    ///     The copyright text as defined by the service.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-mixins-ArcGISCachedService.html#copyright">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    string? Copyright { get; set; }
    
    /// <summary>
    ///     The spatial reference of the layer as defined by the service.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-mixins-ArcGISCachedService.html#spatialReference">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    SpatialReference? SpatialReference { get; }
    
    /// <summary>
    ///     Contains information about the tiling scheme for the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-mixins-ArcGISCachedService.html#tileInfo">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    TileInfo? TileInfo { get; set; }
    
#endregion

#region Property Setters

    /// <summary>
    ///    Asynchronously set the value of the Copyright property after render.
    /// </summary>
    Task SetCopyright(string? value);
    
    /// <summary>
    ///    Asynchronously set the value of the TileInfo property after render.
    /// </summary>
    Task SetTileInfo(TileInfo? value);
    
#endregion

#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the Copyright property.
    /// </summary>
    Task<string?> GetCopyright();

    /// <summary>
    ///     Asynchronously retrieve the current value of the SpatialReference property.
    /// </summary>
    Task<SpatialReference?> GetSpatialReference();

    /// <summary>
    ///     Asynchronously retrieve the current value of the TileInfo property.
    /// </summary>
    Task<TileInfo?> GetTileInfo();

#endregion

}
