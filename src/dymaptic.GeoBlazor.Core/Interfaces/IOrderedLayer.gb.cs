// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Interfaces;

/// <summary>
///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Interfaces.IOrderedLayer.html">GeoBlazor Docs</a>
///     Interface for types CatalogLayer, CSVLayer, FeatureLayer, GeoJSONLayer, OGCFeatureLayer, WFSLayer
/// </summary>
public partial interface IOrderedLayer : IMapComponent
{
#region Properties

    /// <summary>
    ///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Interfaces.IOrderedLayer.html#iorderedlayerorderby-property">GeoBlazor Docs</a>
    ///     Determines the order in which features are drawn in the view.
    ///     default null
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-mixins-OrderedLayer.html#orderBy">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    IReadOnlyList<OrderByInfo>? OrderBy { get; set; }
    
#endregion

#region Property Setters

    /// <summary>
    ///    Asynchronously set the value of the OrderBy property after render.
    /// </summary>
    Task SetOrderBy(IReadOnlyList<OrderByInfo>? value);
    
#endregion

#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the OrderBy property.
    /// </summary>
    Task<IReadOnlyList<OrderByInfo>?> GetOrderBy();

#endregion

#region Collection Property Adders

    /// <summary>
    ///     Asynchronously add elements to the OrderBy property.
    /// </summary>
    Task AddToOrderBy(params OrderByInfo[] values);
    
#endregion

#region Collection Property Removers

    /// <summary>
    ///     Asynchronously remove elements from the OrderBy property.
    /// </summary>
    Task RemoveFromOrderBy(params OrderByInfo[] values);
    
#endregion

}
