// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Interfaces;

/// <summary>
///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Interfaces.IHighlightLayerViewMixin.html">GeoBlazor Docs</a>
///     Interface for types CatalogFootprintLayerView, CSVLayerView, FeatureLayerView, GeoJSONLayerView, GraphicsLayerView, OGCFeatureLayerView, ParquetLayerView, StreamLayerView, WFSLayerView
/// </summary>
public partial interface IHighlightLayerViewMixin : IMapComponent
{
#region Properties

    /// <summary>
    ///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Interfaces.IHighlightLayerViewMixin.html#ihighlightlayerviewmixinhighlightoptions-property">GeoBlazor Docs</a>
    ///     Options for configuring the highlight.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-HighlightLayerViewMixin.html#highlightOptions">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    HighlightOptions? HighlightOptions { get; set; }
    
#endregion

#region Property Setters

    /// <summary>
    ///    Asynchronously set the value of the HighlightOptions property after render.
    /// </summary>
    Task SetHighlightOptions(HighlightOptions? value);
    
#endregion

#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the HighlightOptions property.
    /// </summary>
    Task<HighlightOptions?> GetHighlightOptions();

#endregion

}
