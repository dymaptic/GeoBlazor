// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetVisibleElementsSnappingControlsElements } from './visibleElementsSnappingControlsElements';

export async function buildJsVisibleElementsSnappingControlsElementsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsVisibleElementsSnappingControlsElements: any = {};

    if (hasValue(dotNetObject.enabledToggle)) {
        jsVisibleElementsSnappingControlsElements.enabledToggle = dotNetObject.enabledToggle;
    }
    if (hasValue(dotNetObject.featureEnabledToggle)) {
        jsVisibleElementsSnappingControlsElements.featureEnabledToggle = dotNetObject.featureEnabledToggle;
    }
    if (hasValue(dotNetObject.header)) {
        jsVisibleElementsSnappingControlsElements.header = dotNetObject.header;
    }
    if (hasValue(dotNetObject.layerList)) {
        jsVisibleElementsSnappingControlsElements.layerList = dotNetObject.layerList;
    }
    if (hasValue(dotNetObject.layerListToggleLayersButton)) {
        jsVisibleElementsSnappingControlsElements.layerListToggleLayersButton = dotNetObject.layerListToggleLayersButton;
    }
    if (hasValue(dotNetObject.selfEnabledToggle)) {
        jsVisibleElementsSnappingControlsElements.selfEnabledToggle = dotNetObject.selfEnabledToggle;
    }
    
    jsObjectRefs[dotNetObject.id] = jsVisibleElementsSnappingControlsElements;
    arcGisObjectRefs[dotNetObject.id] = jsVisibleElementsSnappingControlsElements;
    
    return jsVisibleElementsSnappingControlsElements;
}


export async function buildDotNetVisibleElementsSnappingControlsElementsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetVisibleElementsSnappingControlsElements: any = {};
    
    if (hasValue(jsObject.enabledToggle)) {
        dotNetVisibleElementsSnappingControlsElements.enabledToggle = jsObject.enabledToggle;
    }
    
    if (hasValue(jsObject.featureEnabledToggle)) {
        dotNetVisibleElementsSnappingControlsElements.featureEnabledToggle = jsObject.featureEnabledToggle;
    }
    
    if (hasValue(jsObject.header)) {
        dotNetVisibleElementsSnappingControlsElements.header = jsObject.header;
    }
    
    if (hasValue(jsObject.layerList)) {
        dotNetVisibleElementsSnappingControlsElements.layerList = jsObject.layerList;
    }
    
    if (hasValue(jsObject.layerListToggleLayersButton)) {
        dotNetVisibleElementsSnappingControlsElements.layerListToggleLayersButton = jsObject.layerListToggleLayersButton;
    }
    
    if (hasValue(jsObject.selfEnabledToggle)) {
        dotNetVisibleElementsSnappingControlsElements.selfEnabledToggle = jsObject.selfEnabledToggle;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetVisibleElementsSnappingControlsElements.id = geoBlazorId;
    }

    return dotNetVisibleElementsSnappingControlsElements;
}

