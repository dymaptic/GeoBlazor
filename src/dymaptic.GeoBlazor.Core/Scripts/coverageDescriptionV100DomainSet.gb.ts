import { buildDotNetCoverageDescriptionV100DomainSet } from './coverageDescriptionV100DomainSet';
// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file
import CoverageDescriptionV100DomainSet = __esri.CoverageDescriptionV100DomainSet;
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';
export async function buildJsCoverageDescriptionV100DomainSetGenerated(dotNetObject: any): Promise<any> {
    let jsCoverageDescriptionV100DomainSet: any = {}
    if (hasValue(dotNetObject.spatialDomain)) {
        let { buildJsCoverageDescriptionV100DomainSetSpatialDomain } = await import('./coverageDescriptionV100DomainSetSpatialDomain');
        jsCoverageDescriptionV100DomainSet.spatialDomain = await buildJsCoverageDescriptionV100DomainSetSpatialDomain(dotNetObject.spatialDomain, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.temporalDomain)) {
        jsCoverageDescriptionV100DomainSet.temporalDomain = dotNetObject.temporalDomain;
    }
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsCoverageDescriptionV100DomainSet);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsCoverageDescriptionV100DomainSet;
    
    let dnInstantiatedObject = await buildDotNetCoverageDescriptionV100DomainSet(jsCoverageDescriptionV100DomainSet);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for CoverageDescriptionV100DomainSet', e);
    }
    
    return jsCoverageDescriptionV100DomainSet;
}
export async function buildDotNetCoverageDescriptionV100DomainSetGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetCoverageDescriptionV100DomainSet: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.spatialDomain)) {
            let { buildDotNetCoverageDescriptionV100DomainSetSpatialDomain } = await import('./coverageDescriptionV100DomainSetSpatialDomain');
            dotNetCoverageDescriptionV100DomainSet.spatialDomain = await buildDotNetCoverageDescriptionV100DomainSetSpatialDomain(jsObject.spatialDomain);
        }
        if (hasValue(jsObject.temporalDomain)) {
            dotNetCoverageDescriptionV100DomainSet.temporalDomain = jsObject.temporalDomain;
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetCoverageDescriptionV100DomainSet.id = k;
                break;
            }
        }
    }

    return dotNetCoverageDescriptionV100DomainSet;
}

