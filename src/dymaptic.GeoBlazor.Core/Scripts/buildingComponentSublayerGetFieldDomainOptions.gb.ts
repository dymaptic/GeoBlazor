import { buildDotNetBuildingComponentSublayerGetFieldDomainOptions } from './buildingComponentSublayerGetFieldDomainOptions';
// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file
import BuildingComponentSublayerGetFieldDomainOptions = __esri.BuildingComponentSublayerGetFieldDomainOptions;
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';
export async function buildJsBuildingComponentSublayerGetFieldDomainOptionsGenerated(dotNetObject: any): Promise<any> {
    let jsBuildingComponentSublayerGetFieldDomainOptions: any = {}
    if (hasValue(dotNetObject.feature)) {
        let { buildJsGraphic } = await import('./graphic');
        jsBuildingComponentSublayerGetFieldDomainOptions.feature = buildJsGraphic(dotNetObject.feature) as any;
    }

    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsBuildingComponentSublayerGetFieldDomainOptions);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsBuildingComponentSublayerGetFieldDomainOptions;
    
    let dnInstantiatedObject = await buildDotNetBuildingComponentSublayerGetFieldDomainOptions(jsBuildingComponentSublayerGetFieldDomainOptions);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for BuildingComponentSublayerGetFieldDomainOptions', e);
    }
    
    return jsBuildingComponentSublayerGetFieldDomainOptions;
}
export async function buildDotNetBuildingComponentSublayerGetFieldDomainOptionsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetBuildingComponentSublayerGetFieldDomainOptions: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.feature)) {
            let { buildDotNetGraphic } = await import('./graphic');
            dotNetBuildingComponentSublayerGetFieldDomainOptions.feature = buildDotNetGraphic(jsObject.feature, layerId, viewId);
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetBuildingComponentSublayerGetFieldDomainOptions.id = k;
                break;
            }
        }
    }

    return dotNetBuildingComponentSublayerGetFieldDomainOptions;
}

