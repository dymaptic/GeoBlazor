// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetFeaturesViewModelFetchFeaturesScreenPoint } from './featuresViewModelFetchFeaturesScreenPoint';

export async function buildJsFeaturesViewModelFetchFeaturesScreenPointGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsFeaturesViewModelFetchFeaturesScreenPoint: any = {};

    if (hasValue(dotNetObject.x)) {
        jsFeaturesViewModelFetchFeaturesScreenPoint.x = dotNetObject.x;
    }
    if (hasValue(dotNetObject.y)) {
        jsFeaturesViewModelFetchFeaturesScreenPoint.y = dotNetObject.y;
    }
    
    jsObjectRefs[dotNetObject.id] = jsFeaturesViewModelFetchFeaturesScreenPoint;
    arcGisObjectRefs[dotNetObject.id] = jsFeaturesViewModelFetchFeaturesScreenPoint;
    
    return jsFeaturesViewModelFetchFeaturesScreenPoint;
}


export async function buildDotNetFeaturesViewModelFetchFeaturesScreenPointGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeaturesViewModelFetchFeaturesScreenPoint: any = {};
    
    if (hasValue(jsObject.x)) {
        dotNetFeaturesViewModelFetchFeaturesScreenPoint.x = jsObject.x;
    }
    
    if (hasValue(jsObject.y)) {
        dotNetFeaturesViewModelFetchFeaturesScreenPoint.y = jsObject.y;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetFeaturesViewModelFetchFeaturesScreenPoint.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        dotNetFeaturesViewModelFetchFeaturesScreenPoint.id = await dotNetRef.invokeMethodAsync('GetId');
    }
    if (hasValue(dotNetFeaturesViewModelFetchFeaturesScreenPoint.id)) {
        jsObjectRefs[dotNetFeaturesViewModelFetchFeaturesScreenPoint.id] ??= jsObject;
        arcGisObjectRefs[dotNetFeaturesViewModelFetchFeaturesScreenPoint.id] ??= jsObject;
    }

    return dotNetFeaturesViewModelFetchFeaturesScreenPoint;
}

