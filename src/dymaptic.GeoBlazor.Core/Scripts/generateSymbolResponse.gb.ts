// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { buildDotNetGenerateSymbolResponse } from './generateSymbolResponse';
import GenerateSymbolResponse = __esri.GenerateSymbolResponse;
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';

export async function buildJsGenerateSymbolResponseGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsGenerateSymbolResponse: any = {}
    if (hasValue(dotNetObject.symbol)) {
        let { buildJsCIMSymbol } = await import('./cIMSymbol');
        jsGenerateSymbolResponse.symbol = await buildJsCIMSymbol(dotNetObject.symbol, layerId, viewId) as any;
    }

    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsGenerateSymbolResponse);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsGenerateSymbolResponse;
    
    let dnInstantiatedObject = await buildDotNetGenerateSymbolResponse(jsGenerateSymbolResponse);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for GenerateSymbolResponse', e);
    }
    
    return jsGenerateSymbolResponse;
}

export async function buildDotNetGenerateSymbolResponseGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetGenerateSymbolResponse: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.symbol)) {
            let { buildDotNetCIMSymbol } = await import('./cIMSymbol');
            dotNetGenerateSymbolResponse.symbol = await buildDotNetCIMSymbol(jsObject.symbol);
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetGenerateSymbolResponse.id = k;
                break;
            }
        }
    }

    return dotNetGenerateSymbolResponse;
}

