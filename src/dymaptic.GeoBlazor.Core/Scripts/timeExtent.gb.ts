// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import TimeExtent from '@arcgis/core/time/TimeExtent';
import { hasValue } from './arcGisJsInterop';
import {IPropertyWrapper} from './definitions';

export default class TimeExtentGenerated implements IPropertyWrapper {
    public component: TimeExtent;
    public geoBlazorId: string | null = null;
    public viewId: string | null = null;
    public layerId: string | null = null;

    constructor(component: TimeExtent) {
        this.component = component;
    }
    
    // region methods
   
    unwrap() {
        return this.component;
    }
    

    async updateComponent(dotNetObject: any): Promise<void> {

        if (hasValue(dotNetObject.end)) {
            this.component.end = dotNetObject.end;
        }
        if (hasValue(dotNetObject.start)) {
            this.component.start = dotNetObject.start;
        }
    }
    
    // region properties
    
    getProperty(prop: string): any {
        return this.component[prop];
    }
    
    setProperty(prop: string, value: any): void {
        this.component[prop] = value;
    }
}

