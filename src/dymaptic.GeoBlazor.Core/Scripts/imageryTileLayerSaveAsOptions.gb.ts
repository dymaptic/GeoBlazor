// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetImageryTileLayerSaveAsOptions } from './imageryTileLayerSaveAsOptions';

export async function buildJsImageryTileLayerSaveAsOptionsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsImageryTileLayerSaveAsOptions: any = {}

    if (hasValue(dotNetObject.folder)) {
        const { id, dotNetComponentReference, layerId, viewId, ...sanitizedFolder } = dotNetObject.folder;
        jsImageryTileLayerSaveAsOptions.folder = sanitizedFolder;
    }
    if (hasValue(dotNetObject.validationOptions)) {
        jsImageryTileLayerSaveAsOptions.validationOptions = dotNetObject.validationOptions;
    }
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsImageryTileLayerSaveAsOptions);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsImageryTileLayerSaveAsOptions;
    
    let dnInstantiatedObject = await buildDotNetImageryTileLayerSaveAsOptions(jsImageryTileLayerSaveAsOptions);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for ImageryTileLayerSaveAsOptions', e);
    }
    
    return jsImageryTileLayerSaveAsOptions;
}

export async function buildDotNetImageryTileLayerSaveAsOptionsGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetImageryTileLayerSaveAsOptions: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.folder)) {
            dotNetImageryTileLayerSaveAsOptions.folder = jsObject.folder;
        }
        if (hasValue(jsObject.validationOptions)) {
            dotNetImageryTileLayerSaveAsOptions.validationOptions = jsObject.validationOptions;
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetImageryTileLayerSaveAsOptions.id = k;
                break;
            }
        }
    }

    return dotNetImageryTileLayerSaveAsOptions;
}

