// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetPixelBlockAddDataPlaneData } from './pixelBlockAddDataPlaneData';

export async function buildJsPixelBlockAddDataPlaneDataGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsPixelBlockAddDataPlaneData: any = {};
    if (hasValue(dotNetObject.statistics)) {
        let { buildJsPixelBlockAddDataPlaneDataStatistics } = await import('./pixelBlockAddDataPlaneDataStatistics');
        jsPixelBlockAddDataPlaneData.statistics = await buildJsPixelBlockAddDataPlaneDataStatistics(dotNetObject.statistics, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.pixels) && dotNetObject.pixels.length > 0) {
        jsPixelBlockAddDataPlaneData.pixels = dotNetObject.pixels;
    }
    
    jsObjectRefs[dotNetObject.id] = jsPixelBlockAddDataPlaneData;
    arcGisObjectRefs[dotNetObject.id] = jsPixelBlockAddDataPlaneData;
    
    return jsPixelBlockAddDataPlaneData;
}


export async function buildDotNetPixelBlockAddDataPlaneDataGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPixelBlockAddDataPlaneData: any = {};
    
    if (hasValue(jsObject.statistics)) {
        let { buildDotNetPixelBlockAddDataPlaneDataStatistics } = await import('./pixelBlockAddDataPlaneDataStatistics');
        dotNetPixelBlockAddDataPlaneData.statistics = await buildDotNetPixelBlockAddDataPlaneDataStatistics(jsObject.statistics);
    }
    
    if (hasValue(jsObject.pixels)) {
        dotNetPixelBlockAddDataPlaneData.pixels = jsObject.pixels;
    }
    

    return dotNetPixelBlockAddDataPlaneData;
}

