// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetSymbolTableElement } from './symbolTableElement';

export async function buildJsSymbolTableElementGenerated(dotNetObject: any): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsSymbolTableElement: any = {};
    if (hasValue(dotNetObject.infos) && dotNetObject.infos.length > 0) {
        jsSymbolTableElement.infos = dotNetObject.infos;
    }

    if (hasValue(dotNetObject.legendType)) {
        jsSymbolTableElement.legendType = dotNetObject.legendType;
    }
    if (hasValue(dotNetObject.title)) {
        jsSymbolTableElement.title = dotNetObject.title;
    }
    
    jsObjectRefs[dotNetObject.id] = jsSymbolTableElement;
    arcGisObjectRefs[dotNetObject.id] = jsSymbolTableElement;
    
    return jsSymbolTableElement;
}


export async function buildDotNetSymbolTableElementGenerated(jsObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSymbolTableElement: any = {};
    
    if (hasValue(jsObject.infos)) {
        dotNetSymbolTableElement.infos = removeCircularReferences(jsObject.infos);
    }
    
    if (hasValue(jsObject.legendType)) {
        dotNetSymbolTableElement.legendType = jsObject.legendType;
    }
    
    if (hasValue(jsObject.title)) {
        dotNetSymbolTableElement.title = jsObject.title;
    }
    
    if (hasValue(jsObject.type)) {
        dotNetSymbolTableElement.type = jsObject.type;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetSymbolTableElement.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        dotNetSymbolTableElement.id = await dotNetRef.invokeMethodAsync('GetId');
    }
    if (hasValue(dotNetSymbolTableElement.id)) {
        jsObjectRefs[dotNetSymbolTableElement.id] ??= jsObject;
        arcGisObjectRefs[dotNetSymbolTableElement.id] ??= jsObject;
    }

    return dotNetSymbolTableElement;
}

