// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { buildDotNetFeatureReference } from './featureReference';
import FeatureReference = __esri.FeatureReference;
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';

export async function buildJsFeatureReferenceGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsFeatureReference: any = {}
    if (hasValue(dotNetObject.layer)) {
        let { buildJsFeatureReferenceLayer } = await import('./featureReferenceLayer');
        jsFeatureReference.layer = await buildJsFeatureReferenceLayer(dotNetObject.layer, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.attributes)) {
        jsFeatureReference.attributes = dotNetObject.attributes;
    }
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsFeatureReference);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsFeatureReference;
    
    let dnInstantiatedObject = await buildDotNetFeatureReference(jsFeatureReference);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for FeatureReference', e);
    }
    
    return jsFeatureReference;
}

export async function buildDotNetFeatureReferenceGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeatureReference: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.attributes)) {
            dotNetFeatureReference.attributes = jsObject.attributes;
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetFeatureReference.id = k;
                break;
            }
        }
    }

    return dotNetFeatureReference;
}

