// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import PrintParameters from '@arcgis/core/rest/support/PrintParameters';
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetPrintParameters } from './printParameters';

export async function buildJsPrintParametersGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsPrintParameters = new PrintParameters();
    if (hasValue(dotNetObject.outSpatialReference)) {
        let { buildJsSpatialReference } = await import('./spatialReference');
        jsPrintParameters.outSpatialReference = buildJsSpatialReference(dotNetObject.outSpatialReference) as any;
    }
    if (hasValue(dotNetObject.template)) {
        let { buildJsPrintTemplate } = await import('./printTemplate');
        jsPrintParameters.template = await buildJsPrintTemplate(dotNetObject.template, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.extraParameters)) {
        jsPrintParameters.extraParameters = dotNetObject.extraParameters;
    }
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsPrintParameters);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsPrintParameters;
    
    let dnInstantiatedObject = await buildDotNetPrintParameters(jsPrintParameters);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for PrintParameters', e);
    }
    
    return jsPrintParameters;
}

export async function buildDotNetPrintParametersGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPrintParameters: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.outSpatialReference)) {
            let { buildDotNetSpatialReference } = await import('./spatialReference');
            dotNetPrintParameters.outSpatialReference = buildDotNetSpatialReference(jsObject.outSpatialReference);
        }
        if (hasValue(jsObject.template)) {
            let { buildDotNetPrintTemplate } = await import('./printTemplate');
            dotNetPrintParameters.template = await buildDotNetPrintTemplate(jsObject.template);
        }
    if (hasValue(jsObject.extraParameters)) {
        dotNetPrintParameters.extraParameters = jsObject.extraParameters;
    }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetPrintParameters.id = k;
                break;
            }
        }
    }

    return dotNetPrintParameters;
}

