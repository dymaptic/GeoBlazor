// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetFeatureTableCellDblclickEvent } from './featureTableCellDblclickEvent';

export async function buildJsFeatureTableCellDblclickEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsFeatureTableCellDblclickEvent: any = {};
    if (hasValue(dotNetObject.feature)) {
        let { buildJsGraphic } = await import('./graphic');
        jsFeatureTableCellDblclickEvent.feature = buildJsGraphic(dotNetObject.feature) as any;
    }
    if (hasValue(dotNetObject.native)) {
        jsFeatureTableCellDblclickEvent.native = dotNetObject.native;
    }

    if (hasValue(dotNetObject.fieldName)) {
        jsFeatureTableCellDblclickEvent.fieldName = dotNetObject.fieldName;
    }
    if (hasValue(dotNetObject.index)) {
        jsFeatureTableCellDblclickEvent.index = dotNetObject.index;
    }
    if (hasValue(dotNetObject.objectId)) {
        jsFeatureTableCellDblclickEvent.objectId = dotNetObject.objectId;
    }
    
    jsObjectRefs[dotNetObject.id] = jsFeatureTableCellDblclickEvent;
    arcGisObjectRefs[dotNetObject.id] = jsFeatureTableCellDblclickEvent;
    
    return jsFeatureTableCellDblclickEvent;
}


export async function buildDotNetFeatureTableCellDblclickEventGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeatureTableCellDblclickEvent: any = {};
    
    if (hasValue(jsObject.feature)) {
        let { buildDotNetGraphic } = await import('./graphic');
        dotNetFeatureTableCellDblclickEvent.feature = buildDotNetGraphic(jsObject.feature, layerId, viewId);
    }
    
    if (hasValue(jsObject.fieldName)) {
        dotNetFeatureTableCellDblclickEvent.fieldName = jsObject.fieldName;
    }
    
    if (hasValue(jsObject.index)) {
        dotNetFeatureTableCellDblclickEvent.index = jsObject.index;
    }
    
    if (hasValue(jsObject.native)) {
        dotNetFeatureTableCellDblclickEvent.native = removeCircularReferences(jsObject.native);
    }
    
    if (hasValue(jsObject.objectId)) {
        dotNetFeatureTableCellDblclickEvent.objectId = jsObject.objectId;
    }
    
    if (hasValue(jsObject.type)) {
        dotNetFeatureTableCellDblclickEvent.type = jsObject.type;
    }
    

    return dotNetFeatureTableCellDblclickEvent;
}

