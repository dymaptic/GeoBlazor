// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, sanitize, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetTileInfoCreateOptions } from './tileInfoCreateOptions';

export async function buildJsTileInfoCreateOptionsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsTileInfoCreateOptions: any = {};

    if (hasValue(dotNetObject.numLODs)) {
        jsTileInfoCreateOptions.numLODs = dotNetObject.numLODs;
    }
    if (hasValue(dotNetObject.scales) && dotNetObject.scales.length > 0) {
        jsTileInfoCreateOptions.scales = dotNetObject.scales;
    }
    if (hasValue(dotNetObject.size)) {
        jsTileInfoCreateOptions.size = dotNetObject.size;
    }
    if (hasValue(dotNetObject.spatialReference)) {
        jsTileInfoCreateOptions.spatialReference = sanitize(dotNetObject.spatialReference);
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsTileInfoCreateOptions);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsTileInfoCreateOptions;
    
    return jsTileInfoCreateOptions;
}


export async function buildDotNetTileInfoCreateOptionsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetTileInfoCreateOptions: any = {};
    
    if (hasValue(jsObject.numLODs)) {
        dotNetTileInfoCreateOptions.numLODs = jsObject.numLODs;
    }
    
    if (hasValue(jsObject.scales)) {
        dotNetTileInfoCreateOptions.scales = jsObject.scales;
    }
    
    if (hasValue(jsObject.size)) {
        dotNetTileInfoCreateOptions.size = jsObject.size;
    }
    
    if (hasValue(jsObject.spatialReference)) {
        dotNetTileInfoCreateOptions.spatialReference = removeCircularReferences(jsObject.spatialReference);
    }
    

    return dotNetTileInfoCreateOptions;
}

