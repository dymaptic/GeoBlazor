// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetDirectLineMeasurement3DViewModelMeasurementValue } from './directLineMeasurement3DViewModelMeasurementValue';

export async function buildJsDirectLineMeasurement3DViewModelMeasurementValueGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsDirectLineMeasurement3DViewModelMeasurementValue: any = {};

    if (hasValue(dotNetObject.state)) {
        jsDirectLineMeasurement3DViewModelMeasurementValue.state = dotNetObject.state;
    }
    if (hasValue(dotNetObject.text)) {
        jsDirectLineMeasurement3DViewModelMeasurementValue.text = dotNetObject.text;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsDirectLineMeasurement3DViewModelMeasurementValue);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsDirectLineMeasurement3DViewModelMeasurementValue;
    
    return jsDirectLineMeasurement3DViewModelMeasurementValue;
}


export async function buildDotNetDirectLineMeasurement3DViewModelMeasurementValueGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetDirectLineMeasurement3DViewModelMeasurementValue: any = {};
    
    if (hasValue(jsObject.state)) {
        dotNetDirectLineMeasurement3DViewModelMeasurementValue.state = jsObject.state;
    }
    
    if (hasValue(jsObject.text)) {
        dotNetDirectLineMeasurement3DViewModelMeasurementValue.text = jsObject.text;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetDirectLineMeasurement3DViewModelMeasurementValue.id = geoBlazorId;
    }

    return dotNetDirectLineMeasurement3DViewModelMeasurementValue;
}

