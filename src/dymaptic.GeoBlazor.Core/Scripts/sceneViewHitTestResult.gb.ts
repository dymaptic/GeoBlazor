// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetSceneViewHitTestResult } from './sceneViewHitTestResult';

export async function buildJsSceneViewHitTestResultGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsSceneViewHitTestResult: any = {};
    if (hasValue(dotNetObject.ground)) {
        let { buildJsHitTestResultGround } = await import('./hitTestResultGround');
        jsSceneViewHitTestResult.ground = await buildJsHitTestResultGround(dotNetObject.ground, layerId, viewId) as any;
    }
    if (hasValue(dotNetObject.screenPoint)) {
        let { buildJsISceneViewHitTestResultScreenPoint } = await import('./iSceneViewHitTestResultScreenPoint');
        jsSceneViewHitTestResult.screenPoint = await buildJsISceneViewHitTestResultScreenPoint(dotNetObject.screenPoint, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.results) && dotNetObject.results.length > 0) {
        jsSceneViewHitTestResult.results = dotNetObject.results;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsSceneViewHitTestResult);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsSceneViewHitTestResult;
    
    return jsSceneViewHitTestResult;
}


export async function buildDotNetSceneViewHitTestResultGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSceneViewHitTestResult: any = {};
    
    if (hasValue(jsObject.ground)) {
        let { buildDotNetHitTestResultGround } = await import('./hitTestResultGround');
        dotNetSceneViewHitTestResult.ground = await buildDotNetHitTestResultGround(jsObject.ground, layerId, viewId);
    }
    
    if (hasValue(jsObject.screenPoint)) {
        let { buildDotNetISceneViewHitTestResultScreenPoint } = await import('./iSceneViewHitTestResultScreenPoint');
        dotNetSceneViewHitTestResult.screenPoint = await buildDotNetISceneViewHitTestResultScreenPoint(jsObject.screenPoint, layerId, viewId);
    }
    
    if (hasValue(jsObject.results)) {
        dotNetSceneViewHitTestResult.results = jsObject.results;
    }
    

    return dotNetSceneViewHitTestResult;
}

