// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetBaseTileLayerLayerviewCreateEvent } from './baseTileLayerLayerviewCreateEvent';

export async function buildJsBaseTileLayerLayerviewCreateEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsBaseTileLayerLayerviewCreateEvent: any = {};
    if (hasValue(viewId)) {
        jsBaseTileLayerLayerviewCreateEvent.view = arcGisObjectRefs[viewId!];
    }
    if (hasValue(dotNetObject.layerView)) {
        let { buildJsLayerView } = await import('./layerView');
        jsBaseTileLayerLayerviewCreateEvent.layerView = await buildJsLayerView(dotNetObject.layerView, layerId, viewId) as any;
    }

    
    let jsObjectRef = DotNet.createJSObjectReference(jsBaseTileLayerLayerviewCreateEvent);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsBaseTileLayerLayerviewCreateEvent;
    
    return jsBaseTileLayerLayerviewCreateEvent;
}


export async function buildDotNetBaseTileLayerLayerviewCreateEventGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetBaseTileLayerLayerviewCreateEvent: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
    if (hasValue(jsObject.layerView)) {
        let { buildDotNetLayerView } = await import('./layerView');
        dotNetBaseTileLayerLayerviewCreateEvent.layerView = await buildDotNetLayerView(jsObject.layerView);
    }

    return dotNetBaseTileLayerLayerviewCreateEvent;
}

