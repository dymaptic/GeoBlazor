// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetHandleOwner } from './handleOwner';

export async function buildJsHandleOwnerGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsHandleOwner: any = {};
    if (hasValue(dotNetObject.handles)) {
        let { buildJsHandles } = await import('./handles');
        jsHandleOwner.handles = await buildJsHandles(dotNetObject.handles, layerId, viewId) as any;
    }

    
    let jsObjectRef = DotNet.createJSObjectReference(jsHandleOwner);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsHandleOwner;
    
    return jsHandleOwner;
}


export async function buildDotNetHandleOwnerGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetHandleOwner: any = {};
    
    if (hasValue(jsObject.handles)) {
        let { buildDotNetHandles } = await import('./handles');
        dotNetHandleOwner.handles = await buildDotNetHandles(jsObject.handles, layerId, viewId);
    }
    

    return dotNetHandleOwner;
}

