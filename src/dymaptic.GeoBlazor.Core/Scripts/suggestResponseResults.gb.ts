// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetSuggestResponseResults } from './suggestResponseResults';

export async function buildJsSuggestResponseResultsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsSuggestResponseResults: any = {};
    if (hasValue(dotNetObject.source)) {
        let { buildJsSearchSource } = await import('./searchSource');
        jsSuggestResponseResults.source = await buildJsSearchSource(dotNetObject.source, viewId) as any;
    }

    if (hasValue(dotNetObject.results) && dotNetObject.results.length > 0) {
        jsSuggestResponseResults.results = dotNetObject.results;
    }
    if (hasValue(dotNetObject.sourceIndex)) {
        jsSuggestResponseResults.sourceIndex = dotNetObject.sourceIndex;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsSuggestResponseResults);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsSuggestResponseResults;
    
    return jsSuggestResponseResults;
}


export async function buildDotNetSuggestResponseResultsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSuggestResponseResults: any = {};
    
    if (hasValue(jsObject.source)) {
        let { buildDotNetSearchSource } = await import('./searchSource');
        dotNetSuggestResponseResults.source = await buildDotNetSearchSource(jsObject.source);
    }
    
    if (hasValue(jsObject.results)) {
        dotNetSuggestResponseResults.results = removeCircularReferences(jsObject.results);
    }
    
    if (hasValue(jsObject.sourceIndex)) {
        dotNetSuggestResponseResults.sourceIndex = jsObject.sourceIndex;
    }
    

    return dotNetSuggestResponseResults;
}

