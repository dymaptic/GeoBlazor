// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import BuildingSummaryStatistics from '@arcgis/core/layers/support/BuildingSummaryStatistics';
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetBuildingSummaryStatistics } from './buildingSummaryStatistics';

export async function buildJsBuildingSummaryStatisticsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let properties: any = {};
    if (hasValue(dotNetObject.fields)) {
        let { buildJsBuildingFieldStatistics } = await import('./buildingFieldStatistics');
        properties.fields = await Promise.all(dotNetObject.fields.map(async i => await buildJsBuildingFieldStatistics(i, layerId, viewId))) as any;
    }

    let jsBuildingSummaryStatistics = new BuildingSummaryStatistics(properties);
    
    let jsObjectRef = DotNet.createJSObjectReference(jsBuildingSummaryStatistics);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsBuildingSummaryStatistics;
    
    return jsBuildingSummaryStatistics;
}


export async function buildDotNetBuildingSummaryStatisticsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetBuildingSummaryStatistics: any = {};
    
    if (hasValue(jsObject.fields)) {
        let { buildDotNetBuildingFieldStatistics } = await import('./buildingFieldStatistics');
        dotNetBuildingSummaryStatistics.fields = await Promise.all(jsObject.fields.map(async i => await buildDotNetBuildingFieldStatistics(i, layerId, viewId)));
    }
    

    return dotNetBuildingSummaryStatistics;
}

