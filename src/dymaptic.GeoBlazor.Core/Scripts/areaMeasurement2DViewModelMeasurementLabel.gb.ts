// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';

export async function buildJsAreaMeasurement2DViewModelMeasurementLabelGenerated(dotNetObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsAreaMeasurement2DViewModelMeasurementLabel: any = {};

    if (hasValue(dotNetObject.area)) {
        jsAreaMeasurement2DViewModelMeasurementLabel.area = dotNetObject.area;
    }
    if (hasValue(dotNetObject.perimeter)) {
        jsAreaMeasurement2DViewModelMeasurementLabel.perimeter = dotNetObject.perimeter;
    }
    
    jsObjectRefs[dotNetObject.id] = jsAreaMeasurement2DViewModelMeasurementLabel;
    arcGisObjectRefs[dotNetObject.id] = jsAreaMeasurement2DViewModelMeasurementLabel;
    
    return jsAreaMeasurement2DViewModelMeasurementLabel;
}


export async function buildDotNetAreaMeasurement2DViewModelMeasurementLabelGenerated(jsObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetAreaMeasurement2DViewModelMeasurementLabel: any = {};
    
    if (hasValue(jsObject.area)) {
        dotNetAreaMeasurement2DViewModelMeasurementLabel.area = jsObject.area;
    }
    
    if (hasValue(jsObject.perimeter)) {
        dotNetAreaMeasurement2DViewModelMeasurementLabel.perimeter = jsObject.perimeter;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetAreaMeasurement2DViewModelMeasurementLabel.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        if (hasValue(dotNetRef)) {
            try {
                dotNetAreaMeasurement2DViewModelMeasurementLabel.id = await dotNetRef.invokeMethodAsync('GetId');
            } catch (e) {
                console.error('Error invoking GetId for AreaMeasurement2DViewModelMeasurementLabel', e);
            }
        }
    }
    if (hasValue(dotNetAreaMeasurement2DViewModelMeasurementLabel.id)) {
        jsObjectRefs[dotNetAreaMeasurement2DViewModelMeasurementLabel.id] ??= jsObject;
        arcGisObjectRefs[dotNetAreaMeasurement2DViewModelMeasurementLabel.id] ??= jsObject;
    }

    return dotNetAreaMeasurement2DViewModelMeasurementLabel;
}

