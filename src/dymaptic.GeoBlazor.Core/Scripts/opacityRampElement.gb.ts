// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';

export async function buildJsOpacityRampElementGenerated(dotNetObject: any): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsOpacityRampElement: any = {};
    if (hasValue(dotNetObject.infos) && dotNetObject.infos.length > 0) {
        let { buildJsOpacityRampStop } = await import('./opacityRampStop');
        jsOpacityRampElement.infos = await Promise.all(dotNetObject.infos.map(async i => await buildJsOpacityRampStop(i))) as any;
    }

    if (hasValue(dotNetObject.title)) {
        jsOpacityRampElement.title = dotNetObject.title;
    }
    
    jsObjectRefs[dotNetObject.id] = jsOpacityRampElement;
    arcGisObjectRefs[dotNetObject.id] = jsOpacityRampElement;
    
    return jsOpacityRampElement;
}


export async function buildDotNetOpacityRampElementGenerated(jsObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetOpacityRampElement: any = {};
    
    if (hasValue(jsObject.infos)) {
        let { buildDotNetOpacityRampStop } = await import('./opacityRampStop');
        dotNetOpacityRampElement.infos = await Promise.all(jsObject.infos.map(async i => await buildDotNetOpacityRampStop(i, viewId)));
    }
    
    if (hasValue(jsObject.title)) {
        dotNetOpacityRampElement.title = jsObject.title;
    }
    
    if (hasValue(jsObject.type)) {
        dotNetOpacityRampElement.type = jsObject.type;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetOpacityRampElement.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        dotNetOpacityRampElement.id = await dotNetRef.invokeMethodAsync('GetId');
    }
    if (hasValue(dotNetOpacityRampElement.id)) {
        jsObjectRefs[dotNetOpacityRampElement.id] ??= jsObject;
        arcGisObjectRefs[dotNetOpacityRampElement.id] ??= jsObject;
    }

    return dotNetOpacityRampElement;
}

