// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetPixelBlockAddDataPlaneDataStatistics } from './pixelBlockAddDataPlaneDataStatistics';

export async function buildJsPixelBlockAddDataPlaneDataStatisticsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsPixelBlockAddDataPlaneDataStatistics: any = {};

    if (hasValue(dotNetObject.maxValue)) {
        jsPixelBlockAddDataPlaneDataStatistics.maxValue = dotNetObject.maxValue;
    }
    if (hasValue(dotNetObject.minValue)) {
        jsPixelBlockAddDataPlaneDataStatistics.minValue = dotNetObject.minValue;
    }
    if (hasValue(dotNetObject.noDataValue)) {
        jsPixelBlockAddDataPlaneDataStatistics.noDataValue = dotNetObject.noDataValue;
    }
    
    jsObjectRefs[dotNetObject.id] = jsPixelBlockAddDataPlaneDataStatistics;
    arcGisObjectRefs[dotNetObject.id] = jsPixelBlockAddDataPlaneDataStatistics;
    
    return jsPixelBlockAddDataPlaneDataStatistics;
}


export async function buildDotNetPixelBlockAddDataPlaneDataStatisticsGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPixelBlockAddDataPlaneDataStatistics: any = {};
    
    if (hasValue(jsObject.maxValue)) {
        dotNetPixelBlockAddDataPlaneDataStatistics.maxValue = jsObject.maxValue;
    }
    
    if (hasValue(jsObject.minValue)) {
        dotNetPixelBlockAddDataPlaneDataStatistics.minValue = jsObject.minValue;
    }
    
    if (hasValue(jsObject.noDataValue)) {
        dotNetPixelBlockAddDataPlaneDataStatistics.noDataValue = jsObject.noDataValue;
    }
    

    return dotNetPixelBlockAddDataPlaneDataStatistics;
}

