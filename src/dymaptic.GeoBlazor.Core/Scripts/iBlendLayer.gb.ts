// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import BlendLayer = __esri.BlendLayer;
import { hasValue } from './arcGisJsInterop';
import {IPropertyWrapper} from './definitions';

export default class IBlendLayerGenerated implements IPropertyWrapper {
    public layer: BlendLayer;
    public geoBlazorId: string | null = null;
    public viewId: string | null = null;
    public layerId: string | null = null;

    constructor(layer: BlendLayer) {
        this.layer = layer;
    }
    
    // region methods
   
    unwrap() {
        return this.layer;
    }
    
    async load(options: AbortSignal): Promise<void> {
        await this.layer.load(options);
    }

    // region properties
    
    async getEffect(): Promise<any> {
        if (!hasValue(this.layer.effect)) {
            return null;
        }
        
        let { buildDotNetEffect } = await import('./effect');
        return buildDotNetEffect(this.layer.effect);
    }
    
    async setEffect(value: any): Promise<void> {
        let { buildJsEffect } = await import('./effect');
        this.layer.effect =  buildJsEffect(value);
    }
    
    getProperty(prop: string): any {
        return this.layer[prop];
    }
    
    setProperty(prop: string, value: any): void {
        this.layer[prop] = value;
    }
}

export function buildJsIBlendLayerGenerated(dotNetObject: any): any {
    let { id, dotNetComponentReference, ...sanitizedDotNetObject } = dotNetObject;
    return sanitizedDotNetObject;
}

export function buildDotNetIBlendLayerGenerated(jsObject: any): any {
    return jsObject;
}

