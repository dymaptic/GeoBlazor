// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetOpacityRampStop } from './opacityRampStop';

export async function buildJsOpacityRampStopGenerated(dotNetObject: any): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsOpacityRampStop: any = {};
    if (hasValue(dotNetObject.color)) {
        let { buildJsMapColor } = await import('./mapColor');
        jsOpacityRampStop.color = buildJsMapColor(dotNetObject.color) as any;
    }

    if (hasValue(dotNetObject.label)) {
        jsOpacityRampStop.label = dotNetObject.label;
    }
    if (hasValue(dotNetObject.value)) {
        jsOpacityRampStop.value = dotNetObject.value;
    }
    
    jsObjectRefs[dotNetObject.id] = jsOpacityRampStop;
    arcGisObjectRefs[dotNetObject.id] = jsOpacityRampStop;
    
    return jsOpacityRampStop;
}


export async function buildDotNetOpacityRampStopGenerated(jsObject: any,viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetOpacityRampStop: any = {};
    
    if (hasValue(jsObject.color)) {
        let { buildDotNetMapColor } = await import('./mapColor');
        dotNetOpacityRampStop.color = buildDotNetMapColor(jsObject.color);
    }
    
    if (hasValue(jsObject.label)) {
        dotNetOpacityRampStop.label = jsObject.label;
    }
    
    if (hasValue(jsObject.value)) {
        dotNetOpacityRampStop.value = jsObject.value;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetOpacityRampStop.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        dotNetOpacityRampStop.id = await dotNetRef.invokeMethodAsync('GetId');
    }
    if (hasValue(dotNetOpacityRampStop.id)) {
        jsObjectRefs[dotNetOpacityRampStop.id] ??= jsObject;
        arcGisObjectRefs[dotNetOpacityRampStop.id] ??= jsObject;
    }

    return dotNetOpacityRampStop;
}

