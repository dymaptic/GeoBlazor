// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { buildDotNetViewLayerviewDestroyEvent } from './viewLayerviewDestroyEvent';
import ViewLayerviewDestroyEvent = __esri.ViewLayerviewDestroyEvent;
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';

export async function buildJsViewLayerviewDestroyEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsViewLayerviewDestroyEvent: any = {}
    if (hasValue(dotNetObject.layer)) {
        let { buildJsLayer } = await import('./layer');
        jsViewLayerviewDestroyEvent.layer = await buildJsLayer(dotNetObject.layer, layerId, viewId) as any;
    }
    if (hasValue(dotNetObject.layerView)) {
        let { buildJsLayerView } = await import('./layerView');
        jsViewLayerviewDestroyEvent.layerView = await buildJsLayerView(dotNetObject.layerView, layerId, viewId) as any;
    }

    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsViewLayerviewDestroyEvent);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsViewLayerviewDestroyEvent;
    
    let dnInstantiatedObject = await buildDotNetViewLayerviewDestroyEvent(jsViewLayerviewDestroyEvent);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for ViewLayerviewDestroyEvent', e);
    }
    
    return jsViewLayerviewDestroyEvent;
}

export async function buildDotNetViewLayerviewDestroyEventGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetViewLayerviewDestroyEvent: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.layerView)) {
            let { buildDotNetLayerView } = await import('./layerView');
            dotNetViewLayerviewDestroyEvent.layerView = await buildDotNetLayerView(jsObject.layerView);
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetViewLayerviewDestroyEvent.id = k;
                break;
            }
        }
    }

    return dotNetViewLayerviewDestroyEvent;
}

