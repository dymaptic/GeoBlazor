// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetVisibleElementsColumnMenuItems } from './visibleElementsColumnMenuItems';

export async function buildJsVisibleElementsColumnMenuItemsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsVisibleElementsColumnMenuItems: any = {};

    if (hasValue(dotNetObject.sortAscending)) {
        jsVisibleElementsColumnMenuItems.sortAscending = dotNetObject.sortAscending;
    }
    if (hasValue(dotNetObject.sortDescending)) {
        jsVisibleElementsColumnMenuItems.sortDescending = dotNetObject.sortDescending;
    }
    
    jsObjectRefs[dotNetObject.id] = jsVisibleElementsColumnMenuItems;
    arcGisObjectRefs[dotNetObject.id] = jsVisibleElementsColumnMenuItems;
    
    return jsVisibleElementsColumnMenuItems;
}


export async function buildDotNetVisibleElementsColumnMenuItemsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetVisibleElementsColumnMenuItems: any = {};
    
    if (hasValue(jsObject.sortAscending)) {
        dotNetVisibleElementsColumnMenuItems.sortAscending = jsObject.sortAscending;
    }
    
    if (hasValue(jsObject.sortDescending)) {
        dotNetVisibleElementsColumnMenuItems.sortDescending = jsObject.sortDescending;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetVisibleElementsColumnMenuItems.id = geoBlazorId;
    }

    return dotNetVisibleElementsColumnMenuItems;
}

