// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetSearchSelectResultEvent } from './searchSelectResultEvent';

export async function buildJsSearchSelectResultEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsSearchSelectResultEvent: any = {};
    if (hasValue(dotNetObject.result)) {
        let { buildJsSearchResult } = await import('./searchResult');
        jsSearchSelectResultEvent.result = await buildJsSearchResult(dotNetObject.result, viewId) as any;
    }
    if (hasValue(dotNetObject.source)) {
        let { buildJsSearchSource } = await import('./searchSource');
        jsSearchSelectResultEvent.source = await buildJsSearchSource(dotNetObject.source, viewId) as any;
    }

    if (hasValue(dotNetObject.sourceIndex)) {
        jsSearchSelectResultEvent.sourceIndex = dotNetObject.sourceIndex;
    }
    
    jsObjectRefs[dotNetObject.id] = jsSearchSelectResultEvent;
    arcGisObjectRefs[dotNetObject.id] = jsSearchSelectResultEvent;
    
    return jsSearchSelectResultEvent;
}


export async function buildDotNetSearchSelectResultEventGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSearchSelectResultEvent: any = {};
    
    if (hasValue(jsObject.result)) {
        let { buildDotNetSearchResult } = await import('./searchResult');
        dotNetSearchSelectResultEvent.result = buildDotNetSearchResult(jsObject.result, layerId, viewId);
    }
    
    if (hasValue(jsObject.source)) {
        let { buildDotNetSearchSource } = await import('./searchSource');
        dotNetSearchSelectResultEvent.source = await buildDotNetSearchSource(jsObject.source, viewId);
    }
    
    if (hasValue(jsObject.sourceIndex)) {
        dotNetSearchSelectResultEvent.sourceIndex = jsObject.sourceIndex;
    }
    

    return dotNetSearchSelectResultEvent;
}

