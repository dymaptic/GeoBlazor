// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetFilterFunctionFilterName } from './filterFunctionFilterName';

export async function buildJsFilterFunctionFilterNameGenerated(dotNetObject: any): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsFilterFunctionFilterName: any = {};

    if (hasValue(dotNetObject.label)) {
        jsFilterFunctionFilterName.label = dotNetObject.label;
    }
    
    jsObjectRefs[dotNetObject.id] = jsFilterFunctionFilterName;
    arcGisObjectRefs[dotNetObject.id] = jsFilterFunctionFilterName;
    
    return jsFilterFunctionFilterName;
}


export async function buildDotNetFilterFunctionFilterNameGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFilterFunctionFilterName: any = {};
    
    if (hasValue(jsObject.label)) {
        dotNetFilterFunctionFilterName.label = jsObject.label;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetFilterFunctionFilterName.id = geoBlazorId;
    }

    return dotNetFilterFunctionFilterName;
}

