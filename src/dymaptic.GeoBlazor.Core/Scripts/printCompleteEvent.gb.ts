// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetPrintCompleteEvent } from './printCompleteEvent';

export async function buildJsPrintCompleteEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsPrintCompleteEvent: any = {};
    if (hasValue(dotNetObject.results)) {
        let { buildJsPrintCompleteEventResults } = await import('./printCompleteEventResults');
        jsPrintCompleteEvent.results = await buildJsPrintCompleteEventResults(dotNetObject.results, layerId, viewId) as any;
    }

    
    let jsObjectRef = DotNet.createJSObjectReference(jsPrintCompleteEvent);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsPrintCompleteEvent;
    
    return jsPrintCompleteEvent;
}


export async function buildDotNetPrintCompleteEventGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPrintCompleteEvent: any = {};
    
    if (hasValue(jsObject.results)) {
        let { buildDotNetPrintCompleteEventResults } = await import('./printCompleteEventResults');
        dotNetPrintCompleteEvent.results = await buildDotNetPrintCompleteEventResults(jsObject.results, layerId, viewId);
    }
    

    return dotNetPrintCompleteEvent;
}

