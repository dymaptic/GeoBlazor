// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetSearchSourceFilter } from './searchSourceFilter';

export async function buildJsSearchSourceFilterGenerated(dotNetObject: any): Promise<any> {
    let jsSearchSourceFilter: any = {};
    if (hasValue(dotNetObject.geometry)) {
        let { buildJsGeometry } = await import('./geometry');
        jsSearchSourceFilter.geometry = buildJsGeometry(dotNetObject.geometry) as any;
    }

    if (hasValue(dotNetObject.where)) {
        jsSearchSourceFilter.where = dotNetObject.where;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsSearchSourceFilter);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsSearchSourceFilter;
    
    return jsSearchSourceFilter;
}


export async function buildDotNetSearchSourceFilterGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSearchSourceFilter: any = {};
    
    if (hasValue(jsObject.geometry)) {
        let { buildDotNetGeometry } = await import('./geometry');
        dotNetSearchSourceFilter.geometry = buildDotNetGeometry(jsObject.geometry);
    }
    
    if (hasValue(jsObject.where)) {
        dotNetSearchSourceFilter.where = jsObject.where;
    }
    

    return dotNetSearchSourceFilter;
}

