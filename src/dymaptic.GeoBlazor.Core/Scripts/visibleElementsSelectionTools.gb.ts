// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetVisibleElementsSelectionTools } from './visibleElementsSelectionTools';

export async function buildJsVisibleElementsSelectionToolsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsVisibleElementsSelectionTools: any = {};

    
    let jsObjectRef = DotNet.createJSObjectReference(jsVisibleElementsSelectionTools);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsVisibleElementsSelectionTools;
    
    return jsVisibleElementsSelectionTools;
}


export async function buildDotNetVisibleElementsSelectionToolsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetVisibleElementsSelectionTools: any = {};
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetVisibleElementsSelectionTools.id = geoBlazorId;
    }

    return dotNetVisibleElementsSelectionTools;
}

