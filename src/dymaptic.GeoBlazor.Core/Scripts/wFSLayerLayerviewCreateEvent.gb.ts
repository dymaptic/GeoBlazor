// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetWFSLayerLayerviewCreateEvent } from './wFSLayerLayerviewCreateEvent';

export async function buildJsWFSLayerLayerviewCreateEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsWFSLayerLayerviewCreateEvent: any = {}
    if (hasValue(dotNetObject.layerView)) {
        let { buildJsLayerView } = await import('./layerView');
        jsWFSLayerLayerviewCreateEvent.layerView = await buildJsLayerView(dotNetObject.layerView, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.view)) {
        jsWFSLayerLayerviewCreateEvent.view = dotNetObject.view;
    }
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsWFSLayerLayerviewCreateEvent);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsWFSLayerLayerviewCreateEvent;
    
    let dnInstantiatedObject = await buildDotNetWFSLayerLayerviewCreateEvent(jsWFSLayerLayerviewCreateEvent);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for WFSLayerLayerviewCreateEvent', e);
    }
    
    return jsWFSLayerLayerviewCreateEvent;
}

export async function buildDotNetWFSLayerLayerviewCreateEventGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetWFSLayerLayerviewCreateEvent: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.layerView)) {
            let { buildDotNetLayerView } = await import('./layerView');
            dotNetWFSLayerLayerviewCreateEvent.layerView = await buildDotNetLayerView(jsObject.layerView);
        }
        if (hasValue(jsObject.view)) {
            dotNetWFSLayerLayerviewCreateEvent.view = jsObject.view;
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetWFSLayerLayerviewCreateEvent.id = k;
                break;
            }
        }
    }

    return dotNetWFSLayerLayerviewCreateEvent;
}

