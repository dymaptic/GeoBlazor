// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetRelationshipLabels } from './relationshipLabels';

export async function buildJsRelationshipLabelsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsRelationshipLabels: any = {};

    if (hasValue(dotNetObject.bottom)) {
        jsRelationshipLabels.bottom = dotNetObject.bottom;
    }
    if (hasValue(dotNetObject.left)) {
        jsRelationshipLabels.left = dotNetObject.left;
    }
    if (hasValue(dotNetObject.right)) {
        jsRelationshipLabels.right = dotNetObject.right;
    }
    if (hasValue(dotNetObject.top)) {
        jsRelationshipLabels.top = dotNetObject.top;
    }
    
    jsObjectRefs[dotNetObject.id] = jsRelationshipLabels;
    arcGisObjectRefs[dotNetObject.id] = jsRelationshipLabels;
    
    return jsRelationshipLabels;
}


export async function buildDotNetRelationshipLabelsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetRelationshipLabels: any = {};
    
    if (hasValue(jsObject.bottom)) {
        dotNetRelationshipLabels.bottom = jsObject.bottom;
    }
    
    if (hasValue(jsObject.left)) {
        dotNetRelationshipLabels.left = jsObject.left;
    }
    
    if (hasValue(jsObject.right)) {
        dotNetRelationshipLabels.right = jsObject.right;
    }
    
    if (hasValue(jsObject.top)) {
        dotNetRelationshipLabels.top = jsObject.top;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetRelationshipLabels.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        dotNetRelationshipLabels.id = await dotNetRef.invokeMethodAsync('GetId');
    }
    if (hasValue(dotNetRelationshipLabels.id)) {
        jsObjectRefs[dotNetRelationshipLabels.id] ??= jsObject;
        arcGisObjectRefs[dotNetRelationshipLabels.id] ??= jsObject;
    }

    return dotNetRelationshipLabels;
}

