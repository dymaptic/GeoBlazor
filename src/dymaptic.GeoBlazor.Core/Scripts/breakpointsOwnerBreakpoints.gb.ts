// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetBreakpointsOwnerBreakpoints } from './breakpointsOwnerBreakpoints';

export async function buildJsBreakpointsOwnerBreakpointsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsBreakpointsOwnerBreakpoints: any = {};

    if (hasValue(dotNetObject.large)) {
        jsBreakpointsOwnerBreakpoints.large = dotNetObject.large;
    }
    if (hasValue(dotNetObject.medium)) {
        jsBreakpointsOwnerBreakpoints.medium = dotNetObject.medium;
    }
    if (hasValue(dotNetObject.small)) {
        jsBreakpointsOwnerBreakpoints.small = dotNetObject.small;
    }
    if (hasValue(dotNetObject.xlarge)) {
        jsBreakpointsOwnerBreakpoints.xlarge = dotNetObject.xlarge;
    }
    if (hasValue(dotNetObject.xsmall)) {
        jsBreakpointsOwnerBreakpoints.xsmall = dotNetObject.xsmall;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsBreakpointsOwnerBreakpoints);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsBreakpointsOwnerBreakpoints;
    
    return jsBreakpointsOwnerBreakpoints;
}


export async function buildDotNetBreakpointsOwnerBreakpointsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetBreakpointsOwnerBreakpoints: any = {};
    
    if (hasValue(jsObject.large)) {
        dotNetBreakpointsOwnerBreakpoints.large = jsObject.large;
    }
    
    if (hasValue(jsObject.medium)) {
        dotNetBreakpointsOwnerBreakpoints.medium = jsObject.medium;
    }
    
    if (hasValue(jsObject.small)) {
        dotNetBreakpointsOwnerBreakpoints.small = jsObject.small;
    }
    
    if (hasValue(jsObject.xlarge)) {
        dotNetBreakpointsOwnerBreakpoints.xlarge = jsObject.xlarge;
    }
    
    if (hasValue(jsObject.xsmall)) {
        dotNetBreakpointsOwnerBreakpoints.xsmall = jsObject.xsmall;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetBreakpointsOwnerBreakpoints.id = geoBlazorId;
    }

    return dotNetBreakpointsOwnerBreakpoints;
}

