// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import ImageBoundaryResult from '@arcgis/core/rest/support/ImageBoundaryResult';
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetImageBoundaryResult } from './imageBoundaryResult';

export async function buildJsImageBoundaryResultGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let properties: any = {};
    if (hasValue(dotNetObject.geometry)) {
        let { buildJsGeometry } = await import('./geometry');
        properties.geometry = buildJsGeometry(dotNetObject.geometry) as any;
    }

    if (hasValue(dotNetObject.area)) {
        properties.area = dotNetObject.area;
    }
    let jsImageBoundaryResult = new ImageBoundaryResult(properties);
    
    let jsObjectRef = DotNet.createJSObjectReference(jsImageBoundaryResult);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsImageBoundaryResult;
    
    return jsImageBoundaryResult;
}


export async function buildDotNetImageBoundaryResultGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let geoBlazorId = lookupGeoBlazorId(jsObject);
    
    let jsComponentRef: any;
    if (hasValue(geoBlazorId)) {
        jsComponentRef = jsObjectRefs[geoBlazorId!];
    } else {
        let { buildJsImageBoundaryResult } = await import('./imageBoundaryResult');
        jsComponentRef = await buildJsImageBoundaryResult(jsObject, layerId, viewId);
    }
    
    let dotNetImageBoundaryResult: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsComponentRef)
    };
    if (hasValue(jsObject.geometry)) {
        let { buildDotNetGeometry } = await import('./geometry');
        dotNetImageBoundaryResult.geometry = buildDotNetGeometry(jsObject.geometry);
    }
    if (hasValue(jsObject.area)) {
        dotNetImageBoundaryResult.area = jsObject.area;
    }

    return dotNetImageBoundaryResult;
}

