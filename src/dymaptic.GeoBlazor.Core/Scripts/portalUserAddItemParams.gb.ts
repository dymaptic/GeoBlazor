// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetPortalUserAddItemParams } from './portalUserAddItemParams';

export async function buildJsPortalUserAddItemParamsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsPortalUserAddItemParams: any = {};
    if (hasValue(dotNetObject.item)) {
        let { buildJsPortalItem } = await import('./portalItem');
        jsPortalUserAddItemParams.item = await buildJsPortalItem(dotNetObject.item, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.data)) {
        jsPortalUserAddItemParams.data = dotNetObject.data;
    }
    if (hasValue(dotNetObject.folder)) {
        jsPortalUserAddItemParams.folder = dotNetObject.folder;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsPortalUserAddItemParams);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsPortalUserAddItemParams;
    
    let dnInstantiatedObject = await buildDotNetPortalUserAddItemParams(jsPortalUserAddItemParams);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for PortalUserAddItemParams', e);
    }
    
    return jsPortalUserAddItemParams;
}

export async function buildDotNetPortalUserAddItemParamsGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPortalUserAddItemParams: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.item)) {
            let { buildDotNetPortalItem } = await import('./portalItem');
            dotNetPortalUserAddItemParams.item = await buildDotNetPortalItem(jsObject.item);
        }
    if (hasValue(jsObject.data)) {
        dotNetPortalUserAddItemParams.data = jsObject.data;
    }
    if (hasValue(jsObject.folder)) {
        dotNetPortalUserAddItemParams.folder = jsObject.folder;
    }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetPortalUserAddItemParams.id = k;
                break;
            }
        }
    }

    return dotNetPortalUserAddItemParams;
}

