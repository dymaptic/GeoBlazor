// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { buildDotNetRouteStopSymbols } from './routeStopSymbols';
import RouteStopSymbols from '@arcgis/core/layers/support/RouteStopSymbols';
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';

export async function buildJsRouteStopSymbolsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsRouteStopSymbols = new RouteStopSymbols();

    if (hasValue(dotNetObject.break)) {
        jsRouteStopSymbols.break = dotNetObject.break;
    }
    if (hasValue(dotNetObject.first)) {
        jsRouteStopSymbols.first = dotNetObject.first;
    }
    if (hasValue(dotNetObject.last)) {
        jsRouteStopSymbols.last = dotNetObject.last;
    }
    if (hasValue(dotNetObject.middle)) {
        jsRouteStopSymbols.middle = dotNetObject.middle;
    }
    if (hasValue(dotNetObject.unlocated)) {
        jsRouteStopSymbols.unlocated = dotNetObject.unlocated;
    }
    if (hasValue(dotNetObject.waypoint)) {
        jsRouteStopSymbols.waypoint = dotNetObject.waypoint;
    }
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsRouteStopSymbols);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsRouteStopSymbols;
    
    let dnInstantiatedObject = await buildDotNetRouteStopSymbols(jsRouteStopSymbols);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for RouteStopSymbols', e);
    }
    
    return jsRouteStopSymbols;
}

export async function buildDotNetRouteStopSymbolsGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetRouteStopSymbols: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.break)) {
            dotNetRouteStopSymbols.break = jsObject.break;
        }
        if (hasValue(jsObject.first)) {
            dotNetRouteStopSymbols.first = jsObject.first;
        }
        if (hasValue(jsObject.last)) {
            dotNetRouteStopSymbols.last = jsObject.last;
        }
        if (hasValue(jsObject.middle)) {
            dotNetRouteStopSymbols.middle = jsObject.middle;
        }
        if (hasValue(jsObject.unlocated)) {
            dotNetRouteStopSymbols.unlocated = jsObject.unlocated;
        }
        if (hasValue(jsObject.waypoint)) {
            dotNetRouteStopSymbols.waypoint = jsObject.waypoint;
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetRouteStopSymbols.id = k;
                break;
            }
        }
    }

    return dotNetRouteStopSymbols;
}

