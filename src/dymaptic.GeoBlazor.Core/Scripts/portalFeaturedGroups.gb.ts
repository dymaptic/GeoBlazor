// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file


import PortalFeaturedGroups = __esri.PortalFeaturedGroups;
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';
import {IPropertyWrapper} from './definitions';

export default class PortalFeaturedGroupsGenerated implements IPropertyWrapper {
    public component: PortalFeaturedGroups;
    public geoBlazorId: string | null = null;
    public viewId: string | null = null;
    public layerId: string | null = null;

    constructor(component: PortalFeaturedGroups) {
        this.component = component;
        // set all properties from component
        for (let prop in component) {
            if (component.hasOwnProperty(prop)) {
                this[prop] = component[prop];
            }
        }
    }
    
    // region methods
   
    unwrap() {
        return this.component;
    }
    
    // region properties
    
    getProperty(prop: string): any {
        return this.component[prop];
    }
    
    setProperty(prop: string, value: any): void {
        this.component[prop] = value;
    }
}

export async function buildJsPortalFeaturedGroupsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsPortalFeaturedGroups: any = {}

    if (hasValue(dotNetObject.owner)) {
        jsPortalFeaturedGroups.owner = dotNetObject.owner;
    }
    if (hasValue(dotNetObject.title)) {
        jsPortalFeaturedGroups.title = dotNetObject.title;
    }
    let { default: PortalFeaturedGroupsWrapper } = await import('./portalFeaturedGroups');
    let portalFeaturedGroupsWrapper = new PortalFeaturedGroupsWrapper(jsPortalFeaturedGroups);
    portalFeaturedGroupsWrapper.geoBlazorId = dotNetObject.id;
    portalFeaturedGroupsWrapper.viewId = viewId;
    portalFeaturedGroupsWrapper.layerId = layerId;
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(portalFeaturedGroupsWrapper);
    await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef);
    jsObjectRefs[dotNetObject.id] = portalFeaturedGroupsWrapper;
    arcGisObjectRefs[dotNetObject.id] = jsPortalFeaturedGroups;
    
    return jsPortalFeaturedGroups;
}

export async function buildDotNetPortalFeaturedGroupsGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPortalFeaturedGroups: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        dotNetPortalFeaturedGroups.owner = jsObject.owner;
        dotNetPortalFeaturedGroups.title = jsObject.title;

    return dotNetPortalFeaturedGroups;
}

