// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import MapImage from '@arcgis/core/layers/support/MapImage';
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetMapImage } from './mapImage';

export async function buildJsMapImageGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let properties: any = {};
    if (hasValue(dotNetObject.extent)) {
        let { buildJsExtent } = await import('./extent');
        properties.extent = buildJsExtent(dotNetObject.extent) as any;
    }

    if (hasValue(dotNetObject.height)) {
        properties.height = dotNetObject.height;
    }
    if (hasValue(dotNetObject.href)) {
        properties.href = dotNetObject.href;
    }
    if (hasValue(dotNetObject.opacity)) {
        properties.opacity = dotNetObject.opacity;
    }
    if (hasValue(dotNetObject.scale)) {
        properties.scale = dotNetObject.scale;
    }
    if (hasValue(dotNetObject.visible)) {
        properties.visible = dotNetObject.visible;
    }
    if (hasValue(dotNetObject.width)) {
        properties.width = dotNetObject.width;
    }
    let jsMapImage = new MapImage(properties);
    
    let jsObjectRef = DotNet.createJSObjectReference(jsMapImage);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsMapImage;
    
    return jsMapImage;
}


export async function buildDotNetMapImageGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetMapImage: any = {};
    
    if (hasValue(jsObject.extent)) {
        let { buildDotNetExtent } = await import('./extent');
        dotNetMapImage.extent = buildDotNetExtent(jsObject.extent);
    }
    
    if (hasValue(jsObject.height)) {
        dotNetMapImage.height = jsObject.height;
    }
    
    if (hasValue(jsObject.href)) {
        dotNetMapImage.href = jsObject.href;
    }
    
    if (hasValue(jsObject.opacity)) {
        dotNetMapImage.opacity = jsObject.opacity;
    }
    
    if (hasValue(jsObject.scale)) {
        dotNetMapImage.scale = jsObject.scale;
    }
    
    if (hasValue(jsObject.visible)) {
        dotNetMapImage.visible = jsObject.visible;
    }
    
    if (hasValue(jsObject.width)) {
        dotNetMapImage.width = jsObject.width;
    }
    

    return dotNetMapImage;
}

