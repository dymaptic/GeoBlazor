// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetColorRampElement } from './colorRampElement';

export async function buildJsColorRampElementGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsColorRampElement: any = {};
    if (hasValue(dotNetObject.infos) && dotNetObject.infos.length > 0) {
        let { buildJsColorRampStop } = await import('./colorRampStop');
        jsColorRampElement.infos = await Promise.all(dotNetObject.infos.map(async i => await buildJsColorRampStop(i, layerId, viewId))) as any;
    }

    if (hasValue(dotNetObject.title)) {
        jsColorRampElement.title = dotNetObject.title;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsColorRampElement);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsColorRampElement;
    
    return jsColorRampElement;
}


export async function buildDotNetColorRampElementGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetColorRampElement: any = {};
    
    if (hasValue(jsObject.infos)) {
        let { buildDotNetColorRampStop } = await import('./colorRampStop');
        dotNetColorRampElement.infos = await Promise.all(jsObject.infos.map(async i => await buildDotNetColorRampStop(i, layerId, viewId)));
    }
    
    if (hasValue(jsObject.title)) {
        dotNetColorRampElement.title = jsObject.title;
    }
    
    if (hasValue(jsObject.type)) {
        dotNetColorRampElement.type = jsObject.type;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetColorRampElement.id = geoBlazorId;
    }

    return dotNetColorRampElement;
}

