// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { buildDotNetMediaElementBase } from './mediaElementBase';
import MediaElementBase from '@arcgis/core/layers/support/MediaElementBase';
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';

export async function buildJsMediaElementBaseGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsMediaElementBase = new MediaElementBase();

    if (hasValue(dotNetObject.georeference)) {
        jsMediaElementBase.georeference = dotNetObject.georeference;
    }
    if (hasValue(dotNetObject.opacity)) {
        jsMediaElementBase.opacity = dotNetObject.opacity;
    }
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jsMediaElementBase);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsMediaElementBase;
    
    let dnInstantiatedObject = await buildDotNetMediaElementBase(jsMediaElementBase);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for MediaElementBase', e);
    }
    
    return jsMediaElementBase;
}

export async function buildDotNetMediaElementBaseGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetMediaElementBase: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.georeference)) {
            dotNetMediaElementBase.georeference = jsObject.georeference;
        }
        if (hasValue(jsObject.opacity)) {
            dotNetMediaElementBase.opacity = jsObject.opacity;
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetMediaElementBase.id = k;
                break;
            }
        }
    }

    return dotNetMediaElementBase;
}

