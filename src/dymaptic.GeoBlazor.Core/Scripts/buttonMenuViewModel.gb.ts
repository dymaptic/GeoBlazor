// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import ButtonMenuViewModel from '@arcgis/core/widgets/FeatureTable/Grid/support/ButtonMenuViewModel';
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetButtonMenuViewModel } from './buttonMenuViewModel';

export async function buildJsButtonMenuViewModelGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let properties: any = {};
    if (hasValue(dotNetObject.items) && dotNetObject.items.length > 0) {
        let { buildJsButtonMenuItem } = await import('./buttonMenuItem');
        properties.items = await Promise.all(dotNetObject.items.map(async i => await buildJsButtonMenuItem(i, layerId, viewId))) as any;
    }

    if (hasValue(dotNetObject.open)) {
        properties.open = dotNetObject.open;
    }
    let jsButtonMenuViewModel = new ButtonMenuViewModel(properties);
    
    let jsObjectRef = DotNet.createJSObjectReference(jsButtonMenuViewModel);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsButtonMenuViewModel;
    
    return jsButtonMenuViewModel;
}


export async function buildDotNetButtonMenuViewModelGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetButtonMenuViewModel: any = {};
    
    if (hasValue(jsObject.items)) {
        let { buildDotNetButtonMenuItem } = await import('./buttonMenuItem');
        dotNetButtonMenuViewModel.items = await Promise.all(jsObject.items.map(async i => await buildDotNetButtonMenuItem(i, layerId, viewId)));
    }
    
    if (hasValue(jsObject.open)) {
        dotNetButtonMenuViewModel.open = jsObject.open;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetButtonMenuViewModel.id = geoBlazorId;
    }

    return dotNetButtonMenuViewModel;
}

