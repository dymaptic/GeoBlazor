// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetLegendStyle } from './legendStyle';

export async function buildJsLegendStyleGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsLegendStyle: any = {};

    if (hasValue(dotNetObject.layout)) {
        jsLegendStyle.layout = dotNetObject.layout;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsLegendStyle);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsLegendStyle;
    
    return jsLegendStyle;
}


export async function buildDotNetLegendStyleGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetLegendStyle: any = {};
    
    if (hasValue(jsObject.layout)) {
        dotNetLegendStyle.layout = removeCircularReferences(jsObject.layout);
    }
    
    if (hasValue(jsObject.type)) {
        dotNetLegendStyle.type = removeCircularReferences(jsObject.type);
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetLegendStyle.id = geoBlazorId;
    }

    return dotNetLegendStyle;
}

