// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';

export async function buildJsBookmarkOptionsScreenshotSettingsAreaGenerated(dotNetObject: any): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsBookmarkOptionsScreenshotSettingsArea: any = {};

    if (hasValue(dotNetObject.height)) {
        jsBookmarkOptionsScreenshotSettingsArea.height = dotNetObject.height;
    }
    if (hasValue(dotNetObject.width)) {
        jsBookmarkOptionsScreenshotSettingsArea.width = dotNetObject.width;
    }
    if (hasValue(dotNetObject.x)) {
        jsBookmarkOptionsScreenshotSettingsArea.x = dotNetObject.x;
    }
    if (hasValue(dotNetObject.y)) {
        jsBookmarkOptionsScreenshotSettingsArea.y = dotNetObject.y;
    }
    
    jsObjectRefs[dotNetObject.id] = jsBookmarkOptionsScreenshotSettingsArea;
    arcGisObjectRefs[dotNetObject.id] = jsBookmarkOptionsScreenshotSettingsArea;
    
    return jsBookmarkOptionsScreenshotSettingsArea;
}


export async function buildDotNetBookmarkOptionsScreenshotSettingsAreaGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetBookmarkOptionsScreenshotSettingsArea: any = {};
    
    if (hasValue(jsObject.height)) {
        dotNetBookmarkOptionsScreenshotSettingsArea.height = jsObject.height;
    }
    
    if (hasValue(jsObject.width)) {
        dotNetBookmarkOptionsScreenshotSettingsArea.width = jsObject.width;
    }
    
    if (hasValue(jsObject.x)) {
        dotNetBookmarkOptionsScreenshotSettingsArea.x = jsObject.x;
    }
    
    if (hasValue(jsObject.y)) {
        dotNetBookmarkOptionsScreenshotSettingsArea.y = jsObject.y;
    }
    

    return dotNetBookmarkOptionsScreenshotSettingsArea;
}

