// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetPrintSubmitEventResults } from './printSubmitEventResults';

export async function buildJsPrintSubmitEventResultsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsPrintSubmitEventResults: any = {};
    if (hasValue(dotNetObject.link) && dotNetObject.link.length > 0) {
        let { buildJsFileLink } = await import('./fileLink');
        jsPrintSubmitEventResults.link = await Promise.all(dotNetObject.link.map(async i => await buildJsFileLink(i, layerId, viewId))) as any;
    }

    
    let jsObjectRef = DotNet.createJSObjectReference(jsPrintSubmitEventResults);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsPrintSubmitEventResults;
    
    return jsPrintSubmitEventResults;
}


export async function buildDotNetPrintSubmitEventResultsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPrintSubmitEventResults: any = {};
    
    if (hasValue(jsObject.link)) {
        let { buildDotNetFileLink } = await import('./fileLink');
        dotNetPrintSubmitEventResults.link = await Promise.all(jsObject.link.map(async i => await buildDotNetFileLink(i, layerId, viewId)));
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetPrintSubmitEventResults.id = geoBlazorId;
    }

    return dotNetPrintSubmitEventResults;
}

