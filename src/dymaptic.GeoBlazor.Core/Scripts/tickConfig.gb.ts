// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId, removeCircularReferences } from './arcGisJsInterop';

export async function buildDotNetTickConfigGenerated(jsObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetTickConfig: any = {};
    
    if (hasValue(jsObject.labelsVisible)) {
        dotNetTickConfig.labelsVisible = jsObject.labelsVisible;
    }
    
    if (hasValue(jsObject.mode)) {
        dotNetTickConfig.mode = removeCircularReferences(jsObject.mode);
    }
    
    if (hasValue(jsObject.values)) {
        dotNetTickConfig.values = jsObject.values;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetTickConfig.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        dotNetTickConfig.id = await dotNetRef.invokeMethodAsync('GetId');
    }
    if (hasValue(dotNetTickConfig.id)) {
        jsObjectRefs[dotNetTickConfig.id] ??= jsObject;
        arcGisObjectRefs[dotNetTickConfig.id] ??= jsObject;
    }

    return dotNetTickConfig;
}

