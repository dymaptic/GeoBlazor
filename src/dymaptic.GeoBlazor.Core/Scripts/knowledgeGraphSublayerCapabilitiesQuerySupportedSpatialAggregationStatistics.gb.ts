// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics } from './knowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics';

export async function buildJsKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatisticsGenerated(dotNetObject: any): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics: any = {};

    if (hasValue(dotNetObject.centroid)) {
        jsKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics.centroid = dotNetObject.centroid;
    }
    if (hasValue(dotNetObject.convexHull)) {
        jsKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics.convexHull = dotNetObject.convexHull;
    }
    if (hasValue(dotNetObject.envelope)) {
        jsKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics.envelope = dotNetObject.envelope;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics;
    
    return jsKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics;
}


export async function buildDotNetKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatisticsGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics: any = {};
    
    if (hasValue(jsObject.centroid)) {
        dotNetKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics.centroid = jsObject.centroid;
    }
    
    if (hasValue(jsObject.convexHull)) {
        dotNetKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics.convexHull = jsObject.convexHull;
    }
    
    if (hasValue(jsObject.envelope)) {
        dotNetKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics.envelope = jsObject.envelope;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics.id = geoBlazorId;
    }

    return dotNetKnowledgeGraphSublayerCapabilitiesQuerySupportedSpatialAggregationStatistics;
}

