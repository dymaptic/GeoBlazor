import { buildDotNetPredominantCategoriesPredominantCategoriesParams } from './predominantCategoriesPredominantCategoriesParams';
// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file
import predominantCategoriesPredominantCategoriesParams = __esri.predominantCategoriesPredominantCategoriesParams;
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';
export async function buildJsPredominantCategoriesPredominantCategoriesParamsGenerated(dotNetObject: any): Promise<any> {
    let jspredominantCategoriesPredominantCategoriesParams: any = {}
    if (hasValue(dotNetObject.layer)) {
        let { buildJsLayer } = await import('./layer');
        jspredominantCategoriesPredominantCategoriesParams.layer = await buildJsLayer(dotNetObject.layer, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.fields)) {
        jspredominantCategoriesPredominantCategoriesParams.fields = dotNetObject.fields;
    }
    if (hasValue(dotNetObject.forBinning)) {
        jspredominantCategoriesPredominantCategoriesParams.forBinning = dotNetObject.forBinning;
    }
    if (hasValue(dotNetObject.signal)) {
        jspredominantCategoriesPredominantCategoriesParams.signal = dotNetObject.signal;
    }
    if (hasValue(dotNetObject.view)) {
        jspredominantCategoriesPredominantCategoriesParams.view = dotNetObject.view;
    }
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(jspredominantCategoriesPredominantCategoriesParams);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jspredominantCategoriesPredominantCategoriesParams;
    
    let dnInstantiatedObject = await buildDotNetPredominantCategoriesPredominantCategoriesParams(jspredominantCategoriesPredominantCategoriesParams);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for PredominantCategoriesPredominantCategoriesParams', e);
    }
    
    return jspredominantCategoriesPredominantCategoriesParams;
}
export async function buildDotNetPredominantCategoriesPredominantCategoriesParamsGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPredominantCategoriesPredominantCategoriesParams: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.fields)) {
            dotNetPredominantCategoriesPredominantCategoriesParams.fields = jsObject.fields;
        }
        if (hasValue(jsObject.forBinning)) {
            dotNetPredominantCategoriesPredominantCategoriesParams.forBinning = jsObject.forBinning;
        }
        if (hasValue(jsObject.signal)) {
            dotNetPredominantCategoriesPredominantCategoriesParams.signal = jsObject.signal;
        }
        if (hasValue(jsObject.view)) {
            dotNetPredominantCategoriesPredominantCategoriesParams.view = jsObject.view;
        }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetPredominantCategoriesPredominantCategoriesParams.id = k;
                break;
            }
        }
    }

    return dotNetPredominantCategoriesPredominantCategoriesParams;
}

