// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import FeatureReductionSelection from '@arcgis/core/layers/support/FeatureReductionSelection';
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetFeatureReductionSelection } from './featureReductionSelection';

export async function buildJsFeatureReductionSelectionGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let properties: any = {};

    let jsFeatureReductionSelection = new FeatureReductionSelection(properties);
    
    let jsObjectRef = DotNet.createJSObjectReference(jsFeatureReductionSelection);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsFeatureReductionSelection;
    
    return jsFeatureReductionSelection;
}


export async function buildDotNetFeatureReductionSelectionGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeatureReductionSelection: any = {};
    
    if (hasValue(jsObject.type)) {
        dotNetFeatureReductionSelection.type = jsObject.type;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetFeatureReductionSelection.id = geoBlazorId;
    }

    return dotNetFeatureReductionSelection;
}

