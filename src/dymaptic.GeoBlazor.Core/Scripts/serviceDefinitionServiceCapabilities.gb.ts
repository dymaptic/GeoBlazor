// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetServiceDefinitionServiceCapabilities } from './serviceDefinitionServiceCapabilities';

export async function buildJsServiceDefinitionServiceCapabilitiesGenerated(dotNetObject: any): Promise<any> {
    let jsServiceDefinitionServiceCapabilities: any = {};
    if (hasValue(dotNetObject.applyEditsCapabilities)) {
        let { buildJsServiceDefinitionServiceCapabilitiesApplyEditsCapabilities } = await import('./serviceDefinitionServiceCapabilitiesApplyEditsCapabilities');
        jsServiceDefinitionServiceCapabilities.applyEditsCapabilities = await buildJsServiceDefinitionServiceCapabilitiesApplyEditsCapabilities(dotNetObject.applyEditsCapabilities) as any;
    }
    if (hasValue(dotNetObject.geometryCapabilities)) {
        let { buildJsServiceDefinitionServiceCapabilitiesGeometryCapabilities } = await import('./serviceDefinitionServiceCapabilitiesGeometryCapabilities');
        jsServiceDefinitionServiceCapabilities.geometryCapabilities = await buildJsServiceDefinitionServiceCapabilitiesGeometryCapabilities(dotNetObject.geometryCapabilities) as any;
    }
    if (hasValue(dotNetObject.indexCapabilities)) {
        let { buildJsServiceDefinitionServiceCapabilitiesIndexCapabilities } = await import('./serviceDefinitionServiceCapabilitiesIndexCapabilities');
        jsServiceDefinitionServiceCapabilities.indexCapabilities = await buildJsServiceDefinitionServiceCapabilitiesIndexCapabilities(dotNetObject.indexCapabilities) as any;
    }
    if (hasValue(dotNetObject.searchCapabilities)) {
        let { buildJsServiceDefinitionServiceCapabilitiesSearchCapabilities } = await import('./serviceDefinitionServiceCapabilitiesSearchCapabilities');
        jsServiceDefinitionServiceCapabilities.searchCapabilities = await buildJsServiceDefinitionServiceCapabilitiesSearchCapabilities(dotNetObject.searchCapabilities) as any;
    }

    
    let jsObjectRef = DotNet.createJSObjectReference(jsServiceDefinitionServiceCapabilities);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsServiceDefinitionServiceCapabilities;
    
    return jsServiceDefinitionServiceCapabilities;
}


export async function buildDotNetServiceDefinitionServiceCapabilitiesGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetServiceDefinitionServiceCapabilities: any = {};
    
    if (hasValue(jsObject.applyEditsCapabilities)) {
        let { buildDotNetServiceDefinitionServiceCapabilitiesApplyEditsCapabilities } = await import('./serviceDefinitionServiceCapabilitiesApplyEditsCapabilities');
        dotNetServiceDefinitionServiceCapabilities.applyEditsCapabilities = await buildDotNetServiceDefinitionServiceCapabilitiesApplyEditsCapabilities(jsObject.applyEditsCapabilities);
    }
    
    if (hasValue(jsObject.geometryCapabilities)) {
        let { buildDotNetServiceDefinitionServiceCapabilitiesGeometryCapabilities } = await import('./serviceDefinitionServiceCapabilitiesGeometryCapabilities');
        dotNetServiceDefinitionServiceCapabilities.geometryCapabilities = await buildDotNetServiceDefinitionServiceCapabilitiesGeometryCapabilities(jsObject.geometryCapabilities);
    }
    
    if (hasValue(jsObject.indexCapabilities)) {
        let { buildDotNetServiceDefinitionServiceCapabilitiesIndexCapabilities } = await import('./serviceDefinitionServiceCapabilitiesIndexCapabilities');
        dotNetServiceDefinitionServiceCapabilities.indexCapabilities = await buildDotNetServiceDefinitionServiceCapabilitiesIndexCapabilities(jsObject.indexCapabilities);
    }
    
    if (hasValue(jsObject.searchCapabilities)) {
        let { buildDotNetServiceDefinitionServiceCapabilitiesSearchCapabilities } = await import('./serviceDefinitionServiceCapabilitiesSearchCapabilities');
        dotNetServiceDefinitionServiceCapabilities.searchCapabilities = await buildDotNetServiceDefinitionServiceCapabilitiesSearchCapabilities(jsObject.searchCapabilities);
    }
    

    return dotNetServiceDefinitionServiceCapabilities;
}

