// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import FeatureEffect from '@arcgis/core/layers/support/FeatureEffect';
import { hasValue, lookupGeoBlazorId, removeCircularReferences } from './arcGisJsInterop';

export async function buildDotNetFeatureEffectGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeatureEffect: any = {};
    
    if (hasValue(jsObject.filter)) {
        let { buildDotNetFeatureFilter } = await import('./featureFilter');
        dotNetFeatureEffect.filter = await buildDotNetFeatureFilter(jsObject.filter);
    }
    
    if (hasValue(jsObject.excludedEffect)) {
        dotNetFeatureEffect.excludedEffect = removeCircularReferences(jsObject.excludedEffect);
    }
    
    if (hasValue(jsObject.excludedLabelsVisible)) {
        dotNetFeatureEffect.excludedLabelsVisible = jsObject.excludedLabelsVisible;
    }
    
    if (hasValue(jsObject.includedEffect)) {
        dotNetFeatureEffect.includedEffect = removeCircularReferences(jsObject.includedEffect);
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetFeatureEffect.id = geoBlazorId;
    }

    return dotNetFeatureEffect;
}

