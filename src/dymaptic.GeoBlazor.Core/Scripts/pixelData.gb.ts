// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';

export async function buildJsPixelDataGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsPixelData: any = {};
    if (hasValue(dotNetObject.extent)) {
        let { buildJsExtent } = await import('./extent');
        jsPixelData.extent = buildJsExtent(dotNetObject.extent) as any;
    }
    if (hasValue(dotNetObject.pixelBlock)) {
        let { buildJsPixelBlock } = await import('./pixelBlock');
        jsPixelData.pixelBlock = await buildJsPixelBlock(dotNetObject.pixelBlock, layerId, viewId) as any;
    }

    
    jsObjectRefs[dotNetObject.id] = jsPixelData;
    arcGisObjectRefs[dotNetObject.id] = jsPixelData;
    
    return jsPixelData;
}


export async function buildDotNetPixelDataGenerated(jsObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPixelData: any = {};
    
    if (hasValue(jsObject.extent)) {
        let { buildDotNetExtent } = await import('./extent');
        dotNetPixelData.extent = buildDotNetExtent(jsObject.extent);
    }
    
    if (hasValue(jsObject.pixelBlock)) {
        let { buildDotNetPixelBlock } = await import('./pixelBlock');
        dotNetPixelData.pixelBlock = await buildDotNetPixelBlock(jsObject.pixelBlock, viewId);
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetPixelData.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        dotNetPixelData.id = await dotNetRef.invokeMethodAsync('GetId');
    }
    if (hasValue(dotNetPixelData.id)) {
        jsObjectRefs[dotNetPixelData.id] ??= jsObject;
        arcGisObjectRefs[dotNetPixelData.id] ??= jsObject;
    }

    return dotNetPixelData;
}

