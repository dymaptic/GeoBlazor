// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import VectorTileLayerView from '@arcgis/core/views/layers/VectorTileLayerView';
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';

export async function buildDotNetVectorTileLayerViewGenerated(jsObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetVectorTileLayerView: any = {};
    
    if (hasValue(jsObject.hasVisibleFeatures)) {
        dotNetVectorTileLayerView.hasVisibleFeatures = jsObject.hasVisibleFeatures;
    }
    
    if (hasValue(jsObject.spatialReferenceSupported)) {
        dotNetVectorTileLayerView.spatialReferenceSupported = jsObject.spatialReferenceSupported;
    }
    
    if (hasValue(jsObject.suspended)) {
        dotNetVectorTileLayerView.suspended = jsObject.suspended;
    }
    
    if (hasValue(jsObject.updating)) {
        dotNetVectorTileLayerView.updating = jsObject.updating;
    }
    
    if (hasValue(jsObject.visible)) {
        dotNetVectorTileLayerView.visible = jsObject.visible;
    }
    
    if (hasValue(jsObject.visibleAtCurrentScale)) {
        dotNetVectorTileLayerView.visibleAtCurrentScale = jsObject.visibleAtCurrentScale;
    }
    
    if (hasValue(jsObject.visibleAtCurrentTimeExtent)) {
        dotNetVectorTileLayerView.visibleAtCurrentTimeExtent = jsObject.visibleAtCurrentTimeExtent;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetVectorTileLayerView.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        if (hasValue(dotNetRef)) {
            try {
                dotNetVectorTileLayerView.id = await dotNetRef.invokeMethodAsync('GetId');
            } catch (e) {
                console.error('Error invoking GetId for VectorTileLayerView', e);
            }
        }
    }
    if (hasValue(dotNetVectorTileLayerView.id)) {
        jsObjectRefs[dotNetVectorTileLayerView.id] ??= jsObject;
        arcGisObjectRefs[dotNetVectorTileLayerView.id] ??= jsObject;
    }

    return dotNetVectorTileLayerView;
}

