// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetAttachmentsCapabilitiesOperations } from './attachmentsCapabilitiesOperations';

export async function buildJsAttachmentsCapabilitiesOperationsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsAttachmentsCapabilitiesOperations: any = {};

    if (hasValue(dotNetObject.add)) {
        jsAttachmentsCapabilitiesOperations.add = dotNetObject.add;
    }
    if (hasValue(dotNetObject.delete)) {
        jsAttachmentsCapabilitiesOperations.delete = dotNetObject.delete;
    }
    if (hasValue(dotNetObject.update)) {
        jsAttachmentsCapabilitiesOperations.update = dotNetObject.update;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsAttachmentsCapabilitiesOperations);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsAttachmentsCapabilitiesOperations;
    
    return jsAttachmentsCapabilitiesOperations;
}


export async function buildDotNetAttachmentsCapabilitiesOperationsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetAttachmentsCapabilitiesOperations: any = {};
    
    if (hasValue(jsObject.add)) {
        dotNetAttachmentsCapabilitiesOperations.add = jsObject.add;
    }
    
    if (hasValue(jsObject.delete)) {
        dotNetAttachmentsCapabilitiesOperations.delete = jsObject.delete;
    }
    
    if (hasValue(jsObject.update)) {
        dotNetAttachmentsCapabilitiesOperations.update = jsObject.update;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetAttachmentsCapabilitiesOperations.id = geoBlazorId;
    }

    return dotNetAttachmentsCapabilitiesOperations;
}

