// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetDeleteItemsResult } from './deleteItemsResult';

export async function buildJsDeleteItemsResultGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsDeleteItemsResult: any = {};
    if (hasValue(dotNetObject.item)) {
        let { buildJsPortalItem } = await import('./portalItem');
        jsDeleteItemsResult.item = await buildJsPortalItem(dotNetObject.item, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.error)) {
        jsDeleteItemsResult.error = dotNetObject.error;
    }
    if (hasValue(dotNetObject.success)) {
        jsDeleteItemsResult.success = dotNetObject.success;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsDeleteItemsResult);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsDeleteItemsResult;
    
    let { buildDotNetDeleteItemsResult } = await import('./deleteItemsResult');
    let dnInstantiatedObject = await buildDotNetDeleteItemsResult(jsDeleteItemsResult);

    try {
        let seenObjects = new WeakMap();
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', 
            jsObjectRef, JSON.stringify(dnInstantiatedObject, function (key, value) {
                if (typeof value === 'object' && value !== null) {
                    if (seenObjects.has(value)) {
                        console.warn(`Circular reference in serializing type DeleteItemsResult detected at path: ${key}, value: ${value}`);
                        return undefined;
                    }
                    seenObjects.set(value, true);
                }
                if (key.startsWith('_')) {
                    return undefined;
                }
                return value;
            }));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for DeleteItemsResult', e);
    }
    
    return jsDeleteItemsResult;
}


export async function buildDotNetDeleteItemsResultGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetDeleteItemsResult: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
    if (hasValue(jsObject.item)) {
        let { buildDotNetPortalItem } = await import('./portalItem');
        dotNetDeleteItemsResult.item = await buildDotNetPortalItem(jsObject.item);
    }
    if (hasValue(jsObject.error)) {
        dotNetDeleteItemsResult.error = jsObject.error;
    }
    if (hasValue(jsObject.success)) {
        dotNetDeleteItemsResult.success = jsObject.success;
    }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetDeleteItemsResult.id = k;
                break;
            }
        }
    }

    return dotNetDeleteItemsResult;
}

