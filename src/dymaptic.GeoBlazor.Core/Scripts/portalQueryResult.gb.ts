// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import PortalQueryResult from '@arcgis/core/portal/PortalQueryResult';
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetPortalQueryResult } from './portalQueryResult';

export async function buildJsPortalQueryResultGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let properties: any = {};
    if (hasValue(dotNetObject.nextQueryParams)) {
        let { buildJsPortalQueryParams } = await import('./portalQueryParams');
        properties.nextQueryParams = await buildJsPortalQueryParams(dotNetObject.nextQueryParams, layerId, viewId) as any;
    }
    if (hasValue(dotNetObject.queryParams)) {
        let { buildJsPortalQueryParams } = await import('./portalQueryParams');
        properties.queryParams = await buildJsPortalQueryParams(dotNetObject.queryParams, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.results) && dotNetObject.results.length > 0) {
        properties.results = dotNetObject.results;
    }
    if (hasValue(dotNetObject.total)) {
        properties.total = dotNetObject.total;
    }
    let jsPortalQueryResult = new PortalQueryResult(properties);
    
    jsObjectRefs[dotNetObject.id] = jsPortalQueryResult;
    arcGisObjectRefs[dotNetObject.id] = jsPortalQueryResult;
    
    return jsPortalQueryResult;
}


export async function buildDotNetPortalQueryResultGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetPortalQueryResult: any = {};
    
    if (hasValue(jsObject.nextQueryParams)) {
        let { buildDotNetPortalQueryParams } = await import('./portalQueryParams');
        dotNetPortalQueryResult.nextQueryParams = await buildDotNetPortalQueryParams(jsObject.nextQueryParams, layerId, viewId);
    }
    
    if (hasValue(jsObject.queryParams)) {
        let { buildDotNetPortalQueryParams } = await import('./portalQueryParams');
        dotNetPortalQueryResult.queryParams = await buildDotNetPortalQueryParams(jsObject.queryParams, layerId, viewId);
    }
    
    if (hasValue(jsObject.results)) {
        dotNetPortalQueryResult.results = jsObject.results;
    }
    
    if (hasValue(jsObject.total)) {
        dotNetPortalQueryResult.total = jsObject.total;
    }
    

    return dotNetPortalQueryResult;
}

