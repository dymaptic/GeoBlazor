// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, dotNetRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetICreationInfoTemplate } from './iCreationInfoTemplate';

export async function buildJsICreationInfoTemplateGenerated(dotNetObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsCreationInfoTemplate: any = {};

    
    jsObjectRefs[dotNetObject.id] = jsCreationInfoTemplate;
    arcGisObjectRefs[dotNetObject.id] = jsCreationInfoTemplate;
    
    return jsCreationInfoTemplate;
}


export async function buildDotNetICreationInfoTemplateGenerated(jsObject: any, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetICreationInfoTemplate: any = {};
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetICreationInfoTemplate.id = geoBlazorId;
    } else if (hasValue(viewId)) {
        let dotNetRef = dotNetRefs[viewId!];
        dotNetICreationInfoTemplate.id = await dotNetRef.invokeMethodAsync('GetId');
    }
    if (hasValue(dotNetICreationInfoTemplate.id)) {
        jsObjectRefs[dotNetICreationInfoTemplate.id] ??= jsObject;
        arcGisObjectRefs[dotNetICreationInfoTemplate.id] ??= jsObject;
    }

    return dotNetICreationInfoTemplate;
}

