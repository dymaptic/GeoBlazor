// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetViewImmediateDoubleClickEvent } from './viewImmediateDoubleClickEvent';

export async function buildJsViewImmediateDoubleClickEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsViewImmediateDoubleClickEvent: any = {};
    if (hasValue(dotNetObject.mapPoint)) {
        let { buildJsPoint } = await import('./point');
        jsViewImmediateDoubleClickEvent.mapPoint = buildJsPoint(dotNetObject.mapPoint) as any;
    }

    if (hasValue(dotNetObject.button)) {
        jsViewImmediateDoubleClickEvent.button = dotNetObject.button;
    }
    if (hasValue(dotNetObject.buttons)) {
        jsViewImmediateDoubleClickEvent.buttons = dotNetObject.buttons;
    }
    if (hasValue(dotNetObject.native)) {
        jsViewImmediateDoubleClickEvent.native = dotNetObject.native;
    }
    if (hasValue(dotNetObject.stopPropagation)) {
        jsViewImmediateDoubleClickEvent.stopPropagation = dotNetObject.stopPropagation;
    }
    if (hasValue(dotNetObject.timestamp)) {
        jsViewImmediateDoubleClickEvent.timestamp = dotNetObject.timestamp;
    }
    if (hasValue(dotNetObject.x)) {
        jsViewImmediateDoubleClickEvent.x = dotNetObject.x;
    }
    if (hasValue(dotNetObject.y)) {
        jsViewImmediateDoubleClickEvent.y = dotNetObject.y;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsViewImmediateDoubleClickEvent);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsViewImmediateDoubleClickEvent;
    
    return jsViewImmediateDoubleClickEvent;
}


export async function buildDotNetViewImmediateDoubleClickEventGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetViewImmediateDoubleClickEvent: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
    if (hasValue(jsObject.mapPoint)) {
        let { buildDotNetPoint } = await import('./point');
        dotNetViewImmediateDoubleClickEvent.mapPoint = buildDotNetPoint(jsObject.mapPoint);
    }
    if (hasValue(jsObject.button)) {
        dotNetViewImmediateDoubleClickEvent.button = jsObject.button;
    }
    if (hasValue(jsObject.buttons)) {
        dotNetViewImmediateDoubleClickEvent.buttons = jsObject.buttons;
    }
    if (hasValue(jsObject.native)) {
        dotNetViewImmediateDoubleClickEvent.native = jsObject.native;
    }
    if (hasValue(jsObject.stopPropagation)) {
        dotNetViewImmediateDoubleClickEvent.stopPropagation = jsObject.stopPropagation;
    }
    if (hasValue(jsObject.timestamp)) {
        dotNetViewImmediateDoubleClickEvent.timestamp = jsObject.timestamp;
    }
    if (hasValue(jsObject.type)) {
        dotNetViewImmediateDoubleClickEvent.type = jsObject.type;
    }
    if (hasValue(jsObject.x)) {
        dotNetViewImmediateDoubleClickEvent.x = jsObject.x;
    }
    if (hasValue(jsObject.y)) {
        dotNetViewImmediateDoubleClickEvent.y = jsObject.y;
    }

    return dotNetViewImmediateDoubleClickEvent;
}

