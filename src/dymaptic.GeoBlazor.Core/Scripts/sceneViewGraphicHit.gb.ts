// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetSceneViewGraphicHit } from './sceneViewGraphicHit';

export async function buildJsSceneViewGraphicHitGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsSceneViewGraphicHit: any = {};
    if (hasValue(dotNetObject.graphic)) {
        let { buildJsGraphic } = await import('./graphic');
        jsSceneViewGraphicHit.graphic = buildJsGraphic(dotNetObject.graphic) as any;
    }
    if (hasValue(dotNetObject.layer)) {
        let { buildJsLayer } = await import('./layer');
        jsSceneViewGraphicHit.layer = await buildJsLayer(dotNetObject.layer, layerId, viewId) as any;
    }
    if (hasValue(dotNetObject.mapPoint)) {
        let { buildJsPoint } = await import('./point');
        jsSceneViewGraphicHit.mapPoint = buildJsPoint(dotNetObject.mapPoint) as any;
    }

    if (hasValue(dotNetObject.distance)) {
        jsSceneViewGraphicHit.distance = dotNetObject.distance;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsSceneViewGraphicHit);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsSceneViewGraphicHit;
    
    return jsSceneViewGraphicHit;
}


export async function buildDotNetSceneViewGraphicHitGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSceneViewGraphicHit: any = {};
    
    if (hasValue(jsObject.graphic)) {
        let { buildDotNetGraphic } = await import('./graphic');
        dotNetSceneViewGraphicHit.graphic = buildDotNetGraphic(jsObject.graphic, layerId, viewId);
    }
    
    if (hasValue(jsObject.mapPoint)) {
        let { buildDotNetPoint } = await import('./point');
        dotNetSceneViewGraphicHit.mapPoint = buildDotNetPoint(jsObject.mapPoint);
    }
    
    if (hasValue(jsObject.distance)) {
        dotNetSceneViewGraphicHit.distance = jsObject.distance;
    }
    
    if (hasValue(jsObject.type)) {
        dotNetSceneViewGraphicHit.type = jsObject.type;
    }
    

    return dotNetSceneViewGraphicHit;
}

