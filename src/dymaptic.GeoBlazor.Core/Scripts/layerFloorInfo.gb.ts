// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file


import LayerFloorInfo from '@arcgis/core/layers/support/LayerFloorInfo';
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';
import {IPropertyWrapper} from './definitions';

export default class LayerFloorInfoGenerated implements IPropertyWrapper {
    public component: LayerFloorInfo;
    public readonly geoBlazorId: string = '';

    constructor(component: LayerFloorInfo) {
        this.component = component;
        // set all properties from component
        for (let prop in component) {
            if (component.hasOwnProperty(prop)) {
                this[prop] = component[prop];
            }
        }
    }
    
    // region methods
   
    unwrap() {
        return this.component;
    }
    
    // region properties
    
    getProperty(prop: string): any {
        return this.component[prop];
    }
    
    setProperty(prop: string, value: any): void {
        this.component[prop] = value;
    }
}
export async function buildJsLayerFloorInfoGenerated(dotNetObject: any): Promise<any> {
    let { default: LayerFloorInfo } = await import('@arcgis/core/layers/support/LayerFloorInfo');
    let jsLayerFloorInfo = new LayerFloorInfo();
    if (hasValue(dotNetObject.floorField)) {
        jsLayerFloorInfo.floorField = dotNetObject.floorField;
    }
    let { default: LayerFloorInfoWrapper } = await import('./layerFloorInfo');
    let layerFloorInfoWrapper = new LayerFloorInfoWrapper(jsLayerFloorInfo);
    jsLayerFloorInfo.id = dotNetObject.id;
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(layerFloorInfoWrapper);
    await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef);
    jsObjectRefs[dotNetObject.id] = layerFloorInfoWrapper;
    arcGisObjectRefs[dotNetObject.id] = jsLayerFloorInfo;
    
    return jsLayerFloorInfo;
}

export async function buildDotNetLayerFloorInfoGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetLayerFloorInfo: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        dotNetLayerFloorInfo.floorField = jsObject.floorField;
    return dotNetLayerFloorInfo;
}

