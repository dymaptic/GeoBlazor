// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetElevationQueryResultSampleInfo } from './elevationQueryResultSampleInfo';

export async function buildJsElevationQueryResultSampleInfoGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsElevationQueryResultSampleInfo: any = {};

    if (hasValue(dotNetObject.demResolution)) {
        jsElevationQueryResultSampleInfo.demResolution = dotNetObject.demResolution;
    }
    if (hasValue(dotNetObject.source)) {
        jsElevationQueryResultSampleInfo.source = dotNetObject.source;
    }
    
    jsObjectRefs[dotNetObject.id] = jsElevationQueryResultSampleInfo;
    arcGisObjectRefs[dotNetObject.id] = jsElevationQueryResultSampleInfo;
    
    return jsElevationQueryResultSampleInfo;
}


export async function buildDotNetElevationQueryResultSampleInfoGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetElevationQueryResultSampleInfo: any = {};
    
    if (hasValue(jsObject.demResolution)) {
        dotNetElevationQueryResultSampleInfo.demResolution = jsObject.demResolution;
    }
    
    if (hasValue(jsObject.source)) {
        dotNetElevationQueryResultSampleInfo.source = removeCircularReferences(jsObject.source);
    }
    

    return dotNetElevationQueryResultSampleInfo;
}

