// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file


import AuthoringInfoField1ClassBreakInfos = __esri.AuthoringInfoField1ClassBreakInfos;
import {arcGisObjectRefs, hasValue, jsObjectRefs} from './arcGisJsInterop';
import {IPropertyWrapper} from './definitions';

export default class AuthoringInfoField1ClassBreakInfosGenerated implements IPropertyWrapper {
    public component: AuthoringInfoField1ClassBreakInfos;
    public geoBlazorId: string | null = null;
    public viewId: string | null = null;
    public layerId: string | null = null;

    constructor(component: AuthoringInfoField1ClassBreakInfos) {
        this.component = component;
        // set all properties from component
        for (let prop in component) {
            if (component.hasOwnProperty(prop)) {
                this[prop] = component[prop];
            }
        }
    }
    
    // region methods
   
    unwrap() {
        return this.component;
    }
    
    // region properties
    
    getProperty(prop: string): any {
        return this.component[prop];
    }
    
    setProperty(prop: string, value: any): void {
        this.component[prop] = value;
    }
}

export async function buildJsAuthoringInfoField1ClassBreakInfosGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsAuthoringInfoField1ClassBreakInfos: any = {}
    if (hasValue(dotNetObject.maxValue)) {
        jsAuthoringInfoField1ClassBreakInfos.maxValue = dotNetObject.maxValue;
    }
    if (hasValue(dotNetObject.minValue)) {
        jsAuthoringInfoField1ClassBreakInfos.minValue = dotNetObject.minValue;
    }
    let { default: AuthoringInfoField1ClassBreakInfosWrapper } = await import('./authoringInfoField1ClassBreakInfos');
    let authoringInfoField1ClassBreakInfosWrapper = new AuthoringInfoField1ClassBreakInfosWrapper(jsAuthoringInfoField1ClassBreakInfos);
    authoringInfoField1ClassBreakInfosWrapper.geoBlazorId = dotNetObject.id;
    authoringInfoField1ClassBreakInfosWrapper.viewId = viewId;
    authoringInfoField1ClassBreakInfosWrapper.layerId = layerId;
    
    // @ts-ignore
    let jsObjectRef = DotNet.createJSObjectReference(authoringInfoField1ClassBreakInfosWrapper);
    await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef);
    jsObjectRefs[dotNetObject.id] = authoringInfoField1ClassBreakInfosWrapper;
    arcGisObjectRefs[dotNetObject.id] = jsAuthoringInfoField1ClassBreakInfos;
    
    return jsAuthoringInfoField1ClassBreakInfos;
}

export async function buildDotNetAuthoringInfoField1ClassBreakInfosGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetAuthoringInfoField1ClassBreakInfos: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        dotNetAuthoringInfoField1ClassBreakInfos.maxValue = jsObject.maxValue;
        dotNetAuthoringInfoField1ClassBreakInfos.minValue = jsObject.minValue;
    return dotNetAuthoringInfoField1ClassBreakInfos;
}

