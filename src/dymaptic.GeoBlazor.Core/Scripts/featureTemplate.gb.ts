// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import FeatureTemplate from '@arcgis/core/layers/support/FeatureTemplate';
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetFeatureTemplate } from './featureTemplate';

export async function buildJsFeatureTemplateGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let properties: any = {};
    if (hasValue(dotNetObject.prototype)) {
        let { buildJsGraphic } = await import('./graphic');
        properties.prototype = buildJsGraphic(dotNetObject.prototype) as any;
    }

    if (hasValue(dotNetObject.description)) {
        properties.description = dotNetObject.description;
    }
    if (hasValue(dotNetObject.drawingTool)) {
        properties.drawingTool = dotNetObject.drawingTool;
    }
    if (hasValue(dotNetObject.name)) {
        properties.name = dotNetObject.name;
    }
    if (hasValue(dotNetObject.thumbnail)) {
        properties.thumbnail = dotNetObject.thumbnail;
    }
    let jsFeatureTemplate = new FeatureTemplate(properties);
    
    let jsObjectRef = DotNet.createJSObjectReference(jsFeatureTemplate);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsFeatureTemplate;
    
    let dnInstantiatedObject = await buildDotNetFeatureTemplate(jsFeatureTemplate);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for FeatureTemplate', e);
    }
    
    return jsFeatureTemplate;
}

export async function buildDotNetFeatureTemplateGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeatureTemplate: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
        if (hasValue(jsObject.prototype)) {
            let { buildDotNetGraphic } = await import('./graphic');
            dotNetFeatureTemplate.prototype = buildDotNetGraphic(jsObject.prototype, layerId, viewId);
        }
    if (hasValue(jsObject.description)) {
        dotNetFeatureTemplate.description = jsObject.description;
    }
    if (hasValue(jsObject.drawingTool)) {
        dotNetFeatureTemplate.drawingTool = jsObject.drawingTool;
    }
    if (hasValue(jsObject.name)) {
        dotNetFeatureTemplate.name = jsObject.name;
    }
    if (hasValue(jsObject.thumbnail)) {
        dotNetFeatureTemplate.thumbnail = jsObject.thumbnail;
    }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetFeatureTemplate.id = k;
                break;
            }
        }
    }

    return dotNetFeatureTemplate;
}

