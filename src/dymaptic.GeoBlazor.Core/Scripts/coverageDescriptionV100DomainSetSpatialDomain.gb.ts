// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetCoverageDescriptionV100DomainSetSpatialDomain } from './coverageDescriptionV100DomainSetSpatialDomain';

export async function buildJsCoverageDescriptionV100DomainSetSpatialDomainGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsCoverageDescriptionV100DomainSetSpatialDomain: any = {};

    if (hasValue(dotNetObject.columns)) {
        jsCoverageDescriptionV100DomainSetSpatialDomain.columns = dotNetObject.columns;
    }
    if (hasValue(dotNetObject.envelope)) {
        const { id, dotNetComponentReference, ...sanitizedEnvelope } = dotNetObject.envelope;
        jsCoverageDescriptionV100DomainSetSpatialDomain.envelope = sanitizedEnvelope;
    }
    if (hasValue(dotNetObject.offset)) {
        jsCoverageDescriptionV100DomainSetSpatialDomain.offset = dotNetObject.offset;
    }
    if (hasValue(dotNetObject.origin)) {
        jsCoverageDescriptionV100DomainSetSpatialDomain.origin = dotNetObject.origin;
    }
    if (hasValue(dotNetObject.rows)) {
        jsCoverageDescriptionV100DomainSetSpatialDomain.rows = dotNetObject.rows;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsCoverageDescriptionV100DomainSetSpatialDomain);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsCoverageDescriptionV100DomainSetSpatialDomain;
    
    let { buildDotNetCoverageDescriptionV100DomainSetSpatialDomain } = await import('./coverageDescriptionV100DomainSetSpatialDomain');
    let dnInstantiatedObject = await buildDotNetCoverageDescriptionV100DomainSetSpatialDomain(jsCoverageDescriptionV100DomainSetSpatialDomain);

    try {
        let seenObjects = new WeakMap();
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', 
            jsObjectRef, JSON.stringify(dnInstantiatedObject, function (key, value) {
                if (typeof value === 'object' && value !== null) {
                    if (seenObjects.has(value)) {
                        console.warn(`Circular reference in serializing type CoverageDescriptionV100DomainSetSpatialDomain detected at path: ${key}, value: ${value}`);
                        return undefined;
                    }
                    seenObjects.set(value, true);
                }
                if (key.startsWith('_')) {
                    return undefined;
                }
                return value;
            }));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for CoverageDescriptionV100DomainSetSpatialDomain', e);
    }
    
    return jsCoverageDescriptionV100DomainSetSpatialDomain;
}


export async function buildDotNetCoverageDescriptionV100DomainSetSpatialDomainGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetCoverageDescriptionV100DomainSetSpatialDomain: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
    if (hasValue(jsObject.columns)) {
        dotNetCoverageDescriptionV100DomainSetSpatialDomain.columns = jsObject.columns;
    }
    if (hasValue(jsObject.envelope)) {
        dotNetCoverageDescriptionV100DomainSetSpatialDomain.envelope = jsObject.envelope;
    }
    if (hasValue(jsObject.offset)) {
        dotNetCoverageDescriptionV100DomainSetSpatialDomain.offset = jsObject.offset;
    }
    if (hasValue(jsObject.origin)) {
        dotNetCoverageDescriptionV100DomainSetSpatialDomain.origin = jsObject.origin;
    }
    if (hasValue(jsObject.rows)) {
        dotNetCoverageDescriptionV100DomainSetSpatialDomain.rows = jsObject.rows;
    }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetCoverageDescriptionV100DomainSetSpatialDomain.id = k;
                break;
            }
        }
    }

    return dotNetCoverageDescriptionV100DomainSetSpatialDomain;
}

