// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import FeatureSnappingLayerSource from '@arcgis/core/views/interactive/snapping/FeatureSnappingLayerSource';
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetFeatureSnappingLayerSource } from './featureSnappingLayerSource';

export async function buildJsFeatureSnappingLayerSourceGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let properties: any = {};

    if (hasValue(dotNetObject.enabled)) {
        properties.enabled = dotNetObject.enabled;
    }
    let jsFeatureSnappingLayerSource = new FeatureSnappingLayerSource(properties);
    
    let jsObjectRef = DotNet.createJSObjectReference(jsFeatureSnappingLayerSource);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsFeatureSnappingLayerSource;
    
    let dnInstantiatedObject = await buildDotNetFeatureSnappingLayerSource(jsFeatureSnappingLayerSource);
    
    try {
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', jsObjectRef, JSON.stringify(dnInstantiatedObject));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for FeatureSnappingLayerSource', e);
    }
    
    return jsFeatureSnappingLayerSource;
}

export async function buildDotNetFeatureSnappingLayerSourceGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeatureSnappingLayerSource: any = {
        // @ts-ignore
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
    if (hasValue(jsObject.enabled)) {
        dotNetFeatureSnappingLayerSource.enabled = jsObject.enabled;
    }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetFeatureSnappingLayerSource.id = k;
                break;
            }
        }
    }

    return dotNetFeatureSnappingLayerSource;
}

