// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams } from './summaryStatisticsForAgeSummaryStatisticsForAgeParams';

export async function buildJsSummaryStatisticsForAgeSummaryStatisticsForAgeParamsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jssummaryStatisticsForAgeSummaryStatisticsForAgeParams: any = {};
    if (hasValue(viewId)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.view = arcGisObjectRefs[viewId!];
    }
    if (hasValue(dotNetObject.layer)) {
        let { buildJsLayer } = await import('./layer');
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.layer = await buildJsLayer(dotNetObject.layer, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.endTime)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.endTime = dotNetObject.endTime;
    }
    if (hasValue(dotNetObject.signal)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.signal = dotNetObject.signal;
    }
    if (hasValue(dotNetObject.startTime)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.startTime = dotNetObject.startTime;
    }
    if (hasValue(dotNetObject.unit)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.unit = dotNetObject.unit;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jssummaryStatisticsForAgeSummaryStatisticsForAgeParams);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jssummaryStatisticsForAgeSummaryStatisticsForAgeParams;
    
    return jssummaryStatisticsForAgeSummaryStatisticsForAgeParams;
}


export async function buildDotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParamsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams: any = {};
    
    if (hasValue(jsObject.endTime)) {
        dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.endTime = jsObject.endTime;
    }
    
    if (hasValue(jsObject.signal)) {
        dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.signal = jsObject.signal;
    }
    
    if (hasValue(jsObject.startTime)) {
        dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.startTime = jsObject.startTime;
    }
    
    if (hasValue(jsObject.unit)) {
        dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.unit = removeCircularReferences(jsObject.unit);
    }
    

    return dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams;
}

