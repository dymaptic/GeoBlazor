// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams } from './summaryStatisticsForAgeSummaryStatisticsForAgeParams';

export async function buildJsSummaryStatisticsForAgeSummaryStatisticsForAgeParamsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jssummaryStatisticsForAgeSummaryStatisticsForAgeParams: any = {};
    if (hasValue(viewId)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.view = arcGisObjectRefs[viewId!];
    }
    if (hasValue(dotNetObject.layer)) {
        let { buildJsLayer } = await import('./layer');
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.layer = await buildJsLayer(dotNetObject.layer, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.endTime)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.endTime = dotNetObject.endTime;
    }
    if (hasValue(dotNetObject.signal)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.signal = dotNetObject.signal;
    }
    if (hasValue(dotNetObject.startTime)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.startTime = dotNetObject.startTime;
    }
    if (hasValue(dotNetObject.unit)) {
        jssummaryStatisticsForAgeSummaryStatisticsForAgeParams.unit = dotNetObject.unit;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jssummaryStatisticsForAgeSummaryStatisticsForAgeParams);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jssummaryStatisticsForAgeSummaryStatisticsForAgeParams;
    
    let { buildDotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams } = await import('./summaryStatisticsForAgeSummaryStatisticsForAgeParams');
    let dnInstantiatedObject = await buildDotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams(jssummaryStatisticsForAgeSummaryStatisticsForAgeParams);

    try {
        let seenObjects = new WeakMap();
        await dotNetObject.dotNetComponentReference.invokeMethodAsync('OnJsComponentCreated', 
            jsObjectRef, JSON.stringify(dnInstantiatedObject, function (key, value) {
                if (key.startsWith('_')) {
                    return undefined;
                }
                if (typeof value === 'object' && value !== null) {
                    if (seenObjects.has(value)) {
                        console.warn(`Circular reference in serializing type SummaryStatisticsForAgeSummaryStatisticsForAgeParams detected at path: ${key}, value: ${value.__proto__?.declaredClass}`);
                        return undefined;
                    }
                    seenObjects.set(value, true);
                }
                return value;
            }));
    } catch (e) {
        console.error('Error invoking OnJsComponentCreated for SummaryStatisticsForAgeSummaryStatisticsForAgeParams', e);
    }
    
    return jssummaryStatisticsForAgeSummaryStatisticsForAgeParams;
}


export async function buildDotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParamsGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
    if (hasValue(jsObject.endTime)) {
        dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.endTime = jsObject.endTime;
    }
    if (hasValue(jsObject.signal)) {
        dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.signal = jsObject.signal;
    }
    if (hasValue(jsObject.startTime)) {
        dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.startTime = jsObject.startTime;
    }
    if (hasValue(jsObject.unit)) {
        dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.unit = jsObject.unit;
    }

    if (Object.values(arcGisObjectRefs).includes(jsObject)) {
        for (const k of Object.keys(arcGisObjectRefs)) {
            if (arcGisObjectRefs[k] === jsObject) {
                dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams.id = k;
                break;
            }
        }
    }

    return dotNetSummaryStatisticsForAgeSummaryStatisticsForAgeParams;
}

