// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, sanitize, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetSearchResponse } from './searchResponse';

export async function buildJsSearchResponseGenerated(dotNetObject: any): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsSearchResponse: any = {};

    if (hasValue(dotNetObject.activeSourceIndex)) {
        jsSearchResponse.activeSourceIndex = dotNetObject.activeSourceIndex;
    }
    if (hasValue(dotNetObject.errors) && dotNetObject.errors.length > 0) {
        jsSearchResponse.errors = sanitize(dotNetObject.errors);
    }
    if (hasValue(dotNetObject.numResults)) {
        jsSearchResponse.numResults = dotNetObject.numResults;
    }
    if (hasValue(dotNetObject.results) && dotNetObject.results.length > 0) {
        jsSearchResponse.results = sanitize(dotNetObject.results);
    }
    if (hasValue(dotNetObject.searchTerm)) {
        jsSearchResponse.searchTerm = dotNetObject.searchTerm;
    }
    
    jsObjectRefs[dotNetObject.id] = jsSearchResponse;
    arcGisObjectRefs[dotNetObject.id] = jsSearchResponse;
    
    return jsSearchResponse;
}


export async function buildDotNetSearchResponseGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetSearchResponse: any = {};
    
    if (hasValue(jsObject.activeSourceIndex)) {
        dotNetSearchResponse.activeSourceIndex = jsObject.activeSourceIndex;
    }
    
    if (hasValue(jsObject.errors)) {
        dotNetSearchResponse.errors = removeCircularReferences(jsObject.errors);
    }
    
    if (hasValue(jsObject.numResults)) {
        dotNetSearchResponse.numResults = jsObject.numResults;
    }
    
    if (hasValue(jsObject.results)) {
        dotNetSearchResponse.results = removeCircularReferences(jsObject.results);
    }
    
    if (hasValue(jsObject.searchTerm)) {
        dotNetSearchResponse.searchTerm = jsObject.searchTerm;
    }
    

    return dotNetSearchResponse;
}

