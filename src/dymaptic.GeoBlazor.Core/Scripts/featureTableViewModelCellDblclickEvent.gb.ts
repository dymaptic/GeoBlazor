// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetFeatureTableViewModelCellDblclickEvent } from './featureTableViewModelCellDblclickEvent';

export async function buildJsFeatureTableViewModelCellDblclickEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsFeatureTableViewModelCellDblclickEvent: any = {};
    if (hasValue(dotNetObject.feature)) {
        let { buildJsGraphic } = await import('./graphic');
        jsFeatureTableViewModelCellDblclickEvent.feature = buildJsGraphic(dotNetObject.feature) as any;
    }

    if (hasValue(dotNetObject.fieldName)) {
        jsFeatureTableViewModelCellDblclickEvent.fieldName = dotNetObject.fieldName;
    }
    if (hasValue(dotNetObject.index)) {
        jsFeatureTableViewModelCellDblclickEvent.index = dotNetObject.index;
    }
    if (hasValue(dotNetObject.native)) {
        jsFeatureTableViewModelCellDblclickEvent.native = dotNetObject.native;
    }
    if (hasValue(dotNetObject.objectId)) {
        jsFeatureTableViewModelCellDblclickEvent.objectId = dotNetObject.objectId;
    }
    
    jsObjectRefs[dotNetObject.id] = jsFeatureTableViewModelCellDblclickEvent;
    arcGisObjectRefs[dotNetObject.id] = jsFeatureTableViewModelCellDblclickEvent;
    
    return jsFeatureTableViewModelCellDblclickEvent;
}


export async function buildDotNetFeatureTableViewModelCellDblclickEventGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeatureTableViewModelCellDblclickEvent: any = {};
    
    if (hasValue(jsObject.feature)) {
        let { buildDotNetGraphic } = await import('./graphic');
        dotNetFeatureTableViewModelCellDblclickEvent.feature = buildDotNetGraphic(jsObject.feature, layerId, viewId);
    }
    
    if (hasValue(jsObject.fieldName)) {
        dotNetFeatureTableViewModelCellDblclickEvent.fieldName = jsObject.fieldName;
    }
    
    if (hasValue(jsObject.index)) {
        dotNetFeatureTableViewModelCellDblclickEvent.index = jsObject.index;
    }
    
    if (hasValue(jsObject.native)) {
        dotNetFeatureTableViewModelCellDblclickEvent.native = removeCircularReferences(jsObject.native);
    }
    
    if (hasValue(jsObject.objectId)) {
        dotNetFeatureTableViewModelCellDblclickEvent.objectId = jsObject.objectId;
    }
    
    if (hasValue(jsObject.type)) {
        dotNetFeatureTableViewModelCellDblclickEvent.type = jsObject.type;
    }
    

    return dotNetFeatureTableViewModelCellDblclickEvent;
}

