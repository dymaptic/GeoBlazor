// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetBaseLayerView2DRenderRenderParameters } from './baseLayerView2DRenderRenderParameters';

export async function buildJsBaseLayerView2DRenderRenderParametersGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsBaseLayerView2DRenderRenderParameters: any = {};
    if (hasValue(dotNetObject.state)) {
        let { buildJsViewState } = await import('./viewState');
        jsBaseLayerView2DRenderRenderParameters.state = await buildJsViewState(dotNetObject.state, layerId, viewId) as any;
    }

    if (hasValue(dotNetObject.context)) {
        jsBaseLayerView2DRenderRenderParameters.context = dotNetObject.context;
    }
    if (hasValue(dotNetObject.stationary)) {
        jsBaseLayerView2DRenderRenderParameters.stationary = dotNetObject.stationary;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsBaseLayerView2DRenderRenderParameters);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsBaseLayerView2DRenderRenderParameters;
    
    return jsBaseLayerView2DRenderRenderParameters;
}


export async function buildDotNetBaseLayerView2DRenderRenderParametersGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetBaseLayerView2DRenderRenderParameters: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
    if (hasValue(jsObject.state)) {
        let { buildDotNetViewState } = await import('./viewState');
        dotNetBaseLayerView2DRenderRenderParameters.state = await buildDotNetViewState(jsObject.state);
    }
    if (hasValue(jsObject.context)) {
        dotNetBaseLayerView2DRenderRenderParameters.context = jsObject.context;
    }
    if (hasValue(jsObject.stationary)) {
        dotNetBaseLayerView2DRenderRenderParameters.stationary = jsObject.stationary;
    }

    return dotNetBaseLayerView2DRenderRenderParameters;
}

