// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import StreamConnection from '@arcgis/core/layers/support/StreamConnection';
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId, removeCircularReferences } from './arcGisJsInterop';
import { buildDotNetStreamConnection } from './streamConnection';

export async function buildJsStreamConnectionGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsStreamConnection: any = {};

    
    let jsObjectRef = DotNet.createJSObjectReference(jsStreamConnection);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsStreamConnection;
    
    return jsStreamConnection;
}


export async function buildDotNetStreamConnectionGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetStreamConnection: any = {};
    
    if (hasValue(jsObject.connectionError)) {
        dotNetStreamConnection.connectionError = removeCircularReferences(jsObject.connectionError);
    }
    
    if (hasValue(jsObject.connectionStatus)) {
        dotNetStreamConnection.connectionStatus = removeCircularReferences(jsObject.connectionStatus);
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetStreamConnection.id = geoBlazorId;
    }

    return dotNetStreamConnection;
}

