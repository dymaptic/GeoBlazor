// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetFeatureServiceApplyEditsEditsIdentifierFields } from './featureServiceApplyEditsEditsIdentifierFields';

export async function buildJsFeatureServiceApplyEditsEditsIdentifierFieldsGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(dotNetObject)) {
        return null;
    }

    let jsFeatureServiceApplyEditsEditsIdentifierFields: any = {};

    if (hasValue(dotNetObject.globalIdField)) {
        jsFeatureServiceApplyEditsEditsIdentifierFields.globalIdField = dotNetObject.globalIdField;
    }
    if (hasValue(dotNetObject.objectIdField)) {
        jsFeatureServiceApplyEditsEditsIdentifierFields.objectIdField = dotNetObject.objectIdField;
    }
    
    let jsObjectRef = DotNet.createJSObjectReference(jsFeatureServiceApplyEditsEditsIdentifierFields);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsFeatureServiceApplyEditsEditsIdentifierFields;
    
    return jsFeatureServiceApplyEditsEditsIdentifierFields;
}


export async function buildDotNetFeatureServiceApplyEditsEditsIdentifierFieldsGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetFeatureServiceApplyEditsEditsIdentifierFields: any = {};
    
    if (hasValue(jsObject.globalIdField)) {
        dotNetFeatureServiceApplyEditsEditsIdentifierFields.globalIdField = jsObject.globalIdField;
    }
    
    if (hasValue(jsObject.objectIdField)) {
        dotNetFeatureServiceApplyEditsEditsIdentifierFields.objectIdField = jsObject.objectIdField;
    }
    

    let geoBlazorId = lookupGeoBlazorId(jsObject);
    if (hasValue(geoBlazorId)) {
        dotNetFeatureServiceApplyEditsEditsIdentifierFields.id = geoBlazorId;
    }

    return dotNetFeatureServiceApplyEditsEditsIdentifierFields;
}

