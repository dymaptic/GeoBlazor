// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue, lookupGeoBlazorId } from './arcGisJsInterop';
import { buildDotNetBookmarksBookmarkEditEvent } from './bookmarksBookmarkEditEvent';

export async function buildJsBookmarksBookmarkEditEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsBookmarksBookmarkEditEvent: any = {};
    if (hasValue(dotNetObject.bookmark)) {
        let { buildJsBookmark } = await import('./bookmark');
        jsBookmarksBookmarkEditEvent.bookmark = await buildJsBookmark(dotNetObject.bookmark) as any;
    }

    
    let jsObjectRef = DotNet.createJSObjectReference(jsBookmarksBookmarkEditEvent);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsBookmarksBookmarkEditEvent;
    
    return jsBookmarksBookmarkEditEvent;
}


export async function buildDotNetBookmarksBookmarkEditEventGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let geoBlazorId = lookupGeoBlazorId(jsObject);
    
    let jsComponentRef: any;
    if (hasValue(geoBlazorId)) {
        jsComponentRef = jsObjectRefs[geoBlazorId!];
    } else {
        let { buildJsBookmarksBookmarkEditEvent } = await import('./bookmarksBookmarkEditEvent');
        jsComponentRef = await buildJsBookmarksBookmarkEditEvent(jsObject, layerId, viewId);
    }
    
    let dotNetBookmarksBookmarkEditEvent: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsComponentRef)
    };
    if (hasValue(jsObject.bookmark)) {
        let { buildDotNetBookmark } = await import('./bookmark');
        dotNetBookmarksBookmarkEditEvent.bookmark = await buildDotNetBookmark(jsObject.bookmark);
    }

    return dotNetBookmarksBookmarkEditEvent;
}

