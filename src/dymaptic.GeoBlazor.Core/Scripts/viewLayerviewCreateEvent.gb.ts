// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetViewLayerviewCreateEvent } from './viewLayerviewCreateEvent';

export async function buildJsViewLayerviewCreateEventGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsViewLayerviewCreateEvent: any = {};
    if (hasValue(dotNetObject.layer)) {
        let { buildJsLayer } = await import('./layer');
        jsViewLayerviewCreateEvent.layer = await buildJsLayer(dotNetObject.layer, layerId, viewId) as any;
    }
    if (hasValue(dotNetObject.layerView)) {
        let { buildJsLayerView } = await import('./layerView');
        jsViewLayerviewCreateEvent.layerView = await buildJsLayerView(dotNetObject.layerView, layerId, viewId) as any;
    }

    
    let jsObjectRef = DotNet.createJSObjectReference(jsViewLayerviewCreateEvent);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsViewLayerviewCreateEvent;
    
    return jsViewLayerviewCreateEvent;
}


export async function buildDotNetViewLayerviewCreateEventGenerated(jsObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetViewLayerviewCreateEvent: any = {};
    
    if (hasValue(jsObject.layerView)) {
        let { buildDotNetLayerView } = await import('./layerView');
        dotNetViewLayerviewCreateEvent.layerView = await buildDotNetLayerView(jsObject.layerView);
    }
    

    return dotNetViewLayerviewCreateEvent;
}

