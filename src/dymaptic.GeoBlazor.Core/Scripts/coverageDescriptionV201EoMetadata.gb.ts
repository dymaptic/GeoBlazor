// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .ts file.
import { arcGisObjectRefs, jsObjectRefs, hasValue } from './arcGisJsInterop';
import { buildDotNetCoverageDescriptionV201EoMetadata } from './coverageDescriptionV201EoMetadata';

export async function buildJsCoverageDescriptionV201EoMetadataGenerated(dotNetObject: any, layerId: string | null, viewId: string | null): Promise<any> {
    let jsCoverageDescriptionV201EoMetadata: any = {};
    if (hasValue(dotNetObject.observation)) {
        let { buildJsCoverageDescriptionV201EoMetadataObservation } = await import('./coverageDescriptionV201EoMetadataObservation');
        jsCoverageDescriptionV201EoMetadata.observation = await buildJsCoverageDescriptionV201EoMetadataObservation(dotNetObject.observation, layerId, viewId) as any;
    }

    
    let jsObjectRef = DotNet.createJSObjectReference(jsCoverageDescriptionV201EoMetadata);
    jsObjectRefs[dotNetObject.id] = jsObjectRef;
    arcGisObjectRefs[dotNetObject.id] = jsCoverageDescriptionV201EoMetadata;
    
    return jsCoverageDescriptionV201EoMetadata;
}


export async function buildDotNetCoverageDescriptionV201EoMetadataGenerated(jsObject: any): Promise<any> {
    if (!hasValue(jsObject)) {
        return null;
    }
    
    let dotNetCoverageDescriptionV201EoMetadata: any = {
        jsComponentReference: DotNet.createJSObjectReference(jsObject)
    };
    if (hasValue(jsObject.observation)) {
        let { buildDotNetCoverageDescriptionV201EoMetadataObservation } = await import('./coverageDescriptionV201EoMetadataObservation');
        dotNetCoverageDescriptionV201EoMetadata.observation = await buildDotNetCoverageDescriptionV201EoMetadataObservation(jsObject.observation);
    }

    return dotNetCoverageDescriptionV201EoMetadata;
}

