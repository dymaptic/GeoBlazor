// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Model;

/// <summary>
///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Model.RendererTitle.html">GeoBlazor Docs</a>
///     Describes the schema of the RendererTitle element.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend-support-ActiveLayerInfo.html#RendererTitle">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
/// <param name="Field">
///     The field name used in the renderer.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend-support-ActiveLayerInfo.html#RendererTitle">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="NormByPct">
///     Indicates if a percentage is used in the normalization of the renderer.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend-support-ActiveLayerInfo.html#RendererTitle">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="NormField">
///     If a normalization field is provided to the renderer, this field is also used in the generated title for the renderer in the legend.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend-support-ActiveLayerInfo.html#RendererTitle">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="Title">
///     The title of the renderer as displayed in the legend.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend-support-ActiveLayerInfo.html#RendererTitle">ArcGIS Maps SDK for JavaScript</a>
/// </param>
public partial record RendererTitle(
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    string? Field = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    bool? NormByPct = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    string? NormField = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    string? Title = null);
