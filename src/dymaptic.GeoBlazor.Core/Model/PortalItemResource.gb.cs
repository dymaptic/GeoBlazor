// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Model;

/// <summary>
///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Model.PortalItemResource.html">GeoBlazor Docs</a>
///     A reference to a portal item resource.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItemResource.html">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
/// <param name="Path">
///     Path of the resource relative to `{ITEM}/resources/`.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItemResource.html#path">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="PortalItem">
///     The <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItem.html">portal item</a> that owns the resource.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItemResource.html#portalItem">ArcGIS Maps SDK for JavaScript</a>
/// </param>
public partial record PortalItemResource(
    string? Path = null,
    PortalItem? PortalItem = null)
{
    /// <summary>
    ///     Path of the resource relative to `{ITEM}/resources/`.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItemResource.html#path">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    public string? Path { get; set; } = Path;
    
    /// <summary>
    ///     The <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItem.html">portal item</a> that owns the resource.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItemResource.html#portalItem">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    public PortalItem? PortalItem { get; set; } = PortalItem;
    
    internal IJSObjectReference? JsComponentReference { get; set; }
    internal AbortManager? AbortManager { get; set; }
    
    /// <summary>
    ///     Cancellation Token for async methods.
    /// </summary>
    protected readonly CancellationTokenSource CancellationTokenSource = new();
#region Public Methods

    /// <summary>
    ///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Model.PortalItemResource.html#portalitemresourcefetch-method">GeoBlazor Docs</a>
    ///     Requests the PortalItemResource data in the format specified for the `responseType`.
    ///     param responseType The format of the response.
    ///     param options An object wih the following properties.
    ///     param options.cacheBust If `true`, the browser will send a request to the server instead of using the browser's local cache. If `false`, the browser's default cache handling will be used.
    ///     param options.signal Signal object that can be used to abort the asynchronous task. The returned promise will be rejected with an <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-core-Error.html">Error</a> named `AbortError` when an abort is signaled. See also <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/API/AbortController">AbortController</a> for more information on how to construct a controller that can be used to deliver abort signals.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItemResource.html#fetch">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    /// <param name="responseType">
    ///     The format of the response.
    /// </param>
    /// <param name="options">
    ///     An object wih the following properties.
    /// </param>
    /// <param name="cancellationToken">
    ///     The CancellationToken to cancel an asynchronous operation.
    /// </param>
    [ArcGISMethod]
    public async Task<string?> Fetch(ResponseType responseType,
        PortalItemResourceFetchOptions options,
        CancellationToken cancellationToken = default)
    {
        if (JsComponentReference is null) return null;
        
        IJSObjectReference abortSignal = await AbortManager!.CreateAbortSignal(cancellationToken);
        string? result = await JsComponentReference!.InvokeAsync<string?>(
            "fetch", 
            CancellationTokenSource.Token,
            responseType,
            new { cacheBust = options.CacheBust, signal = abortSignal });
                
        await AbortManager.DisposeAbortController(cancellationToken);
        
        return result;
    }
    
    /// <summary>
    ///     <a target="_blank" href="https://docs.geoblazor.com/pages/classes/dymaptic.GeoBlazor.Core.Model.PortalItemResource.html#portalitemresourceupdate-method">GeoBlazor Docs</a>
    ///     Updates an existing resource with new content.
    ///     param content The resource content.
    ///     param options An object wih the following properties.
    ///     param options.access Indicates the level of access to the resource. The default is "inherit" which causes the resource to have the same access level as the owning item.
    ///     param options.signal Signal object that can be used to abort the asynchronous task. The returned promise will be rejected with an <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-core-Error.html">Error</a> named `AbortError` when an abort is signaled. See also <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/API/AbortController">AbortController</a> for more information on how to construct a controller that can be used to deliver abort signals.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItemResource.html#update">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    /// <param name="content">
    ///     The resource content.
    /// </param>
    /// <param name="options">
    ///     An object wih the following properties.
    /// </param>
    /// <param name="cancellationToken">
    ///     The CancellationToken to cancel an asynchronous operation.
    /// </param>
    [ArcGISMethod]
    public async Task<string?> Update(Stream content,
        PortalItemResourceUpdateOptions options,
        CancellationToken cancellationToken = default)
    {
        if (JsComponentReference is null) return null;
        
        IJSObjectReference abortSignal = await AbortManager!.CreateAbortSignal(cancellationToken);
        string? result = await JsComponentReference!.InvokeAsync<string?>(
            "update", 
            CancellationTokenSource.Token,
            content,
            new { access = options.Access, signal = abortSignal });
                
        await AbortManager.DisposeAbortController(cancellationToken);
        
        return result;
    }
    
#endregion

}
