// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Model;

/// <summary>
///    The TraceConfiguration class provides the ability to configure custom trace properties required to run a network trace. These properties control trace settings for <a href="#traversabilityScope">traversability</a>, <a href="#functions">functions</a>, filters, and <a href="#outputConditions">outputs</a>. The <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/https://pro.arcgis.com/en/pro-app/latest/help/data/utility-network/configure-a-trace.htm">Configure a trace</a> and <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/https://pro.arcgis.com/en/pro-app/latest/tool-reference/utility-networks/add-trace-configuration.htm">Add Trace Configuration (Utility Network)</a> documentation is helpful to learn more about trace configuration parameters.
///    The Trace Configuration differs from the <a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-NamedTraceConfiguration.html">NamedTraceConfiguration</a>. A NamedTraceConfiguration allows for configuring and storing properties on complex traces in a utility network. These configurations are created and stored within the utility network, and can be reused and shared across an organization. The named trace configurations can be referenced by a <a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-networks-support-TraceParameters.html#namedTraceConfigurationGlobalId">globalID</a>.
///    The benefit of using a TraceConfiguration is the ability to configure custom trace properties without having to create and share a new named trace configuration within the utility network. This improves user experience because it does not require users to understand all the details that go into creating an entire named trace configuration. Users can just modify certain trace properties and then execute their own custom trace.
///    In order to achieve this, users can fetch the NamedTraceConfigurations available in the <a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-UtilityNetwork.html#sharedNamedTraceConfigurations">utility network</a> and override it. To override an existing named trace configuration, create a TraceConfiguration instance and assign it to the <a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-NamedTraceConfiguration.html#traceConfiguration">traceConfiguration</a> property of the NamedTraceConfiguration.
/// </summary>
/// <param name="ConditionBarriers">
///     An array of objects representing network attribute or category conditions that serve as barriers.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#conditionBarriers">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="FunctionBarriers">
///     An array of objects representing function barriers.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#functionBarriers">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="Functions">
///     An array of objects representing function.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#functions">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="IgnoreBarriersAtStartingPoints">
///     Do not stop the trace if the starting point is a barrier.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#ignoreBarriersAtStartingPoints">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="IncludeBarriers">
///     Specifies whether the traversability barrier features will be included in the trace results.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#includeBarriers">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="OutputConditions">
///     Specifies the type of features returned based on a network attribute or check for a category string.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#outputConditions">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="ShortestPathNetworkAttributeName">
///     Specifies the network attribute name used for determining the shortest path.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#shortestPathNetworkAttributeName">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="TraversabilityScope">
///     Determines whether traversability is applied to both junctions and edges, junctions only, or edges only.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#traversabilityScope">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="ValidateConsistency">
///     Specifies whether an error will be returned if dirty areas are encountered in any of the traversed features.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-networks-support-TraceConfiguration.html#validateConsistency">ArcGIS Maps SDK for JavaScript</a>
/// </param>
public partial record TraceConfiguration(
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    IReadOnlyCollection<string>? ConditionBarriers = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    IReadOnlyCollection<string>? FunctionBarriers = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    IReadOnlyCollection<string>? Functions = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    bool? IgnoreBarriersAtStartingPoints = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    bool? IncludeBarriers = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    IReadOnlyCollection<string>? OutputConditions = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    string? ShortestPathNetworkAttributeName = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    TraversabilityScope? TraversabilityScope = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    bool? ValidateConsistency = null) : INamedTraceConfigurationTraceConfiguration;
