// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Model;

/// <summary>
///    Describes elevation contained in the pixels that comprise an elevation tile.
///    <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-BaseElevationLayer.html#ElevationTileData">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
/// <param name="Height">
///     The height of the tile in pixels.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-BaseElevationLayer.html#ElevationTileData">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="MaxZError">
///     The maximum allowed error of the Z-value for each value in meters.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-BaseElevationLayer.html#ElevationTileData">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="NoDataValue">
///     Indicating the pixel values where no elevation data is present.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-BaseElevationLayer.html#ElevationTileData">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="Values">
///     The elevation values of each pixel in the tile.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-BaseElevationLayer.html#ElevationTileData">ArcGIS Maps SDK for JavaScript</a>
/// </param>
/// <param name="Width">
///     The width of the tile in pixels.
///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-BaseElevationLayer.html#ElevationTileData">ArcGIS Maps SDK for JavaScript</a>
/// </param>
public partial record ElevationTileData(
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    int? Height = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    double? MaxZError = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    double? NoDataValue = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    IReadOnlyCollection<double>? Values = null,
    [property:JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    int? Width = null);

