#nullable enable
abstract dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataSource.Type.get -> string!
abstract dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer.Type.get -> string!
abstract dymaptic.GeoBlazor.Core.Components.Popups.MediaInfo.Type.get -> string!
abstract dymaptic.GeoBlazor.Core.Components.Popups.PopupContent.Type.get -> string!
abstract dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRamp.ColorRampType.get -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRampType
abstract dymaptic.GeoBlazor.Core.Components.Renderers.Renderer.RendererType.get -> dymaptic.GeoBlazor.Core.Components.Renderers.RendererType
abstract dymaptic.GeoBlazor.Core.Components.Widgets.Domain.Type.get -> string!
abstract dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Type.get -> string!
abstract dymaptic.GeoBlazor.Core.Components.Widgets.FormInput.Type.get -> string!
abstract dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetType.get -> string!
abstract dymaptic.GeoBlazor.Core.Model.LogicComponent.ComponentName.get -> string!
dymaptic.GeoBlazor.Core.Components.ActionBase
dymaptic.GeoBlazor.Core.Components.ActionBase.ActionBase() -> void
dymaptic.GeoBlazor.Core.Components.ActionBase.Active.get -> bool?
dymaptic.GeoBlazor.Core.Components.ActionBase.Active.set -> void
dymaptic.GeoBlazor.Core.Components.ActionBase.CallbackFunction.get -> System.Func<System.Threading.Tasks.Task!>?
dymaptic.GeoBlazor.Core.Components.ActionBase.CallbackFunction.set -> void
dymaptic.GeoBlazor.Core.Components.ActionBase.Disabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.ActionBase.Disabled.set -> void
dymaptic.GeoBlazor.Core.Components.ActionBase.Id.get -> string?
dymaptic.GeoBlazor.Core.Components.ActionBase.Id.set -> void
dymaptic.GeoBlazor.Core.Components.ActionBase.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.ActionBase.Title.set -> void
dymaptic.GeoBlazor.Core.Components.ActionButton
dymaptic.GeoBlazor.Core.Components.ActionButton.ActionButton() -> void
dymaptic.GeoBlazor.Core.Components.ActionButton.ActionButton(string? title = null, string? image = null, string? id = null, System.Func<System.Threading.Tasks.Task!>? callbackFunction = null, string? className = null, bool? active = null, bool? disabled = null, bool? visible = null) -> void
dymaptic.GeoBlazor.Core.Components.ActionButton.ClassName.get -> string?
dymaptic.GeoBlazor.Core.Components.ActionButton.ClassName.set -> void
dymaptic.GeoBlazor.Core.Components.ActionButton.Image.get -> string?
dymaptic.GeoBlazor.Core.Components.ActionButton.Image.set -> void
dymaptic.GeoBlazor.Core.Components.ActionToggle
dymaptic.GeoBlazor.Core.Components.ActionToggle.ActionToggle() -> void
dymaptic.GeoBlazor.Core.Components.ActionToggle.ActionToggle(string? title = null, string? id = null, System.Func<System.Threading.Tasks.Task!>? callbackFunction = null, bool? value = null, bool? active = null, bool? disabled = null, bool? visible = null) -> void
dymaptic.GeoBlazor.Core.Components.ActionToggle.Value.get -> bool?
dymaptic.GeoBlazor.Core.Components.ActionToggle.Value.set -> void
dymaptic.GeoBlazor.Core.Components.ActiveTool
dymaptic.GeoBlazor.Core.Components.ActiveTool.Area = 0 -> dymaptic.GeoBlazor.Core.Components.ActiveTool
dymaptic.GeoBlazor.Core.Components.ActiveTool.DirectLine = 2 -> dymaptic.GeoBlazor.Core.Components.ActiveTool
dymaptic.GeoBlazor.Core.Components.ActiveTool.Distance = 1 -> dymaptic.GeoBlazor.Core.Components.ActiveTool
dymaptic.GeoBlazor.Core.Components.Basemap
dymaptic.GeoBlazor.Core.Components.Basemap.Basemap() -> void
dymaptic.GeoBlazor.Core.Components.Basemap.Layers.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Layers.Layer!>!
dymaptic.GeoBlazor.Core.Components.Basemap.Layers.set -> void
dymaptic.GeoBlazor.Core.Components.Basemap.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Basemap.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Basemap.Style.get -> dymaptic.GeoBlazor.Core.Components.BasemapStyle?
dymaptic.GeoBlazor.Core.Components.Basemap.Style.set -> void
dymaptic.GeoBlazor.Core.Components.BasemapStyle
dymaptic.GeoBlazor.Core.Components.BasemapStyle.BasemapStyle() -> void
dymaptic.GeoBlazor.Core.Components.BasemapStyle.Language.get -> string?
dymaptic.GeoBlazor.Core.Components.BasemapStyle.Language.set -> void
dymaptic.GeoBlazor.Core.Components.BasemapStyle.Name.get -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyle.Name.set -> void
dymaptic.GeoBlazor.Core.Components.BasemapStyle.ServiceUrl.get -> string?
dymaptic.GeoBlazor.Core.Components.BasemapStyle.ServiceUrl.set -> void
dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisChartedTerritory = 24 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisChartedTerritoryBase = 25 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisColoredPencil = 26 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisCommunity = 23 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisDarkGray = 6 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisDarkGrayBase = 7 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisDarkGrayLabels = 8 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHillshadeDark = 33 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHillshadeLight = 32 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHumanGeography = 34 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHumanGeographyBase = 35 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHumanGeographyDark = 38 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHumanGeographyDarkBase = 39 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHumanGeographyDarkDetail = 40 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHumanGeographyDarkLabels = 41 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHumanGeographyDetail = 36 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisHumanGeographyLabels = 37 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisImagery = 0 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisImageryLabels = 2 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisImageryStandard = 1 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisLightGray = 3 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisLightGrayBase = 4 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisLightGrayLabels = 5 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisMidcentury = 30 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisModernAntique = 28 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisModernAntiqueBase = 29 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisNavigation = 9 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisNavigationNight = 10 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisNewspaper = 31 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisNova = 27 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisOceans = 17 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisOceansBase = 18 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisOceansLabels = 19 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisOutdoor = 42 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisStreets = 11 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisStreetsNight = 12 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisStreetsRelief = 13 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisStreetsReliefBase = 14 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisTerrain = 20 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisTerrainBase = 21 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisTerrainDetail = 22 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisTopographic = 15 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.ArcgisTopographicBase = 16 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmBlueprint = 55 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmDarkGray = 52 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmDarkGrayBase = 53 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmDarkGrayLabels = 54 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmHybrid = 56 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmHybridDetail = 57 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmLightGray = 49 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmLightGrayBase = 50 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmLightGrayLabels = 51 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmNavigation = 58 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmNavigationDark = 59 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmStandard = 43 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmStandardRelief = 44 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmStandardReliefBase = 45 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmStreets = 46 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmStreetsRelief = 47 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.BasemapStyleName.OsmStreetsReliefBase = 48 -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName
dymaptic.GeoBlazor.Core.Components.Constraints
dymaptic.GeoBlazor.Core.Components.Constraints.Constraints() -> void
dymaptic.GeoBlazor.Core.Components.Constraints.Geometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Components.Constraints.Geometry.set -> void
dymaptic.GeoBlazor.Core.Components.Constraints.Lods.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.LOD!>?
dymaptic.GeoBlazor.Core.Components.Constraints.Lods.set -> void
dymaptic.GeoBlazor.Core.Components.Constraints.MaxScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Constraints.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Constraints.MaxZoom.get -> double?
dymaptic.GeoBlazor.Core.Components.Constraints.MaxZoom.set -> void
dymaptic.GeoBlazor.Core.Components.Constraints.MinScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Constraints.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Constraints.MinZoom.get -> double?
dymaptic.GeoBlazor.Core.Components.Constraints.MinZoom.set -> void
dymaptic.GeoBlazor.Core.Components.Constraints.RotationEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Constraints.RotationEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Constraints.SnapToZoom.get -> bool?
dymaptic.GeoBlazor.Core.Components.Constraints.SnapToZoom.set -> void
dymaptic.GeoBlazor.Core.Components.CustomOverlay
dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent.get -> Microsoft.AspNetCore.Components.RenderFragment?
dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent.set -> void
dymaptic.GeoBlazor.Core.Components.CustomOverlay.CustomOverlay() -> void
dymaptic.GeoBlazor.Core.Components.CustomOverlay.Position.get -> dymaptic.GeoBlazor.Core.Components.OverlayPosition
dymaptic.GeoBlazor.Core.Components.CustomOverlay.Position.set -> void
dymaptic.GeoBlazor.Core.Components.CustomOverlay.Refresh() -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Clone() -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent!
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Extent() -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Extent(double xmax, double xmin, double ymax, double ymin, double? zmax = null, double? zmin = null, double? mmax = null, double? mmin = null, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? spatialReference = null) -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Mmax.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Mmax.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Mmin.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Mmin.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Xmax.get -> double
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Xmax.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Xmin.get -> double
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Xmin.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Ymax.get -> double
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Ymax.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Ymin.get -> double
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Ymin.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Zmax.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Zmax.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Zmin.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Zmin.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Geometry
dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.Extent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent?
dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.Extent.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.Geometry() -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.SpatialReference.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType
dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType.Mesh = 5 -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType
dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType.Multipatch = 4 -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType
dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType.Multipoint = 1 -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType
dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType.Point = 0 -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType
dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType.Polygon = 3 -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType
dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType.Polyline = 2 -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType
dymaptic.GeoBlazor.Core.Components.Geometries.Point
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Clone() -> dymaptic.GeoBlazor.Core.Components.Geometries.Point!
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Latitude.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Latitude.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Longitude.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Longitude.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Point.M.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Point.M.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Point() -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Point(double? longitude = null, double? latitude = null, double? x = null, double? y = null, double? z = null, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? spatialReference = null, dymaptic.GeoBlazor.Core.Components.Geometries.Extent? extent = null) -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Point.X.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Point.X.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Y.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Y.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Z.get -> double?
dymaptic.GeoBlazor.Core.Components.Geometries.Point.Z.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Polygon
dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.Clone() -> dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!
dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.Polygon() -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.Polygon(dymaptic.GeoBlazor.Core.Objects.MapPath![]! rings, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? spatialReference = null, dymaptic.GeoBlazor.Core.Components.Geometries.Extent? extent = null) -> void
dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.Rings.get -> dymaptic.GeoBlazor.Core.Objects.MapPath![]!
dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.Rings.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine
dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.Clone() -> dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine!
dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.Paths.get -> dymaptic.GeoBlazor.Core.Objects.MapPath![]!
dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.Paths.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.PolyLine() -> void
dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.PolyLine(dymaptic.GeoBlazor.Core.Objects.MapPath![]! paths, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? spatialReference = null, dymaptic.GeoBlazor.Core.Components.Geometries.Extent? extent = null) -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Clone() -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference!
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.ImageCoordinateSystem.get -> object?
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.ImageCoordinateSystem.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsGeographic.get -> bool?
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsGeographic.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWebMercator.get -> bool?
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWebMercator.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWgs84.get -> bool?
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWgs84.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWrappable.get -> bool?
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWrappable.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.SpatialReference() -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.SpatialReference(int wkid) -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkid.get -> int?
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkid.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkt.get -> string?
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkt.set -> void
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkt2.get -> string?
dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkt2.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.AnalyticsCapability
dymaptic.GeoBlazor.Core.Components.Layers.AnalyticsCapability.AnalyticsCapability(bool SupportsCacheHint) -> void
dymaptic.GeoBlazor.Core.Components.Layers.AnalyticsCapability.SupportsCacheHint.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.AnalyticsCapability.SupportsCacheHint.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.Attachment
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.Attachment() -> void
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.ContentType.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.ContentType.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.Data.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.Data.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.GlobalId.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.GlobalId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.Name.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.Name.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.UploadId.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Attachment.UploadId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.AttachmentCapability(bool SupportsCacheHint, bool SupportsContentType, bool SupportsExifInfo, bool SupportsKeywords, bool SupportsName, bool SupportsSize, bool SupportsResize) -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsCacheHint.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsCacheHint.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsContentType.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsContentType.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsExifInfo.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsExifInfo.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsKeywords.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsKeywords.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsName.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsName.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsResize.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsResize.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsSize.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability.SupportsSize.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.Attachment.get -> dymaptic.GeoBlazor.Core.Components.Layers.Attachment!
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.Attachment.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.AttachmentEdit(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! feature, dymaptic.GeoBlazor.Core.Components.Layers.Attachment! attachment) -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.AttachmentEdit(int objectId, dymaptic.GeoBlazor.Core.Components.Layers.Attachment! attachment) -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.AttachmentEdit(string! globalId, dymaptic.GeoBlazor.Core.Components.Layers.Attachment! attachment) -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.Feature.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic?
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.Feature.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.GlobalId.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.GlobalId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.ObjectId.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit.ObjectId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.BaseTileLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.BaseTileLayer(dymaptic.GeoBlazor.Core.Components.Layers.BlendMode? blendMode = null, dymaptic.GeoBlazor.Core.Components.Layers.Effect? effect = null, double? maxScale = null, double? minScale = null, double? refreshInterval = null, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? spatialReference = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.BlendMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.BlendMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.Effect.get -> dymaptic.GeoBlazor.Core.Components.Layers.Effect?
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.Effect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.GetTileBounds(int level, int row, int col) -> System.Threading.Tasks.Task<double[]!>!
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.GetTileBoundsAsExtent(int level, int row, int col) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Extent!>!
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.GetTileInfo() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.TileInfo?>!
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.MaxScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.MinScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.RefreshInterval.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.RefreshInterval.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.SetEffect(dymaptic.GeoBlazor.Core.Components.Layers.Effect! effect) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.SpatialReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle
dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle.Aerial = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle
dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle.Hybrid = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle
dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle.Road = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.BingMapsLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.BingMapsLayer(string! key, dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle? style = null, dymaptic.GeoBlazor.Core.Components.Layers.BlendMode? blendMode = null, dymaptic.GeoBlazor.Core.Components.Layers.Effect? effect = null, double? maxScale = null, double? minScale = null, double? refreshInterval = null, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? spatialReference = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.Culture.get -> System.Globalization.CultureInfo?
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.Culture.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.GetBingLogo() -> System.Threading.Tasks.Task<string!>!
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.GetCopyright() -> System.Threading.Tasks.Task<string!>!
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.HasAttributionData() -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.Key.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.Key.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.Region.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.Region.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.Style.get -> dymaptic.GeoBlazor.Core.Components.Layers.BingImageryStyle?
dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.Style.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Average = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Color = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.ColorBurn = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.ColorDodge = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Darken = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.DestinationAtop = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.DestinationIn = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.DestinationOut = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.DestinationOver = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Difference = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Exclusion = 10 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.HardLight = 11 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Hue = 12 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Invert = 13 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Lighten = 14 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Lighter = 15 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Luminosity = 16 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Minus = 17 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Multiply = 18 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Normal = 19 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Overlay = 20 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Plus = 21 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Reflect = 22 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Saturation = 23 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Screen = 24 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.SoftLight = 25 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.SourceAtop = 26 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.SourceIn = 27 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.SourceOut = 28 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.VividLight = 29 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.BlendMode.Xor = 30 -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop.Color.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop.Color.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop.ColorStop() -> void
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop.ColorStop(double value, dymaptic.GeoBlazor.Core.Objects.MapColor! color, string? label = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop.Value.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.ColorStop.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable
dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.ColorVariable() -> void
dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.ColorVariable(string! field, string? normalizationField = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.ColorStop!>? stops = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.NormalizationField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.NormalizationField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.Stops.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.ColorStop!>?
dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.Stops.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CreatePopupTemplateOptions
dymaptic.GeoBlazor.Core.Components.Layers.CreatePopupTemplateOptions.CreatePopupTemplateOptions() -> void
dymaptic.GeoBlazor.Core.Components.Layers.CreatePopupTemplateOptions.IgnoreFieldTypes.get -> string![]?
dymaptic.GeoBlazor.Core.Components.Layers.CreatePopupTemplateOptions.IgnoreFieldTypes.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CreatePopupTemplateOptions.VisibleFieldNames.get -> System.Collections.Generic.HashSet<string!>?
dymaptic.GeoBlazor.Core.Components.Layers.CreatePopupTemplateOptions.VisibleFieldNames.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter
dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter.Comma = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter
dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter.Pipe = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter
dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter.Semicolon = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter
dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter.Space = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter
dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter.TabDelimited = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.BlendMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.BlendMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Copyright.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Copyright.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.CSVLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.CSVLayer(string! url, string? title = null, string? copyright = null, double? opacity = null, bool? visible = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null, dymaptic.GeoBlazor.Core.Components.Layers.BlendMode? blendMode = null, dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate? popupTemplate = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Delimiter.get -> dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter?
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Delimiter.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.DisplayField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.DisplayField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.PopupTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Renderer.get -> dymaptic.GeoBlazor.Core.Components.Renderers.Renderer?
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Renderer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.DataCapability(bool IsVersioned, bool SupportsAttachment, bool SupportsM, bool SupportsZ) -> void
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.IsVersioned.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.IsVersioned.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.SupportsAttachment.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.SupportsAttachment.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.SupportsM.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.SupportsM.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.SupportsZ.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.DataCapability.SupportsZ.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.DeconflictionStrategy
dymaptic.GeoBlazor.Core.Components.Layers.DeconflictionStrategy.None = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.DeconflictionStrategy
dymaptic.GeoBlazor.Core.Components.Layers.DeconflictionStrategy.Static = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.DeconflictionStrategy
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Arrow = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.AutoCompletePolygon = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Circle = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.DownArrow = 14 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Ellipse = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Freehand = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.LeftArrow = 11 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Line = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.None = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Point = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Polygon = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Rectangle = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.RightArrow = 12 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.Triangle = 10 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool.UpArrow = 13 -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.DataSource.get -> dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataSource?
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.DataSource.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.DynamicDataLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.DynamicDataLayer(dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataSource! dataSource, System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField!>? fields = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.Fields.get -> System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField!>!
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.Fields.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataSource
dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataSource.DynamicDataSource() -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicJoinType
dymaptic.GeoBlazor.Core.Components.Layers.DynamicJoinType.LeftInnerJoin = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.DynamicJoinType
dymaptic.GeoBlazor.Core.Components.Layers.DynamicJoinType.LeftOuterJoin = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.DynamicJoinType
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer.DynamicLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField.Alias.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField.Alias.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField.DynamicLayerField() -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField.DynamicLayerField(string! name, string? alias = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField.Name.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayerField.Name.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicMapLayer
dymaptic.GeoBlazor.Core.Components.Layers.DynamicMapLayer.DynamicMapLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicMapLayer.DynamicMapLayer(int mapLayerId, string? gdbVersion = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicMapLayer.GdbVersion.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.DynamicMapLayer.GdbVersion.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.DynamicMapLayer.MapLayerId.get -> int
dymaptic.GeoBlazor.Core.Components.Layers.DynamicMapLayer.MapLayerId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureResult
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureResult.EditedFeatureResult(long? LayerId, dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures? EditedFeatures) -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureResult.EditedFeatures.get -> dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures?
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureResult.EditedFeatures.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureResult.LayerId.get -> long?
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureResult.LayerId.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.Adds.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]!
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.Adds.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.Deletes.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]!
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.Deletes.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.EditedFeatures(dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]! Adds, dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureUpdate![]! Updates, dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]! Deletes, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! SpatialReference) -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference!
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.SpatialReference.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.Updates.get -> dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureUpdate![]!
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatures.Updates.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureUpdate
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureUpdate.Current.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]!
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureUpdate.Current.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureUpdate.EditedFeatureUpdate(dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]! Original, dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]! Current) -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureUpdate.Original.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]!
dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureUpdate.Original.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditError
dymaptic.GeoBlazor.Core.Components.Layers.EditError.EditError(string? Name, string? Message) -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditError.Message.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.EditError.Message.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditError.Name.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.EditError.Name.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.EditingCapability(bool SupportsDeleteByAnonymous, bool SupportsDeleteByOthers, bool SupportsGeometryUpdate, bool SupportsGlobalId, bool SupportsRollbackOnFailure, bool SupportsUpdateByAnonymous, bool SupportsUpdateByOthers, bool SupportsUploadWithItemId, bool SupportsUpdateWithoutM) -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsDeleteByAnonymous.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsDeleteByAnonymous.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsDeleteByOthers.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsDeleteByOthers.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsGeometryUpdate.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsGeometryUpdate.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsGlobalId.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsGlobalId.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsRollbackOnFailure.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsRollbackOnFailure.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsUpdateByAnonymous.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsUpdateByAnonymous.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsUpdateByOthers.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsUpdateByOthers.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsUpdateWithoutM.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsUpdateWithoutM.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsUploadWithItemId.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability.SupportsUploadWithItemId.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.Effect
dymaptic.GeoBlazor.Core.Components.Layers.Effect.Effect() -> void
dymaptic.GeoBlazor.Core.Components.Layers.Effect.Effect(string! value, double? scale = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.Effect.Scale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.Effect.Scale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Effect.Value.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Effect.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer
dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.ElevationLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult
dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult.Count.get -> int
dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult.Count.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult.Extent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent!
dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult.Extent.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult.ExtentQueryResult(int Count, dymaptic.GeoBlazor.Core.Components.Geometries.Extent! Extent) -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.FeatureEditOptions() -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.GdbVersion.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.GdbVersion.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.GlobalIdUsed.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.GlobalIdUsed.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.ReturnEditMoment.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.ReturnEditMoment.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.ReturnServiceEditsOption.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.ReturnServiceEditsOption.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.RollbackOnFailureEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions.RollbackOnFailureEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult.Error.get -> dymaptic.GeoBlazor.Core.Components.Layers.EditError?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult.Error.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult.FeatureEditResult(long? ObjectId, string? GlobalId, dymaptic.GeoBlazor.Core.Components.Layers.EditError? Error) -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult.GlobalId.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult.GlobalId.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult.ObjectId.get -> long?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult.ObjectId.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.AddAttachments.get -> System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.AddAttachments.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.AddFeatures.get -> System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.AddFeatures.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.DeleteAttachments.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.DeleteAttachments.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.DeleteFeatures.get -> System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.DeleteFeatures.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.FeatureEdits() -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.UpdateAttachments.get -> System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.AttachmentEdit!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.UpdateAttachments.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.UpdateFeatures.get -> System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits.UpdateFeatures.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.AddAttachmentResults.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.AddAttachmentResults.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.AddFeatureResults.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.AddFeatureResults.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.Concat(dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult? other) -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.DeleteAttachmentResults.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.DeleteAttachmentResults.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.DeleteFeatureResults.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.DeleteFeatureResults.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.EditedFeatureResults.get -> dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureResult![]?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.EditedFeatureResults.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.EditMoment.get -> long?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.EditMoment.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.FeatureEditsResult(dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]! AddFeatureResults, dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]! UpdateFeatureResults, dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]! DeleteFeatureResults, dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]! AddAttachmentResults, dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]! UpdateAttachmentResults, dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]! DeleteAttachmentResults, dymaptic.GeoBlazor.Core.Components.Layers.EditedFeatureResult![]? EditedFeatureResults, long? EditMoment) -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.UpdateAttachmentResults.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.UpdateAttachmentResults.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.UpdateFeatureResults.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditResult![]!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult.UpdateFeatureResults.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.ExcludedEffect.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Layers.Effect!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.ExcludedEffect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.ExcludedLabelsVisible.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.ExcludedLabelsVisible.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.FeatureEffect() -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.Filter.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.Filter.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.IncludedEffect.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Layers.Effect!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect.IncludedEffect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.Distance.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.Distance.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.FeatureFilter() -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.Geometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.Geometry.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.ObjectIds.get -> System.Collections.Generic.IEnumerable<int>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.ObjectIds.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.SpatialRelationship.get -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.SpatialRelationship.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.TimeExtent.get -> dymaptic.GeoBlazor.Core.Objects.TimeExtent?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.TimeExtent.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.Units.get -> dymaptic.GeoBlazor.Core.Objects.LinearUnit?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.Units.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.Where.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter.Where.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Add(dymaptic.GeoBlazor.Core.Components.Layers.Field! field) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Add(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! graphic) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Add(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ApiKey.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ApiKey.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ApplyEdits(dymaptic.GeoBlazor.Core.Components.Layers.FeatureEdits! edits, dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditOptions? options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.FeatureEditsResult!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.BlendMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.BlendMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Clone() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.CreatePopupTemplate(dymaptic.GeoBlazor.Core.Components.Layers.CreatePopupTemplateOptions? options = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.CreateQuery() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.Query!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.DefinitionExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.DefinitionExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Effect.get -> dymaptic.GeoBlazor.Core.Components.Layers.Effect?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Effect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.FeatureLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.FeatureLayer(string? url = null, dymaptic.GeoBlazor.Core.Components.PortalItem? portalItem = null, System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>? source = null, string![]? outFields = null, string? definitionExpression = null, double? minScale = null, double? maxScale = null, string? objectIdField = null, dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType? geometryType = null, string? title = null, double? opacity = null, bool? visible = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null, dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate? popupTemplate = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Fields.get -> System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Layers.Field!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Fields.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.FormTemplate.get -> dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.FormTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.GeometryType.get -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.GeometryType.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.GetCapabilities() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.GetFeatureType(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! feature) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.FeatureType?>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.GetField(string! fieldName) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.Field?>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.GetFieldDomain(string! fieldName, dymaptic.GeoBlazor.Core.Components.Layers.Graphic? feature = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.Domain?>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.LabelingInfo.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Layers.Label!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.LabelingInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.LegendEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.LegendEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.MaxScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.MinScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ObjectIdField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ObjectIdField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OnQueryFeaturesStreamCallback(Microsoft.JSInterop.IJSStreamReference! streamReference, System.Guid queryId) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OnQueryRelatedFeaturesStreamCallback(Microsoft.JSInterop.IJSStreamReference! streamReference, System.Guid queryId, string! objectId) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OrderBy.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OrderBy.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OutFields.get -> string![]?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OutFields.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.PopupEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.PopupEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.PopupTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryExtent(dymaptic.GeoBlazor.Core.Objects.Query? query = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryFeatureCount(dymaptic.GeoBlazor.Core.Objects.Query? query = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<int>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryFeatures(dymaptic.GeoBlazor.Core.Objects.Query? query = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet?>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryObjectIds(dymaptic.GeoBlazor.Core.Objects.Query! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<int[]!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryRelatedFeatures(dymaptic.GeoBlazor.Core.Objects.RelationshipQuery! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet?>?>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryRelatedFeaturesCount(dymaptic.GeoBlazor.Core.Objects.RelationshipQuery! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, int>!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryTopFeatureCount(dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<int>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryTopFeatures(dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet?>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryTopFeaturesExtent(dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery? query = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.QueryTopObjectIds(dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<int[]!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Relationships.get -> dymaptic.GeoBlazor.Core.Objects.Relationship![]?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Relationships.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Remove(dymaptic.GeoBlazor.Core.Components.Layers.Field! field) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Renderer.get -> dymaptic.GeoBlazor.Core.Components.Renderers.Renderer?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Renderer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.SetEffect(dymaptic.GeoBlazor.Core.Components.Layers.Effect! effect) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.SetPopupTemplate(dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate! template) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Source.get -> System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Source.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.SpatialReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.TimeInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.TimeInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Analytics.get -> dymaptic.GeoBlazor.Core.Components.Layers.AnalyticsCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Analytics.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Attachment.get -> dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Attachment.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Data.get -> dymaptic.GeoBlazor.Core.Components.Layers.DataCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Data.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Editing.get -> dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Editing.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.FeatureLayerCapabilities(dymaptic.GeoBlazor.Core.Components.Layers.AnalyticsCapability! Analytics, dymaptic.GeoBlazor.Core.Components.Layers.AttachmentCapability! Attachment, dymaptic.GeoBlazor.Core.Components.Layers.DataCapability! Data, dymaptic.GeoBlazor.Core.Components.Layers.EditingCapability! Editing, dymaptic.GeoBlazor.Core.Components.Layers.MetadataCapability! Metadata, dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability! Operations, dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability! Query, dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability! QueryRelated, dymaptic.GeoBlazor.Core.Components.Layers.QueryTopFeaturesCapability! QueryTopFeatures) -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Metadata.get -> dymaptic.GeoBlazor.Core.Components.Layers.MetadataCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Metadata.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Operations.get -> dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Operations.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Query.get -> dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.Query.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.QueryRelated.get -> dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.QueryRelated.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.QueryTopFeatures.get -> dymaptic.GeoBlazor.Core.Components.Layers.QueryTopFeaturesCapability!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerCapabilities.QueryTopFeatures.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.CreateQuery() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.Query!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.FeatureEffect.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.Filter.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.Highlight(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! graphic) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.Highlight(int objectId) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.Highlight(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.Highlight(System.Collections.Generic.IEnumerable<int>! objectIds) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.OnQueryFeaturesStreamCallback(Microsoft.JSInterop.IJSStreamReference! streamReference, System.Guid queryId) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.QueryExtent(dymaptic.GeoBlazor.Core.Objects.Query! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.ExtentQueryResult!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.QueryFeatureCount(dymaptic.GeoBlazor.Core.Objects.Query? query = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<int>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.QueryFeatures(dymaptic.GeoBlazor.Core.Objects.Query? query = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet?>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.QueryObjectIds(dymaptic.GeoBlazor.Core.Objects.Query! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<int[]!>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.SetFeatureEffect(dymaptic.GeoBlazor.Core.Components.Layers.FeatureEffect? featureEffect) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayerView.SetFilter(dymaptic.GeoBlazor.Core.Components.Layers.FeatureFilter? filter) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.DisplayFieldName.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.DisplayFieldName.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.ExceededTransferLimit.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.ExceededTransferLimit.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.Features.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.Features.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.FeatureSet() -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.Fields.get -> dymaptic.GeoBlazor.Core.Components.Layers.Field![]?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.Fields.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.GeometryType.get -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.GeometryType.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.QueryGeometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.QueryGeometry.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet.SpatialReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.Description.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.Description.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.DrawingTool.get -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.DrawingTool.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.FeatureTemplate(string! Name, string! Description, dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool DrawingTool, dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail! Thumbnail, dymaptic.GeoBlazor.Core.Components.Layers.Graphic! Prototype) -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.Name.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.Name.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.Prototype.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.Prototype.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.Thumbnail.get -> dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate.Thumbnail.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.Domains.get -> System.Collections.Generic.Dictionary<string!, dymaptic.GeoBlazor.Core.Components.Widgets.Domain?>!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.Domains.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.FeatureType(string! Id, string! Name, dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate![]! Templates, System.Collections.Generic.Dictionary<string!, dymaptic.GeoBlazor.Core.Components.Widgets.Domain?>! Domains) -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.Id.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.Id.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.Name.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.Name.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.Templates.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureTemplate![]!
dymaptic.GeoBlazor.Core.Components.Layers.FeatureType.Templates.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field
dymaptic.GeoBlazor.Core.Components.Layers.Field.Alias.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Field.Alias.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.DefaultValue.get -> object?
dymaptic.GeoBlazor.Core.Components.Layers.Field.DefaultValue.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Field.Description.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Domain.get -> dymaptic.GeoBlazor.Core.Components.Widgets.Domain?
dymaptic.GeoBlazor.Core.Components.Layers.Field.Domain.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Editable.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Field.Editable.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Field() -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Field(dymaptic.GeoBlazor.Core.Components.Layers.FieldType type, string? name = null, string? alias = null, string? description = null, int? length = null, bool? editable = null, bool? nullable = null, object? defaultValue = null, dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType? valueType = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Length.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.Field.Length.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Name.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Field.Name.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Nullable.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Field.Nullable.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.Type.get -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.Field.Type.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Field.ValueType.get -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType?
dymaptic.GeoBlazor.Core.Components.Layers.Field.ValueType.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.DateFields.get -> dymaptic.GeoBlazor.Core.Components.Layers.Field![]?
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.DateFields.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.FieldsIndex() -> void
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.Get(string! fieldName) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.Field!>!
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.GetTimeZone(string! fieldName) -> System.Threading.Tasks.Task<string?>!
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.Has(string! fieldName) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.IsDateField(string! fieldName) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.JsFieldsReference.get -> Microsoft.JSInterop.IJSObjectReference!
dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex.JsFieldsReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.BigInteger = 14 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Blob = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Date = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.DateOnly = 15 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Double = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Geometry = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.GlobalId = 12 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Guid = 11 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Integer = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Long = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Oid = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Raster = 10 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Single = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.SmallInteger = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.String = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.TimeOnly = 16 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.TimestampOffset = 17 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldType.Xml = 13 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.Binary = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.Coordinate = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.CountOrAmount = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.DateAndTime = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.Description = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.LocationOrPlaceName = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.Measurement = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.NameOrTitle = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.None = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.OrderedOrRanked = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.PercentageOrRatio = 10 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.TypeOrCategory = 11 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType.UniqueIdentifier = 12 -> dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Copyright.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Copyright.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.GeoJSONLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.GeoJSONLayer(string? url = null, string? copyright = null, string? title = null, double? opacity = null, bool? visible = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.PopupTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Renderer.get -> dymaptic.GeoBlazor.Core.Components.Renderers.Renderer?
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Renderer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.SpatialReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer
dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.GeoRSSLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.GeoRSSLayer(string! url, string? title = null, double? opacity = null, bool? visible = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Graphic
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.Attributes.get -> dymaptic.GeoBlazor.Core.Objects.AttributesDictionary!
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.Attributes.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.Geometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.GetGeometry() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?>!
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.GetPopupTemplate() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?>!
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.Graphic() -> void
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.Graphic(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry? geometry = null, dymaptic.GeoBlazor.Core.Components.Symbols.Symbol? symbol = null, dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate? popupTemplate = null, dymaptic.GeoBlazor.Core.Objects.AttributesDictionary? attributes = null, bool? visible = null, string? legendLabel = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.LayerId.get -> System.Guid?
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.LayerId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.LegendLabel.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.LegendLabel.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.SetGeometry(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.Graphic.SetPopupTemplate(dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate! popupTemplate) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Add(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! graphic) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Add(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.BlendMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.BlendMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Clear() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Effect.get -> dymaptic.GeoBlazor.Core.Components.Layers.Effect?
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Effect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Graphics.get -> System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>!
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Graphics.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.GraphicsLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.GraphicsLayer(System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>? graphics = null, string? title = null, double? opacity = null, bool? visible = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null, bool? persistenceEnabled = null, double? minScale = null, double? maxScale = null, bool? screenSizePerspectiveEnabled = null, dymaptic.GeoBlazor.Core.Components.Layers.BlendMode? blendMode = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.MaxScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.MinScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.RegisterExistingGraphicsFromJavaScript(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics) -> void
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Remove(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! graphic) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.Remove(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.ScreenSizePerspectiveEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.ScreenSizePerspectiveEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle
dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle.HighlightHandle(Microsoft.JSInterop.IJSObjectReference! JsObjectReference) -> void
dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle.JsObjectReference.get -> Microsoft.JSInterop.IJSObjectReference!
dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle.JsObjectReference.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.HighlightHandle.Remove() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Bmp = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Gif = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Jpg = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Jpgpng = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Lerc = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Png = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Png24 = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Png32 = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Png8 = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat.Tiff = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.BandIds.get -> System.Collections.Generic.IReadOnlyCollection<int>?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.BandIds.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.BlendMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.BlendMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.CompressionQuality.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.CompressionQuality.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.CompressionTolerance.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.CompressionTolerance.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Copyright.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Copyright.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.CustomParameters.get -> System.Collections.Generic.Dictionary<string!, object!>?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.CustomParameters.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.DefinitionExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.DefinitionExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Effect.get -> dymaptic.GeoBlazor.Core.Components.Layers.Effect?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Effect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Format.get -> dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Format.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.HasMultidimensions.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.HasMultidimensions.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.ImageMaxHeight.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.ImageMaxHeight.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.ImageMaxWidth.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.ImageMaxWidth.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.ImageryLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.ImageryLayer(string? url = null, dymaptic.GeoBlazor.Core.Components.PortalItem? portalItem = null, dymaptic.GeoBlazor.Core.Components.Renderers.IImageryRenderer? renderer = null, System.Collections.Generic.IReadOnlyCollection<int>? bandIds = null, dymaptic.GeoBlazor.Core.Components.Layers.BlendMode? blendMode = null, int? compressionQuality = null, double? compressionTolerance = null, string? copyright = null, string? definitionExpression = null, dymaptic.GeoBlazor.Core.Components.Layers.Effect? effect = null, dymaptic.GeoBlazor.Core.Components.Layers.ImageFormat? format = null, bool? hasMultidimensions = null, int? imageMaxHeight = null, int? imageMaxWidth = null, int? interpolation = null, bool? legendEnabled = null, int? maxScale = null, int? minScale = null, System.Collections.Generic.IReadOnlyCollection<int>? noData = null, string? noDataInterpretation = null, string? objectIdField = null, bool? persistenceEnabled = null, dymaptic.GeoBlazor.Core.Components.Layers.PixelType? pixelType = null, bool? popupEnabled = null, double? refreshInterval = null, bool? useViewTime = null, dymaptic.GeoBlazor.Core.Components.Layers.TileInfo? tileInfo = null, dymaptic.GeoBlazor.Core.Objects.TimeExtent? timeExtent = null, dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo? timeInfo = null, dymaptic.GeoBlazor.Core.Objects.TimeInterval? timeOffset = null, string? title = null, double? opacity = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null, bool? visible = null, System.Collections.Generic.Dictionary<string!, object!>? customParameters = null, dymaptic.GeoBlazor.Core.Components.Geometries.Extent? fullExtent = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Interpolation.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Interpolation.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.LegendEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.LegendEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.MaxScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.MinScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.NoData.get -> System.Collections.Generic.IReadOnlyCollection<int>?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.NoData.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.NoDataInterpretation.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.NoDataInterpretation.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.ObjectIdField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.ObjectIdField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.PixelType.get -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.PixelType.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.PopupEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.PopupEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.RefreshInterval.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.RefreshInterval.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Renderer.get -> dymaptic.GeoBlazor.Core.Components.Renderers.IImageryRenderer?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Renderer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.TileInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfo?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.TileInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.TimeExtent.get -> dymaptic.GeoBlazor.Core.Objects.TimeExtent?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.TimeExtent.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.TimeInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.TimeInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.TimeOffset.get -> dymaptic.GeoBlazor.Core.Objects.TimeInterval?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.TimeOffset.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.UseViewTime.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.UseViewTime.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.BandIds.get -> System.Collections.Generic.IReadOnlyCollection<int>?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.BandIds.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.BlendMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.BlendMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Copyright.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Copyright.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.CustomParameters.get -> System.Collections.Generic.Dictionary<string!, object!>?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.CustomParameters.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Effect.get -> dymaptic.GeoBlazor.Core.Components.Layers.Effect?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Effect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.GetServiceRasterInfo() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo?>!
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.ImageryTileLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.ImageryTileLayer(string? url = null, dymaptic.GeoBlazor.Core.Components.PortalItem? portalItem = null, dymaptic.GeoBlazor.Core.Components.Renderers.IImageryRenderer? renderer = null, System.Collections.Generic.IReadOnlyCollection<int>? bandIds = null, dymaptic.GeoBlazor.Core.Components.Layers.BlendMode? blendMode = null, string? copyright = null, dymaptic.GeoBlazor.Core.Components.Layers.Effect? effect = null, dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation? interpolation = null, bool? legendEnabled = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null, int? maxScale = null, int? minScale = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition!>? multidimensionalDefinition = null, dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset? multidimensionalSubset = null, bool? persistenceEnabled = null, bool? popupEnabled = null, dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate? popupTemplate = null, bool? useViewTime = null, System.Collections.Generic.Dictionary<string!, object!>? customParameters = null, double? opacity = null, string? title = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Interpolation.get -> dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Interpolation.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.LegendEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.LegendEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.MaxScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.MinScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.MultidimensionalDefinition.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition!>!
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.MultidimensionalDefinition.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.MultidimensionalSubset.get -> dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.MultidimensionalSubset.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.PopupEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.PopupEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.PopupTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Renderer.get -> dymaptic.GeoBlazor.Core.Components.Renderers.IImageryRenderer?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Renderer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.SetRenderer(dymaptic.GeoBlazor.Core.Components.Renderers.IImageryRenderer! renderer) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.TileInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfo?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.TileInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.TimeExtent.get -> dymaptic.GeoBlazor.Core.Objects.TimeExtent?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.TimeExtent.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.TimeInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.TimeInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.TimeOffset.get -> dymaptic.GeoBlazor.Core.Objects.TimeInterval?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.TimeOffset.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.UseViewTime.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.UseViewTime.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.IPopupTemplateLayer
dymaptic.GeoBlazor.Core.Components.Layers.IPopupTemplateLayer.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Components.Layers.IPopupTemplateLayer.PopupTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.JoinTableDataSource() -> void
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.JoinTableDataSource(string! leftTableKey, string! rightTableKey, dymaptic.GeoBlazor.Core.Components.Layers.DynamicJoinType joinType, dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer! leftTableSource, dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer! rightTableSource) -> void
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.JoinType.get -> dymaptic.GeoBlazor.Core.Components.Layers.DynamicJoinType?
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.JoinType.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.LeftTableKey.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.LeftTableKey.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.LeftTableSource.get -> dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer?
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.LeftTableSource.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.RightTableKey.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.RightTableKey.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.RightTableSource.get -> dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer?
dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.RightTableSource.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer
dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.KMLLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.KMLLayer(string? url = null, dymaptic.GeoBlazor.Core.Components.PortalItem? portalItem = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label
dymaptic.GeoBlazor.Core.Components.Layers.Label.DeconflictionStrategy.get -> dymaptic.GeoBlazor.Core.Components.Layers.DeconflictionStrategy?
dymaptic.GeoBlazor.Core.Components.Layers.Label.DeconflictionStrategy.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.Label() -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.Label(dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement? labelPlacement = null, string? labelExpression = null, dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo? labelExpressionInfo = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelExpressionInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo?
dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelExpressionInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelPlacement.get -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement?
dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelPlacement.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelPosition.get -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPosition?
dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelPosition.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.MaxScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.Label.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.MinScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.Label.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.RepeatLabel.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Label.RepeatLabel.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.RepeatLabelDistance.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Layers.Label.RepeatLabelDistance.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.UseCodedValues.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Label.UseCodedValues.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Label.Where.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Label.Where.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo
dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.Expression.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.Expression.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.LabelExpressionInfo() -> void
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AboveAfter = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AboveAlong = 10 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AboveBefore = 11 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AboveCenter = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AboveEnd = 13 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AboveLeft = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AboveRight = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AboveStart = 12 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.AlwaysHorizontal = 24 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.BelowAfter = 14 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.BelowAlong = 15 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.BelowBefore = 16 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.BelowCenter = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.BelowEnd = 18 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.BelowLeft = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.BelowRight = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.BelowStart = 17 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.CenterAfter = 19 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.CenterAlong = 20 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.CenterBefore = 21 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.CenterCenter = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.CenterEnd = 23 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.CenterLeft = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.CenterRight = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement.CenterStart = 22 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
dymaptic.GeoBlazor.Core.Components.Layers.LabelPosition
dymaptic.GeoBlazor.Core.Components.Layers.LabelPosition.Curved = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPosition
dymaptic.GeoBlazor.Core.Components.Layers.LabelPosition.Parallel = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPosition
dymaptic.GeoBlazor.Core.Components.Layers.Layer
dymaptic.GeoBlazor.Core.Components.Layers.Layer.AbortManager.get -> dymaptic.GeoBlazor.Core.Objects.AbortManager?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.AbortManager.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.FullExtent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.FullExtent.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.Imported.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.Layer.Imported.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.IsBasemapReferenceLayer.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.IsBasemapReferenceLayer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.JsLayerReference.get -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.JsLayerReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.Layer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.LayerChanged -> bool
dymaptic.GeoBlazor.Core.Components.Layers.Layer.LayerView.get -> dymaptic.GeoBlazor.Core.Components.Layers.LayerView?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.LayerView.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.ListMode?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.Load(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.PersistenceEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.PersistenceEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Layer.SetProperty(string! propertyName, object? value) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerFloorInfo
dymaptic.GeoBlazor.Core.Components.Layers.LayerFloorInfo.FloorField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.LayerFloorInfo.FloorField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerFloorInfo.LayerFloorInfo() -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerFloorInfo.LayerFloorInfo(string! floorField) -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerObject
dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.LayerJsModule.get -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.LayerObject() -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.Symbol.get -> dymaptic.GeoBlazor.Core.Components.Symbols.Symbol?
dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.Symbol.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.UpdateSymbol -> bool
dymaptic.GeoBlazor.Core.Components.Layers.LayerView
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.CancellationTokenSource -> System.Threading.CancellationTokenSource!
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Dispose() -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.JsObjectReference.get -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.JsObjectReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Layer.get -> dymaptic.GeoBlazor.Core.Components.Layers.Layer!
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Layer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.LayerView() -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.SpatialReferenceSupported.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.SpatialReferenceSupported.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Suspended.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Suspended.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Updating.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Updating.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Visible.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.LayerView.Visible.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions
dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.LegendOptions() -> void
dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.ShowLegend.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.ShowLegend.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.ListMode
dymaptic.GeoBlazor.Core.Components.Layers.ListMode.Hide = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.ListMode
dymaptic.GeoBlazor.Core.Components.Layers.ListMode.HideChildren = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.ListMode
dymaptic.GeoBlazor.Core.Components.Layers.ListMode.Show = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.ListMode
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.MapImageExportMap(bool SupportsArcadeExpressionForLabeling, bool SupportsDynamicLayers, bool SupportsSublayersChanges, bool SupportsSublayerDefinitionExpression, bool SupportsSublayerVisibility, bool SupportsCIMSymbols) -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsArcadeExpressionForLabeling.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsArcadeExpressionForLabeling.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsCIMSymbols.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsCIMSymbols.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsDynamicLayers.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsDynamicLayers.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsSublayerDefinitionExpression.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsSublayerDefinitionExpression.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsSublayersChanges.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsSublayersChanges.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsSublayerVisibility.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap.SupportsSublayerVisibility.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportTiles
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportTiles.MapImageExportTiles(int MaxExportTilesCount) -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportTiles.MaxExportTilesCount.get -> int
dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportTiles.MaxExportTilesCount.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Bmp = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Gif = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Jpg = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Pdf = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Png = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Png24 = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Png32 = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Png8 = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Pngjpg = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat.Svg = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.AllSublayers.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.Sublayer!>?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.BlendMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.BlendMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Capabilities.get -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Copyright.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.CustomParameters.get -> System.Collections.Generic.Dictionary<string!, object!>?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.CustomParameters.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.DateFieldsTimeZone.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.DatesInUnknownTimezone.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.DPI.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.DPI.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Effect.get -> dymaptic.GeoBlazor.Core.Components.Layers.Effect?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Effect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.GdbVersion.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.GdbVersion.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.ImageFormat.get -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.ImageFormat.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.ImageMaxHeight.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.ImageMaxHeight.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.ImageMaxWidth.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.ImageMaxWidth.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.ImageTransparency.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.ImageTransparency.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.LegendEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.LegendEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.MapImageLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.MapImageLayer(string? url = null, dymaptic.GeoBlazor.Core.Components.PortalItem? portalItem = null, dymaptic.GeoBlazor.Core.Components.Layers.BlendMode? blendMode = null, System.Collections.Generic.Dictionary<string!, object!>? customParameters = null, int? dpi = null, dymaptic.GeoBlazor.Core.Components.Layers.Effect? effect = null, string? gdbVersion = null, dymaptic.GeoBlazor.Core.Components.Layers.MapImageFormat? imageFormat = null, int? imageMaxHeight = null, int? imageMaxWidth = null, bool? imageTransparency = null, bool? legendEnabled = null, int? maxScale = null, int? minScale = null, bool? persistenceEnabled = null, double? refreshInterval = null, dymaptic.GeoBlazor.Core.Objects.TimeExtent? timeExtent = null, dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo? timeInfo = null, dymaptic.GeoBlazor.Core.Objects.TimeInterval? timeInterval = null, bool? useViewTime = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.Sublayer!>? sublayers = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null, bool? visible = null, double? opacity = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.MaxScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.MinScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.PreferredTimeZone.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.RefreshInterval.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.RefreshInterval.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.SourceJSON.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Sublayers.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.Sublayer!>!
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Sublayers.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.TimeExtent.get -> dymaptic.GeoBlazor.Core.Objects.TimeExtent?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.TimeExtent.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.TimeInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.TimeInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.TimeInterval.get -> dymaptic.GeoBlazor.Core.Objects.TimeInterval?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.TimeInterval.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.UseViewTime.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.UseViewTime.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.Version.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities.ExportMap.get -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap!
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities.ExportMap.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities.ExportTiles.get -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportTiles!
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities.ExportTiles.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities.MapImageLayerCapabilities(dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportMap! ExportMap, dymaptic.GeoBlazor.Core.Components.Layers.MapImageExportTiles! ExportTiles, dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations! Operations) -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities.Operations.get -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations!
dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities.Operations.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.MapImageOperations(bool SupportsExportMap, bool SupportsExportTiles, bool SupportsIdentify, bool SupportsQuery, bool SupportsTileMap) -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsExportMap.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsExportMap.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsExportTiles.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsExportTiles.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsIdentify.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsIdentify.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsQuery.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsQuery.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsTileMap.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MapImageOperations.SupportsTileMap.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MetadataCapability
dymaptic.GeoBlazor.Core.Components.Layers.MetadataCapability.MetadataCapability(bool SupportsAdvancedFieldProperties) -> void
dymaptic.GeoBlazor.Core.Components.Layers.MetadataCapability.SupportsAdvancedFieldProperties.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.MetadataCapability.SupportsAdvancedFieldProperties.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset
dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.ExtentOfInterest.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent?
dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.ExtentOfInterest.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.MultidimensionalSubset() -> void
dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.PolygonOfInterest.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Polygon?
dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.PolygonOfInterest.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.SubsetDefinitions.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition!>!
dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.SubsetDefinitions.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop.Opacity.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop.Opacity.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop.OpacityStop() -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop.OpacityStop(double value, double opacity, string? label = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop.Value.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable
dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.NormalizationField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.NormalizationField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.OpacityVariable() -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.OpacityVariable(string! field, string? normalizationField = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop!>? stops = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.Stops.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.OpacityStop!>?
dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.Stops.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer
dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer.OpenStreetMapLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer.OpenStreetMapLayer(dymaptic.GeoBlazor.Core.Components.PortalItem? portalItem = null, string? title = null, dymaptic.GeoBlazor.Core.Components.Layers.BlendMode? blendMode = null, string? copyright = null, double? maxScale = null, double? minScale = null, double? refreshInterval = null, System.Collections.Generic.IList<string!>? subDomains = null, dymaptic.GeoBlazor.Core.Components.Layers.TileInfo? tileInfo = null, double? opacity = null, bool? visible = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.OperationsCapability(bool SupportsAdd, bool SupportsCalculate, bool SupportsDelete, bool SupportsEditing, bool SupportsQuery, bool SupportsQueryAttachments, bool SupportsQueryTopFeatures, bool SupportsUpdate, bool SupportsValidateSql) -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsAdd.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsAdd.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsCalculate.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsCalculate.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsDelete.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsDelete.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsEditing.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsEditing.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsQuery.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsQuery.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsQueryAttachments.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsQueryAttachments.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsQueryTopFeatures.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsQueryTopFeatures.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsUpdate.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsUpdate.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsValidateSql.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.OperationsCapability.SupportsValidateSql.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy
dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.Field.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.Field.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.Order.get -> dymaptic.GeoBlazor.Core.Components.Layers.SortOrder?
dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.Order.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.OrderedLayerOrderBy() -> void
dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.ValueExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.ValueExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation
dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation.Bilinear = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation
dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation.Cubic = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation
dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation.Majority = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation
dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation.Nearest = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelInterpolation
dymaptic.GeoBlazor.Core.Components.Layers.PixelSize
dymaptic.GeoBlazor.Core.Components.Layers.PixelSize.PixelSize(double X, double Y) -> void
dymaptic.GeoBlazor.Core.Components.Layers.PixelSize.X.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.PixelSize.X.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.PixelSize.Y.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.PixelSize.Y.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.F32 = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.F64 = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.S16 = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.S32 = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.S8 = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.U16 = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.U32 = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.U8 = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.PixelType.Unknown = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.MaxRecordCount.get -> int
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.MaxRecordCount.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.QueryCapability(int MaxRecordCount, bool SupportsCacheHint, bool SupportsCentroid, bool SupportsDisjointSpatialRelationship, bool SupportsDistance, bool SupportsDistinct, bool SupportsExtent, bool SupportsGeometryProperties, bool SupportsHavingClause, bool SupportsHistoricMoment, bool SupportsOrderBy, bool SupportsPagination, bool SupportsPercentileStatistics, bool SupportsQuantization, bool SupportsQuantizationEditMode, bool SupportsQueryGeometry, bool SupportsResultType, bool SupportsStandardizedQueriesOnly, bool SupportsStatistics, bool SupportsSqlExpression, bool SupportsSpatialAggregationStatistics, dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations! SupportedSpatialStatisticAggregations) -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportedSpatialStatisticAggregations.get -> dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations!
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportedSpatialStatisticAggregations.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsCacheHint.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsCacheHint.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsCentroid.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsCentroid.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsDisjointSpatialRelationship.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsDisjointSpatialRelationship.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsDistance.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsDistance.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsDistinct.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsDistinct.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsExtent.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsExtent.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsGeometryProperties.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsGeometryProperties.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsHavingClause.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsHavingClause.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsHistoricMoment.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsHistoricMoment.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsOrderBy.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsOrderBy.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsPagination.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsPagination.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsPercentileStatistics.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsPercentileStatistics.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsQuantization.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsQuantization.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsQuantizationEditMode.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsQuantizationEditMode.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsQueryGeometry.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsQueryGeometry.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsResultType.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsResultType.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsSpatialAggregationStatistics.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsSpatialAggregationStatistics.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsSqlExpression.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsSqlExpression.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsStandardizedQueriesOnly.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsStandardizedQueriesOnly.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsStatistics.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryCapability.SupportsStatistics.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.QueryRelatedCapability(bool SupportsCacheHint, bool SupportsCount, bool SupportsOrderBy, bool SupportsPagination) -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.SupportsCacheHint.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.SupportsCacheHint.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.SupportsCount.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.SupportsCount.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.SupportsOrderBy.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.SupportsOrderBy.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.SupportsPagination.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryRelatedCapability.SupportsPagination.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.GeometryType.get -> dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType?
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.GeometryType.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.OidFields.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.OidFields.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.Query.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.Query.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.QueryTableDataSource() -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.QueryTableDataSource(string! workspaceId, string! query, string? oidFields = null, dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType? geometryType = null, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? spatialReference = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.SpatialReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.WorkspaceId.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.WorkspaceId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTopFeaturesCapability
dymaptic.GeoBlazor.Core.Components.Layers.QueryTopFeaturesCapability.QueryTopFeaturesCapability(bool SupportsCacheHint) -> void
dymaptic.GeoBlazor.Core.Components.Layers.QueryTopFeaturesCapability.SupportsCacheHint.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.QueryTopFeaturesCapability.SupportsCacheHint.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.MaxWavelength.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.MaxWavelength.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.MinWavelength.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.MinWavelength.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.Name.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.Name.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.RadianceBias.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.RadianceBias.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.RadianceGain.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.RadianceGain.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.RasterBandInfo(double MaxWavelength, double MinWavelength, string! Name, double RadianceBias, double RadianceGain, double ReflectanceBias, double ReflectanceGain, double SolarIrradiance) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.ReflectanceBias.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.ReflectanceBias.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.ReflectanceGain.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.ReflectanceGain.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.SolarIrradiance.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo.SolarIrradiance.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Avg.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Avg.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Count.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Count.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Max.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Max.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Median.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Median.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Min.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Min.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Mode.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Mode.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.RasterBandStatistics(double Min, double Max, double Avg, double Stddev, int? Count, double? Mode, double? Median, double? Sum) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Stddev.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Stddev.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Sum.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics.Sum.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataSource
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataSource.DataSourceName.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataSource.DataSourceName.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataSource.RasterDataSource() -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataSource.RasterDataSource(string! workspaceId, string! dataSourceName) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataSource.WorkspaceId.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataSource.WorkspaceId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.Elevation = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.Generic = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.Processed = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.Scientific = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.StandardTime = 11 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.Thematic = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.VectorDirection = 10 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.VectorMagdir = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.VectorMagnitude = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.VectorU = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.VectorUv = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType.VectorV = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Description.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Extent.get -> double[]?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Extent.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.HasRegularIntervals.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.HasRegularIntervals.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Interval.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Interval.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.IntervalUnit.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.IntervalUnit.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Name.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Name.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.RasterDimension(string! Name, string? Description, string? Unit, object![]? Values, bool? HasRegularIntervals, double? Interval, string? IntervalUnit, double[]? Extent) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Unit.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Unit.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Values.get -> object![]?
dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension.Values.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.Counts.get -> int[]!
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.Counts.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.Max.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.Max.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.Min.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.Min.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.RasterHistogram(int Size, double Min, double Max, int[]! Counts) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.Size.get -> int
dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram.Size.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.AttributeTable.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.AttributeTable.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.BandCount.get -> int
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.BandCount.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.BandInfos.get -> dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo![]!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.BandInfos.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Colormap.get -> double[]![]!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Colormap.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.DataType.get -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.DataType.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Extent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Extent.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.HasMultidimensionalTranspose.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.HasMultidimensionalTranspose.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Height.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Height.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Histograms.get -> System.Collections.Generic.Dictionary<string!, object!>![]!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Histograms.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.KeyProperties.get -> System.Collections.Generic.Dictionary<string!, object!>!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.KeyProperties.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.MultidimensionalInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalInfo!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.MultidimensionalInfo.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.NoDataValue.get -> double[]!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.NoDataValue.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.PixelSize.get -> dymaptic.GeoBlazor.Core.Components.Layers.PixelSize!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.PixelSize.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.PixelType.get -> dymaptic.GeoBlazor.Core.Components.Layers.PixelType
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.PixelType.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.RasterInfo(dymaptic.GeoBlazor.Core.Components.Layers.FeatureSet! AttributeTable, int BandCount, dymaptic.GeoBlazor.Core.Components.Layers.RasterBandInfo![]! BandInfos, double[]![]! Colormap, dymaptic.GeoBlazor.Core.Components.Layers.RasterDataType DataType, dymaptic.GeoBlazor.Core.Components.Geometries.Extent! Extent, bool HasMultidimensionalTranspose, double Height, System.Collections.Generic.Dictionary<string!, object!>![]! Histograms, System.Collections.Generic.Dictionary<string!, object!>! KeyProperties, dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalInfo! MultidimensionalInfo, double[]! NoDataValue, dymaptic.GeoBlazor.Core.Components.Layers.PixelSize! PixelSize, dymaptic.GeoBlazor.Core.Components.Layers.PixelType PixelType, dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo! SensorInfo, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! SpatialReference, dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics![]! Statistics, double Width) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.SensorInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.SensorInfo.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.SpatialReference.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Statistics.get -> dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics![]!
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Statistics.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Width.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterInfo.Width.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalInfo
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalInfo.RasterMultidimensionalInfo(dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable![]! Variables) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalInfo.Variables.get -> dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable![]!
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalInfo.Variables.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Description.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Dimensions.get -> dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension![]!
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Dimensions.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Histograms.get -> dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram![]?
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Histograms.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Name.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Name.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.RasterMultidimensionalVariable(string! Name, string? Description, string? Unit, dymaptic.GeoBlazor.Core.Components.Layers.RasterDimension![]! Dimensions, dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics![]? Statistics, dymaptic.GeoBlazor.Core.Components.Layers.RasterHistogram![]? Histograms) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Statistics.get -> dymaptic.GeoBlazor.Core.Components.Layers.RasterBandStatistics![]?
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Statistics.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Unit.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.RasterMultidimensionalVariable.Unit.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.AcquisitionDate.get -> System.DateOnly
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.AcquisitionDate.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.CloudCover.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.CloudCover.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.ProductName.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.ProductName.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.RasterSensorInfo(System.DateOnly AcquisitionDate, double CloudCover, string! ProductName, double SensorAzimuth, double SensorElevation, string! SensorName, double SunAzimuth, double SunElevation) -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SensorAzimuth.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SensorAzimuth.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SensorElevation.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SensorElevation.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SensorName.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SensorName.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SunAzimuth.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SunAzimuth.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SunElevation.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.RasterSensorInfo.SunElevation.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.RotationType
dymaptic.GeoBlazor.Core.Components.Layers.RotationType.Arithmetic = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.RotationType
dymaptic.GeoBlazor.Core.Components.Layers.RotationType.Geographic = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.RotationType
dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable
dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.Axis.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.Axis.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.RotationType.get -> dymaptic.GeoBlazor.Core.Components.Layers.RotationType?
dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.RotationType.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.RotationVariable() -> void
dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.RotationVariable(string! field, string? axis = null, dymaptic.GeoBlazor.Core.Components.Layers.RotationType? rotationType = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop.Size.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop.Size.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop.SizeStop() -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop.SizeStop(double value, dymaptic.GeoBlazor.Core.Objects.Dimension? size = null, string? label = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop.Value.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.SizeStop.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.Axis.get -> dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.Axis.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MaxDataValue.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MaxDataValue.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MaxSize.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MaxSize.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MinDataValue.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MinDataValue.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MinSize.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MinSize.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.NormalizationField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.NormalizationField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.SizeVariable() -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.SizeVariable(string! field, dymaptic.GeoBlazor.Core.Objects.Dimension? minSize = null, dymaptic.GeoBlazor.Core.Objects.Dimension? maxSize = null, double? minDataValue = null, double? maxDataValue = null, dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation? valueRepresentation = null, dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit? valueUnit = null, string? normalizationField = null, string? target = null, bool? useSymbolValue = null, dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis? axis = null, string? valueExpression = null, string? valueExpressionTitle = null, dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions? legendOptions = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.Stops.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.SizeStop!>?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.Stops.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.Target.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.Target.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.UseSymbolValue.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.UseSymbolValue.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.ValueRepresentation.get -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.ValueRepresentation.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.ValueUnit.get -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit?
dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.ValueUnit.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SortOrder
dymaptic.GeoBlazor.Core.Components.Layers.SortOrder.Ascending = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.SortOrder
dymaptic.GeoBlazor.Core.Components.Layers.SortOrder.Descending = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.SortOrder
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Capabilities.get -> dymaptic.GeoBlazor.Core.Components.Layers.SublayerCapabilities?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Capabilities.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.DefinitionExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.DefinitionExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Fields.get -> dymaptic.GeoBlazor.Core.Components.Layers.Field![]?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Fields.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.FieldsIndex.get -> dymaptic.GeoBlazor.Core.Components.Layers.FieldsIndex?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.FieldsIndex.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.FloorInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.LayerFloorInfo?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.FloorInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.FullExtent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.FullExtent.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.GetAllSublayers() -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.Sublayer!>!
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.LabelingInfo.get -> System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Layers.Label!>!
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.LabelingInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.LabelsVisible.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.LabelsVisible.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Layer.get -> dymaptic.GeoBlazor.Core.Components.Layers.Layer?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.LegendEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.LegendEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.ListMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.ListMode?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.ListMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.MaxScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.MinScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.ObjectIdField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.ObjectIdField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Opacity.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Opacity.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.PopupEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.PopupEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.PopupTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Renderer.get -> dymaptic.GeoBlazor.Core.Components.Renderers.Renderer?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Renderer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.SetLegendEnabled(bool enabled) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.SetPopupEnabled(bool enabled) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.SetPopupTemplate(dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate! popupTemplate) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.SetProperty(string! propertyName, object? value) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Source.get -> dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Source.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.SourceJSON.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.SourceJSON.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Sublayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Sublayer(int? sublayerId = null, bool? labelsVisible = null, bool? legendEnabled = null, dymaptic.GeoBlazor.Core.Components.Layers.ListMode? listMode = null, int? maxScale = null, int? minScale = null, double? opacity = null, bool? popupEnabled = null, string? title = null, bool? visible = null, string? definitionExpression = null, dymaptic.GeoBlazor.Core.Components.Layers.LayerFloorInfo? floorInfo = null, System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Label!>? labelingInfo = null, dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate? popupTemplate = null, dymaptic.GeoBlazor.Core.Components.Renderers.Renderer? renderer = null, dymaptic.GeoBlazor.Core.Components.Layers.DynamicLayer? source = null, System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Sublayer!>? sublayers = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.SublayerId.get -> int?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.SublayerId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Sublayers.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.Sublayer!>!
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Sublayers.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.TypeIdField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.TypeIdField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Types.get -> dymaptic.GeoBlazor.Core.Components.Layers.FeatureType![]?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Types.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.UpdateFromJavaScript(dymaptic.GeoBlazor.Core.Components.Layers.Sublayer! renderedSublayer) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.SublayerCapabilities
dymaptic.GeoBlazor.Core.Components.Layers.SublayerCapabilities.Data.get -> dymaptic.GeoBlazor.Core.Components.Layers.SublayerData!
dymaptic.GeoBlazor.Core.Components.Layers.SublayerCapabilities.Data.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.SublayerCapabilities.Operations.get -> dymaptic.GeoBlazor.Core.Components.Layers.SublayerOperations!
dymaptic.GeoBlazor.Core.Components.Layers.SublayerCapabilities.Operations.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.SublayerCapabilities.SublayerCapabilities(dymaptic.GeoBlazor.Core.Components.Layers.SublayerData! Data, dymaptic.GeoBlazor.Core.Components.Layers.SublayerOperations! Operations) -> void
dymaptic.GeoBlazor.Core.Components.Layers.SublayerData
dymaptic.GeoBlazor.Core.Components.Layers.SublayerData.SublayerData(bool SupportsAttachment) -> void
dymaptic.GeoBlazor.Core.Components.Layers.SublayerData.SupportsAttachment.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.SublayerData.SupportsAttachment.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.SublayerOperations
dymaptic.GeoBlazor.Core.Components.Layers.SublayerOperations.SublayerOperations(bool SupportsQuery, bool SupportsQueryAttachments) -> void
dymaptic.GeoBlazor.Core.Components.Layers.SublayerOperations.SupportsQuery.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.SublayerOperations.SupportsQuery.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.SublayerOperations.SupportsQueryAttachments.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.SublayerOperations.SupportsQueryAttachments.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations
dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations.Centroid.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations.Centroid.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations.ConvexHull.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations.ConvexHull.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations.Envelope.get -> bool
dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations.Envelope.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.SupportedSpatialStatisticAggregations.SupportedSpatialStatisticAggregations(bool Centroid, bool Envelope, bool ConvexHull) -> void
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.DataSourceName.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.DataSourceName.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.GdbVersion.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.GdbVersion.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.TableDataSource() -> void
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.TableDataSource(string! workspaceId, string! dataSourceName, string? gdbVersion = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.WorkspaceId.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.WorkspaceId.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.ContentType.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.ContentType.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.Height.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.Height.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.ImageData.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.ImageData.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.Thumbnail(string! ContentType, string! ImageData, double Height, double Width) -> void
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.Width.get -> double
dymaptic.GeoBlazor.Core.Components.Layers.Thumbnail.Width.init -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Dpi.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Dpi.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Format.get -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat?
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Format.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.IsWrappable.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.IsWrappable.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Lods.get -> System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Components.LOD!>?
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Lods.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Origin.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point?
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Origin.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Size.get -> System.Collections.Generic.IList<double>?
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Size.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.SpatialReference.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.TileInfo() -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Dib = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Emf = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Gif = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Jpg = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Lerc = 13 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Mixed = 12 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Pbf = 14 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Pdf = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Png = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Png24 = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Png32 = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Ps = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Svg = 10 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Svgz = 11 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat.Tiff = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.AllSublayers.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.Sublayer!>?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.ApiKey.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.ApiKey.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Capabilities.get -> dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayerCapabilities?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Copyright.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Effect.get -> dymaptic.GeoBlazor.Core.Components.Layers.Effect?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Effect.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.LegendEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.LegendEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MaxScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MinScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.RefreshInterval.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.RefreshInterval.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.SourceJSON.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Sublayers.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Layers.Sublayer!>?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Sublayers.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.TileInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfo?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.TileInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.TileLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.TileServers.get -> System.Collections.Generic.IReadOnlyList<string!>?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.TileServers.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.EndField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.EndField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.FullTimeExtent.get -> dymaptic.GeoBlazor.Core.Objects.TimeExtent?
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.FullTimeExtent.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.Interval.get -> dymaptic.GeoBlazor.Core.Objects.TimeInterval?
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.Interval.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.StartField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.StartField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.TimeInfo(string? startField, string? endField) -> void
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.TrackIdField.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.TimeInfo.TrackIdField.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer
dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer.VectorTileLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis
dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis.All = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis
dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis.Depth = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis
dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis.Height = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis
dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis.Width = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis
dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis.WidthAndDepth = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualAxis
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation.Area = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation.Diameter = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation.Distance = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation.Radius = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation.Width = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueRepresentation
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Centimeters = 7 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.DecimalDegrees = 11 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Decimeters = 8 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Feet = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Inches = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Kilometers = 10 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Meters = 9 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Miles = 4 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Millimeters = 6 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.NauticalMiles = 5 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Unknown = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit.Yards = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualValueUnit
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.Field.get -> string!
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.Field.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.LegendOptions.get -> dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions?
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.LegendOptions.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.ValueExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.ValueExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.ValueExpressionTitle.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.ValueExpressionTitle.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.VisualVariable() -> void
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType.Color = 2 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType.Opacity = 3 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType.Rotation = 1 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType.Size = 0 -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.MultidimensionalDefinition.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition!>?
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.MultidimensionalDefinition.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.Renderer.get -> dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer?
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.Renderer.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.WCSLayer() -> void
dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.WCSLayer(string? url = null, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition!>? multidimensionalDefinition = null, dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer? renderer = null, double? opacity = null, string? title = null, dymaptic.GeoBlazor.Core.Components.PortalItem? portalItem = null) -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.BlendMode.get -> dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.BlendMode.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.Copyright.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.Copyright.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MaxScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MaxScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MinScale.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MinScale.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.RefreshInterval.get -> double?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.RefreshInterval.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.SubDomains.get -> System.Collections.Generic.IList<string!>?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.SubDomains.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.TileInfo.get -> dymaptic.GeoBlazor.Core.Components.Layers.TileInfo?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.TileInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate.get -> string?
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.WebTileLayer() -> void
dymaptic.GeoBlazor.Core.Components.LOD
dymaptic.GeoBlazor.Core.Components.LOD.Level.get -> double?
dymaptic.GeoBlazor.Core.Components.LOD.Level.set -> void
dymaptic.GeoBlazor.Core.Components.LOD.LevelValue.get -> string?
dymaptic.GeoBlazor.Core.Components.LOD.LevelValue.set -> void
dymaptic.GeoBlazor.Core.Components.LOD.LOD() -> void
dymaptic.GeoBlazor.Core.Components.LOD.Resolution.get -> double?
dymaptic.GeoBlazor.Core.Components.LOD.Resolution.set -> void
dymaptic.GeoBlazor.Core.Components.LOD.Scale.get -> double?
dymaptic.GeoBlazor.Core.Components.LOD.Scale.set -> void
dymaptic.GeoBlazor.Core.Components.Map
dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap.get -> string?
dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap.set -> void
dymaptic.GeoBlazor.Core.Components.Map.Basemap.get -> dymaptic.GeoBlazor.Core.Components.Basemap?
dymaptic.GeoBlazor.Core.Components.Map.Basemap.set -> void
dymaptic.GeoBlazor.Core.Components.Map.Ground.get -> string?
dymaptic.GeoBlazor.Core.Components.Map.Ground.set -> void
dymaptic.GeoBlazor.Core.Components.Map.Layers.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Layers.Layer!>!
dymaptic.GeoBlazor.Core.Components.Map.Layers.set -> void
dymaptic.GeoBlazor.Core.Components.Map.Map() -> void
dymaptic.GeoBlazor.Core.Components.MapComponent
dymaptic.GeoBlazor.Core.Components.MapComponent.Add(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveListener<T>(string! eventName, System.Action<T>! handler) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveListener<T>(string! eventName, System.Action<T>! handler, bool once) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveListener<T>(string! eventName, System.Func<T, System.Threading.Tasks.Task!>! handler) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveListener<T>(string! eventName, System.Func<T, System.Threading.Tasks.Task!>! handler, bool once) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWaiter(string! waitExpression, System.Action! handler) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWaiter(string! waitExpression, System.Action! handler, string? targetName) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWaiter(string! waitExpression, System.Action! handler, string? targetName, bool once) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWaiter(string! waitExpression, System.Action! handler, string? targetName, bool once, bool initial) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWaiter(string! waitExpression, System.Func<System.Threading.Tasks.Task!>! handler) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWaiter(string! waitExpression, System.Func<System.Threading.Tasks.Task!>! handler, string? targetName) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWaiter(string! waitExpression, System.Func<System.Threading.Tasks.Task!>! handler, string? targetName, bool once) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWaiter(string! waitExpression, System.Func<System.Threading.Tasks.Task!>! handler, string? targetName, bool once, bool initial) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWatcher<T>(string! watchExpression, System.Action<T>! handler) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWatcher<T>(string! watchExpression, System.Action<T>! handler, string? targetName) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWatcher<T>(string! watchExpression, System.Action<T>! handler, string? targetName, bool once) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWatcher<T>(string! watchExpression, System.Action<T>! handler, string? targetName, bool once, bool initial) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWatcher<T>(string! watchExpression, System.Func<T, System.Threading.Tasks.Task!>! handler) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWatcher<T>(string! watchExpression, System.Func<T, System.Threading.Tasks.Task!>! handler, string? targetName) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWatcher<T>(string! watchExpression, System.Func<T, System.Threading.Tasks.Task!>! handler, string? targetName, bool once) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AddReactiveWatcher<T>(string! watchExpression, System.Func<T, System.Threading.Tasks.Task!>! handler, string? targetName, bool once, bool initial) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.AllowRender -> bool
dymaptic.GeoBlazor.Core.Components.MapComponent.AwaitReactiveSingleWatchUpdate<T>(string! watchExpression, string? targetName = null, System.Threading.CancellationToken token = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<T>!
dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent.get -> Microsoft.AspNetCore.Components.RenderFragment?
dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent.set -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.Id.get -> System.Guid
dymaptic.GeoBlazor.Core.Components.MapComponent.Id.init -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.IsRenderedBlazorComponent -> bool
dymaptic.GeoBlazor.Core.Components.MapComponent.JsModule.get -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Components.MapComponent.JsModule.set -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.JsRuntime.get -> Microsoft.JSInterop.IJSRuntime!
dymaptic.GeoBlazor.Core.Components.MapComponent.JsRuntime.set -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.MapComponent() -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.MapRendered.get -> bool
dymaptic.GeoBlazor.Core.Components.MapComponent.MapRendered.set -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.ModifiedParameters -> System.Collections.Generic.Dictionary<string!, object?>!
dymaptic.GeoBlazor.Core.Components.MapComponent.OnReactiveListenerTriggered(string! eventName, System.Text.Json.JsonElement? value) -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.OnReactiveWaiterTrue(string! waitExpression) -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.OnReactiveWatcherUpdate(string! watchExpression, System.Text.Json.JsonElement? value) -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.Parent.get -> dymaptic.GeoBlazor.Core.Components.MapComponent?
dymaptic.GeoBlazor.Core.Components.MapComponent.Parent.set -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.ProJsModule.get -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Components.MapComponent.ProJsModule.set -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.ProProperties.get -> System.Collections.Generic.Dictionary<string!, object?>?
dymaptic.GeoBlazor.Core.Components.MapComponent.ProProperties.set -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.RemoveReactiveListener(string! eventName) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.RemoveReactiveWaiter(string! waitExpression) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.RemoveReactiveWatcher(string! watchExpression) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.SetVisibility(bool visible) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.MapComponent.UpdateState(bool mainThread = true) -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.View.get -> dymaptic.GeoBlazor.Core.Components.Views.MapView?
dymaptic.GeoBlazor.Core.Components.MapComponent.View.set -> void
dymaptic.GeoBlazor.Core.Components.MapComponent.Visible.get -> bool?
dymaptic.GeoBlazor.Core.Components.MapComponent.Visible.set -> void
dymaptic.GeoBlazor.Core.Components.OverlayPosition
dymaptic.GeoBlazor.Core.Components.OverlayPosition.BottomLeft = 2 -> dymaptic.GeoBlazor.Core.Components.OverlayPosition
dymaptic.GeoBlazor.Core.Components.OverlayPosition.BottomRight = 3 -> dymaptic.GeoBlazor.Core.Components.OverlayPosition
dymaptic.GeoBlazor.Core.Components.OverlayPosition.Manual = 4 -> dymaptic.GeoBlazor.Core.Components.OverlayPosition
dymaptic.GeoBlazor.Core.Components.OverlayPosition.TopLeft = 0 -> dymaptic.GeoBlazor.Core.Components.OverlayPosition
dymaptic.GeoBlazor.Core.Components.OverlayPosition.TopRight = 1 -> dymaptic.GeoBlazor.Core.Components.OverlayPosition
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.AttachmentsPopupContent() -> void
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.AttachmentsPopupContent(string? title = null, string? description = null, string? displayType = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Description.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.DisplayType.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.DisplayType.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.AltText.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.AltText.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.BarChartMediaInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.BarChartMediaInfo(string? title = null, string? caption = null, string? altText = null, dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue? value = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Caption.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Caption.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Value.get -> dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue?
dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.ChartMediaInfoValue() -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.ChartMediaInfoValue(System.Collections.Generic.IReadOnlyCollection<string!>? fields = null, string? normalizeField = null, string? tooltipField = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries!>? series = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.Fields.get -> System.Collections.Generic.IEnumerable<string!>!
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.Fields.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.NormalizeField.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.NormalizeField.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.Series.get -> System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries!>?
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.Series.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.TooltipField.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.TooltipField.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.ChartMediaInfoValueSeries() -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.ChartMediaInfoValueSeries(string? fieldName = null, string? tooltip = null, double? value = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.FieldName.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.FieldName.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.Tooltip.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.Tooltip.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.Value.get -> double?
dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.AltText.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.AltText.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Caption.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Caption.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.ColumnChartMediaInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.ColumnChartMediaInfo(string? title = null, string? caption = null, string? altText = null, dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue? value = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Value.get -> dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue?
dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo
dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo.ElementExpressionInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo.Expression.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo.Expression.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo.ReturnType.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo.ReturnType.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Expression.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Expression.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ExpressionInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ExpressionInfo(string? expression, string? name, string? title, dymaptic.GeoBlazor.Core.Components.Popups.ReturnType? returnType) -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Name.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Name.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ReturnType.get -> dymaptic.GeoBlazor.Core.Components.Popups.ReturnType?
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ReturnType.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ExpressionInfo.get -> dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo?
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ExpressionInfo.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ExpressionPopupContent() -> void
dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ExpressionPopupContent(dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo? expressionInfo) -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.FieldInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.FieldInfo(string? fieldName = null, string? label = null, string? tooltip = null, string? stringFieldOption = null, dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat? format = null, bool? isEditable = null, bool? visible = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.FieldName.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.FieldName.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Format.get -> dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Format.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.IsEditable.get -> bool?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.IsEditable.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.StringFieldOption.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.StringFieldOption.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Tooltip.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Tooltip.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.DateFormat.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.DateFormat.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.DigitSeparator.get -> bool?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.DigitSeparator.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.FieldInfoFormat() -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.FieldInfoFormat(int? places = null, bool? digitSeparator = null, string? dateFormat = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.Places.get -> int?
dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.Places.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Description.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.FieldInfos.get -> System.Collections.Generic.HashSet<dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo!>?
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.FieldInfos.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.FieldsPopupContent() -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.FieldsPopupContent(dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo![]! fieldInfos, string? description = null, string? title = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.AltText.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.AltText.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Caption.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Caption.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.ImageMediaInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.ImageMediaInfo(string? title = null, string? caption = null, string? altText = null, dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue? value = null, double? refreshInterval = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.RefreshInterval.get -> double?
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.RefreshInterval.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Value.get -> dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue?
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.ImageMediaInfoValue() -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.ImageMediaInfoValue(string? linkURL = null, string? sourceURL = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.LinkURL.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.LinkURL.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.SourceURL.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.SourceURL.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.AltText.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.AltText.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Caption.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Caption.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.LineChartMediaInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.LineChartMediaInfo(string? title = null, string? caption = null, string? altText = null, dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue? value = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Value.get -> dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue?
dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.MediaInfo
dymaptic.GeoBlazor.Core.Components.Popups.MediaInfo.MediaInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.ActiveMediaInfoIndex.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.ActiveMediaInfoIndex.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Description.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.MediaInfos.get -> System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Components.Popups.MediaInfo!>?
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.MediaInfos.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.MediaPopupContent() -> void
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.MediaPopupContent(string? title = null, string? description = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Popups.MediaInfo!>? mediaInfos = null, string? activeMediaInfoIndex = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.AltText.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.AltText.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Caption.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Caption.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.PieChartMediaInfo() -> void
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.PieChartMediaInfo(string? title = null, string? caption = null, string? altText = null, dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue? value = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Value.get -> dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue?
dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupContent
dymaptic.GeoBlazor.Core.Components.Popups.PopupContent.PopupContent() -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Actions.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.ActionBase!>?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Actions.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Content.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Popups.PopupContent!>!
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Content.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ContentFunction.get -> System.Func<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!, System.Threading.Tasks.ValueTask<dymaptic.GeoBlazor.Core.Components.Popups.PopupContent![]?>>?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ContentFunction.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.DotNetPopupTemplateReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate!>!
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ExpressionInfos.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo!>?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ExpressionInfos.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.FieldInfos.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo!>?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.FieldInfos.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OnContentFunction(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! graphic) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Popups.PopupContent![]?>!
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OnTriggerAction(string! actionId) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OutFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OutFields.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OverwriteActions.get -> bool?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OverwriteActions.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.PopupTemplate() -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.PopupTemplate(string? title = null, string? stringContent = null, System.Collections.Generic.IEnumerable<string!>? outFields = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo!>? fieldInfos = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Popups.PopupContent!>? contents = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo!>? expressionInfos = null, bool? overwriteActions = null, bool? returnGeometry = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.ActionBase!>? actions = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ReturnGeometry.get -> bool?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ReturnGeometry.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.StringContent.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.StringContent.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder
dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.Field.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.Field.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.Order.get -> dymaptic.GeoBlazor.Core.Objects.OrderBy?
dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.Order.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.RelatedRecordsInfoFieldOrder() -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.RelatedRecordsInfoFieldOrder(string? field = null, dymaptic.GeoBlazor.Core.Objects.OrderBy? order = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Description.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.DisplayCount.get -> int?
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.DisplayCount.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.DisplayType.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.DisplayType.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.OrderByFields.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder!>!
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.OrderByFields.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.RelationshipId.get -> int?
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.RelationshipId.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.RelationshipPopupContent() -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.RelationshipPopupContent(string? title = null, string? description = null, int? displayCount = null, string? displayType = null, System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder!>? orderByFields = null, int? relationshipId = null) -> void
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.ReturnType
dymaptic.GeoBlazor.Core.Components.Popups.ReturnType.Number = 1 -> dymaptic.GeoBlazor.Core.Components.Popups.ReturnType
dymaptic.GeoBlazor.Core.Components.Popups.ReturnType.String = 0 -> dymaptic.GeoBlazor.Core.Components.Popups.ReturnType
dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent
dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.Text.get -> string?
dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.Text.set -> void
dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.TextPopupContent() -> void
dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.TextPopupContent(string? text = null) -> void
dymaptic.GeoBlazor.Core.Components.Portal
dymaptic.GeoBlazor.Core.Components.Portal.Portal() -> void
dymaptic.GeoBlazor.Core.Components.Portal.Url.get -> string?
dymaptic.GeoBlazor.Core.Components.Portal.Url.set -> void
dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource
dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.Portal.get -> dymaptic.GeoBlazor.Core.Components.Portal?
dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.Portal.set -> void
dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.PortalBasemapsSource() -> void
dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryParams.get -> System.Collections.Generic.Dictionary<string!, string!>?
dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryParams.set -> void
dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryString.get -> string?
dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryString.set -> void
dymaptic.GeoBlazor.Core.Components.PortalItem
dymaptic.GeoBlazor.Core.Components.PortalItem.ApiKey.get -> string?
dymaptic.GeoBlazor.Core.Components.PortalItem.ApiKey.set -> void
dymaptic.GeoBlazor.Core.Components.PortalItem.Id.get -> string!
dymaptic.GeoBlazor.Core.Components.PortalItem.Id.set -> void
dymaptic.GeoBlazor.Core.Components.PortalItem.Portal.get -> dymaptic.GeoBlazor.Core.Components.Portal?
dymaptic.GeoBlazor.Core.Components.PortalItem.Portal.set -> void
dymaptic.GeoBlazor.Core.Components.PortalItem.PortalItem() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm.CieLab = 0 -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm.Hsv = 2 -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm.LabLch = 1 -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.Algorithm.get -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.Algorithm.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.AlgorithmicColorRamp() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.AlgorithmicColorRamp(dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm algorithm, dymaptic.GeoBlazor.Core.Objects.MapColor? fromColor = null, dymaptic.GeoBlazor.Core.Objects.MapColor? toColor = null) -> void
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.FromColor.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.FromColor.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ToColor.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ToColor.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRamp
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRamp.ColorRamp() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRampType
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRampType.Algorithmic = 0 -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRampType
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRampType.Multipart = 1 -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRampType
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.ColorRamps.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp!>?
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.MultipartColorRamp() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.MultipartColorRamp(System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp!>? colorRamps) -> void
dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol
dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.DefaultSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.Symbol.get -> dymaptic.GeoBlazor.Core.Components.Symbols.Symbol?
dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.Symbol.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.DimensionalDefinition() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.DimensionalDefinition(string? dimensionName = null, bool? isSlice = null, string? variableName = null, System.Collections.Generic.List<long>? values = null) -> void
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.DimensionName.get -> string?
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.DimensionName.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.IsSlice.get -> bool?
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.IsSlice.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.Values.get -> System.Collections.Generic.List<long>?
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.Values.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.VariableName.get -> string?
dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.VariableName.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.IImageryRenderer
dymaptic.GeoBlazor.Core.Components.Renderers.IImageryRenderer.ImageryRendererType.get -> string!
dymaptic.GeoBlazor.Core.Components.Renderers.LookupTypeAttribute
dymaptic.GeoBlazor.Core.Components.Renderers.LookupTypeAttribute.LookupTypeAttribute(string! typeName) -> void
dymaptic.GeoBlazor.Core.Components.Renderers.LookupTypeAttribute.TypeName.get -> string!
dymaptic.GeoBlazor.Core.Components.Renderers.LookupTypeAttribute.TypeName.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.Avg.get -> double?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.Avg.init -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.Max.get -> double
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.Max.init -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.Min.get -> double
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.Min.init -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.RasterStatistics(double Min, double Max, double? Avg = null, double? Stddev = null) -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.Stddev.get -> double?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics.Stddev.init -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ColorRamp.get -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRamp?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ComputeGamma.get -> bool?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ComputeGamma.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.DynamicRangeAdjustment.get -> bool?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.DynamicRangeAdjustment.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Gamma.get -> System.Collections.Generic.List<int>?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Gamma.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ImageryRendererType.get -> string!
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.NumberOfStandardDeviations.get -> int?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.NumberOfStandardDeviations.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.OutputMax.get -> int?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.OutputMax.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.OutputMin.get -> int?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.OutputMin.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.RasterStretchRenderer() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.RasterStretchRenderer(dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRamp? colorRamp = null, bool? computeGamma = null, bool? dynamicRangeAdjustment = null, System.Collections.Generic.List<int>? gamma = null, int? outputMax = null, int? outputMin = null, dymaptic.GeoBlazor.Core.Components.Renderers.StretchType? stretchType = null, dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics![]? statistics = null, bool? useGamma = null, int? numberOfStandardDeviations = null) -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.SetStretchType(dymaptic.GeoBlazor.Core.Components.Renderers.StretchType stretchType) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Statistics.get -> dymaptic.GeoBlazor.Core.Components.Renderers.RasterStatistics![]?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Statistics.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.StretchType.get -> dymaptic.GeoBlazor.Core.Components.Renderers.StretchType?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.StretchType.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Type.get -> string!
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.UseGamma.get -> bool?
dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.UseGamma.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.Renderer
dymaptic.GeoBlazor.Core.Components.Renderers.Renderer.Renderer() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.RendererType
dymaptic.GeoBlazor.Core.Components.Renderers.RendererType.PieChart = 2 -> dymaptic.GeoBlazor.Core.Components.Renderers.RendererType
dymaptic.GeoBlazor.Core.Components.Renderers.RendererType.Simple = 0 -> dymaptic.GeoBlazor.Core.Components.Renderers.RendererType
dymaptic.GeoBlazor.Core.Components.Renderers.RendererType.UniqueValue = 1 -> dymaptic.GeoBlazor.Core.Components.Renderers.RendererType
dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer
dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.SimpleRenderer() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.SimpleRenderer(dymaptic.GeoBlazor.Core.Components.Symbols.Symbol! symbol, string? label = null, dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable![]? visualVariables = null) -> void
dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.VisualVariables.get -> System.Collections.Generic.HashSet<dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable!>!
dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.VisualVariables.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.StretchType
dymaptic.GeoBlazor.Core.Components.Renderers.StretchType.HistogramEqualization = 2 -> dymaptic.GeoBlazor.Core.Components.Renderers.StretchType
dymaptic.GeoBlazor.Core.Components.Renderers.StretchType.MinMax = 3 -> dymaptic.GeoBlazor.Core.Components.Renderers.StretchType
dymaptic.GeoBlazor.Core.Components.Renderers.StretchType.None = 0 -> dymaptic.GeoBlazor.Core.Components.Renderers.StretchType
dymaptic.GeoBlazor.Core.Components.Renderers.StretchType.PercentClip = 4 -> dymaptic.GeoBlazor.Core.Components.Renderers.StretchType
dymaptic.GeoBlazor.Core.Components.Renderers.StretchType.Sigmoid = 5 -> dymaptic.GeoBlazor.Core.Components.Renderers.StretchType
dymaptic.GeoBlazor.Core.Components.Renderers.StretchType.StandardDeviation = 1 -> dymaptic.GeoBlazor.Core.Components.Renderers.StretchType
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.UniqueValueInfo() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.Value.get -> string?
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.Value.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.DefaultLabel.get -> string?
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.DefaultLabel.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.DefaultSymbol.get -> dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol?
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.DefaultSymbol.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.Field.get -> string?
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.Field.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.ImageryRendererType.get -> string!
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.LegendOptions.get -> dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions?
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.LegendOptions.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.UniqueValueInfos.get -> System.Collections.Generic.HashSet<dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo!>!
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.UniqueValueInfos.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.UniqueValueRenderer() -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.UniqueValueRendererLegendOptions() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle.BackwardDiagonal = 0 -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle.Cross = 1 -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle.DiagonalCross = 2 -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle.ForwardDiagonal = 3 -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle.Horizontal = 4 -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle.None = 5 -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle.Solid = 6 -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle.Vertical = 7 -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle
dymaptic.GeoBlazor.Core.Components.Symbols.FillSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.FillSymbol.FillSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment
dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment.Center = 2 -> dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment
dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment.Left = 0 -> dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment
dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment.Right = 1 -> dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.Dash = 1 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.DashDot = 2 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.Dot = 3 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.LongDash = 4 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.LongDashDot = 5 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.LongDashDotDot = 6 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.None = 11 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.ShortDash = 7 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.ShortDashDot = 8 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.ShortDashDotDot = 9 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.ShortDot = 10 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle.Solid = 0 -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle
dymaptic.GeoBlazor.Core.Components.Symbols.LineSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.LineSymbol.LineSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.LineSymbol.Width.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.LineSymbol.Width.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Family.get -> string?
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Family.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.FontStyle.get -> string?
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.FontStyle.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.MapFont() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.MapFont(dymaptic.GeoBlazor.Core.Objects.Dimension? size, string? family, string? style, string? weight) -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Size.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Size.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Weight.get -> string?
dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Weight.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.Angle.get -> double?
dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.Angle.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.MarkerSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.XOffset.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.XOffset.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.YOffset.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.YOffset.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.Outline
dymaptic.GeoBlazor.Core.Components.Symbols.Outline.Outline() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.Outline.Outline(dymaptic.GeoBlazor.Core.Objects.MapColor? color = null, double? width = null, dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle? lineStyle = null) -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Height.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Height.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Outline.get -> dymaptic.GeoBlazor.Core.Components.Symbols.Outline?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Outline.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.PictureFillSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.PictureFillSymbol(string! url, dymaptic.GeoBlazor.Core.Objects.Dimension? width = null, dymaptic.GeoBlazor.Core.Objects.Dimension? height = null, dymaptic.GeoBlazor.Core.Objects.Dimension? xOffset = null, dymaptic.GeoBlazor.Core.Objects.Dimension? yOffset = null, int? xScale = null, int? yScale = null, dymaptic.GeoBlazor.Core.Components.Symbols.Outline? outline = null) -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Url.get -> string!
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Width.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Width.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.XOffset.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.XOffset.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.XScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.XScale.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.YOffset.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.YOffset.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.YScale.get -> int?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.YScale.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Height.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Height.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.PictureMarkerSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.PictureMarkerSymbol(string! url, dymaptic.GeoBlazor.Core.Objects.Dimension? width = null, dymaptic.GeoBlazor.Core.Objects.Dimension? height = null, double? angle = null, dymaptic.GeoBlazor.Core.Objects.Dimension? xOffset = null, dymaptic.GeoBlazor.Core.Objects.Dimension? yOffset = null) -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Url.get -> string!
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Url.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Width.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Width.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.FillStyle.get -> dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle?
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.FillStyle.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.Outline.get -> dymaptic.GeoBlazor.Core.Components.Symbols.Outline?
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.Outline.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.SimpleFillSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.SimpleFillSymbol(dymaptic.GeoBlazor.Core.Components.Symbols.Outline? outline = null, dymaptic.GeoBlazor.Core.Objects.MapColor? color = null, dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle? fillStyle = null) -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.LineStyle.get -> dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.LineStyle.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.SimpleLineSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.SimpleLineSymbol(dymaptic.GeoBlazor.Core.Objects.MapColor? color = null, double? width = null, dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle? lineStyle = null) -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle.Circle = 0 -> dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle.Cross = 2 -> dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle.Diamond = 4 -> dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle.Path = 6 -> dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle.Square = 1 -> dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle.Triangle = 5 -> dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle.X = 3 -> dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.MarkerStyle.get -> dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle?
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.MarkerStyle.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Outline.get -> dymaptic.GeoBlazor.Core.Components.Symbols.Outline?
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Outline.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.SimpleMarkerSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.SimpleMarkerSymbol(dymaptic.GeoBlazor.Core.Components.Symbols.Outline? outline = null, dymaptic.GeoBlazor.Core.Objects.MapColor? color = null, dymaptic.GeoBlazor.Core.Objects.Dimension? size = null, dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerStyle? style = null, double? angle = null, dymaptic.GeoBlazor.Core.Objects.Dimension? xOffset = null, dymaptic.GeoBlazor.Core.Objects.Dimension? yOffset = null) -> void
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Size.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Size.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.Symbol
dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Symbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Angle.get -> double?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Angle.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.BackgroundColor.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.BackgroundColor.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.BorderLineColor.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.BorderLineColor.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.BorderLineSize.get -> double?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.BorderLineSize.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Font.get -> dymaptic.GeoBlazor.Core.Components.Symbols.MapFont?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Font.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HaloColor.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HaloColor.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HaloSize.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HaloSize.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HorizontalAlignment.get -> dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HorizontalAlignment.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Kerning.get -> bool?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Kerning.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.LineHeight.get -> double?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.LineHeight.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.LineWidth.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.LineWidth.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Rotated.get -> bool?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Rotated.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Text.get -> string?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Text.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.TextSymbol() -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.TextSymbol(string! text, dymaptic.GeoBlazor.Core.Objects.MapColor? color = null, dymaptic.GeoBlazor.Core.Objects.MapColor? haloColor = null, dymaptic.GeoBlazor.Core.Objects.Dimension? haloSize = null, dymaptic.GeoBlazor.Core.Components.Symbols.MapFont? font = null, double? angle = null, dymaptic.GeoBlazor.Core.Objects.MapColor? backgroundColor = null, dymaptic.GeoBlazor.Core.Objects.MapColor? borderLineColor = null, double? borderLineSize = null, dymaptic.GeoBlazor.Core.Components.Symbols.HorizontalAlignment? horizontalAlignment = null, bool? kerning = null, double? lineHeight = null, dymaptic.GeoBlazor.Core.Objects.Dimension? lineWidth = null, bool? rotated = null, dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment? verticalAlignment = null, dymaptic.GeoBlazor.Core.Objects.Dimension? xOffset = null, dymaptic.GeoBlazor.Core.Objects.Dimension? yOffset = null) -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.VerticalAlignment.get -> dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.VerticalAlignment.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.XOffset.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.XOffset.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.YOffset.get -> dymaptic.GeoBlazor.Core.Objects.Dimension?
dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.YOffset.set -> void
dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment
dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment.Baseline = 0 -> dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment
dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment.Bottom = 3 -> dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment
dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment.Middle = 2 -> dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment
dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment.Top = 1 -> dymaptic.GeoBlazor.Core.Components.Symbols.VerticalAlignment
dymaptic.GeoBlazor.Core.Components.Views.MapView
dymaptic.GeoBlazor.Core.Components.Views.MapView.AbortManager -> dymaptic.GeoBlazor.Core.Objects.AbortManager?
dymaptic.GeoBlazor.Core.Components.Views.MapView.AddGraphic(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! graphic) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.AddGraphics(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.AddLayer(dymaptic.GeoBlazor.Core.Components.Layers.Layer! layer, bool isBasemapLayer = false) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.AddWidget(dymaptic.GeoBlazor.Core.Components.Widgets.Widget! widget) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin.get -> bool?
dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.ApiKey.get -> string?
dymaptic.GeoBlazor.Core.Components.Views.MapView.ApiKey.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.AppId.get -> string?
dymaptic.GeoBlazor.Core.Components.Views.MapView.AppId.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.AuthenticationInitialized -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.AuthenticationManager.get -> dymaptic.GeoBlazor.Core.Model.AuthenticationManager!
dymaptic.GeoBlazor.Core.Components.Views.MapView.AuthenticationManager.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.Center.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point?
dymaptic.GeoBlazor.Core.Components.Views.MapView.Center.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.Class.get -> string!
dymaptic.GeoBlazor.Core.Components.Views.MapView.Class.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.ClearGraphics() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.ClosePopup() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.Configuration.get -> Microsoft.Extensions.Configuration.IConfiguration!
dymaptic.GeoBlazor.Core.Components.Views.MapView.Configuration.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.Constraints.get -> dymaptic.GeoBlazor.Core.Components.Constraints?
dymaptic.GeoBlazor.Core.Components.Views.MapView.DotNetObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Views.MapView!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.DrawRouteAndGetDirections(dymaptic.GeoBlazor.Core.Components.Symbols.Symbol! routeSymbol, string! routeUrl) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.Direction![]!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.ErrorMessage.get -> string?
dymaptic.GeoBlazor.Core.Components.Views.MapView.ErrorMessage.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.EventRateLimitInMilliseconds.get -> int?
dymaptic.GeoBlazor.Core.Components.Views.MapView.EventRateLimitInMilliseconds.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.Extent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent?
dymaptic.GeoBlazor.Core.Components.Views.MapView.Extent.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.ExtentChangedInJs.get -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.ExtentChangedInJs.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.ExtentSetByCode -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.FindPlaces(dymaptic.GeoBlazor.Core.Objects.AddressQuery! query, dymaptic.GeoBlazor.Core.Components.Symbols.Symbol! displaySymbol, dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate! popupTemplate) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetActiveEventHandlers() -> System.Collections.Generic.List<string!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetCenter() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Point?>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetCursor() -> System.Threading.Tasks.Task<string!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetDotNetPopupTemplateObjectReference(System.Guid popupTemplateId) -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate!>?
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetExtent() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Extent?>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetId() -> string!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetPopupWidget() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget?>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetRotation() -> System.Threading.Tasks.Task<double?>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetScale() -> System.Threading.Tasks.Task<double?>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetSpatialReference() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GetZoom() -> System.Threading.Tasks.Task<double?>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GoTo(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.Graphics.get -> System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.GraphicSerializationChunkSize.get -> int?
dymaptic.GeoBlazor.Core.Components.Views.MapView.GraphicSerializationChunkSize.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.HighlightOptions.get -> dymaptic.GeoBlazor.Core.Objects.HighlightOptions?
dymaptic.GeoBlazor.Core.Components.Views.MapView.HitTest(dymaptic.GeoBlazor.Core.Components.Geometries.Point! mapPoint) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.HitTestResult!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.HitTest(dymaptic.GeoBlazor.Core.Components.Geometries.Point! mapPoint, dymaptic.GeoBlazor.Core.Events.HitTestOptions? options) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.HitTestResult!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.HitTest(dymaptic.GeoBlazor.Core.Events.ClickEvent! clickEvent) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.HitTestResult!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.HitTest(dymaptic.GeoBlazor.Core.Events.ClickEvent! clickEvent, dymaptic.GeoBlazor.Core.Events.HitTestOptions? options) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.HitTestResult!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.HitTest(dymaptic.GeoBlazor.Core.Events.PointerEvent! pointerEvent) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.HitTestResult!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.HitTest(dymaptic.GeoBlazor.Core.Events.PointerEvent! pointerEvent, dymaptic.GeoBlazor.Core.Events.HitTestOptions? options) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.HitTestResult!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.HitTest(dymaptic.GeoBlazor.Core.Events.ScreenPoint! screenPoint) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.HitTestResult!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.HitTest(dymaptic.GeoBlazor.Core.Events.ScreenPoint! screenPoint, dymaptic.GeoBlazor.Core.Events.HitTestOptions? options) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.HitTestResult!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.IsMaui.get -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.IsServer.get -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.IsWebAssembly.get -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.Latitude.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.MapView.Latitude.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.Load() -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.LoadOnRender.get -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.LoadOnRender.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.Longitude.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.MapView.Longitude.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.MapView() -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.NeedsRender -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnBlur.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.BlurEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnBlur.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnClick.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDoubleClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDoubleClick.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.DragEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.Extent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnFocus.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.FocusEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnFocus.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnHitTestStreamCallback(Microsoft.JSInterop.IJSStreamReference! streamReference, System.Guid hitTestId) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnHold.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnHold.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateClick.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateDoubleClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateDoubleClick.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptBlur(dymaptic.GeoBlazor.Core.Events.BlurEvent! blurEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptClick(dymaptic.GeoBlazor.Core.Events.ClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptDoubleClick(dymaptic.GeoBlazor.Core.Events.ClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptDrag(dymaptic.GeoBlazor.Core.Events.DragEvent! dragEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptError(dymaptic.GeoBlazor.Core.Exceptions.JavascriptError! error) -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptErrorHandler.get -> System.Func<dymaptic.GeoBlazor.Core.Exceptions.JavascriptException!, System.Threading.Tasks.Task!>?
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptErrorHandler.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptFocus(dymaptic.GeoBlazor.Core.Events.FocusEvent! focusEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptHitTestResult(System.Guid eventId, string! chunk) -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptHold(dymaptic.GeoBlazor.Core.Events.ClickEvent! holdEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptImmediateClick(dymaptic.GeoBlazor.Core.Events.ClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptImmediateDoubleClick(dymaptic.GeoBlazor.Core.Events.ClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptKeyDown(dymaptic.GeoBlazor.Core.Events.KeyDownEvent! keyDownEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptKeyUp(dymaptic.GeoBlazor.Core.Events.KeyUpEvent! keyUpEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptLayerCreateChunk(string! layerUid, string! chunk, int chunkIndex) -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptLayerViewCreate(dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent! layerViewCreateEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptLayerViewCreateChunk(string! layerUid, string! chunk, int chunkIndex) -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptLayerViewCreateComplete(System.Guid? geoBlazorLayerId, string! layerUid, Microsoft.JSInterop.IJSObjectReference! layerRef, Microsoft.JSInterop.IJSObjectReference! layerViewRef, bool isBasemapLayer) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptLayerViewCreateError(dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent! errorEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptLayerViewDestroy(dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent! layerViewDestroyEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptMouseWheel(dymaptic.GeoBlazor.Core.Events.MouseWheelEvent! mouseWheelEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptPointerDown(dymaptic.GeoBlazor.Core.Events.PointerEvent! pointerEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptPointerEnter(dymaptic.GeoBlazor.Core.Events.PointerEvent! pointerEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptPointerLeave(dymaptic.GeoBlazor.Core.Events.PointerEvent! pointerEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptPointerMove(dymaptic.GeoBlazor.Core.Events.PointerEvent! pointerEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptPointerUp(dymaptic.GeoBlazor.Core.Events.PointerEvent! pointerEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptResize(dymaptic.GeoBlazor.Core.Events.ResizeEvent! resizeEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptSpatialReferenceChanged(dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! spatialReference) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJsViewInitialized() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJsViewRendered() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyDown.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyDownEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyDown.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyUp.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyUpEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyUp.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreate.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreate.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreateError.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreateError.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewDestroy.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewDestroy.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.MouseWheelEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerDown.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerDown.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerEnter.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerEnter.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerLeave.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerLeave.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerUp.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerUp.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ResizeEvent!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnSpatialReferenceChanged.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference!>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnSpatialReferenceChanged.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewInitialized.get -> Microsoft.AspNetCore.Components.EventCallback
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewInitialized.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered.get -> Microsoft.AspNetCore.Components.EventCallback<System.Guid>
dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.OpenPopup(dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions? options = null) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.PointerDown -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.PopupEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Views.MapView.PopupEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.ProJsViewModule -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForArcGISKey.get -> bool?
dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForArcGISKey.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForOAuthLogin.get -> bool?
dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForOAuthLogin.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.QueryFeatures(dymaptic.GeoBlazor.Core.Objects.Query! query, dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer! featureLayer, dymaptic.GeoBlazor.Core.Components.Symbols.Symbol! displaySymbol, dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate! popupTemplate) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.QueryResultsMaxSizeLimit.get -> long
dymaptic.GeoBlazor.Core.Components.Views.MapView.QueryResultsMaxSizeLimit.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.RemoveGraphic(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! graphic) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.RemoveGraphics(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.RemoveLayer(dymaptic.GeoBlazor.Core.Components.Layers.Layer! layer, bool isBasemapLayer = false) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.RemoveWidget(dymaptic.GeoBlazor.Core.Components.Widgets.Widget! widget) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.Rendering -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.Rotation.get -> double
dymaptic.GeoBlazor.Core.Components.Views.MapView.Rotation.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.Scale.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.MapView.Scale.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.SetConstraints(dymaptic.GeoBlazor.Core.Components.Constraints! constraints) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.SetCursor(string! cursor) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.SetHighlightOptions(dymaptic.GeoBlazor.Core.Objects.HighlightOptions! highlightOptions) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.SetRotation(double rotation) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.SetSpatialReference(dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! spatialReference) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.ShouldUpdate -> bool
dymaptic.GeoBlazor.Core.Components.Views.MapView.ShowPopup(dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate! template, dymaptic.GeoBlazor.Core.Components.Geometries.Point! location) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.ShowPopupWithGraphic(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! graphic, dymaptic.GeoBlazor.Core.Components.Widgets.PopupOptions! options) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.SolveServiceArea(string! serviceAreaUrl, double[]! driveTimeCutOffs, dymaptic.GeoBlazor.Core.Components.Symbols.Symbol! serviceAreaSymbol) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Views.MapView.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Components.Views.MapView.Style.get -> string!
dymaptic.GeoBlazor.Core.Components.Views.MapView.Style.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.TakeScreenshot(dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions? options = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.Screenshot!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.ToMap(dymaptic.GeoBlazor.Core.Events.ScreenPoint! screenPoint) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Point!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.ToScreen(dymaptic.GeoBlazor.Core.Components.Geometries.Point! mapPoint) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Events.ScreenPoint!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.ViewJsModule -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Components.Views.MapView.WhiteLabel.get -> string?
dymaptic.GeoBlazor.Core.Components.Views.MapView.WhiteLabel.set -> void
dymaptic.GeoBlazor.Core.Components.Views.MapView.Widgets.get -> System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Widgets.Widget!>!
dymaptic.GeoBlazor.Core.Components.Views.MapView.Zoom.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.MapView.Zoom.set -> void
dymaptic.GeoBlazor.Core.Components.Views.SceneView
dymaptic.GeoBlazor.Core.Components.Views.SceneView.SceneView() -> void
dymaptic.GeoBlazor.Core.Components.Views.SceneView.Tilt.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.SceneView.Tilt.set -> void
dymaptic.GeoBlazor.Core.Components.Views.SceneView.ZIndex.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.SceneView.ZIndex.set -> void
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Center.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point?
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Center.init -> void
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Extent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent!
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Extent.init -> void
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Rotation.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Rotation.init -> void
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Scale.get -> double
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Scale.init -> void
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Tilt.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Tilt.init -> void
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.ViewExtentUpdate(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! Extent, dymaptic.GeoBlazor.Core.Components.Geometries.Point? Center, double Scale, double Zoom, double? Rotation = null, double? Tilt = null) -> void
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Zoom.get -> double
dymaptic.GeoBlazor.Core.Components.Views.ViewExtentUpdate.Zoom.init -> void
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Rotation.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Rotation.set -> void
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Scale.get -> double?
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Scale.set -> void
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.TargetGeometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.TargetGeometry.set -> void
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Viewpoint() -> void
dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Viewpoint(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry? targetGeometry = null, double? scale = null, double? rotation = null) -> void
dymaptic.GeoBlazor.Core.Components.WebMap
dymaptic.GeoBlazor.Core.Components.WebMap.GetBookmarks() -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark!>!>!
dymaptic.GeoBlazor.Core.Components.WebMap.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.WebMap.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.WebMap.WebMap() -> void
dymaptic.GeoBlazor.Core.Components.WebScene
dymaptic.GeoBlazor.Core.Components.WebScene.PortalItem.get -> dymaptic.GeoBlazor.Core.Components.PortalItem?
dymaptic.GeoBlazor.Core.Components.WebScene.PortalItem.set -> void
dymaptic.GeoBlazor.Core.Components.WebScene.WebScene() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType
dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType.Boolean = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType
dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType.Date = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType
dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType.Number = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType
dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType.String = 3 -> dymaptic.GeoBlazor.Core.Components.Widgets.ArcadeReturnType
dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget
dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget.AreaMeasurement2DWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget.AreaMeasurement2DWidgetObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget!>!
dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget.Unit.get -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget.Unit.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget.UnitOptions.get -> dymaptic.GeoBlazor.Core.Objects.AreaUnit[]?
dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget.UnitOptions.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput
dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.BarcodeScannerInput() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.MaxLength.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.MaxLength.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.MinLength.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.MinLength.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.BasemapGalleryWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.PortalBasemapsSource.get -> dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.PortalBasemapsSource.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.BaseLayerListWidgetObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget!>!
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.BasemapLayerListWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.BasemapTitle.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.BasemapTitle.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.EditingEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.EditingEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.HasCustomBaseListHandler.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.HasCustomReferenceListHandler.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.HeadingLevel.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.HeadingLevel.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.MultipleSelectionEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.MultipleSelectionEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnBaseListItemCreated(dymaptic.GeoBlazor.Core.Components.Widgets.ListItem! item) -> System.Threading.Tasks.Task<object!>!
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnBaseListItemCreatedHandler.get -> System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.ListItem!, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.ListItem!>!>?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnBaseListItemCreatedHandler.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnReferenceListItemCreated(dymaptic.GeoBlazor.Core.Components.Widgets.ListItem! item) -> System.Threading.Tasks.Task<object!>!
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnReferenceListItemCreatedHandler.get -> System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.ListItem!, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.ListItem!>!>?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnReferenceListItemCreatedHandler.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.VisibleElements.get -> dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.VisibleElements.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.BaseLayers.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.BaseLayers.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.BasemapLayerListWidgetVisibleElements() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.Errors.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.Errors.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.ReferenceLayers.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.ReferenceLayers.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.StatusIndicators.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidgetVisibleElements.StatusIndicators.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.BasemapToggleWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemap.get -> dymaptic.GeoBlazor.Core.Components.Basemap?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemap.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemapName.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemapName.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemapStyle.get -> dymaptic.GeoBlazor.Core.Components.BasemapStyleName?
dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemapStyle.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Bookmark() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Bookmark(string? name = null, dymaptic.GeoBlazor.Core.Objects.TimeExtent? timeExtent = null, string? thumbnail = null, dymaptic.GeoBlazor.Core.Components.Views.Viewpoint? viewpoint = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Name.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Name.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Thumbnail.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Thumbnail.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.TimeExtent.get -> dymaptic.GeoBlazor.Core.Objects.TimeExtent?
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.TimeExtent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Viewpoint.get -> dymaptic.GeoBlazor.Core.Components.Views.Viewpoint?
dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Viewpoint.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.Bookmarks.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark!>?
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.Bookmarks.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.BookmarksWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.Disabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.Disabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.EditingEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.EditingEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.HeadingLevel.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.HeadingLevel.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.OnBookmarkSelect.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.OnBookmarkSelect.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.OnJavascriptBookmarkSelect(dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent! bookmarkSelectEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint.BoolValue.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint.BoolValue.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint.BreakPoint(bool value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint.BreakPoint(double? width = null, double? height = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint.Height.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint.Height.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint.Width.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint.Width.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue<T>
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue<T>.Code.get -> T?
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue<T>.Code.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue<T>.CodedValue() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue<T>.Name.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue<T>.Name.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain<T>
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain<T>.CodedValueDomain() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain<T>.CodedValues.get -> System.Collections.Generic.HashSet<dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue<T>!>?
dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain<T>.CodedValues.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput
dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ComboBoxInput() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.NoValueOptionLabel.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.NoValueOptionLabel.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ShowNoValueOption.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ShowNoValueOption.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget
dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.CompassWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput
dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.DateTimePickerInput() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.IncludeTime.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.IncludeTime.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Max.get -> long?
dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Max.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Min.get -> long?
dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Min.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Domain
dymaptic.GeoBlazor.Core.Components.Widgets.Domain.Domain() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Domain.Name.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.Domain.Name.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.AutoCollapse.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.AutoCollapse.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CloseOnEsc.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CloseOnEsc.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseIcon.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseIcon.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseTooltip.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseTooltip.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Expanded.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Expanded.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandIcon.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandIcon.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandTooltip.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandTooltip.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.HtmlContent.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.HtmlContent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Mode.get -> dymaptic.GeoBlazor.Core.Components.Widgets.Mode
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Mode.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.WidgetContent.get -> dymaptic.GeoBlazor.Core.Components.Widgets.Widget?
dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.WidgetContent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Domain.get -> dymaptic.GeoBlazor.Core.Components.Widgets.Domain?
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Domain.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.EditableExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.EditableExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.FieldElement() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.FieldElement(string? fieldName, string? label = null, string? description = null, string? hint = null, string? editableExpression = null, string? requiredExpression = null, string? valueExpression = null, dymaptic.GeoBlazor.Core.Components.Widgets.Domain? domain = null, dymaptic.GeoBlazor.Core.Components.Widgets.FormInput? input = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.FieldName.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.FieldName.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Hint.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Hint.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Input.get -> dymaptic.GeoBlazor.Core.Components.Widgets.FormInput?
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Input.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.RequiredExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.RequiredExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.ValueExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FormElement
dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Description.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.FormElement() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.VisibilityExpression.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.VisibilityExpression.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormInput
dymaptic.GeoBlazor.Core.Components.Widgets.FormInput.FormInput() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Description.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Description.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Elements.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Widgets.FormElement!>?
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Elements.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.ExpressionInfos.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo!>?
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.ExpressionInfos.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.FormTemplate() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.FormTemplate(string? title = null, string? description = null, bool? preserveFieldValuesWhenHidden = null, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Widgets.FormElement!>? elements = null, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo!>? expressionInfos = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.PreserveFieldValuesWhenHidden.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.PreserveFieldValuesWhenHidden.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.Animate.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.Animate.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.Duration.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.Duration.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.Easing.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.Easing.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.GoToOptions(bool? Animate, double? Duration, string? Easing, double? SpeedFactor, double? MaxDuration) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.MaxDuration.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.MaxDuration.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.SpeedFactor.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions.SpeedFactor.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters.GoToOverrideParameters(System.Guid ViewId, dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget! Target, dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions? Options) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters.Options.get -> dymaptic.GeoBlazor.Core.Components.Widgets.GoToOptions?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters.Options.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters.Target.get -> dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget!
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters.Target.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters.ViewId.get -> System.Guid
dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters.ViewId.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Center.get -> double[]?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Center.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.GoToTarget(object? Target, double[]? Center, double? Scale, double? Zoom, double? Heading, double? Tilt, dymaptic.GeoBlazor.Core.Components.Geometries.Point? Position, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]? TargetGeometries, dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]? TargetGraphics, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry? TargetGeometry, dymaptic.GeoBlazor.Core.Components.Layers.Graphic? TargetGraphic) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Heading.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Heading.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Position.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Position.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Scale.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Scale.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Target.get -> object?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Target.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.TargetGeometries.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.TargetGeometries.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.TargetGeometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.TargetGeometry.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.TargetGraphic.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.TargetGraphic.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.TargetGraphics.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.TargetGraphics.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Tilt.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Tilt.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Zoom.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.GoToTarget.Zoom.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement
dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.Elements.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement!>?
dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.Elements.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.GroupElement() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget
dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.HomeWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.InheritedDomain
dymaptic.GeoBlazor.Core.Components.Widgets.InheritedDomain.InheritedDomain() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo
dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.Layer.get -> dymaptic.GeoBlazor.Core.Components.Layers.Layer!
dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.Layer.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.LayerInfo() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.SublayerIds.get -> int[]?
dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.SublayerIds.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.HasCustomHandler.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.LayerListWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.LayerListWidgetObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget!>!
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.OnListItemCreated(dymaptic.GeoBlazor.Core.Components.Widgets.ListItem! item) -> System.Threading.Tasks.Task<object?>!
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.OnListItemCreatedHandler.get -> System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.ListItem!, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.ListItem!>!>?
dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.OnListItemCreatedHandler.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.Layout.get -> dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout?
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.Layout.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.LegendStyle() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.Type.get -> dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType?
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.Type.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout.Auto = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout.SideBySide = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout.Stack = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType.Card = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType
dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType.Classic = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType
dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget
dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.LayerInfos.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo!>!
dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.LayerInfos.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.LegendWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.Style.get -> dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle?
dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.Style.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.ActionsSections.get -> dymaptic.GeoBlazor.Core.Components.ActionBase![]![]?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.ActionsSections.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Children.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Widgets.ListItem!>?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Children.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.ChildrenSortable.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.ChildrenSortable.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Hidden.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Hidden.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.LayerId.get -> System.Guid?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.LayerId.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.ListItem() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Open.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Open.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Panel.get -> dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Panel.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Sortable.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Sortable.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Visible.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItem.Visible.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ClassName.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ClassName.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ContentDivId.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ContentDivId.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ContentWidgetId.get -> System.Guid?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ContentWidgetId.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Disabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Disabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.FlowEnabled.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.FlowEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Icon.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Icon.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Image.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Image.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ListItemPanel() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Open.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Open.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ShowLegendContent.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.ShowLegendContent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.StringContent.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.StringContent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Visible.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.ListItemPanel.Visible.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.GoToOverride.get -> System.Action<dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters!>?
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.GoToOverride.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.HasGoToOverride.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.LocateWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.LocateWidgetObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget!>!
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.OnJavaScriptGoToOverride(dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters! goToOverrideParams) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.RotationEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.RotationEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.Scale.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.Scale.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.ActiveTool.get -> dymaptic.GeoBlazor.Core.Components.ActiveTool?
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.ActiveTool.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.AreaUnit.get -> dymaptic.GeoBlazor.Core.Objects.AreaUnit?
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.AreaUnit.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.LinearUnit.get -> dymaptic.GeoBlazor.Core.Objects.LengthUnit?
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.LinearUnit.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.MeasurementWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.MeasurementWidgetObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget!>!
dymaptic.GeoBlazor.Core.Components.Widgets.MissingMapViewReferenceException
dymaptic.GeoBlazor.Core.Components.Widgets.MissingMapViewReferenceException.MissingMapViewReferenceException(string! message) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Mode
dymaptic.GeoBlazor.Core.Components.Widgets.Mode.Auto = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.Mode
dymaptic.GeoBlazor.Core.Components.Widgets.Mode.Drawer = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.Mode
dymaptic.GeoBlazor.Core.Components.Widgets.Mode.Floating = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.Mode
dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment
dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment.Auto = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment
dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment.BottomCenter = 4 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment
dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment.BottomLeft = 3 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment
dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment.BottomRight = 5 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment
dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment.TopCenter = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment
dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment.TopRight = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.BreakPoint.get -> dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.BreakPoint.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.ButtonEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.ButtonEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.PopupDockOptions() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.PopupDockOptions(dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition? position = null, bool? buttonEnabled = null, dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint? breakPoint = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.Position.get -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.Position.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition.Auto = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition.BottomCenter = 5 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition.BottomLeft = 4 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition.BottomRight = 6 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition.TopCenter = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition.TopLeft = 3 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition
dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition.TopRight = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.Collapsed.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.Collapsed.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.FeatureMenuOpen.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.FeatureMenuOpen.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.Features.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.Features.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.FetchFeatures.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.FetchFeatures.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.Location.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.Location.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.PopupOpenOptions() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.ShouldFocus.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.ShouldFocus.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.StringContent.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.StringContent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.UpdateLocationEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.UpdateLocationEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.WidgetContent.get -> dymaptic.GeoBlazor.Core.Components.Widgets.Widget?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOpenOptions.WidgetContent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOptions
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOptions.DockOptions.get -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOptions.DockOptions.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOptions.PopupOptions(dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions? dockOptions = null, dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements? visibleElements = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOptions.VisibleElements.get -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupOptions.VisibleElements.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements
dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.CloseButton.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.CloseButton.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.FeatureNavigation.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.FeatureNavigation.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.PopupVisibleElements() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.PopupVisibleElements(bool? closeButton = null, bool? featureNavigation = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Actions.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.ActionBase!>?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Actions.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Alignment.get -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Alignment.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.AutoCloseEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.AutoCloseEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.AutoOpenEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.AutoOpenEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Clear() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Close() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Collapsed.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Collapsed.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.CollapseEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.CollapseEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DefaultPopupTemplateEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DefaultPopupTemplateEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DockEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DockEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DockOptions.get -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DockOptions.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Features.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Features.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.FetchFeatures() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.Graphic![]!>!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.GetFeatureCount() -> System.Threading.Tasks.Task<int>!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.GetSelectedFeature() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.Graphic?>!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.GetSelectedFeatureIndex() -> System.Threading.Tasks.Task<int>!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.GetVisibility() -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.HeadingLevel.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.HeadingLevel.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.HighlightEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.HighlightEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Location.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Location.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.MaxInlineActions.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.MaxInlineActions.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.OnTriggerAction(string! actionId) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Open() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.PopupWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.SetContent(string! stringContent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.SpinnerEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.SpinnerEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.StringContent.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.StringContent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Title.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Title.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.VisibleElements.get -> dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.VisibleElements.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.WidgetContent.get -> dymaptic.GeoBlazor.Core.Components.Widgets.Widget?
dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.WidgetContent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput
dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.NoValueOptionLabel.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.NoValueOptionLabel.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.RadioButtonsInput() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.ShowNoValueOption.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.ShowNoValueOption.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain
dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.MaxValue.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.MaxValue.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.MinValue.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.MinValue.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.RangeDomain() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.ScaleBarWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.Unit.get -> dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit?
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.Unit.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit.Dual = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit.Imperial = 3 -> dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit.Metric = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit
dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit.NonMetric = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit
dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu
dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu.None = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu
dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu.Source = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu
dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu.Suggestion = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu
dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu.Warning = 3 -> dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ActiveMenu.get -> dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ActiveMenu.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ActiveSourceIndex.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ActiveSourceIndex.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.AllPlaceholder.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.AllPlaceholder.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.AutoSelect.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.AutoSelect.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Disabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Disabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetActiveMenu() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.SearchMenu>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetActiveSource() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SearchSource?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetActiveSourceIndex() -> System.Threading.Tasks.Task<int>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetAllSources() -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Objects.SearchSource!>!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetDefaultSources() -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Objects.SearchSource!>!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetResultGraphic() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Layers.Graphic?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetResults() -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Objects.SearchResultResponse!>!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetSearchTerm() -> System.Threading.Tasks.Task<string!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetSelectedResult() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SearchResult!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GetSuggestions() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SuggestResult![]!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GoToOverride.get -> System.Action<dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters!>?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.GoToOverride.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.HasGoToOverride.get -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.IncludeDefaultSources.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.IncludeDefaultSources.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.LocationEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.LocationEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.MaxResults.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.MaxResults.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.MaxSuggestions.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.MaxSuggestions.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.MinSuggestCharacters.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.MinSuggestCharacters.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.OnJavaScriptGoToOverride(dymaptic.GeoBlazor.Core.Components.Widgets.GoToOverrideParameters! goToOverrideParams) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.OnJavaScriptSearchSelectResult(dymaptic.GeoBlazor.Core.Objects.SearchResult! searchResult) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.OnSearchSelectResultEvent.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Objects.SearchResult!>
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.OnSearchSelectResultEvent.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.PopupEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.PopupEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.PopupTemplate.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Portal.get -> dymaptic.GeoBlazor.Core.Components.Portal?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Portal.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ResultGraphicEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ResultGraphicEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Search(double[]![]! searchTerm) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SearchResponse!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Search(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! searchTerm) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SearchResponse!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Search(dymaptic.GeoBlazor.Core.Objects.SuggestResult! searchTerm) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SearchResponse!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Search(string! searchTerm) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SearchResponse!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SearchAllEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SearchAllEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SearchTerm.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SearchTerm.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SearchWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SearchWidgetObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SetSearchTerm(string! searchTerm) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Sources.get -> System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.SearchSource!>?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Sources.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.Suggest(string? value = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SuggestResponse!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SuggestionsEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.SuggestionsEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderDragState.Drag = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderDragState.Start = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout
dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout.Horizontal = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout
dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout.HorizontalReversed = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout
dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout.Vertical = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout
dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout.VerticalReversed = 3 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxChangeEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxChangeEvent.OldValue.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxChangeEvent.OldValue.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxChangeEvent.SliderMaxChangeEvent(double OldValue, double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxChangeEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxChangeEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxClickEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxClickEvent.SliderMaxClickEvent(double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxClickEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxClickEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinChangeEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinChangeEvent.OldValue.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinChangeEvent.OldValue.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinChangeEvent.SliderMinChangeEvent(double OldValue, double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinChangeEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinChangeEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinClickEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinClickEvent.SliderMinClickEvent(double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinClickEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinClickEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent.Index.get -> int
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent.Index.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent.SliderSegmentClickEvent(int Index, int[]! ThumbIndices, double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent.ThumbIndices.get -> int[]!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent.ThumbIndices.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent.Index.get -> int
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent.Index.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent.SliderSegmentDragEvent(int Index, dymaptic.GeoBlazor.Core.Components.Widgets.SliderDragState State, int[]! ThumbIndices) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent.State.get -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent.State.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent.ThumbIndices.get -> int[]!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent.ThumbIndices.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderState.Disabled = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderState.Dragging = 3 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderState.Editing = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderState.Ready = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent.Index.get -> int
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent.Index.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent.OldValue.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent.OldValue.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent.SliderThumbChangeEvent(int Index, double OldValue, double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbClickEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbClickEvent.Index.get -> int
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbClickEvent.Index.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbClickEvent.SliderThumbClickEvent(int Index, double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbClickEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbClickEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent.Index.get -> int
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent.Index.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent.SliderThumbDragEvent(int Index, dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState State, double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent.State.get -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent.State.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState.Drag = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState.Start = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState.Stop = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragState
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent.ConfigIndex.get -> int
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent.ConfigIndex.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent.GroupIndex.get -> int
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent.GroupIndex.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent.SliderTickClickEvent(double Value, int ConfigIndex, int GroupIndex) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.LabelFormatFunction.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.LabelFormatFunction.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.LabelsVisible.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.LabelsVisible.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.Mode.get -> dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.Mode.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.SingleValue.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.SingleValue.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.SliderTickConfig() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.SliderTickConfig(dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode? mode = null, double? singleValue = null, System.Collections.Generic.IReadOnlyCollection<double>? values = null, bool? labelsVisible = null, string? tickCreatedFunction = null, string? labelFormatFunction = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.TickCreatedFunction.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.TickCreatedFunction.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.Values.get -> System.Collections.Generic.IReadOnlyCollection<double>?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig.Values.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTrackClickEvent
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTrackClickEvent.SliderTrackClickEvent(double Value) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTrackClickEvent.Value.get -> double
dymaptic.GeoBlazor.Core.Components.Widgets.SliderTrackClickEvent.Value.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements
dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements.Labels.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements.Labels.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements.RangeLabels.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements.RangeLabels.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements.SliderVisibleElements() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements.SliderVisibleElements(bool? labels = null, bool? rangeLabels = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Disabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Disabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.DraggableSegmentsEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.DraggableSegmentsEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.EffectiveMax.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.EffectiveMax.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.EffectiveMin.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.EffectiveMin.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetEffectiveSegmentElements() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Components.ElementReference[]?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetLabelElements() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Components.ElementReference[]?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetLabels() -> System.Threading.Tasks.Task<string![]?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetMaxLabelElement() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Components.ElementReference?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetMinLabelElement() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Components.ElementReference?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetSegmentElements() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Components.ElementReference[]?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetState() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.SliderState?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetThumbElements() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Components.ElementReference[]?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetTickElements() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.TickElementGroup![]![]?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.GetTrackElement() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Components.ElementReference?>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.InputCreatedFunction.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.InputCreatedFunction.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.InputFormatFunction.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.InputFormatFunction.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.InputParseFunction.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.InputParseFunction.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Label.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Label.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.LabelFormatFunction.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.LabelFormatFunction.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.LabelInputsEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.LabelInputsEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Layout.get -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Layout.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Max.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Max.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Min.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Min.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsMaxChange(dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxChangeEvent! changeEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsMaxClick(dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsMinChange(dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinChangeEvent! changeEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsMinClick(dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsSegmentClick(dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsSegmentDrag(dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent! dragEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsThumbChange(dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent! changeEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsThumbClick(dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsThumbDrag(dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent! dragEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsTickClick(dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsTrackClick(dymaptic.GeoBlazor.Core.Components.Widgets.SliderTrackClickEvent! clickEvent) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnJsValueChanged(double[]! newValues) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnMaxChange.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxChangeEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnMaxChange.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnMaxClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderMaxClickEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnMaxClick.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnMinChange.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinChangeEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnMinChange.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnMinClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderMinClickEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnMinClick.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnSegmentClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentClickEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnSegmentClick.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnSegmentDrag.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderSegmentDragEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnSegmentDrag.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnThumbChange.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbChangeEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnThumbChange.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnThumbClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbClickEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnThumbClick.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnThumbDrag.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderThumbDragEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnThumbDrag.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnTickClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickClickEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnTickClick.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnTrackClick.get -> Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Widgets.SliderTrackClickEvent!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.OnTrackClick.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Precision.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Precision.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.RangeLabelInputsEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.RangeLabelInputsEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SetMax(double max) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SetMin(double min) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SetStepInterval(double stepInterval) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SetSteps(System.Collections.Generic.IReadOnlyCollection<double>! steps) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SetValues(System.Collections.Generic.IReadOnlyCollection<double>! values) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SliderWidget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SliderWidget(string! containerId, bool? disabled = null, bool? draggableSegmentsEnabled = null, double? effectiveMax = null, double? effectiveMin = null, string? label = null, bool? labelInputsEnabled = null, dymaptic.GeoBlazor.Core.Components.Widgets.SliderLayout? layout = null, double? max = null, double? min = null, double? precision = null, bool? rangeLabelInputsEnabled = null, bool? snapOnClickEnabled = null, double[]? steps = null, double? stepInterval = null, bool? syncedSegmentsEnabled = null, bool? thumbsConstrained = null, System.Collections.Generic.IReadOnlyCollection<double>? values = null, string? inputCreatedFunction = null, string? inputFormatFunction = null, string? inputParseFunction = null, string? labelFormatFunction = null, string? thumbCreatedFunction = null, System.Collections.Generic.IReadOnlyCollection<dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig!>? tickConfigs = null, bool? visible = null, dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements? visibleElements = null) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SnapOnClickEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SnapOnClickEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.StepInterval.get -> double?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.StepInterval.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Steps.get -> System.Collections.Generic.IReadOnlyCollection<double>?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Steps.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SyncedSegmentsEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.SyncedSegmentsEnabled.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.ThumbCreatedFunction.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.ThumbCreatedFunction.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.ThumbsConstrained.get -> bool?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.ThumbsConstrained.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.TickConfigs.get -> System.Collections.Generic.IReadOnlyList<dymaptic.GeoBlazor.Core.Components.Widgets.SliderTickConfig!>!
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.TickConfigs.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.ValueChanged.get -> Microsoft.AspNetCore.Components.EventCallback<double[]!>
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.ValueChanged.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Values.get -> System.Collections.Generic.IReadOnlyCollection<double>?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.Values.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.VisibleElements.get -> dymaptic.GeoBlazor.Core.Components.Widgets.SliderVisibleElements?
dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.VisibleElements.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput
dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.OffValue.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.OffValue.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.OnValue.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.OnValue.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.SwitchInput() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput
dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.MaxLength.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.MaxLength.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.MinLength.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.MinLength.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.TextAreaInput() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput
dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.MaxLength.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.MaxLength.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.MinLength.get -> int?
dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.MinLength.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.TextBoxInput() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode
dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode.Count = 0 -> dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode
dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode.Percent = 1 -> dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode
dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode.Position = 2 -> dymaptic.GeoBlazor.Core.Components.Widgets.TickConfigMode
dymaptic.GeoBlazor.Core.Components.Widgets.TickElementGroup
dymaptic.GeoBlazor.Core.Components.Widgets.TickElementGroup.LabelElement.get -> Microsoft.AspNetCore.Components.ElementReference?
dymaptic.GeoBlazor.Core.Components.Widgets.TickElementGroup.LabelElement.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TickElementGroup.TickElement.get -> Microsoft.AspNetCore.Components.ElementReference?
dymaptic.GeoBlazor.Core.Components.Widgets.TickElementGroup.TickElement.init -> void
dymaptic.GeoBlazor.Core.Components.Widgets.TickElementGroup.TickElementGroup(Microsoft.AspNetCore.Components.ElementReference? TickElement, Microsoft.AspNetCore.Components.ElementReference? LabelElement) -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Widget
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.DotNetWidgetReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Components.Widgets.Widget!>!
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.JsWidgetReference -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.MapView.get -> dymaptic.GeoBlazor.Core.Components.Views.MapView?
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.MapView.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.OnJsWidgetCreated(Microsoft.JSInterop.IJSObjectReference! jsObjectReference) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.OnWidgetCreated.get -> Microsoft.AspNetCore.Components.EventCallback
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.OnWidgetCreated.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position.get -> dymaptic.GeoBlazor.Core.Components.OverlayPosition?
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position.set -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.SetProperty(string! propertyName, object? value) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Widget() -> void
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetChanged -> bool
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId.get -> string?
dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId.set -> void
dymaptic.GeoBlazor.Core.DependencyExtension
dymaptic.GeoBlazor.Core.Events.BlurEvent
dymaptic.GeoBlazor.Core.Events.BlurEvent.BlurEvent(dymaptic.GeoBlazor.Core.Components.Views.MapView! Target, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native, string! Type, double Timestamp, bool? Cancelable) -> void
dymaptic.GeoBlazor.Core.Events.BlurEvent.Target.get -> dymaptic.GeoBlazor.Core.Components.Views.MapView!
dymaptic.GeoBlazor.Core.Events.BlurEvent.Target.init -> void
dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent
dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent.Bookmark.get -> dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark!
dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent.Bookmark.init -> void
dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent.BookmarkSelectEvent(dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark! Bookmark) -> void
dymaptic.GeoBlazor.Core.Events.ClickEvent
dymaptic.GeoBlazor.Core.Events.ClickEvent.Button.get -> int
dymaptic.GeoBlazor.Core.Events.ClickEvent.Button.init -> void
dymaptic.GeoBlazor.Core.Events.ClickEvent.Buttons.get -> int
dymaptic.GeoBlazor.Core.Events.ClickEvent.Buttons.init -> void
dymaptic.GeoBlazor.Core.Events.ClickEvent.ClickEvent(string! Type, int? EventId, bool? Cancelable, dymaptic.GeoBlazor.Core.Components.Geometries.Point! MapPoint, double X, double Y, int Button, int Buttons, double Timestamp, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native, dymaptic.GeoBlazor.Core.Events.PointerType? PointerType) -> void
dymaptic.GeoBlazor.Core.Events.ClickEvent.MapPoint.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point!
dymaptic.GeoBlazor.Core.Events.ClickEvent.MapPoint.init -> void
dymaptic.GeoBlazor.Core.Events.ClickEvent.X.get -> double
dymaptic.GeoBlazor.Core.Events.ClickEvent.X.init -> void
dymaptic.GeoBlazor.Core.Events.ClickEvent.Y.get -> double
dymaptic.GeoBlazor.Core.Events.ClickEvent.Y.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.DomPointerEvent(long? PointerId, double? Width, double? Height, double? Pressure, double? TangentialPressure, double? TiltX, double? TiltY, double? Twist, dymaptic.GeoBlazor.Core.Events.PointerType? PointerType, bool? IsPrimary, bool? IsTrusted) -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.Height.get -> double?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.Height.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.IsPrimary.get -> bool?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.IsPrimary.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.IsTrusted.get -> bool?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.IsTrusted.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.PointerId.get -> long?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.PointerId.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.PointerType.get -> dymaptic.GeoBlazor.Core.Events.PointerType?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.PointerType.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.Pressure.get -> double?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.Pressure.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.TangentialPressure.get -> double?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.TangentialPressure.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.TiltX.get -> double?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.TiltX.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.TiltY.get -> double?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.TiltY.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.Twist.get -> double?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.Twist.init -> void
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.Width.get -> double?
dymaptic.GeoBlazor.Core.Events.DomPointerEvent.Width.init -> void
dymaptic.GeoBlazor.Core.Events.DragAction
dymaptic.GeoBlazor.Core.Events.DragAction.Added = 1 -> dymaptic.GeoBlazor.Core.Events.DragAction
dymaptic.GeoBlazor.Core.Events.DragAction.End = 4 -> dymaptic.GeoBlazor.Core.Events.DragAction
dymaptic.GeoBlazor.Core.Events.DragAction.Removed = 3 -> dymaptic.GeoBlazor.Core.Events.DragAction
dymaptic.GeoBlazor.Core.Events.DragAction.Start = 0 -> dymaptic.GeoBlazor.Core.Events.DragAction
dymaptic.GeoBlazor.Core.Events.DragAction.Update = 2 -> dymaptic.GeoBlazor.Core.Events.DragAction
dymaptic.GeoBlazor.Core.Events.DragEvent
dymaptic.GeoBlazor.Core.Events.DragEvent.Action.get -> dymaptic.GeoBlazor.Core.Events.DragAction
dymaptic.GeoBlazor.Core.Events.DragEvent.Action.init -> void
dymaptic.GeoBlazor.Core.Events.DragEvent.Angle.get -> double
dymaptic.GeoBlazor.Core.Events.DragEvent.Angle.init -> void
dymaptic.GeoBlazor.Core.Events.DragEvent.Button.get -> int
dymaptic.GeoBlazor.Core.Events.DragEvent.Button.init -> void
dymaptic.GeoBlazor.Core.Events.DragEvent.Buttons.get -> int
dymaptic.GeoBlazor.Core.Events.DragEvent.Buttons.init -> void
dymaptic.GeoBlazor.Core.Events.DragEvent.DragEvent(string! Type, int? EventId, bool? Cancelable, dymaptic.GeoBlazor.Core.Events.DragAction Action, double X, double Y, dymaptic.GeoBlazor.Core.Components.Geometries.Point! Origin, int Button, int Buttons, double Radius, double Angle, double Timestamp, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native, dymaptic.GeoBlazor.Core.Events.PointerType? PointerType) -> void
dymaptic.GeoBlazor.Core.Events.DragEvent.Origin.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point!
dymaptic.GeoBlazor.Core.Events.DragEvent.Origin.init -> void
dymaptic.GeoBlazor.Core.Events.DragEvent.Radius.get -> double
dymaptic.GeoBlazor.Core.Events.DragEvent.Radius.init -> void
dymaptic.GeoBlazor.Core.Events.DragEvent.X.get -> double
dymaptic.GeoBlazor.Core.Events.DragEvent.X.init -> void
dymaptic.GeoBlazor.Core.Events.DragEvent.Y.get -> double
dymaptic.GeoBlazor.Core.Events.DragEvent.Y.init -> void
dymaptic.GeoBlazor.Core.Events.FocusEvent
dymaptic.GeoBlazor.Core.Events.FocusEvent.FocusEvent(dymaptic.GeoBlazor.Core.Components.Views.MapView! Target, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native, string! Type, double Timestamp, bool? Cancelable) -> void
dymaptic.GeoBlazor.Core.Events.FocusEvent.Target.get -> dymaptic.GeoBlazor.Core.Components.Views.MapView!
dymaptic.GeoBlazor.Core.Events.FocusEvent.Target.init -> void
dymaptic.GeoBlazor.Core.Events.GraphicHit
dymaptic.GeoBlazor.Core.Events.GraphicHit.Graphic.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic!
dymaptic.GeoBlazor.Core.Events.GraphicHit.Graphic.init -> void
dymaptic.GeoBlazor.Core.Events.GraphicHit.GraphicHit(dymaptic.GeoBlazor.Core.Components.Layers.Graphic! Graphic, System.Guid? LayerId, dymaptic.GeoBlazor.Core.Components.Geometries.Point! MapPoint) -> void
dymaptic.GeoBlazor.Core.Events.GraphicHit.LayerId.get -> System.Guid?
dymaptic.GeoBlazor.Core.Events.GraphicHit.LayerId.init -> void
dymaptic.GeoBlazor.Core.Events.GroundIntersectionResult
dymaptic.GeoBlazor.Core.Events.GroundIntersectionResult.Distance.get -> double
dymaptic.GeoBlazor.Core.Events.GroundIntersectionResult.Distance.init -> void
dymaptic.GeoBlazor.Core.Events.GroundIntersectionResult.GroundIntersectionResult(dymaptic.GeoBlazor.Core.Components.Geometries.Point! MapPoint, double Distance) -> void
dymaptic.GeoBlazor.Core.Events.GroundIntersectionResult.MapPoint.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point!
dymaptic.GeoBlazor.Core.Events.GroundIntersectionResult.MapPoint.init -> void
dymaptic.GeoBlazor.Core.Events.HitTestOptions
dymaptic.GeoBlazor.Core.Events.HitTestOptions.ExcludeByGeoBlazorId.get -> System.Collections.Generic.IEnumerable<System.Guid>?
dymaptic.GeoBlazor.Core.Events.HitTestOptions.ExcludeByGeoBlazorId.set -> void
dymaptic.GeoBlazor.Core.Events.HitTestOptions.ExcludeGraphicsByArcGISId.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Events.HitTestOptions.ExcludeGraphicsByArcGISId.set -> void
dymaptic.GeoBlazor.Core.Events.HitTestOptions.ExcludeLayersByArcGISId.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Events.HitTestOptions.ExcludeLayersByArcGISId.set -> void
dymaptic.GeoBlazor.Core.Events.HitTestOptions.IncludeByGeoBlazorId.get -> System.Collections.Generic.IEnumerable<System.Guid>?
dymaptic.GeoBlazor.Core.Events.HitTestOptions.IncludeByGeoBlazorId.set -> void
dymaptic.GeoBlazor.Core.Events.HitTestOptions.IncludeGraphicsByArcGISId.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Events.HitTestOptions.IncludeGraphicsByArcGISId.set -> void
dymaptic.GeoBlazor.Core.Events.HitTestOptions.IncludeLayersByArcGISId.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Events.HitTestOptions.IncludeLayersByArcGISId.set -> void
dymaptic.GeoBlazor.Core.Events.HitTestResult
dymaptic.GeoBlazor.Core.Events.HitTestResult.Ground.get -> dymaptic.GeoBlazor.Core.Events.GroundIntersectionResult?
dymaptic.GeoBlazor.Core.Events.HitTestResult.Ground.init -> void
dymaptic.GeoBlazor.Core.Events.HitTestResult.HitTestResult(dymaptic.GeoBlazor.Core.Events.ScreenPoint! ScreenPoint) -> void
dymaptic.GeoBlazor.Core.Events.HitTestResult.Results.get -> dymaptic.GeoBlazor.Core.Events.ViewHit![]!
dymaptic.GeoBlazor.Core.Events.HitTestResult.Results.set -> void
dymaptic.GeoBlazor.Core.Events.HitTestResult.ScreenPoint.get -> dymaptic.GeoBlazor.Core.Events.ScreenPoint!
dymaptic.GeoBlazor.Core.Events.HitTestResult.ScreenPoint.init -> void
dymaptic.GeoBlazor.Core.Events.JsEvent
dymaptic.GeoBlazor.Core.Events.JsEvent.Cancelable.get -> bool?
dymaptic.GeoBlazor.Core.Events.JsEvent.Cancelable.init -> void
dymaptic.GeoBlazor.Core.Events.JsEvent.EventId.get -> int?
dymaptic.GeoBlazor.Core.Events.JsEvent.EventId.init -> void
dymaptic.GeoBlazor.Core.Events.JsEvent.JsEvent(string! Type, int? EventId, bool? Cancelable, double Timestamp, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native, dymaptic.GeoBlazor.Core.Events.PointerType? PointerType) -> void
dymaptic.GeoBlazor.Core.Events.JsEvent.Native.get -> dymaptic.GeoBlazor.Core.Events.DomPointerEvent!
dymaptic.GeoBlazor.Core.Events.JsEvent.Native.init -> void
dymaptic.GeoBlazor.Core.Events.JsEvent.PointerType.get -> dymaptic.GeoBlazor.Core.Events.PointerType?
dymaptic.GeoBlazor.Core.Events.JsEvent.PointerType.init -> void
dymaptic.GeoBlazor.Core.Events.JsEvent.Timestamp.get -> double
dymaptic.GeoBlazor.Core.Events.JsEvent.Timestamp.init -> void
dymaptic.GeoBlazor.Core.Events.JsEvent.Type.get -> string!
dymaptic.GeoBlazor.Core.Events.JsEvent.Type.init -> void
dymaptic.GeoBlazor.Core.Events.KeyDownEvent
dymaptic.GeoBlazor.Core.Events.KeyDownEvent.Key.get -> string!
dymaptic.GeoBlazor.Core.Events.KeyDownEvent.Key.init -> void
dymaptic.GeoBlazor.Core.Events.KeyDownEvent.KeyDownEvent(string! Type, int? EventId, bool? Cancelable, bool Repeat, string! Key, double Timestamp, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native, dymaptic.GeoBlazor.Core.Events.PointerType? PointerType) -> void
dymaptic.GeoBlazor.Core.Events.KeyDownEvent.Repeat.get -> bool
dymaptic.GeoBlazor.Core.Events.KeyDownEvent.Repeat.init -> void
dymaptic.GeoBlazor.Core.Events.KeyUpEvent
dymaptic.GeoBlazor.Core.Events.KeyUpEvent.Key.get -> string!
dymaptic.GeoBlazor.Core.Events.KeyUpEvent.Key.init -> void
dymaptic.GeoBlazor.Core.Events.KeyUpEvent.KeyUpEvent(string! Type, int? EventId, bool? Cancelable, string! Key, double Timestamp, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native, dymaptic.GeoBlazor.Core.Events.PointerType? PointerType) -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent
dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent.Error.get -> dymaptic.GeoBlazor.Core.Exceptions.JavascriptError!
dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent.Error.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent.Layer.get -> dymaptic.GeoBlazor.Core.Components.Layers.Layer!
dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent.Layer.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent.LayerViewCreateErrorEvent(dymaptic.GeoBlazor.Core.Components.Layers.Layer! Layer, dymaptic.GeoBlazor.Core.Exceptions.JavascriptError! Error) -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent
dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent.Layer.get -> dymaptic.GeoBlazor.Core.Components.Layers.Layer?
dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent.Layer.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent.LayerView.get -> dymaptic.GeoBlazor.Core.Components.Layers.LayerView?
dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent.LayerView.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent.LayerViewCreateEvent(dymaptic.GeoBlazor.Core.Components.Layers.Layer? Layer, dymaptic.GeoBlazor.Core.Components.Layers.LayerView? LayerView) -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.IsBasemapLayer.get -> bool
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.IsBasemapLayer.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.Layer.get -> dymaptic.GeoBlazor.Core.Components.Layers.Layer?
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.Layer.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerGeoBlazorId.get -> System.Guid
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerGeoBlazorId.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerObjectRef.get -> Microsoft.JSInterop.IJSObjectReference!
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerObjectRef.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerView.get -> dymaptic.GeoBlazor.Core.Components.Layers.LayerView?
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerView.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerViewCreateInternalEvent(Microsoft.JSInterop.IJSObjectReference! LayerObjectRef, Microsoft.JSInterop.IJSObjectReference! LayerViewObjectRef, System.Guid LayerGeoBlazorId, dymaptic.GeoBlazor.Core.Components.Layers.Layer? Layer, dymaptic.GeoBlazor.Core.Components.Layers.LayerView? LayerView, bool IsBasemapLayer) -> void
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerViewObjectRef.get -> Microsoft.JSInterop.IJSObjectReference!
dymaptic.GeoBlazor.Core.Events.LayerViewCreateInternalEvent.LayerViewObjectRef.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent
dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent.Layer.get -> dymaptic.GeoBlazor.Core.Components.Layers.Layer!
dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent.Layer.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent.LayerView.get -> dymaptic.GeoBlazor.Core.Components.Layers.LayerView!
dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent.LayerView.init -> void
dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent.LayerViewDestroyEvent(dymaptic.GeoBlazor.Core.Components.Layers.Layer! Layer, dymaptic.GeoBlazor.Core.Components.Layers.LayerView! LayerView) -> void
dymaptic.GeoBlazor.Core.Events.MouseWheelEvent
dymaptic.GeoBlazor.Core.Events.MouseWheelEvent.DeltaY.get -> double
dymaptic.GeoBlazor.Core.Events.MouseWheelEvent.DeltaY.init -> void
dymaptic.GeoBlazor.Core.Events.MouseWheelEvent.MouseWheelEvent(string! Type, int? EventId, bool? Cancelable, double X, double Y, double DeltaY, double Timestamp, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native, dymaptic.GeoBlazor.Core.Events.PointerType? PointerType) -> void
dymaptic.GeoBlazor.Core.Events.MouseWheelEvent.X.get -> double
dymaptic.GeoBlazor.Core.Events.MouseWheelEvent.X.init -> void
dymaptic.GeoBlazor.Core.Events.MouseWheelEvent.Y.get -> double
dymaptic.GeoBlazor.Core.Events.MouseWheelEvent.Y.init -> void
dymaptic.GeoBlazor.Core.Events.PointerEvent
dymaptic.GeoBlazor.Core.Events.PointerEvent.Button.get -> int
dymaptic.GeoBlazor.Core.Events.PointerEvent.Button.init -> void
dymaptic.GeoBlazor.Core.Events.PointerEvent.Buttons.get -> int
dymaptic.GeoBlazor.Core.Events.PointerEvent.Buttons.init -> void
dymaptic.GeoBlazor.Core.Events.PointerEvent.PointerEvent(string! Type, int? EventId, bool? Cancelable, long PointerId, dymaptic.GeoBlazor.Core.Events.PointerType? PointerType, double X, double Y, int Button, int Buttons, double Timestamp, dymaptic.GeoBlazor.Core.Events.DomPointerEvent! Native) -> void
dymaptic.GeoBlazor.Core.Events.PointerEvent.PointerId.get -> long
dymaptic.GeoBlazor.Core.Events.PointerEvent.PointerId.init -> void
dymaptic.GeoBlazor.Core.Events.PointerEvent.X.get -> double
dymaptic.GeoBlazor.Core.Events.PointerEvent.X.init -> void
dymaptic.GeoBlazor.Core.Events.PointerEvent.Y.get -> double
dymaptic.GeoBlazor.Core.Events.PointerEvent.Y.init -> void
dymaptic.GeoBlazor.Core.Events.PointerType
dymaptic.GeoBlazor.Core.Events.PointerType.Mouse = 0 -> dymaptic.GeoBlazor.Core.Events.PointerType
dymaptic.GeoBlazor.Core.Events.PointerType.Pen = 1 -> dymaptic.GeoBlazor.Core.Events.PointerType
dymaptic.GeoBlazor.Core.Events.PointerType.Touch = 2 -> dymaptic.GeoBlazor.Core.Events.PointerType
dymaptic.GeoBlazor.Core.Events.ResizeEvent
dymaptic.GeoBlazor.Core.Events.ResizeEvent.Height.get -> double
dymaptic.GeoBlazor.Core.Events.ResizeEvent.Height.init -> void
dymaptic.GeoBlazor.Core.Events.ResizeEvent.OldHeight.get -> double
dymaptic.GeoBlazor.Core.Events.ResizeEvent.OldHeight.init -> void
dymaptic.GeoBlazor.Core.Events.ResizeEvent.OldWidth.get -> double
dymaptic.GeoBlazor.Core.Events.ResizeEvent.OldWidth.init -> void
dymaptic.GeoBlazor.Core.Events.ResizeEvent.ResizeEvent(double OldWidth, double OldHeight, double Width, double Height) -> void
dymaptic.GeoBlazor.Core.Events.ResizeEvent.Width.get -> double
dymaptic.GeoBlazor.Core.Events.ResizeEvent.Width.init -> void
dymaptic.GeoBlazor.Core.Events.ScreenPoint
dymaptic.GeoBlazor.Core.Events.ScreenPoint.ScreenPoint(double X, double Y) -> void
dymaptic.GeoBlazor.Core.Events.ScreenPoint.X.get -> double
dymaptic.GeoBlazor.Core.Events.ScreenPoint.X.init -> void
dymaptic.GeoBlazor.Core.Events.ScreenPoint.Y.get -> double
dymaptic.GeoBlazor.Core.Events.ScreenPoint.Y.init -> void
dymaptic.GeoBlazor.Core.Events.ViewHit
dymaptic.GeoBlazor.Core.Events.ViewHit.MapPoint.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point!
dymaptic.GeoBlazor.Core.Events.ViewHit.MapPoint.init -> void
dymaptic.GeoBlazor.Core.Events.ViewHit.Type.get -> string!
dymaptic.GeoBlazor.Core.Events.ViewHit.Type.init -> void
dymaptic.GeoBlazor.Core.Events.ViewHit.ViewHit(string! Type, dymaptic.GeoBlazor.Core.Components.Geometries.Point! MapPoint) -> void
dymaptic.GeoBlazor.Core.Exceptions.InvalidChildElementException
dymaptic.GeoBlazor.Core.Exceptions.InvalidChildElementException.InvalidChildElementException(string! parentType, string! childType) -> void
dymaptic.GeoBlazor.Core.Exceptions.JavascriptError
dymaptic.GeoBlazor.Core.Exceptions.JavascriptError.JavascriptError(string? Message, string? Name, string? Stack = null) -> void
dymaptic.GeoBlazor.Core.Exceptions.JavascriptError.Message.get -> string?
dymaptic.GeoBlazor.Core.Exceptions.JavascriptError.Message.init -> void
dymaptic.GeoBlazor.Core.Exceptions.JavascriptError.Name.get -> string?
dymaptic.GeoBlazor.Core.Exceptions.JavascriptError.Name.init -> void
dymaptic.GeoBlazor.Core.Exceptions.JavascriptError.Stack.get -> string?
dymaptic.GeoBlazor.Core.Exceptions.JavascriptError.Stack.init -> void
dymaptic.GeoBlazor.Core.Exceptions.JavascriptException
dymaptic.GeoBlazor.Core.Exceptions.JavascriptException.JavascriptException(dymaptic.GeoBlazor.Core.Exceptions.JavascriptError! error) -> void
dymaptic.GeoBlazor.Core.Exceptions.JavascriptException.Name.get -> string?
dymaptic.GeoBlazor.Core.Exceptions.JavascriptException.Stack.get -> string?
dymaptic.GeoBlazor.Core.Exceptions.MissingMapException
dymaptic.GeoBlazor.Core.Exceptions.MissingMapException.MissingMapException() -> void
dymaptic.GeoBlazor.Core.Exceptions.MissingRequiredChildElementException
dymaptic.GeoBlazor.Core.Exceptions.MissingRequiredChildElementException.MissingRequiredChildElementException(string! parentType, string! childType) -> void
dymaptic.GeoBlazor.Core.Exceptions.MissingRequiredOptionsChildElementException
dymaptic.GeoBlazor.Core.Exceptions.MissingRequiredOptionsChildElementException.MissingRequiredOptionsChildElementException(string! parentType, System.Collections.Generic.IEnumerable<string!>! options) -> void
dymaptic.GeoBlazor.Core.Exceptions.UnMatchedTargetNameException
dymaptic.GeoBlazor.Core.Exceptions.UnMatchedTargetNameException.UnMatchedTargetNameException(string! targetName, string! watchExpression) -> void
dymaptic.GeoBlazor.Core.GeoBlazorSettings
dymaptic.GeoBlazor.Core.GeoBlazorSettings.GeoBlazorSettings() -> void
dymaptic.GeoBlazor.Core.GeoBlazorSettings.LicenseKey.get -> string?
dymaptic.GeoBlazor.Core.GeoBlazorSettings.LicenseKey.set -> void
dymaptic.GeoBlazor.Core.GeoBlazorSettings.RegistrationKey.get -> string?
dymaptic.GeoBlazor.Core.GeoBlazorSettings.RegistrationKey.set -> void
dymaptic.GeoBlazor.Core.IAppValidator
dymaptic.GeoBlazor.Core.IAppValidator.ValidateLicense() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Interfaces.IFeatureReductionLayer
dymaptic.GeoBlazor.Core.JsModuleManager
dymaptic.GeoBlazor.Core.Model.AuthenticationManager
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.ApiKey.get -> string?
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.ApiKey.set -> void
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.AppId.get -> string?
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.AppId.set -> void
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.AuthenticationManager(Microsoft.JSInterop.IJSRuntime! jsRuntime, Microsoft.Extensions.Configuration.IConfiguration! configuration) -> void
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.EnsureLoggedIn() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.GetArcGisJsInterop() -> System.Threading.Tasks.Task<Microsoft.JSInterop.IJSObjectReference!>!
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.GetCurrentToken() -> System.Threading.Tasks.Task<string?>!
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.Initialize() -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.IsLoggedIn() -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.Login() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.PortalUrl.get -> string?
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.PortalUrl.set -> void
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.TrustedServers.get -> System.Collections.Generic.List<string!>?
dymaptic.GeoBlazor.Core.Model.AuthenticationManager.TrustedServers.set -> void
dymaptic.GeoBlazor.Core.Model.AuthMode
dymaptic.GeoBlazor.Core.Model.AuthMode.Anonymous = 1 -> dymaptic.GeoBlazor.Core.Model.AuthMode
dymaptic.GeoBlazor.Core.Model.AuthMode.Auto = 0 -> dymaptic.GeoBlazor.Core.Model.AuthMode
dymaptic.GeoBlazor.Core.Model.AuthMode.Immediate = 2 -> dymaptic.GeoBlazor.Core.Model.AuthMode
dymaptic.GeoBlazor.Core.Model.AuthMode.NoPrompt = 3 -> dymaptic.GeoBlazor.Core.Model.AuthMode
dymaptic.GeoBlazor.Core.Model.GeometryEngine
dymaptic.GeoBlazor.Core.Model.GeometryEngine.AddPath(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! polyLine, dymaptic.GeoBlazor.Core.Components.Geometries.Point![]! points) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.AddPath(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! polyLine, dymaptic.GeoBlazor.Core.Objects.MapPath! points) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.AddRing(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, dymaptic.GeoBlazor.Core.Components.Geometries.Point![]! points) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.AddRing(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, dymaptic.GeoBlazor.Core.Objects.MapPath! points) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.AreEqual(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Buffer(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double distance) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Buffer(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double distance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? unit) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Buffer(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, System.Collections.Generic.IEnumerable<double>! distances) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Buffer(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, System.Collections.Generic.IEnumerable<double>! distances, dymaptic.GeoBlazor.Core.Objects.LinearUnit? unit) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Buffer(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, System.Collections.Generic.IEnumerable<double>! distances, dymaptic.GeoBlazor.Core.Objects.LinearUnit? unit, bool? unionResults) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.CenterExtentAt(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent, dymaptic.GeoBlazor.Core.Components.Geometries.Point! point) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Extent!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Clip(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Clone<T>(T! geometry) -> System.Threading.Tasks.Task<T!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Contains(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! containerGeometry, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! insideGeometry) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.ConvexHull(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.ConvexHull(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, bool? merge = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Crosses(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Cut(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! cutter) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Densify(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double maxSegmentLength, dymaptic.GeoBlazor.Core.Objects.LinearUnit? maxSegmentLengthUnit = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Difference(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! subtractor) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Difference(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! subtractor) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Disjoint(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Distance(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2, dymaptic.GeoBlazor.Core.Objects.LinearUnit? distanceUnit = null) -> System.Threading.Tasks.Task<double>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Expand(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent, double factor) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Extent!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.ExtendedSpatialReferenceInfo(dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! spatialReference) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.FlipHorizontal(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.Point? flipOrigin = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.FlipVertical(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.Point? flipOrigin = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.FromArcGisJson<T>(string! json) -> System.Threading.Tasks.Task<T!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Generalize(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double maxDeviation, bool? removeDegenerateParts = null, dymaptic.GeoBlazor.Core.Objects.LinearUnit? maxDeviationUnit = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeodesicArea(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! geometry, dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit? unit = null) -> System.Threading.Tasks.Task<double>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeodesicBuffer(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double distance) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeodesicBuffer(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double distance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? unit) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeodesicBuffer(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, System.Collections.Generic.IEnumerable<double>! distances) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeodesicBuffer(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, System.Collections.Generic.IEnumerable<double>! distances, dymaptic.GeoBlazor.Core.Objects.LinearUnit? unit) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeodesicBuffer(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, System.Collections.Generic.IEnumerable<double>! distances, dymaptic.GeoBlazor.Core.Objects.LinearUnit? unit, bool? unionResults) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeodesicDensify(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double maxSegmentLength, dymaptic.GeoBlazor.Core.Objects.LinearUnit? maxSegmentLengthUnit = null) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeodesicLength(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Objects.LinearUnit? unit = null) -> System.Threading.Tasks.Task<double>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GeometryEngine(Microsoft.JSInterop.IJSRuntime! jsRuntime, dymaptic.GeoBlazor.Core.Model.AuthenticationManager! authenticationManager) -> void
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GetExtentCenter(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Point?>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GetExtentHeight(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task<double?>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GetExtentWidth(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task<double?>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GetPoint(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, int ringIndex, int pointIndex) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Point!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.GetPoint(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! polyLine, int pathIndex, int pointIndex) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Point!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.InsertPoint(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, int ringIndex, int pointIndex, dymaptic.GeoBlazor.Core.Components.Geometries.Point! point) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.InsertPoint(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! polyLine, int pathIndex, int pointIndex, dymaptic.GeoBlazor.Core.Components.Geometries.Point! point) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Intersect(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Intersect(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Intersects(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.IsClockwise(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, dymaptic.GeoBlazor.Core.Components.Geometries.Point![]! ring) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.IsClockwise(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, dymaptic.GeoBlazor.Core.Objects.MapPath! ring) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.IsSimple(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.NearestCoordinate(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.Point! inputPoint) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.NearestPointResult!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.NearestVertex(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.Point! inputPoint) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.NearestPointResult!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.NearestVertices(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.Point! inputPoint, double searchRadius, int maxVertexCountToReturn) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.NearestPointResult![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.NormalizeExtent(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Extent![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.NormalizePoint(dymaptic.GeoBlazor.Core.Components.Geometries.Point! point) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Point!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double offsetDistance) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double offsetDistance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? offsetUnit) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double offsetDistance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? offsetUnit, dymaptic.GeoBlazor.Core.Model.JoinType? joinType) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double offsetDistance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? offsetUnit, dymaptic.GeoBlazor.Core.Model.JoinType? joinType, double? bevelRatio) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double offsetDistance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? offsetUnit, dymaptic.GeoBlazor.Core.Model.JoinType? joinType, double? bevelRatio, double? flattenError) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, double offsetDistance) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, double offsetDistance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? offsetUnit) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, double offsetDistance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? offsetUnit, dymaptic.GeoBlazor.Core.Model.JoinType? joinType) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, double offsetDistance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? offsetUnit, dymaptic.GeoBlazor.Core.Model.JoinType? joinType, double? bevelRatio) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Offset(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries, double offsetDistance, dymaptic.GeoBlazor.Core.Objects.LinearUnit? offsetUnit, dymaptic.GeoBlazor.Core.Model.JoinType? joinType, double? bevelRatio, double? flattenError) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.OffsetExtent(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent, double dx, double dy, double dz = 0) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Extent!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Overlaps(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.PlanarArea(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! geometry, dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit? unit = null) -> System.Threading.Tasks.Task<double>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.PlanarLength(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Objects.LinearUnit? unit = null) -> System.Threading.Tasks.Task<double>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.PolygonFromExtent(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Relate(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2, string! relation) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.RemovePath(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! polyLine, int index) -> System.Threading.Tasks.Task<(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! PolyLine, dymaptic.GeoBlazor.Core.Components.Geometries.Point![]! Path)>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.RemovePoint(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, int ringIndex, int pointIndex) -> System.Threading.Tasks.Task<(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! Polygon, dymaptic.GeoBlazor.Core.Components.Geometries.Point! Point)>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.RemovePoint(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! polyLine, int pathIndex, int pointIndex) -> System.Threading.Tasks.Task<(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! PolyLine, dymaptic.GeoBlazor.Core.Components.Geometries.Point! Point)>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.RemoveRing(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, int index) -> System.Threading.Tasks.Task<(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! Polygon, dymaptic.GeoBlazor.Core.Components.Geometries.Point![]! Ring)>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Rotate(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, double angle, dymaptic.GeoBlazor.Core.Components.Geometries.Point! rotationOrigin) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.SetPoint(dymaptic.GeoBlazor.Core.Components.Geometries.Polygon! polygon, int ringIndex, int pointIndex, dymaptic.GeoBlazor.Core.Components.Geometries.Point! point) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Polygon!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.SetPoint(dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine! polyLine, int pathIndex, int pointIndex, dymaptic.GeoBlazor.Core.Components.Geometries.Point! point) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Simplify(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.SymmetricDifference(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! leftGeometry, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! rightGeometry) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.SymmetricDifference(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! leftGeometries, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! rightGeometry) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.ToArcGisJson<T>(T! geometry) -> System.Threading.Tasks.Task<string!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Touches(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry1, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry2) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Union(params dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]! geometries) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Union(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>! geometries) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry!>!
dymaptic.GeoBlazor.Core.Model.GeometryEngine.Within(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! innerGeometry, dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! outerGeometry) -> System.Threading.Tasks.Task<bool>!
dymaptic.GeoBlazor.Core.Model.JoinType
dymaptic.GeoBlazor.Core.Model.JoinType.Bevel = 1 -> dymaptic.GeoBlazor.Core.Model.JoinType
dymaptic.GeoBlazor.Core.Model.JoinType.Miter = 2 -> dymaptic.GeoBlazor.Core.Model.JoinType
dymaptic.GeoBlazor.Core.Model.JoinType.Round = 0 -> dymaptic.GeoBlazor.Core.Model.JoinType
dymaptic.GeoBlazor.Core.Model.JoinType.Square = 3 -> dymaptic.GeoBlazor.Core.Model.JoinType
dymaptic.GeoBlazor.Core.Model.LocationType
dymaptic.GeoBlazor.Core.Model.LocationType.Rooftop = 1 -> dymaptic.GeoBlazor.Core.Model.LocationType
dymaptic.GeoBlazor.Core.Model.LocationType.Street = 0 -> dymaptic.GeoBlazor.Core.Model.LocationType
dymaptic.GeoBlazor.Core.Model.Locator
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(string! url, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(string! url, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(string! url, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode, System.Collections.Generic.List<string!>? categories) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(string! url, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode, System.Collections.Generic.List<string!>? categories, dymaptic.GeoBlazor.Core.Model.LocationType? locationType) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(string! url, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode, System.Collections.Generic.List<string!>? categories, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(string! url, System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode, System.Collections.Generic.List<string!>? categories, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference, dymaptic.GeoBlazor.Core.Model.RequestOptions? requestOptions) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode, System.Collections.Generic.List<string!>? categories) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode, System.Collections.Generic.List<string!>? categories, dymaptic.GeoBlazor.Core.Model.LocationType? locationType) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode, System.Collections.Generic.List<string!>? categories, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressesToLocations(System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.Address!>! addresses, string? countryCode, System.Collections.Generic.List<string!>? categories, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference, dymaptic.GeoBlazor.Core.Model.RequestOptions? requestOptions) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations, System.Collections.Generic.List<string!>? outFields) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations, System.Collections.Generic.List<string!>? outFields, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations, System.Collections.Generic.List<string!>? outFields, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference, dymaptic.GeoBlazor.Core.Components.Geometries.Extent? searchExtent) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations, System.Collections.Generic.List<string!>? outFields, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference, dymaptic.GeoBlazor.Core.Components.Geometries.Extent? searchExtent, dymaptic.GeoBlazor.Core.Model.RequestOptions? requestOptions) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations, System.Collections.Generic.List<string!>? outFields) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations, System.Collections.Generic.List<string!>? outFields, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations, System.Collections.Generic.List<string!>? outFields, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference, dymaptic.GeoBlazor.Core.Components.Geometries.Extent? searchExtent) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.AddressToLocations(string! url, dymaptic.GeoBlazor.Core.Objects.Address! address, System.Collections.Generic.List<string!>? categories, string? countryCode, bool? forStorage, dymaptic.GeoBlazor.Core.Components.Geometries.Point? location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, string? magicKey, int? maxLocations, System.Collections.Generic.List<string!>? outFields, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference, dymaptic.GeoBlazor.Core.Components.Geometries.Extent? searchExtent, dymaptic.GeoBlazor.Core.Model.RequestOptions? requestOptions) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.LocationToAddress(dymaptic.GeoBlazor.Core.Components.Geometries.Point! location) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!
dymaptic.GeoBlazor.Core.Model.Locator.LocationToAddress(dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!
dymaptic.GeoBlazor.Core.Model.Locator.LocationToAddress(dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!
dymaptic.GeoBlazor.Core.Model.Locator.LocationToAddress(dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference, dymaptic.GeoBlazor.Core.Model.RequestOptions? requestOptions) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!
dymaptic.GeoBlazor.Core.Model.Locator.LocationToAddress(string! url, dymaptic.GeoBlazor.Core.Components.Geometries.Point! location) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!
dymaptic.GeoBlazor.Core.Model.Locator.LocationToAddress(string! url, dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!
dymaptic.GeoBlazor.Core.Model.Locator.LocationToAddress(string! url, dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!
dymaptic.GeoBlazor.Core.Model.Locator.LocationToAddress(string! url, dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, dymaptic.GeoBlazor.Core.Model.LocationType? locationType, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? outSpatialReference, dymaptic.GeoBlazor.Core.Model.RequestOptions? requestOptions) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.AddressCandidate!>!
dymaptic.GeoBlazor.Core.Model.Locator.Locator(Microsoft.JSInterop.IJSRuntime! jsRuntime, dymaptic.GeoBlazor.Core.Model.AuthenticationManager! authenticationManager) -> void
dymaptic.GeoBlazor.Core.Model.Locator.SuggestLocations(dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, string! text) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Model.SuggestionResult!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.SuggestLocations(dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, string! text, System.Collections.Generic.List<string!>? categories) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Model.SuggestionResult!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.SuggestLocations(dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, string! text, System.Collections.Generic.List<string!>? categories, dymaptic.GeoBlazor.Core.Model.RequestOptions? requestOptions) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Model.SuggestionResult!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.SuggestLocations(string! url, dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, string! text) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Model.SuggestionResult!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.SuggestLocations(string! url, dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, string! text, System.Collections.Generic.List<string!>? categories) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Model.SuggestionResult!>!>!
dymaptic.GeoBlazor.Core.Model.Locator.SuggestLocations(string! url, dymaptic.GeoBlazor.Core.Components.Geometries.Point! location, string! text, System.Collections.Generic.List<string!>? categories, dymaptic.GeoBlazor.Core.Model.RequestOptions? requestOptions) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dymaptic.GeoBlazor.Core.Model.SuggestionResult!>!>!
dymaptic.GeoBlazor.Core.Model.LogicComponent
dymaptic.GeoBlazor.Core.Model.LogicComponent.Component.get -> Microsoft.JSInterop.IJSObjectReference?
dymaptic.GeoBlazor.Core.Model.LogicComponent.Component.set -> void
dymaptic.GeoBlazor.Core.Model.LogicComponent.Dispose() -> void
dymaptic.GeoBlazor.Core.Model.LogicComponent.DotNetObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Model.LogicComponent!>!
dymaptic.GeoBlazor.Core.Model.LogicComponent.LogicComponent(Microsoft.JSInterop.IJSRuntime! jsRuntime, dymaptic.GeoBlazor.Core.Model.AuthenticationManager! authenticationManager) -> void
dymaptic.GeoBlazor.Core.Model.LogicComponent.OnJavascriptError(dymaptic.GeoBlazor.Core.Exceptions.JavascriptError! error) -> void
dymaptic.GeoBlazor.Core.Model.Projection
dymaptic.GeoBlazor.Core.Model.Projection.GetTransformation(dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! inSpatialReference, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! outSpatialReference, dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.GeographicTransformation?>!
dymaptic.GeoBlazor.Core.Model.Projection.GetTransformations(dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! inSpatialReference, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! outSpatialReference, dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Objects.GeographicTransformation![]?>!
dymaptic.GeoBlazor.Core.Model.Projection.Project(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! spatialReference) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?>!
dymaptic.GeoBlazor.Core.Model.Projection.Project(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry! geometry, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! spatialReference, dymaptic.GeoBlazor.Core.Objects.GeographicTransformation? geographicTransformation) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?>!
dymaptic.GeoBlazor.Core.Model.Projection.Project(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]! geometries, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! spatialReference) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]?>!
dymaptic.GeoBlazor.Core.Model.Projection.Project(dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]! geometries, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference! spatialReference, dymaptic.GeoBlazor.Core.Objects.GeographicTransformation? geographicTransformation) -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Geometries.Geometry![]?>!
dymaptic.GeoBlazor.Core.Model.Projection.Projection(Microsoft.JSInterop.IJSRuntime! jsRuntime, dymaptic.GeoBlazor.Core.Model.AuthenticationManager! authenticationManager) -> void
dymaptic.GeoBlazor.Core.Model.RequestMethod
dymaptic.GeoBlazor.Core.Model.RequestMethod.Auto = 0 -> dymaptic.GeoBlazor.Core.Model.RequestMethod
dymaptic.GeoBlazor.Core.Model.RequestMethod.Delete = 1 -> dymaptic.GeoBlazor.Core.Model.RequestMethod
dymaptic.GeoBlazor.Core.Model.RequestMethod.Head = 2 -> dymaptic.GeoBlazor.Core.Model.RequestMethod
dymaptic.GeoBlazor.Core.Model.RequestMethod.Post = 3 -> dymaptic.GeoBlazor.Core.Model.RequestMethod
dymaptic.GeoBlazor.Core.Model.RequestMethod.Put = 4 -> dymaptic.GeoBlazor.Core.Model.RequestMethod
dymaptic.GeoBlazor.Core.Model.RequestOptions
dymaptic.GeoBlazor.Core.Model.RequestOptions.AuthMode.get -> dymaptic.GeoBlazor.Core.Model.AuthMode?
dymaptic.GeoBlazor.Core.Model.RequestOptions.AuthMode.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.Body.get -> string?
dymaptic.GeoBlazor.Core.Model.RequestOptions.Body.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.CacheBust.get -> bool?
dymaptic.GeoBlazor.Core.Model.RequestOptions.CacheBust.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.Headers.get -> object?
dymaptic.GeoBlazor.Core.Model.RequestOptions.Headers.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.Method.get -> dymaptic.GeoBlazor.Core.Model.RequestMethod?
dymaptic.GeoBlazor.Core.Model.RequestOptions.Method.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.Query.get -> System.Collections.Generic.Dictionary<string!, object?>?
dymaptic.GeoBlazor.Core.Model.RequestOptions.Query.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.RequestOptions() -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.ResponseType.get -> dymaptic.GeoBlazor.Core.Model.ResponseType?
dymaptic.GeoBlazor.Core.Model.RequestOptions.ResponseType.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.Timeout.get -> long?
dymaptic.GeoBlazor.Core.Model.RequestOptions.Timeout.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.UseProxy.get -> bool?
dymaptic.GeoBlazor.Core.Model.RequestOptions.UseProxy.set -> void
dymaptic.GeoBlazor.Core.Model.RequestOptions.WithCredentials.get -> bool?
dymaptic.GeoBlazor.Core.Model.RequestOptions.WithCredentials.set -> void
dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.ResponseType.ArrayBuffer = 2 -> dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.ResponseType.Blob = 3 -> dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.ResponseType.Document = 6 -> dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.ResponseType.Image = 4 -> dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.ResponseType.Json = 0 -> dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.ResponseType.Native = 5 -> dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.ResponseType.Text = 1 -> dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.ResponseType.Xml = 7 -> dymaptic.GeoBlazor.Core.Model.ResponseType
dymaptic.GeoBlazor.Core.Model.SuggestionResult
dymaptic.GeoBlazor.Core.Model.SuggestionResult.IsCollection.get -> bool
dymaptic.GeoBlazor.Core.Model.SuggestionResult.IsCollection.init -> void
dymaptic.GeoBlazor.Core.Model.SuggestionResult.MagicKey.get -> string!
dymaptic.GeoBlazor.Core.Model.SuggestionResult.MagicKey.init -> void
dymaptic.GeoBlazor.Core.Model.SuggestionResult.SuggestionResult(bool IsCollection, string! MagicKey, string! Text) -> void
dymaptic.GeoBlazor.Core.Model.SuggestionResult.Text.get -> string!
dymaptic.GeoBlazor.Core.Model.SuggestionResult.Text.init -> void
dymaptic.GeoBlazor.Core.Objects.AbortManager
dymaptic.GeoBlazor.Core.Objects.AbortManager.AbortManager(Microsoft.JSInterop.IJSRuntime! jsRuntime) -> void
dymaptic.GeoBlazor.Core.Objects.AbortManager.CreateAbortSignal(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.JSInterop.IJSObjectReference!>!
dymaptic.GeoBlazor.Core.Objects.AbortManager.DisposeAbortController(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Objects.AbortManager.DisposeAsync() -> System.Threading.Tasks.ValueTask
dymaptic.GeoBlazor.Core.Objects.AbortManagerResult
dymaptic.GeoBlazor.Core.Objects.AbortManagerResult.AbortControllerRef.get -> Microsoft.JSInterop.IJSObjectReference!
dymaptic.GeoBlazor.Core.Objects.AbortManagerResult.AbortControllerRef.init -> void
dymaptic.GeoBlazor.Core.Objects.AbortManagerResult.AbortManagerResult(Microsoft.JSInterop.IJSObjectReference! AbortControllerRef, Microsoft.JSInterop.IJSObjectReference! AbortSignalRef) -> void
dymaptic.GeoBlazor.Core.Objects.AbortManagerResult.AbortSignalRef.get -> Microsoft.JSInterop.IJSObjectReference!
dymaptic.GeoBlazor.Core.Objects.AbortManagerResult.AbortSignalRef.init -> void
dymaptic.GeoBlazor.Core.Objects.Address
dymaptic.GeoBlazor.Core.Objects.Address.Address(string! Street, string! City, string! State, string! Zone) -> void
dymaptic.GeoBlazor.Core.Objects.Address.City.get -> string!
dymaptic.GeoBlazor.Core.Objects.Address.City.init -> void
dymaptic.GeoBlazor.Core.Objects.Address.State.get -> string!
dymaptic.GeoBlazor.Core.Objects.Address.State.init -> void
dymaptic.GeoBlazor.Core.Objects.Address.Street.get -> string!
dymaptic.GeoBlazor.Core.Objects.Address.Street.init -> void
dymaptic.GeoBlazor.Core.Objects.Address.Zone.get -> string!
dymaptic.GeoBlazor.Core.Objects.Address.Zone.init -> void
dymaptic.GeoBlazor.Core.Objects.AddressCandidate
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Address.get -> string?
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Address.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.AddressCandidate() -> void
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Attributes.get -> System.Collections.Generic.Dictionary<string!, object!>!
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Attributes.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Extent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent?
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Extent.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Location.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point?
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Location.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Score.get -> double?
dymaptic.GeoBlazor.Core.Objects.AddressCandidate.Score.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressQuery
dymaptic.GeoBlazor.Core.Objects.AddressQuery.Address.get -> dymaptic.GeoBlazor.Core.Objects.Address?
dymaptic.GeoBlazor.Core.Objects.AddressQuery.Address.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressQuery.AddressQuery() -> void
dymaptic.GeoBlazor.Core.Objects.AddressQuery.Categories.get -> System.Collections.Generic.HashSet<string!>?
dymaptic.GeoBlazor.Core.Objects.AddressQuery.Categories.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressQuery.LocatorUrl.get -> string?
dymaptic.GeoBlazor.Core.Objects.AddressQuery.LocatorUrl.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressQuery.MaxLocations.get -> int?
dymaptic.GeoBlazor.Core.Objects.AddressQuery.MaxLocations.set -> void
dymaptic.GeoBlazor.Core.Objects.AddressQuery.OutFields.get -> System.Collections.Generic.HashSet<string!>?
dymaptic.GeoBlazor.Core.Objects.AddressQuery.OutFields.set -> void
dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.Acres = 2 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.Ares = 3 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.Hectares = 4 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.Imperial = 1 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.Metric = 0 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.SquareFeet = 5 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.SquareInches = 10 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.SquareKilometers = 8 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.SquareMeters = 6 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.SquareMiles = 9 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.SquareUSFeet = 11 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AreaUnit.SquareYards = 7 -> dymaptic.GeoBlazor.Core.Objects.AreaUnit
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.AddOrUpdate(string! key, object! value) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.AddOrUpdate(System.Collections.Generic.Dictionary<string!, object!>! newEntries) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.AttributesDictionary() -> void
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.AttributesDictionary(System.Collections.Generic.Dictionary<string!, object?>! dictionary) -> void
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.Clear() -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.ContainsKey(string! key) -> bool
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.ContainsValue(object! value) -> bool
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.Count.get -> int
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.Equals(dymaptic.GeoBlazor.Core.Objects.AttributesDictionary? other) -> bool
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.Equals(System.Collections.Generic.Dictionary<string!, object!>! otherDictionary) -> bool
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.Keys.get -> System.Collections.Generic.Dictionary<string!, object?>.KeyCollection!
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.OnChange.get -> System.Func<System.Threading.Tasks.Task!>?
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.OnChange.set -> void
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.Remove(string! key) -> System.Threading.Tasks.Task!
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.this[string! key].get -> object?
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.TryGetValue(string! key, out object? value) -> bool
dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.Values.get -> System.Collections.Generic.Dictionary<string!, object?>.ValueCollection!
dymaptic.GeoBlazor.Core.Objects.Cardinality
dymaptic.GeoBlazor.Core.Objects.Cardinality.ManyToMany = 2 -> dymaptic.GeoBlazor.Core.Objects.Cardinality
dymaptic.GeoBlazor.Core.Objects.Cardinality.OneToMany = 1 -> dymaptic.GeoBlazor.Core.Objects.Cardinality
dymaptic.GeoBlazor.Core.Objects.Cardinality.OneToOne = 0 -> dymaptic.GeoBlazor.Core.Objects.Cardinality
dymaptic.GeoBlazor.Core.Objects.Dimension
dymaptic.GeoBlazor.Core.Objects.Dimension.Dimension(double pointVal) -> void
dymaptic.GeoBlazor.Core.Objects.Dimension.Dimension(string! stringVal) -> void
dymaptic.GeoBlazor.Core.Objects.Dimension.Equals(dymaptic.GeoBlazor.Core.Objects.Dimension? other) -> bool
dymaptic.GeoBlazor.Core.Objects.Dimension.Pixels.get -> double
dymaptic.GeoBlazor.Core.Objects.Dimension.Points.get -> double
dymaptic.GeoBlazor.Core.Objects.Dimension.Points.init -> void
dymaptic.GeoBlazor.Core.Objects.Direction
dymaptic.GeoBlazor.Core.Objects.Direction.Direction() -> void
dymaptic.GeoBlazor.Core.Objects.Direction.Length.get -> double
dymaptic.GeoBlazor.Core.Objects.Direction.Length.set -> void
dymaptic.GeoBlazor.Core.Objects.Direction.Text.get -> string!
dymaptic.GeoBlazor.Core.Objects.Direction.Text.set -> void
dymaptic.GeoBlazor.Core.Objects.GeographicTransformation
dymaptic.GeoBlazor.Core.Objects.GeographicTransformation.GeographicTransformation() -> void
dymaptic.GeoBlazor.Core.Objects.GeographicTransformation.GetInverse() -> dymaptic.GeoBlazor.Core.Objects.GeographicTransformation!
dymaptic.GeoBlazor.Core.Objects.GeographicTransformation.Steps.get -> dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep![]!
dymaptic.GeoBlazor.Core.Objects.GeographicTransformation.Steps.set -> void
dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep
dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep.GeographicTransformationStep() -> void
dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep.IsInverse.get -> bool?
dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep.IsInverse.set -> void
dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep.Wkid.get -> double?
dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep.Wkid.set -> void
dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep.Wkt.get -> string?
dymaptic.GeoBlazor.Core.Objects.GeographicTransformationStep.Wkt.set -> void
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit.Acres = 0 -> dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit.Ares = 1 -> dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit.Hectares = 2 -> dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit.SquareFeet = 3 -> dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit.SquareKilometers = 6 -> dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit.SquareMeters = 4 -> dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit.SquareMiles = 7 -> dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit.SquareYards = 5 -> dymaptic.GeoBlazor.Core.Objects.GeometryEngineAreaUnit
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.ExactMatch.get -> bool?
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.ExactMatch.init -> void
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.GetResultsParameters(bool? ExactMatch, dymaptic.GeoBlazor.Core.Components.Geometries.Point? Location, int? MaxResults, int? SourceIndex, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? SpatialReference, dymaptic.GeoBlazor.Core.Objects.SuggestResult! SuggestResult, System.Guid? ViewId) -> void
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.Location.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point?
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.Location.init -> void
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.MaxResults.get -> int?
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.MaxResults.init -> void
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.SourceIndex.get -> int?
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.SourceIndex.init -> void
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.SpatialReference.init -> void
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.SuggestResult.get -> dymaptic.GeoBlazor.Core.Objects.SuggestResult!
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.SuggestResult.init -> void
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.ViewId.get -> System.Guid?
dymaptic.GeoBlazor.Core.Objects.GetResultsParameters.ViewId.init -> void
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.GetSuggestionsParameters(int? MaxSuggestions, int? SourceIndex, dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference? SpatialReference, string? SuggestTerm, System.Guid? ViewId) -> void
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.MaxSuggestions.get -> int?
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.MaxSuggestions.init -> void
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.SourceIndex.get -> int?
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.SourceIndex.init -> void
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.SpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.SpatialReference.init -> void
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.SuggestTerm.get -> string?
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.SuggestTerm.init -> void
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.ViewId.get -> System.Guid?
dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters.ViewId.init -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.Color.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.Color.set -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.FillOpacity.get -> double?
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.FillOpacity.set -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HaloColor.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HaloColor.set -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HaloOpacity.get -> double?
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HaloOpacity.set -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HighlightOptions() -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HighlightOptions(dymaptic.GeoBlazor.Core.Objects.MapColor? color = null, dymaptic.GeoBlazor.Core.Objects.MapColor? haloColor = null, double? haloOpacity = null, double? fillOpacity = null, dymaptic.GeoBlazor.Core.Objects.MapColor? shadowColor = null, double? shadowOpacity = null, double? shadowDifference = null) -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowColor.get -> dymaptic.GeoBlazor.Core.Objects.MapColor?
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowColor.set -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowDifference.get -> double?
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowDifference.set -> void
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowOpacity.get -> double?
dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowOpacity.set -> void
dymaptic.GeoBlazor.Core.Objects.ImageData
dymaptic.GeoBlazor.Core.Objects.ImageData.ColorSpace.get -> string!
dymaptic.GeoBlazor.Core.Objects.ImageData.ColorSpace.init -> void
dymaptic.GeoBlazor.Core.Objects.ImageData.Data.get -> byte[]!
dymaptic.GeoBlazor.Core.Objects.ImageData.Data.init -> void
dymaptic.GeoBlazor.Core.Objects.ImageData.Height.get -> long
dymaptic.GeoBlazor.Core.Objects.ImageData.Height.init -> void
dymaptic.GeoBlazor.Core.Objects.ImageData.ImageData(byte[]! Data, string! ColorSpace, long Height, long Width) -> void
dymaptic.GeoBlazor.Core.Objects.ImageData.Width.get -> long
dymaptic.GeoBlazor.Core.Objects.ImageData.Width.init -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.DisplayField.get -> string?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.DisplayField.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.ExactMatch.get -> bool?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.ExactMatch.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.Filter.get -> dymaptic.GeoBlazor.Core.Objects.LayerSearchSourceFilter?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.Filter.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.Layer.get -> dymaptic.GeoBlazor.Core.Components.Layers.Layer?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.Layer.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.LayerId.get -> System.Guid?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.LayerId.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.LayerSearchSource() -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.OrderByFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.OrderByFields.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.SearchFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.SearchFields.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.SuggestionTemplate.get -> string?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.SuggestionTemplate.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSourceFilter
dymaptic.GeoBlazor.Core.Objects.LayerSearchSourceFilter.Geometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSourceFilter.Geometry.set -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSourceFilter.LayerSearchSourceFilter() -> void
dymaptic.GeoBlazor.Core.Objects.LayerSearchSourceFilter.Where.get -> string?
dymaptic.GeoBlazor.Core.Objects.LayerSearchSourceFilter.Where.set -> void
dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Centimeters = 1 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Decimeters = 2 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Feet = 6 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Inches = 5 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Kilometers = 4 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Meters = 3 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Miles = 8 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Millimeters = 0 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.NauticalMiles = 9 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.USFeet = 10 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LengthUnit.Yards = 7 -> dymaptic.GeoBlazor.Core.Objects.LengthUnit
dymaptic.GeoBlazor.Core.Objects.LinearUnit
dymaptic.GeoBlazor.Core.Objects.LinearUnit.Feet = 1 -> dymaptic.GeoBlazor.Core.Objects.LinearUnit
dymaptic.GeoBlazor.Core.Objects.LinearUnit.Kilometers = 2 -> dymaptic.GeoBlazor.Core.Objects.LinearUnit
dymaptic.GeoBlazor.Core.Objects.LinearUnit.Meters = 0 -> dymaptic.GeoBlazor.Core.Objects.LinearUnit
dymaptic.GeoBlazor.Core.Objects.LinearUnit.Miles = 3 -> dymaptic.GeoBlazor.Core.Objects.LinearUnit
dymaptic.GeoBlazor.Core.Objects.LinearUnit.NauticalMiles = 4 -> dymaptic.GeoBlazor.Core.Objects.LinearUnit
dymaptic.GeoBlazor.Core.Objects.LinearUnit.Yards = 5 -> dymaptic.GeoBlazor.Core.Objects.LinearUnit
dymaptic.GeoBlazor.Core.Objects.LocatorSearchLocationType
dymaptic.GeoBlazor.Core.Objects.LocatorSearchLocationType.Rooftop = 0 -> dymaptic.GeoBlazor.Core.Objects.LocatorSearchLocationType
dymaptic.GeoBlazor.Core.Objects.LocatorSearchLocationType.Street = 1 -> dymaptic.GeoBlazor.Core.Objects.LocatorSearchLocationType
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.ApiKey.get -> string?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.ApiKey.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.Categories.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.Categories.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.CountryCode.get -> string?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.CountryCode.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.DefaultZoomScale.get -> double?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.DefaultZoomScale.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.Filter.get -> dymaptic.GeoBlazor.Core.Objects.LocatorSearchSourceFilter?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.Filter.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.LocalSearchDisabled.get -> bool?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.LocalSearchDisabled.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.LocationType.get -> dymaptic.GeoBlazor.Core.Objects.LocatorSearchLocationType?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.LocationType.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.LocatorSearchSource() -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.SingleLineFieldName.get -> string?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.SingleLineFieldName.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.Url.get -> string!
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.Url.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSourceFilter
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSourceFilter.Geometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSourceFilter.Geometry.set -> void
dymaptic.GeoBlazor.Core.Objects.LocatorSearchSourceFilter.LocatorSearchSourceFilter() -> void
dymaptic.GeoBlazor.Core.Objects.MapColor
dymaptic.GeoBlazor.Core.Objects.MapColor.Clone() -> dymaptic.GeoBlazor.Core.Objects.MapColor!
dymaptic.GeoBlazor.Core.Objects.MapColor.Equals(dymaptic.GeoBlazor.Core.Objects.MapColor? other) -> bool
dymaptic.GeoBlazor.Core.Objects.MapColor.HexOrNameValue.get -> string?
dymaptic.GeoBlazor.Core.Objects.MapColor.HexOrNameValue.set -> void
dymaptic.GeoBlazor.Core.Objects.MapColor.MapColor() -> void
dymaptic.GeoBlazor.Core.Objects.MapColor.MapColor(params double[]! values) -> void
dymaptic.GeoBlazor.Core.Objects.MapColor.MapColor(string! hexOrNameValue) -> void
dymaptic.GeoBlazor.Core.Objects.MapColor.Values.get -> System.Collections.Generic.List<double>!
dymaptic.GeoBlazor.Core.Objects.MapColor.Values.set -> void
dymaptic.GeoBlazor.Core.Objects.MapPath
dymaptic.GeoBlazor.Core.Objects.MapPath.Clone() -> dymaptic.GeoBlazor.Core.Objects.MapPath!
dymaptic.GeoBlazor.Core.Objects.MapPath.Equals(dymaptic.GeoBlazor.Core.Objects.MapPath? other) -> bool
dymaptic.GeoBlazor.Core.Objects.MapPath.MapPath(params dymaptic.GeoBlazor.Core.Objects.MapPoint![]! p) -> void
dymaptic.GeoBlazor.Core.Objects.MapPath.MapPath(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Objects.MapPoint!>! p) -> void
dymaptic.GeoBlazor.Core.Objects.MapPoint
dymaptic.GeoBlazor.Core.Objects.MapPoint.Copy() -> dymaptic.GeoBlazor.Core.Objects.MapPoint!
dymaptic.GeoBlazor.Core.Objects.MapPoint.Equals(dymaptic.GeoBlazor.Core.Objects.MapPoint? other) -> bool
dymaptic.GeoBlazor.Core.Objects.MapPoint.MapPoint(params double[]! p) -> void
dymaptic.GeoBlazor.Core.Objects.MapPoint.MapPoint(System.Collections.Generic.IEnumerable<double>! p) -> void
dymaptic.GeoBlazor.Core.Objects.NearestPointResult
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.Coordinate.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Point!
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.Coordinate.set -> void
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.Distance.get -> double
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.Distance.set -> void
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.IsEmpty.get -> bool
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.IsEmpty.set -> void
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.NearestPointResult() -> void
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.VertexIndex.get -> int
dymaptic.GeoBlazor.Core.Objects.NearestPointResult.VertexIndex.set -> void
dymaptic.GeoBlazor.Core.Objects.OrderBy
dymaptic.GeoBlazor.Core.Objects.OrderBy.Asc = 0 -> dymaptic.GeoBlazor.Core.Objects.OrderBy
dymaptic.GeoBlazor.Core.Objects.OrderBy.Desc = 1 -> dymaptic.GeoBlazor.Core.Objects.OrderBy
dymaptic.GeoBlazor.Core.Objects.OriginPosition
dymaptic.GeoBlazor.Core.Objects.OriginPosition.LowerLeft = 1 -> dymaptic.GeoBlazor.Core.Objects.OriginPosition
dymaptic.GeoBlazor.Core.Objects.OriginPosition.UpperLeft = 0 -> dymaptic.GeoBlazor.Core.Objects.OriginPosition
dymaptic.GeoBlazor.Core.Objects.ParameterValue
dymaptic.GeoBlazor.Core.Objects.ParameterValue.Name.get -> string!
dymaptic.GeoBlazor.Core.Objects.ParameterValue.Name.init -> void
dymaptic.GeoBlazor.Core.Objects.ParameterValue.ParameterValue(string! Name, object! Value) -> void
dymaptic.GeoBlazor.Core.Objects.ParameterValue.Value.get -> object!
dymaptic.GeoBlazor.Core.Objects.ParameterValue.Value.init -> void
dymaptic.GeoBlazor.Core.Objects.QuantizationMode
dymaptic.GeoBlazor.Core.Objects.QuantizationMode.Edit = 1 -> dymaptic.GeoBlazor.Core.Objects.QuantizationMode
dymaptic.GeoBlazor.Core.Objects.QuantizationMode.View = 0 -> dymaptic.GeoBlazor.Core.Objects.QuantizationMode
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters.Extent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent?
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters.Extent.init -> void
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters.Mode.get -> dymaptic.GeoBlazor.Core.Objects.QuantizationMode?
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters.Mode.init -> void
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters.OriginPosition.get -> dymaptic.GeoBlazor.Core.Objects.OriginPosition?
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters.OriginPosition.init -> void
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters.Tolerance.get -> double?
dymaptic.GeoBlazor.Core.Objects.QuantizationParameters.Tolerance.init -> void
dymaptic.GeoBlazor.Core.Objects.Query
dymaptic.GeoBlazor.Core.Objects.Query.AggregateIds.get -> System.Collections.Generic.IEnumerable<int>?
dymaptic.GeoBlazor.Core.Objects.Query.AggregateIds.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.CacheHint.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.CacheHint.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.DatumTransformation.get -> double?
dymaptic.GeoBlazor.Core.Objects.Query.DatumTransformation.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Distance.get -> double?
dymaptic.GeoBlazor.Core.Objects.Query.Distance.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.GdbVersion.get -> string?
dymaptic.GeoBlazor.Core.Objects.Query.GdbVersion.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Geometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Objects.Query.Geometry.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.GeometryPrecision.get -> int?
dymaptic.GeoBlazor.Core.Objects.Query.GeometryPrecision.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.GroupByFieldsForStatistics.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.Query.GroupByFieldsForStatistics.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Having.get -> string?
dymaptic.GeoBlazor.Core.Objects.Query.Having.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.HistoricMoment.get -> System.DateTime?
dymaptic.GeoBlazor.Core.Objects.Query.HistoricMoment.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.MaxAllowableOffset.get -> double?
dymaptic.GeoBlazor.Core.Objects.Query.MaxAllowableOffset.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.MaxRecordCountFactor.get -> int?
dymaptic.GeoBlazor.Core.Objects.Query.MaxRecordCountFactor.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Num.get -> int?
dymaptic.GeoBlazor.Core.Objects.Query.Num.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ObjectIds.get -> System.Collections.Generic.IEnumerable<long>?
dymaptic.GeoBlazor.Core.Objects.Query.ObjectIds.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.OrderByFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.Query.OrderByFields.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.OutFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.Query.OutFields.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.OutSpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Objects.Query.OutSpatialReference.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.OutStatistics.get -> System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Objects.StatisticDefinition!>?
dymaptic.GeoBlazor.Core.Objects.Query.OutStatistics.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ParameterValues.get -> System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Objects.ParameterValue!>?
dymaptic.GeoBlazor.Core.Objects.Query.ParameterValues.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.QuantizationParameters.get -> dymaptic.GeoBlazor.Core.Objects.QuantizationParameters?
dymaptic.GeoBlazor.Core.Objects.Query.QuantizationParameters.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Query() -> void
dymaptic.GeoBlazor.Core.Objects.Query.RangeValues.get -> System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Objects.RangeValue!>?
dymaptic.GeoBlazor.Core.Objects.Query.RangeValues.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.RelationParameter.get -> string?
dymaptic.GeoBlazor.Core.Objects.Query.RelationParameter.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ReturnCentroid.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.ReturnCentroid.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ReturnDistinctValues.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.ReturnDistinctValues.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ReturnExceededLimitFeatures.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.ReturnExceededLimitFeatures.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ReturnGeometry.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.ReturnGeometry.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ReturnM.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.ReturnM.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ReturnQueryGeometry.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.ReturnQueryGeometry.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.ReturnZ.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.ReturnZ.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.SpatialRelationship.get -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship?
dymaptic.GeoBlazor.Core.Objects.Query.SpatialRelationship.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.SqlFormat.get -> dymaptic.GeoBlazor.Core.Objects.SqlFormat?
dymaptic.GeoBlazor.Core.Objects.Query.SqlFormat.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Start.get -> int?
dymaptic.GeoBlazor.Core.Objects.Query.Start.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Text.get -> string?
dymaptic.GeoBlazor.Core.Objects.Query.Text.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.TimeExtent.get -> dymaptic.GeoBlazor.Core.Objects.TimeExtent?
dymaptic.GeoBlazor.Core.Objects.Query.TimeExtent.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Units.get -> dymaptic.GeoBlazor.Core.Objects.LinearUnit?
dymaptic.GeoBlazor.Core.Objects.Query.Units.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.UseViewExtent.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Query.UseViewExtent.set -> void
dymaptic.GeoBlazor.Core.Objects.Query.Where.get -> string?
dymaptic.GeoBlazor.Core.Objects.Query.Where.set -> void
dymaptic.GeoBlazor.Core.Objects.RangeValue
dymaptic.GeoBlazor.Core.Objects.RangeValue.Name.get -> string!
dymaptic.GeoBlazor.Core.Objects.RangeValue.Name.init -> void
dymaptic.GeoBlazor.Core.Objects.RangeValue.RangeValue(string! Name, object! Value) -> void
dymaptic.GeoBlazor.Core.Objects.RangeValue.Value.get -> object!
dymaptic.GeoBlazor.Core.Objects.RangeValue.Value.init -> void
dymaptic.GeoBlazor.Core.Objects.Relationship
dymaptic.GeoBlazor.Core.Objects.Relationship.Cardinality.get -> dymaptic.GeoBlazor.Core.Objects.Cardinality?
dymaptic.GeoBlazor.Core.Objects.Relationship.Cardinality.set -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.Composite.get -> bool?
dymaptic.GeoBlazor.Core.Objects.Relationship.Composite.set -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.Id.get -> int?
dymaptic.GeoBlazor.Core.Objects.Relationship.Id.set -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.KeyField.get -> string?
dymaptic.GeoBlazor.Core.Objects.Relationship.KeyField.set -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.KeyFieldInRelationshipTable.get -> string?
dymaptic.GeoBlazor.Core.Objects.Relationship.KeyFieldInRelationshipTable.set -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.Name.get -> string?
dymaptic.GeoBlazor.Core.Objects.Relationship.Name.set -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.RelatedTableId.get -> int?
dymaptic.GeoBlazor.Core.Objects.Relationship.RelatedTableId.set -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.Relationship() -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.RelationshipTableId.get -> int?
dymaptic.GeoBlazor.Core.Objects.Relationship.RelationshipTableId.set -> void
dymaptic.GeoBlazor.Core.Objects.Relationship.Role.get -> dymaptic.GeoBlazor.Core.Objects.Role?
dymaptic.GeoBlazor.Core.Objects.Relationship.Role.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.CacheHint.get -> bool?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.CacheHint.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.GdbVersion.get -> string?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.GdbVersion.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.GeometryPrecision.get -> double?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.GeometryPrecision.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.HistoricMoment.get -> System.DateTime?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.HistoricMoment.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.MaxAllowableOffset.get -> double?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.MaxAllowableOffset.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.Num.get -> int?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.Num.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.ObjectIds.get -> System.Collections.Generic.IEnumerable<int>?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.ObjectIds.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.OrderByFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.OrderByFields.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.OutFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.OutFields.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.OutSpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.OutSpatialReference.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.RelationshipId.get -> int?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.RelationshipId.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.RelationshipQuery() -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.ReturnGeometry.get -> bool?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.ReturnGeometry.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.ReturnM.get -> bool?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.ReturnM.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.ReturnZ.get -> bool?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.ReturnZ.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.Start.get -> int?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.Start.set -> void
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.Where.get -> string?
dymaptic.GeoBlazor.Core.Objects.RelationshipQuery.Where.set -> void
dymaptic.GeoBlazor.Core.Objects.Role
dymaptic.GeoBlazor.Core.Objects.Role.Destination = 1 -> dymaptic.GeoBlazor.Core.Objects.Role
dymaptic.GeoBlazor.Core.Objects.Role.Origin = 0 -> dymaptic.GeoBlazor.Core.Objects.Role
dymaptic.GeoBlazor.Core.Objects.Screenshot
dymaptic.GeoBlazor.Core.Objects.Screenshot.Data.get -> dymaptic.GeoBlazor.Core.Objects.ImageData!
dymaptic.GeoBlazor.Core.Objects.Screenshot.Data.init -> void
dymaptic.GeoBlazor.Core.Objects.Screenshot.DataUrl.get -> string!
dymaptic.GeoBlazor.Core.Objects.Screenshot.DataUrl.init -> void
dymaptic.GeoBlazor.Core.Objects.Screenshot.Screenshot(string! DataUrl, dymaptic.GeoBlazor.Core.Objects.ImageData! Data) -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea.Height.get -> double?
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea.Height.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea.Width.get -> double?
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea.Width.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea.X.get -> double?
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea.X.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea.Y.get -> double?
dymaptic.GeoBlazor.Core.Objects.ScreenshotArea.Y.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotFormat
dymaptic.GeoBlazor.Core.Objects.ScreenshotFormat.Jpg = 0 -> dymaptic.GeoBlazor.Core.Objects.ScreenshotFormat
dymaptic.GeoBlazor.Core.Objects.ScreenshotFormat.Png = 1 -> dymaptic.GeoBlazor.Core.Objects.ScreenshotFormat
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Area.get -> dymaptic.GeoBlazor.Core.Objects.ScreenshotArea?
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Area.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Format.get -> dymaptic.GeoBlazor.Core.Objects.ScreenshotFormat?
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Format.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Height.get -> int?
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Height.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.IgnoreBackground.get -> bool?
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.IgnoreBackground.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.IgnorePadding.get -> bool?
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.IgnorePadding.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.LayerIds.get -> System.Collections.Generic.IReadOnlyCollection<System.Guid>?
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.LayerIds.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Quality.get -> int?
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Quality.init -> void
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Width.get -> int?
dymaptic.GeoBlazor.Core.Objects.ScreenshotOptions.Width.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchResponse
dymaptic.GeoBlazor.Core.Objects.SearchResponse.ActiveSourceIndex.get -> int
dymaptic.GeoBlazor.Core.Objects.SearchResponse.ActiveSourceIndex.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchResponse.Errors.get -> dymaptic.GeoBlazor.Core.Exceptions.JavascriptError![]!
dymaptic.GeoBlazor.Core.Objects.SearchResponse.Errors.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchResponse.NumResults.get -> int
dymaptic.GeoBlazor.Core.Objects.SearchResponse.NumResults.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchResponse.Results.get -> dymaptic.GeoBlazor.Core.Objects.SearchResultResponse![]!
dymaptic.GeoBlazor.Core.Objects.SearchResponse.Results.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchResponse.SearchResponse(int ActiveSourceIndex, dymaptic.GeoBlazor.Core.Exceptions.JavascriptError![]! Errors, int NumResults, string! SearchTerm, dymaptic.GeoBlazor.Core.Objects.SearchResultResponse![]! Results) -> void
dymaptic.GeoBlazor.Core.Objects.SearchResponse.SearchTerm.get -> string!
dymaptic.GeoBlazor.Core.Objects.SearchResponse.SearchTerm.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchResult
dymaptic.GeoBlazor.Core.Objects.SearchResult.Extent.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Extent?
dymaptic.GeoBlazor.Core.Objects.SearchResult.Extent.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchResult.Feature.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic?
dymaptic.GeoBlazor.Core.Objects.SearchResult.Feature.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchResult.Name.get -> string?
dymaptic.GeoBlazor.Core.Objects.SearchResult.Name.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchResult.SearchResult() -> void
dymaptic.GeoBlazor.Core.Objects.SearchResult.Target.get -> dymaptic.GeoBlazor.Core.Components.Layers.Graphic?
dymaptic.GeoBlazor.Core.Objects.SearchResult.Target.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchResultResponse
dymaptic.GeoBlazor.Core.Objects.SearchResultResponse.Results.get -> dymaptic.GeoBlazor.Core.Objects.SearchResult![]!
dymaptic.GeoBlazor.Core.Objects.SearchResultResponse.Results.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchResultResponse.SearchResultResponse(dymaptic.GeoBlazor.Core.Objects.SearchResult![]! Results, dymaptic.GeoBlazor.Core.Objects.SearchSource! Source, int SourceIndex) -> void
dymaptic.GeoBlazor.Core.Objects.SearchResultResponse.Source.get -> dymaptic.GeoBlazor.Core.Objects.SearchSource!
dymaptic.GeoBlazor.Core.Objects.SearchResultResponse.Source.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchResultResponse.SourceIndex.get -> int
dymaptic.GeoBlazor.Core.Objects.SearchResultResponse.SourceIndex.init -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource
dymaptic.GeoBlazor.Core.Objects.SearchSource.AutoNavigate.get -> bool?
dymaptic.GeoBlazor.Core.Objects.SearchSource.AutoNavigate.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.GetResultsHandler.get -> System.Func<dymaptic.GeoBlazor.Core.Objects.GetResultsParameters!, System.Threading.Tasks.Task<System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Objects.SearchResult!>!>!>?
dymaptic.GeoBlazor.Core.Objects.SearchSource.GetResultsHandler.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.GetSuggestionsHandler.get -> System.Func<dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters!, System.Threading.Tasks.Task<System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Objects.SuggestResult!>!>!>?
dymaptic.GeoBlazor.Core.Objects.SearchSource.GetSuggestionsHandler.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.HasGetResultsHandler.get -> bool
dymaptic.GeoBlazor.Core.Objects.SearchSource.HasGetSuggestionsHandler.get -> bool
dymaptic.GeoBlazor.Core.Objects.SearchSource.MaxResults.get -> int?
dymaptic.GeoBlazor.Core.Objects.SearchSource.MaxResults.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.MinSuggestCharacters.get -> int?
dymaptic.GeoBlazor.Core.Objects.SearchSource.MinSuggestCharacters.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.Name.get -> string?
dymaptic.GeoBlazor.Core.Objects.SearchSource.Name.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.OnJavaScriptGetResults(dymaptic.GeoBlazor.Core.Objects.GetResultsParameters! resultsParams) -> System.Threading.Tasks.Task<System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Objects.SearchResult!>!>!
dymaptic.GeoBlazor.Core.Objects.SearchSource.OnJavaScriptGetSuggestions(dymaptic.GeoBlazor.Core.Objects.GetSuggestionsParameters! suggestionsParams) -> System.Threading.Tasks.Task<System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Objects.SuggestResult!>!>!
dymaptic.GeoBlazor.Core.Objects.SearchSource.OutFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.SearchSource.OutFields.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.Placeholder.get -> string?
dymaptic.GeoBlazor.Core.Objects.SearchSource.Placeholder.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.PopupEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Objects.SearchSource.PopupEnabled.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.PopupTemplate.get -> dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate?
dymaptic.GeoBlazor.Core.Objects.SearchSource.PopupTemplate.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.Prefix.get -> string?
dymaptic.GeoBlazor.Core.Objects.SearchSource.Prefix.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.ResultGraphicEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Objects.SearchSource.ResultGraphicEnabled.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.ResultSymbol.get -> dymaptic.GeoBlazor.Core.Components.Symbols.Symbol?
dymaptic.GeoBlazor.Core.Objects.SearchSource.ResultSymbol.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.SearchSource() -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.SearchSourceObjectReference.get -> Microsoft.JSInterop.DotNetObjectReference<dymaptic.GeoBlazor.Core.Objects.SearchSource!>!
dymaptic.GeoBlazor.Core.Objects.SearchSource.SearchTemplate.get -> string?
dymaptic.GeoBlazor.Core.Objects.SearchSource.SearchTemplate.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.Suffix.get -> string?
dymaptic.GeoBlazor.Core.Objects.SearchSource.Suffix.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.SuggestionsEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Objects.SearchSource.SuggestionsEnabled.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.WithinViewEnabled.get -> bool?
dymaptic.GeoBlazor.Core.Objects.SearchSource.WithinViewEnabled.set -> void
dymaptic.GeoBlazor.Core.Objects.SearchSource.ZoomScale.get -> double?
dymaptic.GeoBlazor.Core.Objects.SearchSource.ZoomScale.set -> void
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.SpatialReferenceInfo() -> void
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.Tolerance.get -> double
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.Tolerance.set -> void
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.UnitBaseFactor.get -> double
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.UnitBaseFactor.set -> void
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.UnitID.get -> int
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.UnitID.set -> void
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.UnitSquareDerivative.get -> double
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.UnitSquareDerivative.set -> void
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.UnitType.get -> int
dymaptic.GeoBlazor.Core.Objects.SpatialReferenceInfo.UnitType.set -> void
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.Contains = 1 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.Crosses = 2 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.Disjoint = 7 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.EnvelopeIntersects = 3 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.EqualTo = 10 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.IndexIntersects = 9 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.Intersects = 0 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.Overlaps = 4 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.Relation = 8 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.Touches = 5 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SpatialRelationship.Within = 6 -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship
dymaptic.GeoBlazor.Core.Objects.SqlFormat
dymaptic.GeoBlazor.Core.Objects.SqlFormat.Native = 2 -> dymaptic.GeoBlazor.Core.Objects.SqlFormat
dymaptic.GeoBlazor.Core.Objects.SqlFormat.None = 0 -> dymaptic.GeoBlazor.Core.Objects.SqlFormat
dymaptic.GeoBlazor.Core.Objects.SqlFormat.Standard = 1 -> dymaptic.GeoBlazor.Core.Objects.SqlFormat
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.OnStatisticField.get -> string!
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.OnStatisticField.init -> void
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.OutStatisticFieldName.get -> string!
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.OutStatisticFieldName.init -> void
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.StatisticDefinition(string! OnStatisticField, string! OutStatisticFieldName, dymaptic.GeoBlazor.Core.Objects.StatisticType StatisticType, dymaptic.GeoBlazor.Core.Objects.StatisticParameters! StatisticParameters) -> void
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.StatisticParameters.get -> dymaptic.GeoBlazor.Core.Objects.StatisticParameters!
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.StatisticParameters.init -> void
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.StatisticType.get -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticDefinition.StatisticType.init -> void
dymaptic.GeoBlazor.Core.Objects.StatisticParameters
dymaptic.GeoBlazor.Core.Objects.StatisticParameters.OrderBy.get -> dymaptic.GeoBlazor.Core.Objects.OrderBy?
dymaptic.GeoBlazor.Core.Objects.StatisticParameters.OrderBy.init -> void
dymaptic.GeoBlazor.Core.Objects.StatisticParameters.StatisticParameters(double Value) -> void
dymaptic.GeoBlazor.Core.Objects.StatisticParameters.Value.get -> double
dymaptic.GeoBlazor.Core.Objects.StatisticParameters.Value.init -> void
dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.Avg = 4 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.CentroidAggregate = 10 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.ConvexHullAggregate = 11 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.Count = 0 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.EnvelopeAggregate = 9 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.Max = 3 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.Min = 2 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.PercentileContinuous = 7 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.PercentileDiscrete = 8 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.Stddev = 5 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.Sum = 1 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.StatisticType.Var = 6 -> dymaptic.GeoBlazor.Core.Objects.StatisticType
dymaptic.GeoBlazor.Core.Objects.SuggestResponse
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.ActiveSourceIndex.get -> int
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.ActiveSourceIndex.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.Errors.get -> dymaptic.GeoBlazor.Core.Exceptions.JavascriptError![]!
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.Errors.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.NumResults.get -> int
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.NumResults.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.Results.get -> dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse![]!
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.Results.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.SuggestResponse(int ActiveSourceIndex, dymaptic.GeoBlazor.Core.Exceptions.JavascriptError![]! Errors, int NumResults, string! SuggestTerm, dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse![]! Results) -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.SuggestTerm.get -> string!
dymaptic.GeoBlazor.Core.Objects.SuggestResponse.SuggestTerm.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResult
dymaptic.GeoBlazor.Core.Objects.SuggestResult.Key.get -> string?
dymaptic.GeoBlazor.Core.Objects.SuggestResult.Key.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResult.SourceIndex.get -> int?
dymaptic.GeoBlazor.Core.Objects.SuggestResult.SourceIndex.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResult.SuggestResult(string? Key, string? Text, int? SourceIndex) -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResult.Text.get -> string?
dymaptic.GeoBlazor.Core.Objects.SuggestResult.Text.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse
dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse.Results.get -> dymaptic.GeoBlazor.Core.Objects.SuggestResult![]!
dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse.Results.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse.Source.get -> dymaptic.GeoBlazor.Core.Objects.SearchSource!
dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse.Source.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse.SourceIndex.get -> int
dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse.SourceIndex.init -> void
dymaptic.GeoBlazor.Core.Objects.SuggestResultResponse.SuggestResultResponse(dymaptic.GeoBlazor.Core.Objects.SuggestResult![]! Results, dymaptic.GeoBlazor.Core.Objects.SearchSource! Source, int SourceIndex) -> void
dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Centuries = 9 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Days = 0 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Decades = 8 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Hours = 1 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Milliseconds = 2 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Minutes = 3 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Months = 4 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Seconds = 5 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Weeks = 6 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TemporalTime.Years = 7 -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TimeExtent
dymaptic.GeoBlazor.Core.Objects.TimeExtent.End.get -> System.DateTime
dymaptic.GeoBlazor.Core.Objects.TimeExtent.End.init -> void
dymaptic.GeoBlazor.Core.Objects.TimeExtent.Start.get -> System.DateTime
dymaptic.GeoBlazor.Core.Objects.TimeExtent.Start.init -> void
dymaptic.GeoBlazor.Core.Objects.TimeExtent.TimeExtent(System.DateTime Start, System.DateTime End) -> void
dymaptic.GeoBlazor.Core.Objects.TimeInterval
dymaptic.GeoBlazor.Core.Objects.TimeInterval.TimeInterval() -> void
dymaptic.GeoBlazor.Core.Objects.TimeInterval.Unit.get -> dymaptic.GeoBlazor.Core.Objects.TemporalTime
dymaptic.GeoBlazor.Core.Objects.TimeInterval.Unit.set -> void
dymaptic.GeoBlazor.Core.Objects.TimeInterval.Value.get -> double
dymaptic.GeoBlazor.Core.Objects.TimeInterval.Value.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.CacheHint.get -> bool?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.CacheHint.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Distance.get -> double?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Distance.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Geometry.get -> dymaptic.GeoBlazor.Core.Components.Geometries.Geometry?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Geometry.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.GeometryPrecision.get -> double?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.GeometryPrecision.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.MaxAllowableOffset.get -> double?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.MaxAllowableOffset.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Num.get -> int?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Num.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.ObjectIds.get -> System.Collections.Generic.IEnumerable<int>?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.ObjectIds.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.OrderByFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.OrderByFields.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.OutFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.OutFields.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.OutSpatialReference.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.OutSpatialReference.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.ReturnGeometry.get -> bool?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.ReturnGeometry.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.ReturnM.get -> bool?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.ReturnM.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.ReturnZ.get -> bool?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.ReturnZ.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.SpatialRelationship.get -> dymaptic.GeoBlazor.Core.Objects.SpatialRelationship?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.SpatialRelationship.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Start.get -> int?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Start.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.TimeExtent.get -> dymaptic.GeoBlazor.Core.Objects.TimeExtent?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.TimeExtent.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.TopFeaturesQuery() -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.TopFilter.get -> dymaptic.GeoBlazor.Core.Objects.TopFilter?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.TopFilter.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Units.get -> dymaptic.GeoBlazor.Core.Objects.LinearUnit?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Units.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Where.get -> string?
dymaptic.GeoBlazor.Core.Objects.TopFeaturesQuery.Where.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFilter
dymaptic.GeoBlazor.Core.Objects.TopFilter.GroupByFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.TopFilter.GroupByFields.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFilter.OrderByFields.get -> System.Collections.Generic.IEnumerable<string!>?
dymaptic.GeoBlazor.Core.Objects.TopFilter.OrderByFields.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFilter.TopCount.get -> int?
dymaptic.GeoBlazor.Core.Objects.TopFilter.TopCount.set -> void
dymaptic.GeoBlazor.Core.Objects.TopFilter.TopFilter() -> void
dymaptic.GeoBlazor.Core.RequiredPropertyAttribute
dymaptic.GeoBlazor.Core.RequiredPropertyAttribute.OtherOptions.get -> string![]?
dymaptic.GeoBlazor.Core.RequiredPropertyAttribute.RequiredPropertyAttribute(params string![]? otherOptions) -> void
dymaptic.GeoBlazor.Core.Serialization.DrawingToolStringConverter
dymaptic.GeoBlazor.Core.Serialization.DrawingToolStringConverter.DrawingToolStringConverter() -> void
dymaptic.GeoBlazor.Core.Serialization.EnumToKebabCaseStringConverter<T>
dymaptic.GeoBlazor.Core.Serialization.EnumToKebabCaseStringConverter<T>.EnumToKebabCaseStringConverter() -> void
dymaptic.GeoBlazor.Core.Serialization.LabelPlacementStringConverter
dymaptic.GeoBlazor.Core.Serialization.LabelPlacementStringConverter.LabelPlacementStringConverter() -> void
dymaptic.GeoBlazor.Core.Serialization.TimeEnumToKebabCaseStringConverter<T>
dymaptic.GeoBlazor.Core.Serialization.TimeEnumToKebabCaseStringConverter<T>.TimeEnumToKebabCaseStringConverter() -> void
override dymaptic.GeoBlazor.Core.Components.ActionButton.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.ActionToggle.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Basemap.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Basemap.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Constraints.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Constraints.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.OnParametersSetAsync() -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Geometries.Point.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.BaseTileLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.BingMapsLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.ColorVariable.VariableType.get -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
override dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.DynamicDataLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.DynamicMapLayer.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OnAfterRenderAsync(bool firstRender) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Refresh() -> void
override dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Field.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Field.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.Graphic.DisposeAsync() -> System.Threading.Tasks.ValueTask
override dymaptic.GeoBlazor.Core.Components.Layers.Graphic.GetSymbol() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Symbols.Symbol?>!
override dymaptic.GeoBlazor.Core.Components.Layers.Graphic.OnAfterRenderAsync(bool firstRender) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Graphic.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Graphic.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView parameters) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Graphic.SetSymbol(dymaptic.GeoBlazor.Core.Components.Symbols.Symbol! symbol) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Graphic.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.OnAfterRenderAsync(bool firstRender) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.ImageryLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.ImageryTileLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.JoinTableDataSource.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Label.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Label.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Layer.DisposeAsync() -> System.Threading.Tasks.ValueTask
override dymaptic.GeoBlazor.Core.Components.Layers.Layer.OnAfterRenderAsync(bool firstRender) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Layer.OnParametersSetAsync() -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Layer.Refresh() -> void
override dymaptic.GeoBlazor.Core.Components.Layers.Layer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Layer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.MapImageLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.MultidimensionalSubset.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.OpacityVariable.VariableType.get -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
override dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.QueryTableDataSource.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.RasterDataSource.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.VariableType.get -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
override dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.VariableType.get -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
override dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.Refresh() -> void
override dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.Sublayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.TableDataSource.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.LayerType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Map.OnAfterRenderAsync(bool firstRender) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Map.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Map.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.MapComponent.OnAfterRender(bool firstRender) -> void
override dymaptic.GeoBlazor.Core.Components.MapComponent.OnInitializedAsync() -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.MapComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView parameters) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.MapComponent.ShouldRender() -> bool
override dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.PortalItem.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.PortalItem.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ColorRampType.get -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRampType
override dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.ColorRampType.get -> dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.ColorRampType
override dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.RendererType.get -> dymaptic.GeoBlazor.Core.Components.Renderers.RendererType
override dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.RendererType.get -> dymaptic.GeoBlazor.Core.Components.Renderers.RendererType
override dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Symbols.PictureFillSymbol.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.MapView.DisposeAsync() -> System.Threading.Tasks.ValueTask
override dymaptic.GeoBlazor.Core.Components.Views.MapView.OnAfterRenderAsync(bool firstRender) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.MapView.OnParametersSetAsync() -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.MapView.Refresh() -> void
override dymaptic.GeoBlazor.Core.Components.Views.MapView.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.MapView.RenderView(bool forceRender = false) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.MapView.ShouldRender() -> bool
override dymaptic.GeoBlazor.Core.Components.Views.MapView.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.SceneView.GoTo(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.SceneView.OnJavascriptExtentChanged(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent, dymaptic.GeoBlazor.Core.Components.Geometries.Point? center, double zoom, double scale, double? rotation = null, double? tilt = null) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.SceneView.RenderView(bool forceRender = false) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.SceneView.SetCenter(dymaptic.GeoBlazor.Core.Components.Geometries.Point! point) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.SceneView.SetExtent(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.SceneView.SetScale(double scale) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.SceneView.SetZoom(double zoom) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.SceneView.UpdateView() -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.WebMap.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.WebMap.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.WebScene.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.WebScene.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.AreaMeasurement2DWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain<T>.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain<T>.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain<T>.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Hidden.get -> bool
override dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.InheritedDomain.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.SliderWidget.WidgetType.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.Type.get -> string!
override dymaptic.GeoBlazor.Core.Components.Widgets.Widget.OnAfterRenderAsync(bool firstRender) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Components.Widgets.Widget.OnParametersSet() -> void
override dymaptic.GeoBlazor.Core.Components.Widgets.Widget.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView parameters) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Model.GeometryEngine.ComponentName.get -> string!
override dymaptic.GeoBlazor.Core.Model.Locator.ComponentName.get -> string!
override dymaptic.GeoBlazor.Core.Model.Projection.ComponentName.get -> string!
override dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.Equals(object? obj) -> bool
override dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.GetHashCode() -> int
override dymaptic.GeoBlazor.Core.Objects.Dimension.Equals(object? obj) -> bool
override dymaptic.GeoBlazor.Core.Objects.Dimension.GetHashCode() -> int
override dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.Type.get -> string!
override dymaptic.GeoBlazor.Core.Objects.LayerSearchSource.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.Type.get -> string!
override dymaptic.GeoBlazor.Core.Objects.LocatorSearchSource.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Objects.MapColor.Equals(object? obj) -> bool
override dymaptic.GeoBlazor.Core.Objects.MapColor.GetHashCode() -> int
override dymaptic.GeoBlazor.Core.Objects.MapPath.Equals(object? obj) -> bool
override dymaptic.GeoBlazor.Core.Objects.MapPath.GetHashCode() -> int
override dymaptic.GeoBlazor.Core.Objects.MapPoint.Equals(object? obj) -> bool
override dymaptic.GeoBlazor.Core.Objects.MapPoint.GetHashCode() -> int
override dymaptic.GeoBlazor.Core.Objects.SearchSource.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Objects.SearchSource.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
override dymaptic.GeoBlazor.Core.Serialization.DrawingToolStringConverter.Read(ref System.Text.Json.Utf8JsonReader reader, System.Type! typeToConvert, System.Text.Json.JsonSerializerOptions! options) -> dymaptic.GeoBlazor.Core.Components.Layers.DrawingTool
override dymaptic.GeoBlazor.Core.Serialization.EnumToKebabCaseStringConverter<T>.Read(ref System.Text.Json.Utf8JsonReader reader, System.Type! typeToConvert, System.Text.Json.JsonSerializerOptions! options) -> T
override dymaptic.GeoBlazor.Core.Serialization.EnumToKebabCaseStringConverter<T>.Write(System.Text.Json.Utf8JsonWriter! writer, T value, System.Text.Json.JsonSerializerOptions! options) -> void
override dymaptic.GeoBlazor.Core.Serialization.LabelPlacementStringConverter.Read(ref System.Text.Json.Utf8JsonReader reader, System.Type! typeToConvert, System.Text.Json.JsonSerializerOptions! options) -> dymaptic.GeoBlazor.Core.Components.Layers.LabelPlacement
override dymaptic.GeoBlazor.Core.Serialization.TimeEnumToKebabCaseStringConverter<T>.Read(ref System.Text.Json.Utf8JsonReader reader, System.Type! typeToConvert, System.Text.Json.JsonSerializerOptions! options) -> T
readonly dymaptic.GeoBlazor.Core.Components.MapComponent.CancellationTokenSource -> System.Threading.CancellationTokenSource!
readonly dymaptic.GeoBlazor.Core.Model.LogicComponent.AuthenticationManager -> dymaptic.GeoBlazor.Core.Model.AuthenticationManager!
readonly dymaptic.GeoBlazor.Core.Model.LogicComponent.CancellationTokenSource -> System.Threading.CancellationTokenSource!
readonly dymaptic.GeoBlazor.Core.Model.LogicComponent.JsRuntime -> Microsoft.JSInterop.IJSRuntime!
static dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.WebMercator.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference!
static dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.WebMercator.set -> void
static dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wgs84.get -> dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference!
static dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wgs84.set -> void
static dymaptic.GeoBlazor.Core.Components.Layers.Effect.implicit operator dymaptic.GeoBlazor.Core.Components.Layers.Effect!(string! stringVal) -> dymaptic.GeoBlazor.Core.Components.Layers.Effect!
static dymaptic.GeoBlazor.Core.DependencyExtension.AddGeoBlazor(this Microsoft.Extensions.DependencyInjection.IServiceCollection! serviceCollection, Microsoft.Extensions.Configuration.IConfiguration? configuration = null) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static dymaptic.GeoBlazor.Core.JsModuleManager.GetArcGisJsCore(Microsoft.JSInterop.IJSRuntime! jsRuntime, Microsoft.JSInterop.IJSObjectReference? proModule, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.JSInterop.IJSObjectReference!>!
static dymaptic.GeoBlazor.Core.JsModuleManager.GetArcGisJsPro(Microsoft.JSInterop.IJSRuntime! jsRuntime, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.JSInterop.IJSObjectReference?>!
static dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.explicit operator System.Collections.Generic.Dictionary<string!, object?>!(dymaptic.GeoBlazor.Core.Objects.AttributesDictionary! attributesDictionary) -> System.Collections.Generic.Dictionary<string!, object?>!
static dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.operator !=(dymaptic.GeoBlazor.Core.Objects.AttributesDictionary? left, dymaptic.GeoBlazor.Core.Objects.AttributesDictionary? right) -> bool
static dymaptic.GeoBlazor.Core.Objects.AttributesDictionary.operator ==(dymaptic.GeoBlazor.Core.Objects.AttributesDictionary! left, dymaptic.GeoBlazor.Core.Objects.AttributesDictionary! right) -> bool
static dymaptic.GeoBlazor.Core.Objects.Dimension.explicit operator double?(dymaptic.GeoBlazor.Core.Objects.Dimension? dimension) -> double?
static dymaptic.GeoBlazor.Core.Objects.Dimension.explicit operator dymaptic.GeoBlazor.Core.Objects.Dimension?(double? nullableDoubleVal) -> dymaptic.GeoBlazor.Core.Objects.Dimension?
static dymaptic.GeoBlazor.Core.Objects.Dimension.implicit operator double(dymaptic.GeoBlazor.Core.Objects.Dimension! dimension) -> double
static dymaptic.GeoBlazor.Core.Objects.Dimension.implicit operator dymaptic.GeoBlazor.Core.Objects.Dimension!(double doubleVal) -> dymaptic.GeoBlazor.Core.Objects.Dimension!
static dymaptic.GeoBlazor.Core.Objects.Dimension.implicit operator dymaptic.GeoBlazor.Core.Objects.Dimension!(int intVal) -> dymaptic.GeoBlazor.Core.Objects.Dimension!
static dymaptic.GeoBlazor.Core.Objects.Dimension.implicit operator dymaptic.GeoBlazor.Core.Objects.Dimension!(string! stringVal) -> dymaptic.GeoBlazor.Core.Objects.Dimension!
static dymaptic.GeoBlazor.Core.Objects.Dimension.operator !=(dymaptic.GeoBlazor.Core.Objects.Dimension? left, dymaptic.GeoBlazor.Core.Objects.Dimension? right) -> bool
static dymaptic.GeoBlazor.Core.Objects.Dimension.operator ==(dymaptic.GeoBlazor.Core.Objects.Dimension? left, dymaptic.GeoBlazor.Core.Objects.Dimension? right) -> bool
static dymaptic.GeoBlazor.Core.Objects.MapColor.operator !=(dymaptic.GeoBlazor.Core.Objects.MapColor? left, dymaptic.GeoBlazor.Core.Objects.MapColor? right) -> bool
static dymaptic.GeoBlazor.Core.Objects.MapColor.operator ==(dymaptic.GeoBlazor.Core.Objects.MapColor? left, dymaptic.GeoBlazor.Core.Objects.MapColor? right) -> bool
virtual dymaptic.GeoBlazor.Core.Components.ActionBase.Type.get -> string!
virtual dymaptic.GeoBlazor.Core.Components.Geometries.Geometry.Type.get -> string!
virtual dymaptic.GeoBlazor.Core.Components.Layers.Layer.LayerType.get -> string!
virtual dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.GetSymbol() -> System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Symbols.Symbol?>!
virtual dymaptic.GeoBlazor.Core.Components.Layers.LayerObject.SetSymbol(dymaptic.GeoBlazor.Core.Components.Symbols.Symbol! symbol) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.VariableType.get -> dymaptic.GeoBlazor.Core.Components.Layers.VisualVariableType
virtual dymaptic.GeoBlazor.Core.Components.MapComponent.DisposeAsync() -> System.Threading.Tasks.ValueTask
virtual dymaptic.GeoBlazor.Core.Components.MapComponent.Refresh() -> void
virtual dymaptic.GeoBlazor.Core.Components.MapComponent.RegisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.MapComponent.RenderView(bool forceRender = false) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.MapComponent.UnregisterChildComponent(dymaptic.GeoBlazor.Core.Components.MapComponent! child) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Type.get -> string!
virtual dymaptic.GeoBlazor.Core.Components.Views.MapView.GoTo(System.Collections.Generic.IEnumerable<dymaptic.GeoBlazor.Core.Components.Layers.Graphic!>! graphics) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Views.MapView.Map.get -> dymaptic.GeoBlazor.Core.Components.Map?
virtual dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptExtentChanged(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent, dymaptic.GeoBlazor.Core.Components.Geometries.Point? center, double zoom, double scale, double? rotation = null, double? tilt = null) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Views.MapView.SetCenter(dymaptic.GeoBlazor.Core.Components.Geometries.Point! point) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Views.MapView.SetExtent(dymaptic.GeoBlazor.Core.Components.Geometries.Extent! extent) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Views.MapView.SetScale(double scale) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Views.MapView.SetZoom(double zoom) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Views.MapView.UpdateView() -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ArcGisWidget.get -> bool
virtual dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Hidden.get -> bool
virtual dymaptic.GeoBlazor.Core.Model.LogicComponent.Initialize() -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Model.LogicComponent.InvokeAsync<T>(string! method, params object?[]! parameters) -> System.Threading.Tasks.Task<T>!
virtual dymaptic.GeoBlazor.Core.Model.LogicComponent.InvokeVoidAsync(string! method, params object?[]! parameters) -> System.Threading.Tasks.Task!
virtual dymaptic.GeoBlazor.Core.Model.LogicComponent.Library.get -> string!
virtual dymaptic.GeoBlazor.Core.Objects.SearchSource.Type.get -> string!
