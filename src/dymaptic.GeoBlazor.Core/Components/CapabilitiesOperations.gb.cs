// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Components;


/// <summary>
///    Describes operations that can be performed on features in the layer.
///    <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
public partial class CapabilitiesOperations : MapComponent
{

    /// <summary>
    ///     Parameterless constructor for use as a Razor Component.
    /// </summary>
    [ActivatorUtilitiesConstructor]
    public CapabilitiesOperations()
    {
    }

    /// <summary>
    ///     Constructor for use in C# code. Use named parameters (e.g., item1: value1, item2: value2) to set properties in any order.
    /// </summary>
    /// <param name="supportsAdd">
    ///     Indicates if new features can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">added</a> to the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsCalculate">
    ///     Indicates if values of one or more field values in the layer can be updated.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsDelete">
    ///     Indicates if features can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">deleted</a> from the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsEditing">
    ///     Indicates if features in the layer can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">edited</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsQuery">
    ///     Indicates if features in the layer can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#queryFeatures">queried</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsQueryAttachments">
    ///     Indicates if the layer supports <a target="_blank" href="https://developers.arcgis.com/rest/services-reference/query-attachments-feature-service-layer-.htm">REST API queryAttachments</a> operation.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsQueryTopFeatures">
    ///     Indicates if the layer supports <a target="_blank" href="https://developers.arcgis.com/rest/services-reference/enterprise/query-top-features-feature-service-layer-.htm">REST API queryTopFeatures</a> operation.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsUpdate">
    ///     Indicates if features in the layer can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">updated</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsValidateSql">
    ///     Indicates if the layer supports a SQL-92 expression or where clause.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    public CapabilitiesOperations(
        bool? supportsAdd = null,
        bool? supportsCalculate = null,
        bool? supportsDelete = null,
        bool? supportsEditing = null,
        bool? supportsQuery = null,
        bool? supportsQueryAttachments = null,
        bool? supportsQueryTopFeatures = null,
        bool? supportsUpdate = null,
        bool? supportsValidateSql = null)
    {
        AllowRender = false;
#pragma warning disable BL0005
        SupportsAdd = supportsAdd;
        SupportsCalculate = supportsCalculate;
        SupportsDelete = supportsDelete;
        SupportsEditing = supportsEditing;
        SupportsQuery = supportsQuery;
        SupportsQueryAttachments = supportsQueryAttachments;
        SupportsQueryTopFeatures = supportsQueryTopFeatures;
        SupportsUpdate = supportsUpdate;
        SupportsValidateSql = supportsValidateSql;
#pragma warning restore BL0005    
    }
    
    
#region Public Properties / Blazor Parameters

    /// <summary>
    ///     Indicates if new features can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">added</a> to the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsAdd { get; set; }
    
    /// <summary>
    ///     Indicates if values of one or more field values in the layer can be updated.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsCalculate { get; set; }
    
    /// <summary>
    ///     Indicates if features can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">deleted</a> from the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsDelete { get; set; }
    
    /// <summary>
    ///     Indicates if features in the layer can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">edited</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsEditing { get; set; }
    
    /// <summary>
    ///     Indicates if features in the layer can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#queryFeatures">queried</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsQuery { get; set; }
    
    /// <summary>
    ///     Indicates if the layer supports <a target="_blank" href="https://developers.arcgis.com/rest/services-reference/query-attachments-feature-service-layer-.htm">REST API queryAttachments</a> operation.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsQueryAttachments { get; set; }
    
    /// <summary>
    ///     Indicates if the layer supports <a target="_blank" href="https://developers.arcgis.com/rest/services-reference/enterprise/query-top-features-feature-service-layer-.htm">REST API queryTopFeatures</a> operation.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsQueryTopFeatures { get; set; }
    
    /// <summary>
    ///     Indicates if features in the layer can be <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">updated</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsUpdate { get; set; }
    
    /// <summary>
    ///     Indicates if the layer supports a SQL-92 expression or where clause.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsValidateSql { get; set; }
    
#endregion

#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsAdd property.
    /// </summary>
    public async Task<bool?> GetSupportsAdd()
    {
        if (CoreJsModule is null)
        {
            return SupportsAdd;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsAdd;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsAdd");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsAdd = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsAdd)] = SupportsAdd;
        }
         
        return SupportsAdd;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsCalculate property.
    /// </summary>
    public async Task<bool?> GetSupportsCalculate()
    {
        if (CoreJsModule is null)
        {
            return SupportsCalculate;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsCalculate;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsCalculate");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsCalculate = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsCalculate)] = SupportsCalculate;
        }
         
        return SupportsCalculate;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsDelete property.
    /// </summary>
    public async Task<bool?> GetSupportsDelete()
    {
        if (CoreJsModule is null)
        {
            return SupportsDelete;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsDelete;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsDelete");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsDelete = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsDelete)] = SupportsDelete;
        }
         
        return SupportsDelete;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsEditing property.
    /// </summary>
    public async Task<bool?> GetSupportsEditing()
    {
        if (CoreJsModule is null)
        {
            return SupportsEditing;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsEditing;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsEditing");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsEditing = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsEditing)] = SupportsEditing;
        }
         
        return SupportsEditing;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsQuery property.
    /// </summary>
    public async Task<bool?> GetSupportsQuery()
    {
        if (CoreJsModule is null)
        {
            return SupportsQuery;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsQuery;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsQuery");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsQuery = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsQuery)] = SupportsQuery;
        }
         
        return SupportsQuery;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsQueryAttachments property.
    /// </summary>
    public async Task<bool?> GetSupportsQueryAttachments()
    {
        if (CoreJsModule is null)
        {
            return SupportsQueryAttachments;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsQueryAttachments;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsQueryAttachments");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsQueryAttachments = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsQueryAttachments)] = SupportsQueryAttachments;
        }
         
        return SupportsQueryAttachments;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsQueryTopFeatures property.
    /// </summary>
    public async Task<bool?> GetSupportsQueryTopFeatures()
    {
        if (CoreJsModule is null)
        {
            return SupportsQueryTopFeatures;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsQueryTopFeatures;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsQueryTopFeatures");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsQueryTopFeatures = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsQueryTopFeatures)] = SupportsQueryTopFeatures;
        }
         
        return SupportsQueryTopFeatures;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsUpdate property.
    /// </summary>
    public async Task<bool?> GetSupportsUpdate()
    {
        if (CoreJsModule is null)
        {
            return SupportsUpdate;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsUpdate;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsUpdate");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsUpdate = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsUpdate)] = SupportsUpdate;
        }
         
        return SupportsUpdate;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsValidateSql property.
    /// </summary>
    public async Task<bool?> GetSupportsValidateSql()
    {
        if (CoreJsModule is null)
        {
            return SupportsValidateSql;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsValidateSql;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsValidateSql");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsValidateSql = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsValidateSql)] = SupportsValidateSql;
        }
         
        return SupportsValidateSql;
    }
    
#endregion

#region Property Setters

    /// <summary>
    ///    Asynchronously set the value of the SupportsAdd property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsAdd(bool value)
    {
#pragma warning disable BL0005
        SupportsAdd = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsAdd)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsAdd", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsCalculate property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsCalculate(bool value)
    {
#pragma warning disable BL0005
        SupportsCalculate = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsCalculate)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsCalculate", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsDelete property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsDelete(bool value)
    {
#pragma warning disable BL0005
        SupportsDelete = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsDelete)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsDelete", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsEditing property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsEditing(bool value)
    {
#pragma warning disable BL0005
        SupportsEditing = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsEditing)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsEditing", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsQuery property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsQuery(bool value)
    {
#pragma warning disable BL0005
        SupportsQuery = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsQuery)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsQuery", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsQueryAttachments property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsQueryAttachments(bool value)
    {
#pragma warning disable BL0005
        SupportsQueryAttachments = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsQueryAttachments)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsQueryAttachments", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsQueryTopFeatures property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsQueryTopFeatures(bool value)
    {
#pragma warning disable BL0005
        SupportsQueryTopFeatures = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsQueryTopFeatures)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsQueryTopFeatures", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsUpdate property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsUpdate(bool value)
    {
#pragma warning disable BL0005
        SupportsUpdate = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsUpdate)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsUpdate", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsValidateSql property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsValidateSql(bool value)
    {
#pragma warning disable BL0005
        SupportsValidateSql = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsValidateSql)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsValidateSql", value);
    }
    
#endregion




}
