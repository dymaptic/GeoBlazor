// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Components;


/// <summary>
///    Describes characteristics of the data in the layer.
///    <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
public partial class CapabilitiesData : MapComponent
{

    /// <summary>
    ///     Parameterless constructor for use as a Razor Component.
    /// </summary>
    [ActivatorUtilitiesConstructor]
    public CapabilitiesData()
    {
    }

    /// <summary>
    ///     Constructor for use in C# code. Use named parameters (e.g., item1: value1, item2: value2) to set properties in any order.
    /// </summary>
    /// <param name="isVersioned">
    ///     Indicates if the feature service is versioned.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsAttachment">
    ///     Indicates if the attachment is enabled on the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsM">
    ///     Indicates if the features in the layer support m-values.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsZ">
    ///     Indicates if the features in the layer support z-values.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    public CapabilitiesData(
        bool? isVersioned = null,
        bool? supportsAttachment = null,
        bool? supportsM = null,
        bool? supportsZ = null)
    {
        AllowRender = false;
#pragma warning disable BL0005
        IsVersioned = isVersioned;
        SupportsAttachment = supportsAttachment;
        SupportsM = supportsM;
        SupportsZ = supportsZ;
#pragma warning restore BL0005    
    }
    
    
#region Public Properties / Blazor Parameters

    /// <summary>
    ///     Indicates if the feature service is versioned.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? IsVersioned { get; set; }
    
    /// <summary>
    ///     Indicates if the attachment is enabled on the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsAttachment { get; set; }
    
    /// <summary>
    ///     Indicates if the features in the layer support m-values.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsM { get; set; }
    
    /// <summary>
    ///     Indicates if the features in the layer support z-values.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsZ { get; set; }
    
#endregion

#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the IsVersioned property.
    /// </summary>
    public async Task<bool?> GetIsVersioned()
    {
        if (CoreJsModule is null)
        {
            return IsVersioned;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return IsVersioned;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "isVersioned");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             IsVersioned = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(IsVersioned)] = IsVersioned;
        }
         
        return IsVersioned;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsAttachment property.
    /// </summary>
    public async Task<bool?> GetSupportsAttachment()
    {
        if (CoreJsModule is null)
        {
            return SupportsAttachment;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsAttachment;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsAttachment");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsAttachment = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsAttachment)] = SupportsAttachment;
        }
         
        return SupportsAttachment;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsM property.
    /// </summary>
    public async Task<bool?> GetSupportsM()
    {
        if (CoreJsModule is null)
        {
            return SupportsM;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsM;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsM");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsM = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsM)] = SupportsM;
        }
         
        return SupportsM;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsZ property.
    /// </summary>
    public async Task<bool?> GetSupportsZ()
    {
        if (CoreJsModule is null)
        {
            return SupportsZ;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return SupportsZ;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsZ");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsZ = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsZ)] = SupportsZ;
        }
         
        return SupportsZ;
    }
    
#endregion

#region Property Setters

    /// <summary>
    ///    Asynchronously set the value of the IsVersioned property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetIsVersioned(bool value)
    {
#pragma warning disable BL0005
        IsVersioned = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(IsVersioned)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "isVersioned", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsAttachment property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsAttachment(bool value)
    {
#pragma warning disable BL0005
        SupportsAttachment = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsAttachment)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsAttachment", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsM property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsM(bool value)
    {
#pragma warning disable BL0005
        SupportsM = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsM)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsM", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsZ property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsZ(bool value)
    {
#pragma warning disable BL0005
        SupportsZ = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsZ)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsZ", value);
    }
    
#endregion

}
