// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Components;


/// <summary>
///    The `RelatedRecordsInfoFieldOrder` class indicates the field display order for the related records in a layer's <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-PopupTemplate.html">PopupTemplate</a>.
///    <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-support-RelatedRecordsInfoFieldOrder.html">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
public partial class RelatedRecordsInfoFieldOrder
{

    /// <summary>
    ///     Parameterless constructor for use as a Razor Component.
    /// </summary>
    [ActivatorUtilitiesConstructor]
    public RelatedRecordsInfoFieldOrder()
    {
    }

    /// <summary>
    ///     Constructor for use in C# code. Use named parameters (e.g., item1: value1, item2: value2) to set properties in any order.
    /// </summary>
    /// <param name="field">
    ///     The attribute value of the field selected that will drive the sorting of related records.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-support-RelatedRecordsInfoFieldOrder.html#field">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="order">
    ///     Set the ascending or descending sort order of the returned related records.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-support-RelatedRecordsInfoFieldOrder.html#order">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    public RelatedRecordsInfoFieldOrder(
        string? field = null,
        OrderBy? order = null)
    {
        AllowRender = false;
#pragma warning disable BL0005
        Field = field;
        Order = order;
#pragma warning restore BL0005    
    }
    
    
#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the Field property.
    /// </summary>
    public async Task<string?> GetField()
    {
        if (CoreJsModule is null)
        {
            return Field;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return Field;
        }

        // get the property value
        string? result = await JsComponentReference!.InvokeAsync<string?>("getProperty",
            CancellationTokenSource.Token, "field");
        if (result is not null)
        {
#pragma warning disable BL0005
             Field = result;
#pragma warning restore BL0005
             ModifiedParameters[nameof(Field)] = Field;
        }
         
        return Field;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the Order property.
    /// </summary>
    public async Task<OrderBy?> GetOrder()
    {
        if (CoreJsModule is null)
        {
            return Order;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return Order;
        }

        // get the property value
        JsNullableEnumWrapper<OrderBy>? result = await CoreJsModule!.InvokeAsync<JsNullableEnumWrapper<OrderBy>?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "order");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             Order = (OrderBy)result.Value.Value!;
#pragma warning restore BL0005
             ModifiedParameters[nameof(Order)] = Order;
        }
         
        return Order;
    }
    
#endregion

#region Property Setters

    /// <summary>
    ///    Asynchronously set the value of the Field property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetField(string? value)
    {
#pragma warning disable BL0005
        Field = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(Field)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "field", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the Order property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetOrder(OrderBy? value)
    {
#pragma warning disable BL0005
        Order = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(Order)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "order", value);
    }
    
#endregion

}
