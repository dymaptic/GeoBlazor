// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Components;


/// <summary>
///    Describes editing capabilities that can be performed on the features in the layer via <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">applyEdits()</a>.
///    <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
public partial class CapabilitiesEditing : MapComponent
{

    /// <summary>
    ///     Parameterless constructor for use as a Razor Component.
    /// </summary>
    [ActivatorUtilitiesConstructor]
    public CapabilitiesEditing()
    {
    }

    /// <summary>
    ///     Constructor for use in C# code. Use named parameters (e.g., item1: value1, item2: value2) to set properties in any order.
    /// </summary>
    /// <param name="supportsDeleteByAnonymous">
    ///     Indicates if anonymous users can delete features created by others.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsDeleteByOthers">
    ///     Indicates if logged in users can delete features created by others.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsGeometryUpdate">
    ///     Indicates if the geometry of the features in the layer can be edited.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsGlobalId">
    ///     Indicates if the `globalId` values provided by the client are used in <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">applyEdits</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsRollbackOnFailure">
    ///     Indicates if the `rollbackOnFailureEnabled` parameter can be set to `true` or `false` when editing features.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsUpdateByAnonymous">
    ///     Indicates if anonymous users can update features created by others.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsUpdateByOthers">
    ///     Indicates if logged in users can update features created by others.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsUpdateWithoutM">
    ///     Indicates if `m-values` must be provided when updating features.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="supportsUploadWithItemId">
    ///     Indicates if the layer supports uploading attachments by <a target="_blank" href="https://developers.arcgis.com/rest/services-reference/item.htm">UploadId</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    public CapabilitiesEditing(
        bool? supportsDeleteByAnonymous = null,
        bool? supportsDeleteByOthers = null,
        bool? supportsGeometryUpdate = null,
        bool? supportsGlobalId = null,
        bool? supportsRollbackOnFailure = null,
        bool? supportsUpdateByAnonymous = null,
        bool? supportsUpdateByOthers = null,
        bool? supportsUpdateWithoutM = null,
        bool? supportsUploadWithItemId = null)
    {
        AllowRender = false;
#pragma warning disable BL0005
        SupportsDeleteByAnonymous = supportsDeleteByAnonymous;
        SupportsDeleteByOthers = supportsDeleteByOthers;
        SupportsGeometryUpdate = supportsGeometryUpdate;
        SupportsGlobalId = supportsGlobalId;
        SupportsRollbackOnFailure = supportsRollbackOnFailure;
        SupportsUpdateByAnonymous = supportsUpdateByAnonymous;
        SupportsUpdateByOthers = supportsUpdateByOthers;
        SupportsUpdateWithoutM = supportsUpdateWithoutM;
        SupportsUploadWithItemId = supportsUploadWithItemId;
#pragma warning restore BL0005    
    }
    
    
#region Public Properties / Blazor Parameters

    /// <summary>
    ///     Indicates if anonymous users can delete features created by others.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsDeleteByAnonymous { get; set; }
    
    /// <summary>
    ///     Indicates if logged in users can delete features created by others.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsDeleteByOthers { get; set; }
    
    /// <summary>
    ///     Indicates if the geometry of the features in the layer can be edited.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsGeometryUpdate { get; set; }
    
    /// <summary>
    ///     Indicates if the `globalId` values provided by the client are used in <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#applyEdits">applyEdits</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsGlobalId { get; set; }
    
    /// <summary>
    ///     Indicates if the `rollbackOnFailureEnabled` parameter can be set to `true` or `false` when editing features.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsRollbackOnFailure { get; set; }
    
    /// <summary>
    ///     Indicates if anonymous users can update features created by others.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsUpdateByAnonymous { get; set; }
    
    /// <summary>
    ///     Indicates if logged in users can update features created by others.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsUpdateByOthers { get; set; }
    
    /// <summary>
    ///     Indicates if `m-values` must be provided when updating features.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsUpdateWithoutM { get; set; }
    
    /// <summary>
    ///     Indicates if the layer supports uploading attachments by <a target="_blank" href="https://developers.arcgis.com/rest/services-reference/item.htm">UploadId</a>.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? SupportsUploadWithItemId { get; set; }
    
#endregion

#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsDeleteByAnonymous property.
    /// </summary>
    public async Task<bool?> GetSupportsDeleteByAnonymous()
    {
        if (CoreJsModule is null)
        {
            return SupportsDeleteByAnonymous;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsDeleteByAnonymous;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsDeleteByAnonymous");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsDeleteByAnonymous = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsDeleteByAnonymous)] = SupportsDeleteByAnonymous;
        }
         
        return SupportsDeleteByAnonymous;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsDeleteByOthers property.
    /// </summary>
    public async Task<bool?> GetSupportsDeleteByOthers()
    {
        if (CoreJsModule is null)
        {
            return SupportsDeleteByOthers;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsDeleteByOthers;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsDeleteByOthers");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsDeleteByOthers = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsDeleteByOthers)] = SupportsDeleteByOthers;
        }
         
        return SupportsDeleteByOthers;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsGeometryUpdate property.
    /// </summary>
    public async Task<bool?> GetSupportsGeometryUpdate()
    {
        if (CoreJsModule is null)
        {
            return SupportsGeometryUpdate;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsGeometryUpdate;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsGeometryUpdate");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsGeometryUpdate = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsGeometryUpdate)] = SupportsGeometryUpdate;
        }
         
        return SupportsGeometryUpdate;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsGlobalId property.
    /// </summary>
    public async Task<bool?> GetSupportsGlobalId()
    {
        if (CoreJsModule is null)
        {
            return SupportsGlobalId;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsGlobalId;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsGlobalId");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsGlobalId = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsGlobalId)] = SupportsGlobalId;
        }
         
        return SupportsGlobalId;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsRollbackOnFailure property.
    /// </summary>
    public async Task<bool?> GetSupportsRollbackOnFailure()
    {
        if (CoreJsModule is null)
        {
            return SupportsRollbackOnFailure;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsRollbackOnFailure;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsRollbackOnFailure");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsRollbackOnFailure = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsRollbackOnFailure)] = SupportsRollbackOnFailure;
        }
         
        return SupportsRollbackOnFailure;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsUpdateByAnonymous property.
    /// </summary>
    public async Task<bool?> GetSupportsUpdateByAnonymous()
    {
        if (CoreJsModule is null)
        {
            return SupportsUpdateByAnonymous;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsUpdateByAnonymous;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsUpdateByAnonymous");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsUpdateByAnonymous = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsUpdateByAnonymous)] = SupportsUpdateByAnonymous;
        }
         
        return SupportsUpdateByAnonymous;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsUpdateByOthers property.
    /// </summary>
    public async Task<bool?> GetSupportsUpdateByOthers()
    {
        if (CoreJsModule is null)
        {
            return SupportsUpdateByOthers;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsUpdateByOthers;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsUpdateByOthers");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsUpdateByOthers = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsUpdateByOthers)] = SupportsUpdateByOthers;
        }
         
        return SupportsUpdateByOthers;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsUpdateWithoutM property.
    /// </summary>
    public async Task<bool?> GetSupportsUpdateWithoutM()
    {
        if (CoreJsModule is null)
        {
            return SupportsUpdateWithoutM;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsUpdateWithoutM;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsUpdateWithoutM");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsUpdateWithoutM = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsUpdateWithoutM)] = SupportsUpdateWithoutM;
        }
         
        return SupportsUpdateWithoutM;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the SupportsUploadWithItemId property.
    /// </summary>
    public async Task<bool?> GetSupportsUploadWithItemId()
    {
        if (CoreJsModule is null)
        {
            return SupportsUploadWithItemId;
        }
        
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
        
        if (JsComponentReference is null)
        {
            return SupportsUploadWithItemId;
        }

        // get the property value
        JsNullableBoolWrapper? result = await CoreJsModule!.InvokeAsync<JsNullableBoolWrapper?>("getNullableValueTypedProperty",
            CancellationTokenSource.Token, JsComponentReference, "supportsUploadWithItemId");
        if (result is { Value: not null })
        {
#pragma warning disable BL0005
             SupportsUploadWithItemId = result.Value.Value;
#pragma warning restore BL0005
             ModifiedParameters[nameof(SupportsUploadWithItemId)] = SupportsUploadWithItemId;
        }
         
        return SupportsUploadWithItemId;
    }
    
#endregion

#region Property Setters

    /// <summary>
    ///    Asynchronously set the value of the SupportsDeleteByAnonymous property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsDeleteByAnonymous(bool? value)
    {
#pragma warning disable BL0005
        SupportsDeleteByAnonymous = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsDeleteByAnonymous)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsDeleteByAnonymous", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsDeleteByOthers property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsDeleteByOthers(bool? value)
    {
#pragma warning disable BL0005
        SupportsDeleteByOthers = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsDeleteByOthers)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsDeleteByOthers", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsGeometryUpdate property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsGeometryUpdate(bool? value)
    {
#pragma warning disable BL0005
        SupportsGeometryUpdate = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsGeometryUpdate)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsGeometryUpdate", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsGlobalId property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsGlobalId(bool? value)
    {
#pragma warning disable BL0005
        SupportsGlobalId = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsGlobalId)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsGlobalId", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsRollbackOnFailure property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsRollbackOnFailure(bool? value)
    {
#pragma warning disable BL0005
        SupportsRollbackOnFailure = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsRollbackOnFailure)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsRollbackOnFailure", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsUpdateByAnonymous property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsUpdateByAnonymous(bool? value)
    {
#pragma warning disable BL0005
        SupportsUpdateByAnonymous = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsUpdateByAnonymous)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsUpdateByAnonymous", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsUpdateByOthers property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsUpdateByOthers(bool? value)
    {
#pragma warning disable BL0005
        SupportsUpdateByOthers = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsUpdateByOthers)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsUpdateByOthers", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsUpdateWithoutM property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsUpdateWithoutM(bool? value)
    {
#pragma warning disable BL0005
        SupportsUpdateWithoutM = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsUpdateWithoutM)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsUpdateWithoutM", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the SupportsUploadWithItemId property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetSupportsUploadWithItemId(bool? value)
    {
#pragma warning disable BL0005
        SupportsUploadWithItemId = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(SupportsUploadWithItemId)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        try 
        {
            JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
                "getJsComponent", CancellationTokenSource.Token, Id);
        }
        catch (JSException)
        {
            // this is expected if the component is not yet built
        }
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "supportsUploadWithItemId", value);
    }
    
#endregion

}
