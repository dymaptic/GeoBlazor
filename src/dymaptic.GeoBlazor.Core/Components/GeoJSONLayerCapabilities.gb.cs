// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Components;


/// <summary>
///    Describes the layer's supported capabilities.
///    <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
public partial class GeoJSONLayerCapabilities : MapComponent
{

    /// <summary>
    ///     Parameterless constructor for use as a Razor Component.
    /// </summary>
    [ActivatorUtilitiesConstructor]
    public GeoJSONLayerCapabilities()
    {
    }

    /// <summary>
    ///     Constructor for use in C# code. Use named parameters (e.g., item1: value1, item2: value2) to set properties in any order.
    /// </summary>
    /// <param name="data">
    ///     Describes characteristics of the data in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="editing">
    ///     Describes editing capabilities that can be performed on the features in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="operations">
    ///     Describes operations that can be performed on features in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="query">
    ///     Describes <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-Query.html">query</a> operations that can be performed on features in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    /// <param name="queryRelated">
    ///     Indicates if the layer's query operation supports querying features or records related to features in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </param>
    public GeoJSONLayerCapabilities(
        GeoJSONLayerCapabilitiesData? data = null,
        GeoJSONLayerCapabilitiesEditing? editing = null,
        GeoJSONLayerCapabilitiesOperations? operations = null,
        GeoJSONLayerCapabilitiesQuery? query = null,
        GeoJSONLayerCapabilitiesQueryRelated? queryRelated = null)
    {
        AllowRender = false;
#pragma warning disable BL0005
        Data = data;
        Editing = editing;
        Operations = operations;
        Query = query;
        QueryRelated = queryRelated;
#pragma warning restore BL0005    
    }
    
    
#region Public Properties / Blazor Parameters

    /// <summary>
    ///     Describes characteristics of the data in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public GeoJSONLayerCapabilitiesData? Data { get; set; }
    
    /// <summary>
    ///     Describes editing capabilities that can be performed on the features in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public GeoJSONLayerCapabilitiesEditing? Editing { get; set; }
    
    /// <summary>
    ///     Describes operations that can be performed on features in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public GeoJSONLayerCapabilitiesOperations? Operations { get; set; }
    
    /// <summary>
    ///     Describes <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-Query.html">query</a> operations that can be performed on features in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public GeoJSONLayerCapabilitiesQuery? Query { get; set; }
    
    /// <summary>
    ///     Indicates if the layer's query operation supports querying features or records related to features in the layer.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html#capabilities">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [Parameter]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public GeoJSONLayerCapabilitiesQueryRelated? QueryRelated { get; set; }
    
#endregion

#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the Data property.
    /// </summary>
    public async Task<GeoJSONLayerCapabilitiesData?> GetData()
    {
        if (CoreJsModule is null)
        {
            return Data;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return Data;
        }

        // get the property value
#pragma warning disable BL0005
        Data = await CoreJsModule!.InvokeAsync<GeoJSONLayerCapabilitiesData?>("getProperty",
            CancellationTokenSource.Token, JsComponentReference, "data");
#pragma warning restore BL0005
         ModifiedParameters[nameof(Data)] = Data;
        return Data;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the Editing property.
    /// </summary>
    public async Task<GeoJSONLayerCapabilitiesEditing?> GetEditing()
    {
        if (CoreJsModule is null)
        {
            return Editing;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return Editing;
        }

        // get the property value
#pragma warning disable BL0005
        Editing = await CoreJsModule!.InvokeAsync<GeoJSONLayerCapabilitiesEditing?>("getProperty",
            CancellationTokenSource.Token, JsComponentReference, "editing");
#pragma warning restore BL0005
         ModifiedParameters[nameof(Editing)] = Editing;
        return Editing;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the Operations property.
    /// </summary>
    public async Task<GeoJSONLayerCapabilitiesOperations?> GetOperations()
    {
        if (CoreJsModule is null)
        {
            return Operations;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return Operations;
        }

        // get the property value
#pragma warning disable BL0005
        Operations = await CoreJsModule!.InvokeAsync<GeoJSONLayerCapabilitiesOperations?>("getProperty",
            CancellationTokenSource.Token, JsComponentReference, "operations");
#pragma warning restore BL0005
         ModifiedParameters[nameof(Operations)] = Operations;
        return Operations;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the Query property.
    /// </summary>
    public async Task<GeoJSONLayerCapabilitiesQuery?> GetQuery()
    {
        if (CoreJsModule is null)
        {
            return Query;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return Query;
        }

        // get the property value
#pragma warning disable BL0005
        Query = await CoreJsModule!.InvokeAsync<GeoJSONLayerCapabilitiesQuery?>("getProperty",
            CancellationTokenSource.Token, JsComponentReference, "query");
#pragma warning restore BL0005
         ModifiedParameters[nameof(Query)] = Query;
        return Query;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the QueryRelated property.
    /// </summary>
    public async Task<GeoJSONLayerCapabilitiesQueryRelated?> GetQueryRelated()
    {
        if (CoreJsModule is null)
        {
            return QueryRelated;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return QueryRelated;
        }

        // get the property value
#pragma warning disable BL0005
        QueryRelated = await CoreJsModule!.InvokeAsync<GeoJSONLayerCapabilitiesQueryRelated?>("getProperty",
            CancellationTokenSource.Token, JsComponentReference, "queryRelated");
#pragma warning restore BL0005
         ModifiedParameters[nameof(QueryRelated)] = QueryRelated;
        return QueryRelated;
    }
    
#endregion

#region Property Setters

    /// <summary>
    ///    Asynchronously set the value of the Data property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetData(GeoJSONLayerCapabilitiesData value)
    {
#pragma warning disable BL0005
        Data = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(Data)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "data", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the Editing property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetEditing(GeoJSONLayerCapabilitiesEditing value)
    {
#pragma warning disable BL0005
        Editing = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(Editing)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "editing", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the Operations property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetOperations(GeoJSONLayerCapabilitiesOperations value)
    {
#pragma warning disable BL0005
        Operations = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(Operations)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "operations", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the Query property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetQuery(GeoJSONLayerCapabilitiesQuery value)
    {
#pragma warning disable BL0005
        Query = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(Query)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "query", value);
    }
    
    /// <summary>
    ///    Asynchronously set the value of the QueryRelated property after render.
    /// </summary>
    /// <param name="value">
    ///     The value to set.
    /// </param>
    public async Task SetQueryRelated(GeoJSONLayerCapabilitiesQueryRelated value)
    {
#pragma warning disable BL0005
        QueryRelated = value;
#pragma warning restore BL0005
        ModifiedParameters[nameof(QueryRelated)] = value;
        
        if (CoreJsModule is null)
        {
            return;
        }
    
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference>("getJsComponent",
            CancellationTokenSource.Token, Id);
    
        if (JsComponentReference is null)
        {
            return;
        }
        
        await CoreJsModule.InvokeVoidAsync("setProperty", CancellationTokenSource.Token,
            JsComponentReference, "queryRelated", value);
    }
    
#endregion





    protected override async ValueTask<bool> RegisterGeneratedChildComponent(MapComponent child)
    {
        switch (child)
        {
            case GeoJSONLayerCapabilitiesData data:
                if (data != Data)
                {
                    Data = data;
                    
                    ModifiedParameters[nameof(Data)] = Data;
                }
                
                return true;
            case GeoJSONLayerCapabilitiesEditing editing:
                if (editing != Editing)
                {
                    Editing = editing;
                    
                    ModifiedParameters[nameof(Editing)] = Editing;
                }
                
                return true;
            case GeoJSONLayerCapabilitiesOperations operations:
                if (operations != Operations)
                {
                    Operations = operations;
                    
                    ModifiedParameters[nameof(Operations)] = Operations;
                }
                
                return true;
            case GeoJSONLayerCapabilitiesQueryRelated queryRelated:
                if (queryRelated != QueryRelated)
                {
                    QueryRelated = queryRelated;
                    
                    ModifiedParameters[nameof(QueryRelated)] = QueryRelated;
                }
                
                return true;
            default:
                return await base.RegisterGeneratedChildComponent(child);
        }
    }

    protected override async ValueTask<bool> UnregisterGeneratedChildComponent(MapComponent child)
    {
        switch (child)
        {
            case GeoJSONLayerCapabilitiesData _:
                Data = null;
                
                ModifiedParameters[nameof(Data)] = Data;
                return true;
            case GeoJSONLayerCapabilitiesEditing _:
                Editing = null;
                
                ModifiedParameters[nameof(Editing)] = Editing;
                return true;
            case GeoJSONLayerCapabilitiesOperations _:
                Operations = null;
                
                ModifiedParameters[nameof(Operations)] = Operations;
                return true;
            case GeoJSONLayerCapabilitiesQueryRelated _:
                QueryRelated = null;
                
                ModifiedParameters[nameof(QueryRelated)] = QueryRelated;
                return true;
            default:
                return await base.UnregisterGeneratedChildComponent(child);
        }
    }
    
    /// <inheritdoc />
    internal override void ValidateRequiredGeneratedChildren()
    {
    
        Data?.ValidateRequiredGeneratedChildren();
        Editing?.ValidateRequiredGeneratedChildren();
        Operations?.ValidateRequiredGeneratedChildren();
        QueryRelated?.ValidateRequiredGeneratedChildren();
        base.ValidateRequiredGeneratedChildren();
    }
      
}
