// File auto-generated by dymaptic tooling. Any changes made here will be lost on future generation. To override functionality, use the relevant root .cs file.

namespace dymaptic.GeoBlazor.Core.Components;


/// <summary>
///    The `GeometryFieldsInfo` class returns information about the system maintained geometry information associated with a specific feature in a <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html">FeatureLayer</a>.
///    <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-GeometryFieldsInfo.html">ArcGIS Maps SDK for JavaScript</a>
/// </summary>
public partial class GeometryFieldsInfo : MapComponent
{

    /// <summary>
    ///     Parameterless constructor for use as a Razor Component.
    /// </summary>
    [ActivatorUtilitiesConstructor]
    public GeometryFieldsInfo()
    {
    }

#region Public Properties / Blazor Parameters

    /// <summary>
    ///     The name of the field that stores the feature's area, e.g.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-GeometryFieldsInfo.html#shapeAreaField">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public string? ShapeAreaField { get; protected set; }
    
    /// <summary>
    ///     The name of the field that stores the feature's length, e.g.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-GeometryFieldsInfo.html#shapeLengthField">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public string? ShapeLengthField { get; protected set; }
    
    /// <summary>
    ///     The units of measure for the area and length field values.
    ///     <a target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-GeometryFieldsInfo.html#units">ArcGIS Maps SDK for JavaScript</a>
    /// </summary>
    [ArcGISProperty]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public string? Units { get; protected set; }
    
#endregion

#region Property Getters

    /// <summary>
    ///     Asynchronously retrieve the current value of the ShapeAreaField property.
    /// </summary>
    public async Task<string?> GetShapeAreaField()
    {
        if (CoreJsModule is null)
        {
            return ShapeAreaField;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return ShapeAreaField;
        }

        // get the property value
#pragma warning disable BL0005
        ShapeAreaField = await CoreJsModule!.InvokeAsync<string?>("getProperty",
            CancellationTokenSource.Token, JsComponentReference, "shapeAreaField");
#pragma warning restore BL0005
         ModifiedParameters[nameof(ShapeAreaField)] = ShapeAreaField;
        return ShapeAreaField;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the ShapeLengthField property.
    /// </summary>
    public async Task<string?> GetShapeLengthField()
    {
        if (CoreJsModule is null)
        {
            return ShapeLengthField;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return ShapeLengthField;
        }

        // get the property value
#pragma warning disable BL0005
        ShapeLengthField = await CoreJsModule!.InvokeAsync<string?>("getProperty",
            CancellationTokenSource.Token, JsComponentReference, "shapeLengthField");
#pragma warning restore BL0005
         ModifiedParameters[nameof(ShapeLengthField)] = ShapeLengthField;
        return ShapeLengthField;
    }
    
    /// <summary>
    ///     Asynchronously retrieve the current value of the Units property.
    /// </summary>
    public async Task<string?> GetUnits()
    {
        if (CoreJsModule is null)
        {
            return Units;
        }
        JsComponentReference ??= await CoreJsModule.InvokeAsync<IJSObjectReference?>(
            "getJsComponent", CancellationTokenSource.Token, Id);
        if (JsComponentReference is null)
        {
            return Units;
        }

        // get the property value
#pragma warning disable BL0005
        Units = await CoreJsModule!.InvokeAsync<string?>("getProperty",
            CancellationTokenSource.Token, JsComponentReference, "units");
#pragma warning restore BL0005
         ModifiedParameters[nameof(Units)] = Units;
        return Units;
    }
    
#endregion




}
