@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")"
                        OutFields="@(["rerum",
                            "est",
                            "consectetur",
                            "voluptas"])"
                        DefinitionExpression="@("esse")"
                        MinScale="@(43890.5639)"
                        MaxScale="@(4376978.7138)"
                        ObjectIdField="@("quos")"
                        GeometryType="@(FeatureGeometryType.Multipoint)"
                        Title="@("enim commodi dolorem")"
                        Opacity="@(0.1198)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        ApiKey="@("rem")"
                        BlendMode="@(BlendMode.Minus)"
                        Charts="@(["sed",
                            "accusamus",
                            "reprehenderit"])"
                        Copyright="@("eum")"
                        DateFieldsTimeZone="@("tenetur")"
                        DisplayField="@("reprehenderit")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("doloremque",
                            21729085.8373))"
                        FullExtent="@(new Extent(-72.9590,
                                -120.2727,
                                82.6973,
                                57.2216,
                                460.6464,
                                410.8900,
                                937.7115,
                                492.2141,
                            new SpatialReference(9,
                                    "voluptatem",
                                    "unde",
                                    "eaque"),
                                true,
                                true))"
                        GdbVersion="@("8.6.4.9")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2003, 6, 14, 10, 39, 17))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(528.4902)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        SpatialReference="@(new SpatialReference(9,
                                "autem",
                                "enim",
                                "reiciendis"))"
                        TypeIdField="@("est")"
                        Types="@([new FeatureType("62b2b608-cdfd-c043-020e-d458f9fcdbf1",
                                "password",
                            [new FeatureTemplate("molestiae aut cumque quam error similique ut",
                                DrawingTool.DownArrow,
                                    "avatar",
                                new Graphic(new Extent(122.1862,
                                            24.4241,
                                            -57.6670,
                                            27.3294,
                                            435.3974,
                                            137.4529,
                                            264.0480,
                                            442.6919,
                                        new SpatialReference(8,
                                                "non",
                                                "corporis",
                                                "eos"),
                                            true,
                                            true),
                                    new TextSymbol("praesentium quo delectus",
                                        new MapColor(152, 73, 245),
                                        new MapColor(160, 1, 81),
                                            new Dimension(634.9284),
                                        new MapFont(new Dimension(909.4544),
                                                "Garamond",
                                            MapFontStyle.Italic,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            709.7169,
                                        new MapColor(224, 154, 8),
                                        new MapColor(110, 87, 50),
                                            277.7986,
                                        HorizontalAlignment.Right,
                                            true,
                                            219.1362,
                                            new Dimension(503.9197),
                                            true),
                                    new PopupTemplate("velit ut rem",
                                            "sunt",
                                            ["molestiae",
                                                "ut",
                                                "dolorem",
                                                "provident"],
                                        [new FieldInfo("status",
                                                "veritatis",
                                                "inventore",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongDate),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("avatar",
                                                "harum",
                                                "itaque",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("comment",
                                                "molestiae",
                                                "molestias",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.DayShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("phone",
                                                "repellendus",
                                                "qui",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Avg)],
                                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                                    "dolorem",
                                                    "consectetur suscipit iste")),
                                        new FieldsPopupContent([new FieldInfo("phone",
                                                    "ut",
                                                    "dolores",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.Year),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("email",
                                                    "quo",
                                                    "autem",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("phone",
                                                    "quo",
                                                    "explicabo",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("id",
                                                    "voluptatem",
                                                    "a",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortDate),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                                "necessitatibus vel dolores aliquid",
                                                "error illo sequi"),
                                        new FieldsPopupContent([new FieldInfo("id",
                                                    "sit",
                                                    "nesciunt",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("status",
                                                    "fuga",
                                                    "nisi",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("status",
                                                    "non",
                                                    "hic",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Min)],
                                                "qui nihil quis voluptas esse",
                                                "adipisci dignissimos recusandae"),
                                        new TextPopupContent("voluptate ab modi")],
                                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "status",
                                                "esse reprehenderit tenetur",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "avatar",
                                                "sunt qui id",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionToggle("quia labore voluptas",
                                                "606bbc43-37c3-7dd0-e4d6-1011c51a493f",
                                                () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "title",
                                                "beatae"),
                                        new ActionButton("culpa repellat illum",
                                                "https://picsum.photos/640/480/?image=977",
                                                "117f4cf7-ba8e-a435-8bcc-e23aa5588793",
                                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                                "title",
                                                true,
                                                true,
                                                true,
                                                "fuga"),
                                        new ActionToggle("enim hic magni",
                                                "d263e67f-d9b8-8e8d-05cb-196f864d3570",
                                                () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "token",
                                                "ipsam")]),
                                        new AttributesDictionary(),
                                        true,
                                        "quos",
                                        "accusamus",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "repellendus",
                                            9)),
                                    new Thumbnail("quidem",
                                        "assumenda",
                                        98.0748,
                                        38.6809))],
                            new Dictionary<string, Domain>() {{ "debitis", new RangeDomain("voluptas",
        "eligendi",
        "updatedAt") },
                            { "eligendi", new InheritedDomain("title") }
                            },
                                "et")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Centuries)"
                            Value="@(180.5325)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("fuga")"
                            EndField="@("ratione")"
                            Stops="@([new DateTime(2015, 9, 14, 17, 47, 38),
                                new DateTime(2009, 10, 23, 11, 3, 38),
                                new DateTime(2007, 10, 12, 20, 22, 42)])"
                            TimeZone="@("America/Mazatlan")"
                            TrackIdField="@("nobis")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Weeks)"
                                Value="@(466.2844)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2000, 1, 24, 19, 49, 16))"
                                End="@(new DateTime(2001, 7, 16, 18, 20, 49))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2012, 1, 10, 10, 3, 47))"
                            End="@(new DateTime(2015, 6, 20, 15, 57, 9))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("et eaque et tempora")"
                            DrawingTool="@(DrawingTool.Ellipse)"
                            Name="@("email")"
                            Thumbnail="@(new Thumbnail("eaque",
                                "mollitia",
                                16.9409,
                                165.6719))">
                            <Graphic 
                                Geometry="@(new Point(-20.9214,
                                        40.2717,
                                        -14.7658,
                                        -46.8319,
                                        619.7298,
                                    new SpatialReference(3,
                                            "nesciunt",
                                            "qui",
                                            "consequatur"),
                                        true,
                                        true,
                                        385.4363))"
                                Symbol="@(new TextSymbol("qui ut adipisci",
                                    new MapColor(172, 145, 55),
                                    new MapColor(137, 129, 44),
                                        new Dimension(747.7681),
                                    new MapFont(new Dimension(9.7095),
                                            "Verdana",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.LineThrough),
                                        281.5268,
                                    new MapColor(153, 38, 224),
                                    new MapColor(54, 143, 31),
                                        451.4415,
                                    HorizontalAlignment.Right,
                                        true,
                                        984.0436,
                                        new Dimension(868.7044),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("provident eum nihil",
                                        "neque",
                                        ["delectus",
                                            "animi",
                                            "numquam",
                                            "cumque"],
                                    [new FieldInfo("phone",
                                            "autem",
                                            "quia",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("avatar",
                                            "natus",
                                            "facilis",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("id",
                                            "eveniet",
                                            "corporis",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Count)],
                                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                                "odit",
                                                "non itaque ullam")),
                                    new RelationshipPopupContent("debitis repudiandae ex",
                                            "explicabo nam dolores veniam corporis",
                                            1,
                                            "magni",
                                        [new RelatedRecordsInfoFieldOrder("sunt",
                                            OrderBy.Asc)],
                                            9),
                                    new RelationshipPopupContent("eos sit ut",
                                            "quia libero aut commodi culpa minus",
                                            8,
                                            "sunt",
                                        [new RelatedRecordsInfoFieldOrder("est",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("ut",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("facilis",
                                            OrderBy.Desc)],
                                            1),
                                    new AttachmentsPopupContent("porro perferendis sed",
                                            "optio soluta possimus dignissimos",
                                            AttachmentsPopupContentDisplayType.Preview)],
                                    [new ExpressionInfo("return $feature['FieldName'];",
                                            "email",
                                            "mollitia dolor numquam",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "phone",
                                            "et cum animi",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "title",
                                            "hic dolor dolorum",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("tempora placeat sint",
                                            "https://picsum.photos/640/480/?image=61",
                                            "ec3a7f61-9078-f704-1ec8-0e31496b4c6a",
                                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                            "phone",
                                            true,
                                            true,
                                            true,
                                            "voluptatem")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("saepe")"
                                AggregateGeometries="@("quas")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "repellendus",
                                    9))">
                            </Graphic>
                        </FeatureTemplate>
                        <Graphic 
                            Geometry="@(new Polyline([new MapPath([new MapPoint([469.9834,
                                        471.9252,
                                        410.2327]),
                                    new MapPoint([255.1331,
                                        568.1386,
                                        670.1866]),
                                    new MapPoint([354.8532,
                                        782.5539,
                                        909.1092]),
                                    new MapPoint([159.9615,
                                        494.7346,
                                        557.3088])]),
                                    new MapPath([new MapPoint([635.7659,
                                            136.4103,
                                            464.3991,
                                            54.3729]),
                                        new MapPoint([214.8702,
                                            77.9646,
                                            230.7290,
                                            848.1793]),
                                        new MapPoint([937.8133,
                                            111.7543,
                                            365.6368,
                                            478.4557]),
                                        new MapPoint([835.2461,
                                            454.6531,
                                            125.7213])]),
                                    new MapPath([new MapPoint([310.3547,
                                            757.8087]),
                                        new MapPoint([254.1333,
                                            206.3531,
                                            423.3657]),
                                        new MapPoint([463.7278,
                                            656.8338])]),
                                    new MapPath([new MapPoint([224.5183,
                                            132.6797,
                                            41.5332]),
                                        new MapPoint([918.0499,
                                            447.8749,
                                            488.5046])])],
                                new SpatialReference(4,
                                        "quis",
                                        "sed",
                                        "et"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("atque repellat non",
                                new MapColor(21, 207, 200),
                                new MapColor(188, 11, 34),
                                    new Dimension(785.0635),
                                new MapFont(new Dimension(919.8762),
                                        "Garamond",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.None),
                                    954.7486,
                                new MapColor(181, 114, 43),
                                new MapColor(148, 92, 176),
                                    569.5181,
                                HorizontalAlignment.Left,
                                    true,
                                    592.2922,
                                    new Dimension(911.1754),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("voluptas")"
                            AggregateGeometries="@("labore")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "possimus",
                                4))">
                            <PopupTemplate 
                                Title="@("neque dolorum aut")"
                                StringContent="@("consequatur")"
                                OutFields="@(["odit",
                                    "dolor"])"
                                FieldInfos="@([new FieldInfo("phone",
                                        "qui",
                                        "non",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLeLongTime24),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("phone",
                                        "vero",
                                        "asperiores",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.ShortDateLe),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("title",
                                        "veniam",
                                        "blanditiis",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateLe),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("status",
                                        "vel",
                                        "quas",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Sum)])"
                                Content="@([new RelationshipPopupContent("magnam modi commodi",
                                        "odit deleniti iure quam doloremque",
                                        3,
                                        "possimus",
                                    [new RelatedRecordsInfoFieldOrder("quae",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("est",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("eveniet",
                                        OrderBy.Asc)],
                                        5),
                                new AttachmentsPopupContent("error veniam sed",
                                        "illo molestiae tempore autem",
                                        AttachmentsPopupContentDisplayType.Auto)])"
                                ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "email",
                                        "molestiae sunt magnam",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "id",
                                        "sunt enim quia",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "id",
                                        "sunt laboriosam eum",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "phone",
                                        "amet qui eligendi",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionToggle("necessitatibus vel dolor",
                                        "01c8a058-acfe-e53b-5f6e-1794feff718e",
                                        () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "updatedAt",
                                        "cumque"),
                                new ActionButton("rerum molestiae nulla",
                                        "https://picsum.photos/640/480/?image=485",
                                        "74b17f22-35ef-5a0c-11cb-9d2986ce38c3",
                                        () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                        "avatar",
                                        true,
                                        true,
                                        true,
                                        "minus")])">
                            </PopupTemplate>
                        </Graphic>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(217, 126, 165),
                                        new MapColor(64, 33, 100))]),
                                    871.7020,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(976.8507,
                                            945.0487)],
                                        "sapiente",
                                        "et",
                                        "excepturi"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(291.6598,
                                            981.0145),
                                    new AuthoringInfoField1ClassBreakInfos(526.1231,
                                            240.8773),
                                    new AuthoringInfoField1ClassBreakInfos(977.1211,
                                            125.9001)],
                                        "culpa",
                                        "autem",
                                        "consequatur"),
                                    ["distinctio",
                                        "saepe"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "vel",
                                    true,
                                LengthUnit.Decimeters,
                                    298.4472,
                                    232.6314,
                                    100.7522,
                                    306.6881))">
                        </UniqueValueRenderer>
                        <PopupTemplate 
                            Title="@("error debitis minima")"
                            StringContent="@("odio")"
                            OutFields="@(["quia",
                                "quis"])"
                            FieldInfos="@([new FieldInfo("comment",
                                    "quibusdam",
                                    "natus",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("updatedAt",
                                    "ut",
                                    "autem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("comment",
                                    "quis",
                                    "corporis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Count)])"
                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                        "incidunt",
                                        "sint dolore ut"))])"
                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "comment",
                                    "ad omnis et",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("necessitatibus quam tenetur",
                                    "bedccf11-1f9f-e37e-149d-62f5cfa33123",
                                    () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "updatedAt",
                                    "vel"),
                            new ActionButton("placeat ea tenetur",
                                    "https://picsum.photos/640/480/?image=294",
                                    "3be4128c-2e11-9e83-944d-ffc0f57c0f4c",
                                    () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                    "comment",
                                    true,
                                    true,
                                    true,
                                    "debitis"),
                            new ActionToggle("ex quo hic",
                                    "8c572faa-541b-4ab0-ddda-5979452380fe",
                                    () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "title",
                                    "eligendi")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("inventore")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("modi")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AlwaysHorizontal)"
                            LabelExpression="@("ut")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(5645237.4522)"
                            MinScale="@(32717.2655)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(354.0880))"
                            Symbol="@(new TextSymbol("occaecati eos doloribus",
                                new MapColor(143, 2, 216),
                                new MapColor(123, 232, 1),
                                    new Dimension(154.4961),
                                new MapFont(new Dimension(555.1107),
                                        "Times New Roman",
                                    MapFontStyle.Italic,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    641.7516,
                                new MapColor(210, 15, 177),
                                new MapColor(103, 133, 90),
                                    510.9840,
                                HorizontalAlignment.Center,
                                    true,
                                    176.2965,
                                    new Dimension(115.8635),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Province = 'Ontario'")">
                        </Label>
                        <FormTemplate 
                            Title="@("sunt ducimus minima")"
                            Description="@("eum sint eius velit et")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new FieldElement("group",
                                "odit",
                                "consequuntur cum totam nulla officiis delectus repellendus",
                                "quia",
                                "porro",
                                "autem",
                                "dignissimos",
                                new CodedValueDomain<string>(),
                                new BarcodeScannerInput()),
                                new FieldElement("id",
                                    "occaecati",
                                    "necessitatibus vero quia nisi",
                                    "ducimus",
                                    "hic",
                                    "ut",
                                    "ut",
                                    new CodedValueDomain<string>(),
                                    new BarcodeScannerInput()),
                                new FieldElement("createdAt",
                                    "recusandae",
                                    "officia voluptas omnis iure fuga sed",
                                    "sit",
                                    "culpa",
                                    "deserunt",
                                    "modi",
                                    new CodedValueDomain<string>(),
                                    new BarcodeScannerInput())])"
                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "title",
                                    "assumenda sapiente temporibus",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "group",
                                    "sed non esse",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature['FieldName'];",
                                    "category",
                                    "dolores facere et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "category",
                                    "et quasi atque",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("quo")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("avatar")"
                            Alias="@("eveniet")"
                            Description="@("modi ut veniam aut tempore numquam natus")"
                            Length="@(2)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "voluptate" })"
                            ValueType="@(FieldValueType.None)"
                            Domain="@(new InheritedDomain("avatar"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("rerum",
                                32041533.7127)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(701.6885,
                                new Point(-137.7662,
                                        80.6566,
                                        -92.1615,
                                        -64.3371,
                                        284.6019,
                                    new SpatialReference(5,
                                            "asperiores",
                                            "quo",
                                            "repellendus"),
                                        true,
                                        true,
                                        599.0820),
                                    [3,
                                        8,
                                        1],
                                SpatialRelationship.Contains,
                                new TimeExtent(new DateTime(2022, 9, 27, 10, 2, 46),
                                        new DateTime(2013, 6, 1, 8, 1, 10)),
                                    QueryUnits.Meters,
                                    "Street = '123 Main St.'"))"
                            IncludedEffect="@([new Effect("repellendus",
                                41665135.2365),
                                new Effect("est",
                                    9462589.7651)])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "inventore amet quia"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(898.6017)"
                            Unit="@(ElevationUnit.Miles)">
                        </FeatureLayerBaseElevationInfo>
                        <ElevationLayer 
                            ArcGISLayerId="@("vitae")"
                            FullExtent="@(new Extent(93.7829,
                                    104.0122,
                                    -4.0939,
                                    -14.6111,
                                    89.6329,
                                    529.6879,
                                    520.9011,
                                    982.9643,
                                new SpatialReference(5,
                                        "laudantium",
                                        "minima",
                                        "omnis"),
                                    true,
                                    true))"
                            ListMode="@(ListMode.Hide)"
                            Opacity="@(0.2116)"
                            PersistenceEnabled="@(true)"
                            Title="@("necessitatibus enim laboriosam")">
                            <TimeExtent 
                                Start="@(new DateTime(2023, 2, 20, 9, 57, 28))"
                                End="@(new DateTime(2010, 4, 13, 14, 21, 24))">
                            </TimeExtent>
                        </ElevationLayer>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("quasi",
                    ["exercitationem",
                        "facilis"],
                    true,
                    [7,
                        3,
                        2],
                    ["necessitatibus",
                        "consequatur",
                        "consequuntur",
                        "aperiam"],
                    "phone",
                    469.5645,
                    [1,
                        7],
                    true,
                    [3,
                        3,
                        4,
                        8],
                    651.1923,
                    "1 = 1"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(PortalItemAccess.Private,
                    "adipisci",
                    "nostrum",
                    436.3710,
                    ["neque",
                        "magnam",
                        "earum",
                        "velit"],
                    new DateTime(2016, 7, 26, 0, 34, 18),
                    "et",
                    "laudantium sit sit nobis expedita porro aut",
                new Extent(-167.3017,
                        -49.0461,
                        -62.9596,
                        -50.4555,
                        341.2170,
                        504.2327,
                        649.0620,
                        604.8128,
                    new SpatialReference(4,
                            "eos",
                            "inventore",
                            "nemo"),
                        true,
                        true),
                    ["aut",
                        "quia",
                        "quasi",
                        "asperiores"],
                    "animi",
                    new DateTime(2005, 8, 17, 8, 27, 43),
                    "title",
                    841.7630),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2000, 4, 10, 11, 26, 53),
                        "blanditiis",
                        "sit incidunt consequatur"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Polyline([new MapPath([new MapPoint([90.9691,
                            276.9594,
                            383.0062]),
                        new MapPoint([516.4067,
                            667.0050]),
                        new MapPoint([219.1618,
                            892.6767,
                            189.3914,
                            845.1056])])],
                    new SpatialReference(7,
                            "sequi",
                            "placeat",
                            "eos"),
                        true,
                        true),
                new TextSymbol("et laborum esse",
                    new MapColor(140, 31, 223),
                    new MapColor(237, 84, 211),
                        new Dimension(699.9435),
                    new MapFont(new Dimension(510.7735),
                            "Helvetica",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        927.7448,
                    new MapColor(134, 80, 51),
                    new MapColor(182, 121, 26),
                        40.6307,
                    HorizontalAlignment.Left,
                        true,
                        411.5701,
                        new Dimension(220.3380),
                        true),
                new PopupTemplate("accusantium qui nisi",
                        "cum",
                        ["ut",
                            "autem",
                            "incidunt"],
                    [new FieldInfo("id",
                            "nihil",
                            "et",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new RelationshipPopupContent("culpa ab molestiae",
                            "cumque ab ut facilis ea ut",
                            8,
                            "ea",
                        [new RelatedRecordsInfoFieldOrder("nulla",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("quidem",
                            OrderBy.Desc)],
                            5),
                    new TextPopupContent("possimus quidem sit"),
                    new MediaPopupContent("dolores libero ex",
                            "minima rerum aut sit error nostrum provident",
                        [new PieChartMediaInfo("sit nobis ea",
                                "culpa",
                                "nobis eum corrupti",
                            new ChartMediaInfoValue(["nemo",
                                    "veniam",
                                    "impedit",
                                    "eveniet"],
                                    "ea",
                                    "nostrum",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "sint",
                                        679.0810),
                                new ChartMediaInfoValueSeries("password",
                                        "doloremque",
                                        336.8431),
                                new ChartMediaInfoValueSeries("group",
                                        "quos",
                                        44.8929),
                                new ChartMediaInfoValueSeries("phone",
                                        "et",
                                        537.4003)],
                                [new MapColor(160, 97, 99),
                                new MapColor(58, 94, 176),
                                new MapColor(111, 225, 50),
                                new MapColor(219, 227, 125)]))],
                            2)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "id",
                            "est officia magni",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "token",
                            "tempore et facere",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("molestias assumenda aut",
                            "818de7a0-204b-9662-8917-32f8c90938ae",
                            () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "iure"),
                    new ActionToggle("ipsum non sunt",
                            "4db8a92a-5798-0cb3-45a7-e8cb4e5bebb3",
                            () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "nihil"),
                    new ActionToggle("quia dolorum accusantium",
                            "dd0fb5d4-3745-0ede-6d29-261fc932eea5",
                            () => { Console.WriteLine("amet"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "illum"),
                    new ActionButton("sit nisi at",
                            "https://picsum.photos/640/480/?image=1051",
                            "f759b0ed-a87f-bd7e-1b62-060a73eed1c3",
                            () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "dicta")]),
                    new AttributesDictionary(),
                    true,
                    "minus",
                    "voluptas",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ut",
                        2)),
                6,
            default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Public,
                    "mollitia",
                    "tempora",
                    16.1787,
                    ["et",
                        "incidunt"],
                    new DateTime(2001, 1, 14, 17, 16, 38),
                    "dolor",
                    "aliquam natus voluptatem aut",
                new Extent(88.5395,
                        -51.4014,
                        66.1520,
                        74.4974,
                        913.4251,
                        837.5496,
                        95.2417,
                        688.7340,
                    new SpatialReference(1,
                            "quisquam",
                            "excepturi",
                            "mollitia"),
                        true,
                        true),
                    ["qui",
                        "doloribus",
                        "sint"],
                    "asperiores",
                    new DateTime(2012, 1, 5, 14, 45, 8),
                    "phone",
                    657.5656);
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Graphic> testSource = [new Graphic(new Polygon([new MapPath([new MapPoint([543.8935,
                            805.1254]),
                        new MapPoint([252.4751,
                            678.3864])]),
                        new MapPath([new MapPoint([192.8459,
                                679.7185,
                                387.2532,
                                88.3530]),
                            new MapPoint([428.5988,
                                395.4373,
                                91.5039])])],
                    new SpatialReference(1,
                            "exercitationem",
                            "sint",
                            "saepe"),
                    new Point(94.4386,
                            -87.5213,
                            15.3890,
                            -58.1480,
                            589.9357,
                        new SpatialReference(2,
                                "et",
                                "esse",
                                "et"),
                            true,
                            true,
                            888.2138),
                        true,
                        true,
                        true),
                new TextSymbol("vitae qui qui",
                    new MapColor(191, 80, 170),
                    new MapColor(189, 142, 50),
                        new Dimension(213.7777),
                    new MapFont(new Dimension(156.7749),
                            "Garamond",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.LineThrough),
                        21.6070,
                    new MapColor(112, 156, 87),
                    new MapColor(13, 123, 175),
                        801.7992,
                    HorizontalAlignment.Center,
                        true,
                        123.5883,
                        new Dimension(630.6107),
                        true),
                new PopupTemplate("dolorem nulla consequatur",
                        "veniam",
                        ["voluptas",
                            "ea",
                            "minima",
                            "saepe"],
                    [new FieldInfo("email",
                            "consequuntur",
                            "amet",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("title",
                            "qui",
                            "alias",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new RelationshipPopupContent("iste est nam",
                            "dicta accusantium dolorem autem veritatis",
                            9,
                            "illo",
                        [new RelatedRecordsInfoFieldOrder("ut",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("corporis",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("omnis",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("et",
                            OrderBy.Asc)],
                            2)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "id",
                            "illum eligendi eligendi",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "comment",
                            "excepturi vel blanditiis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "name",
                            "sed neque eos",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("velit tempore non",
                            "ed70b463-0e88-c1f2-9840-1130ddbbdbac",
                            () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "porro"),
                    new ActionButton("mollitia quaerat eius",
                            "https://picsum.photos/640/480/?image=433",
                            "686615cc-4171-1bf0-e519-ffc20c043f45",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "pariatur")]),
                    new AttributesDictionary(),
                    true,
                    "laboriosam",
                    "repellendus",
                    new GraphicOrigin(Guid.NewGuid(),
                        "qui",
                        8)),
            new Graphic(new Extent(157.0945,
                        12.7701,
                        -10.8887,
                        -87.8302,
                        757.4804,
                        504.7460,
                        834.1180,
                        676.9569,
                    new SpatialReference(9,
                            "maiores",
                            "veniam",
                            "molestias"),
                        true,
                        true),
                new TextSymbol("doloribus non unde",
                    new MapColor(23, 33, 43),
                    new MapColor(55, 252, 78),
                        new Dimension(942.7981),
                    new MapFont(new Dimension(602.4088),
                            "Verdana",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.None),
                        645.9455,
                    new MapColor(129, 182, 110),
                    new MapColor(61, 167, 104),
                        427.4649,
                    HorizontalAlignment.Center,
                        true,
                        977.9904,
                        new Dimension(323.3085),
                        true),
                new PopupTemplate("debitis ad vel",
                        "soluta",
                        ["et",
                            "harum"],
                    [new FieldInfo("comment",
                            "qui",
                            "ducimus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new MediaPopupContent("quia ut ipsam",
                            "ad provident qui vel possimus",
                        [new LineChartMediaInfo("doloremque expedita libero",
                                "voluptatem",
                                "dicta eius odio",
                            new ChartMediaInfoValue(["quisquam",
                                    "quo"],
                                    "dolor",
                                    "odit",
                                [new ChartMediaInfoValueSeries("email",
                                        "molestiae",
                                        320.6310),
                                new ChartMediaInfoValueSeries("id",
                                        "similique",
                                        873.2353),
                                new ChartMediaInfoValueSeries("id",
                                        "architecto",
                                        729.6357),
                                new ChartMediaInfoValueSeries("name",
                                        "aperiam",
                                        375.0800)],
                                [new MapColor(32, 253, 114)]))],
                            4),
                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "ducimus",
                                "quibusdam corrupti adipisci"))],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "category",
                            "laboriosam voluptates voluptatem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "group",
                            "sed praesentium et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "email",
                            "voluptas possimus ut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("quo nihil dolore",
                            "https://picsum.photos/640/480/?image=1076",
                            "e9d9885a-7a0f-3e02-23e9-b84442d21df8",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "error")]),
                    new AttributesDictionary(),
                    true,
                    "animi",
                    "fuga",
                    new GraphicOrigin(Guid.NewGuid(),
                        "sapiente",
                        4)),
            new Graphic(new Polyline([new MapPath([new MapPoint([40.8016,
                            244.0861,
                            836.0344]),
                        new MapPoint([313.9496,
                            716.3078,
                            678.1420]),
                        new MapPoint([674.7927,
                            311.6499,
                            826.8825,
                            347.0904]),
                        new MapPoint([462.0256,
                            925.4702])]),
                        new MapPath([new MapPoint([249.8870,
                                93.5968,
                                71.1463,
                                765.1736]),
                            new MapPoint([139.5974,
                                320.3798])])],
                    new SpatialReference(9,
                            "autem",
                            "fugiat",
                            "tempore"),
                        true,
                        true),
                new TextSymbol("et omnis voluptas",
                    new MapColor(232, 63, 250),
                    new MapColor(122, 130, 22),
                        new Dimension(953.8456),
                    new MapFont(new Dimension(342.4676),
                            "Times New Roman",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        3.3567,
                    new MapColor(87, 110, 180),
                    new MapColor(7, 11, 156),
                        610.2363,
                    HorizontalAlignment.Right,
                        true,
                        172.0639,
                        new Dimension(287.8042),
                        true),
                new PopupTemplate("enim illo qui",
                        "qui",
                        ["fugit",
                            "molestias",
                            "quod",
                            "repellendus"],
                    [new FieldInfo("group",
                            "quae",
                            "sit",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new TextPopupContent("ut molestiae eveniet")],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "email",
                            "voluptatum sint voluptatem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "createdAt",
                            "necessitatibus vel excepturi",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "email",
                            "dolor vero adipisci",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("assumenda praesentium aut",
                            "https://picsum.photos/640/480/?image=765",
                            "58e60719-da3e-06f7-50de-d2dffb63c57a",
                            () => { Console.WriteLine("itaque"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "deserunt")]),
                    new AttributesDictionary(),
                    true,
                    "inventore",
                    "sed",
                    new GraphicOrigin(Guid.NewGuid(),
                        "rerum",
                        4)),
            new Graphic(new Polygon([new MapPath([new MapPoint([752.1309,
                            727.7926,
                            203.6085,
                            41.5652]),
                        new MapPoint([648.2559,
                            634.0426,
                            412.2045,
                            100.6053]),
                        new MapPoint([359.5446,
                            514.5573,
                            281.2536,
                            130.9883]),
                        new MapPoint([287.5248,
                            218.5897,
                            406.6907,
                            984.7960])])],
                    new SpatialReference(6,
                            "ex",
                            "aspernatur",
                            "quod"),
                    new Point(-92.7391,
                            69.6382,
                            149.6447,
                            -8.2537,
                            473.5634,
                        new SpatialReference(1,
                                "molestiae",
                                "sit",
                                "eius"),
                            true,
                            true,
                            124.3576),
                        true,
                        true,
                        true),
                new TextSymbol("odio rem rem",
                    new MapColor(161, 243, 181),
                    new MapColor(83, 83, 17),
                        new Dimension(491.0965),
                    new MapFont(new Dimension(871.0676),
                            "Bookman",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        192.0753,
                    new MapColor(37, 139, 31),
                    new MapColor(208, 221, 152),
                        355.6948,
                    HorizontalAlignment.Center,
                        true,
                        606.3113,
                        new Dimension(624.1652),
                        true),
                new PopupTemplate("corrupti quae aut",
                        "ipsum",
                        ["et",
                            "voluptas",
                            "quaerat"],
                    [new FieldInfo("createdAt",
                            "ut",
                            "maxime",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("createdAt",
                            "est",
                            "eum",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new TextPopupContent("autem laboriosam harum"),
                    new MediaPopupContent("eos ratione laudantium",
                            "ea provident dolore et earum",
                        [new PieChartMediaInfo("modi omnis fuga",
                                "qui",
                                "odio nam non",
                            new ChartMediaInfoValue(["animi",
                                    "mollitia"],
                                    "quibusdam",
                                    "ut",
                                [new ChartMediaInfoValueSeries("title",
                                        "quo",
                                        743.0665),
                                new ChartMediaInfoValueSeries("title",
                                        "ut",
                                        604.3268),
                                new ChartMediaInfoValueSeries("token",
                                        "a",
                                        59.1840),
                                new ChartMediaInfoValueSeries("token",
                                        "sint",
                                        892.8910)],
                                [new MapColor(112, 77, 251),
                                new MapColor(189, 146, 117),
                                new MapColor(61, 230, 65)])),
                        new ImageMediaInfo("laborum ut magnam",
                                "earum",
                                "reiciendis deleniti aperiam",
                            new ImageMediaInfoValue("http://abelardo.biz",
                                    "http://grace.name"),
                                754.9739),
                        new LineChartMediaInfo("magni pariatur quae",
                                "sunt",
                                "velit aspernatur itaque",
                            new ChartMediaInfoValue(["dolore",
                                    "praesentium"],
                                    "repudiandae",
                                    "exercitationem",
                                [new ChartMediaInfoValueSeries("title",
                                        "eveniet",
                                        719.8837),
                                new ChartMediaInfoValueSeries("id",
                                        "voluptatem",
                                        709.0636),
                                new ChartMediaInfoValueSeries("name",
                                        "asperiores",
                                        400.7052),
                                new ChartMediaInfoValueSeries("title",
                                        "velit",
                                        288.1220)],
                                [new MapColor(225, 91, 30)]))],
                            8),
                    new AttachmentsPopupContent("id totam voluptas",
                            "minima quaerat fuga ad",
                            AttachmentsPopupContentDisplayType.Preview),
                    new FieldsPopupContent([new FieldInfo("comment",
                                "sunt",
                                "deleniti",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                            "et nemo atque vel magni unde",
                            "beatae et est")],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "updatedAt",
                            "est enim ex",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "status",
                            "et ut velit",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("eum sapiente qui",
                            "9f52e39c-6aec-d3fa-f962-ea6a96ce3979",
                            () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "aliquam")]),
                    new AttributesDictionary(),
                    true,
                    "qui",
                    "officiis",
                    new GraphicOrigin(Guid.NewGuid(),
                        "sit",
                        7))];
        await featureLayer.SetSource(testSource);
        var source = await featureLayer.GetSource();
        Assert.AreEqual(testSource, source);
        ListMode testListMode = ListMode.Show;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("praesentium eos saepe",
                    "nulla",
                    ["mollitia",
                        "magnam",
                        "quo"],
                [new FieldInfo("status",
                        "nam",
                        "corrupti",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(5,
                            true,
                        DateFormat.DayShortMonthYearLongTime24),
                        true,
                        true,
                    StatisticType.Stddev),
                new FieldInfo("category",
                        "animi",
                        "consequatur",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.Year),
                        true,
                        true,
                    StatisticType.Sum)],
                [new RelationshipPopupContent("est odit aut",
                        "nam labore eos sit",
                        9,
                        "rerum",
                    [new RelatedRecordsInfoFieldOrder("occaecati",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("dolore",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("et",
                        OrderBy.Asc)],
                        6),
                new FieldsPopupContent([new FieldInfo("title",
                            "nulla",
                            "suscipit",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("createdAt",
                            "mollitia",
                            "atque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("token",
                            "at",
                            "ut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Max)],
                        "consequatur in sint nemo odit enim",
                        "ab incidunt aut")],
                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "token",
                        "rem reiciendis tempora",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "title",
                        "odit at et",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "category",
                        "atque nobis pariatur",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("necessitatibus sit autem",
                        "https://picsum.photos/640/480/?image=677",
                        "1d20687f-748b-d4ee-8158-02d28bcd6c8d",
                        () => { Console.WriteLine("quos"); return Task.CompletedTask; },
                        "createdAt",
                        true,
                        true,
                        true,
                        "qui"),
                new ActionButton("laudantium dolores molestiae",
                        "https://picsum.photos/640/480/?image=859",
                        "3adbd84b-061c-7b89-d49c-96974efc2a65",
                        () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                        "id",
                        true,
                        true,
                        true,
                        "nihil"),
                new ActionButton("illum ut sit",
                        "https://picsum.photos/640/480/?image=357",
                        "0632fd5e-5f1a-33a6-cb46-c505b6ad7d20",
                        () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                        "title",
                        true,
                        true,
                        true,
                        "quis"),
                new ActionButton("et voluptatem eos",
                        "https://picsum.photos/640/480/?image=941",
                        "5c8efcc3-d218-3a28-22b7-5d6c38bbdaef",
                        () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                        "name",
                        true,
                        true,
                        true,
                        "voluptatem")]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.DestinationIn;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Layer testDynamicDataSource = new GeoRSSLayer("https://arcgis.github.io/arcgis-samples-javascript/sample-data/layers-georss/sample-georss.xml",
                    "ipsa incidunt earum",
                    0.0885,
                    true,
                ListMode.Show,
                BlendMode.DestinationIn,
                    new Effect("magnam",
                        11456603.3227),
                new Extent(29.0483,
                        7.8935,
                        75.5754,
                        -22.2654,
                        291.0188,
                        23.2387,
                        249.6665,
                        681.1737,
                    new SpatialReference(5,
                            "consequatur",
                            "est",
                            "assumenda"),
                        true,
                        true),
                    true,
                new SimpleLineSymbol(new MapColor(52, 221, 31),
                        new Dimension(540.4790),
                    SimpleLineSymbolStyle.None,
                    Cap.Square,
                    Join.Round,
                    new LineSymbolMarker(new MapColor(4, 124, 156),
                        LinePlacement.End,
                        LineSymbolMarkerStyle.X),
                        999.1166),
                    38356211.8330,
                    43275.9789,
                    true,
                new PictureMarkerSymbol("https://static.arcgis.com/images/Symbols/Shapes/BluePin1LargeB.png",
                        new Dimension(312.5000),
                        new Dimension(104.4141),
                        207.6554,
                        new Dimension(663.2448),
                        new Dimension(371.1701),
                    new MapColor(238, 112, 241)));
        await featureLayer.SetDynamicDataSource(testDynamicDataSource);
        var dynamicDataSource = await featureLayer.GetDynamicDataSource();
        Assert.AreEqual(testDynamicDataSource, dynamicDataSource);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature['FieldName'];",
                        "qui dolorem blanditiis"),
                ElevationInfoMode.RelativeToScene,
                    717.5138,
                ElevationUnit.Centimeters);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("nulla",
                    10166695.4287)],
                    true,
                new FeatureFilter(822.9580,
                    new Polyline([new MapPath([new MapPoint([461.1382,
                                349.6153,
                                89.9458,
                                457.0965]),
                            new MapPoint([572.0627,
                                536.4717]),
                            new MapPoint([419.3492,
                                268.6426]),
                            new MapPoint([619.3692,
                                520.5483,
                                306.6538])]),
                            new MapPath([new MapPoint([919.5376,
                                    900.3612,
                                    6.1470]),
                                new MapPoint([798.9542,
                                    907.1146]),
                                new MapPoint([212.3404,
                                    46.8568]),
                                new MapPoint([473.2106,
                                    226.3466])]),
                            new MapPath([new MapPoint([99.5475,
                                    275.6318]),
                                new MapPoint([157.1245,
                                    69.3251,
                                    350.8337]),
                                new MapPoint([599.4184,
                                    245.2291])])],
                        new SpatialReference(2,
                                "qui",
                                "iure",
                                "reprehenderit"),
                            true,
                            true),
                        [1,
                            6],
                    SpatialRelationship.Contains,
                    new TimeExtent(new DateTime(2012, 9, 10, 18, 30, 26),
                            new DateTime(2002, 2, 15, 9, 57, 11)),
                        QueryUnits.UsNauticalMiles,
                        "PostalCode = 'M5V 1J9'"),
                    [new Effect("corrupti",
                        33700457.1590),
                        new Effect("inventore",
                            28566491.9026)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "updatedAt",
                    "impedit",
                    "corrupti voluptatem ut quasi est",
                    8,
                    true,
                    true,
                    new { Value = "eaque" },
                FieldValueType.Measurement,
                new InheritedDomain("comment")),
            new Field(default,
                    "comment",
                    "dolores",
                    "neque voluptas dolorem nobis qui reiciendis officiis",
                    9,
                    true,
                    true,
                    new { Value = "et" },
                FieldValueType.PercentageOrRatio,
                new RangeDomain("rerum",
                        "et",
                        "comment")),
            new Field(default,
                    "email",
                    "iusto",
                    "ex reprehenderit autem error neque",
                    9,
                    true,
                    true,
                    new { Value = "itaque" },
                FieldValueType.DateAndTime,
                new InheritedDomain("createdAt"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("quibusdam");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("similique nihil sed",
                    "eos quibusdam voluptatem architecto",
                    true,
                    [new FieldElement("status",
                        "dolores",
                        "recusandae praesentium hic accusantium distinctio quia numquam",
                        "corporis",
                        "hic",
                        "eius",
                        "distinctio",
                        new CodedValueDomain<string>(),
                        new BarcodeScannerInput()),
                        new FieldElement("createdAt",
                            "atque",
                            "iusto hic est ut omnis sit",
                            "quaerat",
                            "qui",
                            "provident",
                            "et",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput()),
                        new FieldElement("password",
                            "sunt",
                            "fugit ipsum suscipit iusto consectetur nostrum quos",
                            "et",
                            "necessitatibus",
                            "corrupti",
                            "laudantium",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput())],
                [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "name",
                        "quis accusamus pariatur",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "id",
                        "dignissimos necessitatibus ad",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(-175.8935,
                    -29.3734,
                    -58.2796,
                    6.8909,
                    221.4515,
                    480.6940,
                    640.8260,
                    591.6616,
                new SpatialReference(3,
                        "minus",
                        "enim",
                        "sit"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveAfter,
                    "pariatur",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    25091193.0712,
                    42705.4393,
                    true,
                    new Dimension(598.4779),
                new TextSymbol("error vitae natus",
                    new MapColor(2, 13, 81),
                    new MapColor(156, 16, 231),
                        new Dimension(617.8284),
                    new MapFont(new Dimension(773.6541),
                            "Garamond",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        179.5341,
                    new MapColor(24, 127, 42),
                    new MapColor(218, 192, 151),
                        133.9658,
                    HorizontalAlignment.Left,
                        true,
                        634.9934,
                        new Dimension(625.0534),
                        true),
                    true,
                    "Province = 'Ontario'"),
            new Label(LabelPlacement.AboveLeft,
                    "ut",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    12780204.6186,
                    34070.5075,
                    true,
                    new Dimension(268.0459),
                new TextSymbol("deleniti aperiam libero",
                    new MapColor(155, 210, 69),
                    new MapColor(114, 189, 178),
                        new Dimension(82.7130),
                    new MapFont(new Dimension(261.9538),
                            "Courier New",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        455.3281,
                    new MapColor(16, 150, 36),
                    new MapColor(156, 185, 43),
                        963.8911,
                    HorizontalAlignment.Center,
                        true,
                        689.2627,
                        new Dimension(885.7690),
                        true),
                    true,
                    "Phone = '555-555-5555'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("neque",
                SortOrder.Descending,
                    "voluptate"),
            new OrderedLayerOrderBy("ut",
                SortOrder.Descending,
                    "nam"),
            new OrderedLayerOrderBy("sunt",
                SortOrder.Ascending,
                    "incidunt"),
            new OrderedLayerOrderBy("qui",
                SortOrder.Ascending,
                    "dolorem")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new UniqueValueRenderer([new UniqueValueInfo("itaque",
                    new TextSymbol("quas earum consequuntur",
                        new MapColor(170, 134, 33),
                        new MapColor(193, 17, 100),
                            new Dimension(751.2175),
                        new MapFont(new Dimension(874.1497),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            115.7028,
                        new MapColor(83, 186, 60),
                        new MapColor(15, 238, 14),
                            522.0765,
                        HorizontalAlignment.Center,
                            true,
                            604.1674,
                            new Dimension(511.9098),
                            true),
                        "nihil"),
                new UniqueValueInfo("totam",
                    new TextSymbol("aspernatur et autem",
                        new MapColor(100, 230, 214),
                        new MapColor(124, 211, 160),
                            new Dimension(428.9332),
                        new MapFont(new Dimension(816.2665),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            248.7464,
                        new MapColor(146, 210, 8),
                        new MapColor(53, 60, 73),
                            469.4502,
                        HorizontalAlignment.Right,
                            true,
                            690.6151,
                            new Dimension(563.8296),
                            true),
                        "ea"),
                new UniqueValueInfo("autem",
                    new TextSymbol("odio rerum exercitationem",
                        new MapColor(160, 139, 253),
                        new MapColor(231, 104, 76),
                            new Dimension(55.9898),
                        new MapFont(new Dimension(962.8232),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            819.8783,
                        new MapColor(230, 254, 253),
                        new MapColor(175, 217, 76),
                            855.9556,
                        HorizontalAlignment.Right,
                            true,
                            450.0503,
                            new Dimension(821.7452),
                            true),
                        "maxime")],
                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(187, 243, 47),
                            new MapColor(8, 243, 195)),
                        new AlgorithmicColorRamp(Algorithm.Hsv,
                            new MapColor(146, 150, 191),
                            new MapColor(128, 2, 160)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(245, 203, 179),
                            new MapColor(39, 193, 6))]),
                        39.3692,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(745.6248,
                                126.2013),
                        new AuthoringInfoField1ClassBreakInfos(76.9340,
                                47.6836),
                        new AuthoringInfoField1ClassBreakInfos(298.6181,
                                360.7627)],
                            "quibusdam",
                            "aut",
                            "nam"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(31.9819,
                                503.4865),
                        new AuthoringInfoField1ClassBreakInfos(803.5346,
                                175.3046),
                        new AuthoringInfoField1ClassBreakInfos(281.5419,
                                814.2853)],
                            "sint",
                            "porro",
                            "repellat"),
                        ["vitae",
                            "enim",
                            "rerum",
                            "consequatur"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "tenetur",
                        true,
                    LengthUnit.Meters,
                        96.6731,
                        953.5434,
                        988.3621,
                        437.6962),
                new PictureFillSymbol("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0",
                    new Dimension(117.4946),
                    new Dimension(39.4055),
                    new Dimension(880.5605),
                    new Dimension(714.8128),
                    -6.3137,
                    44.0736,
                    new Outline(new MapColor(21, 151, 11),
                        new Dimension(652.5524),
                        SimpleLineSymbolStyle.DashDot,
                        Cap.Round,
                        Join.Miter,
                        new LineSymbolMarker(new MapColor(204, 239, 131),
                            LinePlacement.Begin,
                            LineSymbolMarkerStyle.Cross),
                        588.7650),
                    new MapColor(101, 115, 178)),
                    "qui",
                    new DefaultSymbol(),
                    "omnis",
                    "eum",
                    "ratione",
                    "atque",
                new UniqueValueRendererLegendOptions("omnis et eos"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("dolorem",
                        new TextSymbol("unde consequatur et",
                            new MapColor(33, 113, 173),
                            new MapColor(9, 193, 209),
                                new Dimension(770.5649),
                            new MapFont(new Dimension(370.2557),
                                    "Bookman",
                                MapFontStyle.Normal,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                684.3526,
                            new MapColor(50, 62, 243),
                            new MapColor(125, 138, 129),
                                31.5451,
                            HorizontalAlignment.Center,
                                true,
                                325.1251,
                                new Dimension(159.9165),
                                true),
                        [new UniqueValue("unde",
                                "eveniet",
                                "eaque")]),
                    new UniqueValueClass("nulla",
                        new TextSymbol("placeat voluptatem aliquid",
                            new MapColor(121, 178, 183),
                            new MapColor(116, 28, 159),
                                new Dimension(854.5192),
                            new MapFont(new Dimension(826.5315),
                                    "Bookman",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                276.2984,
                            new MapColor(221, 88, 155),
                            new MapColor(74, 237, 232),
                                423.2031,
                            HorizontalAlignment.Right,
                                true,
                                166.3116,
                                new Dimension(594.0858),
                                true),
                        [new UniqueValue("non",
                                "voluptate",
                                "quasi"),
                        new UniqueValue("libero",
                                "nobis",
                                "sunt")]),
                    new UniqueValueClass("magni",
                        new TextSymbol("enim sequi ipsa",
                            new MapColor(118, 41, 16),
                            new MapColor(21, 97, 45),
                                new Dimension(994.3311),
                            new MapFont(new Dimension(920.6707),
                                    "Verdana",
                                MapFontStyle.Oblique,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                825.3489,
                            new MapColor(246, 19, 56),
                            new MapColor(183, 85, 11),
                                615.5689,
                            HorizontalAlignment.Left,
                                true,
                                51.2624,
                                new Dimension(932.2985),
                                true),
                        [new UniqueValue("inventore",
                                "impedit",
                                "est"),
                        new UniqueValue("quia",
                                "quam",
                                "et"),
                        new UniqueValue("ad",
                                "soluta",
                                "nisi"),
                        new UniqueValue("vitae",
                                "ipsam",
                                "aut")]),
                    new UniqueValueClass("autem",
                        new TextSymbol("unde consequatur eaque",
                            new MapColor(19, 203, 76),
                            new MapColor(94, 147, 70),
                                new Dimension(109.5410),
                            new MapFont(new Dimension(893.3291),
                                    "Courier New",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                398.2724,
                            new MapColor(173, 4, 168),
                            new MapColor(136, 189, 216),
                                621.3468,
                            HorizontalAlignment.Right,
                                true,
                                597.7258,
                                new Dimension(790.8540),
                                true),
                        [new UniqueValue("hic",
                                "in",
                                "doloremque"),
                        new UniqueValue("dicta",
                                "nihil",
                                "laborum"),
                        new UniqueValue("earum",
                                "voluptates",
                                "corrupti"),
                        new UniqueValue("ratione",
                                "ratione",
                                "reprehenderit")])],
                        "vero")],
                    "minima",
                    "omnis quod qui");
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(5,
                    "nemo",
                    "velit",
                    "sunt");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("accusamus fugiat expedita doloremque et excepturi quos",
                DrawingTool.AutoCompletePolygon,
                    "updatedAt",
                new Graphic(new Point(30.5228,
                            20.8399,
                            -90.3294,
                            -34.2560,
                            768.7763,
                        new SpatialReference(5,
                                "aliquid",
                                "nisi",
                                "eius"),
                            true,
                            true,
                            239.6642),
                    new TextSymbol("inventore ut sed",
                        new MapColor(67, 195, 192),
                        new MapColor(209, 90, 17),
                            new Dimension(854.6010),
                        new MapFont(new Dimension(353.4741),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            405.9931,
                        new MapColor(218, 120, 126),
                        new MapColor(240, 71, 17),
                            138.6417,
                        HorizontalAlignment.Center,
                            true,
                            446.7272,
                            new Dimension(741.0026),
                            true),
                    new PopupTemplate("reiciendis sed veritatis",
                            "alias",
                            ["sequi",
                                "dolorem",
                                "aperiam",
                                "voluptatibus"],
                        [new FieldInfo("createdAt",
                                "fuga",
                                "quis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("email",
                                "voluptatibus",
                                "aut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("comment",
                                "qui",
                                "sunt",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("phone",
                                "blanditiis",
                                "sed",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new FieldsPopupContent([new FieldInfo("email",
                                    "assumenda",
                                    "odit",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("id",
                                    "commodi",
                                    "harum",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("createdAt",
                                    "quam",
                                    "fugit",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "error iusto consequatur voluptate",
                                "quia earum rem"),
                        new FieldsPopupContent([new FieldInfo("title",
                                    "amet",
                                    "et",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("createdAt",
                                    "ut",
                                    "ad",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("group",
                                    "ea",
                                    "quibusdam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "totam ut non alias",
                                "ipsam aut recusandae"),
                        new MediaPopupContent("mollitia sequi est",
                                "quidem ex sunt rerum cupiditate temporibus autem",
                            [new ImageMediaInfo("autem laudantium aliquid",
                                    "velit",
                                    "pariatur unde voluptatem",
                                new ImageMediaInfoValue("https://samara.info",
                                        "https://celine.info"),
                                    107.4168),
                            new ImageMediaInfo("sed eos dolore",
                                    "consequuntur",
                                    "quia natus dolorem",
                                new ImageMediaInfoValue("https://broderick.name",
                                        "https://nick.org"),
                                    966.5928)],
                                5),
                        new TextPopupContent("officiis et iure")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "updatedAt",
                                "non dolore consectetur",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "id",
                                "soluta commodi doloribus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("facilis veritatis adipisci",
                                "3dc403a2-d3c0-5c0f-7d8b-d306d9ab0edc",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "rerum",
                        "ad",
                        new GraphicOrigin(Guid.NewGuid(),
                            "animi",
                            4)),
                    new Thumbnail("amet",
                        "ipsa",
                        281.6491,
                        37.8494)),
            new FeatureTemplate("alias rem dignissimos eius et",
                DrawingTool.None,
                    "title",
                new Graphic(new Extent(-73.4708,
                            -147.3845,
                            -66.7146,
                            84.8674,
                            652.7706,
                            404.6060,
                            514.8724,
                            554.3260,
                        new SpatialReference(4,
                                "beatae",
                                "vitae",
                                "aspernatur"),
                            true,
                            true),
                    new TextSymbol("qui saepe quis",
                        new MapColor(253, 29, 37),
                        new MapColor(208, 247, 11),
                            new Dimension(863.0535),
                        new MapFont(new Dimension(83.5575),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            116.3068,
                        new MapColor(37, 103, 9),
                        new MapColor(205, 92, 163),
                            236.9613,
                        HorizontalAlignment.Center,
                            true,
                            989.2508,
                            new Dimension(420.5994),
                            true),
                    new PopupTemplate("officia ratione voluptatibus",
                            "fuga",
                            ["ea",
                                "nam",
                                "quae",
                                "aut"],
                        [new FieldInfo("group",
                                "ipsum",
                                "iure",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("email",
                                "tempora",
                                "voluptatem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("password",
                                "non",
                                "delectus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                    "accusamus",
                                    "animi incidunt exercitationem")),
                        new AttachmentsPopupContent("vel dignissimos provident",
                                "consequatur fugit quam temporibus ad",
                                AttachmentsPopupContentDisplayType.Preview),
                        new TextPopupContent("qui aspernatur quos")],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "title",
                                "atque officiis sit",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("aut ratione vel",
                                "https://picsum.photos/640/480/?image=217",
                                "d6d62416-ea50-643d-5803-44093a278bf8",
                                () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "doloribus")]),
                        new AttributesDictionary(),
                        true,
                        "a",
                        "rerum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "eveniet",
                            4)),
                    new Thumbnail("dolor",
                        "et",
                        281.0267,
                        275.2605)),
            new FeatureTemplate("repellat modi et sed reiciendis",
                DrawingTool.LeftArrow,
                    "group",
                new Graphic(new Point(72.4356,
                            28.0359,
                            120.0228,
                            39.2700,
                            646.5943,
                        new SpatialReference(5,
                                "id",
                                "similique",
                                "dignissimos"),
                            true,
                            true,
                            913.7773),
                    new TextSymbol("deleniti sint animi",
                        new MapColor(225, 181, 125),
                        new MapColor(210, 97, 200),
                            new Dimension(820.7959),
                        new MapFont(new Dimension(439.3484),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            265.2744,
                        new MapColor(42, 88, 55),
                        new MapColor(212, 173, 60),
                            398.6816,
                        HorizontalAlignment.Left,
                            true,
                            862.8882,
                            new Dimension(604.2476),
                            true),
                    new PopupTemplate("dolorum nulla ut",
                            "omnis",
                            ["vel",
                                "non"],
                        [new FieldInfo("name",
                                "delectus",
                                "ut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Count)],
                        [new MediaPopupContent("fuga aperiam aperiam",
                                "nobis dolores commodi exercitationem aliquam et",
                            [new PieChartMediaInfo("eos reprehenderit fugiat",
                                    "dolor",
                                    "molestias magni veritatis",
                                new ChartMediaInfoValue(["et",
                                        "nam"],
                                        "recusandae",
                                        "neque",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "illo",
                                            271.5674),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "quia",
                                            355.8403),
                                    new ChartMediaInfoValueSeries("updatedAt",
                                            "id",
                                            268.0361)],
                                    [new MapColor(237, 139, 150),
                                    new MapColor(63, 128, 208),
                                    new MapColor(28, 147, 23),
                                    new MapColor(244, 42, 158)])),
                            new LineChartMediaInfo("expedita rerum nihil",
                                    "necessitatibus",
                                    "ipsam et ullam",
                                new ChartMediaInfoValue(["dolore",
                                        "minus",
                                        "qui"],
                                        "velit",
                                        "odio",
                                    [new ChartMediaInfoValueSeries("name",
                                            "possimus",
                                            2.0199),
                                    new ChartMediaInfoValueSeries("status",
                                            "aut",
                                            210.1572),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "quibusdam",
                                            888.5493),
                                    new ChartMediaInfoValueSeries("category",
                                            "aut",
                                            203.5037)],
                                    [new MapColor(22, 189, 87),
                                    new MapColor(164, 249, 206)])),
                            new BarChartMediaInfo("qui sed explicabo",
                                    "libero",
                                    "magni ea eveniet",
                                new ChartMediaInfoValue(["qui",
                                        "cum",
                                        "vel"],
                                        "dolorum",
                                        "et",
                                    [new ChartMediaInfoValueSeries("category",
                                            "consequatur",
                                            603.9282)],
                                    [new MapColor(152, 133, 23),
                                    new MapColor(4, 138, 149),
                                    new MapColor(32, 120, 1)])),
                            new LineChartMediaInfo("eum qui quia",
                                    "quisquam",
                                    "a qui quia",
                                new ChartMediaInfoValue(["eum",
                                        "sapiente",
                                        "sint"],
                                        "laudantium",
                                        "fugiat",
                                    [new ChartMediaInfoValueSeries("password",
                                            "recusandae",
                                            170.2590)],
                                    [new MapColor(55, 100, 59)]))],
                                7),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "inventore",
                                    "eum soluta optio")),
                        new RelationshipPopupContent("repudiandae saepe incidunt",
                                "est voluptatum aliquid non quisquam necessitatibus",
                                1,
                                "pariatur",
                            [new RelatedRecordsInfoFieldOrder("quo",
                                OrderBy.Asc)],
                                9)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "group",
                                "eligendi laudantium ad",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "comment",
                                "quasi quia velit",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "comment",
                                "sit rem assumenda",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("asperiores porro autem",
                                "2358c329-ccde-6fd1-ec7b-52e9e7777459",
                                () => { Console.WriteLine("corporis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "qui"),
                        new ActionButton("et voluptatum eum",
                                "https://picsum.photos/640/480/?image=160",
                                "c21f666a-8061-3578-5f60-119b1c4eed11",
                                () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "aperiam")]),
                        new AttributesDictionary(),
                        true,
                        "magni",
                        "dolorem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "labore",
                            9)),
                    new Thumbnail("tenetur",
                        "ea",
                        272.3198,
                        97.9276))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2008, 9, 22, 2, 16, 52),
                    new DateTime(2018, 8, 19, 17, 50, 49));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("minima",
                    "quasi",
                new TimeExtent(new DateTime(2018, 10, 19, 6, 2, 32),
                        new DateTime(2014, 7, 19, 11, 23, 6)),
                new TimeInterval(TemporalTime.Decades,
                        984.2129),
                    [new DateTime(2012, 5, 13, 21, 10, 1),
                        new DateTime(2000, 2, 25, 17, 2, 7),
                        new DateTime(2005, 5, 18, 22, 38, 31),
                        new DateTime(2021, 9, 18, 12, 14, 3)],
                    "Europe/Moscow",
                    "qui");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Hours,
                    986.9187);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("4875502e-02bb-ccf6-5916-4d9c9db67224",
                    "comment",
                [new FeatureTemplate("qui occaecati quis qui ab",
                    DrawingTool.LeftArrow,
                        "avatar",
                    new Graphic(new Polyline([new MapPath([new MapPoint([558.5930,
                                    703.9940]),
                                new MapPoint([685.0668,
                                    799.0433,
                                    220.0179]),
                                new MapPoint([203.3978,
                                    495.9959,
                                    961.1996,
                                    606.3024]),
                                new MapPoint([811.0382,
                                    336.1771,
                                    849.4103])])],
                            new SpatialReference(7,
                                    "nam",
                                    "voluptatem",
                                    "et"),
                                true,
                                true),
                        new TextSymbol("pariatur esse sit",
                            new MapColor(164, 37, 160),
                            new MapColor(166, 128, 141),
                                new Dimension(877.9374),
                            new MapFont(new Dimension(24.0015),
                                    "Verdana",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.None),
                                227.8701,
                            new MapColor(48, 81, 130),
                            new MapColor(145, 253, 123),
                                739.1971,
                            HorizontalAlignment.Right,
                                true,
                                545.3791,
                                new Dimension(194.1986),
                                true),
                        new PopupTemplate("eius sed nam",
                                "nulla",
                                ["doloremque",
                                    "et",
                                    "et",
                                    "quisquam"],
                            [new FieldInfo("updatedAt",
                                    "molestias",
                                    "omnis",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                            [new AttachmentsPopupContent("voluptates et voluptas",
                                    "cumque rerum placeat vero",
                                    AttachmentsPopupContentDisplayType.Preview),
                            new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "praesentium",
                                        "ea qui at"))],
                            [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "name",
                                    "et aliquam dolore",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("aut qui molestiae",
                                    "https://picsum.photos/640/480/?image=914",
                                    "3fbae8d6-ec7c-a23f-455a-1a7d799a19cc",
                                    () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "rem")]),
                            new AttributesDictionary(),
                            true,
                            "nihil",
                            "sunt",
                            new GraphicOrigin(Guid.NewGuid(),
                                "laboriosam",
                                8)),
                        new Thumbnail("eos",
                            "aut",
                            278.9251,
                            193.2630))],
                new Dictionary<string, Domain>() {{ "nesciunt", new InheritedDomain("status") },
                { "itaque", new InheritedDomain("phone") },
                { "aspernatur", new InheritedDomain("name") }
                },
                    "quae"),
            new FeatureType("229ed53a-b8c1-e0f8-c140-ed979119df2d",
                    "createdAt",
                [new FeatureTemplate("ea mollitia sit necessitatibus suscipit cupiditate",
                    DrawingTool.None,
                        "avatar",
                    new Graphic(new Polyline([new MapPath([new MapPoint([694.5687,
                                    954.2158,
                                    563.8475,
                                    479.0608]),
                                new MapPoint([333.9912,
                                    417.8638]),
                                new MapPoint([872.7635,
                                    413.3400]),
                                new MapPoint([174.2431,
                                    238.7372,
                                    828.1338])])],
                            new SpatialReference(7,
                                    "accusamus",
                                    "optio",
                                    "voluptas"),
                                true,
                                true),
                        new TextSymbol("doloribus velit quo",
                            new MapColor(176, 170, 206),
                            new MapColor(121, 119, 24),
                                new Dimension(780.0579),
                            new MapFont(new Dimension(772.1421),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                173.3964,
                            new MapColor(243, 248, 10),
                            new MapColor(4, 69, 188),
                                392.8422,
                            HorizontalAlignment.Right,
                                true,
                                763.9298,
                                new Dimension(363.0342),
                                true),
                        new PopupTemplate("ipsam esse sint",
                                "necessitatibus",
                                ["et",
                                    "qui"],
                            [new FieldInfo("phone",
                                    "repudiandae",
                                    "maiores",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("token",
                                    "est",
                                    "accusamus",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("id",
                                    "commodi",
                                    "reprehenderit",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("email",
                                    "odit",
                                    "ea",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new RelationshipPopupContent("voluptatibus eos ut",
                                    "reprehenderit quaerat earum sit perspiciatis aut",
                                    3,
                                    "recusandae",
                                [new RelatedRecordsInfoFieldOrder("eos",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("provident",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("et",
                                    OrderBy.Desc)],
                                    3),
                            new RelationshipPopupContent("ut voluptas aliquid",
                                    "dolores praesentium adipisci incidunt beatae",
                                    7,
                                    "occaecati",
                                [new RelatedRecordsInfoFieldOrder("ut",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("voluptatem",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("in",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("et",
                                    OrderBy.Desc)],
                                    1),
                            new MediaPopupContent("ut voluptatum sunt",
                                    "labore qui laudantium id eveniet possimus",
                                [new ImageMediaInfo("ut officiis iure",
                                        "odio",
                                        "molestiae magni eius",
                                    new ImageMediaInfoValue("https://dusty.name",
                                            "http://abdul.org"),
                                        621.4587),
                                new LineChartMediaInfo("iusto sint dolor",
                                        "nisi",
                                        "ut beatae ut",
                                    new ChartMediaInfoValue(["consequatur",
                                            "quo",
                                            "saepe",
                                            "totam"],
                                            "et",
                                            "iusto",
                                        [new ChartMediaInfoValueSeries("status",
                                                "quisquam",
                                                267.1491),
                                        new ChartMediaInfoValueSeries("updatedAt",
                                                "nesciunt",
                                                816.7655),
                                        new ChartMediaInfoValueSeries("group",
                                                "nobis",
                                                598.3137)],
                                        [new MapColor(233, 43, 236),
                                        new MapColor(114, 89, 192)])),
                                new ImageMediaInfo("facere non sit",
                                        "nobis",
                                        "asperiores labore accusantium",
                                    new ImageMediaInfoValue("http://dave.com",
                                            "https://victor.net"),
                                        894.8473)],
                                    8)],
                            [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "id",
                                    "inventore dolor in",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "phone",
                                    "nostrum explicabo eveniet",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "name",
                                    "rerum harum rerum",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("voluptatem rerum aperiam",
                                    "https://picsum.photos/640/480/?image=842",
                                    "a03697a7-57cf-be5d-39bb-df4f680cab71",
                                    () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                    "category",
                                    true,
                                    true,
                                    true,
                                    "placeat"),
                            new ActionButton("corrupti est qui",
                                    "https://picsum.photos/640/480/?image=192",
                                    "d36f4938-e5b7-817c-4209-123548f944c0",
                                    () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "deleniti"),
                            new ActionToggle("dolore et animi",
                                    "f416d8a4-1fcb-7dfb-ecbe-41ba3b4c5fbe",
                                    () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "status",
                                    "sint"),
                            new ActionButton("ut atque distinctio",
                                    "https://picsum.photos/640/480/?image=619",
                                    "c0391304-0965-0645-8047-9b774f19ffdd",
                                    () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "et")]),
                            new AttributesDictionary(),
                            true,
                            "iure",
                            "placeat",
                            new GraphicOrigin(Guid.NewGuid(),
                                "ea",
                                1)),
                        new Thumbnail("alias",
                            "natus",
                            140.5525,
                            186.4254)),
                new FeatureTemplate("suscipit qui quia dolor dignissimos sint labore",
                    DrawingTool.UpArrow,
                        "status",
                    new Graphic(new Polyline([new MapPath([new MapPoint([870.4312,
                                    60.3704]),
                                new MapPoint([184.1240,
                                    455.0240,
                                    453.2731,
                                    887.8990])]),
                                new MapPath([new MapPoint([127.7588,
                                        343.6224]),
                                    new MapPoint([888.4058,
                                        500.3972,
                                        311.7205])])],
                            new SpatialReference(3,
                                    "delectus",
                                    "dolorem",
                                    "ut"),
                                true,
                                true),
                        new TextSymbol("inventore voluptatibus delectus",
                            new MapColor(219, 79, 218),
                            new MapColor(135, 60, 143),
                                new Dimension(217.4892),
                            new MapFont(new Dimension(45.3449),
                                    "Verdana",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                888.2937,
                            new MapColor(85, 167, 156),
                            new MapColor(74, 75, 123),
                                960.1020,
                            HorizontalAlignment.Left,
                                true,
                                332.5622,
                                new Dimension(821.3870),
                                true),
                        new PopupTemplate("id quos illum",
                                "vel",
                                ["dolorem",
                                    "aperiam",
                                    "doloremque"],
                            [new FieldInfo("id",
                                    "asperiores",
                                    "sed",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "similique",
                                        "est reiciendis assumenda")),
                            new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "reprehenderit",
                                        "consequatur ut blanditiis"))],
                            [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "id",
                                    "aliquid nisi voluptas",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "title",
                                    "sed cupiditate sed",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("voluptatem error animi",
                                    "https://picsum.photos/640/480/?image=379",
                                    "e73ebafa-6b5a-7ed5-0464-3631adbb61c0",
                                    () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                    "email",
                                    true,
                                    true,
                                    true,
                                    "error"),
                            new ActionButton("veritatis ea assumenda",
                                    "https://picsum.photos/640/480/?image=1043",
                                    "40ff7650-e93a-5a1b-e318-d33be32f6f2f",
                                    () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                    "email",
                                    true,
                                    true,
                                    true,
                                    "qui")]),
                            new AttributesDictionary(),
                            true,
                            "exercitationem",
                            "asperiores",
                            new GraphicOrigin(Guid.NewGuid(),
                                "sunt",
                                5)),
                        new Thumbnail("commodi",
                            "quasi",
                            175.1847,
                            216.2349)),
                new FeatureTemplate("qui et porro provident aut sit tempore",
                    DrawingTool.Rectangle,
                        "category",
                    new Graphic(new Polygon([new MapPath([new MapPoint([979.5408,
                                    916.6065]),
                                new MapPoint([82.7172,
                                    575.6125]),
                                new MapPoint([347.1716,
                                    559.6782])]),
                                new MapPath([new MapPoint([82.6144,
                                        622.5778,
                                        352.3449,
                                        715.1298]),
                                    new MapPoint([507.0064,
                                        985.3767,
                                        360.1832]),
                                    new MapPoint([966.1536,
                                        91.3019,
                                        225.9340]),
                                    new MapPoint([415.0295,
                                        683.7040])]),
                                new MapPath([new MapPoint([799.6012,
                                        487.3320,
                                        613.7436]),
                                    new MapPoint([752.8983,
                                        195.3480,
                                        773.3017]),
                                    new MapPoint([254.2418,
                                        362.5733])])],
                            new SpatialReference(7,
                                    "sed",
                                    "aut",
                                    "est"),
                            new Point(-142.3186,
                                    51.9988,
                                    -171.2959,
                                    12.4082,
                                    135.7413,
                                new SpatialReference(6,
                                        "voluptatem",
                                        "tenetur",
                                        "numquam"),
                                    true,
                                    true,
                                    550.0555),
                                true,
                                true,
                                true),
                        new TextSymbol("natus et reprehenderit",
                            new MapColor(110, 208, 2),
                            new MapColor(224, 165, 68),
                                new Dimension(619.1900),
                            new MapFont(new Dimension(73.2039),
                                    "Verdana",
                                MapFontStyle.Oblique,
                                FontWeight.Normal,
                                TextDecoration.None),
                                617.6458,
                            new MapColor(59, 15, 180),
                            new MapColor(195, 84, 31),
                                348.6102,
                            HorizontalAlignment.Left,
                                true,
                                473.0560,
                                new Dimension(201.0775),
                                true),
                        new PopupTemplate("temporibus ipsam maxime",
                                "sit",
                                ["voluptas",
                                    "recusandae",
                                    "id",
                                    "aut"],
                            [new FieldInfo("name",
                                    "rerum",
                                    "rerum",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("title",
                                    "sapiente",
                                    "quidem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("createdAt",
                                    "repudiandae",
                                    "quia",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "omnis",
                                        "fugit quas voluptatibus"))],
                            [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "category",
                                    "aut dolor quod",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("quae quaerat sed",
                                    "https://picsum.photos/640/480/?image=497",
                                    "d7696e54-5a93-a22a-36ef-c4477f9b261f",
                                    () => { Console.WriteLine("quasi"); return Task.CompletedTask; },
                                    "token",
                                    true,
                                    true,
                                    true,
                                    "saepe"),
                            new ActionToggle("qui id voluptas",
                                    "1f7405a1-72a1-f0ad-b6ea-2418df5019e9",
                                    () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "password",
                                    "aut"),
                            new ActionButton("ea officia sequi",
                                    "https://picsum.photos/640/480/?image=881",
                                    "1558936f-b8ea-a970-f513-bfbf8e5804cf",
                                    () => { Console.WriteLine("voluptatum"); return Task.CompletedTask; },
                                    "comment",
                                    true,
                                    true,
                                    true,
                                    "et"),
                            new ActionButton("sit optio asperiores",
                                    "https://picsum.photos/640/480/?image=540",
                                    "b0133701-2c85-c966-22b4-f3b9be83cb88",
                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "laborum")]),
                            new AttributesDictionary(),
                            true,
                            "itaque",
                            "voluptatem",
                            new GraphicOrigin(Guid.NewGuid(),
                                "et",
                                7)),
                        new Thumbnail("ut",
                            "eum",
                            56.6418,
                            134.0923))],
                new Dictionary<string, Domain>() {{ "earum", new InheritedDomain("name") },
                { "consectetur", new RangeDomain("nesciunt",
        "reprehenderit",
        "updatedAt") },
                { "ea", new InheritedDomain("id") },
                { "tempora", new RangeDomain("architecto",
        "quis",
        "avatar") }
                },
                    "ea")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2001, 2, 24, 11, 15, 32),
                    new DateTime(2007, 7, 5, 5, 8, 1));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
