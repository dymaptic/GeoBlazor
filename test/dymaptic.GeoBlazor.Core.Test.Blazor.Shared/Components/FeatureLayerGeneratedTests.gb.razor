@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")"
                        OutFields="@(["ipsum",
                            "aut"])"
                        DefinitionExpression="@("quas")"
                        MinScale="@(23110.8792)"
                        MaxScale="@(49692727.9248)"
                        ObjectIdField="@("velit")"
                        GeometryType="@(FeatureGeometryType.Polyline)"
                        Title="@("ullam non et")"
                        Opacity="@(0.0447)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        ApiKey="@("illo")"
                        BlendMode="@(BlendMode.Screen)"
                        Charts="@(["delectus",
                            "explicabo"])"
                        Copyright="@("placeat")"
                        DateFieldsTimeZone="@("qui")"
                        DisplayField="@("numquam")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("delectus",
                            47720662.3025))"
                        GdbVersion="@("4.7.6.1")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2008, 10, 10, 10, 55, 28))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(835.3167)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        TypeIdField="@("porro")"
                        Types="@([new FeatureType("eb6e0d99-14eb-d23f-5750-22fe27743abb",
                                "status",
                            [new FeatureTemplate("fuga ad reiciendis",
                                DrawingTool.Point,
                                    "name",
                                new Graphic(new Polygon([new MapPath([new MapPoint([849.8592,
                                                377.9317]),
                                            new MapPoint([680.1093,
                                                45.4478])])],
                                        new SpatialReference(3,
                                                "incidunt",
                                                "autem",
                                                "voluptatem"),
                                        new Point(-34.2027,
                                                66.8019,
                                                -3.5347,
                                                65.1574,
                                                910.6017,
                                            new SpatialReference(2,
                                                    "ducimus",
                                                    "quo",
                                                    "temporibus"),
                                                true,
                                                true,
                                                958.0841),
                                            true,
                                            true,
                                            true),
                                    new TextSymbol("sunt consequatur omnis",
                                        new MapColor(242, 184, 53),
                                        new MapColor(226, 176, 60),
                                            new Dimension(767.3500),
                                        new MapFont(new Dimension(499.3278),
                                                "Helvetica",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bolder,
                                            TextDecoration.LineThrough),
                                            953.5632,
                                        new MapColor(91, 212, 190),
                                        new MapColor(213, 155, 50),
                                            319.5562,
                                        HorizontalAlignment.Right,
                                            true,
                                            481.7055,
                                            new Dimension(539.0417),
                                            true),
                                    new PopupTemplate("dolor dolor nihil",
                                            "quis",
                                            ["incidunt"],
                                        [new FieldInfo("category",
                                                "aut",
                                                "voluptatem",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("comment",
                                                "id",
                                                "iure",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Avg)],
                                        [new MediaPopupContent("ut omnis magnam",
                                                "asperiores non",
                                            [new ImageMediaInfo("quo ab illo",
                                                    "quia",
                                                    "velit quos sunt",
                                                new ImageMediaInfoValue("https://ludie.net",
                                                        "http://jeramy.net"),
                                                    268.1163)],
                                                6)],
                                        [new ExpressionInfo("return $feature['FieldName'];",
                                                "updatedAt",
                                                "qui autem itaque",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return Date();",
                                                "updatedAt",
                                                "ea non dolorem",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("molestias animi omnis",
                                                "https://picsum.photos/640/480/?image=329",
                                                "848b988e-c17b-2cfb-8f7d-06764a41f30e",
                                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                "updatedAt",
                                                true,
                                                true,
                                                true,
                                                "deserunt")]),
                                        new AttributesDictionary(),
                                        true,
                                        "repellendus",
                                        "perferendis",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "omnis",
                                            1)),
                                    new Thumbnail("voluptatem",
                                        "ut",
                                        167.2915,
                                        137.7135)),
                            new FeatureTemplate("quia quia",
                                DrawingTool.Line,
                                    "comment",
                                new Graphic(new Point(146.7636,
                                            52.3953,
                                            131.3264,
                                            27.8825,
                                            335.9210,
                                        new SpatialReference(7,
                                                "consequatur",
                                                "non",
                                                "consequatur"),
                                            true,
                                            true,
                                            72.3445),
                                    new TextSymbol("consequatur nemo et",
                                        new MapColor(194, 105, 230),
                                        new MapColor(114, 65, 223),
                                            new Dimension(444.9012),
                                        new MapFont(new Dimension(511.4853),
                                                "Helvetica",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            398.7323,
                                        new MapColor(210, 151, 246),
                                        new MapColor(51, 80, 87),
                                            158.5943,
                                        HorizontalAlignment.Right,
                                            true,
                                            756.3260,
                                            new Dimension(747.4070),
                                            true),
                                    new PopupTemplate("illum ipsa veniam",
                                            "corrupti",
                                            ["ut"],
                                        [new FieldInfo("group",
                                                "consequatur",
                                                "sed",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("phone",
                                                "laborum",
                                                "et",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count)],
                                        [new TextPopupContent("cumque minima numquam"),
                                        new TextPopupContent("ad ab aliquid")],
                                        [new ExpressionInfo("return $feature['FieldName'];",
                                                "title",
                                                "repellat ut earum",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "status",
                                                "quia labore qui",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("qui rerum nesciunt",
                                                "https://picsum.photos/640/480/?image=224",
                                                "519b422b-7dd5-f115-bc53-f9d14ed00976",
                                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                "avatar",
                                                true,
                                                true,
                                                true,
                                                "et")]),
                                        new AttributesDictionary(),
                                        true,
                                        "incidunt",
                                        "vitae",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "explicabo",
                                            1)),
                                    new Thumbnail("occaecati",
                                        "quas",
                                        84.9567,
                                        145.2918))],
                                new CodedValueDomain<string>([new CodedValue<string>(),
                                    new CodedValue<string>()],
                                    "email"),
                                "ab"),
                        new FeatureType("0cf5e450-1f4c-4a59-3fc0-fe2e461fdcfe",
                                "comment",
                            [new FeatureTemplate("natus voluptatum illum repellat",
                                DrawingTool.None,
                                    "email",
                                new Graphic(new Extent(92.7901,
                                            -170.0152,
                                            -56.4934,
                                            57.3442,
                                            324.3330,
                                            355.4930,
                                            194.7209,
                                            551.1458,
                                        new SpatialReference(6,
                                                "corrupti",
                                                "sapiente",
                                                "ut"),
                                            true,
                                            true),
                                    new TextSymbol("omnis excepturi eius",
                                        new MapColor(144, 182, 242),
                                        new MapColor(253, 252, 50),
                                            new Dimension(656.6453),
                                        new MapFont(new Dimension(181.4858),
                                                "Helvetica",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.Underline),
                                            85.6143,
                                        new MapColor(209, 89, 37),
                                        new MapColor(161, 204, 61),
                                            105.6414,
                                        HorizontalAlignment.Center,
                                            true,
                                            855.3659,
                                            new Dimension(699.7199),
                                            true),
                                    new PopupTemplate("accusantium omnis eius",
                                            "voluptate",
                                            ["nam",
                                                "sint"],
                                        [new FieldInfo("avatar",
                                                "ut",
                                                "est",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                        [new MediaPopupContent("explicabo laborum sit",
                                                "praesentium sint",
                                            [new ImageMediaInfo("et inventore qui",
                                                    "quo",
                                                    "incidunt a autem",
                                                new ImageMediaInfoValue("https://victor.org",
                                                        "https://eveline.biz"),
                                                    403.4942),
                                            new ImageMediaInfo("id quae officia",
                                                    "nam",
                                                    "sit voluptatum exercitationem",
                                                new ImageMediaInfoValue("https://myrtle.com",
                                                        "http://veronica.com"),
                                                    902.2700)],
                                                2)],
                                        [new ExpressionInfo("return Date();",
                                                "group",
                                                "tempora non placeat",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Name;",
                                                "password",
                                                "ad vero nesciunt",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("vel nam eos",
                                                "https://picsum.photos/640/480/?image=304",
                                                "ec2a1c80-00dd-5351-d61c-b2dd7fed3849",
                                                () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                                                "updatedAt",
                                                true,
                                                true,
                                                true,
                                                "ipsam")]),
                                        new AttributesDictionary(),
                                        true,
                                        "magnam",
                                        "nihil",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "quasi",
                                            9)),
                                    new Thumbnail("eveniet",
                                        "alias",
                                        98.8736,
                                        167.8880)),
                            new FeatureTemplate("nulla quis",
                                DrawingTool.Polygon,
                                    "email",
                                new Graphic(new Polyline([new MapPath([new MapPoint([622.3452]),
                                            new MapPoint([932.4359])]),
                                            new MapPath([new MapPoint([70.1051])])],
                                        new SpatialReference(4,
                                                "minus",
                                                "ad",
                                                "blanditiis"),
                                            true,
                                            true),
                                    new TextSymbol("sit minima odit",
                                        new MapColor(235, 209, 24),
                                        new MapColor(49, 18, 40),
                                            new Dimension(862.1239),
                                        new MapFont(new Dimension(429.8480),
                                                "Arial",
                                            MapFontStyle.Italic,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            960.9470,
                                        new MapColor(81, 83, 119),
                                        new MapColor(198, 253, 229),
                                            719.1964,
                                        HorizontalAlignment.Center,
                                            true,
                                            688.9680,
                                            new Dimension(980.1033),
                                            true),
                                    new PopupTemplate("ut illum repudiandae",
                                            "aut",
                                            ["debitis",
                                                "ea"],
                                        [new FieldInfo("token",
                                                "incidunt",
                                                "cumque",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum)],
                                        [new MediaPopupContent("laborum qui velit",
                                                "et magnam molestias",
                                            [new ImageMediaInfo("illo iure aspernatur",
                                                    "harum",
                                                    "omnis nisi ratione",
                                                new ImageMediaInfoValue("http://monica.net",
                                                        "https://lucio.biz"),
                                                    115.4558)],
                                                6),
                                        new AttachmentsPopupContent("qui delectus eos",
                                                "assumenda non et",
                                                AttachmentsPopupContentDisplayType.Auto)],
                                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "name",
                                                "sed autem ea",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("autem veritatis et",
                                                "https://picsum.photos/640/480/?image=143",
                                                "6f6f547c-8306-7d3c-2aba-82d3f074c6dc",
                                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                "group",
                                                true,
                                                true,
                                                true,
                                                "eum")]),
                                        new AttributesDictionary(),
                                        true,
                                        "exercitationem",
                                        "rerum",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "reiciendis",
                                            1)),
                                    new Thumbnail("quia",
                                        "nesciunt",
                                        196.3673,
                                        231.8681))],
                                new CodedValueDomain<string>([new CodedValue<string>(),
                                    new CodedValue<string>()],
                                    "token"),
                                "fuga")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Seconds)"
                            Value="@(168.3581)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("laborum")"
                            EndField="@("expedita")"
                            Stops="@([new DateTime(2008, 7, 18, 1, 51, 33)])"
                            TimeZone="@("Europe/Bucharest")"
                            TrackIdField="@("assumenda")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Weeks)"
                                Value="@(438.7253)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2011, 8, 19, 3, 2, 0))"
                                End="@(new DateTime(2018, 5, 8, 18, 3, 32))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2004, 6, 6, 0, 30, 11))"
                            End="@(new DateTime(2008, 7, 13, 1, 25, 29))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("molestiae quae nihil quam")"
                            DrawingTool="@(DrawingTool.RightArrow)"
                            Name="@("name")"
                            Thumbnail="@(new Thumbnail("distinctio",
                                "qui",
                                15.0503,
                                205.4350))">
                            <Graphic 
                                Geometry="@(new Extent(76.9877,
                                        -60.5948,
                                        -73.5427,
                                        72.3788,
                                        573.2028,
                                        603.3600,
                                        710.2956,
                                        0.7205,
                                    new SpatialReference(6,
                                            "voluptas",
                                            "in",
                                            "recusandae"),
                                        true,
                                        true))"
                                Symbol="@(new TextSymbol("sed architecto voluptate",
                                    new MapColor(170, 155, 160),
                                    new MapColor(214, 123, 9),
                                        new Dimension(741.6243),
                                    new MapFont(new Dimension(397.8884),
                                            "Helvetica",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        114.9255,
                                    new MapColor(111, 225, 234),
                                    new MapColor(184, 106, 28),
                                        315.1406,
                                    HorizontalAlignment.Left,
                                        true,
                                        89.9101,
                                        new Dimension(76.0501),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("neque voluptatem at",
                                        "est",
                                        ["et",
                                            "voluptatibus"],
                                    [new FieldInfo("name",
                                            "voluptatem",
                                            "dignissimos",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("updatedAt",
                                            "delectus",
                                            "quod",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortDateLeShortTime),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                    [new FieldsPopupContent([new FieldInfo("status",
                                                "mollitia",
                                                "repudiandae",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                            "omnis distinctio voluptas",
                                            "incidunt sit quod"),
                                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "facere",
                                                "architecto maxime in"))],
                                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "group",
                                            "in quo sed",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "createdAt",
                                            "iure vitae in",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                        [new ActionButton("ea sed explicabo",
                                            "https://picsum.photos/640/480/?image=1063",
                                            "2b0f4262-ebc1-97b8-2155-ced1f1ac0971",
                                            () => { Console.WriteLine("quidem"); return Task.CompletedTask; },
                                            "updatedAt",
                                            true,
                                            true,
                                            true,
                                            "a"),
                                            new ActionButton("deleniti minus autem",
                                                "https://picsum.photos/640/480/?image=278",
                                                "f1746b7b-74e3-8756-7455-667aef773c3b",
                                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                                "updatedAt",
                                                true,
                                                true,
                                                true,
                                                "accusantium")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("explicabo")"
                                AggregateGeometries="@("commodi")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "ullam",
                                    7))">
                            </Graphic>
                        </FeatureTemplate>
                        <SpatialReference 
                            Wkid="@(8)"
                            ImageCoordinateSystem="@("et")"
                            Wkt="@("quae")"
                            Wkt2="@("quia")">
                        </SpatialReference>
                        <Graphic 
                            Geometry="@(new Extent(-91.7478,
                                    26.7233,
                                    -69.7367,
                                    -68.6369,
                                    961.2910,
                                    22.6976,
                                    164.0026,
                                    207.3563,
                                new SpatialReference(4,
                                        "pariatur",
                                        "doloremque",
                                        "laboriosam"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("inventore tempora quibusdam",
                                new MapColor(170, 25, 28),
                                new MapColor(22, 155, 91),
                                    new Dimension(332.1551),
                                new MapFont(new Dimension(560.9914),
                                        "Helvetica",
                                    MapFontStyle.Oblique,
                                    FontWeight.Lighter,
                                    TextDecoration.None),
                                    538.9020,
                                new MapColor(236, 185, 5),
                                new MapColor(63, 211, 159),
                                    356.5188,
                                HorizontalAlignment.Right,
                                    true,
                                    243.6935,
                                    new Dimension(178.1668),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("consequuntur")"
                            AggregateGeometries="@("omnis")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "quod",
                                2))">
                            <PopupTemplate 
                                Title="@("dolorem asperiores eius")"
                                StringContent="@("delectus")"
                                OutFields="@(["et"])"
                                FieldInfos="@([new FieldInfo("status",
                                        "quos",
                                        "dolores",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Max)])"
                                Content="@([new TextPopupContent("distinctio exercitationem voluptatem")])"
                                ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                        "phone",
                                        "aspernatur doloremque corrupti",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionButton("est id fugiat",
                                    "https://picsum.photos/640/480/?image=634",
                                    "622f2267-bd03-646e-6652-312193316f7f",
                                    () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                                    "id",
                                    true,
                                    true,
                                    true,
                                    "officia")])">
                            </PopupTemplate>
                        </Graphic>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(151, 185, 97),
                                        new MapColor(127, 214, 37))]),
                                    135.4442,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(387.9496,
                                            626.7432)],
                                        "ut",
                                        "et",
                                        "suscipit"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(974.7425,
                                            945.2509),
                                    new AuthoringInfoField1ClassBreakInfos(923.2125,
                                            114.6125)],
                                        "reprehenderit",
                                        "est",
                                        "doloribus"),
                                    ["qui"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "nemo",
                                    true,
                                LengthUnit.Millimeters,
                                    1.8177,
                                    151.0507,
                                    826.7055,
                                    645.8920))">
                        </UniqueValueRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("deleniti delectus rerum")"
                            StringContent="@("et")"
                            OutFields="@(["repudiandae",
                                "consequatur"])"
                            FieldInfos="@([new FieldInfo("email",
                                    "qui",
                                    "quia",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("name",
                                    "laudantium",
                                    "officiis",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Count)])"
                            Content="@([new RelationshipPopupContent("quae et sed",
                                    "itaque sunt sit",
                                    2,
                                    "facilis",
                                [new RelatedRecordsInfoFieldOrder("quia",
                                    OrderBy.Desc)],
                                    7)])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "email",
                                    "eos non laborum",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("quia ut ut",
                                "https://picsum.photos/640/480/?image=489",
                                "c8f95cb6-135a-10aa-cd6a-6d9b7abb707a",
                                () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "voluptatem"),
                                new ActionButton("occaecati perferendis expedita",
                                    "https://picsum.photos/640/480/?image=589",
                                    "dc9a1a62-04b7-d98d-1d16-dabf14224825",
                                    () => { Console.WriteLine("voluptates"); return Task.CompletedTask; },
                                    "token",
                                    true,
                                    true,
                                    true,
                                    "praesentium")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("facilis")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("sint")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowAfter)"
                            LabelExpression="@("commodi")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(22948462.9071)"
                            MinScale="@(10524.7880)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(362.9015))"
                            Symbol="@(new TextSymbol("aspernatur cumque voluptatum",
                                new MapColor(238, 52, 194),
                                new MapColor(24, 170, 81),
                                    new Dimension(282.6817),
                                new MapFont(new Dimension(56.0832),
                                        "Bookman",
                                    MapFontStyle.Italic,
                                    FontWeight.Bold,
                                    TextDecoration.Underline),
                                    801.8802,
                                new MapColor(211, 167, 84),
                                new MapColor(115, 223, 197),
                                    871.4294,
                                HorizontalAlignment.Left,
                                    true,
                                    407.4463,
                                    new Dimension(740.4917),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Name = 'John Doe'")">
                        </Label>
                        <Extent 
                            Xmax="@(-166.5017)"
                            Xmin="@(-109.4421)"
                            Ymax="@(44.4235)"
                            Ymin="@(-25.0022)"
                            Zmax="@(602.2945)"
                            Zmin="@(123.1311)"
                            Mmax="@(298.4966)"
                            Mmin="@(434.5778)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(8)"
                                ImageCoordinateSystem="@("consequatur")"
                                Wkt="@("corrupti")"
                                Wkt2="@("sed")">
                            </SpatialReference>
                        </Extent>
                        <FormTemplate 
                            Title="@("inventore aut cum")"
                            Description="@("expedita occaecati voluptatem")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new GroupElement("maiores pariatur quidem",
                                [new GroupElement("consequatur ducimus voluptatem",
                                    [new GroupElement("ut aut et",
                                        [new GroupElement("quis laboriosam",
                                            [new FieldElement("category",
                                                    "voluptatum",
                                                    "a earum",
                                                    "nisi",
                                                    "deleniti",
                                                    "laudantium",
                                                    "vero",
                                                    new CodedValueDomain<string>([new CodedValue<string>(),
                                                        new CodedValue<string>()],
                                                        "name"),
                                                    default,
                                                    "voluptates"),
                                            new GroupElement("perferendis voluptatem aspernatur quia",
                                                [new FieldElement("status",
                                                        "accusantium",
                                                        "qui autem",
                                                        "facere",
                                                        "qui",
                                                        "aliquam",
                                                        "nobis",
                                                        null,
                                                        null,
                                                        "accusantium")],
                                                InitialState.Collapsed,
                                                    "eveniet",
                                                    "consequatur")],
                                            InitialState.Collapsed,
                                                "quo",
                                                "dolor"),
                                        new GroupElement("consequatur sint labore",
                                            [new GroupElement("qui officia",
                                                [new GroupElement("cupiditate adipisci occaecati",
                                                    [new FieldElement()],
                                                    InitialState.Collapsed,
                                                        "cum",
                                                        "voluptatem")],
                                                InitialState.Expanded,
                                                    "aut",
                                                    "reprehenderit"),
                                            new GroupElement("alias cupiditate adipisci et",
                                                [new FieldElement("updatedAt",
                                                        "illum",
                                                        "ducimus aut",
                                                        "ut",
                                                        "rerum",
                                                        "iste",
                                                        "iusto",
                                                        null,
                                                        null,
                                                        "molestiae"),
                                                new GroupElement("dolores soluta nihil",
                                                    [new FieldElement(),
                                                    new GroupElement()],
                                                    InitialState.Collapsed,
                                                        "suscipit",
                                                        "vel")],
                                                InitialState.Collapsed,
                                                    "sit",
                                                    "vitae")],
                                            InitialState.Collapsed,
                                                "autem",
                                                "vel")],
                                        InitialState.Expanded,
                                            "velit",
                                            "ea")],
                                    InitialState.Expanded,
                                        "ut",
                                        "esse"),
                                new GroupElement("ad tempore aut hic",
                                    [new GroupElement("incidunt at non et",
                                        [new GroupElement("et autem ex",
                                            [new FieldElement("category",
                                                    "et",
                                                    "natus itaque exercitationem accusamus",
                                                    "quis",
                                                    "aut",
                                                    "architecto",
                                                    "sit",
                                                    new CodedValueDomain<string>([new CodedValue<string>(),
                                                        new CodedValue<string>()],
                                                        "createdAt"),
                                                    default,
                                                    "molestias")],
                                            InitialState.Expanded,
                                                "est",
                                                "animi")],
                                        InitialState.Collapsed,
                                            "culpa",
                                            "id"),
                                    new FieldElement("id",
                                            "sapiente",
                                            "asperiores ut",
                                            "explicabo",
                                            "quasi",
                                            "porro",
                                            "rerum",
                                            new CodedValueDomain<string>([new CodedValue<string>()],
                                                "status"),
                                            default,
                                            "quo")],
                                    InitialState.Collapsed,
                                        "voluptatem",
                                        "ut")],
                                InitialState.Expanded,
                                    "dolores",
                                    "voluptatem")])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                    "status",
                                    "a expedita dolores",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("dolore")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("phone")"
                            Alias="@("voluptatem")"
                            Description="@("eius repudiandae rerum sunt")"
                            Length="@(4)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "totam" })"
                            ValueType="@(FieldValueType.CountOrAmount)"
                            Domain="@(new CodedValueDomain<string>([new CodedValue<string>()],
                                "id"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("ducimus",
                                18625425.0495)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(732.1106,
                                new Polyline([new MapPath([new MapPoint([93.9416,
                                            328.5718])])],
                                    new SpatialReference(4,
                                            "architecto",
                                            "culpa",
                                            "asperiores"),
                                        true,
                                        true),
                                    [2,
                                        7],
                                SpatialRelationship.IndexIntersects,
                                new TimeExtent(new DateTime(2017, 4, 4, 15, 32, 33),
                                        new DateTime(2023, 11, 6, 2, 19, 19)),
                                    QueryUnits.NauticalMiles,
                                    "1 = 1"))"
                            IncludedEffect="@([new Effect("qui",
                                8423890.8364),
                                new Effect("nihil",
                                    47029566.6387)])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return Date();",
                                    "vitae molestiae et"))"
                            Mode="@(ElevationInfoMode.RelativeToGround)"
                            Offset="@(324.1535)"
                            Unit="@(ElevationUnit.NauticalMiles)">
                        </FeatureLayerBaseElevationInfo>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var addAttachmentMethodResult = await featureLayer.AddAttachment(new Graphic(new Polygon([new MapPath([new MapPoint([860.5707]),
                        new MapPoint([388.1136])]),
                        new MapPath([new MapPoint([916.4694,
                                561.6544]),
                            new MapPoint([63.2207])])],
                    new SpatialReference(7,
                            "id",
                            "aut",
                            "dolorem"),
                    new Point(-73.2010,
                            79.7203,
                            97.4940,
                            -60.9634,
                            667.3696,
                        new SpatialReference(7,
                                "sit",
                                "dolor",
                                "excepturi"),
                            true,
                            true,
                            829.8006),
                        true,
                        true,
                        true),
                new TextSymbol("eligendi perspiciatis tempora",
                    new MapColor(82, 108, 200),
                    new MapColor(89, 174, 174),
                        new Dimension(266.4648),
                    new MapFont(new Dimension(182.2795),
                            "Helvetica",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        280.5724,
                    new MapColor(139, 22, 108),
                    new MapColor(240, 187, 175),
                        727.9898,
                    HorizontalAlignment.Right,
                        true,
                        859.9912,
                        new Dimension(898.4877),
                        true),
                new PopupTemplate("tempore repellat aspernatur",
                        "non",
                        ["rem",
                            "blanditiis"],
                    [new FieldInfo("comment",
                            "sint",
                            "deserunt",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("id",
                            "ipsam",
                            "reiciendis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Min)],
                    [new RelationshipPopupContent("harum nemo est",
                            "excepturi est et voluptas",
                            2,
                            "iure",
                        [new RelatedRecordsInfoFieldOrder("ipsum",
                            OrderBy.Desc)],
                            2)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "title",
                            "neque consequuntur nihil",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("ut molestiae beatae",
                            "https://picsum.photos/640/480/?image=191",
                            "0d980396-45bd-27c5-88e5-5f2232705f56",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "id")]),
                    new AttributesDictionary(),
                    true,
                    "quia",
                    "et",
                    new GraphicOrigin(Guid.NewGuid(),
                        "harum",
                        3)),
                default);
        Assert.IsNotNull(addAttachmentMethodResult);
        var deleteAttachmentsMethodResult = await featureLayer.DeleteAttachments(new Graphic(new Polygon([new MapPath([new MapPoint([881.7221,
                            263.7607])]),
                        new MapPath([new MapPoint([685.1308,
                                571.9706])])],
                    new SpatialReference(5,
                            "rerum",
                            "voluptas",
                            "magni"),
                    new Point(-77.9570,
                            86.5435,
                            179.0043,
                            -63.6291,
                            404.8820,
                        new SpatialReference(8,
                                "totam",
                                "voluptas",
                                "rerum"),
                            true,
                            true,
                            541.6633),
                        true,
                        true,
                        true),
                new TextSymbol("sunt et architecto",
                    new MapColor(190, 222, 107),
                    new MapColor(211, 110, 4),
                        new Dimension(731.3080),
                    new MapFont(new Dimension(339.4646),
                            "Bookman",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        601.3501,
                    new MapColor(76, 15, 77),
                    new MapColor(34, 141, 188),
                        404.4112,
                    HorizontalAlignment.Center,
                        true,
                        508.7904,
                        new Dimension(381.4225),
                        true),
                new PopupTemplate("ut in qui",
                        "qui",
                        ["possimus"],
                    [new FieldInfo("status",
                            "fugit",
                            "voluptas",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new AttachmentsPopupContent("quo voluptatibus pariatur",
                            "reiciendis sit nisi eveniet",
                            AttachmentsPopupContentDisplayType.Auto),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "harum",
                                "cupiditate eaque laboriosam"))],
                    [new ExpressionInfo("return $feature.Name;",
                            "password",
                            "exercitationem nihil omnis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("ab dolor modi",
                            "https://picsum.photos/640/480/?image=964",
                            "1181697e-f510-b2d0-e98a-c0c8edae1da9",
                            () => { Console.WriteLine("id"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "qui"),
                            new ActionButton("fugit eius nihil",
                                "https://picsum.photos/640/480/?image=773",
                                "ae63f2ab-1bdf-ab6f-cf3a-4a634bb839e9",
                                () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "quo")]),
                    new AttributesDictionary(),
                    true,
                    "dolores",
                    "reprehenderit",
                    new GraphicOrigin(Guid.NewGuid(),
                        "molestias",
                        9)),
                [2]);
        Assert.IsNotNull(deleteAttachmentsMethodResult);
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("culpa",
                    ["atque",
                        "non"],
                    true,
                    [7,
                        3],
                    ["voluptatem"],
                    "id",
                    197.7616,
                    [6],
                    true,
                    [4],
                    10.2165,
                    "Street = '123 Main St.'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2021, 9, 20, 7, 39, 30),
                        "veniam",
                        "cum ea non"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Point(-62.7511,
                        -60.3602,
                        46.1839,
                        -46.3058,
                        649.6340,
                    new SpatialReference(6,
                            "aut",
                            "id",
                            "dolor"),
                        true,
                        true,
                        831.2787),
                new TextSymbol("repellendus officia maxime",
                    new MapColor(44, 116, 22),
                    new MapColor(115, 8, 216),
                        new Dimension(153.4448),
                    new MapFont(new Dimension(875.0878),
                            "Bookman",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        315.7976,
                    new MapColor(18, 143, 32),
                    new MapColor(183, 60, 252),
                        512.5257,
                    HorizontalAlignment.Center,
                        true,
                        215.9005,
                        new Dimension(468.9890),
                        true),
                new PopupTemplate("quia perferendis occaecati",
                        "velit",
                        ["assumenda",
                            "veniam"],
                    [new FieldInfo("group",
                            "velit",
                            "est",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new AttachmentsPopupContent("dolores possimus in",
                            "ut aut dolor debitis",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("non rerum facilis")],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "phone",
                            "molestias enim autem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "avatar",
                            "voluptatem sint voluptatem",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("voluptas ut animi",
                            "https://picsum.photos/640/480/?image=1005",
                            "37a5b5b2-90d7-5265-6532-24722cb17802",
                            () => { Console.WriteLine("assumenda"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "non")]),
                    new AttributesDictionary(),
                    true,
                    "et",
                    "eum",
                    new GraphicOrigin(Guid.NewGuid(),
                        "qui",
                        3)),
                5,
                default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        ListMode testListMode = ListMode.Show;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Multiply;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("var length = Geometry($feature).length; return length;",
                        "adipisci quisquam ut"),
                ElevationInfoMode.AbsoluteHeight,
                    221.9425,
                ElevationUnit.Feet);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("illo",
                    45503477.2294)],
                    true,
                new FeatureFilter(272.3407,
                    new Point(-70.5496,
                            78.2449,
                            23.1742,
                            37.0033,
                            499.7336,
                        new SpatialReference(4,
                                "aut",
                                "accusantium",
                                "corporis"),
                            true,
                            true,
                            743.9473),
                        [5],
                    SpatialRelationship.Touches,
                    new TimeExtent(new DateTime(2013, 7, 27, 20, 10, 33),
                            new DateTime(2010, 5, 11, 7, 22, 42)),
                        QueryUnits.Meters,
                        "1 = 1"),
                    [new Effect("laborum",
                        29344445.5521)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "token",
                    "fuga",
                    "architecto numquam",
                    2,
                    true,
                    true,
                    new { Value = "neque" },
                FieldValueType.Coordinate,
                    new CodedValueDomain<string>([new CodedValue<string>()],
                        "avatar"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("quae");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("labore suscipit harum",
                    "molestiae est illum ducimus",
                    true,
                [new GroupElement("eum esse cum",
                    [new FieldElement("updatedAt",
                            "ut",
                            "officiis modi",
                            "laboriosam",
                            "nemo",
                            "autem",
                            "ratione",
                            new CodedValueDomain<string>([new CodedValue<string>()],
                                "avatar"),
                            default,
                            "asperiores")],
                    InitialState.Collapsed,
                        "est",
                        "ut")],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "status",
                        "et quis mollitia",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(176.7081,
                    -45.8653,
                    -2.9727,
                    -45.2260,
                    945.2018,
                    146.5113,
                    420.5279,
                    735.8836,
                new SpatialReference(2,
                        "fugiat",
                        "aut",
                        "temporibus"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterAfter,
                    "et",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    32532862.0522,
                    19698.6327,
                    true,
                    new Dimension(308.6307),
                new TextSymbol("nisi nihil veniam",
                    new MapColor(56, 239, 110),
                    new MapColor(204, 139, 80),
                        new Dimension(620.1460),
                    new MapFont(new Dimension(200.4623),
                            "Courier New",
                        MapFontStyle.Oblique,
                        FontWeight.Bolder,
                        TextDecoration.LineThrough),
                        856.2231,
                    new MapColor(94, 36, 5),
                    new MapColor(5, 238, 149),
                        334.7379,
                    HorizontalAlignment.Right,
                        true,
                        904.7440,
                        new Dimension(902.5556),
                        true),
                    true,
                    "Street = '123 Main St.'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("quis",
                SortOrder.Ascending,
                    "quidem"),
            new OrderedLayerOrderBy("aliquam",
                SortOrder.Ascending,
                    "rem")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("soluta tempora illo",
                    new MapColor(13, 3, 75),
                    new MapColor(152, 158, 71),
                        new Dimension(769.5746),
                    new MapFont(new Dimension(993.8371),
                            "Bookman",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        509.3190,
                    new MapColor(110, 32, 8),
                    new MapColor(214, 206, 118),
                        66.5747,
                    HorizontalAlignment.Right,
                        true,
                        938.1030,
                        new Dimension(176.1415),
                        true),
                    "ut",
                [new RotationVariable("pariatur",
                    Axis.Heading,
                    RotationType.Geographic,
                    new VisualVariableLegendOptions(true,
                            "quasi doloribus cumque"),
                        "quis",
                        "vel doloribus nisi")],
                new AuthoringInfo(ClassificationMethod.Manual,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(225, 64, 24),
                            new MapColor(70, 91, 20))]),
                        129.4093,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(147.9910,
                                837.0885)],
                            "consectetur",
                            "saepe",
                            "atque"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(447.4195,
                                627.5824),
                        new AuthoringInfoField1ClassBreakInfos(20.5176,
                                174.0848)],
                            "sit",
                            "qui",
                            "dicta"),
                        ["officia",
                            "ipsum"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "aut",
                        true,
                    LengthUnit.Decimeters,
                        874.8450,
                        756.4191,
                        117.9981,
                        827.0634));
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(1,
                    "inventore",
                    "temporibus",
                    "et");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("corporis dolorem repellendus doloremque",
                DrawingTool.Arrow,
                    "password",
                new Graphic(new Polyline([new MapPath([new MapPoint([405.5120,
                                75.2681])])],
                        new SpatialReference(3,
                                "expedita",
                                "natus",
                                "in"),
                            true,
                            true),
                    new TextSymbol("maiores nihil facilis",
                        new MapColor(215, 196, 123),
                        new MapColor(207, 23, 244),
                            new Dimension(848.7503),
                        new MapFont(new Dimension(537.7830),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            471.5297,
                        new MapColor(211, 247, 219),
                        new MapColor(70, 47, 147),
                            226.1793,
                        HorizontalAlignment.Center,
                            true,
                            991.4948,
                            new Dimension(411.1286),
                            true),
                    new PopupTemplate("omnis excepturi magni",
                            "dolor",
                            ["veniam",
                                "dolorem"],
                        [new FieldInfo("token",
                                "ea",
                                "dignissimos",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("title",
                                "est",
                                "qui",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new FieldsPopupContent([new FieldInfo("title",
                                    "molestias",
                                    "ducimus",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "earum inventore ratione natus",
                                "culpa laborum deleniti")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "status",
                                "tempore ullam nam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "category",
                                "nihil itaque est",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                            [new ActionButton("ut aliquam cupiditate",
                                "https://picsum.photos/640/480/?image=93",
                                "54749faf-7c29-6221-4d6b-a0bf80b64d0f",
                                () => { Console.WriteLine("explicabo"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "vitae"),
                                new ActionButton("sit quis provident",
                                    "https://picsum.photos/640/480/?image=30",
                                    "aaa03f6e-172a-d07d-7dac-b5297f9b4e12",
                                    () => { Console.WriteLine("accusantium"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "dolor")]),
                        new AttributesDictionary(),
                        true,
                        "velit",
                        "cupiditate",
                        new GraphicOrigin(Guid.NewGuid(),
                            "placeat",
                            3)),
                    new Thumbnail("voluptatem",
                        "hic",
                        69.4493,
                        56.2644))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2020, 2, 15, 14, 14, 41),
                    new DateTime(2009, 5, 19, 21, 3, 31));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("et",
                    "fugiat",
                new TimeExtent(new DateTime(2011, 10, 22, 5, 7, 54),
                        new DateTime(2021, 11, 26, 19, 14, 3)),
                new TimeInterval(TemporalTime.Milliseconds,
                        228.1242),
                    [new DateTime(2012, 9, 6, 14, 11, 47)],
                    "Asia/Kathmandu",
                    "dolorem");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Weeks,
                    992.8012);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("b01bf5a0-316c-f334-de9e-70a1bcdf0b9d",
                    "phone",
                [new FeatureTemplate("ut consequatur quaerat at",
                    DrawingTool.Point,
                        "createdAt",
                    new Graphic(new Extent(57.3553,
                                174.8464,
                                -71.1218,
                                -44.6777,
                                741.4769,
                                399.2279,
                                939.9934,
                                520.5645,
                            new SpatialReference(5,
                                    "pariatur",
                                    "omnis",
                                    "sed"),
                                true,
                                true),
                        new TextSymbol("ipsa et quia",
                            new MapColor(46, 5, 210),
                            new MapColor(48, 148, 57),
                                new Dimension(519.8179),
                            new MapFont(new Dimension(100.4638),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                286.4927,
                            new MapColor(203, 53, 111),
                            new MapColor(51, 185, 209),
                                962.0421,
                            HorizontalAlignment.Center,
                                true,
                                174.7539,
                                new Dimension(201.7967),
                                true),
                        new PopupTemplate("quae beatae ut",
                                "quia",
                                ["omnis"],
                            [new FieldInfo("group",
                                    "velit",
                                    "repudiandae",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Min)],
                            [new FieldsPopupContent([new FieldInfo("group",
                                        "vel",
                                        "nisi",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                    "dolorem non rerum voluptatem",
                                    "voluptatibus excepturi aspernatur"),
                            new FieldsPopupContent([new FieldInfo("name",
                                        "saepe",
                                        "qui",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("title",
                                        "sint",
                                        "totam",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Stddev)],
                                    "quidem qui qui repellat",
                                    "numquam porro rerum")],
                            [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "title",
                                    "eum itaque qui",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "token",
                                    "non optio quia",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                                [new ActionButton("aut aut voluptate",
                                    "https://picsum.photos/640/480/?image=138",
                                    "2c05c123-0642-7a91-2ed1-58cff5a84137",
                                    () => { Console.WriteLine("officiis"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "nulla")]),
                            new AttributesDictionary(),
                            true,
                            "sequi",
                            "quod",
                            new GraphicOrigin(Guid.NewGuid(),
                                "aut",
                                2)),
                        new Thumbnail("vitae",
                            "iusto",
                            91.1900,
                            205.9943)),
                new FeatureTemplate("alias voluptas nesciunt quo",
                    DrawingTool.Circle,
                        "phone",
                    new Graphic(new Extent(-136.1471,
                                179.3415,
                                89.7221,
                                0.9926,
                                670.1539,
                                707.4618,
                                659.8015,
                                201.7081,
                            new SpatialReference(3,
                                    "et",
                                    "sequi",
                                    "quis"),
                                true,
                                true),
                        new TextSymbol("dolorum illum quia",
                            new MapColor(27, 155, 160),
                            new MapColor(52, 67, 84),
                                new Dimension(358.8443),
                            new MapFont(new Dimension(107.0564),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.None),
                                102.1982,
                            new MapColor(241, 33, 240),
                            new MapColor(189, 222, 54),
                                93.8527,
                            HorizontalAlignment.Left,
                                true,
                                805.3616,
                                new Dimension(183.8752),
                                true),
                        new PopupTemplate("laudantium esse commodi",
                                "veniam",
                                ["occaecati",
                                    "eos"],
                            [new FieldInfo("comment",
                                    "repellat",
                                    "nam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("token",
                                    "qui",
                                    "reprehenderit",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                            [new RelationshipPopupContent("quos laboriosam assumenda",
                                    "quibusdam harum dicta ut",
                                    8,
                                    "pariatur",
                                [new RelatedRecordsInfoFieldOrder("consectetur",
                                    OrderBy.Desc)],
                                    6)],
                            [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "title",
                                    "consectetur velit placeat",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "avatar",
                                    "culpa quibusdam maiores",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                                [new ActionButton("occaecati aut fugit",
                                    "https://picsum.photos/640/480/?image=484",
                                    "ea7cab6d-d3ed-3f8b-1f41-b04f6cecf546",
                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "et")]),
                            new AttributesDictionary(),
                            true,
                            "cumque",
                            "cumque",
                            new GraphicOrigin(Guid.NewGuid(),
                                "nihil",
                                5)),
                        new Thumbnail("modi",
                            "consequatur",
                            99.1652,
                            83.2845))],
                    new CodedValueDomain<string>([new CodedValue<string>(),
                        new CodedValue<string>()],
                        "token"),
                    "laboriosam"),
            new FeatureType("8dab144c-e943-2dfa-7355-6a6819efcc23",
                    "id",
                [new FeatureTemplate("aut voluptas",
                    DrawingTool.Circle,
                        "category",
                    new Graphic(new Polygon([new MapPath([new MapPoint([772.6013,
                                    405.3553])])],
                            new SpatialReference(9,
                                    "vero",
                                    "facilis",
                                    "fugiat"),
                            new Point(-162.5329,
                                    62.2148,
                                    -40.2712,
                                    -52.4472,
                                    226.5482,
                                new SpatialReference(2,
                                        "animi",
                                        "possimus",
                                        "velit"),
                                    true,
                                    true,
                                    13.9484),
                                true,
                                true,
                                true),
                        new TextSymbol("nostrum amet totam",
                            new MapColor(245, 231, 119),
                            new MapColor(111, 11, 240),
                                new Dimension(46.0217),
                            new MapFont(new Dimension(614.3985),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Lighter,
                                TextDecoration.Underline),
                                449.6894,
                            new MapColor(220, 127, 125),
                            new MapColor(138, 209, 144),
                                642.0311,
                            HorizontalAlignment.Left,
                                true,
                                184.9017,
                                new Dimension(344.9894),
                                true),
                        new PopupTemplate("veritatis in eligendi",
                                "architecto",
                                ["et",
                                    "harum"],
                            [new FieldInfo("title",
                                    "expedita",
                                    "molestiae",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("updatedAt",
                                    "facere",
                                    "et",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new FieldsPopupContent([new FieldInfo("name",
                                        "deserunt",
                                        "tenetur",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("password",
                                        "odit",
                                        "quam",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev)],
                                    "id iusto",
                                    "nostrum dolorem quia"),
                            new AttachmentsPopupContent("quos ipsam inventore",
                                    "aperiam doloremque",
                                    AttachmentsPopupContentDisplayType.Preview)],
                            [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "name",
                                    "consequatur magni et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "email",
                                    "nisi in et",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                                [new ActionButton("quos quis autem",
                                    "https://picsum.photos/640/480/?image=585",
                                    "1f77d142-f16c-002d-5ef0-625dabc1994b",
                                    () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                    "name",
                                    true,
                                    true,
                                    true,
                                    "ullam")]),
                            new AttributesDictionary(),
                            true,
                            "totam",
                            "nulla",
                            new GraphicOrigin(Guid.NewGuid(),
                                "voluptatem",
                                8)),
                        new Thumbnail("non",
                            "nobis",
                            213.9203,
                            91.2090)),
                new FeatureTemplate("ad delectus ullam",
                    DrawingTool.Line,
                        "category",
                    new Graphic(new Polygon([new MapPath([new MapPoint([162.6572])]),
                                new MapPath([new MapPoint([634.2112,
                                        449.8569]),
                                    new MapPoint([862.5808])])],
                            new SpatialReference(4,
                                    "aut",
                                    "aut",
                                    "sit"),
                            new Point(117.6620,
                                    34.1515,
                                    152.4503,
                                    -11.6816,
                                    211.9388,
                                new SpatialReference(4,
                                        "corrupti",
                                        "alias",
                                        "similique"),
                                    true,
                                    true,
                                    190.4718),
                                true,
                                true,
                                true),
                        new TextSymbol("error autem quo",
                            new MapColor(74, 233, 229),
                            new MapColor(27, 203, 15),
                                new Dimension(995.6405),
                            new MapFont(new Dimension(971.9247),
                                    "Georgia",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                932.3617,
                            new MapColor(167, 171, 237),
                            new MapColor(248, 199, 157),
                                724.0667,
                            HorizontalAlignment.Left,
                                true,
                                69.1001,
                                new Dimension(999.5566),
                                true),
                        new PopupTemplate("id inventore accusantium",
                                "exercitationem",
                                ["repudiandae"],
                            [new FieldInfo("token",
                                    "non",
                                    "nesciunt",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                        "eaque",
                                        "omnis amet velit")),
                            new MediaPopupContent("facilis molestias doloribus",
                                    "rerum sit",
                                [new ColumnChartMediaInfo("eos sit laborum",
                                        "esse",
                                        "ad perspiciatis at",
                                    new ChartMediaInfoValue(["iure",
                                            "aut"],
                                            "voluptas",
                                            "eligendi",
                                        [new ChartMediaInfoValueSeries("createdAt",
                                                "minima",
                                                731.5703)],
                                        [new MapColor(1, 87, 176)]))],
                                    4)],
                            [new ExpressionInfo("return $feature['FieldName'];",
                                    "password",
                                    "ex reprehenderit eum",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                                [new ActionButton("mollitia autem doloribus",
                                    "https://picsum.photos/640/480/?image=1010",
                                    "f5bca264-a505-17d9-3ba6-b4072cf38a55",
                                    () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                    "token",
                                    true,
                                    true,
                                    true,
                                    "quod"),
                                    new ActionButton("consequuntur officia ut",
                                        "https://picsum.photos/640/480/?image=892",
                                        "5c7c13d2-1a0f-91bb-6d3a-6aa15029b8c7",
                                        () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "occaecati")]),
                            new AttributesDictionary(),
                            true,
                            "cumque",
                            "saepe",
                            new GraphicOrigin(Guid.NewGuid(),
                                "voluptas",
                                2)),
                        new Thumbnail("voluptatem",
                            "ut",
                            265.7201,
                            201.5751))],
                    new CodedValueDomain<string>([new CodedValue<string>()],
                        "name"),
                    "quidem")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2001, 4, 3, 20, 16, 16),
                    new DateTime(2020, 5, 1, 14, 21, 1));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
