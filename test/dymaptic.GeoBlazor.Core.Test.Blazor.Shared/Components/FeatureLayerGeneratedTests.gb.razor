@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")"
                        OutFields="@(["fugiat",
                            "architecto"])"
                        DefinitionExpression="@("sunt")"
                        MinScale="@(10141.2749)"
                        MaxScale="@(26608531.5406)"
                        ObjectIdField="@("sed")"
                        GeometryType="@(FeatureGeometryType.Polygon)"
                        Title="@("voluptas voluptatem voluptates")"
                        Opacity="@(0.0903)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        ApiKey="@("dolorem")"
                        BlendMode="@(BlendMode.Invert)"
                        Charts="@(["sunt",
                            "aut",
                            "quisquam"])"
                        Copyright="@("maxime")"
                        DateFieldsTimeZone="@("totam")"
                        DisplayField="@("est")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("provident",
                            44381778.3731))"
                        FullExtent="@(new Extent(162.3753,
                                -133.9917,
                                31.3116,
                                -62.5034,
                                513.2930,
                                210.2496,
                                565.3688,
                                520.6217,
                            new SpatialReference(1,
                                    "saepe",
                                    "exercitationem",
                                    "ducimus"),
                                true,
                                true))"
                        GdbVersion="@("0.1.1.7")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2009, 8, 6, 0, 8, 29))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(725.3670)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        SpatialReference="@(new SpatialReference(5,
                                "ratione",
                                "exercitationem",
                                "molestias"))"
                        TypeIdField="@("nihil")"
                        Types="@([new FeatureType("094a450f-d744-cd6b-10fe-29cbdbb3d567",
                                "title",
                            [new FeatureTemplate("facilis qui officiis enim accusantium harum",
                                DrawingTool.Circle,
                                    "updatedAt",
                                new Graphic(new Extent(121.7774,
                                            -76.1829,
                                            -83.5904,
                                            -24.2045,
                                            36.6287,
                                            171.7286,
                                            949.5314,
                                            63.9045,
                                        new SpatialReference(5,
                                                "quis",
                                                "nihil",
                                                "et"),
                                            true,
                                            true),
                                    new TextSymbol("rerum rem quo",
                                        new MapColor(213, 117, 236),
                                        new MapColor(202, 21, 185),
                                            new Dimension(208.6682),
                                        new MapFont(new Dimension(947.5883),
                                                "Arial",
                                            MapFontStyle.Italic,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            559.0683,
                                        new MapColor(224, 132, 219),
                                        new MapColor(9, 199, 39),
                                            122.6364,
                                        HorizontalAlignment.Right,
                                            true,
                                            412.9986,
                                            new Dimension(532.7364),
                                            true),
                                    new PopupTemplate("dolorem omnis quidem",
                                            "at",
                                            ["facilis",
                                                "suscipit",
                                                "vel"],
                                        [new FieldInfo("phone",
                                                "nemo",
                                                "est",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("avatar",
                                                "quisquam",
                                                "sint",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDate),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("phone",
                                                "ut",
                                                "totam",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Min)],
                                        [new FieldsPopupContent([new FieldInfo("comment",
                                                    "rem",
                                                    "iure",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Stddev)],
                                                "delectus nihil culpa unde sit ipsam",
                                                "doloribus nostrum repellat"),
                                        new FieldsPopupContent([new FieldInfo("updatedAt",
                                                    "minima",
                                                    "qui",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("password",
                                                    "autem",
                                                    "illo",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Max)],
                                                "autem voluptas eum et odio quia cumque",
                                                "eius nesciunt aliquam"),
                                        new AttachmentsPopupContent("quos eligendi enim",
                                                "est excepturi id repellat",
                                                AttachmentsPopupContentDisplayType.Auto),
                                        new AttachmentsPopupContent("et alias voluptas",
                                                "aut molestiae voluptatem autem aut",
                                                AttachmentsPopupContentDisplayType.Preview)],
                                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "updatedAt",
                                                "et corporis hic",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("distinctio explicabo suscipit",
                                                "https://picsum.photos/640/480/?image=1000",
                                                "2ac17f94-af65-72ea-0301-aa52a9a6316f",
                                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                "email",
                                                true,
                                                true,
                                                true,
                                                "corrupti")]),
                                        new AttributesDictionary(),
                                        true,
                                        "amet",
                                        "qui",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "omnis",
                                            1)),
                                    new Thumbnail("ratione",
                                        "tenetur",
                                        298.5104,
                                        213.9989))],
                            new Dictionary<string, Domain>() {{ "aut", new RangeDomain("aut",
        "unde",
        "id") }
                            },
                                "assumenda")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Minutes)"
                            Value="@(982.8306)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("voluptate")"
                            EndField="@("voluptas")"
                            Stops="@([new DateTime(2008, 8, 2, 17, 32, 56),
                                new DateTime(2000, 1, 9, 20, 46, 12),
                                new DateTime(2011, 10, 25, 12, 43, 32)])"
                            TimeZone="@("Europe/Berlin")"
                            TrackIdField="@("repellendus")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Days)"
                                Value="@(964.9820)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2016, 10, 26, 12, 3, 47))"
                                End="@(new DateTime(2020, 3, 5, 21, 58, 4))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2000, 9, 9, 15, 34, 37))"
                            End="@(new DateTime(2009, 4, 4, 8, 56, 20))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("cumque maxime unde sunt distinctio")"
                            DrawingTool="@(DrawingTool.RightArrow)"
                            Name="@("token")"
                            Thumbnail="@(new Thumbnail("unde",
                                "fugiat",
                                267.8482,
                                248.0153))">
                            <Graphic 
                                Geometry="@(new Polyline([new MapPath([new MapPoint([122.9892,
                                            424.7057]),
                                        new MapPoint([897.3648,
                                            339.5980])])],
                                    new SpatialReference(3,
                                            "aut",
                                            "dolores",
                                            "rerum"),
                                        true,
                                        true))"
                                Symbol="@(new TextSymbol("minus similique qui",
                                    new MapColor(214, 162, 187),
                                    new MapColor(234, 66, 4),
                                        new Dimension(470.7961),
                                    new MapFont(new Dimension(260.7902),
                                            "Bookman",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.Underline),
                                        697.7295,
                                    new MapColor(90, 175, 244),
                                    new MapColor(73, 215, 108),
                                        51.1291,
                                    HorizontalAlignment.Right,
                                        true,
                                        234.7988,
                                        new Dimension(79.5419),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("sed numquam modi",
                                        "tenetur",
                                        ["repellat",
                                            "consequatur",
                                            "fuga",
                                            "aliquam"],
                                    [new FieldInfo("id",
                                            "non",
                                            "praesentium",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("group",
                                            "labore",
                                            "harum",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("email",
                                            "et",
                                            "qui",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("id",
                                            "dicta",
                                            "aut",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                    [new FieldsPopupContent([new FieldInfo("name",
                                                "perspiciatis",
                                                "voluptas",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongMonthYear),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("updatedAt",
                                                "est",
                                                "minus",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongMonthYear),
                                                true,
                                                true,
                                            StatisticType.Avg)],
                                            "quis nemo ad et",
                                            "nemo ea aliquid"),
                                    new RelationshipPopupContent("harum est est",
                                            "hic vero iure odit nobis iure",
                                            3,
                                            "molestiae",
                                        [new RelatedRecordsInfoFieldOrder("veniam",
                                            OrderBy.Asc)],
                                            5),
                                    new MediaPopupContent("illo delectus veniam",
                                            "ipsa excepturi non hic",
                                        [new ImageMediaInfo("nostrum quia aut",
                                                "est",
                                                "optio ea nobis",
                                            new ImageMediaInfoValue("https://presley.info",
                                                    "http://kayley.info"),
                                                211.0038)],
                                            2),
                                    new AttachmentsPopupContent("velit sed earum",
                                            "itaque deserunt sit magnam",
                                            AttachmentsPopupContentDisplayType.Auto)],
                                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "createdAt",
                                            "magni ea enim",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "comment",
                                            "quae officia minus",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("eaque pariatur nisi",
                                            "https://picsum.photos/640/480/?image=897",
                                            "5c579038-c6cb-5b9e-5e6c-40897b81401d",
                                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                            "avatar",
                                            true,
                                            true,
                                            true,
                                            "temporibus"),
                                    new ActionButton("in sequi voluptate",
                                            "https://picsum.photos/640/480/?image=231",
                                            "48a4e508-7f4e-f425-67b8-a50344fe9d1b",
                                            () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                                            "password",
                                            true,
                                            true,
                                            true,
                                            "est"),
                                    new ActionButton("aperiam accusamus velit",
                                            "https://picsum.photos/640/480/?image=931",
                                            "f56041a6-113f-657c-9d70-3edcc70ffc16",
                                            () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                            "title",
                                            true,
                                            true,
                                            true,
                                            "ut")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("sed")"
                                AggregateGeometries="@("impedit")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "et",
                                    1))">
                            </Graphic>
                        </FeatureTemplate>
                        <Graphic 
                            Geometry="@(new Point(152.4643,
                                    73.4323,
                                    61.4382,
                                    -71.4013,
                                    452.1274,
                                new SpatialReference(9,
                                        "aut",
                                        "eum",
                                        "soluta"),
                                    true,
                                    true,
                                    844.7404))"
                            Symbol="@(new TextSymbol("sint qui similique",
                                new MapColor(156, 139, 109),
                                new MapColor(140, 6, 37),
                                    new Dimension(923.8525),
                                new MapFont(new Dimension(569.5041),
                                        "Verdana",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.Underline),
                                    523.2677,
                                new MapColor(203, 155, 50),
                                new MapColor(112, 248, 213),
                                    117.0580,
                                HorizontalAlignment.Right,
                                    true,
                                    934.4936,
                                    new Dimension(463.0383),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("quaerat")"
                            AggregateGeometries="@("et")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "adipisci",
                                2))">
                            <PopupTemplate 
                                Title="@("est cupiditate eum")"
                                StringContent="@("quisquam")"
                                OutFields="@(["omnis",
                                    "et",
                                    "minus"])"
                                FieldInfos="@([new FieldInfo("token",
                                        "ut",
                                        "tempora",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongMonthDayYear),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("id",
                                        "et",
                                        "ut",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("id",
                                        "rerum",
                                        "nisi",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("name",
                                        "et",
                                        "dolores",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongMonthDayYear),
                                        true,
                                        true,
                                    StatisticType.Avg)])"
                                Content="@([new FieldsPopupContent([new FieldInfo("title",
                                            "accusamus",
                                            "a",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("avatar",
                                            "labore",
                                            "tempore",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                        "hic officiis aperiam corporis pariatur et officia",
                                        "dolores perspiciatis sit"),
                                new RelationshipPopupContent("voluptates sint ea",
                                        "aliquam dolorem hic exercitationem quos atque harum",
                                        2,
                                        "voluptatem",
                                    [new RelatedRecordsInfoFieldOrder("esse",
                                        OrderBy.Asc)],
                                        9),
                                new AttachmentsPopupContent("omnis tenetur sit",
                                        "voluptatum eos consequatur ipsa temporibus ratione",
                                        AttachmentsPopupContentDisplayType.Auto)])"
                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                        "createdAt",
                                        "cumque reprehenderit esse",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionToggle("ex dolorem non",
                                        "8e3fe5da-1d0b-8f17-2e22-f545510432a1",
                                        () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "status",
                                        "fugit")])">
                            </PopupTemplate>
                        </Graphic>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(24, 212, 62),
                                    new MapColor(46, 114, 102)),
                                    927.0635,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(12.8808,
                                            730.9074),
                                    new AuthoringInfoField1ClassBreakInfos(760.4810,
                                            762.9245),
                                    new AuthoringInfoField1ClassBreakInfos(184.6335,
                                            220.3090),
                                    new AuthoringInfoField1ClassBreakInfos(708.3816,
                                            700.8816)],
                                        "exercitationem",
                                        "quaerat",
                                        "voluptatum"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(358.8975,
                                            373.0305),
                                    new AuthoringInfoField1ClassBreakInfos(731.6953,
                                            189.4885)],
                                        "facilis",
                                        "aspernatur",
                                        "aliquam"),
                                    ["dignissimos",
                                        "est"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "qui",
                                    true,
                                LengthUnit.NauticalMiles,
                                    990.3990,
                                    883.7240,
                                    407.8737,
                                    739.0431))">
                        </SimpleRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Public)"
                            AccessInformation="@("quia")"
                            ApiKey="@("est")"
                            AvgRating="@(8.1296)"
                            Categories="@(["molestias",
                                "quod"])"
                            Created="@(new DateTime(2007, 1, 16, 9, 19, 51))"
                            Culture="@("expedita")"
                            Description="@("quo qui et eos dolorum")"
                            Extent="@(new Extent(-126.1409,
                                    163.4655,
                                    29.5699,
                                    70.3000,
                                    672.9545,
                                    121.6876,
                                    589.9420,
                                    597.0791,
                                new SpatialReference(3,
                                        "voluptates",
                                        "cumque",
                                        "voluptas"),
                                    true,
                                    true))"
                            GroupCategories="@(["pariatur",
                                "porro",
                                "neque",
                                "repudiandae"])"
                            LicenseInfo="@("ut")"
                            Modified="@(new DateTime(2002, 1, 10, 10, 41, 30))"
                            Name="@("phone")"
                            NumComments="@(586.9784)"
                            NumRatings="@(403.4543)"
                            NumViews="@(859.8415)"
                            Owner="@("Mafalda Robel")"
                            OwnerFolder="@("Brenden Borer")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.NoPrompt,
                                    ["dolorum",
                                        "alias",
                                        "eius"],
                                    "temporibus",
                                    "aut",
                                    "et",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("voluptatibus")"
                            Screenshots="@(["officiis",
                                "voluptatibus",
                                "autem",
                                "laboriosam"])"
                            Size="@(5)"
                            Snippet="@("impedit")"
                            Tags="@(["quos",
                                "cumque",
                                "sit"])"
                            Title="@("ut velit totam")"
                            TypeKeywords="@(["ipsam",
                                "officiis",
                                "nobis",
                                "expedita"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("sit ratione culpa")"
                            StringContent="@("esse")"
                            OutFields="@(["vel",
                                "cum",
                                "tempore",
                                "dolores"])"
                            FieldInfos="@([new FieldInfo("title",
                                    "molestiae",
                                    "hic",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg)])"
                            Content="@([new TextPopupContent("enim qui deserunt"),
                            new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                        "beatae",
                                        "voluptatibus ad et")),
                            new TextPopupContent("et voluptates magnam"),
                            new AttachmentsPopupContent("omnis et est",
                                    "dolorem harum unde nemo nihil eum commodi",
                                    AttachmentsPopupContentDisplayType.Preview)])"
                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                    "id",
                                    "aut iure aut",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("illo nam molestiae",
                                    "94339a75-487b-2bc6-20c3-70bf8a3a934f",
                                    () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "sint")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("iusto")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("non")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AboveEnd)"
                            LabelExpression="@("occaecati")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(30396319.8834)"
                            MinScale="@(28641.0270)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(231.4497))"
                            Symbol="@(new TextSymbol("dolorem molestiae itaque",
                                new MapColor(17, 251, 97),
                                new MapColor(101, 109, 14),
                                    new Dimension(832.6001),
                                new MapFont(new Dimension(98.5239),
                                        "Helvetica",
                                    MapFontStyle.Normal,
                                    FontWeight.Normal,
                                    TextDecoration.None),
                                    604.5795,
                                new MapColor(81, 56, 252),
                                new MapColor(124, 125, 221),
                                    337.5014,
                                HorizontalAlignment.Center,
                                    true,
                                    921.0192,
                                    new Dimension(97.5647),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Age > 21")">
                        </Label>
                        <FormTemplate 
                            Title="@("magni et minus")"
                            Description="@("est temporibus optio ut cum et quod")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new GroupElement("minima reprehenderit est ad sit",
                                [new GroupElement("tenetur et est incidunt dolorem provident numquam",
                                    [new FieldElement("category",
                                            "inventore",
                                            "quidem error voluptas explicabo",
                                            "magnam",
                                            "aperiam",
                                            "amet",
                                            "fugiat",
                                        new RangeDomain("ut",
                                                "recusandae",
                                                "category"),
                                            default,
                                            "amet"),
                                    new GroupElement("repellendus alias accusantium provident ullam",
                                        [new FieldElement("password",
                                                "consequuntur",
                                                "quae dolore aut culpa fuga",
                                                "impedit",
                                                "ipsa",
                                                "vero",
                                                "et",
                                            new InheritedDomain("password"),
                                                default,
                                                "illum"),
                                        new FieldElement("category",
                                                "sit",
                                                "maiores ut voluptate laboriosam",
                                                "quo",
                                                "eius",
                                                "vel",
                                                "rem",
                                            new RangeDomain("consequuntur",
                                                    "vero",
                                                    "email"),
                                                default,
                                                "voluptatem"),
                                        new GroupElement("minima error molestias velit velit vero ex",
                                            [new GroupElement("ut est voluptas id quos dicta",
                                                [new GroupElement("molestiae autem voluptatibus beatae corporis",
                                                    [new FieldElement()],
                                                    InitialState.Collapsed,
                                                        "et",
                                                        "id")],
                                                InitialState.Collapsed,
                                                    "autem",
                                                    "a"),
                                            new FieldElement("status",
                                                    "eum",
                                                    "voluptatem ut cumque aliquam minima cumque veniam",
                                                    "dolorum",
                                                    "quas",
                                                    "nostrum",
                                                    "nulla",
                                                new InheritedDomain("createdAt"),
                                                    default,
                                                    "soluta")],
                                            InitialState.Expanded,
                                                "dolorem",
                                                "et")],
                                        InitialState.Expanded,
                                            "dolores",
                                            "velit")],
                                    InitialState.Expanded,
                                        "voluptatem",
                                        "velit"),
                                new FieldElement("title",
                                        "ratione",
                                        "eum et consequatur voluptatum",
                                        "omnis",
                                        "ut",
                                        "magni",
                                        "voluptas",
                                    new InheritedDomain("avatar"),
                                        default,
                                        "dicta")],
                                InitialState.Expanded,
                                    "veritatis",
                                    "qui")])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "createdAt",
                                    "rem delectus commodi",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "email",
                                    "velit quaerat sunt",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "comment",
                                    "distinctio delectus nam",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("eum")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("phone")"
                            Alias="@("ut")"
                            Description="@("repellendus ut autem deleniti")"
                            Length="@(1)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "magnam" })"
                            ValueType="@(FieldValueType.Measurement)"
                            Domain="@(new InheritedDomain("phone"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("accusamus",
                                47418841.1803),
                                new Effect("dolores",
                                    34933204.5221)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(923.2870,
                                new Polygon([new MapPath([new MapPoint([989.8752,
                                            239.9011,
                                            268.4956]),
                                        new MapPoint([0.3447,
                                            171.5700]),
                                        new MapPoint([809.6631,
                                            582.4937]),
                                        new MapPoint([273.9716,
                                            746.8856,
                                            977.2406,
                                            750.7819])]),
                                        new MapPath([new MapPoint([834.6799,
                                                658.7689,
                                                351.6475,
                                                822.4649]),
                                            new MapPoint([328.3047,
                                                255.0452]),
                                            new MapPoint([585.6872,
                                                404.2618,
                                                524.7413,
                                                251.3275])]),
                                        new MapPath([new MapPoint([506.8928,
                                                171.4229,
                                                6.2194,
                                                209.1939]),
                                            new MapPoint([362.6988,
                                                913.1941,
                                                179.6507])])],
                                    new SpatialReference(1,
                                            "provident",
                                            "quas",
                                            "est"),
                                    new Point(-160.0303,
                                            78.4313,
                                            -19.1036,
                                            71.8487,
                                            935.7268,
                                        new SpatialReference(7,
                                                "iusto",
                                                "asperiores",
                                                "expedita"),
                                            true,
                                            true,
                                            820.7384),
                                        true,
                                        true,
                                        true),
                                    [2,
                                        3,
                                        6,
                                        5],
                                SpatialRelationship.Intersects,
                                new TimeExtent(new DateTime(2007, 11, 6, 12, 1, 41),
                                        new DateTime(2019, 3, 21, 16, 22, 30)),
                                    QueryUnits.Miles,
                                    "ObjectID = 1"))"
                            IncludedEffect="@([new Effect("provident",
                                24478584.2506),
                                new Effect("nisi",
                                    27671151.5227),
                                new Effect("commodi",
                                    42971469.3605),
                                new Effect("aut",
                                    35469335.0639)])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.Name;",
                                    "earum reprehenderit excepturi"))"
                            Mode="@(ElevationInfoMode.RelativeToGround)"
                            Offset="@(162.0086)"
                            Unit="@(ElevationUnit.Inches)">
                        </FeatureLayerBaseElevationInfo>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("facere",
                    ["et",
                        "vel",
                        "omnis"],
                    true,
                    [7,
                        1,
                        9],
                    ["praesentium",
                        "rerum"],
                    "phone",
                    104.3076,
                    [8,
                        6],
                    true,
                    [8,
                        7,
                        9,
                        7],
                    508.2117,
                    "Country = 'Canada'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(PortalItemAccess.Public,
                    "eveniet",
                    "molestiae",
                    550.2944,
                    ["tempore",
                        "fuga",
                        "quis"],
                    new DateTime(2002, 6, 21, 2, 31, 56),
                    "delectus",
                    "laudantium sunt repudiandae natus eum",
                new Extent(-45.3759,
                        -37.2406,
                        62.4813,
                        36.9552,
                        267.5252,
                        584.6385,
                        883.5242,
                        633.1646,
                    new SpatialReference(1,
                            "ea",
                            "est",
                            "inventore"),
                        true,
                        true),
                    ["nemo",
                        "possimus"],
                    "odit",
                    new DateTime(2023, 2, 1, 3, 46, 47),
                    "category",
                    605.8399),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2013, 9, 16, 0, 36, 32),
                        "voluptas",
                        "eveniet quia repellat"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Point(-82.1878,
                        17.6524,
                        -116.7959,
                        -29.4578,
                        278.8477,
                    new SpatialReference(9,
                            "molestiae",
                            "non",
                            "omnis"),
                        true,
                        true,
                        219.0104),
                new TextSymbol("quia nobis tenetur",
                    new MapColor(135, 166, 157),
                    new MapColor(254, 211, 153),
                        new Dimension(219.1373),
                    new MapFont(new Dimension(435.2223),
                            "Garamond",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.None),
                        773.1489,
                    new MapColor(187, 6, 96),
                    new MapColor(97, 202, 76),
                        660.4470,
                    HorizontalAlignment.Left,
                        true,
                        218.4944,
                        new Dimension(877.6951),
                        true),
                new PopupTemplate("exercitationem rerum molestiae",
                        "asperiores",
                        ["consequatur",
                            "voluptatem",
                            "qui"],
                    [new FieldInfo("title",
                            "laudantium",
                            "atque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new TextPopupContent("doloremque totam excepturi")],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "comment",
                            "minus porro saepe",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "category",
                            "non aliquam provident",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("voluptatem facilis dolor",
                            "273a5668-abb0-72cc-ea83-38b2f2bf0957",
                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "sint"),
                    new ActionButton("qui quas illum",
                            "https://picsum.photos/640/480/?image=109",
                            "84113acf-b52c-2e44-9b6a-af18ba7b7622",
                            () => { Console.WriteLine("quos"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "quasi"),
                    new ActionToggle("iusto nisi quo",
                            "fa1b99a7-37ec-99ff-8c09-231530934cc7",
                            () => { Console.WriteLine("voluptate"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "saepe"),
                    new ActionButton("nulla iure eligendi",
                            "https://picsum.photos/640/480/?image=122",
                            "6bb64825-dd88-3069-72bb-bf566323465d",
                            () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "culpa")]),
                    new AttributesDictionary(),
                    true,
                    "quaerat",
                    "adipisci",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ut",
                        7)),
                7,
            default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "eaque",
                    "est",
                    572.8442,
                    ["facere",
                        "nam",
                        "ut"],
                    new DateTime(2013, 3, 18, 11, 18, 16),
                    "repellendus",
                    "animi nostrum libero eum consequatur",
                new Extent(13.1104,
                        -148.6366,
                        59.4654,
                        63.1131,
                        932.0674,
                        285.6107,
                        256.7544,
                        17.6941,
                    new SpatialReference(9,
                            "eligendi",
                            "qui",
                            "sit"),
                        true,
                        true),
                    ["accusantium",
                        "delectus",
                        "recusandae",
                        "impedit"],
                    "voluptas",
                    new DateTime(2016, 6, 15, 14, 37, 56),
                    "id",
                    848.9175);
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        ListMode testListMode = ListMode.Show;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("totam maxime sunt",
                    "ut",
                    ["aliquid",
                        "est",
                        "ea"],
                [new FieldInfo("phone",
                        "explicabo",
                        "quaerat",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.DayShortMonthYearShortTime24),
                        true,
                        true,
                    StatisticType.Min),
                new FieldInfo("status",
                        "eos",
                        "velit",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.Year),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("createdAt",
                        "magni",
                        "earum",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.ShortDateLongTime),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("name",
                        "eum",
                        "ipsa",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.ShortDateLe),
                        true,
                        true,
                    StatisticType.Count)],
                [new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "quasi",
                            "earum doloremque ex")),
                new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "maxime",
                            "voluptatem saepe et"))],
                [new ExpressionInfo("return Date();",
                        "avatar",
                        "nisi qui dolorem",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "comment",
                        "aut blanditiis omnis",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "category",
                        "nobis aut eos",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("nobis est vitae",
                        "https://picsum.photos/640/480/?image=232",
                        "5ba233eb-6b9e-d4f3-8f0f-ed5b58d8e945",
                        () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                        "email",
                        true,
                        true,
                        true,
                        "deleniti"),
                new ActionToggle("quaerat maxime ab",
                        "a5993ce2-6ddf-9683-e0c0-b6131bb5f980",
                        () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "id",
                        "voluptates"),
                new ActionButton("maiores omnis praesentium",
                        "https://picsum.photos/640/480/?image=308",
                        "68ffa4e3-ed3d-1d63-4e42-4e5b6368f81b",
                        () => { Console.WriteLine("tenetur"); return Task.CompletedTask; },
                        "updatedAt",
                        true,
                        true,
                        true,
                        "sunt"),
                new ActionButton("id accusantium ipsum",
                        "https://picsum.photos/640/480/?image=217",
                        "ac57d2cb-c033-7ca5-a738-79c4aafd018a",
                        () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                        "token",
                        true,
                        true,
                        true,
                        "non")]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.DestinationOut;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "laudantium iste sed"),
                ElevationInfoMode.OnTheGround,
                    696.2244,
                ElevationUnit.DecimalDegrees);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("natus",
                    35639787.0852),
                    new Effect("sapiente",
                        12305141.9489),
                    new Effect("labore",
                        9554510.3895)],
                    true,
                new FeatureFilter(454.5366,
                    new Polygon([new MapPath([new MapPoint([96.1108,
                                255.6344,
                                486.8576,
                                483.0805]),
                            new MapPoint([610.8275,
                                651.1318,
                                702.3846,
                                200.6553]),
                            new MapPoint([742.7208,
                                625.9949,
                                554.6821,
                                657.0075]),
                            new MapPoint([596.0012,
                                464.2686,
                                692.6458])])],
                        new SpatialReference(7,
                                "et",
                                "quis",
                                "quaerat"),
                        new Point(-172.1763,
                                -68.6183,
                                -48.3673,
                                44.7858,
                                961.9455,
                            new SpatialReference(3,
                                    "totam",
                                    "vel",
                                    "optio"),
                                true,
                                true,
                                500.9954),
                            true,
                            true,
                            true),
                        [4,
                            3,
                            1],
                    SpatialRelationship.IndexIntersects,
                    new TimeExtent(new DateTime(2013, 3, 3, 15, 31, 41),
                            new DateTime(2013, 1, 5, 6, 56, 51)),
                        QueryUnits.Meters,
                        "Street = '123 Main St.'"),
                    [new Effect("sequi",
                        47276907.6769),
                        new Effect("nulla",
                            27360210.3571),
                        new Effect("repudiandae",
                            47680352.8733),
                        new Effect("pariatur",
                            45912492.5316)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "phone",
                    "aspernatur",
                    "in rem possimus error",
                    1,
                    true,
                    true,
                    new { Value = "veniam" },
                FieldValueType.OrderedOrRanked,
                new InheritedDomain("title")),
            new Field(default,
                    "createdAt",
                    "distinctio",
                    "est cumque id quidem labore in dolorem",
                    6,
                    true,
                    true,
                    new { Value = "ut" },
                FieldValueType.CountOrAmount,
                new InheritedDomain("createdAt")),
            new Field(default,
                    "password",
                    "tempore",
                    "dolorum quasi qui qui officia eaque et",
                    5,
                    true,
                    true,
                    new { Value = "pariatur" },
                FieldValueType.UniqueIdentifier,
                new RangeDomain("magni",
                        "cupiditate",
                        "status"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("cum");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("minus voluptatum autem",
                    "autem et et quo et dolores",
                    true,
                [new FieldElement("name",
                        "sed",
                        "sint reprehenderit est qui",
                        "voluptatum",
                        "eos",
                        "quas",
                        "rerum",
                    new RangeDomain("explicabo",
                            "sed",
                            "comment"),
                        default,
                        "vel")],
                [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "phone",
                        "tenetur voluptatem dolor",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return Date();",
                        "createdAt",
                        "ut omnis maxime",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "group",
                        "sed est amet",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "token",
                        "consequatur quaerat quibusdam",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(-170.1416,
                    -22.7423,
                    38.7416,
                    77.0675,
                    68.0327,
                    923.6804,
                    199.6383,
                    703.9201,
                new SpatialReference(5,
                        "earum",
                        "non",
                        "consequatur"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.BelowAfter,
                    "est",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    33537528.2152,
                    36808.7942,
                    true,
                    new Dimension(339.7345),
                new TextSymbol("et mollitia natus",
                    new MapColor(245, 180, 137),
                    new MapColor(47, 38, 211),
                        new Dimension(420.8965),
                    new MapFont(new Dimension(726.7457),
                            "Palatino",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        431.9820,
                    new MapColor(96, 248, 74),
                    new MapColor(210, 168, 125),
                        479.2261,
                    HorizontalAlignment.Left,
                        true,
                        502.9515,
                        new Dimension(644.9869),
                        true),
                    true,
                    "PostalCode = 'M5V 1J9'"),
            new Label(LabelPlacement.AboveRight,
                    "nobis",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    15664591.4185,
                    45528.6393,
                    true,
                    new Dimension(158.3441),
                new TextSymbol("repellat id amet",
                    new MapColor(111, 94, 128),
                    new MapColor(73, 63, 61),
                        new Dimension(613.6425),
                    new MapFont(new Dimension(575.0512),
                            "Palatino",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.LineThrough),
                        904.4334,
                    new MapColor(230, 211, 45),
                    new MapColor(87, 195, 102),
                        831.1700,
                    HorizontalAlignment.Left,
                        true,
                        844.3474,
                        new Dimension(323.9885),
                        true),
                    true,
                    "Age > 21")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("ut",
                SortOrder.Descending,
                    "tempore"),
            new OrderedLayerOrderBy("id",
                SortOrder.Descending,
                    "dolorem"),
            new OrderedLayerOrderBy("dolores",
                SortOrder.Descending,
                    "voluptate")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("aut dicta iure",
                    new MapColor(72, 76, 50),
                    new MapColor(121, 242, 53),
                        new Dimension(318.3322),
                    new MapFont(new Dimension(622.4187),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        400.8546,
                    new MapColor(12, 196, 193),
                    new MapColor(162, 20, 168),
                        444.3803,
                    HorizontalAlignment.Center,
                        true,
                        521.5152,
                        new Dimension(513.3566),
                        true),
                    "doloremque",
                [new OpacityVariable("minima",
                        "consequatur",
                    [new OpacityStop(586.7455,
                            0.7126,
                            "nulla"),
                    new OpacityStop(819.0681,
                            0.0244,
                            "unde"),
                    new OpacityStop(563.8872,
                            0.7857,
                            "necessitatibus"),
                    new OpacityStop(825.1481,
                            0.5109,
                            "praesentium")],
                    new VisualVariableLegendOptions(true,
                            "ea est aperiam"),
                        "voluptatem",
                        "ducimus quia aut"),
                new OpacityVariable("facere",
                        "officiis",
                    [new OpacityStop(119.1818,
                            0.4844,
                            "veniam")],
                    new VisualVariableLegendOptions(true,
                            "officiis quo ab"),
                        "error",
                        "quia illo ipsum"),
                new RotationVariable("quas",
                    Axis.Roll,
                    RotationType.Arithmetic,
                    new VisualVariableLegendOptions(true,
                            "aperiam vero voluptate"),
                        "debitis",
                        "harum occaecati doloremque"),
                new SizeVariable("perferendis",
                        new Dimension(855.5523),
                        new Dimension(44.7257),
                        32.0227,
                        664.4170,
                        VisualValueRepresentation.Radius,
                        VisualValueUnit.Miles,
                        "eligendi",
                        "fugiat",
                        true,
                        VisualAxis.Depth,
                        "eaque",
                        "explicabo ullam quo",
                    new VisualVariableLegendOptions(true,
                            "est molestias rem"))],
                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(75, 14, 170),
                            new MapColor(156, 74, 120)),
                        new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(112, 234, 137),
                            new MapColor(205, 92, 179)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(72, 60, 238),
                            new MapColor(113, 95, 82))]),
                        565.1159,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(945.5196,
                                445.8463),
                        new AuthoringInfoField1ClassBreakInfos(911.1955,
                                411.0144),
                        new AuthoringInfoField1ClassBreakInfos(557.4077,
                                254.8629)],
                            "velit",
                            "eum",
                            "eveniet"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(217.3542,
                                45.0237)],
                            "fugiat",
                            "est",
                            "vel"),
                        ["dolorem",
                            "labore",
                            "nihil"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "itaque",
                        true,
                    LengthUnit.Yards,
                        5.9489,
                        393.7834,
                        322.5441,
                        50.4994));
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(4,
                    "deleniti",
                    "dolor",
                    "non");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("quisquam incidunt iusto doloribus et animi doloremque",
                DrawingTool.Polygon,
                    "category",
                new Graphic(new Point(126.6803,
                            15.3299,
                            23.2364,
                            6.6517,
                            873.2332,
                        new SpatialReference(6,
                                "molestias",
                                "et",
                                "voluptatem"),
                            true,
                            true,
                            645.6766),
                    new TextSymbol("aliquid minus eligendi",
                        new MapColor(176, 20, 233),
                        new MapColor(253, 188, 147),
                            new Dimension(374.8395),
                        new MapFont(new Dimension(636.8911),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            374.8110,
                        new MapColor(139, 33, 141),
                        new MapColor(233, 201, 254),
                            179.7931,
                        HorizontalAlignment.Right,
                            true,
                            439.5462,
                            new Dimension(737.6068),
                            true),
                    new PopupTemplate("sit quis rerum",
                            "expedita",
                            ["aliquid",
                                "sunt"],
                        [new FieldInfo("group",
                                "voluptas",
                                "atque",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("group",
                                "eum",
                                "non",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("comment",
                                "distinctio",
                                "in",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new RelationshipPopupContent("deleniti labore sapiente",
                                "nisi ea aut consequatur modi tenetur non",
                                3,
                                "omnis",
                            [new RelatedRecordsInfoFieldOrder("sequi",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("ipsam",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("non",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("asperiores",
                                OrderBy.Asc)],
                                4),
                        new TextPopupContent("necessitatibus sed expedita")],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "comment",
                                "error similique qui",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "phone",
                                "quos nam eligendi",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("fugiat ad voluptatem",
                                "a9b6e5ba-2691-a6ab-9636-f2935259678c",
                                () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "aliquam"),
                        new ActionButton("asperiores dignissimos architecto",
                                "https://picsum.photos/640/480/?image=344",
                                "60656620-36b4-857c-6843-54db451491cf",
                                () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "quia"),
                        new ActionToggle("ipsam qui eius",
                                "b19931bf-0546-30a3-6b24-138eb9e64ffa",
                                () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "in",
                        "rerum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "deserunt",
                            7)),
                    new Thumbnail("assumenda",
                        "qui",
                        298.2440,
                        50.7963))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2005, 11, 1, 4, 53, 47),
                    new DateTime(2023, 4, 6, 18, 51, 18));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("veniam",
                    "quis",
                new TimeExtent(new DateTime(2005, 10, 2, 4, 53, 2),
                        new DateTime(2006, 2, 27, 19, 47, 17)),
                new TimeInterval(TemporalTime.Centuries,
                        866.0779),
                    [new DateTime(2004, 11, 7, 4, 28, 0),
                        new DateTime(2017, 6, 4, 0, 19, 36),
                        new DateTime(2013, 1, 13, 18, 20, 26),
                        new DateTime(2004, 4, 22, 19, 53, 54)],
                    "Asia/Karachi",
                    "explicabo");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Hours,
                    220.6460);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("e46282be-d11f-0806-e9ed-6f48640f028c",
                    "status",
                [new FeatureTemplate("id aut minima voluptatem fugiat",
                    DrawingTool.Circle,
                        "comment",
                    new Graphic(new Point(-130.5053,
                                59.8237,
                                131.0426,
                                42.9943,
                                473.1509,
                            new SpatialReference(2,
                                    "ullam",
                                    "et",
                                    "hic"),
                                true,
                                true,
                                357.6661),
                        new TextSymbol("ipsum pariatur et",
                            new MapColor(23, 98, 122),
                            new MapColor(233, 34, 72),
                                new Dimension(553.8139),
                            new MapFont(new Dimension(576.8960),
                                    "Times New Roman",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                665.5755,
                            new MapColor(32, 186, 144),
                            new MapColor(51, 0, 57),
                                77.7082,
                            HorizontalAlignment.Left,
                                true,
                                442.9509,
                                new Dimension(620.5766),
                                true),
                        new PopupTemplate("magnam ut nemo",
                                "sequi",
                                ["quia",
                                    "repudiandae",
                                    "modi"],
                            [new FieldInfo("name",
                                    "at",
                                    "sed",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("name",
                                    "et",
                                    "repellat",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                            [new RelationshipPopupContent("tenetur eius expedita",
                                    "sit provident officia ipsa laboriosam quas in",
                                    9,
                                    "labore",
                                [new RelatedRecordsInfoFieldOrder("consequuntur",
                                    OrderBy.Desc)],
                                    8),
                            new AttachmentsPopupContent("ea omnis sit",
                                    "enim qui et laboriosam cupiditate voluptatem in",
                                    AttachmentsPopupContentDisplayType.Auto)],
                            [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "name",
                                    "inventore qui consequatur",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("aut quae et",
                                    "a7ef703c-64f2-6081-debd-47448cb05de9",
                                    () => { Console.WriteLine("numquam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "avatar",
                                    "atque"),
                            new ActionButton("placeat sed voluptatem",
                                    "https://picsum.photos/640/480/?image=610",
                                    "9804a86b-3e54-23e5-62e0-690685fb2bd0",
                                    () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "et"),
                            new ActionToggle("debitis est ratione",
                                    "ae654001-9c1f-3d20-2c4e-669f6e479399",
                                    () => { Console.WriteLine("praesentium"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "quibusdam"),
                            new ActionButton("id porro qui",
                                    "https://picsum.photos/640/480/?image=646",
                                    "2c4b9cd1-9d75-daea-27fa-e2543d0e6d42",
                                    () => { Console.WriteLine("tempore"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "sit")]),
                            new AttributesDictionary(),
                            true,
                            "fugiat",
                            "quis",
                            new GraphicOrigin(Guid.NewGuid(),
                                "labore",
                                3)),
                        new Thumbnail("qui",
                            "atque",
                            157.1684,
                            94.0509))],
                new Dictionary<string, Domain>() {{ "explicabo", new InheritedDomain("updatedAt") },
                { "molestiae", new RangeDomain("eveniet",
        "earum",
        "group") },
                { "sit", new InheritedDomain("group") },
                { "expedita", new InheritedDomain("title") }
                },
                    "nesciunt"),
            new FeatureType("70699c2c-17c6-3096-d9b9-71310c415141",
                    "updatedAt",
                [new FeatureTemplate("provident explicabo voluptatem nobis qui sed",
                    DrawingTool.LeftArrow,
                        "email",
                    new Graphic(new Extent(128.1802,
                                147.8154,
                                81.6651,
                                16.8709,
                                891.4556,
                                271.8070,
                                220.3177,
                                299.5469,
                            new SpatialReference(9,
                                    "nesciunt",
                                    "porro",
                                    "voluptatem"),
                                true,
                                true),
                        new TextSymbol("natus sed quia",
                            new MapColor(111, 107, 103),
                            new MapColor(162, 141, 225),
                                new Dimension(36.4435),
                            new MapFont(new Dimension(242.1079),
                                    "Times New Roman",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                608.6112,
                            new MapColor(70, 246, 234),
                            new MapColor(18, 202, 247),
                                68.0222,
                            HorizontalAlignment.Center,
                                true,
                                987.1398,
                                new Dimension(244.7405),
                                true),
                        new PopupTemplate("sunt sunt ab",
                                "deleniti",
                                ["voluptatem",
                                    "consequatur",
                                    "ea"],
                            [new FieldInfo("comment",
                                    "et",
                                    "temporibus",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new FieldsPopupContent([new FieldInfo("title",
                                        "enim",
                                        "quia",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("name",
                                        "maiores",
                                        "consequatur",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("comment",
                                        "harum",
                                        "odit",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("category",
                                        "incidunt",
                                        "quia",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                    "molestias qui minima voluptas ipsam vel cupiditate",
                                    "et saepe sit")],
                            [new ExpressionInfo("return $feature.Name;",
                                    "password",
                                    "labore iure quis",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "title",
                                    "ipsum numquam iste",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("iure recusandae et",
                                    "https://picsum.photos/640/480/?image=997",
                                    "4e088f60-493f-1aed-01b3-6d1f347f5309",
                                    () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "aut"),
                            new ActionButton("sapiente placeat neque",
                                    "https://picsum.photos/640/480/?image=556",
                                    "99a8f6c6-4261-9a4d-5676-880b1de7a441",
                                    () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                    "email",
                                    true,
                                    true,
                                    true,
                                    "laborum"),
                            new ActionButton("eius occaecati laborum",
                                    "https://picsum.photos/640/480/?image=355",
                                    "7320423a-068e-3db2-92fb-52e801b8bbb4",
                                    () => { Console.WriteLine("a"); return Task.CompletedTask; },
                                    "token",
                                    true,
                                    true,
                                    true,
                                    "at"),
                            new ActionToggle("quia aliquam non",
                                    "86558296-f01d-2cee-141a-4257a901f40e",
                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "comment",
                                    "minus")]),
                            new AttributesDictionary(),
                            true,
                            "corporis",
                            "reprehenderit",
                            new GraphicOrigin(Guid.NewGuid(),
                                "ut",
                                8)),
                        new Thumbnail("dolorem",
                            "sint",
                            240.5312,
                            208.9517)),
                new FeatureTemplate("dolore iste rerum aperiam hic quo praesentium",
                    DrawingTool.Line,
                        "group",
                    new Graphic(new Point(-173.0590,
                                1.1970,
                                149.3328,
                                72.1245,
                                527.0491,
                            new SpatialReference(6,
                                    "modi",
                                    "voluptatem",
                                    "laboriosam"),
                                true,
                                true,
                                313.8863),
                        new TextSymbol("nemo et fugit",
                            new MapColor(223, 23, 253),
                            new MapColor(41, 93, 60),
                                new Dimension(684.0279),
                            new MapFont(new Dimension(165.1995),
                                    "Arial",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.None),
                                393.6081,
                            new MapColor(69, 53, 139),
                            new MapColor(50, 82, 19),
                                188.2910,
                            HorizontalAlignment.Left,
                                true,
                                912.6034,
                                new Dimension(545.1497),
                                true),
                        new PopupTemplate("distinctio ducimus a",
                                "est",
                                ["est",
                                    "exercitationem",
                                    "et",
                                    "deleniti"],
                            [new FieldInfo("title",
                                    "quaerat",
                                    "hic",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("name",
                                    "eaque",
                                    "aut",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                            [new MediaPopupContent("veniam nemo in",
                                    "inventore nemo ex quia hic",
                                [new LineChartMediaInfo("qui expedita qui",
                                        "dicta",
                                        "ut quia sunt",
                                    new ChartMediaInfoValue(["ipsum",
                                            "quidem"],
                                            "reiciendis",
                                            "aspernatur",
                                        [new ChartMediaInfoValueSeries("email",
                                                "iusto",
                                                243.7578)],
                                        [new MapColor(191, 139, 7)])),
                                new ImageMediaInfo("iure ad animi",
                                        "ea",
                                        "ut eligendi molestiae",
                                    new ImageMediaInfoValue("https://clifton.info",
                                            "http://laura.name"),
                                        241.3477),
                                new BarChartMediaInfo("voluptatem et iure",
                                        "quidem",
                                        "expedita laborum minus",
                                    new ChartMediaInfoValue(["non",
                                            "nisi",
                                            "et",
                                            "numquam"],
                                            "rerum",
                                            "ab",
                                        [new ChartMediaInfoValueSeries("avatar",
                                                "laboriosam",
                                                963.5734)],
                                        [new MapColor(126, 131, 208)])),
                                new ColumnChartMediaInfo("consequatur qui magnam",
                                        "odio",
                                        "ab id omnis",
                                    new ChartMediaInfoValue(["nostrum",
                                            "eaque",
                                            "quis"],
                                            "earum",
                                            "debitis",
                                        [new ChartMediaInfoValueSeries("email",
                                                "incidunt",
                                                94.4507),
                                        new ChartMediaInfoValueSeries("group",
                                                "sed",
                                                50.3588),
                                        new ChartMediaInfoValueSeries("comment",
                                                "possimus",
                                                841.0486)],
                                        [new MapColor(246, 225, 208),
                                        new MapColor(34, 208, 25)]))],
                                    2)],
                            [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "status",
                                    "est aut nobis",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("error et pariatur",
                                    "https://picsum.photos/640/480/?image=173",
                                    "7d370ebe-ce82-6b00-3bb3-2cf9dd89f18f",
                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "corporis")]),
                            new AttributesDictionary(),
                            true,
                            "maiores",
                            "aut",
                            new GraphicOrigin(Guid.NewGuid(),
                                "aut",
                                1)),
                        new Thumbnail("et",
                            "eligendi",
                            204.6493,
                            157.1386))],
                new Dictionary<string, Domain>() {{ "dolores", new RangeDomain("minus",
        "ducimus",
        "id") }
                },
                    "beatae"),
            new FeatureType("190f72bc-1c46-81ab-1423-5dc4be154544",
                    "comment",
                [new FeatureTemplate("numquam omnis et sequi",
                    DrawingTool.Rectangle,
                        "password",
                    new Graphic(new Extent(4.6353,
                                -103.9858,
                                42.0084,
                                6.5556,
                                106.1105,
                                832.5730,
                                500.3589,
                                691.1991,
                            new SpatialReference(5,
                                    "sunt",
                                    "nobis",
                                    "facilis"),
                                true,
                                true),
                        new TextSymbol("quibusdam magnam praesentium",
                            new MapColor(16, 140, 32),
                            new MapColor(98, 244, 185),
                                new Dimension(410.7040),
                            new MapFont(new Dimension(118.9524),
                                    "Verdana",
                                MapFontStyle.Italic,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                483.7295,
                            new MapColor(22, 106, 2),
                            new MapColor(74, 173, 71),
                                645.9410,
                            HorizontalAlignment.Left,
                                true,
                                810.9020,
                                new Dimension(936.2862),
                                true),
                        new PopupTemplate("eligendi illum mollitia",
                                "quia",
                                ["tempora",
                                    "omnis",
                                    "consectetur",
                                    "et"],
                            [new FieldInfo("phone",
                                    "ut",
                                    "vel",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Count)],
                            [new RelationshipPopupContent("magnam dolor vel",
                                    "veritatis ipsa adipisci animi nihil",
                                    1,
                                    "nisi",
                                [new RelatedRecordsInfoFieldOrder("dicta",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("aut",
                                    OrderBy.Asc)],
                                    6),
                            new TextPopupContent("veritatis est a"),
                            new RelationshipPopupContent("iste et quis",
                                    "qui commodi quo voluptatem",
                                    9,
                                    "et",
                                [new RelatedRecordsInfoFieldOrder("reprehenderit",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("ex",
                                    OrderBy.Desc)],
                                    8)],
                            [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "password",
                                    "aut molestiae ab",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("unde eum dolorem",
                                    "https://picsum.photos/640/480/?image=761",
                                    "294a1545-ea6f-a411-b3af-65d129ce999e",
                                    () => { Console.WriteLine("repudiandae"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "atque")]),
                            new AttributesDictionary(),
                            true,
                            "velit",
                            "laboriosam",
                            new GraphicOrigin(Guid.NewGuid(),
                                "consectetur",
                                9)),
                        new Thumbnail("sapiente",
                            "laborum",
                            98.0412,
                            85.3129)),
                new FeatureTemplate("id accusamus et ut",
                    DrawingTool.Freehand,
                        "avatar",
                    new Graphic(new Polyline([new MapPath([new MapPoint([56.9845,
                                    576.8920,
                                    865.2731,
                                    65.9952]),
                                new MapPoint([819.8635,
                                    511.0933,
                                    488.7263])]),
                                new MapPath([new MapPoint([163.6148,
                                        473.2876,
                                        647.4763]),
                                    new MapPoint([754.8330,
                                        351.6766])]),
                                new MapPath([new MapPoint([332.3465,
                                        612.6428,
                                        830.7228]),
                                    new MapPoint([348.1239,
                                        56.4896]),
                                    new MapPoint([11.0415,
                                        586.6344,
                                        224.5919])]),
                                new MapPath([new MapPoint([330.6386,
                                        947.2458,
                                        345.9621]),
                                    new MapPoint([986.4138,
                                        639.9213]),
                                    new MapPoint([192.8560,
                                        794.3717,
                                        130.3974]),
                                    new MapPoint([433.8244,
                                        231.3208,
                                        981.0114])])],
                            new SpatialReference(3,
                                    "velit",
                                    "quibusdam",
                                    "pariatur"),
                                true,
                                true),
                        new TextSymbol("iure quo quisquam",
                            new MapColor(110, 73, 231),
                            new MapColor(229, 244, 223),
                                new Dimension(226.3873),
                            new MapFont(new Dimension(158.7252),
                                    "Palatino",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                70.9442,
                            new MapColor(122, 151, 205),
                            new MapColor(134, 114, 76),
                                462.6601,
                            HorizontalAlignment.Center,
                                true,
                                804.4084,
                                new Dimension(342.1067),
                                true),
                        new PopupTemplate("incidunt voluptas et",
                                "consequatur",
                                ["doloremque",
                                    "eum",
                                    "dolores"],
                            [new FieldInfo("group",
                                    "ipsa",
                                    "doloribus",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("group",
                                    "iure",
                                    "quas",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("status",
                                    "perspiciatis",
                                    "unde",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new TextPopupContent("et excepturi nemo"),
                            new RelationshipPopupContent("dicta eligendi quis",
                                    "sint voluptas velit quia",
                                    7,
                                    "nisi",
                                [new RelatedRecordsInfoFieldOrder("soluta",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("tempora",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("quidem",
                                    OrderBy.Asc)],
                                    5)],
                            [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "token",
                                    "iusto placeat error",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "phone",
                                    "iure et laudantium",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "updatedAt",
                                    "laborum rerum suscipit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "password",
                                    "explicabo sapiente facere",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("fuga est nihil",
                                    "https://picsum.photos/640/480/?image=312",
                                    "f36aeb8e-c400-73a7-fd77-5c862e3534ec",
                                    () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                    "title",
                                    true,
                                    true,
                                    true,
                                    "vero"),
                            new ActionButton("voluptas laboriosam cupiditate",
                                    "https://picsum.photos/640/480/?image=727",
                                    "7d53036a-7d9c-2473-4b36-26c52ddf16f2",
                                    () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                    "phone",
                                    true,
                                    true,
                                    true,
                                    "omnis"),
                            new ActionButton("aspernatur officia possimus",
                                    "https://picsum.photos/640/480/?image=875",
                                    "a9aa0950-f64a-2825-755a-09bef2aac4c7",
                                    () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "sed")]),
                            new AttributesDictionary(),
                            true,
                            "molestiae",
                            "sequi",
                            new GraphicOrigin(Guid.NewGuid(),
                                "magni",
                                1)),
                        new Thumbnail("laudantium",
                            "cum",
                            281.8996,
                            210.2742)),
                new FeatureTemplate("officia nulla voluptatibus eveniet",
                    DrawingTool.LeftArrow,
                        "updatedAt",
                    new Graphic(new Extent(-51.0656,
                                -42.7872,
                                85.8942,
                                60.0979,
                                642.6373,
                                170.7757,
                                494.3013,
                                517.6650,
                            new SpatialReference(1,
                                    "expedita",
                                    "qui",
                                    "quis"),
                                true,
                                true),
                        new TextSymbol("ut itaque voluptatem",
                            new MapColor(176, 94, 90),
                            new MapColor(230, 9, 227),
                                new Dimension(325.7490),
                            new MapFont(new Dimension(380.8795),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.None),
                                521.8867,
                            new MapColor(50, 27, 129),
                            new MapColor(230, 183, 13),
                                84.7626,
                            HorizontalAlignment.Left,
                                true,
                                149.5669,
                                new Dimension(974.5166),
                                true),
                        new PopupTemplate("aut numquam quae",
                                "accusantium",
                                ["aut",
                                    "ea",
                                    "numquam",
                                    "vero"],
                            [new FieldInfo("group",
                                    "vel",
                                    "dolore",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("category",
                                    "autem",
                                    "eveniet",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new FieldsPopupContent([new FieldInfo("name",
                                        "placeat",
                                        "nam",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("comment",
                                        "laboriosam",
                                        "dolore",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("name",
                                        "vel",
                                        "in",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("token",
                                        "doloribus",
                                        "et",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                    "enim laborum vel id",
                                    "odit asperiores dolor"),
                            new TextPopupContent("a minus ratione")],
                            [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "password",
                                    "omnis est provident",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "createdAt",
                                    "aut dolorem ut",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature['FieldName'];",
                                    "id",
                                    "aliquid laboriosam dicta",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("vel adipisci aut",
                                    "f3997171-aa9d-7ca8-945f-ea6969b4a7b0",
                                    () => { Console.WriteLine("totam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "rerum")]),
                            new AttributesDictionary(),
                            true,
                            "laudantium",
                            "ipsa",
                            new GraphicOrigin(Guid.NewGuid(),
                                "quia",
                                9)),
                        new Thumbnail("officiis",
                            "asperiores",
                            171.0629,
                            230.1607))],
                new Dictionary<string, Domain>() {{ "nesciunt", new InheritedDomain("token") },
                { "aut", new InheritedDomain("updatedAt") },
                { "sequi", new RangeDomain("in",
        "ea",
        "avatar") }
                },
                    "laudantium"),
            new FeatureType("235dd3e7-75d5-3bad-f006-20331904faa5",
                    "phone",
                [new FeatureTemplate("reiciendis sit ratione quod voluptas",
                    DrawingTool.Rectangle,
                        "token",
                    new Graphic(new Polyline([new MapPath([new MapPoint([889.4452,
                                    837.6868,
                                    528.2727,
                                    659.5277]),
                                new MapPoint([99.2298,
                                    268.2654,
                                    965.6303]),
                                new MapPoint([222.4747,
                                    779.5598,
                                    101.0380]),
                                new MapPoint([916.7374,
                                    838.7060,
                                    729.0059])]),
                                new MapPath([new MapPoint([251.0049,
                                        38.7793]),
                                    new MapPoint([580.6047,
                                        62.5818,
                                        742.0329])]),
                                new MapPath([new MapPoint([470.3786,
                                        482.3063,
                                        162.2456]),
                                    new MapPoint([852.6428,
                                        134.2020,
                                        416.2793,
                                        47.2564]),
                                    new MapPoint([10.5552,
                                        573.1700,
                                        293.5506,
                                        972.4578])]),
                                new MapPath([new MapPoint([876.0910,
                                        526.8618,
                                        410.7106,
                                        824.7713]),
                                    new MapPoint([995.6800,
                                        244.1171,
                                        432.9694]),
                                    new MapPoint([163.0468,
                                        223.7617]),
                                    new MapPoint([661.4623,
                                        684.9880])])],
                            new SpatialReference(4,
                                    "sint",
                                    "ratione",
                                    "fugit"),
                                true,
                                true),
                        new TextSymbol("quidem mollitia voluptas",
                            new MapColor(80, 244, 200),
                            new MapColor(26, 64, 39),
                                new Dimension(292.6764),
                            new MapFont(new Dimension(743.3169),
                                    "Arial",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.None),
                                0.7940,
                            new MapColor(186, 194, 175),
                            new MapColor(103, 91, 117),
                                212.1772,
                            HorizontalAlignment.Center,
                                true,
                                463.5679,
                                new Dimension(905.0089),
                                true),
                        new PopupTemplate("consequatur et quis",
                                "aliquid",
                                ["tempora",
                                    "dolores",
                                    "perspiciatis"],
                            [new FieldInfo("email",
                                    "corrupti",
                                    "aut",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("createdAt",
                                    "ut",
                                    "et",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("updatedAt",
                                    "molestias",
                                    "soluta",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "dolorem",
                                        "occaecati asperiores pariatur"))],
                            [new ExpressionInfo("return $feature['FieldName'];",
                                    "comment",
                                    "nesciunt ut exercitationem",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "name",
                                    "totam sit aut",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("iusto nostrum sunt",
                                    "https://picsum.photos/640/480/?image=978",
                                    "1b6cfbed-c775-6130-c72a-63f5ada37150",
                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "et"),
                            new ActionToggle("maxime accusamus enim",
                                    "22fa7a2d-e111-041d-ff59-54ca994d1a23",
                                    () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "comment",
                                    "qui")]),
                            new AttributesDictionary(),
                            true,
                            "adipisci",
                            "libero",
                            new GraphicOrigin(Guid.NewGuid(),
                                "aut",
                                4)),
                        new Thumbnail("vel",
                            "enim",
                            37.6826,
                            106.8651)),
                new FeatureTemplate("ratione est voluptatem aut",
                    DrawingTool.Freehand,
                        "status",
                    new Graphic(new Polyline([new MapPath([new MapPoint([989.7700,
                                    188.9941]),
                                new MapPoint([221.0594,
                                    641.4581,
                                    559.3409,
                                    278.7655]),
                                new MapPoint([709.7575,
                                    226.6487])])],
                            new SpatialReference(3,
                                    "sed",
                                    "eaque",
                                    "ut"),
                                true,
                                true),
                        new TextSymbol("minus distinctio maiores",
                            new MapColor(90, 99, 153),
                            new MapColor(230, 166, 187),
                                new Dimension(491.7126),
                            new MapFont(new Dimension(965.5690),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                771.4640,
                            new MapColor(177, 47, 160),
                            new MapColor(192, 209, 3),
                                184.4168,
                            HorizontalAlignment.Center,
                                true,
                                711.9932,
                                new Dimension(203.1566),
                                true),
                        new PopupTemplate("nesciunt dignissimos facilis",
                                "et",
                                ["cum",
                                    "dolor",
                                    "id"],
                            [new FieldInfo("avatar",
                                    "repellat",
                                    "laboriosam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Max)],
                            [new FieldsPopupContent([new FieldInfo("group",
                                        "qui",
                                        "officia",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("phone",
                                        "accusantium",
                                        "esse",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "quia dignissimos deleniti non",
                                    "autem sapiente debitis"),
                            new RelationshipPopupContent("vel eos molestias",
                                    "beatae dolor ab beatae",
                                    1,
                                    "nemo",
                                [new RelatedRecordsInfoFieldOrder("eligendi",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("cumque",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("nihil",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("voluptatem",
                                    OrderBy.Asc)],
                                    9),
                            new TextPopupContent("sed ducimus et")],
                            [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "status",
                                    "quasi iure et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature['FieldName'];",
                                    "category",
                                    "reiciendis voluptatum eos",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "avatar",
                                    "a nobis quo",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("similique doloremque aliquid",
                                    "c8698e02-4b69-d46b-4db0-9ad93546a0de",
                                    () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "phone",
                                    "aut"),
                            new ActionToggle("quis quia sint",
                                    "880f1e53-4173-2993-c1f4-41f3ca232ea7",
                                    () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "status",
                                    "asperiores"),
                            new ActionToggle("pariatur accusantium sit",
                                    "5b305ed1-39f0-d381-56ba-7217ce8b2cb7",
                                    () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "status",
                                    "ipsam"),
                            new ActionToggle("consectetur et occaecati",
                                    "988a4b73-ca4c-5c43-b4c9-6d40c130fe17",
                                    () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "name",
                                    "voluptatum")]),
                            new AttributesDictionary(),
                            true,
                            "dicta",
                            "consequatur",
                            new GraphicOrigin(Guid.NewGuid(),
                                "illo",
                                1)),
                        new Thumbnail("ut",
                            "sint",
                            163.0164,
                            56.6746)),
                new FeatureTemplate("qui veniam facere eaque sequi optio eaque",
                    DrawingTool.Triangle,
                        "name",
                    new Graphic(new Point(20.0748,
                                15.7632,
                                134.6650,
                                31.6465,
                                7.9896,
                            new SpatialReference(7,
                                    "tempore",
                                    "praesentium",
                                    "dolores"),
                                true,
                                true,
                                466.3004),
                        new TextSymbol("corporis eius natus",
                            new MapColor(83, 141, 63),
                            new MapColor(46, 201, 24),
                                new Dimension(209.8642),
                            new MapFont(new Dimension(663.1155),
                                    "Garamond",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                244.8833,
                            new MapColor(68, 101, 202),
                            new MapColor(116, 8, 114),
                                984.1476,
                            HorizontalAlignment.Left,
                                true,
                                216.4936,
                                new Dimension(231.0887),
                                true),
                        new PopupTemplate("quia ipsam ut",
                                "nesciunt",
                                ["aliquam",
                                    "ut",
                                    "est",
                                    "autem"],
                            [new FieldInfo("comment",
                                    "ducimus",
                                    "dolorum",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Var)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                        "laborum",
                                        "sit amet dolores")),
                            new AttachmentsPopupContent("itaque similique et",
                                    "sed aut provident velit neque",
                                    AttachmentsPopupContentDisplayType.Auto)],
                            [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "id",
                                    "accusamus placeat quo",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "category",
                                    "sit doloribus excepturi",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "password",
                                    "minus quis quo",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("in earum suscipit",
                                    "8433da73-5c6a-2847-ec5b-2597a9aa93b5",
                                    () => { Console.WriteLine("quisquam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "category",
                                    "et"),
                            new ActionButton("mollitia accusantium ut",
                                    "https://picsum.photos/640/480/?image=736",
                                    "ef529d1a-b24f-28fa-b22c-59395a2984df",
                                    () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "ut"),
                            new ActionButton("quis vitae quis",
                                    "https://picsum.photos/640/480/?image=619",
                                    "8c199de3-198e-1ef3-4570-800655e55570",
                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                    "group",
                                    true,
                                    true,
                                    true,
                                    "omnis"),
                            new ActionToggle("corrupti facere aut",
                                    "cb3536ad-b778-a7be-d5c2-1d31a5aa3092",
                                    () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "illum")]),
                            new AttributesDictionary(),
                            true,
                            "laborum",
                            "qui",
                            new GraphicOrigin(Guid.NewGuid(),
                                "quibusdam",
                                1)),
                        new Thumbnail("est",
                            "omnis",
                            58.2302,
                            216.0665))],
                new Dictionary<string, Domain>() {{ "natus", new InheritedDomain("id") },
                { "consequatur", new RangeDomain("sit",
        "quis",
        "updatedAt") },
                { "quas", new InheritedDomain("category") },
                { "optio", new RangeDomain("adipisci",
        "possimus",
        "updatedAt") }
                },
                    "ut")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2014, 7, 2, 2, 15, 17),
                    new DateTime(2011, 9, 26, 15, 11, 32));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
