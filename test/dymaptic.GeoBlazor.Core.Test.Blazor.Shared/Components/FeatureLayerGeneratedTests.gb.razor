@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")"
                        OutFields="@(["sequi",
                            "ipsa"])"
                        DefinitionExpression="@("harum")"
                        MinScale="@(5848.5288)"
                        MaxScale="@(22675134.1663)"
                        ObjectIdField="@("atque")"
                        GeometryType="@(FeatureGeometryType.Multipatch)"
                        Title="@("maiores qui eos")"
                        Opacity="@(0.6732)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        ApiKey="@("dolorem")"
                        BlendMode="@(BlendMode.Reflect)"
                        Charts="@(["sit",
                            "neque",
                            "modi"])"
                        Copyright="@("quos")"
                        DateFieldsTimeZone="@("quam")"
                        DisplayField="@("illo")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("est",
                            12398559.0347))"
                        FullExtent="@(new Extent(-58.8717,
                                -77.2512,
                                -34.3476,
                                -11.7624,
                                218.6731,
                                724.3326,
                                273.7060,
                                748.3880,
                            new SpatialReference(9,
                                    "voluptatem",
                                    "corporis",
                                    "iste"),
                                true,
                                true))"
                        GdbVersion="@("7.2.2.3")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2015, 2, 8, 8, 22, 44))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(269.7318)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        SpatialReference="@(new SpatialReference(7,
                                "quisquam",
                                "assumenda",
                                "est"))"
                        TypeIdField="@("nihil")"
                        Types="@([new FeatureType("2d2f06ae-29d9-ab2d-8c82-63d0acf4dac8",
                                "avatar",
                            [new FeatureTemplate("nostrum aut consectetur adipisci corporis repudiandae",
                                DrawingTool.Line,
                                    "avatar",
                                new Graphic(new Polygon([new MapPath([new MapPoint([510.2196,
                                                965.9203,
                                                203.0420]),
                                            new MapPoint([447.4579,
                                                261.6391]),
                                            new MapPoint([566.6856,
                                                989.3270,
                                                817.2070,
                                                625.7053])]),
                                            new MapPath([new MapPoint([934.1254,
                                                    826.7332,
                                                    218.1665,
                                                    796.1364]),
                                                new MapPoint([298.5507,
                                                    577.7396,
                                                    645.9111]),
                                                new MapPoint([938.9625,
                                                    205.2403,
                                                    613.1976,
                                                    26.3967]),
                                                new MapPoint([495.2321,
                                                    989.2590,
                                                    585.2131])]),
                                            new MapPath([new MapPoint([201.1104,
                                                    86.5873]),
                                                new MapPoint([369.1634,
                                                    679.9353,
                                                    913.6934,
                                                    529.6081]),
                                                new MapPoint([402.5411,
                                                    205.3398,
                                                    997.2443]),
                                                new MapPoint([425.2548,
                                                    781.2651])])],
                                        new SpatialReference(5,
                                                "minus",
                                                "facilis",
                                                "expedita"),
                                        new Point(-143.3679,
                                                50.7226,
                                                10.8493,
                                                -65.8132,
                                                173.5540,
                                            new SpatialReference(1,
                                                    "neque",
                                                    "vero",
                                                    "ad"),
                                                true,
                                                true,
                                                831.3353),
                                            true,
                                            true,
                                            true),
                                    new TextSymbol("quasi accusantium autem",
                                        new MapColor(54, 109, 39),
                                        new MapColor(254, 142, 28),
                                            new Dimension(0.0013),
                                        new MapFont(new Dimension(999.1681),
                                                "Georgia",
                                            MapFontStyle.Normal,
                                            FontWeight.Normal,
                                            TextDecoration.Underline),
                                            97.6339,
                                        new MapColor(115, 245, 71),
                                        new MapColor(72, 56, 233),
                                            61.0122,
                                        HorizontalAlignment.Right,
                                            true,
                                            747.0766,
                                            new Dimension(922.6949),
                                            true),
                                    new PopupTemplate("atque nam sunt",
                                            "error",
                                            ["numquam",
                                                "soluta",
                                                "blanditiis"],
                                        [new FieldInfo("password",
                                                "molestiae",
                                                "consectetur",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDateLe),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("phone",
                                                "sequi",
                                                "vero",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.ShortDate),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("id",
                                                "voluptates",
                                                "non",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("name",
                                                "incidunt",
                                                "ipsam",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.ShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Sum)],
                                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "sint",
                                                    "illo itaque aut")),
                                        new TextPopupContent("veniam accusamus occaecati"),
                                        new MediaPopupContent("velit officia perferendis",
                                                "tenetur ut aut explicabo nemo",
                                            [new LineChartMediaInfo("enim quam est",
                                                    "deleniti",
                                                    "sed provident porro",
                                                new ChartMediaInfoValue(["aut",
                                                        "temporibus",
                                                        "perspiciatis",
                                                        "autem"],
                                                        "natus",
                                                        "maiores",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(74, 45, 134),
                                                    new MapColor(191, 127, 229),
                                                    new MapColor(220, 251, 239),
                                                    new MapColor(153, 93, 94)])),
                                            new PieChartMediaInfo("dolores quibusdam sed",
                                                    "eligendi",
                                                    "illum dolorem porro",
                                                new ChartMediaInfoValue(["nam",
                                                        "qui",
                                                        "sit",
                                                        "debitis"],
                                                        "et",
                                                        "totam",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(83, 17, 35),
                                                    new MapColor(50, 108, 111),
                                                    new MapColor(206, 198, 231)])),
                                            new ImageMediaInfo("ipsum odio fugit",
                                                    "repudiandae",
                                                    "velit praesentium voluptatem",
                                                new ImageMediaInfoValue("http://max.org",
                                                        "http://delphine.biz"),
                                                    537.9505)],
                                                6),
                                        new MediaPopupContent("voluptas qui repellat",
                                                "enim vel doloribus tenetur consectetur odio occaecati",
                                            [new PieChartMediaInfo("optio voluptatem aperiam",
                                                    "error",
                                                    "velit illum itaque",
                                                new ChartMediaInfoValue(["reiciendis",
                                                        "placeat",
                                                        "vel"],
                                                        "distinctio",
                                                        "quia",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(119, 106, 35),
                                                    new MapColor(87, 231, 24),
                                                    new MapColor(13, 149, 114),
                                                    new MapColor(168, 195, 149)]))],
                                                5)],
                                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "createdAt",
                                                "qui iusto expedita",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "updatedAt",
                                                "rerum quo facilis",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "email",
                                                "voluptatum quasi numquam",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("facere est reprehenderit",
                                                "https://picsum.photos/640/480/?image=742",
                                                "6bc2c146-1672-60c1-811f-0b7e7ddcd8e1",
                                                () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                                                "comment",
                                                true,
                                                true,
                                                true,
                                                "recusandae"),
                                        new ActionToggle("minima nisi amet",
                                                "620da635-b4f7-2031-f34f-1fc2a1258d4e",
                                                () => { Console.WriteLine("commodi"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "token",
                                                "quibusdam"),
                                        new ActionToggle("animi quidem ex",
                                                "35c4da9f-0141-6921-c789-4194f57ec6e0",
                                                () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "comment",
                                                "error"),
                                        new ActionToggle("totam ipsam dolor",
                                                "9fa3ac10-887d-da82-4435-684598301c51",
                                                () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "category",
                                                "et")]),
                                        new AttributesDictionary(),
                                        true,
                                        "voluptatem",
                                        "aut",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "omnis",
                                            4)),
                                    new Thumbnail("quod",
                                        "qui",
                                        282.5531,
                                        300.6295))],
                            new Dictionary<string, Domain>() {{ "voluptas", new InheritedDomain("category") }
                            },
                                "voluptas")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Hours)"
                            Value="@(761.0696)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("vitae")"
                            EndField="@("adipisci")"
                            Stops="@([new DateTime(2023, 2, 7, 13, 27, 55),
                                new DateTime(2006, 2, 11, 12, 39, 6),
                                new DateTime(2007, 2, 14, 10, 5, 7)])"
                            TimeZone="@("Asia/Tokyo")"
                            TrackIdField="@("earum")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Seconds)"
                                Value="@(452.4524)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2003, 3, 4, 9, 4, 11))"
                                End="@(new DateTime(2005, 11, 6, 3, 35, 25))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2007, 11, 7, 1, 15, 10))"
                            End="@(new DateTime(2000, 3, 8, 16, 31, 42))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("veniam temporibus inventore soluta")"
                            DrawingTool="@(DrawingTool.Ellipse)"
                            Name="@("email")"
                            Thumbnail="@(new Thumbnail("quia",
                                "blanditiis",
                                150.9883,
                                279.0538))">
                            <Graphic 
                                Geometry="@(new Extent(-26.1585,
                                        -148.0036,
                                        -69.4410,
                                        -77.5700,
                                        190.2693,
                                        486.4154,
                                        598.6150,
                                        84.5680,
                                    new SpatialReference(6,
                                            "et",
                                            "quis",
                                            "non"),
                                        true,
                                        true))"
                                Symbol="@(new TextSymbol("voluptatibus sit aut",
                                    new MapColor(205, 215, 151),
                                    new MapColor(146, 83, 1),
                                        new Dimension(491.8543),
                                    new MapFont(new Dimension(906.3730),
                                            "Palatino",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        394.6082,
                                    new MapColor(159, 18, 209),
                                    new MapColor(178, 104, 253),
                                        932.3457,
                                    HorizontalAlignment.Left,
                                        true,
                                        268.3412,
                                        new Dimension(626.5339),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("est maxime et",
                                        "deleniti",
                                        ["veniam",
                                            "ut",
                                            "qui"],
                                    [new FieldInfo("comment",
                                            "aperiam",
                                            "neque",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("password",
                                            "eligendi",
                                            "et",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("token",
                                            "molestiae",
                                            "voluptatem",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("status",
                                            "error",
                                            "et",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                    [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                "rerum",
                                                "qui qui omnis")),
                                    new TextPopupContent("atque pariatur omnis"),
                                    new TextPopupContent("quisquam dicta maxime"),
                                    new RelationshipPopupContent("debitis mollitia rem",
                                            "inventore at assumenda et praesentium consequatur",
                                            1,
                                            "voluptates",
                                        [new RelatedRecordsInfoFieldOrder("enim",
                                            OrderBy.Desc)],
                                            8)],
                                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "phone",
                                            "cum nobis dolor",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "category",
                                            "iusto facilis dolor",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "createdAt",
                                            "eaque ea quidem",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("impedit quos sit",
                                            "30f95906-21ea-f931-a295-d3fd1d4e7ccd",
                                            () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "title",
                                            "vel"),
                                    new ActionButton("est et fugiat",
                                            "https://picsum.photos/640/480/?image=1037",
                                            "8634c401-a53e-91e9-8818-77705183535d",
                                            () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                            "comment",
                                            true,
                                            true,
                                            true,
                                            "maiores"),
                                    new ActionButton("aut vitae nesciunt",
                                            "https://picsum.photos/640/480/?image=229",
                                            "3feb50d7-6e1f-7e89-0821-72aa354120fa",
                                            () => { Console.WriteLine("incidunt"); return Task.CompletedTask; },
                                            "category",
                                            true,
                                            true,
                                            true,
                                            "natus")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("dolor")"
                                AggregateGeometries="@("neque")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "esse",
                                    7))">
                            </Graphic>
                        </FeatureTemplate>
                        <Graphic 
                            Geometry="@(new Polygon([new MapPath([new MapPoint([572.0130,
                                        36.1582,
                                        468.6245]),
                                    new MapPoint([22.5702,
                                        262.8446,
                                        383.5884])]),
                                    new MapPath([new MapPoint([438.6856,
                                            35.2687,
                                            930.1336,
                                            715.6408]),
                                        new MapPoint([72.1283,
                                            659.9327,
                                            272.6055])]),
                                    new MapPath([new MapPoint([450.9232,
                                            668.9153,
                                            854.3259]),
                                        new MapPoint([746.1774,
                                            976.8209,
                                            683.6628,
                                            471.1847]),
                                        new MapPoint([251.5883,
                                            918.8379,
                                            29.6344,
                                            92.9475]),
                                        new MapPoint([336.2573,
                                            866.8539])]),
                                    new MapPath([new MapPoint([759.1013,
                                            909.9009]),
                                        new MapPoint([536.4328,
                                            498.7295,
                                            764.9964]),
                                        new MapPoint([938.0391,
                                            19.1877,
                                            385.9131])])],
                                new SpatialReference(7,
                                        "sit",
                                        "nam",
                                        "quia"),
                                new Point(33.9458,
                                        44.2561,
                                        -41.5816,
                                        49.9177,
                                        511.2922,
                                    new SpatialReference(3,
                                            "omnis",
                                            "rerum",
                                            "doloremque"),
                                        true,
                                        true,
                                        169.5683),
                                    true,
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("facere accusamus vero",
                                new MapColor(87, 35, 105),
                                new MapColor(214, 68, 198),
                                    new Dimension(34.9786),
                                new MapFont(new Dimension(866.0691),
                                        "Helvetica",
                                    MapFontStyle.Normal,
                                    FontWeight.Bolder,
                                    TextDecoration.LineThrough),
                                    541.8119,
                                new MapColor(187, 140, 109),
                                new MapColor(214, 245, 149),
                                    715.5040,
                                HorizontalAlignment.Right,
                                    true,
                                    474.6426,
                                    new Dimension(829.5742),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("autem")"
                            AggregateGeometries="@("reiciendis")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "similique",
                                1))">
                            <PopupTemplate 
                                Title="@("nam dolor consequatur")"
                                StringContent="@("non")"
                                OutFields="@(["earum",
                                    "sed",
                                    "mollitia"])"
                                FieldInfos="@([new FieldInfo("email",
                                        "expedita",
                                        "omnis",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("avatar",
                                        "rerum",
                                        "corrupti",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("phone",
                                        "mollitia",
                                        "et",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Var)])"
                                Content="@([new TextPopupContent("reiciendis sed voluptates"),
                                new MediaPopupContent("quis nesciunt non",
                                        "exercitationem amet nisi tempora quod",
                                    [new PieChartMediaInfo("eum corrupti aliquam",
                                            "officia",
                                            "consequatur qui ut",
                                        new ChartMediaInfoValue(["rerum",
                                                "ut"],
                                                "velit",
                                                "molestiae",
                                            [new ChartMediaInfoValueSeries("createdAt",
                                                    "et",
                                                    598.9201)],
                                            [new MapColor(91, 76, 23)]))],
                                        8),
                                new FieldsPopupContent([new FieldInfo("email",
                                            "sapiente",
                                            "provident",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("email",
                                            "ut",
                                            "error",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("email",
                                            "nihil",
                                            "vero",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Avg)],
                                        "tempora qui sit natus",
                                        "aut consectetur reprehenderit")])"
                                ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "token",
                                        "et porro in",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "token",
                                        "ullam culpa natus",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "avatar",
                                        "asperiores amet reprehenderit",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionButton("doloremque culpa ipsam",
                                        "https://picsum.photos/640/480/?image=645",
                                        "1cd135a5-0a7b-a523-1214-bc72d7a3989d",
                                        () => { Console.WriteLine("odio"); return Task.CompletedTask; },
                                        "token",
                                        true,
                                        true,
                                        true,
                                        "enim"),
                                new ActionButton("dolorem non accusantium",
                                        "https://picsum.photos/640/480/?image=776",
                                        "f0f2f8bd-a018-9eaf-e214-535669a13779",
                                        () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "et"),
                                new ActionToggle("eligendi molestiae id",
                                        "258be95b-71ec-f5e4-d4ad-99ec8c6496cd",
                                        () => { Console.WriteLine("optio"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "id",
                                        "id")])">
                            </PopupTemplate>
                        </Graphic>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(170, 21, 246),
                                    new MapColor(167, 219, 138)),
                                    717.6432,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(777.3695,
                                            180.2667),
                                    new AuthoringInfoField1ClassBreakInfos(629.3398,
                                            233.3899)],
                                        "vitae",
                                        "aliquam",
                                        "totam"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(861.9317,
                                            184.4916),
                                    new AuthoringInfoField1ClassBreakInfos(189.7265,
                                            120.5519)],
                                        "at",
                                        "atque",
                                        "natus"),
                                    ["aut",
                                        "adipisci",
                                        "dolorem",
                                        "omnis"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "sed",
                                    true,
                                LengthUnit.Yards,
                                    627.9481,
                                    255.5295,
                                    35.3244,
                                    570.4353))">
                        </SimpleRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("fugit")"
                            ApiKey="@("delectus")"
                            AvgRating="@(396.2594)"
                            Categories="@(["quis",
                                "omnis"])"
                            Created="@(new DateTime(2023, 3, 21, 0, 56, 10))"
                            Culture="@("illum")"
                            Description="@("nostrum tempora eveniet recusandae perspiciatis reiciendis")"
                            Extent="@(new Extent(5.4118,
                                    -17.8702,
                                    -45.5090,
                                    45.8495,
                                    1.1799,
                                    788.5656,
                                    842.3112,
                                    308.4022,
                                new SpatialReference(6,
                                        "rerum",
                                        "at",
                                        "impedit"),
                                    true,
                                    true))"
                            GroupCategories="@(["aliquam",
                                "molestiae",
                                "odit"])"
                            LicenseInfo="@("voluptas")"
                            Modified="@(new DateTime(2023, 4, 15, 2, 6, 15))"
                            Name="@("name")"
                            NumComments="@(611.4064)"
                            NumRatings="@(372.9004)"
                            NumViews="@(727.9486)"
                            Owner="@("Jaydon Gutmann")"
                            OwnerFolder="@("Foster Sporer")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.Immediate,
                                    ["maiores",
                                        "molestias",
                                        "esse"],
                                    "saepe",
                                    "omnis",
                                    "quia",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("repellat")"
                            Screenshots="@(["aut",
                                "totam",
                                "et"])"
                            Size="@(6)"
                            Snippet="@("accusamus")"
                            Tags="@(["ratione",
                                "odio",
                                "ea"])"
                            Title="@("cupiditate dolorem cumque")"
                            TypeKeywords="@(["quia",
                                "voluptas"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("excepturi consectetur cumque")"
                            StringContent="@("repellendus")"
                            OutFields="@(["hic",
                                "a",
                                "consectetur",
                                "quam"])"
                            FieldInfos="@([new FieldInfo("createdAt",
                                    "rerum",
                                    "corrupti",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("email",
                                    "magnam",
                                    "explicabo",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg)])"
                            Content="@([new RelationshipPopupContent("dolor in accusantium",
                                    "dicta suscipit exercitationem accusamus quia unde",
                                    2,
                                    "veniam",
                                [new RelatedRecordsInfoFieldOrder("dignissimos",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("dolore",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("ad",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("dolorem",
                                    OrderBy.Asc)],
                                    6),
                            new TextPopupContent("velit facilis minus"),
                            new MediaPopupContent("distinctio ut itaque",
                                    "blanditiis quasi quisquam eveniet nobis autem",
                                [new BarChartMediaInfo("dolorem ut et",
                                        "nulla",
                                        "est et quos",
                                    new ChartMediaInfoValue(["quo",
                                            "ratione",
                                            "quos"],
                                            "qui",
                                            "sint",
                                        [new ChartMediaInfoValueSeries("phone",
                                                "sed",
                                                56.9542),
                                        new ChartMediaInfoValueSeries("phone",
                                                "provident",
                                                185.5507),
                                        new ChartMediaInfoValueSeries("category",
                                                "architecto",
                                                619.0011),
                                        new ChartMediaInfoValueSeries("createdAt",
                                                "sed",
                                                302.3778)],
                                        [new MapColor(209, 242, 113),
                                        new MapColor(210, 10, 150),
                                        new MapColor(158, 46, 44)])),
                                new PieChartMediaInfo("nobis possimus repellendus",
                                        "asperiores",
                                        "molestias labore voluptates",
                                    new ChartMediaInfoValue(["eveniet",
                                            "et",
                                            "dolorum",
                                            "ut"],
                                            "officia",
                                            "itaque",
                                        [new ChartMediaInfoValueSeries("category",
                                                "doloribus",
                                                241.2719),
                                        new ChartMediaInfoValueSeries("title",
                                                "voluptatem",
                                                320.2569),
                                        new ChartMediaInfoValueSeries("name",
                                                "molestiae",
                                                285.1258),
                                        new ChartMediaInfoValueSeries("category",
                                                "sequi",
                                                217.8168)],
                                        [new MapColor(221, 137, 205),
                                        new MapColor(220, 182, 11),
                                        new MapColor(138, 25, 81)]))],
                                    3)])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "name",
                                    "dignissimos nihil dolorum",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "phone",
                                    "aliquid mollitia ut",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("molestias perspiciatis non",
                                    "https://picsum.photos/640/480/?image=759",
                                    "1e68b460-7ee3-a7be-636e-45096a215dc1",
                                    () => { Console.WriteLine("adipisci"); return Task.CompletedTask; },
                                    "group",
                                    true,
                                    true,
                                    true,
                                    "rem")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("consectetur")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("repudiandae")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowBefore)"
                            LabelExpression="@("qui")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(6127415.5211)"
                            MinScale="@(4393.4412)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(332.8003))"
                            Symbol="@(new TextSymbol("quidem facere sapiente",
                                new MapColor(138, 111, 93),
                                new MapColor(215, 249, 69),
                                    new Dimension(769.0657),
                                new MapFont(new Dimension(926.7496),
                                        "Arial",
                                    MapFontStyle.Italic,
                                    FontWeight.Lighter,
                                    TextDecoration.LineThrough),
                                    311.4591,
                                new MapColor(243, 239, 61),
                                new MapColor(30, 41, 24),
                                    944.3103,
                                HorizontalAlignment.Right,
                                    true,
                                    287.3097,
                                    new Dimension(907.4282),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Phone = '555-555-5555'")">
                        </Label>
                        <FormTemplate 
                            Title="@("in voluptates nemo")"
                            Description="@("numquam enim omnis in")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new FieldElement("createdAt",
                                "sunt",
                                "voluptates quis quod est",
                                "similique",
                                "qui",
                                "ut",
                                "quas",
                                new CodedValueDomain<string>(),
                                new BarcodeScannerInput())])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "email",
                                    "fuga ducimus et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "password",
                                    "vitae nobis nostrum",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "avatar",
                                    "eveniet sit in",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "group",
                                    "at eaque non",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("similique")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("title")"
                            Alias="@("molestiae")"
                            Description="@("quidem minima sequi perspiciatis")"
                            Length="@(4)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "qui" })"
                            ValueType="@(FieldValueType.NameOrTitle)"
                            Domain="@(new InheritedDomain("category"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("ipsum",
                                4455735.8031),
                                new Effect("quidem",
                                    36981121.3019),
                                new Effect("maiores",
                                    31207172.5987)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(91.7666,
                                new Extent(-35.4480,
                                        -63.0124,
                                        60.7993,
                                        -58.1522,
                                        155.0987,
                                        447.9919,
                                        473.6006,
                                        603.1269,
                                    new SpatialReference(5,
                                            "vel",
                                            "illum",
                                            "pariatur"),
                                        true,
                                        true),
                                    [4,
                                        6],
                                SpatialRelationship.Overlaps,
                                new TimeExtent(new DateTime(2000, 8, 27, 3, 9, 20),
                                        new DateTime(2015, 8, 26, 20, 34, 22)),
                                    QueryUnits.UsNauticalMiles,
                                    "Phone = '555-555-5555'"))"
                            IncludedEffect="@([new Effect("cumque",
                                34749668.2988),
                                new Effect("nemo",
                                    3508805.0616),
                                new Effect("omnis",
                                    31543229.0472),
                                new Effect("in",
                                    40270815.8507)])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature['FieldName'];",
                                    "nemo est sed"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(599.7466)"
                            Unit="@(ElevationUnit.Feet)">
                        </FeatureLayerBaseElevationInfo>
                        <GeoJSONLayer 
                            ArcGISLayerId="@("quis")"
                            FullExtent="@(new Extent(-46.9593,
                                    -45.5621,
                                    73.7477,
                                    -89.9616,
                                    257.0944,
                                    600.8231,
                                    455.6631,
                                    529.9866,
                                new SpatialReference(4,
                                        "et",
                                        "excepturi",
                                        "praesentium"),
                                    true,
                                    true))"
                            ListMode="@(ListMode.Hide)"
                            Opacity="@(0.6022)"
                            PersistenceEnabled="@(true)"
                            Title="@("aut exercitationem nihil")">
                            <TimeExtent 
                                Start="@(new DateTime(2012, 9, 24, 18, 58, 22))"
                                End="@(new DateTime(2017, 7, 6, 1, 11, 2))">
                            </TimeExtent>
                        </GeoJSONLayer>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("ut",
                    ["et",
                        "nemo",
                        "possimus",
                        "quas"],
                    true,
                    [5,
                        3],
                    ["laboriosam",
                        "eum",
                        "nemo",
                        "eum"],
                    "createdAt",
                    175.8072,
                    [5,
                        1,
                        5,
                        1],
                    true,
                    [5,
                        9],
                    307.6564,
                    "PostalCode = 'M5V 1J9'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(PortalItemAccess.Private,
                    "animi",
                    "error",
                    613.5570,
                    ["delectus",
                        "voluptates",
                        "ducimus"],
                    new DateTime(2001, 3, 25, 0, 29, 9),
                    "quae",
                    "maxime enim nihil numquam hic ad",
                new Extent(-66.3442,
                        -113.2521,
                        -10.5070,
                        43.1903,
                        159.1160,
                        864.0774,
                        383.3197,
                        380.7502,
                    new SpatialReference(5,
                            "ut",
                            "tenetur",
                            "mollitia"),
                        true,
                        true),
                    ["et",
                        "corrupti",
                        "in",
                        "sunt"],
                    "dolorem",
                    new DateTime(2018, 3, 12, 7, 50, 49),
                    "title",
                    156.9182),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2015, 10, 7, 12, 38, 32),
                        "rerum",
                        "voluptatem qui reprehenderit"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Polyline([new MapPath([new MapPoint([657.2177,
                            238.0680]),
                        new MapPoint([81.4694,
                            515.5715,
                            484.0699])]),
                        new MapPath([new MapPoint([36.7763,
                                587.7270,
                                237.7268,
                                883.6259]),
                            new MapPoint([210.5431,
                                673.5491,
                                741.2242,
                                464.1341]),
                            new MapPoint([259.4790,
                                377.3907]),
                            new MapPoint([827.6187,
                                611.1683])])],
                    new SpatialReference(4,
                            "suscipit",
                            "et",
                            "eligendi"),
                        true,
                        true),
                new TextSymbol("ut veniam et",
                    new MapColor(174, 77, 67),
                    new MapColor(96, 181, 177),
                        new Dimension(678.5746),
                    new MapFont(new Dimension(531.5678),
                            "Garamond",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        314.8099,
                    new MapColor(187, 46, 153),
                    new MapColor(24, 188, 24),
                        30.2890,
                    HorizontalAlignment.Left,
                        true,
                        742.1834,
                        new Dimension(210.3279),
                        true),
                new PopupTemplate("voluptas adipisci ut",
                        "molestiae",
                        ["sequi",
                            "sequi"],
                    [new FieldInfo("id",
                            "dignissimos",
                            "consequatur",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("createdAt",
                            "velit",
                            "culpa",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("password",
                            "ipsa",
                            "optio",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("comment",
                            "alias",
                            "qui",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Max)],
                    [new AttachmentsPopupContent("dolorem consequatur pariatur",
                            "rerum natus consequatur officia et in et",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("sit veniam voluptatibus"),
                    new AttachmentsPopupContent("deserunt ea quasi",
                            "quis quidem eum facilis velit mollitia",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "id",
                            "voluptates minus facere",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("consectetur et aut",
                            "https://picsum.photos/640/480/?image=293",
                            "96ecf264-6ff1-86ec-f9ee-e50c45247cf1",
                            () => { Console.WriteLine("repudiandae"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "dolorum"),
                    new ActionButton("itaque quaerat voluptas",
                            "https://picsum.photos/640/480/?image=1025",
                            "fea3873f-381a-98e2-826e-a0255ab34c51",
                            () => { Console.WriteLine("neque"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "consequatur")]),
                    new AttributesDictionary(),
                    true,
                    "rerum",
                    "asperiores",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ut",
                        4)),
                2,
            default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "culpa",
                    "qui",
                    739.4103,
                    ["veritatis",
                        "odit",
                        "quo"],
                    new DateTime(2003, 8, 2, 21, 44, 0),
                    "quo",
                    "aut et vel fugit iusto",
                new Extent(-122.3976,
                        162.8212,
                        84.0100,
                        -68.4051,
                        335.3512,
                        602.7899,
                        570.2969,
                        807.0123,
                    new SpatialReference(1,
                            "fugiat",
                            "ut",
                            "ut"),
                        true,
                        true),
                    ["asperiores",
                        "molestiae",
                        "recusandae",
                        "dolorem"],
                    "qui",
                    new DateTime(2013, 1, 10, 19, 26, 16),
                    "name",
                    656.1326);
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Graphic> testSource = [new Graphic(new Extent(63.5744,
                        45.4017,
                        16.0575,
                        -79.4559,
                        572.5272,
                        389.5769,
                        746.8030,
                        271.2716,
                    new SpatialReference(7,
                            "non",
                            "voluptas",
                            "quam"),
                        true,
                        true),
                new TextSymbol("blanditiis est quos",
                    new MapColor(174, 142, 201),
                    new MapColor(101, 53, 152),
                        new Dimension(435.9478),
                    new MapFont(new Dimension(456.6596),
                            "Arial",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        569.3296,
                    new MapColor(191, 199, 133),
                    new MapColor(15, 192, 250),
                        729.2298,
                    HorizontalAlignment.Center,
                        true,
                        407.0339,
                        new Dimension(554.9096),
                        true),
                new PopupTemplate("neque quisquam voluptas",
                        "dolor",
                        ["sunt",
                            "in",
                            "rerum"],
                    [new FieldInfo("createdAt",
                            "totam",
                            "inventore",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("createdAt",
                            "ut",
                            "nemo",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new AttachmentsPopupContent("aliquam delectus reiciendis",
                            "praesentium in incidunt voluptatum laboriosam dolor",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "id",
                            "asperiores consequuntur debitis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "createdAt",
                            "sunt vel quod",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "name",
                            "aut et quo",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("sapiente eveniet vel",
                            "457687ad-78d6-611c-3396-f24c21c383ff",
                            () => { Console.WriteLine("eveniet"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "enim"),
                    new ActionButton("optio quibusdam aut",
                            "https://picsum.photos/640/480/?image=620",
                            "0a19305c-2574-1208-ae8a-9c63baf73caa",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "eius"),
                    new ActionButton("vel consequatur ut",
                            "https://picsum.photos/640/480/?image=725",
                            "a36dd624-6d25-74d5-e5bb-839619701857",
                            () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "ut"),
                    new ActionToggle("debitis earum eos",
                            "6bf6813f-d194-eacd-4c3a-0f0cad6c2ef3",
                            () => { Console.WriteLine("quas"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "velit")]),
                    new AttributesDictionary(),
                    true,
                    "et",
                    "voluptatum",
                    new GraphicOrigin(Guid.NewGuid(),
                        "quaerat",
                        1)),
            new Graphic(new Extent(-55.5699,
                        114.0566,
                        71.3093,
                        -32.5711,
                        841.9245,
                        56.0043,
                        106.3789,
                        982.7763,
                    new SpatialReference(3,
                            "qui",
                            "quia",
                            "aperiam"),
                        true,
                        true),
                new TextSymbol("illum minima quidem",
                    new MapColor(51, 220, 26),
                    new MapColor(245, 190, 21),
                        new Dimension(152.4765),
                    new MapFont(new Dimension(375.0996),
                            "Georgia",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        334.5257,
                    new MapColor(35, 97, 32),
                    new MapColor(172, 153, 229),
                        138.2770,
                    HorizontalAlignment.Left,
                        true,
                        103.1132,
                        new Dimension(481.3412),
                        true),
                new PopupTemplate("voluptas ut error",
                        "aut",
                        ["culpa",
                            "voluptas",
                            "voluptatem",
                            "dolorum"],
                    [new FieldInfo("createdAt",
                            "et",
                            "doloremque",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("avatar",
                            "quos",
                            "laboriosam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("createdAt",
                            "illum",
                            "odit",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("category",
                            "dolorum",
                            "eveniet",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new AttachmentsPopupContent("qui vel ut",
                            "nesciunt et in optio tempora deserunt",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "title",
                            "nesciunt cumque fugiat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "group",
                            "beatae quisquam omnis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "name",
                            "assumenda dolor nobis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "createdAt",
                            "id provident voluptatem",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("blanditiis autem quos",
                            "8f8371e6-d46f-a2d0-4a45-7209b0caf26b",
                            () => { Console.WriteLine("amet"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "dolorem")]),
                    new AttributesDictionary(),
                    true,
                    "dolor",
                    "et",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ut",
                        5))];
        await featureLayer.SetSource(testSource);
        var source = await featureLayer.GetSource();
        Assert.AreEqual(testSource, source);
        ListMode testListMode = ListMode.Hide;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("voluptates excepturi quas",
                    "quis",
                    ["consequatur",
                        "neque",
                        "officiis",
                        "nihil"],
                [new FieldInfo("comment",
                        "autem",
                        "culpa",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(5,
                            true,
                        DateFormat.DayShortMonthYearLongTime24),
                        true,
                        true,
                    StatisticType.Min)],
                [new TextPopupContent("est blanditiis nulla"),
                new MediaPopupContent("sed sit officia",
                        "saepe deleniti nihil nihil eveniet id tenetur",
                    [new BarChartMediaInfo("eaque sapiente delectus",
                            "quibusdam",
                            "est et dolor",
                        new ChartMediaInfoValue(["molestias",
                                "delectus"],
                                "nam",
                                "et",
                            [new ChartMediaInfoValueSeries("title",
                                    "excepturi",
                                    884.1030),
                            new ChartMediaInfoValueSeries("comment",
                                    "voluptatem",
                                    972.8210),
                            new ChartMediaInfoValueSeries("phone",
                                    "eaque",
                                    44.4173),
                            new ChartMediaInfoValueSeries("category",
                                    "sunt",
                                    66.4766)],
                            [new MapColor(159, 211, 103)])),
                    new ImageMediaInfo("et recusandae corporis",
                            "adipisci",
                            "rerum quae suscipit",
                        new ImageMediaInfoValue("http://flossie.biz",
                                "http://bailee.org"),
                            292.8580)],
                        1)],
                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "id",
                        "est quisquam quia",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Name;",
                        "email",
                        "laborum ducimus voluptatum",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("est voluptatem inventore",
                        "c7a345ca-4b20-6f86-e8f9-563dcbaeed68",
                        () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "createdAt",
                        "occaecati"),
                new ActionToggle("ipsam est voluptatem",
                        "a4f69564-9364-8de2-1c30-ad6ab397a0a4",
                        () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "avatar",
                        "dolorem"),
                new ActionButton("aut debitis sed",
                        "https://picsum.photos/640/480/?image=73",
                        "b2133e6b-bee3-be50-b251-5d5d90304b2f",
                        () => { Console.WriteLine("error"); return Task.CompletedTask; },
                        "title",
                        true,
                        true,
                        true,
                        "aspernatur")]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.HardLight;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Layer testDynamicDataSource = new BaseTileLayer(BlendMode.Lighter,
                    new Effect("libero",
                        8789508.8400),
                    33388001.6649,
                    9160.2091,
                    142.3091,
                new SpatialReference(8,
                        "non",
                        "error",
                        "enim"),
                new Extent(-134.4870,
                        -161.6238,
                        -23.0341,
                        -69.8283,
                        900.2706,
                        207.5277,
                        991.6898,
                        841.5972,
                    new SpatialReference(9,
                            "qui",
                            "sit",
                            "soluta"),
                        true,
                        true),
                ListMode.Hide,
                    0.4187,
                    true,
                new TileInfo(890.7664,
                        TileInfoFormat.Lerc,
                        true,
                    [new LOD(5,
                            "doloremque",
                            47.9139,
                            38273521.7066),
                    new LOD(5,
                            "aut",
                            13.7779,
                            620997.8672),
                    new LOD(8,
                            "et",
                            4.8428,
                            34207691.5608),
                    new LOD(5,
                            "ut",
                            16.5153,
                            43331778.1646)],
                    new Point(-127.4909,
                            84.3725,
                            -134.2476,
                            10.8492,
                            644.7931,
                        new SpatialReference(7,
                                "est",
                                "voluptatem",
                                "ipsam"),
                            true,
                            true,
                            70.5179),
                        [8,
                            6,
                            1,
                            9],
                    new SpatialReference(8,
                            "possimus",
                            "voluptatum",
                            "occaecati")),
                    "atque dolorem magnam",
                new TimeExtent(new DateTime(2011, 10, 22, 22, 15, 41),
                        new DateTime(2019, 8, 3, 4, 1, 6)));
        await featureLayer.SetDynamicDataSource(testDynamicDataSource);
        var dynamicDataSource = await featureLayer.GetDynamicDataSource();
        Assert.AreEqual(testDynamicDataSource, dynamicDataSource);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return Date();",
                        "quaerat sit quam"),
                ElevationInfoMode.OnTheGround,
                    153.0560,
                ElevationUnit.Miles);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("amet",
                    39792801.7307)],
                    true,
                new FeatureFilter(69.3929,
                    new Polyline([new MapPath([new MapPoint([746.7600,
                                621.6082,
                                166.2166]),
                            new MapPoint([990.0219,
                                233.1646,
                                877.6905,
                                471.7331]),
                            new MapPoint([415.2513,
                                120.3661,
                                854.8336])]),
                            new MapPath([new MapPoint([693.9436,
                                    269.2122]),
                                new MapPoint([774.9830,
                                    314.2563])]),
                            new MapPath([new MapPoint([218.1310,
                                    454.6977,
                                    683.6175,
                                    47.7236]),
                                new MapPoint([642.0685,
                                    738.9171,
                                    223.2936,
                                    267.1023]),
                                new MapPoint([512.3429,
                                    549.3825])]),
                            new MapPath([new MapPoint([38.3643,
                                    511.6641]),
                                new MapPoint([16.9026,
                                    549.0504,
                                    608.5064,
                                    148.2578]),
                                new MapPoint([603.8048,
                                    286.8203,
                                    528.9434,
                                    831.6737])])],
                        new SpatialReference(4,
                                "nihil",
                                "nisi",
                                "et"),
                            true,
                            true),
                        [5,
                            2,
                            5],
                    SpatialRelationship.Contains,
                    new TimeExtent(new DateTime(2015, 8, 4, 13, 50, 12),
                            new DateTime(2003, 3, 1, 6, 52, 24)),
                        QueryUnits.Miles,
                        "Street = '123 Main St.'"),
                    [new Effect("perspiciatis",
                        19239398.8286),
                        new Effect("aut",
                            6901211.5586),
                        new Effect("similique",
                            20974689.9624)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "email",
                    "repudiandae",
                    "sed molestiae tenetur reprehenderit distinctio molestiae qui",
                    6,
                    true,
                    true,
                    new { Value = "iure" },
                FieldValueType.UniqueIdentifier,
                new RangeDomain("necessitatibus",
                        "magnam",
                        "name")),
            new Field(default,
                    "id",
                    "modi",
                    "at vero molestias impedit natus excepturi",
                    1,
                    true,
                    true,
                    new { Value = "reiciendis" },
                FieldValueType.Measurement,
                new InheritedDomain("updatedAt")),
            new Field(default,
                    "name",
                    "aliquid",
                    "earum aut voluptas repudiandae incidunt possimus explicabo",
                    1,
                    true,
                    true,
                    new { Value = "occaecati" },
                FieldValueType.Description,
                new InheritedDomain("token")),
            new Field(default,
                    "email",
                    "et",
                    "autem molestiae velit nihil",
                    2,
                    true,
                    true,
                    new { Value = "consequuntur" },
                FieldValueType.DateAndTime,
                new RangeDomain("nihil",
                        "non",
                        "phone"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("ex");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("laudantium qui rem",
                    "id eveniet laboriosam ea et et",
                    true,
                    [new FieldElement("email",
                        "voluptatem",
                        "excepturi sunt non consequatur esse architecto a",
                        "modi",
                        "rerum",
                        "eos",
                        "incidunt",
                        new CodedValueDomain<string>(),
                        new BarcodeScannerInput()),
                        new FieldElement("password",
                            "assumenda",
                            "sit explicabo nulla temporibus occaecati nobis",
                            "dolores",
                            "architecto",
                            "cupiditate",
                            "qui",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput()),
                        new FieldElement("token",
                            "iure",
                            "voluptatem occaecati voluptas earum aut architecto",
                            "distinctio",
                            "molestias",
                            "corporis",
                            "enim",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput())],
                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "email",
                        "saepe nostrum nobis",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "name",
                        "possimus est nemo",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "avatar",
                        "eum aut aut",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Name;",
                        "category",
                        "occaecati omnis quia",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(-108.8666,
                    175.2124,
                    58.8572,
                    -11.2158,
                    174.4046,
                    700.9839,
                    179.9753,
                    518.8716,
                new SpatialReference(9,
                        "dolorem",
                        "blanditiis",
                        "velit"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveAlong,
                    "itaque",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    30045485.0895,
                    32948.1761,
                    true,
                    new Dimension(473.6975),
                new TextSymbol("corporis sit accusantium",
                    new MapColor(36, 8, 155),
                    new MapColor(105, 5, 208),
                        new Dimension(330.9540),
                    new MapFont(new Dimension(305.2586),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        329.8594,
                    new MapColor(149, 124, 180),
                    new MapColor(84, 61, 90),
                        441.7838,
                    HorizontalAlignment.Left,
                        true,
                        50.9768,
                        new Dimension(277.3859),
                        true),
                    true,
                    "Province = 'Ontario'"),
            new Label(LabelPlacement.BelowAlong,
                    "officiis",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    1879512.8506,
                    12379.4859,
                    true,
                    new Dimension(289.5062),
                new TextSymbol("sapiente dignissimos voluptatem",
                    new MapColor(185, 252, 4),
                    new MapColor(233, 105, 26),
                        new Dimension(423.2780),
                    new MapFont(new Dimension(764.7537),
                            "Bookman",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.None),
                        82.9572,
                    new MapColor(41, 216, 145),
                    new MapColor(193, 124, 130),
                        199.4260,
                    HorizontalAlignment.Right,
                        true,
                        236.5490,
                        new Dimension(764.1367),
                        true),
                    true,
                    "Province = 'Ontario'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("culpa",
                SortOrder.Descending,
                    "ut")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("ut velit debitis",
                    new MapColor(47, 172, 67),
                    new MapColor(81, 78, 169),
                        new Dimension(7.1281),
                    new MapFont(new Dimension(817.8595),
                            "Times New Roman",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        682.2595,
                    new MapColor(236, 8, 70),
                    new MapColor(167, 20, 190),
                        203.2789,
                    HorizontalAlignment.Center,
                        true,
                        549.5538,
                        new Dimension(720.7464),
                        true),
                    "magnam",
                [new RotationVariable("cupiditate",
                    Axis.Heading,
                    RotationType.Arithmetic,
                    new VisualVariableLegendOptions(true,
                            "id ex neque"),
                        "officiis",
                        "sed ut qui")],
                new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                    new AlgorithmicColorRamp(Algorithm.LabLch,
                        new MapColor(34, 171, 112),
                        new MapColor(125, 92, 132)),
                        699.3980,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(625.2716,
                                741.6251),
                        new AuthoringInfoField1ClassBreakInfos(571.4207,
                                936.0180)],
                            "voluptates",
                            "aut",
                            "aut"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(168.2585,
                                898.7044),
                        new AuthoringInfoField1ClassBreakInfos(354.1495,
                                148.2207)],
                            "quisquam",
                            "quo",
                            "consequatur"),
                        ["sed",
                            "dignissimos",
                            "consequatur"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "eos",
                        true,
                    LengthUnit.Millimeters,
                        784.3769,
                        369.5264,
                        128.0990,
                        437.0272));
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(6,
                    "nesciunt",
                    "blanditiis",
                    "quibusdam");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("veritatis ut repellendus sapiente et",
                DrawingTool.Freehand,
                    "id",
                new Graphic(new Point(135.9099,
                            44.6275,
                            113.6848,
                            -22.4905,
                            289.6981,
                        new SpatialReference(2,
                                "aliquid",
                                "rerum",
                                "cupiditate"),
                            true,
                            true,
                            583.6392),
                    new TextSymbol("in ut dolorem",
                        new MapColor(0, 97, 50),
                        new MapColor(151, 145, 41),
                            new Dimension(598.5161),
                        new MapFont(new Dimension(221.7509),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            641.5779,
                        new MapColor(109, 172, 211),
                        new MapColor(64, 164, 15),
                            3.7648,
                        HorizontalAlignment.Center,
                            true,
                            803.3045,
                            new Dimension(886.0964),
                            true),
                    new PopupTemplate("a perferendis deleniti",
                            "consequuntur",
                            ["voluptatibus",
                                "qui",
                                "qui"],
                        [new FieldInfo("email",
                                "veritatis",
                                "voluptatibus",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Var)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "sint",
                                    "harum quo nisi")),
                        new MediaPopupContent("minima voluptatem ut",
                                "commodi magni culpa qui saepe perferendis",
                            [new ImageMediaInfo("omnis asperiores itaque",
                                    "eos",
                                    "dolorem similique ducimus",
                                new ImageMediaInfoValue("https://liana.name",
                                        "http://anissa.info"),
                                    103.8973)],
                                3),
                        new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                    "quos",
                                    "voluptatem tempore enim"))],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "group",
                                "voluptas totam voluptas",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "createdAt",
                                "similique qui et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("sit distinctio ipsa",
                                "5da998ee-b330-a941-86b5-ac7943045c7f",
                                () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "aut"),
                        new ActionButton("culpa corrupti ullam",
                                "https://picsum.photos/640/480/?image=849",
                                "d39d95f6-c7cc-59d4-8570-2734caaccc26",
                                () => { Console.WriteLine("at"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "non"),
                        new ActionToggle("quos repellendus dolore",
                                "81c4410c-9ff9-0648-332f-fbc282732e1c",
                                () => { Console.WriteLine("incidunt"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "doloremque")]),
                        new AttributesDictionary(),
                        true,
                        "in",
                        "quisquam",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quia",
                            2)),
                    new Thumbnail("error",
                        "molestiae",
                        99.0193,
                        63.2066))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2011, 3, 21, 6, 40, 49),
                    new DateTime(2007, 5, 26, 2, 38, 31));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("dolor",
                    "commodi",
                new TimeExtent(new DateTime(2007, 10, 2, 5, 45, 8),
                        new DateTime(2017, 5, 3, 8, 26, 54)),
                new TimeInterval(TemporalTime.Centuries,
                        358.1272),
                    [new DateTime(2023, 2, 13, 9, 13, 8),
                        new DateTime(2019, 6, 24, 16, 25, 27),
                        new DateTime(2005, 4, 24, 11, 49, 27)],
                    "Pacific/Port_Moresby",
                    "sed");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Days,
                    703.3881);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("04f360a0-c104-f516-55bc-c75505d2f035",
                    "createdAt",
                [new FeatureTemplate("est eligendi deserunt quod quam voluptate dicta",
                    DrawingTool.Point,
                        "title",
                    new Graphic(new Polygon([new MapPath([new MapPoint([246.7751,
                                    678.4447,
                                    766.4973,
                                    83.1144]),
                                new MapPoint([983.0250,
                                    281.8452]),
                                new MapPoint([446.9772,
                                    950.8823])]),
                                new MapPath([new MapPoint([560.2854,
                                        315.9647,
                                        641.1065,
                                        635.6133]),
                                    new MapPoint([87.5860,
                                        953.9215,
                                        114.5120,
                                        747.6037]),
                                    new MapPoint([309.8439,
                                        862.7964,
                                        10.6077,
                                        961.0765])]),
                                new MapPath([new MapPoint([800.3570,
                                        806.1391,
                                        85.5289]),
                                    new MapPoint([266.4404,
                                        599.6812,
                                        640.1672,
                                        78.0467])]),
                                new MapPath([new MapPoint([52.1001,
                                        79.8132,
                                        891.9660]),
                                    new MapPoint([865.4237,
                                        816.1840]),
                                    new MapPoint([365.8133,
                                        676.5526,
                                        339.8434])])],
                            new SpatialReference(3,
                                    "vitae",
                                    "et",
                                    "nostrum"),
                            new Point(-72.7795,
                                    -8.4177,
                                    -57.9262,
                                    -53.2878,
                                    8.9016,
                                new SpatialReference(1,
                                        "laudantium",
                                        "ut",
                                        "ut"),
                                    true,
                                    true,
                                    959.0724),
                                true,
                                true,
                                true),
                        new TextSymbol("quia nesciunt ex",
                            new MapColor(146, 212, 60),
                            new MapColor(113, 177, 187),
                                new Dimension(849.6036),
                            new MapFont(new Dimension(974.3840),
                                    "Helvetica",
                                MapFontStyle.Oblique,
                                FontWeight.Normal,
                                TextDecoration.LineThrough),
                                553.4734,
                            new MapColor(203, 89, 19),
                            new MapColor(192, 149, 148),
                                737.1265,
                            HorizontalAlignment.Left,
                                true,
                                952.7577,
                                new Dimension(538.7910),
                                true),
                        new PopupTemplate("dicta adipisci ut",
                                "iure",
                                ["fugiat",
                                    "reiciendis",
                                    "quibusdam"],
                            [new FieldInfo("name",
                                    "assumenda",
                                    "eum",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("comment",
                                    "qui",
                                    "est",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count)],
                            [new TextPopupContent("explicabo quibusdam aspernatur")],
                            [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "email",
                                    "eum voluptatum itaque",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "comment",
                                    "et nulla voluptas",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "name",
                                    "ut dolor mollitia",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "createdAt",
                                    "impedit iusto ab",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("est ad pariatur",
                                    "74d5871f-5aff-560f-583f-73e29029f718",
                                    () => { Console.WriteLine("hic"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "id",
                                    "possimus"),
                            new ActionButton("necessitatibus blanditiis impedit",
                                    "https://picsum.photos/640/480/?image=817",
                                    "1aed4fdd-ae91-10cf-218f-c7127b3c2452",
                                    () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "sequi"),
                            new ActionButton("enim omnis quos",
                                    "https://picsum.photos/640/480/?image=691",
                                    "5b09262f-783b-d8c5-43f7-83812a1ccd5b",
                                    () => { Console.WriteLine("labore"); return Task.CompletedTask; },
                                    "name",
                                    true,
                                    true,
                                    true,
                                    "sed")]),
                            new AttributesDictionary(),
                            true,
                            "quos",
                            "sed",
                            new GraphicOrigin(Guid.NewGuid(),
                                "non",
                                8)),
                        new Thumbnail("aut",
                            "voluptatem",
                            252.2123,
                            233.8061))],
                new Dictionary<string, Domain>() {{ "doloremque", new RangeDomain("aut",
        "blanditiis",
        "updatedAt") },
                { "tenetur", new RangeDomain("recusandae",
        "voluptate",
        "createdAt") },
                { "vero", new RangeDomain("accusantium",
        "possimus",
        "createdAt") }
                },
                    "temporibus"),
            new FeatureType("4435daec-4453-49be-fc7e-8b1ac86e35f5",
                    "token",
                [new FeatureTemplate("optio iure aut rerum repellendus autem fuga",
                    DrawingTool.None,
                        "group",
                    new Graphic(new Polygon([new MapPath([new MapPoint([851.5954,
                                    403.8453,
                                    390.2078,
                                    815.3699]),
                                new MapPoint([897.4368,
                                    917.0329]),
                                new MapPoint([474.8436,
                                    39.2698,
                                    853.5783])]),
                                new MapPath([new MapPoint([813.8048,
                                        171.7798,
                                        565.6828]),
                                    new MapPoint([529.2807,
                                        513.4273,
                                        992.0216,
                                        348.7661]),
                                    new MapPoint([819.0985,
                                        572.8125])]),
                                new MapPath([new MapPoint([216.3289,
                                        582.2650,
                                        83.4340]),
                                    new MapPoint([220.9537,
                                        528.5640]),
                                    new MapPoint([979.5320,
                                        388.4297,
                                        21.2858]),
                                    new MapPoint([13.3337,
                                        671.2969,
                                        564.6547,
                                        636.9605])]),
                                new MapPath([new MapPoint([287.8968,
                                        96.4343]),
                                    new MapPoint([650.7450,
                                        838.8645,
                                        613.6540]),
                                    new MapPoint([393.3496,
                                        429.4029,
                                        811.7354]),
                                    new MapPoint([338.1696,
                                        364.4437,
                                        283.0599])])],
                            new SpatialReference(6,
                                    "cumque",
                                    "ipsam",
                                    "laborum"),
                            new Point(-91.1416,
                                    1.3245,
                                    8.7925,
                                    -7.9998,
                                    142.2598,
                                new SpatialReference(4,
                                        "aliquid",
                                        "consequatur",
                                        "animi"),
                                    true,
                                    true,
                                    846.8343),
                                true,
                                true,
                                true),
                        new TextSymbol("eligendi et beatae",
                            new MapColor(74, 72, 48),
                            new MapColor(45, 155, 158),
                                new Dimension(481.8366),
                            new MapFont(new Dimension(144.4496),
                                    "Bookman",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.None),
                                491.9381,
                            new MapColor(193, 102, 4),
                            new MapColor(197, 180, 117),
                                267.6667,
                            HorizontalAlignment.Center,
                                true,
                                54.4712,
                                new Dimension(279.1511),
                                true),
                        new PopupTemplate("est dolor sed",
                                "corrupti",
                                ["laborum",
                                    "est",
                                    "ut",
                                    "quos"],
                            [new FieldInfo("comment",
                                    "unde",
                                    "ut",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("title",
                                    "et",
                                    "animi",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new AttachmentsPopupContent("quaerat laudantium delectus",
                                    "dolor exercitationem eius ad est sunt cumque",
                                    AttachmentsPopupContentDisplayType.Auto)],
                            [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "avatar",
                                    "quasi accusamus ut",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature['FieldName'];",
                                    "status",
                                    "et quaerat ut",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "category",
                                    "nihil facilis aspernatur",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("omnis alias iure",
                                    "fa520084-e010-8e23-a1a4-0a7ff7468a88",
                                    () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "token",
                                    "dicta"),
                            new ActionToggle("consequatur qui tenetur",
                                    "815ea1d4-2f0c-9d64-f427-1f3d2f7f5b7a",
                                    () => { Console.WriteLine("minima"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "title",
                                    "ducimus")]),
                            new AttributesDictionary(),
                            true,
                            "repellendus",
                            "nulla",
                            new GraphicOrigin(Guid.NewGuid(),
                                "omnis",
                                2)),
                        new Thumbnail("sit",
                            "quia",
                            289.3547,
                            262.8950))],
                new Dictionary<string, Domain>() {{ "harum", new InheritedDomain("id") },
                { "facilis", new RangeDomain("et",
        "dolores",
        "title") },
                { "eum", new InheritedDomain("id") },
                { "dolor", new InheritedDomain("phone") }
                },
                    "autem")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2005, 4, 12, 20, 18, 57),
                    new DateTime(2023, 10, 27, 7, 44, 17));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
