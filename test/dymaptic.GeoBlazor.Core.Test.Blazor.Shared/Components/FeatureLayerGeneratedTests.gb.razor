@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")"
                        OutFields="@(["est",
                            "autem"])"
                        DefinitionExpression="@("officiis")"
                        MinScale="@(45805.7246)"
                        MaxScale="@(7211483.7766)"
                        ObjectIdField="@("qui")"
                        GeometryType="@(FeatureGeometryType.Polyline)"
                        Title="@("accusamus in nostrum")"
                        Opacity="@(0.3065)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        ApiKey="@("omnis")"
                        BlendMode="@(BlendMode.DestinationIn)"
                        Charts="@(["cum",
                            "corporis"])"
                        Copyright="@("nesciunt")"
                        DateFieldsTimeZone="@("ea")"
                        DisplayField="@("praesentium")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("nostrum",
                            34385758.7664))"
                        FullExtent="@(new Extent(-59.1778,
                                27.2773,
                                13.7475,
                                -17.5796,
                                360.7028,
                                713.3488,
                                117.4235,
                                857.5468,
                            new SpatialReference(5,
                                    "magnam",
                                    "alias",
                                    "laborum"),
                                true,
                                true))"
                        GdbVersion="@("7.8.1.2")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2007, 3, 13, 0, 56, 36))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(335.8938)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        SpatialReference="@(new SpatialReference(1,
                                "eum",
                                "delectus",
                                "molestias"))"
                        TypeIdField="@("quo")"
                        Types="@([new FeatureType("4b85be37-df44-48a5-d844-aaee3877a0f2",
                                "status",
                            [new FeatureTemplate("saepe ea aliquam cupiditate eos et",
                                DrawingTool.Circle,
                                    "token",
                                new Graphic(new Point(-30.8215,
                                            -23.5989,
                                            -101.8877,
                                            64.1531,
                                            705.6350,
                                        new SpatialReference(6,
                                                "vel",
                                                "voluptas",
                                                "quia"),
                                            true,
                                            true,
                                            515.6423),
                                    new TextSymbol("at consequuntur voluptates",
                                        new MapColor(24, 75, 225),
                                        new MapColor(41, 177, 123),
                                            new Dimension(971.9411),
                                        new MapFont(new Dimension(332.6316),
                                                "Courier New",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bolder,
                                            TextDecoration.None),
                                            867.6746,
                                        new MapColor(99, 59, 232),
                                        new MapColor(68, 24, 14),
                                            748.7610,
                                        HorizontalAlignment.Left,
                                            true,
                                            901.8397,
                                            new Dimension(5.2892),
                                            true),
                                    new PopupTemplate("nostrum ad officia",
                                            "vel",
                                            ["rerum",
                                                "sit",
                                                "et"],
                                        [new FieldInfo("updatedAt",
                                                "qui",
                                                "praesentium",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDateLeShortTime),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                        [new FieldsPopupContent([new FieldInfo("token",
                                                    "iste",
                                                    "aut",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.ShortDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Var)],
                                                "repudiandae error eius modi ea",
                                                "et animi eos"),
                                        new RelationshipPopupContent("quidem exercitationem tempora",
                                                "tenetur ut non nobis placeat qui perspiciatis",
                                                5,
                                                "distinctio",
                                            [new RelatedRecordsInfoFieldOrder("quia",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("beatae",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("numquam",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("magnam",
                                                OrderBy.Desc)],
                                                6),
                                        new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "eaque",
                                                    "quo velit ut")),
                                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "animi",
                                                    "aspernatur dolorem ad"))],
                                        [new ExpressionInfo("return Date();",
                                                "comment",
                                                "harum exercitationem tenetur",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionToggle("velit nulla non",
                                                "491ed875-0614-cb2b-d547-9f92dc415a8b",
                                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "updatedAt",
                                                "debitis"),
                                        new ActionButton("autem omnis quia",
                                                "https://picsum.photos/640/480/?image=24",
                                                "fbd18544-a405-3977-757b-17023a835c38",
                                                () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                                "updatedAt",
                                                true,
                                                true,
                                                true,
                                                "et")]),
                                        new AttributesDictionary(),
                                        true,
                                        "qui",
                                        "reiciendis",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "eum",
                                            6)),
                                    new Thumbnail("porro",
                                        "ab",
                                        269.7902,
                                        288.0480)),
                            new FeatureTemplate("voluptatem aliquid nulla repudiandae corrupti",
                                DrawingTool.UpArrow,
                                    "phone",
                                new Graphic(new Polyline([new MapPath([new MapPoint([243.9242,
                                                792.1413]),
                                            new MapPoint([637.7144,
                                                402.7764,
                                                631.0796]),
                                            new MapPoint([696.8249,
                                                609.2236])]),
                                            new MapPath([new MapPoint([819.4935,
                                                    525.9878,
                                                    107.0994]),
                                                new MapPoint([63.3247,
                                                    228.1786,
                                                    355.2954,
                                                    744.2191]),
                                                new MapPoint([949.2826,
                                                    117.0430,
                                                    277.5118])])],
                                        new SpatialReference(4,
                                                "nihil",
                                                "veritatis",
                                                "aut"),
                                            true,
                                            true),
                                    new TextSymbol("provident est est",
                                        new MapColor(61, 169, 245),
                                        new MapColor(37, 4, 20),
                                            new Dimension(165.0583),
                                        new MapFont(new Dimension(224.5558),
                                                "Times New Roman",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bolder,
                                            TextDecoration.LineThrough),
                                            137.3760,
                                        new MapColor(176, 106, 9),
                                        new MapColor(148, 145, 11),
                                            191.3864,
                                        HorizontalAlignment.Center,
                                            true,
                                            496.0457,
                                            new Dimension(618.4342),
                                            true),
                                    new PopupTemplate("officiis corrupti temporibus",
                                            "officiis",
                                            ["accusantium",
                                                "corporis",
                                                "natus"],
                                        [new FieldInfo("name",
                                                "voluptates",
                                                "vero",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("token",
                                                "perspiciatis",
                                                "est",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("title",
                                                "sed",
                                                "qui",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.ShortDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Max)],
                                        [new RelationshipPopupContent("ad veniam voluptas",
                                                "sunt ipsam illo ut quas",
                                                8,
                                                "quam",
                                            [new RelatedRecordsInfoFieldOrder("animi",
                                                OrderBy.Asc)],
                                                8),
                                        new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "delectus",
                                                    "illum et consectetur")),
                                        new AttachmentsPopupContent("est voluptates repellendus",
                                                "recusandae eveniet sint et beatae",
                                                AttachmentsPopupContentDisplayType.Auto),
                                        new AttachmentsPopupContent("autem qui esse",
                                                "eos nihil error ut sunt",
                                                AttachmentsPopupContentDisplayType.Auto)],
                                        [new ExpressionInfo("return $feature['FieldName'];",
                                                "password",
                                                "ut voluptatem enim",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "group",
                                                "porro aliquid sed",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "token",
                                                "voluptas consequatur est",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature['FieldName'];",
                                                "id",
                                                "harum eaque accusantium",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionToggle("quo fugit harum",
                                                "d4a83b38-c389-77af-dd87-c544a833bc83",
                                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "comment",
                                                "rerum"),
                                        new ActionButton("quisquam itaque molestiae",
                                                "https://picsum.photos/640/480/?image=986",
                                                "5488b333-87c5-1d30-2684-c21e9babd334",
                                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                "status",
                                                true,
                                                true,
                                                true,
                                                "velit"),
                                        new ActionToggle("rerum accusantium est",
                                                "5587bf5e-7e90-1790-4df0-8fcfc55e0329",
                                                () => { Console.WriteLine("laudantium"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "createdAt",
                                                "beatae")]),
                                        new AttributesDictionary(),
                                        true,
                                        "numquam",
                                        "incidunt",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "est",
                                            3)),
                                    new Thumbnail("eius",
                                        "voluptas",
                                        23.4670,
                                        107.1835))],
                            new Dictionary<string, Domain>() {{ "explicabo", new InheritedDomain("email") },
                            { "numquam", new RangeDomain("et",
        "fugit",
        "password") }
                            },
                                "corporis")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Centuries)"
                            Value="@(92.7685)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("quia")"
                            EndField="@("labore")"
                            Stops="@([new DateTime(2017, 9, 18, 10, 23, 22),
                                new DateTime(2022, 6, 3, 1, 16, 54),
                                new DateTime(2023, 2, 21, 15, 46, 22),
                                new DateTime(2017, 8, 1, 20, 36, 29)])"
                            TimeZone="@("America/Caracas")"
                            TrackIdField="@("voluptas")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Milliseconds)"
                                Value="@(757.0701)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2021, 4, 20, 9, 53, 55))"
                                End="@(new DateTime(2007, 2, 21, 1, 21, 12))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2018, 5, 20, 14, 43, 0))"
                            End="@(new DateTime(2022, 7, 27, 20, 25, 44))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("nostrum qui quia magni accusamus expedita inventore")"
                            DrawingTool="@(DrawingTool.UpArrow)"
                            Name="@("phone")"
                            Thumbnail="@(new Thumbnail("velit",
                                "aut",
                                68.7828,
                                233.2036))">
                            <Graphic 
                                Geometry="@(new Polygon([new MapPath([new MapPoint([513.0275,
                                            730.2854,
                                            0.9332]),
                                        new MapPoint([349.6775,
                                            224.7960]),
                                        new MapPoint([46.6776,
                                            581.8627,
                                            237.5052,
                                            329.8557])]),
                                        new MapPath([new MapPoint([788.1117,
                                                353.2214,
                                                550.5896]),
                                            new MapPoint([985.7244,
                                                221.1038]),
                                            new MapPoint([86.9754,
                                                901.5629,
                                                508.3933]),
                                            new MapPoint([873.0696,
                                                101.4114,
                                                423.3834])]),
                                        new MapPath([new MapPoint([327.6794,
                                                470.1972,
                                                444.2206]),
                                            new MapPoint([879.2040,
                                                587.2518,
                                                522.8015,
                                                931.0691]),
                                            new MapPoint([460.0368,
                                                937.7335,
                                                611.8335]),
                                            new MapPoint([319.0709,
                                                480.8854,
                                                423.9881])])],
                                    new SpatialReference(5,
                                            "hic",
                                            "consequatur",
                                            "qui"),
                                    new Point(128.8437,
                                            52.6174,
                                            -38.1602,
                                            -29.6944,
                                            79.2446,
                                        new SpatialReference(6,
                                                "aut",
                                                "porro",
                                                "aut"),
                                            true,
                                            true,
                                            122.6616),
                                        true,
                                        true,
                                        true))"
                                Symbol="@(new TextSymbol("rerum sit nobis",
                                    new MapColor(93, 190, 180),
                                    new MapColor(106, 6, 217),
                                        new Dimension(947.5072),
                                    new MapFont(new Dimension(211.6493),
                                            "Bookman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        276.5622,
                                    new MapColor(168, 84, 187),
                                    new MapColor(60, 150, 156),
                                        508.3106,
                                    HorizontalAlignment.Center,
                                        true,
                                        570.1104,
                                        new Dimension(337.6055),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("voluptas illum laudantium",
                                        "velit",
                                        ["totam",
                                            "rerum",
                                            "occaecati",
                                            "rem"],
                                    [new FieldInfo("phone",
                                            "reiciendis",
                                            "aut",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("name",
                                            "consequatur",
                                            "sint",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("title",
                                            "ab",
                                            "error",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                    [new FieldsPopupContent([new FieldInfo("group",
                                                "voluptatem",
                                                "asperiores",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateLeShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("name",
                                                "ut",
                                                "est",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDate),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("email",
                                                "ad",
                                                "eos",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateLeShortTime),
                                                true,
                                                true,
                                            StatisticType.Count)],
                                            "quis tempora doloremque ea molestiae laborum",
                                            "ab amet illum"),
                                    new MediaPopupContent("nemo officia et",
                                            "vitae quisquam ut error",
                                        [new PieChartMediaInfo("facilis libero aliquam",
                                                "doloremque",
                                                "esse corrupti voluptatem",
                                            new ChartMediaInfoValue(["ab",
                                                    "nesciunt",
                                                    "debitis"],
                                                    "et",
                                                    "dolor",
                                                [new ChartMediaInfoValueSeries("token",
                                                        "ab",
                                                        830.5047),
                                                new ChartMediaInfoValueSeries("group",
                                                        "dolor",
                                                        308.5408),
                                                new ChartMediaInfoValueSeries("name",
                                                        "illo",
                                                        579.8664),
                                                new ChartMediaInfoValueSeries("comment",
                                                        "qui",
                                                        922.9464)],
                                                [new MapColor(149, 60, 187)])),
                                        new BarChartMediaInfo("quis ut in",
                                                "qui",
                                                "alias eveniet reprehenderit",
                                            new ChartMediaInfoValue(["velit",
                                                    "et",
                                                    "ipsa",
                                                    "amet"],
                                                    "natus",
                                                    "odio",
                                                [new ChartMediaInfoValueSeries("comment",
                                                        "quaerat",
                                                        107.3666),
                                                new ChartMediaInfoValueSeries("group",
                                                        "sed",
                                                        644.0428),
                                                new ChartMediaInfoValueSeries("title",
                                                        "error",
                                                        423.3212),
                                                new ChartMediaInfoValueSeries("phone",
                                                        "ex",
                                                        762.7982)],
                                                [new MapColor(231, 186, 81),
                                                new MapColor(108, 50, 220),
                                                new MapColor(75, 245, 96),
                                                new MapColor(165, 41, 64)])),
                                        new BarChartMediaInfo("et accusantium et",
                                                "distinctio",
                                                "soluta ipsum quas",
                                            new ChartMediaInfoValue(["ratione",
                                                    "voluptates",
                                                    "voluptatum"],
                                                    "temporibus",
                                                    "at",
                                                [new ChartMediaInfoValueSeries("name",
                                                        "adipisci",
                                                        921.6155),
                                                new ChartMediaInfoValueSeries("status",
                                                        "facilis",
                                                        488.9581),
                                                new ChartMediaInfoValueSeries("category",
                                                        "saepe",
                                                        715.8587),
                                                new ChartMediaInfoValueSeries("phone",
                                                        "est",
                                                        27.4863)],
                                                [new MapColor(231, 161, 230),
                                                new MapColor(3, 51, 83),
                                                new MapColor(160, 19, 30),
                                                new MapColor(91, 219, 124)]))],
                                            6)],
                                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "status",
                                            "eveniet ducimus architecto",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "category",
                                            "et vero blanditiis",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "avatar",
                                            "harum sed doloribus",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("pariatur quas ut",
                                            "d4b07af2-37cd-c81c-2c7e-187ec7470b71",
                                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "token",
                                            "est")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("inventore")"
                                AggregateGeometries="@("qui")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "deserunt",
                                    3))">
                            </Graphic>
                        </FeatureTemplate>
                        <Graphic 
                            Geometry="@(new Polygon([new MapPath([new MapPoint([867.6786,
                                        217.9149,
                                        538.6979]),
                                    new MapPoint([705.6941,
                                        64.3421]),
                                    new MapPoint([31.3196,
                                        156.0003,
                                        275.9597,
                                        61.5461])]),
                                    new MapPath([new MapPoint([723.5957,
                                            943.3079,
                                            406.1906]),
                                        new MapPoint([151.2540,
                                            691.8965,
                                            653.0279,
                                            514.1837])]),
                                    new MapPath([new MapPoint([16.9111,
                                            423.2917,
                                            488.8875,
                                            711.2780]),
                                        new MapPoint([927.8601,
                                            95.6990,
                                            136.7337,
                                            393.9869]),
                                        new MapPoint([622.7921,
                                            798.3503,
                                            571.7104])])],
                                new SpatialReference(3,
                                        "dolorum",
                                        "illo",
                                        "sunt"),
                                new Point(50.3141,
                                        -35.6122,
                                        -105.9584,
                                        -64.2020,
                                        539.4796,
                                    new SpatialReference(8,
                                            "et",
                                            "molestias",
                                            "officiis"),
                                        true,
                                        true,
                                        712.3357),
                                    true,
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("nostrum quam tempora",
                                new MapColor(234, 203, 45),
                                new MapColor(213, 66, 203),
                                    new Dimension(471.6263),
                                new MapFont(new Dimension(965.8711),
                                        "Palatino",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.LineThrough),
                                    579.1164,
                                new MapColor(175, 247, 215),
                                new MapColor(36, 61, 66),
                                    215.2070,
                                HorizontalAlignment.Left,
                                    true,
                                    617.9207,
                                    new Dimension(444.0207),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("doloribus")"
                            AggregateGeometries="@("dicta")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "et",
                                6))">
                            <PopupTemplate 
                                Title="@("sunt aperiam nihil")"
                                StringContent="@("impedit")"
                                OutFields="@(["dolorem",
                                    "nulla"])"
                                FieldInfos="@([new FieldInfo("title",
                                        "repellat",
                                        "minus",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("id",
                                        "rem",
                                        "omnis",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("name",
                                        "itaque",
                                        "atque",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("createdAt",
                                        "nulla",
                                        "alias",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Max)])"
                                Content="@([new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "et",
                                            "magnam id expedita")),
                                new MediaPopupContent("omnis ut reiciendis",
                                        "alias neque ea sunt minima",
                                    [new PieChartMediaInfo("non dolorem rerum",
                                            "rerum",
                                            "est neque unde",
                                        new ChartMediaInfoValue(["modi",
                                                "placeat"],
                                                "qui",
                                                "eaque",
                                            [new ChartMediaInfoValueSeries("status",
                                                    "quam",
                                                    845.0875),
                                            new ChartMediaInfoValueSeries("email",
                                                    "beatae",
                                                    637.8073),
                                            new ChartMediaInfoValueSeries("group",
                                                    "et",
                                                    804.6379)],
                                            [new MapColor(132, 239, 112),
                                            new MapColor(115, 140, 34)])),
                                    new PieChartMediaInfo("et nobis vero",
                                            "vero",
                                            "sint aut rerum",
                                        new ChartMediaInfoValue(["adipisci",
                                                "molestias"],
                                                "optio",
                                                "et",
                                            [new ChartMediaInfoValueSeries("token",
                                                    "ut",
                                                    551.8471),
                                            new ChartMediaInfoValueSeries("category",
                                                    "amet",
                                                    465.3977),
                                            new ChartMediaInfoValueSeries("title",
                                                    "mollitia",
                                                    824.8074)],
                                            [new MapColor(155, 140, 243)]))],
                                        9),
                                new RelationshipPopupContent("suscipit eligendi eius",
                                        "eos velit ut beatae ut ab pariatur",
                                        5,
                                        "veniam",
                                    [new RelatedRecordsInfoFieldOrder("dolor",
                                        OrderBy.Desc)],
                                        3),
                                new RelationshipPopupContent("fugit quasi itaque",
                                        "sint reiciendis laborum magni",
                                        2,
                                        "est",
                                    [new RelatedRecordsInfoFieldOrder("voluptatem",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("sequi",
                                        OrderBy.Desc),
                                    new RelatedRecordsInfoFieldOrder("non",
                                        OrderBy.Desc)],
                                        4)])"
                                ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "createdAt",
                                        "sunt quos error",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "status",
                                        "ducimus odio vero",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionToggle("magnam accusamus perspiciatis",
                                        "8ab8f61c-aea7-da64-ead8-213ba4d9c189",
                                        () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "email",
                                        "pariatur")])">
                            </PopupTemplate>
                        </Graphic>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                    new MapColor(112, 113, 119),
                                    new MapColor(47, 50, 68)),
                                    253.5347,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(951.4264,
                                            315.5584),
                                    new AuthoringInfoField1ClassBreakInfos(367.9655,
                                            16.5829),
                                    new AuthoringInfoField1ClassBreakInfos(105.1481,
                                            272.1195)],
                                        "alias",
                                        "nemo",
                                        "magni"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(830.2614,
                                            20.2845),
                                    new AuthoringInfoField1ClassBreakInfos(49.6350,
                                            987.8721)],
                                        "assumenda",
                                        "fuga",
                                        "et"),
                                    ["soluta",
                                        "corporis",
                                        "sunt"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "non",
                                    true,
                                LengthUnit.Feet,
                                    939.6380,
                                    118.5236,
                                    48.0215,
                                    317.8253))">
                        </UniqueValueRenderer>
                        <PopupTemplate 
                            Title="@("aperiam facilis qui")"
                            StringContent="@("provident")"
                            OutFields="@(["quod",
                                "voluptatem"])"
                            FieldInfos="@([new FieldInfo("category",
                                    "qui",
                                    "voluptatem",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Avg)])"
                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "nam",
                                        "ullam dolorem dolorem"))])"
                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "group",
                                    "impedit soluta vel",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("illum hic quo",
                                    "https://picsum.photos/640/480/?image=526",
                                    "5970b5a7-6d20-2a2d-07ea-6f8b95bc73e3",
                                    () => { Console.WriteLine("nemo"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "saepe"),
                            new ActionToggle("consectetur odio voluptatibus",
                                    "5dfce597-9d45-e272-c6c1-dd3c97d09d77",
                                    () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "id",
                                    "veniam"),
                            new ActionButton("officia et deserunt",
                                    "https://picsum.photos/640/480/?image=941",
                                    "6f07893f-19c1-02d1-4c8f-8e4cc524f115",
                                    () => { Console.WriteLine("illum"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "ea"),
                            new ActionButton("sed est sapiente",
                                    "https://picsum.photos/640/480/?image=870",
                                    "cb5bc674-ee26-9910-8555-b098b7d72c07",
                                    () => { Console.WriteLine("minus"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "quae")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("recusandae")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("dolorem")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AboveBefore)"
                            LabelExpression="@("neque")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(42898807.1858)"
                            MinScale="@(22488.7476)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(926.8878))"
                            Symbol="@(new TextSymbol("voluptas nemo quod",
                                new MapColor(178, 209, 5),
                                new MapColor(209, 228, 3),
                                    new Dimension(560.3999),
                                new MapFont(new Dimension(760.4027),
                                        "Georgia",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bolder,
                                    TextDecoration.Underline),
                                    842.0173,
                                new MapColor(57, 3, 133),
                                new MapColor(86, 121, 110),
                                    423.7970,
                                HorizontalAlignment.Left,
                                    true,
                                    758.6097,
                                    new Dimension(435.8695),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Country = 'Canada'")">
                        </Label>
                        <FormTemplate 
                            Title="@("ut necessitatibus incidunt")"
                            Description="@("sed qui accusantium qui omnis deserunt sed")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new FieldElement("createdAt",
                                "ad",
                                "accusantium delectus et sint numquam",
                                "recusandae",
                                "iure",
                                "dolores",
                                "qui",
                                new CodedValueDomain<string>(),
                                new BarcodeScannerInput())])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "status",
                                    "omnis commodi at",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "title",
                                    "quos repellat explicabo",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "password",
                                    "fuga qui omnis",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "title",
                                    "quia quia omnis",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("fugiat")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("password")"
                            Alias="@("minima")"
                            Description="@("consequatur molestias dolorum quibusdam nemo")"
                            Length="@(8)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "rerum" })"
                            ValueType="@(FieldValueType.LocationOrPlaceName)"
                            Domain="@(new InheritedDomain("group"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("inventore",
                                916136.6053),
                                new Effect("velit",
                                    47441304.1330),
                                new Effect("perspiciatis",
                                    19708181.6175)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(786.3972,
                                new Point(-117.5073,
                                        -29.4653,
                                        127.6429,
                                        0.5224,
                                        903.0658,
                                    new SpatialReference(2,
                                            "non",
                                            "consequatur",
                                            "aut"),
                                        true,
                                        true,
                                        338.7136),
                                    [9,
                                        1],
                                SpatialRelationship.Disjoint,
                                new TimeExtent(new DateTime(2003, 9, 1, 16, 2, 26),
                                        new DateTime(2014, 11, 15, 9, 1, 3)),
                                    QueryUnits.Feet,
                                    "Province = 'Ontario'"))"
                            IncludedEffect="@([new Effect("facere",
                                43669051.5347)])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "vero sapiente fuga"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(420.9599)"
                            Unit="@(ElevationUnit.Decimeters)">
                        </FeatureLayerBaseElevationInfo>
                        <GeoRSSLayer 
                            ArcGISLayerId="@("est")"
                            FullExtent="@(new Extent(6.1415,
                                    45.7655,
                                    51.3381,
                                    21.5878,
                                    176.6310,
                                    829.9719,
                                    870.6963,
                                    478.1245,
                                new SpatialReference(8,
                                        "quis",
                                        "dolorum",
                                        "aut"),
                                    true,
                                    true))"
                            ListMode="@(ListMode.Show)"
                            Opacity="@(0.0586)"
                            PersistenceEnabled="@(true)"
                            Title="@("excepturi facere earum")">
                            <TimeExtent 
                                Start="@(new DateTime(2012, 7, 3, 0, 10, 14))"
                                End="@(new DateTime(2011, 2, 25, 8, 28, 8))">
                            </TimeExtent>
                        </GeoRSSLayer>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("reprehenderit",
                    ["quasi",
                        "ut",
                        "reprehenderit"],
                    true,
                    [4,
                        2,
                        6,
                        7],
                    ["asperiores",
                        "et",
                        "ex"],
                    "group",
                    593.1279,
                    [3,
                        1,
                        4],
                    true,
                    [4,
                        7,
                        1],
                    809.4608,
                    "Phone = '555-555-5555'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(PortalItemAccess.Private,
                    "illum",
                    "optio",
                    532.8781,
                    ["velit",
                        "velit"],
                    new DateTime(2017, 11, 5, 20, 2, 4),
                    "vel",
                    "aperiam ut repudiandae impedit eaque quo",
                new Extent(144.5298,
                        82.2268,
                        -2.5065,
                        52.3729,
                        0.5652,
                        443.4750,
                        958.0940,
                        191.7543,
                    new SpatialReference(1,
                            "quis",
                            "vero",
                            "ipsum"),
                        true,
                        true),
                    ["ipsam",
                        "doloremque"],
                    "ut",
                    new DateTime(2003, 3, 24, 13, 12, 49),
                    "name",
                    226.1594),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2001, 3, 17, 18, 44, 25),
                        "sint",
                        "quo reprehenderit autem"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Point(179.7034,
                        -19.4251,
                        122.5561,
                        -12.1576,
                        618.0488,
                    new SpatialReference(6,
                            "hic",
                            "dolorem",
                            "consequatur"),
                        true,
                        true,
                        970.4033),
                new TextSymbol("accusamus ullam sequi",
                    new MapColor(216, 43, 135),
                    new MapColor(234, 97, 93),
                        new Dimension(146.1237),
                    new MapFont(new Dimension(939.0393),
                            "Helvetica",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.None),
                        41.9117,
                    new MapColor(254, 67, 42),
                    new MapColor(111, 150, 207),
                        987.7043,
                    HorizontalAlignment.Right,
                        true,
                        551.1601,
                        new Dimension(155.4765),
                        true),
                new PopupTemplate("atque ad necessitatibus",
                        "earum",
                        ["earum",
                            "neque"],
                    [new FieldInfo("createdAt",
                            "animi",
                            "eos",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("updatedAt",
                            "libero",
                            "officiis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("email",
                            "id",
                            "asperiores",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("updatedAt",
                            "vitae",
                            "unde",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new TextPopupContent("dolor laboriosam ipsum"),
                    new AttachmentsPopupContent("aliquam voluptatem dicta",
                            "error qui nesciunt quod ut",
                            AttachmentsPopupContentDisplayType.Preview),
                    new AttachmentsPopupContent("numquam quis consequatur",
                            "sed velit ut eum a",
                            AttachmentsPopupContentDisplayType.Auto),
                    new RelationshipPopupContent("rerum quam rerum",
                            "quam corporis veritatis rem sit a",
                            5,
                            "veritatis",
                        [new RelatedRecordsInfoFieldOrder("aut",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("harum",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("veritatis",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("ullam",
                            OrderBy.Desc)],
                            4)],
                    [new ExpressionInfo("return Date();",
                            "id",
                            "tempora dolor est",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("aliquid amet omnis",
                            "9aab7ce8-b871-0386-b654-82e9f32f10c4",
                            () => { Console.WriteLine("deleniti"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "omnis"),
                    new ActionToggle("dolores ea et",
                            "1604fd5f-1497-8bf6-8a23-8df74293b57f",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "id")]),
                    new AttributesDictionary(),
                    true,
                    "ea",
                    "velit",
                    new GraphicOrigin(Guid.NewGuid(),
                        "nisi",
                        1)),
                4,
            default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "repellat",
                    "dolorum",
                    741.5499,
                    ["iste",
                        "aut",
                        "voluptas"],
                    new DateTime(2005, 11, 20, 13, 12, 54),
                    "dolores",
                    "in ut quae porro",
                new Extent(-96.4219,
                        -79.9318,
                        43.4106,
                        1.6571,
                        86.8116,
                        222.0447,
                        241.9014,
                        924.2106,
                    new SpatialReference(5,
                            "sequi",
                            "ut",
                            "corrupti"),
                        true,
                        true),
                    ["consectetur",
                        "dolores"],
                    "qui",
                    new DateTime(2000, 11, 3, 10, 13, 20),
                    "category",
                    995.5439);
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Graphic> testSource = [new Graphic(new Polyline([new MapPath([new MapPoint([118.5221,
                            58.3701]),
                        new MapPoint([733.2994,
                            1.3542,
                            284.6686,
                            976.7034])]),
                        new MapPath([new MapPoint([678.6460,
                                236.0260,
                                651.2023]),
                            new MapPoint([947.4627,
                                774.9052,
                                511.9325,
                                802.1656]),
                            new MapPoint([152.8815,
                                183.1723,
                                362.9643]),
                            new MapPoint([178.8656,
                                174.0047,
                                776.9657,
                                746.0599])]),
                        new MapPath([new MapPoint([593.6605,
                                886.5186,
                                801.4271,
                                482.0286]),
                            new MapPoint([784.2339,
                                782.3164,
                                796.2478])])],
                    new SpatialReference(9,
                            "odio",
                            "architecto",
                            "et"),
                        true,
                        true),
                new TextSymbol("neque alias cum",
                    new MapColor(233, 22, 211),
                    new MapColor(3, 75, 4),
                        new Dimension(966.9704),
                    new MapFont(new Dimension(689.5242),
                            "Verdana",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        666.3402,
                    new MapColor(131, 74, 213),
                    new MapColor(188, 6, 233),
                        570.9231,
                    HorizontalAlignment.Center,
                        true,
                        788.6220,
                        new Dimension(205.6723),
                        true),
                new PopupTemplate("soluta et id",
                        "eum",
                        ["molestiae",
                            "perferendis",
                            "nesciunt",
                            "autem"],
                    [new FieldInfo("status",
                            "autem",
                            "cumque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("group",
                            "exercitationem",
                            "ut",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new TextPopupContent("et voluptas ut"),
                    new MediaPopupContent("dicta commodi totam",
                            "officiis quia amet perferendis",
                        [new BarChartMediaInfo("ipsa harum cum",
                                "ducimus",
                                "culpa doloribus et",
                            new ChartMediaInfoValue(["quis",
                                    "quo"],
                                    "quia",
                                    "id",
                                [new ChartMediaInfoValueSeries("name",
                                        "inventore",
                                        74.5541)],
                                [new MapColor(5, 215, 50),
                                new MapColor(181, 19, 166),
                                new MapColor(85, 215, 119),
                                new MapColor(115, 131, 141)]))],
                            3)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "avatar",
                            "dolorem vel autem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "avatar",
                            "beatae dolorem soluta",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "password",
                            "ducimus ipsam sit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "category",
                            "nihil impedit similique",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("et natus quas",
                            "https://picsum.photos/640/480/?image=835",
                            "976181b9-e184-56df-7538-3e410f7041a7",
                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "dolore"),
                    new ActionButton("maxime repellat alias",
                            "https://picsum.photos/640/480/?image=433",
                            "803da298-b161-6579-d64f-79dba46f0abf",
                            () => { Console.WriteLine("cupiditate"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "soluta")]),
                    new AttributesDictionary(),
                    true,
                    "quisquam",
                    "nesciunt",
                    new GraphicOrigin(Guid.NewGuid(),
                        "quis",
                        6)),
            new Graphic(new Polyline([new MapPath([new MapPoint([980.4415,
                            956.6283]),
                        new MapPoint([536.7242,
                            520.2971,
                            662.8513,
                            550.6628]),
                        new MapPoint([509.9060,
                            666.8623])]),
                        new MapPath([new MapPoint([163.2547,
                                919.3032,
                                23.6388,
                                701.7198]),
                            new MapPoint([735.1681,
                                199.7193,
                                512.4537]),
                            new MapPoint([810.2733,
                                537.5836]),
                            new MapPoint([303.4782,
                                761.8963,
                                756.8771,
                                543.5359])])],
                    new SpatialReference(4,
                            "consequatur",
                            "voluptatem",
                            "consequatur"),
                        true,
                        true),
                new TextSymbol("fugit vitae sed",
                    new MapColor(154, 33, 153),
                    new MapColor(47, 148, 44),
                        new Dimension(552.0697),
                    new MapFont(new Dimension(773.9341),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        27.4991,
                    new MapColor(253, 66, 209),
                    new MapColor(117, 74, 138),
                        45.2112,
                    HorizontalAlignment.Center,
                        true,
                        986.8166,
                        new Dimension(509.2897),
                        true),
                new PopupTemplate("magnam adipisci est",
                        "quis",
                        ["autem",
                            "libero",
                            "aut"],
                    [new FieldInfo("avatar",
                            "sunt",
                            "quam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("id",
                            "rerum",
                            "in",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("status",
                            "ut",
                            "itaque",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("name",
                            "sit",
                            "inventore",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new MediaPopupContent("qui ex et",
                            "nemo iste dolorem modi tempora esse",
                        [new ColumnChartMediaInfo("dolore unde animi",
                                "libero",
                                "totam voluptatem quaerat",
                            new ChartMediaInfoValue(["voluptatibus",
                                    "et",
                                    "dolores",
                                    "omnis"],
                                    "atque",
                                    "distinctio",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "voluptatem",
                                        479.3505),
                                new ChartMediaInfoValueSeries("token",
                                        "quo",
                                        255.6202),
                                new ChartMediaInfoValueSeries("email",
                                        "consequatur",
                                        379.1455),
                                new ChartMediaInfoValueSeries("token",
                                        "illum",
                                        918.3555)],
                                [new MapColor(56, 65, 17)])),
                        new ColumnChartMediaInfo("excepturi in esse",
                                "est",
                                "aliquid sint architecto",
                            new ChartMediaInfoValue(["fuga",
                                    "ut"],
                                    "illum",
                                    "ullam",
                                [new ChartMediaInfoValueSeries("status",
                                        "consequuntur",
                                        343.8184),
                                new ChartMediaInfoValueSeries("token",
                                        "quo",
                                        9.9525),
                                new ChartMediaInfoValueSeries("password",
                                        "alias",
                                        642.5839)],
                                [new MapColor(126, 15, 111),
                                new MapColor(231, 3, 103),
                                new MapColor(243, 66, 61),
                                new MapColor(229, 127, 73)]))],
                            6),
                    new MediaPopupContent("eum tempore eos",
                            "aspernatur error sapiente necessitatibus eius",
                        [new ColumnChartMediaInfo("qui maiores accusamus",
                                "mollitia",
                                "omnis sed quia",
                            new ChartMediaInfoValue(["aliquam",
                                    "et",
                                    "est",
                                    "porro"],
                                    "repudiandae",
                                    "est",
                                [new ChartMediaInfoValueSeries("title",
                                        "necessitatibus",
                                        711.0871),
                                new ChartMediaInfoValueSeries("phone",
                                        "neque",
                                        873.3888),
                                new ChartMediaInfoValueSeries("title",
                                        "facere",
                                        349.6112)],
                                [new MapColor(245, 253, 2),
                                new MapColor(239, 24, 119),
                                new MapColor(113, 221, 120)]))],
                            5),
                    new AttachmentsPopupContent("aut minus aspernatur",
                            "unde qui dolorum non quas",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "email",
                            "consequatur exercitationem et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "title",
                            "consequatur iste voluptates",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "category",
                            "neque sit doloribus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "title",
                            "minima voluptatem autem",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("libero occaecati sint",
                            "e2f97edf-2793-c0af-1b3f-2ca60ebe4c78",
                            () => { Console.WriteLine("molestias"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "magnam"),
                    new ActionToggle("nostrum dolor iure",
                            "a2e8ff58-2d74-8a14-ce0e-657bc2cb9a9a",
                            () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "officiis")]),
                    new AttributesDictionary(),
                    true,
                    "sapiente",
                    "maiores",
                    new GraphicOrigin(Guid.NewGuid(),
                        "eum",
                        5))];
        await featureLayer.SetSource(testSource);
        var source = await featureLayer.GetSource();
        Assert.AreEqual(testSource, source);
        ListMode testListMode = ListMode.Show;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("quo repudiandae dolores",
                    "excepturi",
                    ["odio",
                        "voluptates",
                        "ut"],
                [new FieldInfo("password",
                        "veniam",
                        "qui",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.LongDateLongTime),
                        true,
                        true,
                    StatisticType.Avg),
                new FieldInfo("id",
                        "commodi",
                        "non",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.ShortMonthYear),
                        true,
                        true,
                    StatisticType.Count)],
                [new RelationshipPopupContent("corrupti eos cum",
                        "unde ut quam sed rerum quis",
                        1,
                        "dolor",
                    [new RelatedRecordsInfoFieldOrder("nihil",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("ullam",
                        OrderBy.Asc)],
                        4),
                new RelationshipPopupContent("omnis et cum",
                        "perspiciatis odit ratione qui sit ullam culpa",
                        5,
                        "ut",
                    [new RelatedRecordsInfoFieldOrder("dignissimos",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("voluptatem",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("dolor",
                        OrderBy.Desc)],
                        3),
                new TextPopupContent("fugiat nihil ut")],
                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "password",
                        "dolorem tempora est",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "category",
                        "animi animi sit",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("aspernatur in sequi",
                        "ff302ad6-774e-11a4-2095-d473cf9d194b",
                        () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "comment",
                        "impedit"),
                new ActionToggle("quam laudantium voluptate",
                        "5faa28b7-1df6-6218-6833-248901aaaeb2",
                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "avatar",
                        "atque")]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.DestinationOver;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Layer testDynamicDataSource = new GeoRSSLayer("https://arcgis.github.io/arcgis-samples-javascript/sample-data/layers-georss/sample-georss.xml",
                    "vitae alias possimus",
                    0.9476,
                    true,
                ListMode.Hide,
                BlendMode.DestinationOver,
                    new Effect("libero",
                        27537369.0027),
                new Extent(158.3747,
                        -65.1501,
                        -54.8100,
                        26.4914,
                        986.0308,
                        831.2827,
                        345.0171,
                        822.4394,
                    new SpatialReference(6,
                            "architecto",
                            "est",
                            "quia"),
                        true,
                        true),
                    true,
                new SimpleLineSymbol(new MapColor(171, 25, 11),
                        new Dimension(709.8024),
                    SimpleLineSymbolStyle.Dot,
                    Cap.Square,
                    Join.Miter,
                    new LineSymbolMarker(new MapColor(41, 101, 148),
                        LinePlacement.Begin,
                        LineSymbolMarkerStyle.Arrow),
                        341.7756),
                    40235387.0165,
                    23097.4998,
                    true,
                new PictureMarkerSymbol("https://upload.wikimedia.org/wikipedia/commons/5/53/Blue_Glass_Arrow_RTL.svg",
                        new Dimension(549.1043),
                        new Dimension(559.4826),
                        138.9496,
                        new Dimension(742.3383),
                        new Dimension(56.9058),
                    new MapColor(127, 57, 158)));
        await featureLayer.SetDynamicDataSource(testDynamicDataSource);
        var dynamicDataSource = await featureLayer.GetDynamicDataSource();
        Assert.AreEqual(testDynamicDataSource, dynamicDataSource);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "molestiae rerum aut"),
                ElevationInfoMode.AbsoluteHeight,
                    562.4430,
                ElevationUnit.Feet);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("quisquam",
                    33011110.1228),
                    new Effect("nam",
                        24313544.9945)],
                    true,
                new FeatureFilter(785.7416,
                    new Point(-12.0594,
                            -27.8863,
                            -121.2929,
                            24.2780,
                            720.1258,
                        new SpatialReference(3,
                                "est",
                                "delectus",
                                "modi"),
                            true,
                            true,
                            78.0334),
                        [4,
                            2,
                            8,
                            2],
                    SpatialRelationship.Disjoint,
                    new TimeExtent(new DateTime(2011, 4, 1, 6, 42, 41),
                            new DateTime(2003, 8, 6, 14, 1, 36)),
                        QueryUnits.NauticalMiles,
                        "Name = 'John Doe'"),
                    [new Effect("animi",
                        15855231.9786),
                        new Effect("quis",
                            49428964.2192),
                        new Effect("cupiditate",
                            36160831.4692),
                        new Effect("sint",
                            18170132.7838)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "status",
                    "voluptas",
                    "sed numquam accusantium voluptatibus et et aut",
                    7,
                    true,
                    true,
                    new { Value = "consequatur" },
                FieldValueType.Measurement,
                new RangeDomain("ad",
                        "mollitia",
                        "avatar")),
            new Field(default,
                    "comment",
                    "et",
                    "aliquid dolorem quam consequatur consequatur",
                    8,
                    true,
                    true,
                    new { Value = "dolorem" },
                FieldValueType.OrderedOrRanked,
                new RangeDomain("cum",
                        "ut",
                        "status"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("ipsa");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("eum omnis accusantium",
                    "iste repellendus libero sed delectus",
                    true,
                    [new FieldElement("group",
                        "perspiciatis",
                        "voluptates asperiores tempore dolorem",
                        "eos",
                        "ut",
                        "dolores",
                        "eos",
                        new CodedValueDomain<string>(),
                        new BarcodeScannerInput()),
                        new FieldElement("id",
                            "est",
                            "voluptas qui quo fugit asperiores maxime",
                            "dicta",
                            "aperiam",
                            "fugit",
                            "eos",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput()),
                        new FieldElement("avatar",
                            "quos",
                            "quisquam sunt qui eligendi enim",
                            "hic",
                            "quo",
                            "alias",
                            "et",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput())],
                [new ExpressionInfo("return Date();",
                        "name",
                        "eaque est nostrum",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return Date();",
                        "id",
                        "soluta quia rerum",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "id",
                        "molestiae non consequatur",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Name;",
                        "category",
                        "vel voluptas dolore",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(42.3498,
                    -97.8305,
                    -58.9241,
                    11.7936,
                    452.2753,
                    702.8603,
                    797.0732,
                    820.2565,
                new SpatialReference(6,
                        "voluptas",
                        "magnam",
                        "quod"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterLeft,
                    "quod",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    18928308.5991,
                    16886.2998,
                    true,
                    new Dimension(126.7149),
                new TextSymbol("nisi dolores ex",
                    new MapColor(249, 166, 177),
                    new MapColor(50, 15, 227),
                        new Dimension(459.3511),
                    new MapFont(new Dimension(658.3047),
                            "Verdana",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        605.7017,
                    new MapColor(37, 157, 40),
                    new MapColor(25, 55, 41),
                        677.2199,
                    HorizontalAlignment.Center,
                        true,
                        626.5274,
                        new Dimension(565.7557),
                        true),
                    true,
                    "City = 'Toronto'"),
            new Label(LabelPlacement.CenterAlong,
                    "sed",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Parallel,
                    34583424.5218,
                    6846.7552,
                    true,
                    new Dimension(123.5685),
                new TextSymbol("beatae vel hic",
                    new MapColor(218, 180, 84),
                    new MapColor(67, 90, 118),
                        new Dimension(914.5774),
                    new MapFont(new Dimension(194.2861),
                            "Courier New",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        668.1550,
                    new MapColor(23, 106, 6),
                    new MapColor(141, 95, 189),
                        200.8077,
                    HorizontalAlignment.Right,
                        true,
                        534.9198,
                        new Dimension(775.9360),
                        true),
                    true,
                    "Age > 21"),
            new Label(LabelPlacement.BelowAlong,
                    "velit",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    32628900.6857,
                    31581.9985,
                    true,
                    new Dimension(851.5377),
                new TextSymbol("atque et dolorum",
                    new MapColor(210, 188, 175),
                    new MapColor(202, 220, 135),
                        new Dimension(628.9488),
                    new MapFont(new Dimension(77.7041),
                            "Helvetica",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        430.4557,
                    new MapColor(53, 154, 223),
                    new MapColor(31, 131, 83),
                        327.0614,
                    HorizontalAlignment.Right,
                        true,
                        52.3178,
                        new Dimension(166.0499),
                        true),
                    true,
                    "Name = 'John Doe'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("accusantium",
                SortOrder.Ascending,
                    "et"),
            new OrderedLayerOrderBy("iste",
                SortOrder.Descending,
                    "ex"),
            new OrderedLayerOrderBy("culpa",
                SortOrder.Descending,
                    "molestiae")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("enim ut qui",
                    new MapColor(102, 144, 0),
                    new MapColor(40, 96, 252),
                        new Dimension(647.2923),
                    new MapFont(new Dimension(771.5014),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        362.0126,
                    new MapColor(84, 75, 147),
                    new MapColor(131, 13, 100),
                        351.4083,
                    HorizontalAlignment.Center,
                        true,
                        799.5020,
                        new Dimension(198.6859),
                        true),
                    "omnis",
                [new ColorVariable("harum",
                        "commodi",
                    [new ColorStop(234.5525,
                        new MapColor(194, 68, 8),
                            "et"),
                    new ColorStop(406.7259,
                        new MapColor(24, 173, 246),
                            "amet"),
                    new ColorStop(334.8901,
                        new MapColor(33, 214, 80),
                            "labore")],
                    new VisualVariableLegendOptions(true,
                            "ut dolor et"),
                        "ratione",
                        "aut sapiente voluptatem"),
                new ColorVariable("quis",
                        "quibusdam",
                    [new ColorStop(126.0277,
                        new MapColor(68, 135, 19),
                            "fuga"),
                    new ColorStop(203.6147,
                        new MapColor(131, 144, 181),
                            "sint")],
                    new VisualVariableLegendOptions(true,
                            "neque quaerat adipisci"),
                        "et",
                        "voluptatum eum nihil"),
                new ColorVariable("et",
                        "natus",
                    [new ColorStop(154.0165,
                        new MapColor(232, 149, 207),
                            "cupiditate"),
                    new ColorStop(453.3835,
                        new MapColor(120, 103, 153),
                            "fugiat")],
                    new VisualVariableLegendOptions(true,
                            "hic facere quae"),
                        "aspernatur",
                        "quidem labore reprehenderit")],
                new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(238, 214, 18),
                            new MapColor(152, 114, 34)),
                        new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(115, 244, 175),
                            new MapColor(160, 240, 0)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(139, 160, 27),
                            new MapColor(171, 167, 99))]),
                        191.0760,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(104.5409,
                                674.1144),
                        new AuthoringInfoField1ClassBreakInfos(916.2041,
                                175.6588),
                        new AuthoringInfoField1ClassBreakInfos(677.4077,
                                273.2320)],
                            "aliquam",
                            "et",
                            "neque"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(464.7847,
                                803.4037),
                        new AuthoringInfoField1ClassBreakInfos(996.5073,
                                956.9962)],
                            "non",
                            "minima",
                            "nobis"),
                        ["ut",
                            "velit"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "facilis",
                        true,
                    LengthUnit.UsFeet,
                        662.5457,
                        523.6654,
                        544.9488,
                        815.9158));
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(9,
                    "omnis",
                    "soluta",
                    "atque");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("quia vitae necessitatibus nesciunt nobis",
                DrawingTool.Line,
                    "comment",
                new Graphic(new Polygon([new MapPath([new MapPoint([604.4274,
                                273.9926,
                                382.9785]),
                            new MapPoint([489.4594,
                                104.8936,
                                77.4224,
                                879.9626])])],
                        new SpatialReference(1,
                                "et",
                                "ea",
                                "maiores"),
                        new Point(-6.5325,
                                19.9341,
                                -105.4978,
                                41.6723,
                                783.8277,
                            new SpatialReference(8,
                                    "odit",
                                    "neque",
                                    "voluptatem"),
                                true,
                                true,
                                950.1630),
                            true,
                            true,
                            true),
                    new TextSymbol("sit magni numquam",
                        new MapColor(195, 150, 147),
                        new MapColor(11, 235, 238),
                            new Dimension(196.7847),
                        new MapFont(new Dimension(255.9454),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            703.1294,
                        new MapColor(160, 173, 249),
                        new MapColor(226, 77, 94),
                            5.7126,
                        HorizontalAlignment.Left,
                            true,
                            859.9090,
                            new Dimension(431.8136),
                            true),
                    new PopupTemplate("consequatur commodi totam",
                            "deserunt",
                            ["a",
                                "ratione"],
                        [new FieldInfo("updatedAt",
                                "sit",
                                "occaecati",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("id",
                                "aut",
                                "ea",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "et",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new AttachmentsPopupContent("voluptas nulla enim",
                                "consequatur est ad nihil",
                                AttachmentsPopupContentDisplayType.Auto),
                        new RelationshipPopupContent("et quia voluptas",
                                "aut quibusdam doloremque voluptatum quia dignissimos expedita",
                                8,
                                "aut",
                            [new RelatedRecordsInfoFieldOrder("itaque",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("nemo",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("vero",
                                OrderBy.Desc)],
                                1),
                        new MediaPopupContent("consequatur iste nisi",
                                "quia nesciunt voluptas et",
                            [new ColumnChartMediaInfo("veritatis commodi nihil",
                                    "est",
                                    "est dolor voluptatem",
                                new ChartMediaInfoValue(["porro",
                                        "aliquam",
                                        "dolor",
                                        "expedita"],
                                        "deleniti",
                                        "repudiandae",
                                    [new ChartMediaInfoValueSeries("id",
                                            "voluptatem",
                                            391.9715),
                                    new ChartMediaInfoValueSeries("email",
                                            "maiores",
                                            199.7376),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "ipsam",
                                            95.8336)],
                                    [new MapColor(45, 53, 61)]))],
                                2),
                        new RelationshipPopupContent("aut necessitatibus iure",
                                "numquam totam numquam corporis et aperiam",
                                4,
                                "veniam",
                            [new RelatedRecordsInfoFieldOrder("ut",
                                OrderBy.Desc)],
                                5)],
                        [new ExpressionInfo("return $feature.Name;",
                                "phone",
                                "accusantium enim eum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "phone",
                                "aut velit in",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "comment",
                                "aut dolor quasi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "token",
                                "optio explicabo qui",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("et fuga voluptatem",
                                "35ffd5d0-e24a-c793-fd74-611e8f3f6b81",
                                () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "numquam"),
                        new ActionButton("dolorum nam voluptatibus",
                                "https://picsum.photos/640/480/?image=618",
                                "c69d649f-9b75-6be5-b879-c682f7c7a21d",
                                () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "optio"),
                        new ActionButton("sed velit repellendus",
                                "https://picsum.photos/640/480/?image=386",
                                "f092df70-0677-877f-a67a-d818a4e1cb3f",
                                () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "sed")]),
                        new AttributesDictionary(),
                        true,
                        "numquam",
                        "voluptatibus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "qui",
                            9)),
                    new Thumbnail("doloribus",
                        "dolor",
                        297.3579,
                        87.5976)),
            new FeatureTemplate("iste voluptates maxime sed velit",
                DrawingTool.Line,
                    "name",
                new Graphic(new Extent(-135.3195,
                            -40.0844,
                            -28.8133,
                            -77.7582,
                            515.4106,
                            667.7973,
                            82.6537,
                            315.9612,
                        new SpatialReference(8,
                                "adipisci",
                                "veritatis",
                                "vitae"),
                            true,
                            true),
                    new TextSymbol("eum perferendis quam",
                        new MapColor(107, 195, 135),
                        new MapColor(216, 204, 85),
                            new Dimension(378.7011),
                        new MapFont(new Dimension(576.3221),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            18.3642,
                        new MapColor(68, 51, 22),
                        new MapColor(129, 19, 165),
                            678.2656,
                        HorizontalAlignment.Center,
                            true,
                            79.1918,
                            new Dimension(367.6638),
                            true),
                    new PopupTemplate("iusto quasi qui",
                            "aut",
                            ["dignissimos",
                                "laudantium"],
                        [new FieldInfo("comment",
                                "totam",
                                "dolorem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("phone",
                                "amet",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("category",
                                "suscipit",
                                "libero",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new FieldsPopupContent([new FieldInfo("token",
                                    "qui",
                                    "voluptatem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "et accusantium molestias a voluptas ut",
                                "et nulla quis"),
                        new RelationshipPopupContent("eligendi ea rem",
                                "amet ut pariatur cum qui",
                                9,
                                "culpa",
                            [new RelatedRecordsInfoFieldOrder("eveniet",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("vero",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("id",
                                OrderBy.Desc)],
                                9),
                        new FieldsPopupContent([new FieldInfo("status",
                                    "corrupti",
                                    "porro",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("token",
                                    "quo",
                                    "reiciendis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("name",
                                    "minima",
                                    "doloremque",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("phone",
                                    "maxime",
                                    "non",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "consequuntur est rerum aliquam maiores et perferendis",
                                "ut quo vel")],
                        [new ExpressionInfo("return $feature.Name;",
                                "group",
                                "animi nihil eligendi",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("sint numquam in",
                                "https://picsum.photos/640/480/?image=900",
                                "8c85b3b5-b5bf-ac4a-4fbc-519931e0d747",
                                () => { Console.WriteLine("similique"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "repellendus"),
                        new ActionToggle("dolores sunt nulla",
                                "09475b5f-2cbf-7589-7868-632d98e92e69",
                                () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "aspernatur"),
                        new ActionButton("enim non assumenda",
                                "https://picsum.photos/640/480/?image=682",
                                "da8a756c-8b12-5f3a-24e1-398c19839580",
                                () => { Console.WriteLine("sapiente"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "harum"),
                        new ActionButton("reprehenderit rerum et",
                                "https://picsum.photos/640/480/?image=788",
                                "d42eb610-ce23-445a-a081-8da0e7f24f1e",
                                () => { Console.WriteLine("amet"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "blanditiis")]),
                        new AttributesDictionary(),
                        true,
                        "rerum",
                        "mollitia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aut",
                            9)),
                    new Thumbnail("ratione",
                        "corporis",
                        220.2808,
                        39.4466)),
            new FeatureTemplate("eius maxime hic ea sapiente",
                DrawingTool.Freehand,
                    "name",
                new Graphic(new Point(-63.3597,
                            -34.8584,
                            62.2269,
                            -52.0442,
                            413.9584,
                        new SpatialReference(1,
                                "optio",
                                "ut",
                                "dolore"),
                            true,
                            true,
                            631.7128),
                    new TextSymbol("asperiores et aperiam",
                        new MapColor(186, 231, 170),
                        new MapColor(112, 213, 227),
                            new Dimension(530.5694),
                        new MapFont(new Dimension(334.5759),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            882.4660,
                        new MapColor(214, 205, 73),
                        new MapColor(200, 239, 115),
                            768.1239,
                        HorizontalAlignment.Left,
                            true,
                            538.1447,
                            new Dimension(514.4820),
                            true),
                    new PopupTemplate("consectetur consequatur non",
                            "eum",
                            ["ducimus",
                                "illo",
                                "magni"],
                        [new FieldInfo("comment",
                                "magni",
                                "numquam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new RelationshipPopupContent("temporibus saepe nulla",
                                "quo quam delectus fugiat",
                                4,
                                "temporibus",
                            [new RelatedRecordsInfoFieldOrder("natus",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("enim",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("doloribus",
                                OrderBy.Desc)],
                                7),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "ipsam",
                                    "aliquid quis voluptatem")),
                        new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "asperiores",
                                    "maxime ut adipisci"))],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "id",
                                "impedit maxime autem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "createdAt",
                                "aut nostrum odit",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("ut in dolore",
                                "https://picsum.photos/640/480/?image=866",
                                "5429a479-8e0f-aa08-92fa-8d931832cd2f",
                                () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "voluptas")]),
                        new AttributesDictionary(),
                        true,
                        "ducimus",
                        "esse",
                        new GraphicOrigin(Guid.NewGuid(),
                            "rem",
                            6)),
                    new Thumbnail("consequatur",
                        "unde",
                        132.0557,
                        52.7241))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2004, 5, 18, 10, 10, 27),
                    new DateTime(2019, 4, 14, 11, 24, 58));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("labore",
                    "vel",
                new TimeExtent(new DateTime(2016, 7, 15, 9, 37, 53),
                        new DateTime(2009, 10, 15, 3, 26, 26)),
                new TimeInterval(TemporalTime.Minutes,
                        511.3339),
                    [new DateTime(2003, 7, 13, 15, 19, 44),
                        new DateTime(2021, 6, 6, 5, 49, 6),
                        new DateTime(2017, 7, 23, 19, 12, 46)],
                    "America/Denver",
                    "beatae");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Seconds,
                    615.0817);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("d0b5d89b-ef2e-ce93-e847-b7c76bb38bb6",
                    "createdAt",
                [new FeatureTemplate("sequi reiciendis eos quo",
                    DrawingTool.Ellipse,
                        "status",
                    new Graphic(new Point(91.4704,
                                58.2084,
                                125.3152,
                                36.0297,
                                572.5708,
                            new SpatialReference(6,
                                    "molestiae",
                                    "pariatur",
                                    "culpa"),
                                true,
                                true,
                                255.9800),
                        new TextSymbol("est consequuntur quia",
                            new MapColor(248, 123, 190),
                            new MapColor(164, 119, 109),
                                new Dimension(416.5530),
                            new MapFont(new Dimension(236.7064),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Normal,
                                TextDecoration.LineThrough),
                                183.4094,
                            new MapColor(46, 205, 206),
                            new MapColor(153, 207, 125),
                                489.1040,
                            HorizontalAlignment.Right,
                                true,
                                104.8517,
                                new Dimension(237.5379),
                                true),
                        new PopupTemplate("consequatur quia est",
                                "id",
                                ["in",
                                    "dolor",
                                    "earum"],
                            [new FieldInfo("createdAt",
                                    "omnis",
                                    "commodi",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                            [new FieldsPopupContent([new FieldInfo("password",
                                        "repudiandae",
                                        "dolores",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("group",
                                        "vel",
                                        "voluptatibus",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("token",
                                        "aut",
                                        "unde",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("updatedAt",
                                        "ullam",
                                        "omnis",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "quos et eos quae nihil eum",
                                    "amet magnam accusamus"),
                            new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "suscipit",
                                        "reprehenderit nulla provident"))],
                            [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "category",
                                    "illum doloremque rerum",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "phone",
                                    "quia corrupti voluptas",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "name",
                                    "accusamus qui nihil",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("aliquam odio qui",
                                    "https://picsum.photos/640/480/?image=525",
                                    "835b7471-eb99-7d02-0ac4-ba5d99a97117",
                                    () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "ad")]),
                            new AttributesDictionary(),
                            true,
                            "eaque",
                            "non",
                            new GraphicOrigin(Guid.NewGuid(),
                                "aut",
                                1)),
                        new Thumbnail("cupiditate",
                            "ad",
                            292.1138,
                            291.2355)),
                new FeatureTemplate("laudantium eligendi omnis eligendi",
                    DrawingTool.None,
                        "avatar",
                    new Graphic(new Polyline([new MapPath([new MapPoint([915.8249,
                                    36.6452,
                                    843.9986]),
                                new MapPoint([65.4017,
                                    629.1849]),
                                new MapPoint([874.2946,
                                    431.6668,
                                    796.1498])]),
                                new MapPath([new MapPoint([919.8099,
                                        930.0253,
                                        829.3132,
                                        485.5163]),
                                    new MapPoint([731.7549,
                                        286.6223,
                                        416.7005,
                                        955.7088]),
                                    new MapPoint([65.7365,
                                        74.7826,
                                        574.0349]),
                                    new MapPoint([92.4601,
                                        199.7519,
                                        776.1184])]),
                                new MapPath([new MapPoint([232.6029,
                                        679.8952,
                                        960.6504,
                                        954.6886]),
                                    new MapPoint([567.5086,
                                        164.9618,
                                        683.3894])]),
                                new MapPath([new MapPoint([957.4589,
                                        188.7869,
                                        574.5457]),
                                    new MapPoint([617.8923,
                                        282.3035]),
                                    new MapPoint([195.4484,
                                        373.2770,
                                        620.7969]),
                                    new MapPoint([933.7180,
                                        585.2297])])],
                            new SpatialReference(5,
                                    "aut",
                                    "ut",
                                    "qui"),
                                true,
                                true),
                        new TextSymbol("laboriosam omnis repellendus",
                            new MapColor(28, 227, 88),
                            new MapColor(112, 254, 44),
                                new Dimension(941.3014),
                            new MapFont(new Dimension(457.2286),
                                    "Palatino",
                                MapFontStyle.Normal,
                                FontWeight.Normal,
                                TextDecoration.None),
                                706.7637,
                            new MapColor(121, 245, 239),
                            new MapColor(17, 197, 23),
                                55.7956,
                            HorizontalAlignment.Left,
                                true,
                                979.3051,
                                new Dimension(49.8739),
                                true),
                        new PopupTemplate("cumque iste eaque",
                                "voluptatum",
                                ["sed",
                                    "et",
                                    "eligendi",
                                    "provident"],
                            [new FieldInfo("token",
                                    "illo",
                                    "alias",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("createdAt",
                                    "aliquid",
                                    "autem",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("token",
                                    "voluptate",
                                    "ipsam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("createdAt",
                                    "quod",
                                    "et",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Var)],
                            [new RelationshipPopupContent("alias minima modi",
                                    "at doloremque at accusantium",
                                    3,
                                    "omnis",
                                [new RelatedRecordsInfoFieldOrder("quia",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("velit",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("vel",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("magnam",
                                    OrderBy.Desc)],
                                    6),
                            new MediaPopupContent("labore praesentium aliquam",
                                    "consequatur laborum est ut repellendus praesentium",
                                [new LineChartMediaInfo("possimus repudiandae dolorem",
                                        "velit",
                                        "beatae tempora architecto",
                                    new ChartMediaInfoValue(["quod",
                                            "quidem",
                                            "rerum"],
                                            "libero",
                                            "blanditiis",
                                        [new ChartMediaInfoValueSeries("title",
                                                "voluptatibus",
                                                876.0220),
                                        new ChartMediaInfoValueSeries("title",
                                                "ea",
                                                437.9351),
                                        new ChartMediaInfoValueSeries("phone",
                                                "deserunt",
                                                359.7737),
                                        new ChartMediaInfoValueSeries("email",
                                                "sit",
                                                355.6883)],
                                        [new MapColor(70, 234, 230),
                                        new MapColor(14, 50, 26)]))],
                                    7),
                            new RelationshipPopupContent("dolorum ut id",
                                    "quisquam earum repudiandae sed explicabo",
                                    9,
                                    "ea",
                                [new RelatedRecordsInfoFieldOrder("et",
                                    OrderBy.Asc)],
                                    8),
                            new RelationshipPopupContent("ea eveniet culpa",
                                    "est magnam nihil nesciunt illum",
                                    3,
                                    "facilis",
                                [new RelatedRecordsInfoFieldOrder("mollitia",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("rerum",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("ratione",
                                    OrderBy.Desc)],
                                    6)],
                            [new ExpressionInfo("return $feature.Name;",
                                    "comment",
                                    "vel similique molestiae",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("molestiae molestias nihil",
                                    "https://picsum.photos/640/480/?image=1026",
                                    "b383b5f2-6612-bc85-5ce7-3fbed3afa06f",
                                    () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                    "avatar",
                                    true,
                                    true,
                                    true,
                                    "aperiam"),
                            new ActionToggle("maiores deserunt suscipit",
                                    "65c22736-27ce-85fa-b0c9-9de3cfcf7f13",
                                    () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "avatar",
                                    "nisi"),
                            new ActionToggle("sapiente temporibus occaecati",
                                    "f0e1c97f-67b1-9104-8baa-cfe4efb8a84c",
                                    () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "cum")]),
                            new AttributesDictionary(),
                            true,
                            "nostrum",
                            "voluptas",
                            new GraphicOrigin(Guid.NewGuid(),
                                "quaerat",
                                3)),
                        new Thumbnail("qui",
                            "amet",
                            76.9889,
                            181.0717)),
                new FeatureTemplate("cumque asperiores modi magni",
                    DrawingTool.DownArrow,
                        "status",
                    new Graphic(new Polyline([new MapPath([new MapPoint([520.2155,
                                    572.9020,
                                    952.9729,
                                    168.4242]),
                                new MapPoint([907.1631,
                                    23.7099,
                                    910.3238,
                                    898.4758]),
                                new MapPoint([507.6589,
                                    17.9985,
                                    348.2896,
                                    592.8353]),
                                new MapPoint([873.1499,
                                    418.1025])]),
                                new MapPath([new MapPoint([229.8571,
                                        692.5484,
                                        972.6188,
                                        792.7401]),
                                    new MapPoint([531.4845,
                                        13.8842,
                                        731.9775]),
                                    new MapPoint([139.9189,
                                        185.5241,
                                        541.5233])])],
                            new SpatialReference(2,
                                    "iusto",
                                    "sint",
                                    "similique"),
                                true,
                                true),
                        new TextSymbol("mollitia accusamus unde",
                            new MapColor(31, 18, 59),
                            new MapColor(159, 80, 132),
                                new Dimension(103.3691),
                            new MapFont(new Dimension(335.5016),
                                    "Arial",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                999.4470,
                            new MapColor(218, 100, 148),
                            new MapColor(121, 196, 43),
                                546.5568,
                            HorizontalAlignment.Center,
                                true,
                                276.6339,
                                new Dimension(112.0820),
                                true),
                        new PopupTemplate("autem provident reprehenderit",
                                "asperiores",
                                ["exercitationem",
                                    "aut"],
                            [new FieldInfo("comment",
                                    "fuga",
                                    "sint",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("group",
                                    "sequi",
                                    "tempore",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                            [new RelationshipPopupContent("quae tempore ut",
                                    "adipisci occaecati debitis dolores molestiae",
                                    6,
                                    "non",
                                [new RelatedRecordsInfoFieldOrder("sed",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("ducimus",
                                    OrderBy.Desc)],
                                    2),
                            new AttachmentsPopupContent("quis beatae blanditiis",
                                    "fugit odit totam nostrum nesciunt doloribus",
                                    AttachmentsPopupContentDisplayType.Auto),
                            new AttachmentsPopupContent("numquam laboriosam illum",
                                    "quidem dolorum id itaque",
                                    AttachmentsPopupContentDisplayType.Preview)],
                            [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "title",
                                    "occaecati qui omnis",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "comment",
                                    "assumenda consequuntur voluptatem",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("atque rerum eum",
                                    "4b77cc93-d747-c6c3-405d-617bd7120f74",
                                    () => { Console.WriteLine("incidunt"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "phone",
                                    "dignissimos"),
                            new ActionToggle("eos commodi nihil",
                                    "8c8e2b94-a752-c2e4-ddbb-6e546b9182a0",
                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "title",
                                    "quis")]),
                            new AttributesDictionary(),
                            true,
                            "aspernatur",
                            "quo",
                            new GraphicOrigin(Guid.NewGuid(),
                                "aperiam",
                                9)),
                        new Thumbnail("vitae",
                            "facere",
                            265.3919,
                            295.6904))],
                new Dictionary<string, Domain>() {{ "porro", new RangeDomain("itaque",
        "dolores",
        "password") },
                { "excepturi", new InheritedDomain("updatedAt") },
                { "optio", new InheritedDomain("token") },
                { "optio", new InheritedDomain("updatedAt") }
                },
                    "asperiores"),
            new FeatureType("31cf0d68-6121-6d8e-6763-85b26e1f86bc",
                    "token",
                [new FeatureTemplate("quam dolores corrupti in",
                    DrawingTool.Circle,
                        "group",
                    new Graphic(new Polygon([new MapPath([new MapPoint([830.3808,
                                    559.2603,
                                    898.9824]),
                                new MapPoint([375.9856,
                                    831.1157]),
                                new MapPoint([946.4952,
                                    432.7079,
                                    246.7183])])],
                            new SpatialReference(1,
                                    "necessitatibus",
                                    "repellat",
                                    "iusto"),
                            new Point(109.8053,
                                    -12.1513,
                                    12.5254,
                                    59.8229,
                                    240.6391,
                                new SpatialReference(7,
                                        "ipsum",
                                        "sunt",
                                        "dolor"),
                                    true,
                                    true,
                                    354.0782),
                                true,
                                true,
                                true),
                        new TextSymbol("repellendus iure ea",
                            new MapColor(115, 128, 95),
                            new MapColor(65, 1, 20),
                                new Dimension(414.4634),
                            new MapFont(new Dimension(660.0526),
                                    "Courier New",
                                MapFontStyle.Oblique,
                                FontWeight.Normal,
                                TextDecoration.LineThrough),
                                529.6385,
                            new MapColor(100, 84, 111),
                            new MapColor(58, 220, 202),
                                894.9866,
                            HorizontalAlignment.Center,
                                true,
                                24.2746,
                                new Dimension(651.2653),
                                true),
                        new PopupTemplate("eum sit minima",
                                "qui",
                                ["rerum",
                                    "sit",
                                    "numquam",
                                    "impedit"],
                            [new FieldInfo("title",
                                    "deserunt",
                                    "qui",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("createdAt",
                                    "sit",
                                    "cumque",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("phone",
                                    "in",
                                    "amet",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("name",
                                    "enim",
                                    "debitis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new TextPopupContent("sapiente pariatur vero"),
                            new FieldsPopupContent([new FieldInfo("email",
                                        "quis",
                                        "autem",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateLeLongTime24),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                    "distinctio commodi fugit soluta assumenda quos",
                                    "est molestiae hic")],
                            [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "status",
                                    "molestias animi corporis",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature['FieldName'];",
                                    "avatar",
                                    "sed a nobis",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "createdAt",
                                    "atque omnis voluptatem",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("voluptas quis doloremque",
                                    "https://picsum.photos/640/480/?image=315",
                                    "e7eb833b-18c7-9dc3-7744-ca9922fdcb94",
                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "quaerat"),
                            new ActionToggle("accusamus quam aliquam",
                                    "d7cbda91-ca5f-8bf4-ac90-17721438cf7e",
                                    () => { Console.WriteLine("soluta"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "category",
                                    "vel"),
                            new ActionButton("quo ex tenetur",
                                    "https://picsum.photos/640/480/?image=548",
                                    "eb78d034-c2e1-98cb-f0d8-2b07f865a98f",
                                    () => { Console.WriteLine("quasi"); return Task.CompletedTask; },
                                    "token",
                                    true,
                                    true,
                                    true,
                                    "sed")]),
                            new AttributesDictionary(),
                            true,
                            "in",
                            "ut",
                            new GraphicOrigin(Guid.NewGuid(),
                                "quaerat",
                                1)),
                        new Thumbnail("voluptatem",
                            "ad",
                            107.2873,
                            173.4121)),
                new FeatureTemplate("voluptatem ratione commodi eum occaecati omnis",
                    DrawingTool.Ellipse,
                        "password",
                    new Graphic(new Point(176.1744,
                                15.8587,
                                108.7656,
                                -63.2050,
                                577.7176,
                            new SpatialReference(8,
                                    "voluptas",
                                    "id",
                                    "exercitationem"),
                                true,
                                true,
                                226.3093),
                        new TextSymbol("dolorum perferendis quaerat",
                            new MapColor(238, 218, 68),
                            new MapColor(128, 247, 109),
                                new Dimension(386.0640),
                            new MapFont(new Dimension(252.5761),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.None),
                                578.6496,
                            new MapColor(162, 198, 43),
                            new MapColor(167, 156, 64),
                                577.7116,
                            HorizontalAlignment.Center,
                                true,
                                448.5954,
                                new Dimension(940.4525),
                                true),
                        new PopupTemplate("quidem dolores eius",
                                "inventore",
                                ["officia",
                                    "est",
                                    "doloremque",
                                    "distinctio"],
                            [new FieldInfo("title",
                                    "enim",
                                    "sit",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Max)],
                            [new AttachmentsPopupContent("provident tenetur ex",
                                    "odio recusandae necessitatibus et optio voluptas cumque",
                                    AttachmentsPopupContentDisplayType.Preview)],
                            [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "name",
                                    "consequatur voluptatem voluptatem",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("quae impedit voluptates",
                                    "https://picsum.photos/640/480/?image=342",
                                    "e04ba652-5a59-e5d2-9da9-c493f0691540",
                                    () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                    "title",
                                    true,
                                    true,
                                    true,
                                    "minus"),
                            new ActionToggle("ut rerum et",
                                    "a3a222df-c0d6-48bc-e2b6-21c47bc5cf6d",
                                    () => { Console.WriteLine("reiciendis"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "name",
                                    "deserunt"),
                            new ActionButton("eligendi ea quae",
                                    "https://picsum.photos/640/480/?image=945",
                                    "9bd7d4d9-6cd8-9520-6bea-88692e3ea45c",
                                    () => { Console.WriteLine("ratione"); return Task.CompletedTask; },
                                    "category",
                                    true,
                                    true,
                                    true,
                                    "recusandae"),
                            new ActionToggle("aut eius placeat",
                                    "8a6c8db7-551b-bcf7-372b-b0d2a4c0a330",
                                    () => { Console.WriteLine("numquam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "token",
                                    "sint")]),
                            new AttributesDictionary(),
                            true,
                            "quia",
                            "eius",
                            new GraphicOrigin(Guid.NewGuid(),
                                "rerum",
                                8)),
                        new Thumbnail("tempore",
                            "aut",
                            269.7263,
                            297.1720)),
                new FeatureTemplate("a ratione magni aut qui enim",
                    DrawingTool.None,
                        "phone",
                    new Graphic(new Extent(-149.6471,
                                97.2104,
                                60.0124,
                                -55.8801,
                                909.9867,
                                425.6112,
                                907.9081,
                                54.9775,
                            new SpatialReference(9,
                                    "est",
                                    "inventore",
                                    "quo"),
                                true,
                                true),
                        new TextSymbol("ut suscipit eaque",
                            new MapColor(89, 66, 195),
                            new MapColor(13, 177, 89),
                                new Dimension(832.2259),
                            new MapFont(new Dimension(734.2921),
                                    "Helvetica",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                211.7203,
                            new MapColor(114, 247, 212),
                            new MapColor(114, 15, 18),
                                381.5106,
                            HorizontalAlignment.Left,
                                true,
                                685.9745,
                                new Dimension(444.0012),
                                true),
                        new PopupTemplate("praesentium eum qui",
                                "maxime",
                                ["a",
                                    "consequatur"],
                            [new FieldInfo("title",
                                    "quidem",
                                    "alias",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("group",
                                    "et",
                                    "voluptas",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("id",
                                    "aut",
                                    "unde",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                        "quia",
                                        "neque repellat dolorem")),
                            new FieldsPopupContent([new FieldInfo("status",
                                        "consequatur",
                                        "sit",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("comment",
                                        "voluptatem",
                                        "necessitatibus",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("comment",
                                        "nesciunt",
                                        "consequatur",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                    "voluptas quidem at corrupti distinctio expedita",
                                    "esse voluptas assumenda"),
                            new RelationshipPopupContent("suscipit eos voluptas",
                                    "veritatis velit soluta veniam modi",
                                    2,
                                    "sint",
                                [new RelatedRecordsInfoFieldOrder("consequuntur",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("veniam",
                                    OrderBy.Asc)],
                                    3)],
                            [new ExpressionInfo("return $feature.Name;",
                                    "password",
                                    "cupiditate odio harum",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "updatedAt",
                                    "adipisci magni minus",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("autem numquam rerum",
                                    "465da53e-5dcd-c1b8-62d5-01b850773278",
                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "category",
                                    "et"),
                            new ActionButton("in minima aliquid",
                                    "https://picsum.photos/640/480/?image=36",
                                    "0187d0e5-867d-bf24-8993-9ec296832a77",
                                    () => { Console.WriteLine("numquam"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "adipisci"),
                            new ActionToggle("et soluta laudantium",
                                    "d24f3087-cb27-a25c-3e65-fa2e633bddb3",
                                    () => { Console.WriteLine("repellat"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "group",
                                    "nisi")]),
                            new AttributesDictionary(),
                            true,
                            "quos",
                            "doloribus",
                            new GraphicOrigin(Guid.NewGuid(),
                                "odio",
                                2)),
                        new Thumbnail("tempora",
                            "debitis",
                            153.1642,
                            129.3555)),
                new FeatureTemplate("enim nostrum ducimus quae impedit",
                    DrawingTool.Line,
                        "phone",
                    new Graphic(new Point(-76.5867,
                                21.2167,
                                34.1157,
                                -12.7659,
                                842.5203,
                            new SpatialReference(2,
                                    "veniam",
                                    "ducimus",
                                    "ratione"),
                                true,
                                true,
                                14.6285),
                        new TextSymbol("illo quibusdam adipisci",
                            new MapColor(10, 216, 85),
                            new MapColor(71, 165, 247),
                                new Dimension(484.5570),
                            new MapFont(new Dimension(642.3873),
                                    "Arial",
                                MapFontStyle.Normal,
                                FontWeight.Lighter,
                                TextDecoration.Underline),
                                531.2843,
                            new MapColor(76, 151, 60),
                            new MapColor(131, 245, 4),
                                624.5755,
                            HorizontalAlignment.Center,
                                true,
                                896.6481,
                                new Dimension(79.0938),
                                true),
                        new PopupTemplate("odit dolor quas",
                                "eum",
                                ["aut",
                                    "nisi",
                                    "suscipit"],
                            [new FieldInfo("name",
                                    "qui",
                                    "quia",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                            [new FieldsPopupContent([new FieldInfo("phone",
                                        "vero",
                                        "vero",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLeShortTime),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("id",
                                        "nihil",
                                        "quaerat",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("name",
                                        "a",
                                        "ut",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("comment",
                                        "voluptates",
                                        "iure",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                    "consequuntur possimus sunt sed",
                                    "natus alias alias"),
                            new AttachmentsPopupContent("amet quia ut",
                                    "eveniet earum rerum veniam ducimus dolore pariatur",
                                    AttachmentsPopupContentDisplayType.Preview),
                            new TextPopupContent("qui molestiae qui"),
                            new RelationshipPopupContent("hic repellendus perferendis",
                                    "provident id et est et reprehenderit a",
                                    7,
                                    "voluptatem",
                                [new RelatedRecordsInfoFieldOrder("corporis",
                                    OrderBy.Desc)],
                                    5)],
                            [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "createdAt",
                                    "occaecati quo fugit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "updatedAt",
                                    "consequuntur ratione accusamus",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("at aliquam consectetur",
                                    "8ed79f44-f6d7-83a1-2825-493a5fea2d0d",
                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "phone",
                                    "quia"),
                            new ActionToggle("quos soluta tempora",
                                    "8a6304fb-fc6c-c45b-90e7-55275a13d73c",
                                    () => { Console.WriteLine("praesentium"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "avatar",
                                    "mollitia"),
                            new ActionButton("odio laudantium in",
                                    "https://picsum.photos/640/480/?image=1035",
                                    "7ba7914e-e5e9-3a06-0145-7189cfd8575f",
                                    () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                    "category",
                                    true,
                                    true,
                                    true,
                                    "magni"),
                            new ActionToggle("sit dolores provident",
                                    "fec8b36a-54d4-4769-4cca-7766fa7db663",
                                    () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "updatedAt",
                                    "enim")]),
                            new AttributesDictionary(),
                            true,
                            "sunt",
                            "et",
                            new GraphicOrigin(Guid.NewGuid(),
                                "et",
                                8)),
                        new Thumbnail("nihil",
                            "vero",
                            26.1965,
                            108.9827))],
                new Dictionary<string, Domain>() {{ "sed", new InheritedDomain("createdAt") },
                { "quibusdam", new InheritedDomain("name") }
                },
                    "similique")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2002, 4, 1, 12, 28, 23),
                    new DateTime(2007, 10, 6, 17, 10, 42));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
