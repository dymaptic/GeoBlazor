@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")"
                        OutFields="@(["provident",
                            "architecto",
                            "nihil",
                            "aspernatur"])"
                        DefinitionExpression="@("soluta")"
                        MinScale="@(9570.9958)"
                        MaxScale="@(19530600.1899)"
                        ObjectIdField="@("repellat")"
                        GeometryType="@(FeatureGeometryType.Multipoint)"
                        Title="@("nobis nam vel")"
                        Opacity="@(0.6791)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        ApiKey="@("est")"
                        BlendMode="@(BlendMode.Color)"
                        Charts="@(["quidem",
                            "error",
                            "velit"])"
                        Copyright="@("sint")"
                        DateFieldsTimeZone="@("est")"
                        DisplayField="@("iusto")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("ipsa",
                            9178736.9046))"
                        FullExtent="@(new Extent(170.4723,
                                175.8410,
                                -74.0603,
                                -26.6587,
                                902.0868,
                                160.5000,
                                907.4235,
                                965.6885,
                            new SpatialReference(6,
                                    "omnis",
                                    "enim",
                                    "mollitia"),
                                true,
                                true))"
                        GdbVersion="@("0.6.6.9")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2009, 6, 14, 17, 50, 23))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(802.0671)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        SpatialReference="@(new SpatialReference(1,
                                "maiores",
                                "quis",
                                "debitis"))"
                        TypeIdField="@("enim")"
                        Types="@([new FeatureType("32ba7ad5-89c5-bdfb-3676-53602e5d10e9",
                                "status",
                            [new FeatureTemplate("voluptatem non optio cupiditate quod",
                                DrawingTool.AutoCompletePolygon,
                                    "comment",
                                new Graphic(new Polygon([new MapPath([new MapPoint([733.2831,
                                                878.9791]),
                                            new MapPoint([760.1272,
                                                615.1494,
                                                707.1245,
                                                356.5887]),
                                            new MapPoint([678.0555,
                                                652.1523,
                                                854.6823,
                                                897.9860])])],
                                        new SpatialReference(4,
                                                "eos",
                                                "beatae",
                                                "provident"),
                                        new Point(61.6109,
                                                -42.6628,
                                                13.4844,
                                                74.5201,
                                                949.8282,
                                            new SpatialReference(6,
                                                    "ab",
                                                    "quia",
                                                    "et"),
                                                true,
                                                true,
                                                449.3695),
                                            true,
                                            true,
                                            true),
                                    new TextSymbol("voluptatem perspiciatis rem",
                                        new MapColor(0, 214, 38),
                                        new MapColor(111, 31, 167),
                                            new Dimension(595.0218),
                                        new MapFont(new Dimension(977.8876),
                                                "Bookman",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            852.3645,
                                        new MapColor(38, 104, 55),
                                        new MapColor(154, 156, 154),
                                            872.3179,
                                        HorizontalAlignment.Left,
                                            true,
                                            443.8341,
                                            new Dimension(318.9364),
                                            true),
                                    new PopupTemplate("eos asperiores dolores",
                                            "tempora",
                                            ["deserunt",
                                                "id"],
                                        [new FieldInfo("createdAt",
                                                "qui",
                                                "quam",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("status",
                                                "exercitationem",
                                                "odit",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("phone",
                                                "voluptatem",
                                                "voluptatem",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateLeShortTime),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("createdAt",
                                                "sed",
                                                "ad",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                        [new AttachmentsPopupContent("et illum tempora",
                                                "quasi maxime molestias et sit non",
                                                AttachmentsPopupContentDisplayType.Auto)],
                                        [new ExpressionInfo("return $feature['FieldName'];",
                                                "password",
                                                "distinctio beatae enim",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("neque voluptatem commodi",
                                                "https://picsum.photos/640/480/?image=976",
                                                "cb66020d-4f50-98ac-cf50-fe1ca94c61a0",
                                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                                "password",
                                                true,
                                                true,
                                                true,
                                                "necessitatibus")]),
                                        new AttributesDictionary(),
                                        true,
                                        "asperiores",
                                        "nesciunt",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "explicabo",
                                            9)),
                                    new Thumbnail("id",
                                        "eum",
                                        43.1692,
                                        241.4195))],
                            new Dictionary<string, Domain>() {{ "sint", new RangeDomain("sint",
        "similique",
        "password") },
                            { "rerum", new RangeDomain("a",
        "velit",
        "category") }
                            },
                                "quia")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Months)"
                            Value="@(581.2674)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("optio")"
                            EndField="@("consectetur")"
                            Stops="@([new DateTime(2001, 6, 3, 12, 33, 19),
                                new DateTime(2008, 8, 16, 8, 4, 17)])"
                            TimeZone="@("America/Lima")"
                            TrackIdField="@("voluptatem")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Months)"
                                Value="@(954.4790)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2009, 5, 24, 3, 49, 41))"
                                End="@(new DateTime(2010, 9, 15, 9, 27, 28))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2020, 8, 20, 12, 34, 20))"
                            End="@(new DateTime(2008, 1, 5, 5, 25, 20))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("omnis magnam doloremque repellat velit eius")"
                            DrawingTool="@(DrawingTool.Circle)"
                            Name="@("password")"
                            Thumbnail="@(new Thumbnail("saepe",
                                "voluptatem",
                                181.0935,
                                98.5072))">
                            <Graphic 
                                Geometry="@(new Polyline([new MapPath([new MapPoint([123.4708,
                                            227.1166]),
                                        new MapPoint([433.1751,
                                            723.5268]),
                                        new MapPoint([55.2219,
                                            630.2262]),
                                        new MapPoint([297.4376,
                                            233.8134,
                                            527.1063])])],
                                    new SpatialReference(2,
                                            "facilis",
                                            "esse",
                                            "repudiandae"),
                                        true,
                                        true))"
                                Symbol="@(new TextSymbol("rerum amet in",
                                    new MapColor(147, 250, 213),
                                    new MapColor(221, 134, 23),
                                        new Dimension(433.0706),
                                    new MapFont(new Dimension(981.1688),
                                            "Georgia",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        705.4844,
                                    new MapColor(249, 239, 65),
                                    new MapColor(76, 87, 194),
                                        227.3524,
                                    HorizontalAlignment.Center,
                                        true,
                                        711.8165,
                                        new Dimension(33.5124),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("dolor amet et",
                                        "in",
                                        ["est",
                                            "veniam",
                                            "modi"],
                                    [new FieldInfo("status",
                                            "excepturi",
                                            "soluta",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.LongMonthDayYear),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("createdAt",
                                            "aut",
                                            "nobis",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("id",
                                            "similique",
                                            "sit",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                    [new MediaPopupContent("voluptatem illo laborum",
                                            "neque voluptas ut amet voluptates reprehenderit",
                                        [new ColumnChartMediaInfo("optio non dolor",
                                                "mollitia",
                                                "ut qui ut",
                                            new ChartMediaInfoValue(["et",
                                                    "velit",
                                                    "nisi"],
                                                    "maiores",
                                                    "ut",
                                                [new ChartMediaInfoValueSeries("group",
                                                        "consectetur",
                                                        214.4868)],
                                                [new MapColor(141, 223, 123),
                                                new MapColor(218, 12, 130)])),
                                        new LineChartMediaInfo("autem illo nihil",
                                                "culpa",
                                                "laborum veniam est",
                                            new ChartMediaInfoValue(["quam",
                                                    "et"],
                                                    "voluptatibus",
                                                    "laudantium",
                                                [new ChartMediaInfoValueSeries("name",
                                                        "numquam",
                                                        946.7470),
                                                new ChartMediaInfoValueSeries("avatar",
                                                        "est",
                                                        810.7935),
                                                new ChartMediaInfoValueSeries("email",
                                                        "aliquid",
                                                        329.7743)],
                                                [new MapColor(121, 49, 136),
                                                new MapColor(49, 41, 173)])),
                                        new LineChartMediaInfo("quidem tempore voluptas",
                                                "dolores",
                                                "expedita qui dolores",
                                            new ChartMediaInfoValue(["corrupti",
                                                    "voluptas",
                                                    "quae",
                                                    "eaque"],
                                                    "voluptatem",
                                                    "expedita",
                                                [new ChartMediaInfoValueSeries("token",
                                                        "eos",
                                                        882.2406),
                                                new ChartMediaInfoValueSeries("id",
                                                        "ipsam",
                                                        77.3016)],
                                                [new MapColor(64, 98, 138)])),
                                        new ImageMediaInfo("nobis aliquid est",
                                                "reprehenderit",
                                                "aperiam sunt est",
                                            new ImageMediaInfoValue("http://ivy.info",
                                                    "http://caesar.net"),
                                                57.5981)],
                                            6),
                                    new TextPopupContent("error consequatur dicta"),
                                    new TextPopupContent("nemo sunt quibusdam")],
                                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "avatar",
                                            "perferendis ea facere",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("aspernatur perferendis dolor",
                                            "48b9cb4b-4fb0-9b72-2d47-edc95da84936",
                                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "updatedAt",
                                            "et"),
                                    new ActionButton("numquam delectus qui",
                                            "https://picsum.photos/640/480/?image=323",
                                            "2c4fbf68-2dae-2e1b-9086-aedd5be91226",
                                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "et"),
                                    new ActionToggle("vel et eos",
                                            "fd5df3ee-e7ac-9723-0517-d76b204cb638",
                                            () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "createdAt",
                                            "non"),
                                    new ActionToggle("fugit beatae consequatur",
                                            "c737f3fc-1b42-bfde-7730-fcbc24f37bfa",
                                            () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "createdAt",
                                            "voluptate")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("velit")"
                                AggregateGeometries="@("eligendi")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "aut",
                                    7))">
                            </Graphic>
                        </FeatureTemplate>
                        <Graphic 
                            Geometry="@(new Polygon([new MapPath([new MapPoint([920.7947,
                                        532.8217]),
                                    new MapPoint([373.8425,
                                        20.5293])]),
                                    new MapPath([new MapPoint([426.1114,
                                            760.2345,
                                            916.2915]),
                                        new MapPoint([833.1961,
                                            98.0606,
                                            864.0022,
                                            732.3673]),
                                        new MapPoint([882.1473,
                                            525.1573,
                                            957.5330,
                                            859.5760]),
                                        new MapPoint([906.9423,
                                            619.9436,
                                            141.5205])]),
                                    new MapPath([new MapPoint([851.9081,
                                            408.7882,
                                            343.8321,
                                            510.7324]),
                                        new MapPoint([217.2779,
                                            748.8946]),
                                        new MapPoint([639.9370,
                                            662.1889])])],
                                new SpatialReference(9,
                                        "omnis",
                                        "et",
                                        "cupiditate"),
                                new Point(115.3483,
                                        26.4758,
                                        -100.3093,
                                        -5.2378,
                                        265.2230,
                                    new SpatialReference(4,
                                            "in",
                                            "autem",
                                            "et"),
                                        true,
                                        true,
                                        286.1564),
                                    true,
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("ullam facere unde",
                                new MapColor(53, 35, 6),
                                new MapColor(171, 151, 2),
                                    new Dimension(797.1367),
                                new MapFont(new Dimension(576.4809),
                                        "Times New Roman",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bolder,
                                    TextDecoration.LineThrough),
                                    34.0735,
                                new MapColor(58, 86, 94),
                                new MapColor(199, 191, 19),
                                    910.0639,
                                HorizontalAlignment.Right,
                                    true,
                                    757.4919,
                                    new Dimension(578.7329),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("at")"
                            AggregateGeometries="@("neque")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "doloribus",
                                9))">
                            <PopupTemplate 
                                Title="@("consequatur suscipit iusto")"
                                StringContent="@("vitae")"
                                OutFields="@(["delectus",
                                    "aut",
                                    "natus",
                                    "ut"])"
                                FieldInfos="@([new FieldInfo("category",
                                        "corporis",
                                        "corporis",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.ShortDateLe),
                                        true,
                                        true,
                                    StatisticType.Avg)])"
                                Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "harum",
                                            "quidem perspiciatis earum")),
                                new TextPopupContent("esse dolores fugit")])"
                                ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "updatedAt",
                                        "distinctio hic modi",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "title",
                                        "est ea possimus",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionToggle("delectus deserunt nemo",
                                        "b7c7646c-0669-3796-7a1d-2f21df2f93c4",
                                        () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "name",
                                        "ut"),
                                new ActionToggle("in voluptatem cupiditate",
                                        "aff06802-1061-bfa9-e128-eae8f725ae41",
                                        () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "group",
                                        "quo")])">
                            </PopupTemplate>
                        </Graphic>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(160, 149, 192),
                                    new MapColor(208, 129, 191)),
                                    571.1470,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(212.5288,
                                            382.6021),
                                    new AuthoringInfoField1ClassBreakInfos(16.8035,
                                            931.5191),
                                    new AuthoringInfoField1ClassBreakInfos(337.6179,
                                            235.6364),
                                    new AuthoringInfoField1ClassBreakInfos(532.3560,
                                            410.4769)],
                                        "temporibus",
                                        "iste",
                                        "eaque"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(590.7541,
                                            728.1631),
                                    new AuthoringInfoField1ClassBreakInfos(244.1996,
                                            463.8005),
                                    new AuthoringInfoField1ClassBreakInfos(345.4846,
                                            899.8807),
                                    new AuthoringInfoField1ClassBreakInfos(291.7828,
                                            388.1093)],
                                        "et",
                                        "debitis",
                                        "ut"),
                                    ["rerum",
                                        "ea"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "ut",
                                    true,
                                LengthUnit.Kilometers,
                                    508.2560,
                                    218.9165,
                                    648.9799,
                                    35.8071))">
                        </UniqueValueRenderer>
                        <PopupTemplate 
                            Title="@("explicabo deleniti magnam")"
                            StringContent="@("numquam")"
                            OutFields="@(["excepturi",
                                "voluptate"])"
                            FieldInfos="@([new FieldInfo("updatedAt",
                                    "sed",
                                    "cum",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Var)])"
                            Content="@([new TextPopupContent("nihil est laborum"),
                            new TextPopupContent("soluta voluptatem nostrum")])"
                            ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "name",
                                    "qui deserunt officia",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "id",
                                    "et suscipit corporis",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("aut mollitia est",
                                    "845c4a73-902b-027e-9ab4-1e08f972bcf4",
                                    () => { Console.WriteLine("sapiente"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "category",
                                    "ratione"),
                            new ActionToggle("corporis quos quia",
                                    "5a0662ff-b56d-dd58-2748-5d3e29bfa514",
                                    () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "status",
                                    "maiores")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("in")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("at")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AboveRight)"
                            LabelExpression="@("cum")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(23883490.9138)"
                            MinScale="@(22945.1147)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(442.9624))"
                            Symbol="@(new TextSymbol("corrupti perferendis voluptatem",
                                new MapColor(245, 58, 215),
                                new MapColor(45, 86, 148),
                                    new Dimension(916.4874),
                                new MapFont(new Dimension(57.2472),
                                        "Verdana",
                                    MapFontStyle.Italic,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    663.6242,
                                new MapColor(2, 101, 193),
                                new MapColor(23, 85, 234),
                                    929.1381,
                                HorizontalAlignment.Center,
                                    true,
                                    366.9570,
                                    new Dimension(468.1527),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Street = '123 Main St.'")">
                        </Label>
                        <FormTemplate 
                            Title="@("suscipit alias vero")"
                            Description="@("excepturi officia praesentium magnam")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new FieldElement("category",
                                "beatae",
                                "dolorum voluptas quasi corrupti",
                                "qui",
                                "atque",
                                "fugit",
                                "doloribus",
                                new CodedValueDomain<string>(),
                                new BarcodeScannerInput()),
                                new FieldElement("avatar",
                                    "et",
                                    "voluptatem soluta vel et et",
                                    "asperiores",
                                    "quas",
                                    "asperiores",
                                    "eum",
                                    new CodedValueDomain<string>(),
                                    new BarcodeScannerInput())])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "status",
                                    "voluptatem illo nostrum",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("et")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("avatar")"
                            Alias="@("iure")"
                            Description="@("facere quia magni qui sapiente autem")"
                            Length="@(1)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "voluptatem" })"
                            ValueType="@(FieldValueType.PercentageOrRatio)"
                            Domain="@(new InheritedDomain("email"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("autem",
                                47257156.3888),
                                new Effect("consectetur",
                                    47602870.8069)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(331.4245,
                                new Point(15.5308,
                                        20.0957,
                                        111.1730,
                                        57.3464,
                                        248.0796,
                                    new SpatialReference(5,
                                            "nostrum",
                                            "magni",
                                            "doloremque"),
                                        true,
                                        true,
                                        809.0394),
                                    [4,
                                        2,
                                        6],
                                SpatialRelationship.Disjoint,
                                new TimeExtent(new DateTime(2011, 10, 17, 8, 27, 41),
                                        new DateTime(2018, 10, 27, 0, 19, 6)),
                                    QueryUnits.UsNauticalMiles,
                                    "Name = 'John Doe'"))"
                            IncludedEffect="@([new Effect("rerum",
                                27056781.3438),
                                new Effect("rem",
                                    15694628.8883),
                                new Effect("ducimus",
                                    18262730.3916)])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "eligendi voluptates quaerat"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(933.7823)"
                            Unit="@(ElevationUnit.Feet)">
                        </FeatureLayerBaseElevationInfo>
                        <WebTileLayer 
                            ArcGISLayerId="@("fuga")"
                            FullExtent="@(new Extent(-49.7073,
                                    -104.1440,
                                    9.0829,
                                    -67.3827,
                                    662.8647,
                                    418.6575,
                                    935.7373,
                                    224.3962,
                                new SpatialReference(5,
                                        "ullam",
                                        "exercitationem",
                                        "accusantium"),
                                    true,
                                    true))"
                            ListMode="@(ListMode.Show)"
                            Opacity="@(0.9143)"
                            PersistenceEnabled="@(true)"
                            Title="@("tempora quia facilis")">
                            <TimeExtent 
                                Start="@(new DateTime(2020, 3, 22, 18, 44, 14))"
                                End="@(new DateTime(2009, 4, 15, 6, 33, 15))">
                            </TimeExtent>
                        </WebTileLayer>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("vitae",
                    ["nesciunt",
                        "occaecati",
                        "hic"],
                    true,
                    [9,
                        2],
                    ["soluta",
                        "laboriosam"],
                    "updatedAt",
                    589.4564,
                    [1,
                        4,
                        2],
                    true,
                    [5,
                        2,
                        6],
                    525.0684,
                    "Phone = '555-555-5555'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(PortalItemAccess.Shared,
                    "vero",
                    "et",
                    194.6776,
                    ["eos",
                        "quibusdam"],
                    new DateTime(2009, 6, 21, 5, 25, 27),
                    "id",
                    "voluptatem doloribus harum vitae voluptates repudiandae minima",
                new Extent(-139.3374,
                        149.9947,
                        0.1658,
                        -38.3047,
                        210.9127,
                        989.5732,
                        149.3691,
                        484.5516,
                    new SpatialReference(9,
                            "quae",
                            "excepturi",
                            "sed"),
                        true,
                        true),
                    ["dicta",
                        "aut",
                        "qui"],
                    "dolor",
                    new DateTime(2013, 6, 19, 6, 5, 31),
                    "comment",
                    808.5493),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2016, 5, 7, 18, 9, 39),
                        "atque",
                        "suscipit aliquam fugiat"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Extent(103.8160,
                        -140.6926,
                        13.8606,
                        85.7054,
                        827.3145,
                        381.6583,
                        752.8601,
                        817.6773,
                    new SpatialReference(3,
                            "quae",
                            "enim",
                            "debitis"),
                        true,
                        true),
                new TextSymbol("consectetur iure quia",
                    new MapColor(209, 45, 193),
                    new MapColor(207, 116, 122),
                        new Dimension(254.0687),
                    new MapFont(new Dimension(355.1468),
                            "Palatino",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        679.8185,
                    new MapColor(165, 178, 33),
                    new MapColor(211, 137, 91),
                        502.1573,
                    HorizontalAlignment.Left,
                        true,
                        692.0871,
                        new Dimension(718.8338),
                        true),
                new PopupTemplate("omnis error iusto",
                        "voluptatem",
                        ["provident",
                            "vel"],
                    [new FieldInfo("password",
                            "quis",
                            "illum",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "nostrum",
                                "blanditiis quis non")),
                    new MediaPopupContent("autem est perferendis",
                            "asperiores vel iure culpa blanditiis sed",
                        [new PieChartMediaInfo("nisi dignissimos ut",
                                "adipisci",
                                "voluptatem praesentium iusto",
                            new ChartMediaInfoValue(["et",
                                    "quam",
                                    "eius"],
                                    "quaerat",
                                    "adipisci",
                                [new ChartMediaInfoValueSeries("category",
                                        "dolore",
                                        317.4416),
                                new ChartMediaInfoValueSeries("token",
                                        "corporis",
                                        767.1793)],
                                [new MapColor(46, 75, 39),
                                new MapColor(22, 157, 119),
                                new MapColor(132, 164, 244),
                                new MapColor(105, 168, 50)]))],
                            5),
                    new FieldsPopupContent([new FieldInfo("status",
                                "natus",
                                "cum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("id",
                                "voluptas",
                                "ex",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                            "non quam doloremque omnis molestiae aut enim",
                            "voluptate suscipit deleniti"),
                    new AttachmentsPopupContent("maxime voluptas neque",
                            "beatae deserunt sed molestiae voluptas cum sint",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "name",
                            "odit adipisci sit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "status",
                            "tempore quaerat et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "password",
                            "blanditiis alias aperiam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("nihil quo nobis",
                            "https://picsum.photos/640/480/?image=1021",
                            "ed82b7da-b053-155a-55d6-581d0e6e78ae",
                            () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "omnis"),
                    new ActionButton("voluptas aperiam maiores",
                            "https://picsum.photos/640/480/?image=1040",
                            "3bebdfb3-df6b-5b56-0d5b-e5c18c56a607",
                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "perferendis"),
                    new ActionButton("repellat et qui",
                            "https://picsum.photos/640/480/?image=286",
                            "39b40094-ee9e-6cd0-838f-2514197c2078",
                            () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "quia")]),
                    new AttributesDictionary(),
                    true,
                    "iste",
                    "beatae",
                    new GraphicOrigin(Guid.NewGuid(),
                        "aut",
                        4)),
                6,
            default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Public,
                    "autem",
                    "voluptatum",
                    774.4455,
                    ["distinctio",
                        "dignissimos",
                        "quia",
                        "harum"],
                    new DateTime(2012, 6, 7, 12, 42, 40),
                    "magni",
                    "ab ut blanditiis cupiditate",
                new Extent(97.2006,
                        -106.9817,
                        33.9911,
                        -5.3921,
                        43.2308,
                        700.6703,
                        291.8314,
                        749.2492,
                    new SpatialReference(9,
                            "qui",
                            "fugit",
                            "non"),
                        true,
                        true),
                    ["asperiores",
                        "voluptatum",
                        "minus",
                        "consectetur"],
                    "fuga",
                    new DateTime(2016, 1, 16, 6, 33, 55),
                    "phone",
                    774.2105);
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Graphic> testSource = [new Graphic(new Point(17.5868,
                        -82.5030,
                        16.7472,
                        15.9519,
                        37.5851,
                    new SpatialReference(2,
                            "nobis",
                            "et",
                            "autem"),
                        true,
                        true,
                        67.0813),
                new TextSymbol("iste rerum a",
                    new MapColor(58, 8, 18),
                    new MapColor(126, 220, 100),
                        new Dimension(859.3629),
                    new MapFont(new Dimension(965.8463),
                            "Times New Roman",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        477.9175,
                    new MapColor(23, 65, 254),
                    new MapColor(150, 53, 230),
                        904.1142,
                    HorizontalAlignment.Right,
                        true,
                        803.2424,
                        new Dimension(647.5676),
                        true),
                new PopupTemplate("repudiandae tenetur reprehenderit",
                        "eaque",
                        ["distinctio",
                            "at",
                            "consequatur"],
                    [new FieldInfo("phone",
                            "tempore",
                            "ex",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("password",
                            "fuga",
                            "ut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("title",
                            "facilis",
                            "ratione",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("token",
                            "dolor",
                            "voluptatem",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new AttachmentsPopupContent("quaerat tempora voluptatem",
                            "et sit soluta velit consequatur voluptas et",
                            AttachmentsPopupContentDisplayType.Auto),
                    new FieldsPopupContent([new FieldInfo("password",
                                "tenetur",
                                "dolorum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                            "quia qui quidem molestias",
                            "quidem perspiciatis at"),
                    new MediaPopupContent("fugit praesentium et",
                            "et consequatur minus cum sint",
                        [new ColumnChartMediaInfo("odio eum labore",
                                "ut",
                                "animi placeat repudiandae",
                            new ChartMediaInfoValue(["dolorem",
                                    "odio"],
                                    "autem",
                                    "non",
                                [new ChartMediaInfoValueSeries("group",
                                        "qui",
                                        975.5461),
                                new ChartMediaInfoValueSeries("password",
                                        "neque",
                                        88.9024)],
                                [new MapColor(0, 137, 55),
                                new MapColor(199, 140, 209),
                                new MapColor(245, 94, 205)]))],
                            5)],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "token",
                            "culpa accusamus id",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "updatedAt",
                            "error omnis est",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "comment",
                            "cumque doloribus qui",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("et perferendis labore",
                            "https://picsum.photos/640/480/?image=651",
                            "3bf58b40-39b5-e616-ad0f-25845a83132f",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "accusantium"),
                    new ActionToggle("commodi libero officiis",
                            "8ebfdd68-838a-d79e-2ebe-d6789b1b50b0",
                            () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "fuga")]),
                    new AttributesDictionary(),
                    true,
                    "minima",
                    "ipsa",
                    new GraphicOrigin(Guid.NewGuid(),
                        "quas",
                        7)),
            new Graphic(new Extent(106.3000,
                        81.3313,
                        -73.3833,
                        85.9667,
                        231.8389,
                        108.1703,
                        342.1010,
                        584.8503,
                    new SpatialReference(9,
                            "dolorem",
                            "atque",
                            "non"),
                        true,
                        true),
                new TextSymbol("quidem id porro",
                    new MapColor(43, 26, 247),
                    new MapColor(111, 254, 33),
                        new Dimension(334.6879),
                    new MapFont(new Dimension(639.5989),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        750.5133,
                    new MapColor(96, 87, 218),
                    new MapColor(19, 97, 249),
                        759.7326,
                    HorizontalAlignment.Left,
                        true,
                        341.3925,
                        new Dimension(127.9835),
                        true),
                new PopupTemplate("vero voluptatum cumque",
                        "quae",
                        ["mollitia",
                            "nisi",
                            "aperiam"],
                    [new FieldInfo("updatedAt",
                            "non",
                            "voluptatem",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("phone",
                            "numquam",
                            "magnam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("createdAt",
                            "non",
                            "dolorem",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new MediaPopupContent("similique officia sunt",
                            "nostrum sunt voluptatum occaecati ut",
                        [new ImageMediaInfo("sit culpa reprehenderit",
                                "officiis",
                                "tempore in deleniti",
                            new ImageMediaInfoValue("http://ernestina.net",
                                    "http://alexandro.org"),
                                977.6808)],
                            6),
                    new RelationshipPopupContent("animi autem sit",
                            "rem consequatur rerum corrupti",
                            9,
                            "dignissimos",
                        [new RelatedRecordsInfoFieldOrder("doloremque",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("aut",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("dolores",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("eveniet",
                            OrderBy.Asc)],
                            3)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "createdAt",
                            "nulla aut est",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("vel eum sapiente",
                            "5ac05331-47bb-d42c-056c-4f0aab73a92e",
                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "magni")]),
                    new AttributesDictionary(),
                    true,
                    "ex",
                    "nihil",
                    new GraphicOrigin(Guid.NewGuid(),
                        "facere",
                        6)),
            new Graphic(new Extent(-141.3089,
                        77.8221,
                        -56.2227,
                        -65.8941,
                        857.5192,
                        556.6338,
                        585.9252,
                        1.6604,
                    new SpatialReference(2,
                            "error",
                            "at",
                            "inventore"),
                        true,
                        true),
                new TextSymbol("aliquid delectus ut",
                    new MapColor(64, 247, 80),
                    new MapColor(201, 100, 73),
                        new Dimension(916.1601),
                    new MapFont(new Dimension(67.6515),
                            "Georgia",
                        MapFontStyle.Oblique,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        690.8843,
                    new MapColor(240, 186, 180),
                    new MapColor(98, 159, 124),
                        779.0369,
                    HorizontalAlignment.Left,
                        true,
                        384.3062,
                        new Dimension(441.6535),
                        true),
                new PopupTemplate("saepe beatae nisi",
                        "voluptatem",
                        ["reiciendis",
                            "voluptatibus",
                            "voluptatem",
                            "debitis"],
                    [new FieldInfo("password",
                            "laborum",
                            "temporibus",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("token",
                            "quia",
                            "officiis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new RelationshipPopupContent("occaecati suscipit dolores",
                            "molestiae labore laboriosam et labore",
                            9,
                            "tempore",
                        [new RelatedRecordsInfoFieldOrder("iure",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("saepe",
                            OrderBy.Asc)],
                            6)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "updatedAt",
                            "tempore accusantium cumque",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "email",
                            "laborum inventore ducimus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "createdAt",
                            "minima facilis vitae",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("nulla praesentium sit",
                            "cd73e341-fc86-aee6-d3a5-cab2c0d01b16",
                            () => { Console.WriteLine("deserunt"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "magnam")]),
                    new AttributesDictionary(),
                    true,
                    "sapiente",
                    "iusto",
                    new GraphicOrigin(Guid.NewGuid(),
                        "aspernatur",
                        6)),
            new Graphic(new Polyline([new MapPath([new MapPoint([302.9479,
                            883.6157,
                            497.8845]),
                        new MapPoint([412.5061,
                            52.3487]),
                        new MapPoint([681.3204,
                            135.0189,
                            734.9760,
                            687.7340]),
                        new MapPoint([749.9469,
                            751.8158,
                            351.5612,
                            673.7900])])],
                    new SpatialReference(5,
                            "rerum",
                            "distinctio",
                            "aliquid"),
                        true,
                        true),
                new TextSymbol("aliquam id ut",
                    new MapColor(57, 12, 18),
                    new MapColor(1, 221, 55),
                        new Dimension(200.1393),
                    new MapFont(new Dimension(719.0379),
                            "Verdana",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        553.2247,
                    new MapColor(102, 248, 181),
                    new MapColor(8, 162, 232),
                        895.7212,
                    HorizontalAlignment.Right,
                        true,
                        132.3082,
                        new Dimension(15.8487),
                        true),
                new PopupTemplate("quae et quae",
                        "repellendus",
                        ["sed",
                            "aut",
                            "modi"],
                    [new FieldInfo("password",
                            "laudantium",
                            "voluptatibus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("id",
                            "alias",
                            "consequatur",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("updatedAt",
                            "eius",
                            "rerum",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new RelationshipPopupContent("qui neque fugiat",
                            "ipsa qui maxime sequi minus sit",
                            9,
                            "aperiam",
                        [new RelatedRecordsInfoFieldOrder("at",
                            OrderBy.Desc)],
                            4),
                    new TextPopupContent("ex quo eius"),
                    new AttachmentsPopupContent("aut cumque modi",
                            "possimus neque eum aut voluptatum",
                            AttachmentsPopupContentDisplayType.Preview),
                    new MediaPopupContent("aut aliquid id",
                            "quam quidem laboriosam quo dolores fugit accusamus",
                        [new BarChartMediaInfo("aut sed provident",
                                "cumque",
                                "doloribus excepturi repellat",
                            new ChartMediaInfoValue(["ullam",
                                    "voluptatibus",
                                    "laudantium"],
                                    "saepe",
                                    "blanditiis",
                                [new ChartMediaInfoValueSeries("email",
                                        "non",
                                        375.0547),
                                new ChartMediaInfoValueSeries("title",
                                        "aperiam",
                                        664.6220)],
                                [new MapColor(166, 74, 196),
                                new MapColor(79, 150, 39),
                                new MapColor(190, 14, 0),
                                new MapColor(171, 139, 140)])),
                        new ColumnChartMediaInfo("labore ipsum distinctio",
                                "dolore",
                                "sed non adipisci",
                            new ChartMediaInfoValue(["at",
                                    "cum",
                                    "qui"],
                                    "quidem",
                                    "voluptates",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "ipsam",
                                        453.7933),
                                new ChartMediaInfoValueSeries("createdAt",
                                        "quasi",
                                        738.9795)],
                                [new MapColor(184, 75, 90),
                                new MapColor(82, 126, 168),
                                new MapColor(236, 126, 206)]))],
                            8)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "status",
                            "exercitationem dolores neque",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("perspiciatis beatae ut",
                            "91797750-eded-7c69-1c45-9c7c8181e292",
                            () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "ex"),
                    new ActionButton("blanditiis repellat est",
                            "https://picsum.photos/640/480/?image=676",
                            "76418efe-ea0e-8532-9075-186c782f39c3",
                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "molestiae")]),
                    new AttributesDictionary(),
                    true,
                    "enim",
                    "nostrum",
                    new GraphicOrigin(Guid.NewGuid(),
                        "at",
                        5))];
        await featureLayer.SetSource(testSource);
        var source = await featureLayer.GetSource();
        Assert.AreEqual(testSource, source);
        ListMode testListMode = ListMode.Hide;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("dolorum animi eius",
                    "ut",
                    ["quo",
                        "modi",
                        "eum",
                        "sed"],
                [new FieldInfo("group",
                        "eligendi",
                        "beatae",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.ShortMonthYear),
                        true,
                        true,
                    StatisticType.Avg),
                new FieldInfo("updatedAt",
                        "sit",
                        "exercitationem",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(6,
                            true,
                        DateFormat.LongDateLongTime24),
                        true,
                        true,
                    StatisticType.Stddev),
                new FieldInfo("comment",
                        "nesciunt",
                        "eius",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(2,
                            true,
                        DateFormat.ShortDateLeShortTime24),
                        true,
                        true,
                    StatisticType.Stddev),
                new FieldInfo("name",
                        "illum",
                        "exercitationem",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.LongMonthDayYearLongTime),
                        true,
                        true,
                    StatisticType.Min)],
                [new TextPopupContent("veritatis natus placeat")],
                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "token",
                        "quibusdam omnis ea",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "category",
                        "quibusdam blanditiis mollitia",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "avatar",
                        "accusantium numquam voluptas",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("repellendus dolorem provident",
                        "4a5719f7-915f-9934-1ac9-58476f1183e1",
                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "phone",
                        "ut"),
                new ActionButton("quisquam amet accusamus",
                        "https://picsum.photos/640/480/?image=215",
                        "37fd9913-0268-9f3a-8766-939d8dfc1772",
                        () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                        "name",
                        true,
                        true,
                        true,
                        "sit")]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.HardLight;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Layer testDynamicDataSource = new ImageryTileLayer("https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer",
null,
                    new RasterStretchRenderer(new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(113, 81, 9),
                            new MapColor(31, 185, 106)),
                        true,
                        true,
                        [1,
                        9],
                        8,
                        4,
                        StretchType.None,
                        [new RasterBandStatistics(75.9054,
                            3,
                            678.4022,
                            50.7157,
                            305.8604,
                            960.8091,
                            537.7280,
                            666.6285),
                        new RasterBandStatistics(323.8837,
                            4,
                            549.5390,
                            506.4763,
                            1.8505,
                            281.1263,
                            802.1642,
                            187.6122),
                        new RasterBandStatistics(570.4250,
                            2,
                            35.4262,
                            754.9427,
                            582.3786,
                            45.6563,
                            981.4067,
                            954.5479)],
                        true,
                        3),
                    [1,
                        3,
                        8],
                BlendMode.Difference,
                    "laudantium",
                    new Effect("rerum",
                        21905678.5146),
                    PixelInterpolation.Cubic,
                    true,
                ListMode.Hide,
                    41864125.3763,
                    37973.8658,
                [new DimensionalDefinition("category",
                        true,
                        "avatar")],
                new MultidimensionalSubset([new DimensionalDefinition("password",
                            true,
                            "email"),
                    new DimensionalDefinition("name",
                            true,
                            "comment")],
                    new Point(163.6667,
                            27.4828,
                            82.7341,
                            -71.6024,
                            935.2032,
                        new SpatialReference(7,
                                "amet",
                                "eos",
                                "repudiandae"),
                            true,
                            true,
                            534.5507)));
        await featureLayer.SetDynamicDataSource(testDynamicDataSource);
        var dynamicDataSource = await featureLayer.GetDynamicDataSource();
        Assert.AreEqual(testDynamicDataSource, dynamicDataSource);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.Name;",
                        "debitis vel aperiam"),
                ElevationInfoMode.AbsoluteHeight,
                    878.8981,
                ElevationUnit.Decimeters);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("ab",
                    5594944.8277),
                    new Effect("laboriosam",
                        21396096.8236)],
                    true,
                new FeatureFilter(262.4508,
                    new Extent(-119.3726,
                            168.0455,
                            65.0720,
                            -73.0772,
                            308.3178,
                            532.0200,
                            139.4001,
                            10.6937,
                        new SpatialReference(1,
                                "eum",
                                "incidunt",
                                "ad"),
                            true,
                            true),
                        [6,
                            5,
                            5],
                    SpatialRelationship.Disjoint,
                    new TimeExtent(new DateTime(2014, 5, 19, 14, 38, 37),
                            new DateTime(2002, 8, 1, 4, 48, 10)),
                        QueryUnits.Miles,
                        "City = 'Toronto'"),
                    [new Effect("exercitationem",
                        48231446.1185),
                        new Effect("cum",
                            27850845.3604)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "avatar",
                    "facilis",
                    "voluptas dolorem id laboriosam ut",
                    5,
                    true,
                    true,
                    new { Value = "sit" },
                FieldValueType.Coordinate,
                new InheritedDomain("comment")),
            new Field(default,
                    "title",
                    "dolorem",
                    "accusantium cum similique culpa nemo consequatur",
                    8,
                    true,
                    true,
                    new { Value = "ut" },
                FieldValueType.Measurement,
                new RangeDomain("fugiat",
                        "alias",
                        "status"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("maxime");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("molestiae porro quo",
                    "fugit neque occaecati odit",
                    true,
                    [new FieldElement("email",
                        "illum",
                        "doloribus quis eveniet et ab",
                        "magni",
                        "veniam",
                        "illo",
                        "minima",
                        new CodedValueDomain<string>(),
                        new BarcodeScannerInput()),
                        new FieldElement("id",
                            "et",
                            "temporibus quod culpa ipsa et pariatur",
                            "maxime",
                            "assumenda",
                            "id",
                            "porro",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput())],
                [new ExpressionInfo("return $feature['FieldName'];",
                        "comment",
                        "provident blanditiis alias",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(-92.1294,
                    -33.1749,
                    1.5558,
                    26.1451,
                    841.0176,
                    138.5052,
                    731.1704,
                    489.9472,
                new SpatialReference(9,
                        "aut",
                        "nemo",
                        "voluptatem"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterLeft,
                    "sed",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    4224350.4894,
                    49946.9238,
                    true,
                    new Dimension(440.4203),
                new TextSymbol("repellat rerum similique",
                    new MapColor(20, 189, 123),
                    new MapColor(243, 223, 95),
                        new Dimension(178.8748),
                    new MapFont(new Dimension(373.6199),
                            "Verdana",
                        MapFontStyle.Oblique,
                        FontWeight.Bolder,
                        TextDecoration.None),
                        900.9244,
                    new MapColor(8, 138, 164),
                    new MapColor(76, 154, 244),
                        260.1987,
                    HorizontalAlignment.Center,
                        true,
                        641.0486,
                        new Dimension(277.8314),
                        true),
                    true,
                    "ObjectID = 1"),
            new Label(LabelPlacement.AboveAfter,
                    "modi",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    4489357.9037,
                    48527.9080,
                    true,
                    new Dimension(52.9211),
                new TextSymbol("ut temporibus dicta",
                    new MapColor(239, 56, 160),
                    new MapColor(161, 217, 197),
                        new Dimension(337.1870),
                    new MapFont(new Dimension(958.1036),
                            "Courier New",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        33.8091,
                    new MapColor(52, 97, 167),
                    new MapColor(191, 186, 11),
                        227.7891,
                    HorizontalAlignment.Right,
                        true,
                        550.7739,
                        new Dimension(387.5698),
                        true),
                    true,
                    "City = 'Toronto'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("expedita",
                SortOrder.Ascending,
                    "fugit"),
            new OrderedLayerOrderBy("laborum",
                SortOrder.Ascending,
                    "in"),
            new OrderedLayerOrderBy("distinctio",
                SortOrder.Descending,
                    "velit")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new UniqueValueRenderer([new UniqueValueInfo("non",
                    new TextSymbol("occaecati sit ipsum",
                        new MapColor(32, 228, 247),
                        new MapColor(136, 251, 97),
                            new Dimension(592.4933),
                        new MapFont(new Dimension(122.4625),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            755.1205,
                        new MapColor(198, 224, 37),
                        new MapColor(239, 239, 43),
                            124.4722,
                        HorizontalAlignment.Left,
                            true,
                            871.7874,
                            new Dimension(123.9614),
                            true),
                        "placeat")],
                new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                    new AlgorithmicColorRamp(Algorithm.Hsv,
                        new MapColor(229, 30, 193),
                        new MapColor(188, 130, 54)),
                        471.9650,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(950.7497,
                                656.3783)],
                            "magni",
                            "tempore",
                            "consequatur"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(211.3773,
                                125.0875),
                        new AuthoringInfoField1ClassBreakInfos(812.6821,
                                204.2473),
                        new AuthoringInfoField1ClassBreakInfos(930.4728,
                                826.4969),
                        new AuthoringInfoField1ClassBreakInfos(53.7564,
                                296.5207)],
                            "aperiam",
                            "praesentium",
                            "consequuntur"),
                        ["dicta",
                            "qui",
                            "commodi",
                            "omnis"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "consequatur",
                        true,
                    LengthUnit.NauticalMiles,
                        27.8496,
                        596.0407,
                        623.0997,
                        6.0861),
                new PictureFillSymbol("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0",
                    new Dimension(278.7632),
                    new Dimension(313.4078),
                    new Dimension(998.9253),
                    new Dimension(756.7495),
                    120.8059,
                    65.3252,
                    new Outline(new MapColor(110, 151, 61),
                        new Dimension(791.5088),
                        SimpleLineSymbolStyle.ShortDot,
                        Cap.Butt,
                        Join.Round,
                        new LineSymbolMarker(new MapColor(144, 47, 176),
                            LinePlacement.Begin,
                            LineSymbolMarkerStyle.Square),
                        168.3018),
                    new MapColor(71, 14, 16)),
                    "earum",
                    new DefaultSymbol(),
                    "minus",
                    "aut",
                    "accusamus",
                    "voluptatibus",
                new UniqueValueRendererLegendOptions("velit odio aut"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("consectetur",
                        new TextSymbol("accusantium eos sint",
                            new MapColor(0, 70, 215),
                            new MapColor(215, 164, 40),
                                new Dimension(363.6567),
                            new MapFont(new Dimension(281.0250),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                932.3262,
                            new MapColor(234, 27, 241),
                            new MapColor(205, 182, 47),
                                53.0612,
                            HorizontalAlignment.Center,
                                true,
                                401.1789,
                                new Dimension(677.5043),
                                true),
                        [new UniqueValue("ad",
                                "doloremque",
                                "dolorum"),
                        new UniqueValue("perferendis",
                                "excepturi",
                                "sit"),
                        new UniqueValue("qui",
                                "nulla",
                                "ad")]),
                    new UniqueValueClass("quod",
                        new TextSymbol("aliquam vel qui",
                            new MapColor(26, 142, 241),
                            new MapColor(93, 158, 77),
                                new Dimension(150.8381),
                            new MapFont(new Dimension(787.2307),
                                    "Times New Roman",
                                MapFontStyle.Normal,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                217.8249,
                            new MapColor(199, 180, 253),
                            new MapColor(165, 189, 205),
                                370.2295,
                            HorizontalAlignment.Left,
                                true,
                                255.4336,
                                new Dimension(955.7980),
                                true),
                        [new UniqueValue("dolor",
                                "commodi",
                                "minima"),
                        new UniqueValue("aut",
                                "optio",
                                "dolorem"),
                        new UniqueValue("beatae",
                                "accusamus",
                                "voluptatibus")])],
                        "nobis"),
                new UniqueValueGroup([new UniqueValueClass("id",
                        new TextSymbol("ut voluptatem distinctio",
                            new MapColor(37, 35, 71),
                            new MapColor(200, 99, 177),
                                new Dimension(128.8446),
                            new MapFont(new Dimension(359.1018),
                                    "Arial",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                962.0341,
                            new MapColor(251, 66, 21),
                            new MapColor(179, 246, 47),
                                508.8032,
                            HorizontalAlignment.Left,
                                true,
                                266.1387,
                                new Dimension(644.3838),
                                true),
                        [new UniqueValue("molestias",
                                "suscipit",
                                "rerum"),
                        new UniqueValue("autem",
                                "nisi",
                                "animi"),
                        new UniqueValue("corrupti",
                                "inventore",
                                "consectetur")])],
                        "nihil")],
                    "laudantium",
                    "voluptatem non quasi");
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(5,
                    "dolor",
                    "impedit",
                    "consequatur");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("dolorem nostrum quod in qui dignissimos",
                DrawingTool.LeftArrow,
                    "name",
                new Graphic(new Point(170.3167,
                            -4.5341,
                            121.5606,
                            66.5170,
                            475.4542,
                        new SpatialReference(1,
                                "voluptatem",
                                "sed",
                                "non"),
                            true,
                            true,
                            63.8302),
                    new TextSymbol("facere quam consequatur",
                        new MapColor(144, 185, 228),
                        new MapColor(225, 169, 107),
                            new Dimension(463.3559),
                        new MapFont(new Dimension(428.5403),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            576.1727,
                        new MapColor(223, 206, 90),
                        new MapColor(208, 163, 231),
                            66.6154,
                        HorizontalAlignment.Left,
                            true,
                            917.8689,
                            new Dimension(237.4833),
                            true),
                    new PopupTemplate("est velit voluptatem",
                            "autem",
                            ["nisi",
                                "ea",
                                "tempora"],
                        [new FieldInfo("avatar",
                                "deserunt",
                                "ratione",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("title",
                                "nulla",
                                "vel",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("avatar",
                                "sed",
                                "harum",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("id",
                                "nobis",
                                "consequatur",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Count)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "et",
                                    "placeat vel autem")),
                        new AttachmentsPopupContent("quia dolores quisquam",
                                "aspernatur dolore facere impedit architecto aut inventore",
                                AttachmentsPopupContentDisplayType.Preview),
                        new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "quibusdam",
                                    "ut porro cupiditate")),
                        new MediaPopupContent("in est laboriosam",
                                "quo dolor voluptate officia id",
                            [new PieChartMediaInfo("dignissimos totam ut",
                                    "aut",
                                    "mollitia eius doloribus",
                                new ChartMediaInfoValue(["fuga",
                                        "voluptatem",
                                        "repellendus",
                                        "laborum"],
                                        "maxime",
                                        "molestiae",
                                    [new ChartMediaInfoValueSeries("title",
                                            "et",
                                            126.5049),
                                    new ChartMediaInfoValueSeries("comment",
                                            "repellendus",
                                            753.4603),
                                    new ChartMediaInfoValueSeries("category",
                                            "consectetur",
                                            712.4232),
                                    new ChartMediaInfoValueSeries("phone",
                                            "quibusdam",
                                            50.0464)],
                                    [new MapColor(228, 24, 86),
                                    new MapColor(239, 94, 144),
                                    new MapColor(116, 92, 174)]))],
                                5)],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "email",
                                "aperiam omnis placeat",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "title",
                                "dolor hic amet",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "category",
                                "iusto quam voluptatem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "avatar",
                                "culpa temporibus similique",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("non est perspiciatis",
                                "https://picsum.photos/640/480/?image=340",
                                "a6a4dae9-4d74-4b52-eddc-7e887a9bd16a",
                                () => { Console.WriteLine("officiis"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "maiores"),
                        new ActionButton("doloribus et tenetur",
                                "https://picsum.photos/640/480/?image=651",
                                "124d57b6-d802-e906-c695-5d7489a3ebae",
                                () => { Console.WriteLine("soluta"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "ipsum"),
                        new ActionButton("ipsum quis accusantium",
                                "https://picsum.photos/640/480/?image=172",
                                "d68f3bdb-c3e3-ab19-7cc1-dffbefd84331",
                                () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "beatae")]),
                        new AttributesDictionary(),
                        true,
                        "dolores",
                        "distinctio",
                        new GraphicOrigin(Guid.NewGuid(),
                            "doloremque",
                            3)),
                    new Thumbnail("fugiat",
                        "et",
                        214.0696,
                        100.3172)),
            new FeatureTemplate("ipsam qui ab aspernatur enim sit",
                DrawingTool.Polygon,
                    "comment",
                new Graphic(new Polygon([new MapPath([new MapPoint([116.5465,
                                569.1437,
                                387.4213]),
                            new MapPoint([875.3580,
                                529.1508,
                                113.8533,
                                825.3430])]),
                            new MapPath([new MapPoint([833.5607,
                                    60.0034]),
                                new MapPoint([669.9508,
                                    835.9885]),
                                new MapPoint([566.5260,
                                    334.3225]),
                                new MapPoint([103.1519,
                                    222.8024,
                                    651.4817])]),
                            new MapPath([new MapPoint([709.3817,
                                    632.1417]),
                                new MapPoint([543.9100,
                                    657.3779])])],
                        new SpatialReference(4,
                                "autem",
                                "dolorem",
                                "adipisci"),
                        new Point(120.0575,
                                43.1954,
                                -43.7158,
                                10.3838,
                                917.0125,
                            new SpatialReference(9,
                                    "quo",
                                    "delectus",
                                    "quis"),
                                true,
                                true,
                                733.4423),
                            true,
                            true,
                            true),
                    new TextSymbol("libero quis nostrum",
                        new MapColor(113, 141, 213),
                        new MapColor(113, 99, 202),
                            new Dimension(406.5408),
                        new MapFont(new Dimension(70.6053),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            37.5206,
                        new MapColor(10, 182, 210),
                        new MapColor(234, 94, 22),
                            56.6245,
                        HorizontalAlignment.Right,
                            true,
                            613.7530,
                            new Dimension(700.8136),
                            true),
                    new PopupTemplate("commodi aut molestias",
                            "et",
                            ["beatae",
                                "minima",
                                "fuga"],
                        [new FieldInfo("title",
                                "qui",
                                "amet",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("email",
                                "quisquam",
                                "recusandae",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new TextPopupContent("cum consequatur doloribus"),
                        new FieldsPopupContent([new FieldInfo("updatedAt",
                                    "et",
                                    "ea",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("category",
                                    "commodi",
                                    "quae",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "tempora qui qui non rerum",
                                "labore at fugit"),
                        new AttachmentsPopupContent("soluta exercitationem dignissimos",
                                "dolorum sequi dolorum commodi",
                                AttachmentsPopupContentDisplayType.Preview),
                        new MediaPopupContent("numquam adipisci hic",
                                "rerum sunt dolorum magnam eum",
                            [new PieChartMediaInfo("fugit nisi omnis",
                                    "iure",
                                    "sit ut illo",
                                new ChartMediaInfoValue(["vel",
                                        "quis",
                                        "neque",
                                        "ab"],
                                        "distinctio",
                                        "dolore",
                                    [new ChartMediaInfoValueSeries("phone",
                                            "minima",
                                            743.3637)],
                                    [new MapColor(132, 157, 39),
                                    new MapColor(249, 69, 39),
                                    new MapColor(254, 124, 210)]))],
                                3)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "status",
                                "occaecati esse tempore",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "updatedAt",
                                "soluta optio voluptatum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "title",
                                "quis dolor nostrum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "comment",
                                "sit vero qui",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("officiis pariatur provident",
                                "https://picsum.photos/640/480/?image=358",
                                "00a6f569-5732-9587-852d-4c2b92d8df2d",
                                () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "voluptatem")]),
                        new AttributesDictionary(),
                        true,
                        "suscipit",
                        "reiciendis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "qui",
                            7)),
                    new Thumbnail("harum",
                        "et",
                        112.3867,
                        19.9736))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2006, 10, 12, 17, 55, 30),
                    new DateTime(2015, 7, 18, 11, 1, 22));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("quis",
                    "ipsa",
                new TimeExtent(new DateTime(2021, 3, 26, 11, 57, 45),
                        new DateTime(2004, 3, 19, 14, 34, 33)),
                new TimeInterval(TemporalTime.Decades,
                        796.9233),
                    [new DateTime(2023, 2, 20, 0, 51, 44),
                        new DateTime(2005, 1, 23, 19, 29, 43),
                        new DateTime(2022, 8, 7, 1, 16, 28),
                        new DateTime(2006, 8, 9, 17, 25, 23)],
                    "Australia/Hobart",
                    "sed");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Decades,
                    72.4288);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("d0c5e564-2dfb-2702-0680-601652b3d656",
                    "phone",
                [new FeatureTemplate("in blanditiis explicabo deleniti",
                    DrawingTool.UpArrow,
                        "category",
                    new Graphic(new Polygon([new MapPath([new MapPoint([25.7044,
                                    780.4138]),
                                new MapPoint([587.1209,
                                    288.8101]),
                                new MapPoint([881.2664,
                                    838.6967])])],
                            new SpatialReference(6,
                                    "nihil",
                                    "iure",
                                    "ut"),
                            new Point(-17.0157,
                                    -20.5616,
                                    56.8446,
                                    36.4698,
                                    831.9539,
                                new SpatialReference(9,
                                        "molestiae",
                                        "rem",
                                        "quidem"),
                                    true,
                                    true,
                                    179.2445),
                                true,
                                true,
                                true),
                        new TextSymbol("id voluptatem quo",
                            new MapColor(33, 124, 91),
                            new MapColor(46, 115, 88),
                                new Dimension(242.1352),
                            new MapFont(new Dimension(405.8768),
                                    "Bookman",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                270.4131,
                            new MapColor(59, 46, 231),
                            new MapColor(221, 160, 7),
                                636.7113,
                            HorizontalAlignment.Right,
                                true,
                                783.0066,
                                new Dimension(578.7538),
                                true),
                        new PopupTemplate("cum asperiores sequi",
                                "ad",
                                ["impedit",
                                    "repudiandae",
                                    "debitis"],
                            [new FieldInfo("phone",
                                    "quis",
                                    "natus",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                            [new AttachmentsPopupContent("magnam dolorem necessitatibus",
                                    "facere quas unde explicabo cumque unde ipsa",
                                    AttachmentsPopupContentDisplayType.Auto),
                            new AttachmentsPopupContent("ratione adipisci est",
                                    "veritatis earum delectus deserunt",
                                    AttachmentsPopupContentDisplayType.Preview),
                            new RelationshipPopupContent("accusantium qui eveniet",
                                    "debitis dolores aut veniam illum maiores",
                                    4,
                                    "saepe",
                                [new RelatedRecordsInfoFieldOrder("excepturi",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("error",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("eos",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("quae",
                                    OrderBy.Asc)],
                                    4),
                            new MediaPopupContent("voluptatem magnam accusamus",
                                    "totam est qui earum nostrum",
                                [new PieChartMediaInfo("hic quia ea",
                                        "molestias",
                                        "et odit molestiae",
                                    new ChartMediaInfoValue(["ab",
                                            "non",
                                            "quo"],
                                            "et",
                                            "fugiat",
                                        [new ChartMediaInfoValueSeries("token",
                                                "optio",
                                                441.3277),
                                        new ChartMediaInfoValueSeries("token",
                                                "sunt",
                                                725.2917),
                                        new ChartMediaInfoValueSeries("group",
                                                "et",
                                                945.4788)],
                                        [new MapColor(6, 205, 56)])),
                                new PieChartMediaInfo("et consequuntur nihil",
                                        "suscipit",
                                        "dolores est voluptas",
                                    new ChartMediaInfoValue(["ullam",
                                            "in"],
                                            "excepturi",
                                            "vel",
                                        [new ChartMediaInfoValueSeries("phone",
                                                "perspiciatis",
                                                818.4971),
                                        new ChartMediaInfoValueSeries("name",
                                                "vel",
                                                744.6852)],
                                        [new MapColor(226, 37, 60)]))],
                                    3)],
                            [new ExpressionInfo("return $feature.Name;",
                                    "password",
                                    "dolor cum est",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "password",
                                    "ex consequatur ducimus",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "title",
                                    "voluptatem eaque necessitatibus",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("vel amet perferendis",
                                    "https://picsum.photos/640/480/?image=194",
                                    "3e8810ab-b5cc-975f-06c9-37d78f3f70a2",
                                    () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                    "category",
                                    true,
                                    true,
                                    true,
                                    "ad"),
                            new ActionToggle("cum dolorem ut",
                                    "07897c88-4f0c-8d25-b956-32bfbaede374",
                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "title",
                                    "animi")]),
                            new AttributesDictionary(),
                            true,
                            "velit",
                            "asperiores",
                            new GraphicOrigin(Guid.NewGuid(),
                                "eligendi",
                                3)),
                        new Thumbnail("est",
                            "voluptate",
                            168.4717,
                            159.3726))],
                new Dictionary<string, Domain>() {{ "velit", new InheritedDomain("status") },
                { "consequatur", new RangeDomain("ut",
        "repellendus",
        "name") }
                },
                    "est")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2023, 1, 10, 0, 16, 6),
                    new DateTime(2023, 3, 19, 13, 40, 19));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
