@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")"
                        OutFields="@(["et",
                            "asperiores"])"
                        DefinitionExpression="@("beatae")"
                        MinScale="@(1560.7793)"
                        MaxScale="@(30605322.6461)"
                        ObjectIdField="@("qui")"
                        GeometryType="@(FeatureGeometryType.Polygon)"
                        Title="@("deserunt qui voluptatem")"
                        Opacity="@(0.0615)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        ApiKey="@("officia")"
                        BlendMode="@(BlendMode.Darken)"
                        Charts="@(["cumque",
                            "eveniet",
                            "nihil"])"
                        Copyright="@("molestiae")"
                        DateFieldsTimeZone="@("velit")"
                        DisplayField="@("explicabo")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("ipsum",
                            13196553.8660))"
                        FullExtent="@(new Extent(-1.9568,
                                -53.6836,
                                57.7742,
                                -79.9216,
                                199.2229,
                                758.8927,
                                935.4078,
                                258.0690,
                            new SpatialReference(6,
                                    "nisi",
                                    "consequatur",
                                    "officiis"),
                                true,
                                true))"
                        GdbVersion="@("2.1.6.3")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2021, 2, 2, 9, 49, 8))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(845.2329)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        SpatialReference="@(new SpatialReference(8,
                                "tempore",
                                "eius",
                                "qui"))"
                        TypeIdField="@("et")"
                        Types="@([new FeatureType("7fc365ee-cd32-887a-a267-c971e4f229ec",
                                "id",
                            [new FeatureTemplate("magni quibusdam quod reprehenderit mollitia eligendi quae",
                                DrawingTool.Arrow,
                                    "token",
                                new Graphic(new Extent(96.0176,
                                            -165.6790,
                                            11.2127,
                                            34.7984,
                                            161.0432,
                                            515.1225,
                                            684.2114,
                                            375.5086,
                                        new SpatialReference(8,
                                                "nihil",
                                                "beatae",
                                                "pariatur"),
                                            true,
                                            true),
                                    new TextSymbol("necessitatibus aperiam est",
                                        new MapColor(150, 253, 145),
                                        new MapColor(192, 37, 170),
                                            new Dimension(27.8488),
                                        new MapFont(new Dimension(898.0540),
                                                "Palatino",
                                            MapFontStyle.Italic,
                                            FontWeight.Bolder,
                                            TextDecoration.None),
                                            323.9180,
                                        new MapColor(217, 75, 69),
                                        new MapColor(234, 206, 93),
                                            461.9811,
                                        HorizontalAlignment.Left,
                                            true,
                                            266.3044,
                                            new Dimension(279.1747),
                                            true),
                                    new PopupTemplate("eos recusandae consequatur",
                                            "eveniet",
                                            ["nihil",
                                                "rerum"],
                                        [new FieldInfo("title",
                                                "et",
                                                "velit",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Sum)],
                                        [new TextPopupContent("consequatur nobis quam"),
                                        new AttachmentsPopupContent("consequatur est nulla",
                                                "temporibus repellat autem nihil",
                                                AttachmentsPopupContentDisplayType.Auto)],
                                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "phone",
                                                "libero harum non",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "status",
                                                "sed et dolore",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "id",
                                                "qui neque rem",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("error nulla voluptatum",
                                                "https://picsum.photos/640/480/?image=1001",
                                                "bf25923c-02aa-9200-9fa2-d59d34f96c99",
                                                () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                                "comment",
                                                true,
                                                true,
                                                true,
                                                "voluptate"),
                                        new ActionButton("sunt sed suscipit",
                                                "https://picsum.photos/640/480/?image=578",
                                                "49d0da9d-2bb5-92f0-4482-ae5f542a6065",
                                                () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                                "id",
                                                true,
                                                true,
                                                true,
                                                "temporibus"),
                                        new ActionToggle("quam voluptas quia",
                                                "0e024ed4-d679-eeaf-46de-67d1a0706f95",
                                                () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "title",
                                                "explicabo"),
                                        new ActionToggle("voluptas optio sed",
                                                "bc70630e-6aa0-197b-8cc0-911aa2951052",
                                                () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "password",
                                                "quas")]),
                                        new AttributesDictionary(),
                                        true,
                                        "dolor",
                                        "dolor",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "iste",
                                            6)),
                                    new Thumbnail("voluptas",
                                        "quas",
                                        266.6263,
                                        62.0065)),
                            new FeatureTemplate("nobis eius in omnis consequuntur fugit",
                                DrawingTool.UpArrow,
                                    "email",
                                new Graphic(new Polygon([new MapPath([new MapPoint([624.6836,
                                                961.3362,
                                                189.6285,
                                                690.9185]),
                                            new MapPoint([654.9870,
                                                887.5356,
                                                209.4786]),
                                            new MapPoint([883.9620,
                                                770.6607,
                                                34.7813,
                                                43.6729]),
                                            new MapPoint([964.1645,
                                                380.0850,
                                                112.7988])]),
                                            new MapPath([new MapPoint([208.9008,
                                                    976.5021,
                                                    639.8857,
                                                    886.8126]),
                                                new MapPoint([101.5202,
                                                    986.8201,
                                                    533.2388]),
                                                new MapPoint([911.1173,
                                                    938.1446,
                                                    181.3451,
                                                    974.3694])]),
                                            new MapPath([new MapPoint([970.4692,
                                                    128.3161,
                                                    583.4005]),
                                                new MapPoint([405.0608,
                                                    833.9669]),
                                                new MapPoint([431.3852,
                                                    676.9012,
                                                    641.6462])]),
                                            new MapPath([new MapPoint([32.1485,
                                                    793.9361,
                                                    236.1537,
                                                    914.0321]),
                                                new MapPoint([617.2005,
                                                    427.2183,
                                                    55.0498,
                                                    401.6242]),
                                                new MapPoint([994.2960,
                                                    523.9691])])],
                                        new SpatialReference(2,
                                                "quibusdam",
                                                "ea",
                                                "aliquam"),
                                        new Point(-154.3783,
                                                -43.0779,
                                                -30.6050,
                                                -69.2740,
                                                92.3712,
                                            new SpatialReference(5,
                                                    "nihil",
                                                    "quisquam",
                                                    "aut"),
                                                true,
                                                true,
                                                553.3427),
                                            true,
                                            true,
                                            true),
                                    new TextSymbol("natus vel accusantium",
                                        new MapColor(90, 127, 68),
                                        new MapColor(221, 149, 181),
                                            new Dimension(717.6678),
                                        new MapFont(new Dimension(205.5944),
                                                "Garamond",
                                            MapFontStyle.Normal,
                                            FontWeight.Lighter,
                                            TextDecoration.None),
                                            601.2649,
                                        new MapColor(39, 211, 45),
                                        new MapColor(140, 149, 155),
                                            592.5764,
                                        HorizontalAlignment.Center,
                                            true,
                                            111.0340,
                                            new Dimension(164.9782),
                                            true),
                                    new PopupTemplate("dolorem perferendis praesentium",
                                            "amet",
                                            ["placeat",
                                                "perspiciatis"],
                                        [new FieldInfo("category",
                                                "minima",
                                                "reprehenderit",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("comment",
                                                "eum",
                                                "nihil",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.LongMonthYear),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("token",
                                                "qui",
                                                "voluptatibus",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("status",
                                                "qui",
                                                "sed",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count)],
                                        [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                    "ut",
                                                    "tempora excepturi qui"))],
                                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "id",
                                                "optio maiores rerum",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "avatar",
                                                "dolorum et impedit",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "status",
                                                "reiciendis rerum voluptatibus",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionToggle("magni consequatur quis",
                                                "6a3970c7-c6f4-cee4-adf9-e8254906f40c",
                                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "name",
                                                "accusamus")]),
                                        new AttributesDictionary(),
                                        true,
                                        "praesentium",
                                        "hic",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "magni",
                                            1)),
                                    new Thumbnail("accusamus",
                                        "exercitationem",
                                        46.6396,
                                        29.8218))],
                            new Dictionary<string, Domain>() {{ "aliquid", new InheritedDomain("updatedAt") },
                            { "et", new InheritedDomain("group") },
                            { "laboriosam", new InheritedDomain("comment") }
                            },
                                "iste")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Minutes)"
                            Value="@(531.9642)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("beatae")"
                            EndField="@("officiis")"
                            Stops="@([new DateTime(2014, 1, 27, 14, 50, 9),
                                new DateTime(2000, 11, 26, 8, 24, 47)])"
                            TimeZone="@("Etc/UTC")"
                            TrackIdField="@("voluptatem")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Centuries)"
                                Value="@(419.2062)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2010, 11, 26, 6, 23, 47))"
                                End="@(new DateTime(2003, 7, 4, 10, 29, 54))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2011, 6, 12, 9, 37, 2))"
                            End="@(new DateTime(2018, 6, 9, 9, 51, 14))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("rerum quia explicabo id vero est enim")"
                            DrawingTool="@(DrawingTool.AutoCompletePolygon)"
                            Name="@("category")"
                            Thumbnail="@(new Thumbnail("enim",
                                "incidunt",
                                279.6054,
                                220.2778))">
                            <Graphic 
                                Geometry="@(new Extent(125.3868,
                                        42.8276,
                                        22.7309,
                                        -41.4484,
                                        975.4620,
                                        346.4763,
                                        691.5970,
                                        890.8268,
                                    new SpatialReference(9,
                                            "dolores",
                                            "fugit",
                                            "eaque"),
                                        true,
                                        true))"
                                Symbol="@(new TextSymbol("earum cumque laborum",
                                    new MapColor(64, 206, 89),
                                    new MapColor(65, 204, 104),
                                        new Dimension(421.7096),
                                    new MapFont(new Dimension(539.9342),
                                            "Arial",
                                        MapFontStyle.Italic,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        302.1506,
                                    new MapColor(143, 68, 109),
                                    new MapColor(157, 125, 8),
                                        675.5264,
                                    HorizontalAlignment.Left,
                                        true,
                                        63.6180,
                                        new Dimension(829.4496),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("ab et vel",
                                        "soluta",
                                        ["quia",
                                            "qui",
                                            "doloribus"],
                                    [new FieldInfo("group",
                                            "maxime",
                                            "incidunt",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("avatar",
                                            "est",
                                            "quas",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.Year),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                    [new RelationshipPopupContent("et sit ipsa",
                                            "non sit eligendi alias excepturi quisquam",
                                            9,
                                            "dignissimos",
                                        [new RelatedRecordsInfoFieldOrder("molestiae",
                                            OrderBy.Desc)],
                                            2)],
                                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "email",
                                            "ratione sit ut",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "avatar",
                                            "eos nisi quia",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return Date();",
                                            "token",
                                            "voluptatem nulla architecto",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("quia minus assumenda",
                                            "https://picsum.photos/640/480/?image=399",
                                            "2cdfa228-45f6-002e-546d-d350b6c660ee",
                                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                            "comment",
                                            true,
                                            true,
                                            true,
                                            "excepturi"),
                                    new ActionToggle("iusto labore eius",
                                            "fde02caa-91a4-b52e-2094-96b311616c07",
                                            () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "title",
                                            "facere"),
                                    new ActionButton("eveniet quo et",
                                            "https://picsum.photos/640/480/?image=108",
                                            "52deae6d-bfc8-9313-387d-494499130f00",
                                            () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "ea")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("et")"
                                AggregateGeometries="@("sunt")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "rerum",
                                    6))">
                            </Graphic>
                        </FeatureTemplate>
                        <Graphic 
                            Geometry="@(new Polyline([new MapPath([new MapPoint([606.4593,
                                        834.2796]),
                                    new MapPoint([267.1823,
                                        458.2241,
                                        738.3024,
                                        152.0036]),
                                    new MapPoint([926.1289,
                                        86.4336]),
                                    new MapPoint([749.2655,
                                        483.8929,
                                        589.9357])]),
                                    new MapPath([new MapPoint([645.0041,
                                            736.3638]),
                                        new MapPoint([233.5245,
                                            515.1639,
                                            215.2986]),
                                        new MapPoint([917.1624,
                                            932.8430,
                                            105.1522,
                                            882.5591]),
                                        new MapPoint([525.6351,
                                            837.5095,
                                            157.7144])])],
                                new SpatialReference(4,
                                        "excepturi",
                                        "saepe",
                                        "aut"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("totam enim itaque",
                                new MapColor(32, 72, 156),
                                new MapColor(61, 14, 174),
                                    new Dimension(106.1350),
                                new MapFont(new Dimension(911.9896),
                                        "Arial",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.Underline),
                                    905.7830,
                                new MapColor(57, 33, 195),
                                new MapColor(148, 91, 45),
                                    641.2069,
                                HorizontalAlignment.Right,
                                    true,
                                    42.3091,
                                    new Dimension(385.0939),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("vero")"
                            AggregateGeometries="@("omnis")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "occaecati",
                                8))">
                            <PopupTemplate 
                                Title="@("harum itaque est")"
                                StringContent="@("est")"
                                OutFields="@(["delectus",
                                    "laudantium"])"
                                FieldInfos="@([new FieldInfo("updatedAt",
                                        "molestiae",
                                        "similique",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("id",
                                        "suscipit",
                                        "ea",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongMonthDayYear),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("phone",
                                        "quaerat",
                                        "quia",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.ShortDateLeShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum)])"
                                Content="@([new RelationshipPopupContent("iure nam dolore",
                                        "cumque autem non qui quod eius dolor",
                                        6,
                                        "eveniet",
                                    [new RelatedRecordsInfoFieldOrder("harum",
                                        OrderBy.Desc),
                                    new RelatedRecordsInfoFieldOrder("nobis",
                                        OrderBy.Asc)],
                                        5),
                                new RelationshipPopupContent("inventore enim praesentium",
                                        "at possimus autem maxime sed voluptas sequi",
                                        8,
                                        "et",
                                    [new RelatedRecordsInfoFieldOrder("impedit",
                                        OrderBy.Asc)],
                                        3)])"
                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                        "category",
                                        "ad quam ipsa",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "category",
                                        "qui tenetur officiis",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "updatedAt",
                                        "quo mollitia voluptatibus",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "email",
                                        "recusandae tempore exercitationem",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionToggle("illum doloribus in",
                                        "80997321-9576-347d-5a3a-cd26a375a0bc",
                                        () => { Console.WriteLine("occaecati"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "category",
                                        "aliquam"),
                                new ActionToggle("excepturi blanditiis rerum",
                                        "e7cd95f9-144a-07ab-c981-6927c61ad4f3",
                                        () => { Console.WriteLine("officiis"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "password",
                                        "quos"),
                                new ActionButton("reiciendis et in",
                                        "https://picsum.photos/640/480/?image=185",
                                        "062fc198-467a-c06c-7e85-9926c2ed3121",
                                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                        "avatar",
                                        true,
                                        true,
                                        true,
                                        "et"),
                                new ActionToggle("necessitatibus tempore magni",
                                        "530808b7-6e5a-1281-567e-96226dd34af3",
                                        () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "status",
                                        "accusantium")])">
                            </PopupTemplate>
                        </Graphic>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(236, 22, 174),
                                    new MapColor(130, 191, 86)),
                                    817.8479,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(952.2507,
                                            732.4584),
                                    new AuthoringInfoField1ClassBreakInfos(249.0865,
                                            952.3772),
                                    new AuthoringInfoField1ClassBreakInfos(821.1336,
                                            449.6073),
                                    new AuthoringInfoField1ClassBreakInfos(687.7539,
                                            784.3590)],
                                        "eveniet",
                                        "incidunt",
                                        "repellat"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(851.5721,
                                            324.4140)],
                                        "at",
                                        "rerum",
                                        "debitis"),
                                    ["inventore",
                                        "commodi"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "asperiores",
                                    true,
                                LengthUnit.Centimeters,
                                    935.1685,
                                    184.5119,
                                    190.1995,
                                    40.2408))">
                        </UniqueValueRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Public)"
                            AccessInformation="@("fugit")"
                            ApiKey="@("ipsum")"
                            AvgRating="@(809.2503)"
                            Categories="@(["cum",
                                "reiciendis"])"
                            Created="@(new DateTime(2008, 2, 18, 13, 56, 26))"
                            Culture="@("est")"
                            Description="@("consectetur voluptas tempore in est nulla sunt")"
                            Extent="@(new Extent(-86.8077,
                                    30.5147,
                                    35.6950,
                                    41.1791,
                                    422.2289,
                                    622.7533,
                                    470.7145,
                                    835.0497,
                                new SpatialReference(9,
                                        "corrupti",
                                        "repellendus",
                                        "eaque"),
                                    true,
                                    true))"
                            GroupCategories="@(["vel",
                                "cupiditate"])"
                            LicenseInfo="@("ex")"
                            Modified="@(new DateTime(2012, 11, 6, 1, 51, 38))"
                            Name="@("comment")"
                            NumComments="@(247.1545)"
                            NumRatings="@(721.2050)"
                            NumViews="@(632.2623)"
                            Owner="@("Penelope Blanda")"
                            OwnerFolder="@("Carlo Hansen")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Immediate,
                                    ["veritatis",
                                        "odit",
                                        "eius",
                                        "consequatur"],
                                    "dolores",
                                    "eum",
                                    "itaque",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("vel")"
                            Screenshots="@(["veritatis",
                                "laudantium",
                                "sit"])"
                            Size="@(5)"
                            Snippet="@("rerum")"
                            Tags="@(["perferendis",
                                "et",
                                "illo"])"
                            Title="@("maxime fugit recusandae")"
                            TypeKeywords="@(["aut",
                                "ut",
                                "ipsam"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("quo deleniti sint")"
                            StringContent="@("sint")"
                            OutFields="@(["officia",
                                "qui"])"
                            FieldInfos="@([new FieldInfo("token",
                                    "expedita",
                                    "nulla",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("title",
                                    "quia",
                                    "assumenda",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Var)])"
                            Content="@([new MediaPopupContent("omnis asperiores odio",
                                    "a eius aut minima quia",
                                [new ImageMediaInfo("libero deserunt incidunt",
                                        "id",
                                        "sunt doloremque sunt",
                                    new ImageMediaInfoValue("http://corine.net",
                                            "http://janessa.biz"),
                                        931.9340),
                                new PieChartMediaInfo("et deserunt sunt",
                                        "qui",
                                        "rerum deserunt id",
                                    new ChartMediaInfoValue(["labore",
                                            "quis"],
                                            "quaerat",
                                            "ea",
                                        [new ChartMediaInfoValueSeries("status",
                                                "tenetur",
                                                836.4087),
                                        new ChartMediaInfoValueSeries("name",
                                                "aut",
                                                67.2626),
                                        new ChartMediaInfoValueSeries("id",
                                                "vero",
                                                49.6546)],
                                        [new MapColor(248, 27, 142),
                                        new MapColor(216, 118, 65),
                                        new MapColor(140, 4, 25)])),
                                new PieChartMediaInfo("vero quis enim",
                                        "omnis",
                                        "veritatis voluptatum aut",
                                    new ChartMediaInfoValue(["sequi",
                                            "qui",
                                            "nihil"],
                                            "nulla",
                                            "incidunt",
                                        [new ChartMediaInfoValueSeries("id",
                                                "rerum",
                                                39.5093),
                                        new ChartMediaInfoValueSeries("token",
                                                "quidem",
                                                989.7660)],
                                        [new MapColor(242, 228, 1),
                                        new MapColor(229, 124, 61),
                                        new MapColor(40, 213, 145)])),
                                new LineChartMediaInfo("dicta velit molestiae",
                                        "dicta",
                                        "unde sed animi",
                                    new ChartMediaInfoValue(["veritatis",
                                            "in",
                                            "accusamus",
                                            "consequatur"],
                                            "voluptas",
                                            "accusantium",
                                        [new ChartMediaInfoValueSeries("name",
                                                "amet",
                                                273.2791)],
                                        [new MapColor(203, 222, 181),
                                        new MapColor(86, 135, 252)]))],
                                    4)])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "status",
                                    "molestias ipsum dolor",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "email",
                                    "ipsa quia veritatis",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("distinctio provident eligendi",
                                    "a50e824d-d7b3-d469-8980-fc5f3a7239ce",
                                    () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "incidunt"),
                            new ActionButton("dicta dolore recusandae",
                                    "https://picsum.photos/640/480/?image=16",
                                    "392cf5a2-1ade-f986-f874-00f5ba1cb357",
                                    () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                    "name",
                                    true,
                                    true,
                                    true,
                                    "eaque")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("fuga")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("eum")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.CenterLeft)"
                            LabelExpression="@("dignissimos")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(5763565.6364)"
                            MinScale="@(44725.4970)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(416.2926))"
                            Symbol="@(new TextSymbol("iure tenetur et",
                                new MapColor(14, 146, 152),
                                new MapColor(91, 142, 26),
                                    new Dimension(897.1965),
                                new MapFont(new Dimension(653.6768),
                                        "Helvetica",
                                    MapFontStyle.Normal,
                                    FontWeight.Lighter,
                                    TextDecoration.None),
                                    470.5490,
                                new MapColor(111, 101, 160),
                                new MapColor(103, 7, 17),
                                    965.2853,
                                HorizontalAlignment.Center,
                                    true,
                                    862.7823,
                                    new Dimension(469.8634),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("City = 'Toronto'")">
                        </Label>
                        <FormTemplate 
                            Title="@("dolorum assumenda est")"
                            Description="@("voluptas consequatur ab iusto")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new FieldElement("comment",
                                "illum",
                                "sint omnis delectus eos magni aut illum",
                                "voluptas",
                                "nisi",
                                "atque",
                                "quod",
                                new CodedValueDomain<string>(),
                                new BarcodeScannerInput()),
                                new FieldElement("id",
                                    "officia",
                                    "dicta minus rerum placeat dolorum voluptas",
                                    "placeat",
                                    "inventore",
                                    "deserunt",
                                    "a",
                                    new CodedValueDomain<string>(),
                                    new BarcodeScannerInput()),
                                new FieldElement("createdAt",
                                    "dolor",
                                    "aut quae est porro autem necessitatibus pariatur",
                                    "nemo",
                                    "ut",
                                    "et",
                                    "cum",
                                    new CodedValueDomain<string>(),
                                    new BarcodeScannerInput()),
                                new FieldElement("phone",
                                    "veniam",
                                    "et tempore nulla quidem eius aut voluptatem",
                                    "quas",
                                    "dolorem",
                                    "magnam",
                                    "adipisci",
                                    new CodedValueDomain<string>(),
                                    new BarcodeScannerInput())])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "password",
                                    "et ut laborum",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "name",
                                    "omnis unde nihil",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "token",
                                    "nihil est magnam",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "token",
                                    "est illo voluptas",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("voluptatem")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("name")"
                            Alias="@("voluptas")"
                            Description="@("ut itaque et exercitationem quis architecto")"
                            Length="@(2)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "eius" })"
                            ValueType="@(FieldValueType.NameOrTitle)"
                            Domain="@(new RangeDomain("qui",
                                    "est",
                                    "title"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("dolore",
                                3537884.7819),
                                new Effect("commodi",
                                    23290138.8153),
                                new Effect("nobis",
                                    32364620.9809),
                                new Effect("sint",
                                    23568671.5796)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(619.3232,
                                new Extent(-98.4715,
                                        54.7840,
                                        50.1188,
                                        37.8528,
                                        453.6936,
                                        72.2840,
                                        785.8647,
                                        968.5483,
                                    new SpatialReference(2,
                                            "omnis",
                                            "eveniet",
                                            "quo"),
                                        true,
                                        true),
                                    [7,
                                        7],
                                SpatialRelationship.Overlaps,
                                new TimeExtent(new DateTime(2020, 2, 9, 5, 34, 33),
                                        new DateTime(2013, 11, 19, 18, 13, 11)),
                                    QueryUnits.UsNauticalMiles,
                                    "City = 'Toronto'"))"
                            IncludedEffect="@([new Effect("accusamus",
                                9407040.4966),
                                new Effect("consectetur",
                                    4709736.9731),
                                new Effect("et",
                                    11707582.3890),
                                new Effect("illo",
                                    12981124.5201)])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "ab possimus cumque"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(559.1325)"
                            Unit="@(ElevationUnit.Yards)">
                        </FeatureLayerBaseElevationInfo>
                        <ImageryLayer 
                            ArcGISLayerId="@("accusamus")"
                            FullExtent="@(new Extent(128.1539,
                                    173.1416,
                                    39.9614,
                                    5.3227,
                                    213.5547,
                                    215.0574,
                                    716.4889,
                                    249.2633,
                                new SpatialReference(5,
                                        "sed",
                                        "perspiciatis",
                                        "qui"),
                                    true,
                                    true))"
                            ListMode="@(ListMode.Show)"
                            Opacity="@(0.4995)"
                            PersistenceEnabled="@(true)"
                            Title="@("repellat sunt earum")">
                            <TimeExtent 
                                Start="@(new DateTime(2021, 6, 7, 15, 30, 45))"
                                End="@(new DateTime(2022, 2, 11, 12, 58, 9))">
                            </TimeExtent>
                        </ImageryLayer>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("autem",
                    ["maiores",
                        "possimus",
                        "fugit"],
                    true,
                    [1,
                        9],
                    ["rem",
                        "atque",
                        "deleniti"],
                    "name",
                    407.5265,
                    [6,
                        8],
                    true,
                    [2,
                        6],
                    714.3959,
                    "Name = 'John Doe'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(PortalItemAccess.Shared,
                    "laboriosam",
                    "est",
                    329.6399,
                    ["dolorem",
                        "voluptas"],
                    new DateTime(2003, 8, 24, 3, 33, 10),
                    "quia",
                    "enim laborum ut dolor dolor quasi vel",
                new Extent(173.7640,
                        76.0784,
                        -54.8490,
                        -67.0043,
                        374.6297,
                        993.5799,
                        633.9624,
                        601.4041,
                    new SpatialReference(6,
                            "iusto",
                            "libero",
                            "doloribus"),
                        true,
                        true),
                    ["nostrum",
                        "qui",
                        "est",
                        "ipsam"],
                    "eum",
                    new DateTime(2019, 9, 17, 21, 53, 8),
                    "email",
                    742.8693),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2008, 2, 6, 17, 17, 34),
                        "sed",
                        "voluptates consequatur sed"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Polygon([new MapPath([new MapPoint([153.6999,
                            0.2523,
                            7.9913]),
                        new MapPoint([307.4171,
                            95.3482])])],
                    new SpatialReference(4,
                            "possimus",
                            "consectetur",
                            "quaerat"),
                    new Point(-109.2225,
                            -79.5506,
                            0.0415,
                            88.9248,
                            556.9237,
                        new SpatialReference(1,
                                "nesciunt",
                                "odit",
                                "cumque"),
                            true,
                            true,
                            890.7362),
                        true,
                        true,
                        true),
                new TextSymbol("sint fuga distinctio",
                    new MapColor(228, 0, 223),
                    new MapColor(94, 76, 122),
                        new Dimension(774.5823),
                    new MapFont(new Dimension(467.9018),
                            "Courier New",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        361.4091,
                    new MapColor(137, 217, 148),
                    new MapColor(206, 22, 147),
                        584.3919,
                    HorizontalAlignment.Center,
                        true,
                        848.3537,
                        new Dimension(74.2766),
                        true),
                new PopupTemplate("asperiores rem quo",
                        "culpa",
                        ["et",
                            "aut",
                            "magnam",
                            "vero"],
                    [new FieldInfo("email",
                            "dolor",
                            "similique",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("group",
                            "quibusdam",
                            "provident",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("avatar",
                            "voluptates",
                            "aut",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("title",
                            "eum",
                            "omnis",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new AttachmentsPopupContent("culpa ea eum",
                            "vero eum non dicta iste",
                            AttachmentsPopupContentDisplayType.Preview),
                    new MediaPopupContent("quisquam et quasi",
                            "ut id aliquam deserunt",
                        [new LineChartMediaInfo("aliquid voluptas rerum",
                                "ut",
                                "quos et quidem",
                            new ChartMediaInfoValue(["earum",
                                    "distinctio"],
                                    "tenetur",
                                    "eum",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "sit",
                                        683.6381)],
                                [new MapColor(43, 109, 68),
                                new MapColor(179, 168, 217)])),
                        new ImageMediaInfo("odio sapiente ex",
                                "iusto",
                                "dolor et nobis",
                            new ImageMediaInfoValue("http://maye.com",
                                    "https://christophe.com"),
                                561.2928),
                        new BarChartMediaInfo("cumque libero minus",
                                "et",
                                "nulla et quia",
                            new ChartMediaInfoValue(["tenetur",
                                    "ullam"],
                                    "nemo",
                                    "cupiditate",
                                [new ChartMediaInfoValueSeries("email",
                                        "voluptate",
                                        720.8087),
                                new ChartMediaInfoValueSeries("status",
                                        "tempore",
                                        118.8299),
                                new ChartMediaInfoValueSeries("group",
                                        "quod",
                                        569.0214)],
                                [new MapColor(114, 141, 53),
                                new MapColor(119, 229, 202)])),
                        new PieChartMediaInfo("sint nobis autem",
                                "quae",
                                "tempora soluta dolor",
                            new ChartMediaInfoValue(["temporibus",
                                    "numquam"],
                                    "eos",
                                    "qui",
                                [new ChartMediaInfoValueSeries("name",
                                        "assumenda",
                                        979.2626),
                                new ChartMediaInfoValueSeries("comment",
                                        "commodi",
                                        83.8251),
                                new ChartMediaInfoValueSeries("updatedAt",
                                        "est",
                                        231.8719),
                                new ChartMediaInfoValueSeries("email",
                                        "dolores",
                                        843.9679)],
                                [new MapColor(193, 38, 135),
                                new MapColor(65, 192, 55),
                                new MapColor(159, 144, 188)]))],
                            6),
                    new TextPopupContent("officia expedita odit"),
                    new TextPopupContent("numquam sequi fugit")],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "comment",
                            "aliquam non nihil",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "status",
                            "aperiam dolorem autem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "token",
                            "est molestiae omnis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "email",
                            "saepe qui quo",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("aliquid aperiam quam",
                            "c30b5ac7-3143-bdb0-205d-57aeec34153b",
                            () => { Console.WriteLine("recusandae"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "excepturi"),
                    new ActionToggle("ut placeat eveniet",
                            "5fd628ec-7882-c451-6073-f2bd8b785240",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "dolorum"),
                    new ActionToggle("et quas est",
                            "cd90ac4a-be84-a3d9-45ea-962bc6a81d3a",
                            () => { Console.WriteLine("amet"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "deleniti")]),
                    new AttributesDictionary(),
                    true,
                    "sed",
                    "asperiores",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ducimus",
                        5)),
                3,
            default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "reiciendis",
                    "perspiciatis",
                    399.8254,
                    ["voluptatem",
                        "rerum",
                        "et"],
                    new DateTime(2016, 7, 13, 20, 58, 35),
                    "est",
                    "quam nesciunt porro quasi",
                new Extent(98.2960,
                        -96.7497,
                        60.7375,
                        21.8095,
                        219.8603,
                        578.7385,
                        555.3602,
                        442.4772,
                    new SpatialReference(3,
                            "voluptas",
                            "sed",
                            "exercitationem"),
                        true,
                        true),
                    ["enim",
                        "aut",
                        "commodi"],
                    "et",
                    new DateTime(2009, 10, 19, 17, 43, 17),
                    "comment",
                    543.3498);
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Graphic> testSource = [new Graphic(new Polygon([new MapPath([new MapPoint([913.1118,
                            524.4246]),
                        new MapPoint([662.0469,
                            36.7463])]),
                        new MapPath([new MapPoint([263.8150,
                                395.1182]),
                            new MapPoint([55.9782,
                                240.8694])]),
                        new MapPath([new MapPoint([342.6053,
                                960.9351,
                                676.1815]),
                            new MapPoint([397.0852,
                                339.8357,
                                927.0881]),
                            new MapPoint([559.6151,
                                901.9865,
                                391.8750]),
                            new MapPoint([367.1107,
                                569.5212,
                                429.4092])])],
                    new SpatialReference(8,
                            "ut",
                            "quisquam",
                            "est"),
                    new Point(-149.9888,
                            0.0681,
                            -108.3626,
                            70.9728,
                            754.8681,
                        new SpatialReference(3,
                                "id",
                                "voluptates",
                                "repudiandae"),
                            true,
                            true,
                            737.4027),
                        true,
                        true,
                        true),
                new TextSymbol("molestiae qui voluptate",
                    new MapColor(141, 90, 213),
                    new MapColor(138, 65, 159),
                        new Dimension(341.3016),
                    new MapFont(new Dimension(543.5713),
                            "Arial",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        965.8516,
                    new MapColor(157, 215, 53),
                    new MapColor(118, 120, 82),
                        865.4516,
                    HorizontalAlignment.Left,
                        true,
                        272.7452,
                        new Dimension(767.5119),
                        true),
                new PopupTemplate("vero pariatur facere",
                        "facere",
                        ["deserunt",
                            "est"],
                    [new FieldInfo("category",
                            "aut",
                            "ullam",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("createdAt",
                            "pariatur",
                            "rerum",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("createdAt",
                            "quis",
                            "sed",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new FieldsPopupContent([new FieldInfo("avatar",
                                "minima",
                                "nihil",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("updatedAt",
                                "quia",
                                "blanditiis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("status",
                                "eligendi",
                                "voluptatibus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                            "odit laboriosam et provident enim deserunt voluptas",
                            "occaecati distinctio aperiam")],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "updatedAt",
                            "delectus enim sit",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("laborum eligendi ut",
                            "https://picsum.photos/640/480/?image=128",
                            "16b4a1cb-20c8-a9d4-df83-d972c2283282",
                            () => { Console.WriteLine("minus"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "odit"),
                    new ActionToggle("vel omnis non",
                            "c894d193-891c-107c-28b4-a22591d484c7",
                            () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "sunt"),
                    new ActionToggle("non sunt non",
                            "646c9dda-1c44-fcc1-ca9f-9bfaeef85e04",
                            () => { Console.WriteLine("ducimus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "qui")]),
                    new AttributesDictionary(),
                    true,
                    "qui",
                    "labore",
                    new GraphicOrigin(Guid.NewGuid(),
                        "eum",
                        5)),
            new Graphic(new Polygon([new MapPath([new MapPoint([619.1218,
                            215.3555,
                            84.8006,
                            261.7815]),
                        new MapPoint([981.1319,
                            115.2430,
                            612.8596]),
                        new MapPoint([971.3408,
                            506.2061,
                            641.8514,
                            275.5585])]),
                        new MapPath([new MapPoint([685.7350,
                                664.2949,
                                831.5496]),
                            new MapPoint([703.3071,
                                79.9076,
                                292.6356,
                                184.3772]),
                            new MapPoint([842.4968,
                                742.5143,
                                476.3465]),
                            new MapPoint([6.8036,
                                661.0194,
                                549.9117,
                                618.2448])]),
                        new MapPath([new MapPoint([419.2583,
                                437.1685]),
                            new MapPoint([628.7457,
                                664.8701]),
                            new MapPoint([778.4926,
                                115.6188,
                                434.6162])])],
                    new SpatialReference(8,
                            "aut",
                            "qui",
                            "dicta"),
                    new Point(-92.7391,
                            -14.4677,
                            -126.7752,
                            -30.8641,
                            347.5532,
                        new SpatialReference(6,
                                "eum",
                                "dolorem",
                                "esse"),
                            true,
                            true,
                            30.0728),
                        true,
                        true,
                        true),
                new TextSymbol("non ipsam eos",
                    new MapColor(216, 127, 148),
                    new MapColor(107, 114, 65),
                        new Dimension(909.3454),
                    new MapFont(new Dimension(301.3625),
                            "Bookman",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        851.8579,
                    new MapColor(226, 226, 152),
                    new MapColor(187, 13, 235),
                        442.4179,
                    HorizontalAlignment.Left,
                        true,
                        567.7283,
                        new Dimension(936.6911),
                        true),
                new PopupTemplate("quis illum animi",
                        "quo",
                        ["et",
                            "eligendi",
                            "odit"],
                    [new FieldInfo("group",
                            "non",
                            "tempora",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new RelationshipPopupContent("modi ipsam nihil",
                            "assumenda dolorem dolores voluptatum maiores",
                            8,
                            "blanditiis",
                        [new RelatedRecordsInfoFieldOrder("voluptates",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("ducimus",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("qui",
                            OrderBy.Desc)],
                            1),
                    new MediaPopupContent("cumque maxime corporis",
                            "error architecto fugiat non numquam",
                        [new PieChartMediaInfo("sed reiciendis placeat",
                                "ut",
                                "nostrum animi sed",
                            new ChartMediaInfoValue(["fugit",
                                    "optio"],
                                    "eum",
                                    "est",
                                [new ChartMediaInfoValueSeries("phone",
                                        "molestiae",
                                        612.2973),
                                new ChartMediaInfoValueSeries("status",
                                        "illo",
                                        229.0452),
                                new ChartMediaInfoValueSeries("phone",
                                        "eveniet",
                                        978.6369)],
                                [new MapColor(216, 132, 103),
                                new MapColor(12, 9, 34),
                                new MapColor(109, 45, 248),
                                new MapColor(224, 154, 136)])),
                        new ImageMediaInfo("velit quaerat natus",
                                "minima",
                                "occaecati enim tenetur",
                            new ImageMediaInfoValue("https://antoinette.com",
                                    "https://misty.info"),
                                884.7324)],
                            4),
                    new AttachmentsPopupContent("similique architecto consequuntur",
                            "sapiente dicta dolorum ab aliquid et",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "updatedAt",
                            "voluptatem quia dignissimos",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "status",
                            "quos aspernatur sint",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "id",
                            "ea non temporibus",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("neque qui ullam",
                            "https://picsum.photos/640/480/?image=423",
                            "0ed3469e-6b4d-83da-5dd1-70e098dd573d",
                            () => { Console.WriteLine("eaque"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "autem")]),
                    new AttributesDictionary(),
                    true,
                    "architecto",
                    "architecto",
                    new GraphicOrigin(Guid.NewGuid(),
                        "non",
                        7)),
            new Graphic(new Point(-121.2862,
                        18.2901,
                        -76.5080,
                        39.3536,
                        472.2137,
                    new SpatialReference(1,
                            "ut",
                            "nihil",
                            "sint"),
                        true,
                        true,
                        785.2169),
                new TextSymbol("officiis est amet",
                    new MapColor(230, 222, 153),
                    new MapColor(65, 200, 201),
                        new Dimension(372.0259),
                    new MapFont(new Dimension(267.9746),
                            "Palatino",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        519.5003,
                    new MapColor(218, 249, 97),
                    new MapColor(226, 151, 121),
                        92.5285,
                    HorizontalAlignment.Center,
                        true,
                        71.6928,
                        new Dimension(393.2752),
                        true),
                new PopupTemplate("soluta nesciunt quidem",
                        "possimus",
                        ["accusamus",
                            "doloribus",
                            "qui",
                            "sapiente"],
                    [new FieldInfo("title",
                            "quae",
                            "sequi",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new FieldsPopupContent([new FieldInfo("avatar",
                                "debitis",
                                "ullam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("category",
                                "est",
                                "quaerat",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("comment",
                                "ut",
                                "aspernatur",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                            "magnam voluptas est qui totam velit sequi",
                            "consequatur recusandae repellat")],
                    [new ExpressionInfo("return Date();",
                            "category",
                            "veniam illo voluptate",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "email",
                            "sit asperiores voluptatibus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "comment",
                            "rem consequatur voluptatum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "password",
                            "est commodi porro",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("numquam aut tenetur",
                            "16c93361-1b92-f606-51d3-bf371b9b89a5",
                            () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "nostrum"),
                    new ActionToggle("voluptas eum omnis",
                            "df2da5fa-a7e8-eaec-8924-e526f99c5ca6",
                            () => { Console.WriteLine("sequi"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "molestias")]),
                    new AttributesDictionary(),
                    true,
                    "iste",
                    "qui",
                    new GraphicOrigin(Guid.NewGuid(),
                        "dolores",
                        6))];
        await featureLayer.SetSource(testSource);
        var source = await featureLayer.GetSource();
        Assert.AreEqual(testSource, source);
        ListMode testListMode = ListMode.Show;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("suscipit amet repellendus",
                    "et",
                    ["voluptatibus",
                        "ut",
                        "cumque"],
                [new FieldInfo("comment",
                        "vel",
                        "nobis",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(5,
                            true,
                        DateFormat.ShortDateLe),
                        true,
                        true,
                    StatisticType.Max),
                new FieldInfo("password",
                        "qui",
                        "non",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.LongDate),
                        true,
                        true,
                    StatisticType.Var)],
                [new RelationshipPopupContent("quisquam quas eos",
                        "dolor ut fugit sunt earum aut",
                        4,
                        "dignissimos",
                    [new RelatedRecordsInfoFieldOrder("id",
                        OrderBy.Desc)],
                        3)],
                [new ExpressionInfo("return $feature.Name;",
                        "group",
                        "ratione debitis tempore",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "title",
                        "et sit consequatur",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "group",
                        "atque voluptatem sit",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "group",
                        "iste est ab",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("illo omnis adipisci",
                        "072fdcb3-a803-3873-c1bc-dcd3f2ce51ad",
                        () => { Console.WriteLine("tempore"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "comment",
                        "beatae"),
                new ActionButton("pariatur rerum ipsum",
                        "https://picsum.photos/640/480/?image=1079",
                        "694c6260-4b0a-5456-8b28-bd5d0ec78104",
                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                        "updatedAt",
                        true,
                        true,
                        true,
                        "itaque")]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.Plus;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Layer testDynamicDataSource = new CSVLayer("https://developers.arcgis.com/javascript/latest//sample-code/layers-csv/live/earthquakes.csv",
                    "modi quia hic",
                    "veniam",
                    0.9478,
                    true,
                ListMode.Hide,
                BlendMode.Minus,
                new PopupTemplate("dolorem illum dolor",
                        "laborum",
                        ["eligendi",
                            "unde",
                            "possimus",
                            "beatae"],
                    [new FieldInfo("phone",
                            "qui",
                            "id",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new FieldsPopupContent([new FieldInfo("updatedAt",
                                "nihil",
                                "illo",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("status",
                                "facere",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("id",
                                "aut",
                                "velit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("updatedAt",
                                "sed",
                                "unde",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                            "ut dolor rem numquam voluptates atque consequatur",
                            "ullam voluptates voluptas"),
                    new TextPopupContent("voluptas voluptatem eos")],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "name",
                            "accusamus nostrum iusto",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "title",
                            "reiciendis commodi eum",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("labore quia rerum",
                            "ef045b8d-23eb-e478-70ee-b588305d4083",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "harum")]),
                    default,
                    "reprehenderit",
                    CSVDelimiter.Semicolon,
                    "libero",
                    new Effect("blanditiis",
                        16230692.7148),
                new CSVLayerElevationInfo(new CSVLayerElevationInfoFeatureExpressionInfo("return $feature.Name;",
                            "ea vitae tenetur"),
                    ElevationInfoMode.RelativeToGround,
                        959.8048,
                    ElevationUnit.Yards));
        await featureLayer.SetDynamicDataSource(testDynamicDataSource);
        var dynamicDataSource = await featureLayer.GetDynamicDataSource();
        Assert.AreEqual(testDynamicDataSource, dynamicDataSource);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "mollitia sint deserunt"),
                ElevationInfoMode.OnTheGround,
                    765.9473,
                ElevationUnit.Millimeters);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("aspernatur",
                    25416368.7645),
                    new Effect("tenetur",
                        46765277.1456),
                    new Effect("assumenda",
                        41168407.3548),
                    new Effect("ducimus",
                        31189224.3487)],
                    true,
                new FeatureFilter(859.5543,
                    new Polyline([new MapPath([new MapPoint([352.3064,
                                182.6060,
                                145.9832]),
                            new MapPoint([473.2887,
                                756.8963,
                                322.3022]),
                            new MapPoint([447.4187,
                                529.2688,
                                843.1385,
                                996.8136])]),
                            new MapPath([new MapPoint([674.6256,
                                    887.3533,
                                    879.0289]),
                                new MapPoint([322.7481,
                                    886.8637,
                                    459.2854]),
                                new MapPoint([14.5515,
                                    917.0330,
                                    509.1132,
                                    501.3420]),
                                new MapPoint([308.4307,
                                    597.2442,
                                    451.5007])])],
                        new SpatialReference(8,
                                "mollitia",
                                "excepturi",
                                "incidunt"),
                            true,
                            true),
                        [6,
                            6,
                            7],
                    SpatialRelationship.Overlaps,
                    new TimeExtent(new DateTime(2016, 4, 7, 9, 15, 46),
                            new DateTime(2004, 9, 20, 18, 6, 45)),
                        QueryUnits.NauticalMiles,
                        "Province = 'Ontario'"),
                    [new Effect("aut",
                        39386590.9611),
                        new Effect("quia",
                            44132006.0836),
                        new Effect("quaerat",
                            18963860.6689),
                        new Effect("amet",
                            34444926.2973)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "password",
                    "rerum",
                    "libero nemo deserunt voluptas voluptas",
                    2,
                    true,
                    true,
                    new { Value = "repellat" },
                FieldValueType.Measurement,
                new InheritedDomain("group")),
            new Field(default,
                    "group",
                    "occaecati",
                    "et perspiciatis molestiae officia nam eius voluptatum",
                    3,
                    true,
                    true,
                    new { Value = "et" },
                FieldValueType.DateAndTime,
                new RangeDomain("sit",
                        "nobis",
                        "token")),
            new Field(default,
                    "name",
                    "quidem",
                    "quia non repellat architecto et",
                    4,
                    true,
                    true,
                    new { Value = "quia" },
                FieldValueType.UniqueIdentifier,
                new RangeDomain("possimus",
                        "qui",
                        "name")),
            new Field(default,
                    "comment",
                    "eligendi",
                    "voluptatem voluptate architecto natus",
                    2,
                    true,
                    true,
                    new { Value = "perspiciatis" },
                FieldValueType.TypeOrCategory,
                new InheritedDomain("id"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("doloribus");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("maxime velit in",
                    "voluptatem qui omnis non maxime molestiae",
                    true,
                    [new FieldElement("comment",
                        "quidem",
                        "consequuntur explicabo quae veritatis accusamus sit",
                        "facilis",
                        "ea",
                        "atque",
                        "porro",
                        new CodedValueDomain<string>(),
                        new BarcodeScannerInput()),
                        new FieldElement("id",
                            "explicabo",
                            "mollitia et officiis voluptas aspernatur",
                            "aut",
                            "praesentium",
                            "porro",
                            "dignissimos",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput()),
                        new FieldElement("id",
                            "voluptatem",
                            "accusamus natus quod mollitia facilis",
                            "dolorum",
                            "quo",
                            "voluptates",
                            "hic",
                            new CodedValueDomain<string>(),
                            new BarcodeScannerInput())],
                [new ExpressionInfo("return $feature.Name;",
                        "avatar",
                        "aut qui est",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature['FieldName'];",
                        "email",
                        "facilis eos amet",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return Date();",
                        "title",
                        "a sunt ab",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "comment",
                        "maiores voluptatem nihil",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(-37.5852,
                    22.2062,
                    27.5105,
                    73.9730,
                    709.8876,
                    37.5695,
                    604.6865,
                    664.7091,
                new SpatialReference(4,
                        "voluptatibus",
                        "vel",
                        "ad"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveCenter,
                    "tempora",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    40384247.6043,
                    2506.6930,
                    true,
                    new Dimension(310.7639),
                new TextSymbol("ducimus et eum",
                    new MapColor(45, 41, 248),
                    new MapColor(150, 132, 92),
                        new Dimension(31.6197),
                    new MapFont(new Dimension(639.3301),
                            "Palatino",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        674.6962,
                    new MapColor(44, 147, 222),
                    new MapColor(35, 117, 154),
                        657.0135,
                    HorizontalAlignment.Right,
                        true,
                        92.6826,
                        new Dimension(807.9150),
                        true),
                    true,
                    "Street = '123 Main St.'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("commodi",
                SortOrder.Descending,
                    "et"),
            new OrderedLayerOrderBy("ratione",
                SortOrder.Descending,
                    "ab")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("ut ullam modi",
                    new MapColor(25, 148, 146),
                    new MapColor(86, 23, 191),
                        new Dimension(662.9704),
                    new MapFont(new Dimension(246.4167),
                            "Garamond",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        945.1721,
                    new MapColor(243, 249, 107),
                    new MapColor(252, 196, 86),
                        724.7567,
                    HorizontalAlignment.Left,
                        true,
                        543.6040,
                        new Dimension(30.6371),
                        true),
                    "porro",
                [new RotationVariable("laudantium",
                    Axis.Tilt,
                    RotationType.Geographic,
                    new VisualVariableLegendOptions(true,
                            "voluptates nobis fugit"),
                        "cupiditate",
                        "eius nemo omnis"),
                new OpacityVariable("architecto",
                        "tempore",
                    [new OpacityStop(792.9270,
                            0.8575,
                            "enim"),
                    new OpacityStop(770.8929,
                            0.1085,
                            "accusantium"),
                    new OpacityStop(715.1823,
                            0.5108,
                            "consectetur")],
                    new VisualVariableLegendOptions(true,
                            "et ipsam labore"),
                        "dolor",
                        "quaerat ut blanditiis")],
                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                    new AlgorithmicColorRamp(Algorithm.CieLab,
                        new MapColor(218, 71, 76),
                        new MapColor(183, 41, 167)),
                        212.8519,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(339.0001,
                                461.1963)],
                            "dolores",
                            "quis",
                            "maiores"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(224.4268,
                                461.8217),
                        new AuthoringInfoField1ClassBreakInfos(527.7669,
                                238.8513)],
                            "magnam",
                            "vero",
                            "repellendus"),
                        ["consectetur",
                            "hic",
                            "exercitationem"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "aperiam",
                        true,
                    LengthUnit.Centimeters,
                        206.7303,
                        656.7466,
                        86.9390,
                        39.6318));
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(2,
                    "non",
                    "in",
                    "quam");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("autem rerum rerum modi occaecati",
                DrawingTool.Polygon,
                    "createdAt",
                new Graphic(new Point(5.6289,
                            -79.6220,
                            10.7661,
                            2.9480,
                            498.2070,
                        new SpatialReference(2,
                                "exercitationem",
                                "quia",
                                "excepturi"),
                            true,
                            true,
                            176.4744),
                    new TextSymbol("consequatur illo asperiores",
                        new MapColor(254, 146, 198),
                        new MapColor(42, 20, 243),
                            new Dimension(141.2924),
                        new MapFont(new Dimension(98.3070),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            171.7909,
                        new MapColor(23, 167, 226),
                        new MapColor(166, 65, 122),
                            988.8814,
                        HorizontalAlignment.Right,
                            true,
                            783.2673,
                            new Dimension(727.8144),
                            true),
                    new PopupTemplate("et voluptatem libero",
                            "odio",
                            ["atque",
                                "qui",
                                "veritatis",
                                "nesciunt"],
                        [new FieldInfo("status",
                                "repudiandae",
                                "dolorem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("id",
                                "officia",
                                "eum",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("password",
                                "nulla",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new MediaPopupContent("consequatur fuga nemo",
                                "exercitationem vitae aut dolorem",
                            [new PieChartMediaInfo("accusamus fugit voluptatem",
                                    "eos",
                                    "voluptatem non dolorem",
                                new ChartMediaInfoValue(["dolorem",
                                        "inventore",
                                        "sed",
                                        "et"],
                                        "error",
                                        "et",
                                    [new ChartMediaInfoValueSeries("category",
                                            "est",
                                            592.1325),
                                    new ChartMediaInfoValueSeries("group",
                                            "dignissimos",
                                            77.4543),
                                    new ChartMediaInfoValueSeries("category",
                                            "rerum",
                                            355.1636),
                                    new ChartMediaInfoValueSeries("category",
                                            "blanditiis",
                                            638.9711)],
                                    [new MapColor(208, 161, 58),
                                    new MapColor(134, 120, 137)])),
                            new BarChartMediaInfo("placeat tempore id",
                                    "nostrum",
                                    "modi ipsum iusto",
                                new ChartMediaInfoValue(["sunt",
                                        "dolorem"],
                                        "exercitationem",
                                        "accusamus",
                                    [new ChartMediaInfoValueSeries("id",
                                            "impedit",
                                            338.5217),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "ut",
                                            164.9823),
                                    new ChartMediaInfoValueSeries("title",
                                            "error",
                                            812.4794),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "voluptas",
                                            810.6406)],
                                    [new MapColor(52, 211, 204)])),
                            new ImageMediaInfo("molestiae et porro",
                                    "dolores",
                                    "recusandae nihil nobis",
                                new ImageMediaInfoValue("http://vincenzo.biz",
                                        "http://roel.com"),
                                    272.6819),
                            new BarChartMediaInfo("vero doloribus maiores",
                                    "necessitatibus",
                                    "eveniet quas tenetur",
                                new ChartMediaInfoValue(["in",
                                        "impedit"],
                                        "accusantium",
                                        "amet",
                                    [new ChartMediaInfoValueSeries("avatar",
                                            "laudantium",
                                            143.4257)],
                                    [new MapColor(156, 249, 27),
                                    new MapColor(35, 109, 108)]))],
                                5)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "password",
                                "mollitia consectetur et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "status",
                                "nihil sint quibusdam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "avatar",
                                "quia quaerat blanditiis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("non voluptatum qui",
                                "038df067-cc2e-abb7-d5d0-126d30049185",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "praesentium"),
                        new ActionToggle("natus cum soluta",
                                "1540150a-c4e6-a6ba-8381-9b29a0b0038f",
                                () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "eos"),
                        new ActionButton("modi sapiente eum",
                                "https://picsum.photos/640/480/?image=84",
                                "df374858-8516-7037-b75d-16ed960b16a8",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "aut"),
                        new ActionToggle("eos perferendis optio",
                                "2b2343c4-5340-0586-5390-e50cbd2cd095",
                                () => { Console.WriteLine("nostrum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "dicta")]),
                        new AttributesDictionary(),
                        true,
                        "fugiat",
                        "voluptatem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "animi",
                            5)),
                    new Thumbnail("nesciunt",
                        "deleniti",
                        235.4317,
                        43.4096))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2016, 11, 14, 4, 45, 35),
                    new DateTime(2009, 9, 12, 5, 6, 46));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("aut",
                    "quam",
                new TimeExtent(new DateTime(2012, 11, 21, 14, 24, 30),
                        new DateTime(2004, 2, 15, 22, 17, 44)),
                new TimeInterval(TemporalTime.Decades,
                        388.4666),
                    [new DateTime(2019, 5, 6, 2, 0, 46),
                        new DateTime(2021, 8, 19, 20, 33, 40),
                        new DateTime(2022, 5, 23, 11, 13, 40)],
                    "Africa/Algiers",
                    "omnis");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    433.7130);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("c1ce450e-1599-a068-7fd2-3488dc64d826",
                    "updatedAt",
                [new FeatureTemplate("deserunt iste possimus nihil laudantium",
                    DrawingTool.Polygon,
                        "comment",
                    new Graphic(new Polyline([new MapPath([new MapPoint([380.4207,
                                    324.3494,
                                    166.8215,
                                    604.0876]),
                                new MapPoint([849.6223,
                                    271.7796]),
                                new MapPoint([387.2508,
                                    218.2922,
                                    347.2181,
                                    700.4775])]),
                                new MapPath([new MapPoint([627.9082,
                                        854.4936]),
                                    new MapPoint([627.2212,
                                        681.8493,
                                        676.3844,
                                        97.3432])]),
                                new MapPath([new MapPoint([781.3553,
                                        896.3474,
                                        632.0497,
                                        453.2811]),
                                    new MapPoint([567.7658,
                                        722.5750,
                                        865.9775,
                                        236.8182])]),
                                new MapPath([new MapPoint([356.1962,
                                        926.9005,
                                        764.6258,
                                        662.7823]),
                                    new MapPoint([529.9211,
                                        576.9427]),
                                    new MapPoint([456.3449,
                                        434.3639,
                                        513.0612,
                                        522.6562]),
                                    new MapPoint([84.7850,
                                        797.7897,
                                        89.2453])])],
                            new SpatialReference(1,
                                    "deserunt",
                                    "et",
                                    "sed"),
                                true,
                                true),
                        new TextSymbol("alias officiis debitis",
                            new MapColor(90, 163, 55),
                            new MapColor(55, 184, 238),
                                new Dimension(655.1295),
                            new MapFont(new Dimension(229.1160),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.None),
                                198.8980,
                            new MapColor(231, 230, 234),
                            new MapColor(47, 85, 178),
                                468.6633,
                            HorizontalAlignment.Right,
                                true,
                                249.4477,
                                new Dimension(119.0174),
                                true),
                        new PopupTemplate("deleniti animi voluptas",
                                "vel",
                                ["et",
                                    "dicta",
                                    "quidem"],
                            [new FieldInfo("title",
                                    "omnis",
                                    "tempore",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("category",
                                    "sit",
                                    "nostrum",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("comment",
                                    "non",
                                    "dolor",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                            [new MediaPopupContent("et aut quibusdam",
                                    "et eum ex aut aut culpa",
                                [new BarChartMediaInfo("ut eveniet ad",
                                        "voluptas",
                                        "quas quisquam dolores",
                                    new ChartMediaInfoValue(["totam",
                                            "facere"],
                                            "beatae",
                                            "omnis",
                                        [new ChartMediaInfoValueSeries("comment",
                                                "aut",
                                                543.0842)],
                                        [new MapColor(94, 55, 96)])),
                                new ColumnChartMediaInfo("fugiat eos similique",
                                        "voluptatem",
                                        "odio voluptas facilis",
                                    new ChartMediaInfoValue(["debitis",
                                            "sint"],
                                            "consequatur",
                                            "error",
                                        [new ChartMediaInfoValueSeries("comment",
                                                "doloribus",
                                                104.1678),
                                        new ChartMediaInfoValueSeries("title",
                                                "fugit",
                                                395.9439)],
                                        [new MapColor(163, 21, 15),
                                        new MapColor(247, 8, 56)]))],
                                    6),
                            new MediaPopupContent("reiciendis tenetur rerum",
                                    "rerum sint recusandae ex",
                                [new BarChartMediaInfo("alias modi rerum",
                                        "deserunt",
                                        "minus vel ut",
                                    new ChartMediaInfoValue(["ipsa",
                                            "ipsum",
                                            "aut",
                                            "sit"],
                                            "harum",
                                            "sint",
                                        [new ChartMediaInfoValueSeries("createdAt",
                                                "porro",
                                                40.6988),
                                        new ChartMediaInfoValueSeries("category",
                                                "magnam",
                                                287.8425),
                                        new ChartMediaInfoValueSeries("id",
                                                "neque",
                                                563.4149)],
                                        [new MapColor(29, 48, 194)])),
                                new ColumnChartMediaInfo("iure adipisci eum",
                                        "sapiente",
                                        "officia neque fugiat",
                                    new ChartMediaInfoValue(["debitis",
                                            "asperiores",
                                            "aut"],
                                            "consequatur",
                                            "vel",
                                        [new ChartMediaInfoValueSeries("email",
                                                "laudantium",
                                                409.8527),
                                        new ChartMediaInfoValueSeries("createdAt",
                                                "aut",
                                                881.0215),
                                        new ChartMediaInfoValueSeries("id",
                                                "voluptatem",
                                                224.6515)],
                                        [new MapColor(183, 91, 20),
                                        new MapColor(39, 212, 71)]))],
                                    1)],
                            [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "token",
                                    "ad commodi officiis",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "email",
                                    "mollitia inventore eveniet",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("assumenda exercitationem rerum",
                                    "22d4691c-3899-ef59-e05b-bf65d20d3b6b",
                                    () => { Console.WriteLine("accusamus"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "quo")]),
                            new AttributesDictionary(),
                            true,
                            "asperiores",
                            "accusantium",
                            new GraphicOrigin(Guid.NewGuid(),
                                "temporibus",
                                3)),
                        new Thumbnail("quam",
                            "molestiae",
                            123.0265,
                            258.9702))],
                new Dictionary<string, Domain>() {{ "quae", new InheritedDomain("avatar") },
                { "nihil", new InheritedDomain("title") },
                { "quae", new InheritedDomain("comment") },
                { "voluptatem", new RangeDomain("beatae",
        "sit",
        "updatedAt") }
                },
                    "illo")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2003, 9, 4, 9, 3, 27),
                    new DateTime(2022, 3, 3, 1, 56, 37));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
