@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")"
                        OutFields="@(["et",
                            "optio",
                            "architecto"])"
                        DefinitionExpression="@("aut")"
                        MinScale="@(27967.1876)"
                        MaxScale="@(30389605.9536)"
                        ObjectIdField="@("minima")"
                        Title="@("dolore ut adipisci")"
                        Opacity="@(0.8999)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        ApiKey="@("maxime")"
                        BlendMode="@(BlendMode.VividLight)"
                        Charts="@(["quasi",
                            "omnis",
                            "quisquam",
                            "accusamus"])"
                        Copyright="@("qui")"
                        DateFieldsTimeZone="@("dolores")"
                        DisplayField="@("quos")"
                        EditingEnabled="@(true)"
                        FullExtent="@(new Extent(-2.4761,
                                -50.1942,
                                -45.8441,
                                -46.0938,
                                144.5925,
                                814.2466,
                                655.4035,
                                681.1219,
                            new SpatialReference(9,
                                    "aut",
                                    "laborum",
                                    "et"),
                                true,
                                true))"
                        GdbVersion="@("6.7.7.5")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2019, 9, 12, 20, 52, 27))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(807.2383)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        SpatialReference="@(new SpatialReference(1,
                                "explicabo",
                                "eos",
                                "et"))"
                        TypeIdField="@("voluptatibus")"
                        Types="@([new FeatureType("47a88eba-ebf3-93ae-828f-f52d79b24c2f",
                                "id",
                            [new FeatureTemplate("saepe velit possimus provident et fugit praesentium",
                                DrawingTool.UpArrow,
                                    "comment",
                                new Graphic(new Point(-118.1917,
                                            -68.3100,
                                            88.4356,
                                            25.3816,
                                            770.1335,
                                        new SpatialReference(5,
                                                "aut",
                                                "aliquid",
                                                "sunt"),
                                            true,
                                            true,
                                            580.8477),
,
                                    new PopupTemplate("dolore deleniti aliquid",
                                            "a",
                                            ["delectus",
                                                "rerum"],
                                        [new FieldInfo("title",
                                                "et",
                                                "atque",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("createdAt",
                                                "illum",
                                                "dolor",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("id",
                                                "cupiditate",
                                                "ea",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.DayShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("phone",
                                                "ut",
                                                "sit",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.ShortDateLe),
                                                true,
                                                true,
                                            StatisticType.Sum)],
                                        [,
,
],
                                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "comment",
                                                "commodi dolorem quae",
                                                default),
                                        new ExpressionInfo("return $feature.Name;",
                                                "name",
                                                "eveniet nobis dolores",
                                                default),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "category",
                                                "sint fuga cumque",
                                                default),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "comment",
                                                "iure odio reiciendis",
                                                default)],
                                            true,
                                            true,
                                        [,
,
]),
                                        default,
                                        true,
                                        "qui",
                                        "nihil",
                                        default),
                                    default)],
                            new Dictionary<string, Domain>() {{ "quos",  },
                            { "dolor",  },
                            { "ad",  },
                            { "doloremque",  }
                            },
                                "rerum"),
                        new FeatureType("8804c48d-9782-09dc-8432-f942342fb7d5",
                                "status",
                            [new FeatureTemplate("suscipit at et hic blanditiis expedita officiis",
                                DrawingTool.LeftArrow,
                                    "token",
                                new Graphic(new Point(125.3589,
                                            -47.7760,
                                            -65.8167,
                                            -47.7096,
                                            53.8578,
                                        new SpatialReference(3,
                                                "nihil",
                                                "consequatur",
                                                "magni"),
                                            true,
                                            true,
                                            714.4996),
,
                                    new PopupTemplate("rerum possimus quaerat",
                                            "aut",
                                            ["sed",
                                                "reprehenderit"],
                                        [new FieldInfo("category",
                                                "dolores",
                                                "accusamus",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("status",
                                                "molestias",
                                                "vitae",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.DayShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("comment",
                                                "est",
                                                "non",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                        [,
],
                                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "name",
                                                "voluptas odio ipsa",
                                                default),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "phone",
                                                "mollitia molestiae saepe",
                                                default),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "category",
                                                "aut ea repellat",
                                                default),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "password",
                                                "aliquid qui repellendus",
                                                default)],
                                            true,
                                            true,
                                        [,
,
,
]),
                                        default,
                                        true,
                                        "et",
                                        "natus",
                                        default),
                                    default),
                            new FeatureTemplate("minima voluptate eligendi dolor quam quo",
                                DrawingTool.None,
                                    "password",
                                new Graphic(new Point(44.8830,
                                            30.9949,
                                            39.0205,
                                            21.7560,
                                            616.8235,
                                        new SpatialReference(5,
                                                "labore",
                                                "unde",
                                                "vitae"),
                                            true,
                                            true,
                                            414.4414),
,
                                    new PopupTemplate("explicabo sequi est",
                                            "sint",
                                            ["aut",
                                                "sit",
                                                "blanditiis"],
                                        [new FieldInfo("name",
                                                "facere",
                                                "et",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("comment",
                                                "voluptatum",
                                                "aut",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("title",
                                                "placeat",
                                                "adipisci",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("email",
                                                "non",
                                                "corrupti",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.ShortDateLeLongTime),
                                                true,
                                                true,
                                            StatisticType.Min)],
                                        [,
,
,
],
                                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "email",
                                                "facere consectetur unde",
                                                default)],
                                            true,
                                            true,
                                        [,
,
]),
                                        default,
                                        true,
                                        "quo",
                                        "et",
                                        default),
                                    default),
                            new FeatureTemplate("et distinctio expedita fugiat et rerum facilis",
                                DrawingTool.Arrow,
                                    "name",
                                new Graphic(new Point(-172.8113,
                                            -78.3074,
                                            132.5221,
                                            -47.7124,
                                            255.4144,
                                        new SpatialReference(8,
                                                "et",
                                                "illum",
                                                "ipsam"),
                                            true,
                                            true,
                                            64.4318),
,
                                    new PopupTemplate("voluptas qui numquam",
                                            "enim",
                                            ["beatae",
                                                "et"],
                                        [new FieldInfo("avatar",
                                                "nemo",
                                                "sequi",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("status",
                                                "dolores",
                                                "quis",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("phone",
                                                "libero",
                                                "iste",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Min)],
                                        [,
],
                                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "status",
                                                "aliquam ab maxime",
                                                default)],
                                            true,
                                            true,
                                        [,
,
]),
                                        default,
                                        true,
                                        "hic",
                                        "pariatur",
                                        default),
                                    default)],
                            new Dictionary<string, Domain>() {{ "ab",  },
                            { "et",  },
                            { "dolor",  }
                            },
                                "quia"),
                        new FeatureType("91049518-64ad-35a7-8cbb-d04657473768",
                                "avatar",
                            [new FeatureTemplate("et rerum ut omnis dolorem",
                                DrawingTool.RightArrow,
                                    "token",
                                new Graphic(new Point(137.5525,
                                            48.5060,
                                            17.8795,
                                            -74.8367,
                                            938.9688,
                                        new SpatialReference(6,
                                                "hic",
                                                "ut",
                                                "autem"),
                                            true,
                                            true,
                                            210.5856),
,
                                    new PopupTemplate("animi magni quaerat",
                                            "fugiat",
                                            ["est",
                                                "quas"],
                                        [new FieldInfo("status",
                                                "facere",
                                                "consequatur",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.LongDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("group",
                                                "iusto",
                                                "et",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Min)],
                                        [,
,
,
],
                                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "createdAt",
                                                "ab est temporibus",
                                                default),
                                        new ExpressionInfo("return Date();",
                                                "id",
                                                "consectetur amet incidunt",
                                                default)],
                                            true,
                                            true,
                                        [,
,
]),
                                        default,
                                        true,
                                        "et",
                                        "molestiae",
                                        default),
                                    default)],
                            new Dictionary<string, Domain>() {{ "laboriosam",  },
                            { "qui",  },
                            { "laudantium",  }
                            },
                                "maxime"),
                        new FeatureType("bbc6bb30-d19b-5c07-f1bb-53e18794d038",
                                "title",
                            [new FeatureTemplate("voluptatem cupiditate et earum ab",
                                DrawingTool.Arrow,
                                    "group",
                                new Graphic(new Point(-171.0875,
                                            72.4763,
                                            -80.8627,
                                            -1.2201,
                                            951.9440,
                                        new SpatialReference(8,
                                                "aut",
                                                "molestias",
                                                "excepturi"),
                                            true,
                                            true,
                                            504.0684),
,
                                    new PopupTemplate("dolore reiciendis inventore",
                                            "provident",
                                            ["dolorem",
                                                "qui"],
                                        [new FieldInfo("name",
                                                "voluptas",
                                                "animi",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("avatar",
                                                "necessitatibus",
                                                "aut",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("email",
                                                "iste",
                                                "mollitia",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("title",
                                                "et",
                                                "necessitatibus",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongDate),
                                                true,
                                                true,
                                            StatisticType.Avg)],
                                        [,
,
,
],
                                        [new ExpressionInfo("return $feature['FieldName'];",
                                                "email",
                                                "minus aspernatur maxime",
                                                default),
                                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "category",
                                                "atque provident ut",
                                                default),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "token",
                                                "eos ullam sequi",
                                                default)],
                                            true,
                                            true,
                                        [,
,
]),
                                        default,
                                        true,
                                        "rerum",
                                        "natus",
                                        default),
                                    default),
                            new FeatureTemplate("qui aut nostrum quod et exercitationem cupiditate",
                                DrawingTool.Triangle,
                                    "createdAt",
                                new Graphic(new Point(-172.2722,
                                            -32.3824,
                                            -10.6055,
                                            46.8165,
                                            640.5789,
                                        new SpatialReference(1,
                                                "quia",
                                                "aliquid",
                                                "possimus"),
                                            true,
                                            true,
                                            346.1529),
,
                                    new PopupTemplate("deserunt quia blanditiis",
                                            "in",
                                            ["minima",
                                                "natus",
                                                "enim",
                                                "alias"],
                                        [new FieldInfo("comment",
                                                "nobis",
                                                "id",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("password",
                                                "et",
                                                "et",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum)],
                                        [,
,
,
],
                                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "comment",
                                                "amet est nostrum",
                                                default),
                                        new ExpressionInfo("return $feature.Name;",
                                                "phone",
                                                "animi quidem quibusdam",
                                                default),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "title",
                                                "eaque deleniti distinctio",
                                                default)],
                                            true,
                                            true,
                                        [,
]),
                                        default,
                                        true,
                                        "aut",
                                        "id",
                                        default),
                                    default),
                            new FeatureTemplate("quo fugit culpa omnis in",
                                DrawingTool.Polygon,
                                    "comment",
                                new Graphic(new Point(-30.5888,
                                            24.2547,
                                            -154.9185,
                                            -82.6534,
                                            581.1388,
                                        new SpatialReference(3,
                                                "quasi",
                                                "quia",
                                                "voluptatem"),
                                            true,
                                            true,
                                            788.3241),
,
                                    new PopupTemplate("mollitia cumque cupiditate",
                                            "nostrum",
                                            ["ipsam",
                                                "ut"],
                                        [new FieldInfo("avatar",
                                                "est",
                                                "iusto",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDate),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("phone",
                                                "illo",
                                                "totam",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                        [],
                                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "updatedAt",
                                                "veritatis voluptatem harum",
                                                default)],
                                            true,
                                            true,
                                        [,
]),
                                        default,
                                        true,
                                        "vero",
                                        "ipsum",
                                        default),
                                    default)],
                            new Dictionary<string, Domain>() {{ "maxime",  }
                            },
                                "ullam")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Decades)"
                            Value="@(752.9655)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("sapiente")"
                            EndField="@("saepe")"
                            Stops="@([new DateTime(2005, 11, 22, 10, 41, 52),
                                new DateTime(2020, 6, 12, 4, 55, 16),
                                new DateTime(2011, 3, 10, 3, 33, 22),
                                new DateTime(2012, 7, 27, 10, 31, 16)])"
                            TimeZone="@("Asia/Karachi")"
                            TrackIdField="@("modi")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Milliseconds)"
                                Value="@(945.2382)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2014, 1, 23, 13, 58, 18))"
                                End="@(new DateTime(2011, 9, 26, 14, 42, 57))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2001, 2, 26, 0, 27, 14))"
                            End="@(new DateTime(2012, 4, 24, 7, 45, 48))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("nulla culpa corporis voluptate et ut enim")"
                            DrawingTool="@(DrawingTool.UpArrow)"
                            Name="@("name")"
>
                            <Graphic 
                                Geometry="@(new Point(-150.2039,
                                        19.4551,
                                        -66.0079,
                                        -76.0863,
                                        940.7582,
                                    new SpatialReference(9,
                                            "quidem",
                                            "labore",
                                            "quae"),
                                        true,
                                        true,
                                        440.2904))"
                                PopupTemplate="@(new PopupTemplate("tempora sed odit",
                                        "quia",
                                        ["unde",
                                            "occaecati",
                                            "laboriosam"],
                                    [new FieldInfo("password",
                                            "itaque",
                                            "praesentium",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("phone",
                                            "eaque",
                                            "eos",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                    [],
                                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "createdAt",
                                            "sed dignissimos ducimus",
                                            default),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "status",
                                            "cupiditate voluptas sequi",
                                            default),
                                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "token",
                                            "ducimus ut quod",
                                            default)],
                                        true,
                                        true,
                                    [,
]))"
                                Visible="@(true)"
                                LegendLabel="@("dolorem")"
                                AggregateGeometries="@("labore")"
>
                            </Graphic>
                        </FeatureTemplate>
                        <Graphic 
                            Geometry="@(new Extent(33.6537,
                                    -5.2388,
                                    -72.7890,
                                    56.0982,
                                    187.8575,
                                    694.1277,
                                    8.4256,
                                    75.2132,
                                new SpatialReference(8,
                                        "et",
                                        "ullam",
                                        "et"),
                                    true,
                                    true))"
                            Visible="@(true)"
                            LegendLabel="@("et")"
                            AggregateGeometries="@("blanditiis")"
>
                            <PopupTemplate 
                                Title="@("modi minima qui")"
                                StringContent="@("facere")"
                                OutFields="@(["repellendus",
                                    "reiciendis",
                                    "iusto",
                                    "maiores"])"
                                FieldInfos="@([new FieldInfo("title",
                                        "esse",
                                        "qui",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateLeLongTime24),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("group",
                                        "eum",
                                        "sit",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Stddev)])"
                                Content="@([,
,
,
])"
                                ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                        "token",
                                        "deleniti cum aut",
                                        default),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "password",
                                        "impedit laboriosam qui",
                                        default),
                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "name",
                                        "neque earum esse",
                                        default),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "title",
                                        "ut ullam qui",
                                        default)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([,
])">
                            </PopupTemplate>
                        </Graphic>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("nihil repudiandae nobis")"
                            StringContent="@("voluptas")"
                            OutFields="@(["distinctio",
                                "possimus",
                                "pariatur"])"
                            FieldInfos="@([new FieldInfo("status",
                                    "est",
                                    "ut",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("avatar",
                                    "eum",
                                    "commodi",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Max)])"
                            Content="@([,
,
])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "comment",
                                    "est aut cum",
                                    default),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "title",
                                    "atque tempore ea",
                                    default),
                            new ExpressionInfo("return $feature.Name;",
                                    "comment",
                                    "ea voluptas incidunt",
                                    default)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("eos")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("repudiandae")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowStart)"
                            LabelExpression="@("dignissimos")"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(11242301.9004)"
                            MinScale="@(34942.0739)"
                            RepeatLabel="@(true)"
                            UseCodedValues="@(true)"
                            Where="@("ObjectID = 1")">
                        </Label>
                        <FormTemplate 
                            Title="@("facere suscipit quidem")"
                            Description="@("sequi possimus dolore deserunt atque quidem")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([,
,
])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                    "createdAt",
                                    "voluptatem est ipsum",
                                    default)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("nihil")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("id")"
                            Alias="@("et")"
                            Description="@("et blanditiis aperiam delectus repellat corrupti")"
                            Length="@(1)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "magnam" })"
                            ValueType="@(FieldValueType.Binary)"
>
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([default,
                                default,
                                default,
                                default])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(64.6352,
                                new Point(-100.1242,
                                        35.2710,
                                        118.1138,
                                        -34.2668,
                                        914.9050,
                                    new SpatialReference(2,
                                            "tenetur",
                                            "maxime",
                                            "quibusdam"),
                                        true,
                                        true,
                                        823.6119),
                                    [6,
                                        4],
                                SpatialRelationship.Crosses,
                                new TimeExtent(new DateTime(2018, 5, 27, 7, 20, 23),
                                        new DateTime(2010, 10, 18, 13, 0, 6)),
                                    default,
                                    "1 = 1"))"
                            IncludedEffect="@([default])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.Name;",
                                    "provident unde repudiandae"))"
                            Mode="@(ElevationInfoMode.RelativeToGround)"
                            Offset="@(134.6330)"
                            Unit="@(ElevationUnit.Feet)">
                        </FeatureLayerBaseElevationInfo>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("distinctio",
                    ["animi",
                        "adipisci",
                        "qui",
                        "et"],
                    true,
                    [1,
                        6,
                        5],
                    ["illo",
                        "ipsa"],
                    "title",
                    174.8669,
                    [7,
                        7,
                        8],
                    true,
                    [5,
                        4,
                        6,
                        8],
                    85.7413,
                    "Name = 'John Doe'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2017, 7, 20, 3, 13, 57),
                        "magni",
                        "modi corrupti nihil"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        ListMode testListMode = ListMode.Hide;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("quia ratione id",
                    "sequi",
                    ["consequatur",
                        "qui",
                        "vero"],
                [new FieldInfo("token",
                        "distinctio",
                        "nihil",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.ShortDate),
                        true,
                        true,
                    StatisticType.Var)],
                [,
],
                [new ExpressionInfo("return $feature['FieldName'];",
                        "category",
                        "saepe eveniet iusto",
                        default),
                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "token",
                        "rerum soluta non",
                        default),
                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "email",
                        "sunt aliquid dolor",
                        default),
                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "group",
                        "aliquid rerum non",
                        default)],
                    true,
                    true,
                [,
,
,
]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.Color;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "atque consequatur exercitationem"),
                ElevationInfoMode.OnTheGround,
                    611.8148,
                ElevationUnit.Yards);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([default],
                    true,
                new FeatureFilter(2.0861,
                    new Extent(99.0140,
                            91.8891,
                            -57.4699,
                            9.1851,
                            205.4350,
                            705.6379,
                            457.9383,
                            204.4298,
                        new SpatialReference(2,
                                "reiciendis",
                                "quam",
                                "non"),
                            true,
                            true),
                        [5,
                            1,
                            3,
                            2],
                    SpatialRelationship.Relation,
                    new TimeExtent(new DateTime(2009, 3, 24, 17, 18, 12),
                            new DateTime(2014, 6, 17, 9, 13, 21)),
                        default,
                        "ObjectID = 1"),
                    [default,
                        default,
                        default,
                        default]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "avatar",
                    "voluptatum",
                    "rerum repudiandae pariatur odio delectus nihil qui",
                    7,
                    true,
                    true,
                    new { Value = "eius" },
                FieldValueType.Binary,
),
            new Field(default,
                    "group",
                    "aut",
                    "rerum quis aut reiciendis aperiam blanditiis atque",
                    9,
                    true,
                    true,
                    new { Value = "non" },
                FieldValueType.UniqueIdentifier,
),
            new Field(default,
                    "phone",
                    "maiores",
                    "et numquam occaecati eum vel voluptas eos",
                    2,
                    true,
                    true,
                    new { Value = "ex" },
                FieldValueType.PercentageOrRatio,
)];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("aspernatur");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("aliquid laboriosam odio",
                    "porro veniam dolor ut magnam amet",
                    true,
                [,
],
                [new ExpressionInfo("return Date();",
                        "createdAt",
                        "ullam est dignissimos",
                        default),
                new ExpressionInfo("return Date();",
                        "group",
                        "cum aperiam et",
                        default)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(106.0634,
                    69.2480,
                    -24.4713,
                    -72.5238,
                    760.1003,
                    713.1922,
                    469.1722,
                    557.0387,
                new SpatialReference(5,
                        "et",
                        "sint",
                        "quo"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveBefore,
                    "soluta",
                    default,
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    14889587.4914,
                    25519.3547,
                    true,
                    default,
,
                    true,
                    "Province = 'Ontario'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("iusto",
                SortOrder.Descending,
                    "ex"),
            new OrderedLayerOrderBy("aut",
                SortOrder.Descending,
                    "non"),
            new OrderedLayerOrderBy("minus",
                SortOrder.Descending,
                    "rem"),
            new OrderedLayerOrderBy("rerum",
                SortOrder.Ascending,
                    "dicta")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        SpatialReference testSpatialReference = new SpatialReference(5,
                    "tenetur",
                    "dolores",
                    "ut");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("accusamus neque enim delectus",
                DrawingTool.Point,
                    "createdAt",
                new Graphic(new Point(48.5610,
                            -7.0747,
                            -17.1730,
                            79.4466,
                            151.8652,
                        new SpatialReference(9,
                                "in",
                                "debitis",
                                "provident"),
                            true,
                            true,
                            74.1501),
,
                    new PopupTemplate("ullam aut est",
                            "vero",
                            ["molestiae",
                                "enim",
                                "porro",
                                "fugit"],
                        [new FieldInfo("phone",
                                "minus",
                                "voluptate",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("title",
                                "est",
                                "molestias",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("email",
                                "similique",
                                "eaque",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Min)],
                        [,
,
],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "comment",
                                "ab omnis ratione",
                                default),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "title",
                                "quod excepturi molestiae",
                                default)],
                            true,
                            true,
                        []),
                        default,
                        true,
                        "enim",
                        "ut",
                        default),
                    default),
            new FeatureTemplate("dolorum sed repudiandae perferendis omnis tenetur",
                DrawingTool.Line,
                    "phone",
                new Graphic(new Point(123.8836,
                            4.6166,
                            24.4160,
                            87.8685,
                            195.3280,
                        new SpatialReference(2,
                                "magni",
                                "quibusdam",
                                "dicta"),
                            true,
                            true,
                            80.0348),
,
                    new PopupTemplate("nihil velit excepturi",
                            "similique",
                            ["impedit",
                                "quisquam",
                                "excepturi"],
                        [new FieldInfo("category",
                                "fuga",
                                "quibusdam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Max)],
                        [,
],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "name",
                                "optio maiores error",
                                default)],
                            true,
                            true,
                        [,
,
]),
                        default,
                        true,
                        "sed",
                        "voluptas",
                        default),
                    default)];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2011, 7, 10, 9, 0, 16),
                    new DateTime(2008, 7, 18, 10, 53, 31));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("voluptas",
                    "consequuntur",
                new TimeExtent(new DateTime(2021, 9, 15, 7, 17, 51),
                        new DateTime(2015, 8, 18, 21, 38, 43)),
                new TimeInterval(TemporalTime.Days,
                        927.3486),
                    [new DateTime(2002, 8, 8, 17, 10, 23),
                        new DateTime(2021, 6, 20, 18, 0, 29),
                        new DateTime(2007, 7, 10, 6, 20, 32),
                        new DateTime(2010, 9, 10, 18, 46, 26)],
                    "America/Bogota",
                    "doloremque");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Decades,
                    977.8475);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("e37afd54-400a-f984-e475-96d01aa48f91",
                    "status",
                [new FeatureTemplate("est odit ut incidunt asperiores",
                    DrawingTool.None,
                        "token",
                    new Graphic(new Extent(126.6700,
                                66.3107,
                                27.3204,
                                -26.3253,
                                749.1594,
                                884.2364,
                                740.4884,
                                9.3866,
                            new SpatialReference(6,
                                    "nam",
                                    "expedita",
                                    "voluptatem"),
                                true,
                                true),
,
                        new PopupTemplate("voluptatem aliquam omnis",
                                "a",
                                ["eaque",
                                    "ipsa"],
                            [new FieldInfo("id",
                                    "necessitatibus",
                                    "voluptatibus",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [,
,
,
],
                            [new ExpressionInfo("return Date();",
                                    "name",
                                    "voluptates quia dolor",
                                    default),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "password",
                                    "sed laborum enim",
                                    default)],
                                true,
                                true,
                            [,
,
]),
                            default,
                            true,
                            "veniam",
                            "vero",
                            default),
                        default),
                new FeatureTemplate("repellendus nostrum consequatur autem nisi",
                    DrawingTool.DownArrow,
                        "email",
                    new Graphic(new Point(-116.5694,
                                -56.5650,
                                24.2531,
                                61.7884,
                                79.4359,
                            new SpatialReference(8,
                                    "amet",
                                    "temporibus",
                                    "rerum"),
                                true,
                                true,
                                597.6400),
,
                        new PopupTemplate("praesentium dolor sit",
                                "qui",
                                ["aut",
                                    "tempore",
                                    "perferendis"],
                            [new FieldInfo("createdAt",
                                    "quae",
                                    "doloribus",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("createdAt",
                                    "amet",
                                    "consequatur",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Var)],
                            [,
,
],
                            [new ExpressionInfo("return $feature.Name;",
                                    "token",
                                    "ducimus eum non",
                                    default),
                            new ExpressionInfo("return Date();",
                                    "status",
                                    "blanditiis consectetur labore",
                                    default),
                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "name",
                                    "necessitatibus exercitationem ipsam",
                                    default)],
                                true,
                                true,
                            [,
]),
                            default,
                            true,
                            "iure",
                            "minus",
                            default),
                        default),
                new FeatureTemplate("beatae non minima enim hic eaque suscipit",
                    DrawingTool.Polygon,
                        "token",
                    new Graphic(new Point(25.0334,
                                -77.4814,
                                40.3111,
                                87.8829,
                                185.3472,
                            new SpatialReference(4,
                                    "sint",
                                    "qui",
                                    "neque"),
                                true,
                                true,
                                614.9857),
,
                        new PopupTemplate("aut et laudantium",
                                "voluptatem",
                                ["cupiditate",
                                    "mollitia",
                                    "ea",
                                    "pariatur"],
                            [new FieldInfo("status",
                                    "odit",
                                    "hic",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum)],
                            [,
],
                            [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "id",
                                    "omnis et et",
                                    default),
                            new ExpressionInfo("return $feature.Name;",
                                    "name",
                                    "architecto magni voluptates",
                                    default),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "createdAt",
                                    "non voluptatum modi",
                                    default),
                            new ExpressionInfo("return $feature.Name;",
                                    "password",
                                    "tempora unde aliquam",
                                    default)],
                                true,
                                true,
                            []),
                            default,
                            true,
                            "officiis",
                            "eos",
                            default),
                        default),
                new FeatureTemplate("nulla deserunt aspernatur voluptas ipsum eum voluptatibus",
                    DrawingTool.AutoCompletePolygon,
                        "status",
                    new Graphic(new Point(95.4614,
                                17.5549,
                                133.5068,
                                -0.2905,
                                682.7666,
                            new SpatialReference(6,
                                    "dolor",
                                    "ipsa",
                                    "voluptatem"),
                                true,
                                true,
                                672.4839),
,
                        new PopupTemplate("eligendi quaerat nemo",
                                "dolor",
                                ["iure",
                                    "iste"],
                            [new FieldInfo("status",
                                    "excepturi",
                                    "ipsum",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                            [,
],
                            [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "name",
                                    "quis maiores qui",
                                    default)],
                                true,
                                true,
                            [,
]),
                            default,
                            true,
                            "et",
                            "quam",
                            default),
                        default)],
                new Dictionary<string, Domain>() {{ "eligendi",  },
                { "nihil",  },
                { "voluptatum",  }
                },
                    "consequatur")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2011, 11, 24, 10, 55, 58),
                    new DateTime(2008, 10, 5, 20, 36, 52));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
