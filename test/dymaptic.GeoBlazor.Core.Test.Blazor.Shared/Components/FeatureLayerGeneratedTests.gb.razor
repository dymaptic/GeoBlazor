@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")"
                        OutFields="@(["nostrum",
                            "sapiente"])"
                        DefinitionExpression="@("voluptatem")"
                        MinScale="@(48143.9458)"
                        MaxScale="@(5677347.6181)"
                        ObjectIdField="@("ut")"
                        GeometryType="@(FeatureGeometryType.Polyline)"
                        Title="@("rerum corrupti non")"
                        Opacity="@(0.8123)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        ApiKey="@("itaque")"
                        BlendMode="@(BlendMode.VividLight)"
                        Charts="@(["vel",
                            "modi",
                            "voluptatem"])"
                        Copyright="@("fuga")"
                        DateFieldsTimeZone="@("perspiciatis")"
                        DisplayField="@("corrupti")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("et",
                            41372110.7717))"
                        FullExtent="@(new Extent(-116.4739,
                                19.4331,
                                -2.0548,
                                -24.6715,
                                93.0981,
                                928.6124,
                                377.3872,
                                527.9855,
                            new SpatialReference(3,
                                    "adipisci",
                                    "labore",
                                    "reprehenderit"),
                                true,
                                true))"
                        GdbVersion="@("6.0.3.6")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2010, 11, 15, 11, 14, 26))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(404.2776)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        SpatialReference="@(new SpatialReference(2,
                                "velit",
                                "incidunt",
                                "quaerat"))"
                        TypeIdField="@("doloribus")"
                        Types="@([new FeatureType("a4b9054f-5a52-6c01-8c09-c4b7daacf146",
                                "id",
                            [new FeatureTemplate("qui aliquam vel dolor et",
                                DrawingTool.Freehand,
                                    "comment",
                                new Graphic(new Point(-32.9633,
                                            -56.9994,
                                            -39.1218,
                                            -37.5930,
                                            441.1626,
                                        new SpatialReference(7,
                                                "eum",
                                                "ipsum",
                                                "vero"),
                                            true,
                                            true,
                                            57.4788),
                                    new TextSymbol("minus aut totam",
                                        new MapColor(161, 45, 63),
                                        new MapColor(127, 32, 30),
                                            new Dimension(249.5623),
                                        new MapFont(new Dimension(284.6193),
                                                "Garamond",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            364.3124,
                                        new MapColor(36, 103, 127),
                                        new MapColor(184, 139, 191),
                                            599.2675,
                                        HorizontalAlignment.Right,
                                            true,
                                            287.6853,
                                            new Dimension(484.8524),
                                            true),
                                    new PopupTemplate("molestiae quisquam repudiandae",
                                            "cupiditate",
                                            ["dolorem",
                                                "earum",
                                                "accusamus",
                                                "quidem"],
                                        [new FieldInfo("title",
                                                "tempore",
                                                "optio",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("category",
                                                "quaerat",
                                                "odio",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDateLeShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("id",
                                                "cupiditate",
                                                "assumenda",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                        [new AttachmentsPopupContent("eos sint mollitia",
                                                "commodi ut quis aspernatur",
                                                AttachmentsPopupContentDisplayType.Auto),
                                        new MediaPopupContent("iusto modi maiores",
                                                "aut dolorem laudantium voluptatum",
                                            [new ImageMediaInfo("aut ex at",
                                                    "at",
                                                    "itaque eum officiis",
                                                new ImageMediaInfoValue("https://rowland.net",
                                                        "https://benton.info"),
                                                    585.8515),
                                            new ColumnChartMediaInfo("tempora est eligendi",
                                                    "eveniet",
                                                    "facilis beatae accusamus",
                                                new ChartMediaInfoValue(["possimus",
                                                        "aut"],
                                                        "voluptatem",
                                                        "atque",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(146, 179, 220),
                                                    new MapColor(76, 177, 40),
                                                    new MapColor(209, 161, 40),
                                                    new MapColor(165, 33, 139)])),
                                            new ImageMediaInfo("ipsa qui provident",
                                                    "pariatur",
                                                    "alias laudantium illo",
                                                new ImageMediaInfoValue("http://philip.info",
                                                        "http://evalyn.com"),
                                                    944.3296)],
                                                7),
                                        new MediaPopupContent("magni ex vel",
                                                "ullam hic quod est voluptas",
                                            [new ImageMediaInfo("maxime perferendis quod",
                                                    "voluptas",
                                                    "ex dolorem sint",
                                                new ImageMediaInfoValue("https://hayley.net",
                                                        "http://adele.info"),
                                                    676.7138),
                                            new ColumnChartMediaInfo("porro suscipit quo",
                                                    "perspiciatis",
                                                    "est et expedita",
                                                new ChartMediaInfoValue(["eum",
                                                        "aut",
                                                        "earum",
                                                        "cupiditate"],
                                                        "et",
                                                        "perferendis",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(35, 11, 66),
                                                    new MapColor(239, 65, 3),
                                                    new MapColor(135, 76, 159),
                                                    new MapColor(240, 238, 187)])),
                                            new ImageMediaInfo("rerum alias quia",
                                                    "consequuntur",
                                                    "ipsum enim dolores",
                                                new ImageMediaInfoValue("https://taryn.net",
                                                        "https://dawson.name"),
                                                    461.2177)],
                                                6)],
                                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "avatar",
                                                "sed magnam ea",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "category",
                                                "doloribus voluptates pariatur",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "token",
                                                "asperiores facilis labore",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "status",
                                                "officia dignissimos voluptatem",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("non aspernatur vero",
                                                "https://picsum.photos/640/480/?image=993",
                                                "b1390abe-568a-9e43-b3bd-ce3b6be30d3f",
                                                () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "iusto"),
                                        new ActionToggle("est et qui",
                                                "c3aa9391-4a03-abeb-8365-a270812d4f89",
                                                () => { Console.WriteLine("accusantium"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "title",
                                                "esse"),
                                        new ActionButton("iusto tenetur aperiam",
                                                "https://picsum.photos/640/480/?image=657",
                                                "3c79c078-0841-b641-a407-befd5c38a432",
                                                () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                                "createdAt",
                                                true,
                                                true,
                                                true,
                                                "et"),
                                        new ActionToggle("accusamus sunt ut",
                                                "e8c3f674-d707-0ea4-5f14-c3e525e95a99",
                                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "password",
                                                "aut")]),
                                        new AttributesDictionary(),
                                        true,
                                        "tempore",
                                        "corrupti",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "incidunt",
                                            7)),
                                    new Thumbnail("debitis",
                                        "rerum",
                                        117.6356,
                                        258.1020))],
                            new Dictionary<string, Domain>() {{ "et", new RangeDomain("dolor",
        "neque",
        "phone") },
                            { "sed", new InheritedDomain("group") }
                            },
                                "architecto"),
                        new FeatureType("8f00ff6c-3851-4473-4174-d4d47dd44200",
                                "password",
                            [new FeatureTemplate("aut nobis officiis qui accusantium voluptatem quo",
                                DrawingTool.RightArrow,
                                    "status",
                                new Graphic(new Polyline([new MapPath([new MapPoint([207.5735,
                                                160.2108,
                                                875.6560,
                                                87.2743]),
                                            new MapPoint([999.8466,
                                                309.4668,
                                                83.4868])]),
                                            new MapPath([new MapPoint([497.3123,
                                                    826.3326,
                                                    652.7035]),
                                                new MapPoint([883.0337,
                                                    534.4638,
                                                    887.0575]),
                                                new MapPoint([254.2413,
                                                    230.1957,
                                                    14.2915,
                                                    641.4308]),
                                                new MapPoint([713.8962,
                                                    418.7570,
                                                    372.4191])]),
                                            new MapPath([new MapPoint([507.1545,
                                                    441.8473]),
                                                new MapPoint([787.6424,
                                                    726.3471]),
                                                new MapPoint([935.1549,
                                                    73.4278,
                                                    65.8275,
                                                    716.2582]),
                                                new MapPoint([260.2604,
                                                    541.4784,
                                                    779.4790])]),
                                            new MapPath([new MapPoint([426.0983,
                                                    354.6801,
                                                    193.8030]),
                                                new MapPoint([168.0540,
                                                    45.5483,
                                                    874.3861,
                                                    864.5096])])],
                                        new SpatialReference(4,
                                                "quas",
                                                "similique",
                                                "numquam"),
                                            true,
                                            true),
                                    new TextSymbol("possimus delectus error",
                                        new MapColor(21, 5, 100),
                                        new MapColor(205, 194, 50),
                                            new Dimension(954.8722),
                                        new MapFont(new Dimension(242.5338),
                                                "Times New Roman",
                                            MapFontStyle.Normal,
                                            FontWeight.Normal,
                                            TextDecoration.Underline),
                                            957.1524,
                                        new MapColor(97, 169, 230),
                                        new MapColor(93, 194, 207),
                                            356.2732,
                                        HorizontalAlignment.Right,
                                            true,
                                            917.9391,
                                            new Dimension(716.2374),
                                            true),
                                    new PopupTemplate("iusto earum praesentium",
                                            "error",
                                            ["quam",
                                                "id"],
                                        [new FieldInfo("createdAt",
                                                "expedita",
                                                "ut",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("title",
                                                "recusandae",
                                                "quod",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDate),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("id",
                                                "eum",
                                                "nihil",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("updatedAt",
                                                "ut",
                                                "blanditiis",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                        [new FieldsPopupContent([new FieldInfo("avatar",
                                                    "vel",
                                                    "dolores",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.ShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Stddev)],
                                                "qui labore molestiae pariatur fugiat qui quo",
                                                "et qui voluptatem"),
                                        new TextPopupContent("voluptas voluptatum vel")],
                                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "category",
                                                "libero nemo corporis",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("eum nesciunt incidunt",
                                                "https://picsum.photos/640/480/?image=856",
                                                "26a9c3e7-b6ae-f685-478a-913c0589594c",
                                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                                "createdAt",
                                                true,
                                                true,
                                                true,
                                                "fugit"),
                                        new ActionToggle("quas consequatur sint",
                                                "873ef858-85ec-5ae6-6883-26b2fef9c5cb",
                                                () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "group",
                                                "earum")]),
                                        new AttributesDictionary(),
                                        true,
                                        "voluptas",
                                        "facilis",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "assumenda",
                                            8)),
                                    new Thumbnail("et",
                                        "temporibus",
                                        150.0400,
                                        13.6926))],
                            new Dictionary<string, Domain>() {{ "enim", new InheritedDomain("updatedAt") },
                            { "qui", new InheritedDomain("updatedAt") }
                            },
                                "et"),
                        new FeatureType("43d0fe24-a174-779a-6fff-656038851019",
                                "id",
                            [new FeatureTemplate("reiciendis sed exercitationem natus doloremque et dignissimos",
                                DrawingTool.UpArrow,
                                    "createdAt",
                                new Graphic(new Point(150.8488,
                                            -43.8709,
                                            142.5528,
                                            79.6209,
                                            906.2123,
                                        new SpatialReference(8,
                                                "cumque",
                                                "quo",
                                                "placeat"),
                                            true,
                                            true,
                                            585.2477),
                                    new TextSymbol("dolorum nam enim",
                                        new MapColor(245, 240, 31),
                                        new MapColor(206, 28, 10),
                                            new Dimension(290.8135),
                                        new MapFont(new Dimension(42.2461),
                                                "Palatino",
                                            MapFontStyle.Normal,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            843.1050,
                                        new MapColor(29, 177, 113),
                                        new MapColor(172, 234, 7),
                                            538.9949,
                                        HorizontalAlignment.Center,
                                            true,
                                            225.7885,
                                            new Dimension(67.3007),
                                            true),
                                    new PopupTemplate("error reprehenderit consequuntur",
                                            "dolor",
                                            ["et",
                                                "enim"],
                                        [new FieldInfo("password",
                                                "dolorem",
                                                "quis",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("name",
                                                "accusamus",
                                                "iure",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("category",
                                                "corrupti",
                                                "id",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Sum)],
                                        [new RelationshipPopupContent("quo voluptate repudiandae",
                                                "dolor temporibus accusamus autem",
                                                8,
                                                "placeat",
                                            [new RelatedRecordsInfoFieldOrder("eveniet",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("optio",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("est",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("eum",
                                                OrderBy.Asc)],
                                                2),
                                        new FieldsPopupContent([new FieldInfo("createdAt",
                                                    "laudantium",
                                                    "eum",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.ShortDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min)],
                                                "ipsum quasi ea voluptatem ea",
                                                "maxime soluta voluptatem"),
                                        new TextPopupContent("neque ad nostrum"),
                                        new TextPopupContent("voluptatibus pariatur voluptatum")],
                                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "email",
                                                "mollitia voluptatum et",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "avatar",
                                                "eos est porro",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "status",
                                                "molestias sed voluptatem",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature['FieldName'];",
                                                "status",
                                                "ipsam et fugit",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionToggle("magnam est consequatur",
                                                "6d4f053f-b57a-8d03-abd0-1c01056beada",
                                                () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "password",
                                                "alias")]),
                                        new AttributesDictionary(),
                                        true,
                                        "consequuntur",
                                        "iusto",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "ab",
                                            7)),
                                    new Thumbnail("nostrum",
                                        "illum",
                                        220.2147,
                                        182.1968)),
                            new FeatureTemplate("natus illum odit consectetur",
                                DrawingTool.DownArrow,
                                    "group",
                                new Graphic(new Polyline([new MapPath([new MapPoint([503.1526,
                                                470.9264]),
                                            new MapPoint([636.3575,
                                                413.0852]),
                                            new MapPoint([942.8928,
                                                374.5612,
                                                9.3271,
                                                299.1697]),
                                            new MapPoint([186.7697,
                                                869.0671])]),
                                            new MapPath([new MapPoint([521.8555,
                                                    585.3387]),
                                                new MapPoint([30.4120,
                                                    856.5807]),
                                                new MapPoint([789.4405,
                                                    502.9284,
                                                    6.3795])])],
                                        new SpatialReference(8,
                                                "ut",
                                                "sit",
                                                "quisquam"),
                                            true,
                                            true),
                                    new TextSymbol("velit sed eos",
                                        new MapColor(220, 78, 15),
                                        new MapColor(178, 249, 154),
                                            new Dimension(734.3931),
                                        new MapFont(new Dimension(642.6208),
                                                "Georgia",
                                            MapFontStyle.Normal,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            768.0003,
                                        new MapColor(120, 108, 112),
                                        new MapColor(68, 10, 79),
                                            830.5882,
                                        HorizontalAlignment.Center,
                                            true,
                                            78.9142,
                                            new Dimension(792.1647),
                                            true),
                                    new PopupTemplate("quidem dolores vel",
                                            "explicabo",
                                            ["repudiandae",
                                                "sapiente"],
                                        [new FieldInfo("createdAt",
                                                "nostrum",
                                                "quibusdam",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.ShortDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("name",
                                                "aperiam",
                                                "qui",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                        [new FieldsPopupContent([new FieldInfo("category",
                                                    "placeat",
                                                    "dolore",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("password",
                                                    "asperiores",
                                                    "perspiciatis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.LongDate),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                                "id in voluptatem minima laboriosam impedit",
                                                "omnis minima ipsa")],
                                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "token",
                                                "laboriosam inventore voluptatem",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("fugit sunt est",
                                                "https://picsum.photos/640/480/?image=708",
                                                "0c9d69e5-9094-5259-49fa-228b0480e2a0",
                                                () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                                "title",
                                                true,
                                                true,
                                                true,
                                                "deserunt"),
                                        new ActionButton("veniam modi quaerat",
                                                "https://picsum.photos/640/480/?image=240",
                                                "ce93a512-bcf2-0220-6c7c-5a5cb761cb73",
                                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                "category",
                                                true,
                                                true,
                                                true,
                                                "quo")]),
                                        new AttributesDictionary(),
                                        true,
                                        "et",
                                        "libero",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "dolor",
                                            7)),
                                    new Thumbnail("perspiciatis",
                                        "laudantium",
                                        115.3743,
                                        293.6443)),
                            new FeatureTemplate("inventore sit exercitationem iusto",
                                DrawingTool.Circle,
                                    "token",
                                new Graphic(new Extent(91.1592,
                                            8.4473,
                                            27.7403,
                                            -41.4807,
                                            422.0624,
                                            510.6098,
                                            775.2191,
                                            324.3535,
                                        new SpatialReference(3,
                                                "tenetur",
                                                "quia",
                                                "qui"),
                                            true,
                                            true),
                                    new TextSymbol("explicabo et eum",
                                        new MapColor(124, 153, 215),
                                        new MapColor(241, 115, 148),
                                            new Dimension(638.4542),
                                        new MapFont(new Dimension(805.3856),
                                                "Palatino",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.Underline),
                                            282.2886,
                                        new MapColor(227, 145, 178),
                                        new MapColor(21, 246, 205),
                                            34.8034,
                                        HorizontalAlignment.Left,
                                            true,
                                            427.5646,
                                            new Dimension(265.3312),
                                            true),
                                    new PopupTemplate("qui molestiae quos",
                                            "animi",
                                            ["deserunt",
                                                "sit"],
                                        [new FieldInfo("name",
                                                "tempora",
                                                "ut",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("title",
                                                "eveniet",
                                                "qui",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongMonthDayYear),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("name",
                                                "id",
                                                "quis",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                        [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                    "adipisci",
                                                    "veritatis perspiciatis magnam"))],
                                        [new ExpressionInfo("return $feature.Name;",
                                                "status",
                                                "fugit praesentium rerum",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "category",
                                                "voluptate corrupti libero",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return Date();",
                                                "category",
                                                "totam debitis laudantium",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "id",
                                                "ad in sequi",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("quod rerum sed",
                                                "https://picsum.photos/640/480/?image=437",
                                                "2a496432-4ecb-ee98-f8a9-fd12b5738282",
                                                () => { Console.WriteLine("animi"); return Task.CompletedTask; },
                                                "title",
                                                true,
                                                true,
                                                true,
                                                "vel"),
                                        new ActionToggle("ipsam at quas",
                                                "642ddf53-d0f4-f3aa-9906-60e96476330f",
                                                () => { Console.WriteLine("ipsam"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "createdAt",
                                                "vitae"),
                                        new ActionToggle("pariatur cumque enim",
                                                "7061ada0-fa1a-fe47-9878-aa2dac926afd",
                                                () => { Console.WriteLine("explicabo"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "token",
                                                "sunt"),
                                        new ActionToggle("eum consequuntur eligendi",
                                                "767d26e1-c0a3-8a67-7114-b1d54c96f70a",
                                                () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "email",
                                                "numquam")]),
                                        new AttributesDictionary(),
                                        true,
                                        "quae",
                                        "maiores",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "vitae",
                                            1)),
                                    new Thumbnail("laborum",
                                        "quas",
                                        100.4936,
                                        215.7544))],
                            new Dictionary<string, Domain>() {{ "quam", new RangeDomain("numquam",
        "architecto",
        "title") },
                            { "et", new InheritedDomain("comment") }
                            },
                                "culpa"),
                        new FeatureType("63af61c6-fde1-cfe9-bd56-921369fb1db7",
                                "avatar",
                            [new FeatureTemplate("voluptatem est debitis praesentium quae asperiores",
                                DrawingTool.Arrow,
                                    "comment",
                                new Graphic(new Polyline([new MapPath([new MapPoint([683.6471,
                                                456.0799,
                                                493.1173]),
                                            new MapPoint([992.1755,
                                                251.4440,
                                                876.2441]),
                                            new MapPoint([872.7841,
                                                25.7492,
                                                860.3658,
                                                494.0465]),
                                            new MapPoint([744.9574,
                                                433.8507,
                                                936.7280,
                                                0.7258])])],
                                        new SpatialReference(7,
                                                "nam",
                                                "saepe",
                                                "temporibus"),
                                            true,
                                            true),
                                    new TextSymbol("quis ullam totam",
                                        new MapColor(74, 142, 15),
                                        new MapColor(85, 19, 28),
                                            new Dimension(303.1070),
                                        new MapFont(new Dimension(300.1525),
                                                "Garamond",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            916.0173,
                                        new MapColor(100, 57, 48),
                                        new MapColor(108, 143, 181),
                                            692.5599,
                                        HorizontalAlignment.Right,
                                            true,
                                            289.2763,
                                            new Dimension(633.5420),
                                            true),
                                    new PopupTemplate("quo sunt hic",
                                            "aspernatur",
                                            ["cupiditate",
                                                "officiis",
                                                "minima"],
                                        [new FieldInfo("category",
                                                "facilis",
                                                "doloribus",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("updatedAt",
                                                "nostrum",
                                                "quasi",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Max)],
                                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "voluptatem",
                                                    "consequatur iusto at"))],
                                        [new ExpressionInfo("return $feature['FieldName'];",
                                                "avatar",
                                                "eos explicabo ratione",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Name;",
                                                "phone",
                                                "sit eligendi facere",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "id",
                                                "consectetur saepe alias",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Name;",
                                                "status",
                                                "quia est facilis",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                        [new ActionButton("est veritatis quod",
                                                "https://picsum.photos/640/480/?image=688",
                                                "9bab0444-fec0-8a9e-4d5d-06b9476ed6ef",
                                                () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                                                "email",
                                                true,
                                                true,
                                                true,
                                                "iusto"),
                                        new ActionToggle("et qui officiis",
                                                "a40d79a9-5e53-b149-f8ef-2ab74c543224",
                                                () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "phone",
                                                "non"),
                                        new ActionToggle("vel iure et",
                                                "6b765e5e-f092-3c56-015c-9c2b48587b7c",
                                                () => { Console.WriteLine("adipisci"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "phone",
                                                "tempora")]),
                                        new AttributesDictionary(),
                                        true,
                                        "architecto",
                                        "ad",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "sit",
                                            3)),
                                    new Thumbnail("nisi",
                                        "quia",
                                        154.3025,
                                        138.7747))],
                            new Dictionary<string, Domain>() {{ "est", new RangeDomain("harum",
        "ut",
        "status") },
                            { "eum", new RangeDomain("quos",
        "ad",
        "title") },
                            { "suscipit", new RangeDomain("nihil",
        "fugiat",
        "avatar") },
                            { "eos", new RangeDomain("corrupti",
        "aut",
        "category") }
                            },
                                "repellat")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(105.5862)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("vel")"
                            EndField="@("est")"
                            Stops="@([new DateTime(2002, 10, 23, 4, 21, 0),
                                new DateTime(2021, 8, 27, 1, 56, 23)])"
                            TimeZone="@("Europe/Zagreb")"
                            TrackIdField="@("eius")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Months)"
                                Value="@(111.4608)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2009, 7, 7, 0, 33, 55))"
                                End="@(new DateTime(2007, 3, 16, 17, 11, 18))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2001, 6, 4, 16, 24, 42))"
                            End="@(new DateTime(2009, 9, 12, 13, 16, 4))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("modi dolorem eveniet quis")"
                            DrawingTool="@(DrawingTool.RightArrow)"
                            Name="@("group")"
                            Thumbnail="@(new Thumbnail("quaerat",
                                "id",
                                133.6697,
                                287.6367))">
                            <Graphic 
                                Geometry="@(new Polygon([new MapPath([new MapPoint([708.0432,
                                            174.3103,
                                            169.7923]),
                                        new MapPoint([127.9700,
                                            110.0518,
                                            989.6692])]),
                                        new MapPath([new MapPoint([855.4304,
                                                252.8661,
                                                230.6872]),
                                            new MapPoint([121.8867,
                                                544.7628,
                                                439.9490,
                                                650.1983]),
                                            new MapPoint([432.6674,
                                                331.8322])]),
                                        new MapPath([new MapPoint([795.1890,
                                                729.0841]),
                                            new MapPoint([393.5105,
                                                723.1067,
                                                69.4174]),
                                            new MapPoint([386.7932,
                                                543.0439]),
                                            new MapPoint([112.7355,
                                                380.8155,
                                                422.8972,
                                                777.5761])])],
                                    new SpatialReference(2,
                                            "ex",
                                            "asperiores",
                                            "adipisci"),
                                    new Point(63.9539,
                                            82.1525,
                                            -143.9847,
                                            67.3444,
                                            811.1491,
                                        new SpatialReference(1,
                                                "sunt",
                                                "non",
                                                "dolor"),
                                            true,
                                            true,
                                            393.1920),
                                        true,
                                        true,
                                        true))"
                                Symbol="@(new TextSymbol("magnam cumque atque",
                                    new MapColor(246, 229, 123),
                                    new MapColor(194, 31, 95),
                                        new Dimension(387.3607),
                                    new MapFont(new Dimension(956.0256),
                                            "Bookman",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        244.0745,
                                    new MapColor(12, 47, 84),
                                    new MapColor(239, 27, 241),
                                        642.7811,
                                    HorizontalAlignment.Center,
                                        true,
                                        109.4865,
                                        new Dimension(323.0210),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("occaecati ea aut",
                                        "iure",
                                        ["quam",
                                            "magnam"],
                                    [new FieldInfo("comment",
                                            "reprehenderit",
                                            "enim",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("status",
                                            "occaecati",
                                            "in",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("phone",
                                            "et",
                                            "mollitia",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("name",
                                            "eius",
                                            "animi",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortDateLeLongTime),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                    [new RelationshipPopupContent("autem non architecto",
                                            "vel eligendi rerum sed omnis",
                                            6,
                                            "repudiandae",
                                        [new RelatedRecordsInfoFieldOrder("excepturi",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("eligendi",
                                            OrderBy.Asc)],
                                            6),
                                    new AttachmentsPopupContent("ea quos consequatur",
                                            "molestiae saepe dicta dolorem",
                                            AttachmentsPopupContentDisplayType.Auto),
                                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "exercitationem",
                                                "id id ut"))],
                                    [new ExpressionInfo("return $feature.Name;",
                                            "phone",
                                            "ut et dolore",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return Date();",
                                            "category",
                                            "hic sed reprehenderit",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("tempora quos repudiandae",
                                            "https://picsum.photos/640/480/?image=391",
                                            "ee81c948-829d-4c02-cbb4-740495021db6",
                                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                            "category",
                                            true,
                                            true,
                                            true,
                                            "placeat"),
                                    new ActionToggle("eaque sunt consequatur",
                                            "09b1ff7c-6219-0a67-0526-6c67f8e4ef63",
                                            () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "category",
                                            "odio"),
                                    new ActionToggle("distinctio ipsa veritatis",
                                            "e69cc338-3aa2-4240-f3bf-6955050d5763",
                                            () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "name",
                                            "voluptatem")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("adipisci")"
                                AggregateGeometries="@("est")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "perspiciatis",
                                    6))">
                            </Graphic>
                        </FeatureTemplate>
                        <Graphic 
                            Geometry="@(new Polygon([new MapPath([new MapPoint([106.5375,
                                        597.1777,
                                        150.9614]),
                                    new MapPoint([957.8312,
                                        387.9487,
                                        170.9355,
                                        600.9767]),
                                    new MapPoint([63.7894,
                                        267.2756,
                                        804.5222]),
                                    new MapPoint([894.5277,
                                        640.0078,
                                        386.8094])]),
                                    new MapPath([new MapPoint([444.0462,
                                            146.9227,
                                            695.6571,
                                            65.9178]),
                                        new MapPoint([345.8093,
                                            197.0269,
                                            802.7810])]),
                                    new MapPath([new MapPoint([741.2632,
                                            835.1090,
                                            536.1232]),
                                        new MapPoint([418.9964,
                                            321.9385,
                                            899.3971]),
                                        new MapPoint([882.9208,
                                            641.7214,
                                            648.3983])])],
                                new SpatialReference(9,
                                        "architecto",
                                        "recusandae",
                                        "eum"),
                                new Point(65.4825,
                                        -80.7154,
                                        112.6132,
                                        33.5228,
                                        637.9853,
                                    new SpatialReference(1,
                                            "adipisci",
                                            "necessitatibus",
                                            "sit"),
                                        true,
                                        true,
                                        162.5527),
                                    true,
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("accusantium earum voluptate",
                                new MapColor(30, 137, 27),
                                new MapColor(129, 2, 187),
                                    new Dimension(249.4684),
                                new MapFont(new Dimension(14.1894),
                                        "Courier New",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bolder,
                                    TextDecoration.None),
                                    950.1921,
                                new MapColor(252, 146, 0),
                                new MapColor(114, 89, 44),
                                    984.1114,
                                HorizontalAlignment.Left,
                                    true,
                                    540.2007,
                                    new Dimension(933.7876),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("voluptatem")"
                            AggregateGeometries="@("officiis")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "voluptates",
                                4))">
                            <PopupTemplate 
                                Title="@("veritatis tenetur neque")"
                                StringContent="@("voluptatibus")"
                                OutFields="@(["maxime",
                                    "unde",
                                    "incidunt"])"
                                FieldInfos="@([new FieldInfo("password",
                                        "iusto",
                                        "sunt",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("group",
                                        "harum",
                                        "odio",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("password",
                                        "et",
                                        "ut",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.DayShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Count)])"
                                Content="@([new RelationshipPopupContent("error neque eos",
                                        "vitae omnis ut aut",
                                        1,
                                        "vitae",
                                    [new RelatedRecordsInfoFieldOrder("praesentium",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("omnis",
                                        OrderBy.Desc),
                                    new RelatedRecordsInfoFieldOrder("sit",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("aut",
                                        OrderBy.Desc)],
                                        2),
                                new AttachmentsPopupContent("eligendi ut a",
                                        "explicabo officiis amet nihil nobis qui sint",
                                        AttachmentsPopupContentDisplayType.Preview),
                                new FieldsPopupContent([new FieldInfo("password",
                                            "quasi",
                                            "qui",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("password",
                                            "numquam",
                                            "qui",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.Year),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("token",
                                            "non",
                                            "et",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                        "voluptatibus placeat beatae similique perferendis laudantium",
                                        "laborum et quia")])"
                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                        "name",
                                        "quia eum autem",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "phone",
                                        "sequi vel porro",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "name",
                                        "explicabo soluta veritatis",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "updatedAt",
                                        "odit eum et",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionButton("sequi facere ea",
                                        "https://picsum.photos/640/480/?image=251",
                                        "979c909e-a766-a2d7-5cb8-2c27967e1bef",
                                        () => { Console.WriteLine("exercitationem"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "et"),
                                new ActionToggle("voluptatem harum similique",
                                        "0f2da6f8-152a-77fb-5b5b-dcdc3c2f130a",
                                        () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "comment",
                                        "quis")])">
                            </PopupTemplate>
                        </Graphic>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(31, 251, 43),
                                        new MapColor(60, 242, 38)),
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(195, 156, 64),
                                        new MapColor(251, 44, 41)),
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(177, 166, 87),
                                        new MapColor(44, 242, 227)),
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(122, 112, 253),
                                        new MapColor(121, 203, 102))]),
                                    124.3538,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(692.4649,
                                            863.5221),
                                    new AuthoringInfoField1ClassBreakInfos(484.1366,
                                            851.2204),
                                    new AuthoringInfoField1ClassBreakInfos(48.1074,
                                            976.7774),
                                    new AuthoringInfoField1ClassBreakInfos(801.4356,
                                            730.6468)],
                                        "sunt",
                                        "at",
                                        "molestiae"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(351.7932,
                                            254.8864),
                                    new AuthoringInfoField1ClassBreakInfos(78.0670,
                                            380.1323)],
                                        "pariatur",
                                        "consequatur",
                                        "et"),
                                    ["qui",
                                        "repellat"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "sed",
                                    true,
                                LengthUnit.UsFeet,
                                    187.1270,
                                    550.4431,
                                    836.3015,
                                    731.0490))">
                        </SimpleRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("cum")"
                            ApiKey="@("et")"
                            AvgRating="@(410.6171)"
                            Categories="@(["ut",
                                "qui",
                                "quae"])"
                            Created="@(new DateTime(2012, 2, 16, 10, 15, 25))"
                            Culture="@("officia")"
                            Description="@("est asperiores aut molestiae at excepturi")"
                            Extent="@(new Extent(101.9573,
                                    123.8197,
                                    79.7348,
                                    15.3537,
                                    602.7368,
                                    827.0156,
                                    200.9129,
                                    412.0023,
                                new SpatialReference(1,
                                        "sequi",
                                        "ex",
                                        "non"),
                                    true,
                                    true))"
                            GroupCategories="@(["illo",
                                "quo",
                                "occaecati",
                                "et"])"
                            LicenseInfo="@("necessitatibus")"
                            Modified="@(new DateTime(2007, 10, 4, 22, 20, 35))"
                            Name="@("token")"
                            NumComments="@(230.3754)"
                            NumRatings="@(630.7092)"
                            NumViews="@(982.9374)"
                            Owner="@("Sadye Keeling")"
                            OwnerFolder="@("Raymundo Hagenes")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Immediate,
                                    ["quibusdam",
                                        "voluptatem"],
                                    "cupiditate",
                                    "autem",
                                    "minus",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("aliquam")"
                            Screenshots="@(["commodi",
                                "et",
                                "omnis",
                                "quam"])"
                            Size="@(3)"
                            Snippet="@("voluptatum")"
                            Tags="@(["minus",
                                "exercitationem",
                                "quibusdam",
                                "quia"])"
                            Title="@("eum recusandae voluptatum")"
                            TypeKeywords="@(["sunt",
                                "non"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("amet corrupti recusandae")"
                            StringContent="@("cupiditate")"
                            OutFields="@(["enim",
                                "aut",
                                "exercitationem"])"
                            FieldInfos="@([new FieldInfo("email",
                                    "deserunt",
                                    "ipsam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("comment",
                                    "iste",
                                    "libero",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Max)])"
                            Content="@([new TextPopupContent("qui veritatis eum"),
                            new FieldsPopupContent([new FieldInfo("category",
                                        "dolorem",
                                        "modi",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("email",
                                        "fugiat",
                                        "fuga",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("phone",
                                        "ut",
                                        "nemo",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.ShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("email",
                                        "optio",
                                        "iure",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                    "velit iure qui quos consequatur voluptas repudiandae",
                                    "et enim eum")])"
                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "password",
                                    "est sint placeat",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("similique ea aut",
                                    "093d080f-21cf-826b-2626-23c0e6fdefca",
                                    () => { Console.WriteLine("ducimus"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "title",
                                    "id"),
                            new ActionToggle("dolores ratione sit",
                                    "42c4bd6c-562d-1db5-4612-07abe64164af",
                                    () => { Console.WriteLine("excepturi"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "password",
                                    "quia"),
                            new ActionToggle("veniam ex sint",
                                    "5fa8dca2-e9cc-7a0f-fa46-6c1ec56a133d",
                                    () => { Console.WriteLine("aliquam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "avatar",
                                    "aut"),
                            new ActionToggle("et et ipsam",
                                    "e239960a-de41-1140-d756-f359bac4169c",
                                    () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "a")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("deleniti")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("cumque")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.CenterEnd)"
                            LabelExpression="@("facilis")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(2547903.9024)"
                            MinScale="@(17765.2903)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(954.9650))"
                            Symbol="@(new TextSymbol("error eaque aliquam",
                                new MapColor(167, 253, 24),
                                new MapColor(52, 208, 195),
                                    new Dimension(753.6701),
                                new MapFont(new Dimension(335.9639),
                                        "Arial",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bolder,
                                    TextDecoration.None),
                                    198.2505,
                                new MapColor(110, 146, 55),
                                new MapColor(187, 80, 71),
                                    127.1813,
                                HorizontalAlignment.Left,
                                    true,
                                    546.9160,
                                    new Dimension(246.7247),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Country = 'Canada'")">
                        </Label>
                        <FormTemplate 
                            Title="@("numquam mollitia corrupti")"
                            Description="@("quos dolores illo ut")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new FieldElement("status",
                                "non",
                                "vero sequi quos nulla dicta velit molestiae",
                                "aliquid",
                                "earum",
                                "tenetur",
                                "magni",
                                new CodedValueDomain<string>(),
                                new BarcodeScannerInput())])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "id",
                                    "neque alias enim",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("eligendi")">
                        </LayerFloorInfo>
                        <Field 
                            Name="@("token")"
                            Alias="@("quam")"
                            Description="@("maiores et blanditiis veritatis rerum")"
                            Length="@(5)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "molestiae" })"
                            ValueType="@(FieldValueType.Coordinate)"
                            Domain="@(new InheritedDomain("category"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("neque",
                                48333166.2452)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(349.1081,
                                new Polygon([new MapPath([new MapPoint([962.5641,
                                            944.5812,
                                            413.5970,
                                            909.0674]),
                                        new MapPoint([361.5653,
                                            525.3725,
                                            375.3284]),
                                        new MapPoint([729.6982,
                                            534.2434,
                                            316.2618,
                                            127.1891]),
                                        new MapPoint([788.7795,
                                            723.0644,
                                            927.6184,
                                            875.1126])]),
                                        new MapPath([new MapPoint([917.7579,
                                                843.2694,
                                                880.4775,
                                                295.6871]),
                                            new MapPoint([179.5608,
                                                435.2685,
                                                231.0605,
                                                380.4206]),
                                            new MapPoint([225.0110,
                                                74.7332,
                                                45.2111,
                                                84.6814]),
                                            new MapPoint([608.4413,
                                                706.5183,
                                                166.3486,
                                                701.9394])]),
                                        new MapPath([new MapPoint([722.1050,
                                                594.3969]),
                                            new MapPoint([996.5937,
                                                755.4488,
                                                505.7747,
                                                268.4490]),
                                            new MapPoint([564.6736,
                                                741.6874,
                                                488.1355,
                                                921.2710])]),
                                        new MapPath([new MapPoint([585.9870,
                                                536.4595,
                                                302.0798,
                                                162.9241]),
                                            new MapPoint([948.9400,
                                                620.4490]),
                                            new MapPoint([946.6381,
                                                354.6888,
                                                754.8236]),
                                            new MapPoint([823.4345,
                                                218.5224,
                                                401.1157])])],
                                    new SpatialReference(3,
                                            "veritatis",
                                            "maxime",
                                            "quis"),
                                    new Point(24.5127,
                                            52.9282,
                                            78.9355,
                                            7.5251,
                                            411.6011,
                                        new SpatialReference(5,
                                                "repudiandae",
                                                "nisi",
                                                "inventore"),
                                            true,
                                            true,
                                            104.4268),
                                        true,
                                        true,
                                        true),
                                    [8,
                                        9],
                                SpatialRelationship.Touches,
                                new TimeExtent(new DateTime(2008, 10, 20, 7, 0, 55),
                                        new DateTime(2017, 10, 4, 4, 51, 51)),
                                    QueryUnits.Miles,
                                    "ObjectID = 1"))"
                            IncludedEffect="@([new Effect("id",
                                4621902.2099)])">
                        </FeatureEffect>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return Date();",
                                    "placeat rem quos"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(231.8348)"
                            Unit="@(ElevationUnit.Kilometers)">
                        </FeatureLayerBaseElevationInfo>
                        <GeoRSSLayer 
                            ArcGISLayerId="@("et")"
                            FullExtent="@(new Extent(119.6882,
                                    67.7486,
                                    13.7960,
                                    59.5612,
                                    488.6124,
                                    831.4836,
                                    337.7152,
                                    325.2302,
                                new SpatialReference(2,
                                        "quia",
                                        "ea",
                                        "commodi"),
                                    true,
                                    true))"
                            ListMode="@(ListMode.Hide)"
                            Opacity="@(0.3707)"
                            PersistenceEnabled="@(true)"
                            Title="@("ullam molestiae dolor")">
                            <TimeExtent 
                                Start="@(new DateTime(2015, 7, 22, 12, 0, 42))"
                                End="@(new DateTime(2019, 9, 12, 3, 30, 11))">
                            </TimeExtent>
                        </GeoRSSLayer>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("adipisci",
                    ["repellat",
                        "voluptate",
                        "perspiciatis"],
                    true,
                    [2,
                        2,
                        1],
                    ["est",
                        "voluptates",
                        "dignissimos",
                        "unde"],
                    "id",
                    896.7630,
                    [9,
                        5],
                    true,
                    [9,
                        9],
                    914.5236,
                    "Name = 'John Doe'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(PortalItemAccess.Shared,
                    "expedita",
                    "nulla",
                    634.4189,
                    ["molestias",
                        "tempore",
                        "ducimus",
                        "quod"],
                    new DateTime(2012, 1, 1, 0, 33, 33),
                    "saepe",
                    "eos voluptas in dolorum",
                new Extent(-92.7586,
                        -47.4040,
                        26.6078,
                        4.0000,
                        763.6363,
                        871.4984,
                        671.8333,
                        491.1686,
                    new SpatialReference(7,
                            "reiciendis",
                            "in",
                            "amet"),
                        true,
                        true),
                    ["dolores",
                        "in"],
                    "illo",
                    new DateTime(2020, 6, 13, 9, 33, 15),
                    "email",
                    928.4190),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2006, 2, 23, 12, 2, 26),
                        "qui",
                        "provident magni nihil"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Point(7.3470,
                        -89.5912,
                        -165.7916,
                        56.3167,
                        44.0288,
                    new SpatialReference(1,
                            "ut",
                            "commodi",
                            "deserunt"),
                        true,
                        true,
                        229.4430),
                new TextSymbol("doloribus maxime sit",
                    new MapColor(14, 206, 76),
                    new MapColor(106, 3, 45),
                        new Dimension(764.2551),
                    new MapFont(new Dimension(677.1028),
                            "Bookman",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        410.9735,
                    new MapColor(11, 144, 190),
                    new MapColor(32, 21, 244),
                        503.5638,
                    HorizontalAlignment.Center,
                        true,
                        885.8917,
                        new Dimension(753.9279),
                        true),
                new PopupTemplate("voluptas consectetur culpa",
                        "maxime",
                        ["explicabo",
                            "illo",
                            "veniam"],
                    [new FieldInfo("token",
                            "sed",
                            "eaque",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Min)],
                    [new RelationshipPopupContent("quisquam a qui",
                            "repudiandae nisi ut eaque id odio",
                            2,
                            "architecto",
                        [new RelatedRecordsInfoFieldOrder("dolore",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("rem",
                            OrderBy.Desc)],
                            2),
                    new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "maiores",
                                "perferendis aut labore"))],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "createdAt",
                            "beatae fugiat eaque",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "createdAt",
                            "nemo non sapiente",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "createdAt",
                            "et omnis modi",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("suscipit quo eveniet",
                            "94216e33-8cac-509f-c8ea-16c9046695d1",
                            () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "et"),
                    new ActionButton("repellendus molestiae et",
                            "https://picsum.photos/640/480/?image=34",
                            "edaa807f-6b3f-2186-26b6-df6012f64316",
                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "tempore"),
                    new ActionButton("sint ut doloremque",
                            "https://picsum.photos/640/480/?image=910",
                            "a8bad704-367b-f19a-6da9-78c969151ed8",
                            () => { Console.WriteLine("accusamus"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "expedita")]),
                    new AttributesDictionary(),
                    true,
                    "ut",
                    "iusto",
                    new GraphicOrigin(Guid.NewGuid(),
                        "maiores",
                        5)),
                5,
            default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "consequatur",
                    "reprehenderit",
                    126.2163,
                    ["omnis",
                        "fugit",
                        "ut"],
                    new DateTime(2015, 6, 6, 18, 26, 44),
                    "alias",
                    "iure ut qui natus",
                new Extent(164.4818,
                        35.7165,
                        52.5161,
                        33.2068,
                        557.5086,
                        698.9875,
                        128.5536,
                        22.6474,
                    new SpatialReference(3,
                            "odio",
                            "pariatur",
                            "voluptatem"),
                        true,
                        true),
                    ["et",
                        "provident",
                        "est",
                        "a"],
                    "in",
                    new DateTime(2016, 8, 18, 19, 55, 42),
                    "status",
                    221.1140);
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Graphic> testSource = [new Graphic(new Polyline([new MapPath([new MapPoint([522.1450,
                            100.3453]),
                        new MapPoint([775.9533,
                            626.9288,
                            659.5882,
                            532.5371]),
                        new MapPoint([459.9340,
                            396.5587]),
                        new MapPoint([904.1571,
                            970.4493,
                            80.1569])]),
                        new MapPath([new MapPoint([19.5684,
                                786.1982]),
                            new MapPoint([709.9776,
                                514.4091,
                                42.8666,
                                41.1183])]),
                        new MapPath([new MapPoint([637.0942,
                                41.8399]),
                            new MapPoint([290.4337,
                                914.0150,
                                860.2427])]),
                        new MapPath([new MapPoint([335.2708,
                                846.9923]),
                            new MapPoint([715.9839,
                                229.9982,
                                94.4103]),
                            new MapPoint([818.2734,
                                653.0794,
                                823.9100]),
                            new MapPoint([773.5382,
                                384.0355,
                                886.8583])])],
                    new SpatialReference(7,
                            "temporibus",
                            "ad",
                            "qui"),
                        true,
                        true),
                new TextSymbol("quisquam dolor quaerat",
                    new MapColor(27, 80, 173),
                    new MapColor(243, 249, 101),
                        new Dimension(395.6202),
                    new MapFont(new Dimension(120.7101),
                            "Garamond",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        27.2915,
                    new MapColor(159, 32, 130),
                    new MapColor(106, 9, 77),
                        36.3338,
                    HorizontalAlignment.Center,
                        true,
                        41.7057,
                        new Dimension(513.0249),
                        true),
                new PopupTemplate("et occaecati qui",
                        "deserunt",
                        ["accusantium",
                            "eligendi"],
                    [new FieldInfo("email",
                            "voluptas",
                            "eos",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new RelationshipPopupContent("molestiae aut occaecati",
                            "voluptatem quaerat deleniti illo accusantium",
                            1,
                            "occaecati",
                        [new RelatedRecordsInfoFieldOrder("voluptatem",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("dolor",
                            OrderBy.Asc)],
                            8),
                    new AttachmentsPopupContent("et recusandae voluptates",
                            "aut hic voluptatem vitae consequatur ipsum",
                            AttachmentsPopupContentDisplayType.Auto),
                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "amet",
                                "est recusandae porro")),
                    new MediaPopupContent("tenetur harum natus",
                            "quod ea ex non",
                        [new PieChartMediaInfo("ut blanditiis voluptate",
                                "eum",
                                "ducimus voluptatem aut",
                            new ChartMediaInfoValue(["voluptates",
                                    "ipsum",
                                    "excepturi"],
                                    "qui",
                                    "libero",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "qui",
                                        894.1909),
                                new ChartMediaInfoValueSeries("status",
                                        "officia",
                                        148.4487)],
                                [new MapColor(138, 246, 43),
                                new MapColor(217, 145, 249),
                                new MapColor(224, 88, 144),
                                new MapColor(137, 205, 149)]))],
                            6)],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "email",
                            "sint enim atque",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "password",
                            "molestiae molestiae nostrum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "category",
                            "repudiandae accusamus a",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("eos id ex",
                            "https://picsum.photos/640/480/?image=591",
                            "809eb3ea-8aba-cabd-08f8-95d67e5bc4d4",
                            () => { Console.WriteLine("tempore"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "aut"),
                    new ActionToggle("qui minus quo",
                            "e19f7e0f-cb2c-8d26-cefc-ce5d57d08d67",
                            () => { Console.WriteLine("saepe"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "eveniet"),
                    new ActionToggle("similique aut illum",
                            "5fc8768e-82d5-f1a8-bdc0-e48a59d8f770",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "voluptate")]),
                    new AttributesDictionary(),
                    true,
                    "esse",
                    "placeat",
                    new GraphicOrigin(Guid.NewGuid(),
                        "aliquid",
                        1)),
            new Graphic(new Extent(123.4249,
                        6.1150,
                        76.0123,
                        -73.8388,
                        805.4416,
                        780.9919,
                        707.8741,
                        694.1850,
                    new SpatialReference(6,
                            "consectetur",
                            "et",
                            "quibusdam"),
                        true,
                        true),
                new TextSymbol("ad sunt qui",
                    new MapColor(46, 84, 201),
                    new MapColor(224, 68, 167),
                        new Dimension(821.9175),
                    new MapFont(new Dimension(766.4714),
                            "Bookman",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        59.9010,
                    new MapColor(59, 159, 51),
                    new MapColor(205, 149, 252),
                        171.9745,
                    HorizontalAlignment.Center,
                        true,
                        159.7495,
                        new Dimension(122.2471),
                        true),
                new PopupTemplate("vel aspernatur est",
                        "debitis",
                        ["sit",
                            "aut"],
                    [new FieldInfo("id",
                            "velit",
                            "sunt",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new AttachmentsPopupContent("est sequi omnis",
                            "eius quod sint mollitia",
                            AttachmentsPopupContentDisplayType.Preview),
                    new FieldsPopupContent([new FieldInfo("password",
                                "quidem",
                                "mollitia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("createdAt",
                                "aperiam",
                                "nisi",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Sum)],
                            "omnis eum magnam omnis sed esse atque",
                            "officia a quae"),
                    new RelationshipPopupContent("assumenda pariatur quam",
                            "pariatur neque eius placeat eum et",
                            4,
                            "unde",
                        [new RelatedRecordsInfoFieldOrder("sed",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("est",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("quas",
                            OrderBy.Asc)],
                            2)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "phone",
                            "unde quis voluptas",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "name",
                            "autem autem aspernatur",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("fugiat et tempore",
                            "https://picsum.photos/640/480/?image=792",
                            "c96dc25d-8c59-e32d-b737-f0e4ff597522",
                            () => { Console.WriteLine("optio"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "veniam")]),
                    new AttributesDictionary(),
                    true,
                    "asperiores",
                    "molestiae",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ut",
                        8)),
            new Graphic(new Polygon([new MapPath([new MapPoint([571.4914,
                            512.7357,
                            500.1013,
                            622.9302]),
                        new MapPoint([702.1826,
                            395.1144,
                            571.0810,
                            748.1330]),
                        new MapPoint([606.6115,
                            342.7820])]),
                        new MapPath([new MapPoint([420.7953,
                                692.3503,
                                65.6143,
                                513.5904]),
                            new MapPoint([810.6642,
                                457.9827])]),
                        new MapPath([new MapPoint([295.4989,
                                779.7605]),
                            new MapPoint([379.2110,
                                13.7808,
                                746.0046,
                                692.1335]),
                            new MapPoint([451.7761,
                                937.9878]),
                            new MapPoint([700.2403,
                                209.8488])]),
                        new MapPath([new MapPoint([510.9171,
                                666.2832]),
                            new MapPoint([604.8510,
                                456.8445,
                                758.4678,
                                736.5563])])],
                    new SpatialReference(3,
                            "sed",
                            "quidem",
                            "asperiores"),
                    new Point(87.3036,
                            57.4466,
                            150.3415,
                            85.1021,
                            798.1951,
                        new SpatialReference(1,
                                "veritatis",
                                "voluptate",
                                "perspiciatis"),
                            true,
                            true,
                            426.2074),
                        true,
                        true,
                        true),
                new TextSymbol("reiciendis ipsum non",
                    new MapColor(31, 154, 5),
                    new MapColor(74, 145, 166),
                        new Dimension(471.7729),
                    new MapFont(new Dimension(863.7339),
                            "Helvetica",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        321.7289,
                    new MapColor(199, 170, 53),
                    new MapColor(132, 218, 16),
                        707.3072,
                    HorizontalAlignment.Right,
                        true,
                        748.9001,
                        new Dimension(689.2247),
                        true),
                new PopupTemplate("aliquam ullam aut",
                        "mollitia",
                        ["libero",
                            "deserunt",
                            "ipsam"],
                    [new FieldInfo("title",
                            "saepe",
                            "expedita",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("updatedAt",
                            "voluptas",
                            "ut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "et",
                                "doloremque beatae quam"))],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "title",
                            "nobis delectus delectus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "password",
                            "omnis est in",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "updatedAt",
                            "molestiae assumenda aut",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "password",
                            "ut asperiores quae",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("quaerat odio qui",
                            "3727204f-2505-d8b1-f4a3-9853115c2f06",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "accusantium"),
                    new ActionToggle("aliquid temporibus ut",
                            "cec3be72-f77a-e55c-1c54-063181ae2941",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "ipsum")]),
                    new AttributesDictionary(),
                    true,
                    "iste",
                    "perferendis",
                    new GraphicOrigin(Guid.NewGuid(),
                        "saepe",
                        1)),
            new Graphic(new Polygon([new MapPath([new MapPoint([764.2634,
                            349.2958,
                            103.4614]),
                        new MapPoint([263.6645,
                            544.6645]),
                        new MapPoint([500.6685,
                            316.6145]),
                        new MapPoint([291.7581,
                            316.7024,
                            401.9273,
                            248.3211])])],
                    new SpatialReference(7,
                            "earum",
                            "soluta",
                            "aliquam"),
                    new Point(68.5437,
                            -73.9472,
                            -132.7071,
                            41.9831,
                            237.1634,
                        new SpatialReference(8,
                                "accusantium",
                                "consequuntur",
                                "sunt"),
                            true,
                            true,
                            377.1183),
                        true,
                        true,
                        true),
                new TextSymbol("deleniti repudiandae eaque",
                    new MapColor(240, 10, 111),
                    new MapColor(205, 164, 20),
                        new Dimension(622.1682),
                    new MapFont(new Dimension(617.1813),
                            "Courier New",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        786.9985,
                    new MapColor(193, 189, 74),
                    new MapColor(120, 159, 132),
                        797.4509,
                    HorizontalAlignment.Center,
                        true,
                        663.2877,
                        new Dimension(520.7451),
                        true),
                new PopupTemplate("quia consequatur ut",
                        "ratione",
                        ["ea",
                            "qui",
                            "impedit",
                            "amet"],
                    [new FieldInfo("phone",
                            "occaecati",
                            "in",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("group",
                            "esse",
                            "corrupti",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new AttachmentsPopupContent("quo molestiae omnis",
                            "eligendi molestias tempora dolores incidunt",
                            AttachmentsPopupContentDisplayType.Auto),
                    new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                "incidunt",
                                "eum inventore culpa"))],
                    [new ExpressionInfo("return Date();",
                            "email",
                            "quod et rerum",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("voluptatibus et quia",
                            "183ba08b-5722-f4b1-89e3-7d185292c131",
                            () => { Console.WriteLine("assumenda"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "voluptatem")]),
                    new AttributesDictionary(),
                    true,
                    "aliquid",
                    "delectus",
                    new GraphicOrigin(Guid.NewGuid(),
                        "doloremque",
                        4))];
        await featureLayer.SetSource(testSource);
        var source = await featureLayer.GetSource();
        Assert.AreEqual(testSource, source);
        ListMode testListMode = ListMode.Hide;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("sit itaque et",
                    "beatae",
                    ["sint",
                        "minus",
                        "architecto",
                        "sunt"],
                [new FieldInfo("id",
                        "fuga",
                        "aut",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.ShortDateLe),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("updatedAt",
                        "sed",
                        "aspernatur",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.ShortDateShortTime24),
                        true,
                        true,
                    StatisticType.Max),
                new FieldInfo("group",
                        "voluptatem",
                        "aut",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(5,
                            true,
                        DateFormat.Year),
                        true,
                        true,
                    StatisticType.Stddev)],
                [new FieldsPopupContent([new FieldInfo("createdAt",
                            "ratione",
                            "mollitia",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("category",
                            "est",
                            "nihil",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("group",
                            "quis",
                            "culpa",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Min)],
                        "nisi quod et rerum accusamus maiores",
                        "error suscipit ut"),
                new RelationshipPopupContent("accusantium reiciendis vero",
                        "minima aliquam consequuntur vel magnam",
                        7,
                        "voluptas",
                    [new RelatedRecordsInfoFieldOrder("deserunt",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("aut",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("sunt",
                        OrderBy.Desc)],
                        8),
                new TextPopupContent("voluptatem dolores fuga")],
                [new ExpressionInfo("return $feature['FieldName'];",
                        "createdAt",
                        "dolorem soluta voluptas",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "comment",
                        "minima aperiam saepe",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("voluptate numquam adipisci",
                        "cb89f702-ee70-778b-3673-7a57f1dcc69c",
                        () => { Console.WriteLine("iure"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "email",
                        "et")]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.Darken;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Layer testDynamicDataSource = new VectorTileLayer("deleniti",
                BlendMode.Screen,
                    default,
                    new Effect("ea",
                        11182662.2152),
                new Extent(41.5670,
                        65.1590,
                        -72.0688,
                        -28.4939,
                        110.8689,
                        163.9020,
                        286.3325,
                        14.8904,
                    new SpatialReference(5,
                            "ut",
                            "natus",
                            "porro"),
                        true,
                        true),
                new Extent(143.8967,
                        174.0221,
                        -20.9421,
                        -82.5411,
                        661.7061,
                        764.7311,
                        893.3904,
                        961.0374,
                    new SpatialReference(3,
                            "deleniti",
                            "fugiat",
                            "repellendus"),
                        true,
                        true),
                ListMode.Hide,
                    12758464.6341,
                    29380.8499,
                    0.8574,
                    true,
                new PortalItem(PortalItemAccess.Shared,
                        "doloribus",
                        "excepturi",
                        377.4114,
                        ["omnis",
                            "magnam"],
                        new DateTime(2011, 6, 5, 18, 51, 1),
                        "eveniet",
                        "qui eos excepturi ducimus dicta repudiandae repellendus",
                    new Extent(-99.1227,
                            0.2207,
                            -27.5619,
                            82.1964,
                            500.5664,
                            181.5143,
                            138.2649,
                            421.3035,
                        new SpatialReference(3,
                                "aut",
                                "enim",
                                "illo"),
                            true,
                            true),
                        ["nulla",
                            "sequi",
                            "quae"],
                        "debitis",
                        new DateTime(2005, 2, 26, 12, 49, 43),
                        "avatar",
                        335.6270),
                new SpatialReference(8,
                        "qui",
                        "eius",
                        "odio"),
                    "temporibus");
        await featureLayer.SetDynamicDataSource(testDynamicDataSource);
        var dynamicDataSource = await featureLayer.GetDynamicDataSource();
        Assert.AreEqual(testDynamicDataSource, dynamicDataSource);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "rerum aut harum"),
                ElevationInfoMode.OnTheGround,
                    221.4333,
                ElevationUnit.UsFeet);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("molestias",
                    33888368.8097)],
                    true,
                new FeatureFilter(903.6318,
                    new Polygon([new MapPath([new MapPoint([968.7643,
                                218.0078]),
                            new MapPoint([152.7009,
                                147.6288,
                                356.6069])]),
                            new MapPath([new MapPoint([431.4112,
                                    248.4582,
                                    685.2419,
                                    509.4879]),
                                new MapPoint([794.1599,
                                    196.8282,
                                    805.1798,
                                    221.1020]),
                                new MapPoint([598.8860,
                                    417.8917,
                                    427.9926,
                                    455.0871]),
                                new MapPoint([614.5841,
                                    345.1333])]),
                            new MapPath([new MapPoint([417.0408,
                                    825.2921,
                                    834.0039,
                                    114.7803]),
                                new MapPoint([639.6109,
                                    137.6745,
                                    691.3775]),
                                new MapPoint([203.3600,
                                    323.7783,
                                    262.8790])]),
                            new MapPath([new MapPoint([398.5373,
                                    409.6176]),
                                new MapPoint([661.0052,
                                    596.5559]),
                                new MapPoint([272.4346,
                                    844.6258,
                                    847.4362,
                                    437.3382]),
                                new MapPoint([87.8334,
                                    201.5236,
                                    36.0655,
                                    229.2327])])],
                        new SpatialReference(8,
                                "laborum",
                                "sequi",
                                "dolorem"),
                        new Point(23.7038,
                                -86.8305,
                                38.7106,
                                -80.0929,
                                993.8819,
                            new SpatialReference(9,
                                    "qui",
                                    "cumque",
                                    "quis"),
                                true,
                                true,
                                874.0732),
                            true,
                            true,
                            true),
                        [9,
                            4,
                            1],
                    SpatialRelationship.Crosses,
                    new TimeExtent(new DateTime(2010, 1, 18, 14, 21, 54),
                            new DateTime(2005, 8, 12, 15, 34, 35)),
                        QueryUnits.UsNauticalMiles,
                        "Country = 'Canada'"),
                    [new Effect("quo",
                        31375745.0771),
                        new Effect("magni",
                            11896767.7806),
                        new Effect("tempora",
                            35567051.6335)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "id",
                    "commodi",
                    "consequatur beatae quia quos asperiores minima",
                    7,
                    true,
                    true,
                    new { Value = "et" },
                FieldValueType.DateAndTime,
                new InheritedDomain("email")),
            new Field(default,
                    "createdAt",
                    "et",
                    "error eum eos nulla iusto suscipit perferendis",
                    4,
                    true,
                    true,
                    new { Value = "fuga" },
                FieldValueType.UniqueIdentifier,
                new InheritedDomain("title"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("inventore");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("laborum aut debitis",
                    "quis doloribus illo consequatur cum",
                    true,
                    [new FieldElement("token",
                        "aut",
                        "quo natus incidunt et hic voluptas",
                        "aliquid",
                        "a",
                        "accusantium",
                        "soluta",
                        new CodedValueDomain<string>(),
                        new BarcodeScannerInput())],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "createdAt",
                        "ea ut corrupti",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "status",
                        "est provident quaerat",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature['FieldName'];",
                        "createdAt",
                        "dolor omnis inventore",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "token",
                        "et magni et",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(16.8106,
                    167.7860,
                    -29.2024,
                    -64.1749,
                    497.6581,
                    589.2639,
                    296.5173,
                    931.2997,
                new SpatialReference(2,
                        "enim",
                        "dolorem",
                        "beatae"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveAlong,
                    "magnam",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    49882707.9879,
                    5916.1792,
                    true,
                    new Dimension(649.7987),
                new TextSymbol("et occaecati quidem",
                    new MapColor(137, 180, 138),
                    new MapColor(58, 153, 22),
                        new Dimension(640.3101),
                    new MapFont(new Dimension(791.3192),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        744.4274,
                    new MapColor(57, 114, 196),
                    new MapColor(206, 245, 58),
                        560.9525,
                    HorizontalAlignment.Center,
                        true,
                        31.3222,
                        new Dimension(473.1066),
                        true),
                    true,
                    "City = 'Toronto'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("et",
                SortOrder.Descending,
                    "ut"),
            new OrderedLayerOrderBy("libero",
                SortOrder.Descending,
                    "et")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                    new AlgorithmicColorRamp(Algorithm.Hsv,
                        new MapColor(188, 239, 231),
                        new MapColor(80, 177, 40)),
                        985.7103,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(833.5660,
                                123.0756),
                        new AuthoringInfoField1ClassBreakInfos(618.7994,
                                538.7883)],
                            "praesentium",
                            "sint",
                            "officia"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(174.1462,
                                630.8720),
                        new AuthoringInfoField1ClassBreakInfos(759.3625,
                                454.8933),
                        new AuthoringInfoField1ClassBreakInfos(26.2125,
                                315.6974),
                        new AuthoringInfoField1ClassBreakInfos(668.7191,
                                938.9774)],
                            "vitae",
                            "dolore",
                            "similique"),
                        ["nisi",
                            "iusto",
                            "sunt",
                            "corrupti"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "ut",
                        true,
                    LengthUnit.Feet,
                        544.6872,
                        9.6122,
                        648.1465,
                        663.5619),
                new PictureFillSymbol("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0",
                    new Dimension(934.6450),
                    new Dimension(15.7583),
                    new Dimension(393.0325),
                    new Dimension(690.3355),
                    100.6567,
                    50.5886,
                    new Outline(new MapColor(2, 47, 252),
                        new Dimension(311.9613),
                        SimpleLineSymbolStyle.DashDot,
                        Cap.Butt,
                        Join.Miter,
                        new LineSymbolMarker(new MapColor(97, 226, 15),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Circle),
                        966.8115),
                    new MapColor(108, 155, 159)),
                    "molestias",
                    new DefaultSymbol(),
                    "repudiandae",
                    "nulla",
                    "eaque",
                    "enim",
                new UniqueValueRendererLegendOptions("aliquid quo ducimus"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("earum",
                        new TextSymbol("consequatur doloribus voluptates",
                            new MapColor(167, 20, 59),
                            new MapColor(47, 127, 105),
                                new Dimension(603.5881),
                            new MapFont(new Dimension(571.8316),
                                    "Courier New",
                                MapFontStyle.Italic,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                810.7948,
                            new MapColor(198, 50, 66),
                            new MapColor(161, 235, 111),
                                642.2059,
                            HorizontalAlignment.Left,
                                true,
                                298.7555,
                                new Dimension(76.4879),
                                true),
                        [new UniqueValue("aut",
                                "dolores",
                                "atque"),
                        new UniqueValue("soluta",
                                "adipisci",
                                "distinctio"),
                        new UniqueValue("blanditiis",
                                "tenetur",
                                "magni"),
                        new UniqueValue("dolorum",
                                "ratione",
                                "minima")]),
                    new UniqueValueClass("aspernatur",
                        new TextSymbol("repellendus sapiente qui",
                            new MapColor(27, 51, 74),
                            new MapColor(147, 49, 236),
                                new Dimension(958.2910),
                            new MapFont(new Dimension(529.9585),
                                    "Times New Roman",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.Underline),
                                414.8525,
                            new MapColor(49, 58, 23),
                            new MapColor(176, 113, 96),
                                606.5790,
                            HorizontalAlignment.Center,
                                true,
                                518.8871,
                                new Dimension(733.3626),
                                true),
                        [new UniqueValue("est",
                                "expedita",
                                "reiciendis")])],
                        "aut")],
                [new UniqueValueInfo("nihil",
                    new TextSymbol("labore voluptas et",
                        new MapColor(197, 24, 63),
                        new MapColor(214, 159, 148),
                            new Dimension(550.3417),
                        new MapFont(new Dimension(112.5630),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            633.8118,
                        new MapColor(81, 222, 69),
                        new MapColor(10, 226, 87),
                            563.5207,
                        HorizontalAlignment.Left,
                            true,
                            318.9833,
                            new Dimension(346.8890),
                            true),
                        "possimus"),
                new UniqueValueInfo("fuga",
                    new TextSymbol("id quos possimus",
                        new MapColor(66, 109, 149),
                        new MapColor(3, 250, 45),
                            new Dimension(397.2572),
                        new MapFont(new Dimension(542.1469),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            886.0289,
                        new MapColor(216, 144, 166),
                        new MapColor(223, 31, 61),
                            105.7659,
                        HorizontalAlignment.Center,
                            true,
                            512.0614,
                            new Dimension(712.3636),
                            true),
                        "nostrum")],
                    "eum",
                    "esse esse qui");
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(3,
                    "cupiditate",
                    "nobis",
                    "quia");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("nam error sint cupiditate",
                DrawingTool.Triangle,
                    "phone",
                new Graphic(new Point(154.6551,
                            -52.6918,
                            -111.1595,
                            49.3633,
                            54.5349,
                        new SpatialReference(4,
                                "possimus",
                                "quis",
                                "nihil"),
                            true,
                            true,
                            65.0119),
                    new TextSymbol("ut voluptas earum",
                        new MapColor(202, 219, 76),
                        new MapColor(174, 164, 84),
                            new Dimension(831.9974),
                        new MapFont(new Dimension(491.1129),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            113.1875,
                        new MapColor(32, 65, 178),
                        new MapColor(17, 218, 241),
                            732.6206,
                        HorizontalAlignment.Right,
                            true,
                            300.3927,
                            new Dimension(142.4409),
                            true),
                    new PopupTemplate("ipsum quisquam possimus",
                            "sapiente",
                            ["pariatur",
                                "repudiandae",
                                "dolorem",
                                "iste"],
                        [new FieldInfo("password",
                                "aut",
                                "doloremque",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("createdAt",
                                "vero",
                                "consequatur",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new AttachmentsPopupContent("asperiores dignissimos cum",
                                "ab assumenda sequi ex",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "email",
                                "ut ut error",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "title",
                                "sunt repellendus tenetur",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "token",
                                "iste amet qui",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("fugiat sit ipsum",
                                "https://picsum.photos/640/480/?image=158",
                                "9227797a-4440-8535-7385-b94eb0c121bb",
                                () => { Console.WriteLine("odit"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "quis")]),
                        new AttributesDictionary(),
                        true,
                        "cupiditate",
                        "et",
                        new GraphicOrigin(Guid.NewGuid(),
                            "voluptatem",
                            1)),
                    new Thumbnail("iste",
                        "molestias",
                        196.9586,
                        238.4530)),
            new FeatureTemplate("temporibus et aut consequatur consectetur",
                DrawingTool.Rectangle,
                    "email",
                new Graphic(new Polyline([new MapPath([new MapPoint([583.6456,
                                839.7006]),
                            new MapPoint([779.9350,
                                377.2370,
                                270.0277,
                                817.1275])]),
                            new MapPath([new MapPoint([470.0139,
                                    514.1764]),
                                new MapPoint([191.2230,
                                    372.5819])]),
                            new MapPath([new MapPoint([283.7197,
                                    136.1763,
                                    206.8221,
                                    770.7809]),
                                new MapPoint([969.4356,
                                    630.3296,
                                    480.2920]),
                                new MapPoint([211.0692,
                                    325.0907]),
                                new MapPoint([354.4838,
                                    316.8388,
                                    342.5680])])],
                        new SpatialReference(8,
                                "nulla",
                                "quia",
                                "animi"),
                            true,
                            true),
                    new TextSymbol("facilis eaque inventore",
                        new MapColor(138, 60, 99),
                        new MapColor(154, 209, 96),
                            new Dimension(230.8050),
                        new MapFont(new Dimension(997.9408),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            338.1326,
                        new MapColor(180, 114, 98),
                        new MapColor(46, 119, 101),
                            534.8674,
                        HorizontalAlignment.Left,
                            true,
                            370.5038,
                            new Dimension(624.6386),
                            true),
                    new PopupTemplate("qui molestiae quia",
                            "nesciunt",
                            ["rerum",
                                "sit"],
                        [new FieldInfo("createdAt",
                                "magni",
                                "quae",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("title",
                                "sit",
                                "doloribus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("id",
                                "debitis",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("name",
                                "sed",
                                "suscipit",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new TextPopupContent("ad dolores perspiciatis"),
                        new MediaPopupContent("est ullam labore",
                                "omnis rerum natus et debitis necessitatibus in",
                            [new PieChartMediaInfo("totam culpa aspernatur",
                                    "quo",
                                    "aut iusto autem",
                                new ChartMediaInfoValue(["qui",
                                        "officiis",
                                        "nostrum",
                                        "asperiores"],
                                        "eius",
                                        "consequatur",
                                    [new ChartMediaInfoValueSeries("status",
                                            "alias",
                                            182.0155),
                                    new ChartMediaInfoValueSeries("title",
                                            "molestiae",
                                            942.7066),
                                    new ChartMediaInfoValueSeries("token",
                                            "explicabo",
                                            84.9029),
                                    new ChartMediaInfoValueSeries("category",
                                            "doloremque",
                                            150.1974)],
                                    [new MapColor(184, 168, 17),
                                    new MapColor(253, 239, 50),
                                    new MapColor(36, 204, 35)])),
                            new LineChartMediaInfo("quibusdam eos modi",
                                    "sequi",
                                    "amet doloremque tempore",
                                new ChartMediaInfoValue(["possimus",
                                        "ut"],
                                        "in",
                                        "sit",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "doloribus",
                                            391.8064),
                                    new ChartMediaInfoValueSeries("id",
                                            "enim",
                                            53.9418),
                                    new ChartMediaInfoValueSeries("phone",
                                            "et",
                                            634.0599),
                                    new ChartMediaInfoValueSeries("updatedAt",
                                            "earum",
                                            896.1555)],
                                    [new MapColor(37, 178, 218),
                                    new MapColor(201, 226, 110),
                                    new MapColor(227, 97, 20)]))],
                                9)],
                        [new ExpressionInfo("return $feature.Name;",
                                "name",
                                "necessitatibus laborum numquam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "email",
                                "illo a earum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "updatedAt",
                                "accusamus molestiae sed",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("consequuntur repellat rerum",
                                "d3d4887e-6efc-cce0-2e14-607529177269",
                                () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "delectus"),
                        new ActionButton("repellat ut ad",
                                "https://picsum.photos/640/480/?image=975",
                                "a8484775-4b88-8946-aad6-9c0b3b474e27",
                                () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "aut"),
                        new ActionToggle("numquam eum et",
                                "c8342386-42b5-f16f-a73d-47e92f61b185",
                                () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "ut"),
                        new ActionButton("inventore inventore et",
                                "https://picsum.photos/640/480/?image=1056",
                                "3ba0cd36-cf9a-ff0f-ba29-715875ba1655",
                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "atque")]),
                        new AttributesDictionary(),
                        true,
                        "earum",
                        "cum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nostrum",
                            5)),
                    new Thumbnail("corrupti",
                        "rerum",
                        58.8557,
                        17.0799)),
            new FeatureTemplate("fugiat in aperiam sint nostrum",
                DrawingTool.Triangle,
                    "createdAt",
                new Graphic(new Extent(-104.3621,
                            -68.2176,
                            52.5425,
                            -60.9901,
                            801.7575,
                            913.3172,
                            453.5370,
                            239.8293,
                        new SpatialReference(7,
                                "eligendi",
                                "distinctio",
                                "sapiente"),
                            true,
                            true),
                    new TextSymbol("nostrum et debitis",
                        new MapColor(151, 30, 196),
                        new MapColor(214, 166, 210),
                            new Dimension(533.6628),
                        new MapFont(new Dimension(294.2870),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            753.3209,
                        new MapColor(129, 84, 117),
                        new MapColor(128, 13, 15),
                            953.0510,
                        HorizontalAlignment.Left,
                            true,
                            842.5497,
                            new Dimension(389.9863),
                            true),
                    new PopupTemplate("eos culpa sapiente",
                            "voluptas",
                            ["aut",
                                "aut",
                                "ea"],
                        [new FieldInfo("name",
                                "eum",
                                "quis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("phone",
                                "consectetur",
                                "deserunt",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Max)],
                        [new FieldsPopupContent([new FieldInfo("category",
                                    "eligendi",
                                    "labore",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "aut eius qui ullam dolorum inventore voluptatem",
                                "natus enim ut"),
                        new TextPopupContent("voluptatem eos corporis"),
                        new FieldsPopupContent([new FieldInfo("name",
                                    "esse",
                                    "quo",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("status",
                                    "ut",
                                    "aliquam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "voluptates aliquam consectetur illo quia",
                                "officia suscipit id")],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "updatedAt",
                                "laudantium rerum officiis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("minima eos nemo",
                                "85cf6d16-c2ca-0a59-9017-3f60c8546d1b",
                                () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "quis"),
                        new ActionToggle("nesciunt a voluptatibus",
                                "f9b9aa98-ab97-d6dd-edea-8f4ace5efdef",
                                () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "eum"),
                        new ActionButton("asperiores voluptatum doloremque",
                                "https://picsum.photos/640/480/?image=1031",
                                "7b1b2c30-fc9b-0d83-391f-638778215f0c",
                                () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "esse")]),
                        new AttributesDictionary(),
                        true,
                        "neque",
                        "occaecati",
                        new GraphicOrigin(Guid.NewGuid(),
                            "suscipit",
                            1)),
                    new Thumbnail("doloremque",
                        "inventore",
                        258.9895,
                        32.1570))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2003, 7, 6, 11, 3, 56),
                    new DateTime(2019, 9, 25, 11, 17, 16));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("molestiae",
                    "quia",
                new TimeExtent(new DateTime(2007, 3, 20, 5, 19, 4),
                        new DateTime(2020, 6, 20, 5, 33, 11)),
                new TimeInterval(TemporalTime.Minutes,
                        850.6902),
                    [new DateTime(2019, 10, 11, 2, 47, 0),
                        new DateTime(2022, 4, 4, 16, 7, 9),
                        new DateTime(2000, 6, 9, 21, 40, 50),
                        new DateTime(2005, 5, 24, 6, 30, 28)],
                    "Australia/Perth",
                    "dignissimos");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Milliseconds,
                    806.2764);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("09833793-27af-2894-622d-1779fa805499",
                    "avatar",
                [new FeatureTemplate("voluptatem rem dolore ut odit",
                    DrawingTool.Arrow,
                        "id",
                    new Graphic(new Point(-8.5498,
                                5.9334,
                                2.5765,
                                16.1927,
                                538.4475,
                            new SpatialReference(4,
                                    "quos",
                                    "ut",
                                    "eum"),
                                true,
                                true,
                                487.8359),
                        new TextSymbol("magnam nulla porro",
                            new MapColor(42, 239, 44),
                            new MapColor(130, 133, 198),
                                new Dimension(828.8685),
                            new MapFont(new Dimension(332.1405),
                                    "Bookman",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                407.0072,
                            new MapColor(25, 212, 194),
                            new MapColor(152, 6, 1),
                                661.3923,
                            HorizontalAlignment.Right,
                                true,
                                59.8478,
                                new Dimension(661.4846),
                                true),
                        new PopupTemplate("sit facere magnam",
                                "laborum",
                                ["quae",
                                    "totam"],
                            [new FieldInfo("password",
                                    "officiis",
                                    "illo",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("createdAt",
                                    "vel",
                                    "reprehenderit",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                            [new FieldsPopupContent([new FieldInfo("comment",
                                        "eum",
                                        "iusto",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("email",
                                        "ducimus",
                                        "perspiciatis",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("avatar",
                                        "sed",
                                        "voluptatem",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "reiciendis iusto et sapiente et alias",
                                    "quae maxime provident"),
                            new FieldsPopupContent([new FieldInfo("status",
                                        "consequuntur",
                                        "vitae",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                    "unde accusamus rerum qui ipsum voluptatum",
                                    "facere tempora magnam")],
                            [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "category",
                                    "sapiente possimus ut",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "name",
                                    "soluta asperiores suscipit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "status",
                                    "temporibus assumenda exercitationem",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "updatedAt",
                                    "voluptatem dolorem dolorem",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("dolor unde eius",
                                    "dd765187-ee16-d84e-c3a3-c65f792bbba6",
                                    () => { Console.WriteLine("modi"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "group",
                                    "eius"),
                            new ActionToggle("aliquam sunt odio",
                                    "1b98b4c4-115c-aef4-7fa3-0260237068c4",
                                    () => { Console.WriteLine("at"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "id",
                                    "iure"),
                            new ActionToggle("laudantium sint eius",
                                    "c7b1cc85-e39c-de97-0675-9a709e1bdce9",
                                    () => { Console.WriteLine("distinctio"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "comment",
                                    "dolor"),
                            new ActionButton("numquam perferendis a",
                                    "https://picsum.photos/640/480/?image=712",
                                    "e61dd597-4d93-357b-d130-e37fe5512ab1",
                                    () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                    "id",
                                    true,
                                    true,
                                    true,
                                    "iure")]),
                            new AttributesDictionary(),
                            true,
                            "quasi",
                            "ab",
                            new GraphicOrigin(Guid.NewGuid(),
                                "vel",
                                2)),
                        new Thumbnail("doloribus",
                            "aliquam",
                            73.9349,
                            264.4281)),
                new FeatureTemplate("error qui quaerat est et",
                    DrawingTool.RightArrow,
                        "password",
                    new Graphic(new Polygon([new MapPath([new MapPoint([939.1166,
                                    407.2823,
                                    384.2289,
                                    200.8720]),
                                new MapPoint([570.1067,
                                    86.3481,
                                    669.3389])]),
                                new MapPath([new MapPoint([521.2845,
                                        841.6754,
                                        490.3791,
                                        780.8826]),
                                    new MapPoint([678.0497,
                                        109.6538,
                                        385.4332,
                                        468.3732])])],
                            new SpatialReference(9,
                                    "beatae",
                                    "modi",
                                    "consequatur"),
                            new Point(-24.8358,
                                    82.4991,
                                    -135.0663,
                                    15.8603,
                                    405.3115,
                                new SpatialReference(6,
                                        "enim",
                                        "neque",
                                        "deleniti"),
                                    true,
                                    true,
                                    80.7484),
                                true,
                                true,
                                true),
                        new TextSymbol("mollitia cupiditate dicta",
                            new MapColor(112, 234, 254),
                            new MapColor(160, 71, 185),
                                new Dimension(876.6397),
                            new MapFont(new Dimension(899.5849),
                                    "Palatino",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                829.3968,
                            new MapColor(65, 147, 37),
                            new MapColor(58, 37, 18),
                                584.7386,
                            HorizontalAlignment.Center,
                                true,
                                728.2140,
                                new Dimension(842.7630),
                                true),
                        new PopupTemplate("laudantium porro in",
                                "quasi",
                                ["cupiditate",
                                    "sit",
                                    "dolor",
                                    "sunt"],
                            [new FieldInfo("id",
                                    "expedita",
                                    "consequatur",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("title",
                                    "et",
                                    "voluptatem",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Var)],
                            [new TextPopupContent("corporis architecto similique"),
                            new TextPopupContent("vero laudantium et"),
                            new AttachmentsPopupContent("est quibusdam in",
                                    "est quasi ab quod",
                                    AttachmentsPopupContentDisplayType.Auto)],
                            [new ExpressionInfo("return Date();",
                                    "email",
                                    "velit reiciendis possimus",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "status",
                                    "ut vero et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "updatedAt",
                                    "ipsum commodi hic",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("est corporis sed",
                                    "747a3405-772a-e203-74a9-767efca3f0f4",
                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "avatar",
                                    "maiores")]),
                            new AttributesDictionary(),
                            true,
                            "eum",
                            "in",
                            new GraphicOrigin(Guid.NewGuid(),
                                "corrupti",
                                9)),
                        new Thumbnail("et",
                            "ad",
                            133.2357,
                            49.9330)),
                new FeatureTemplate("non aut quis fuga numquam velit sint",
                    DrawingTool.RightArrow,
                        "email",
                    new Graphic(new Extent(-42.8291,
                                168.3737,
                                24.2991,
                                -47.4090,
                                103.1975,
                                831.0742,
                                661.2047,
                                884.1960,
                            new SpatialReference(6,
                                    "impedit",
                                    "libero",
                                    "aut"),
                                true,
                                true),
                        new TextSymbol("maxime maiores velit",
                            new MapColor(240, 48, 100),
                            new MapColor(195, 15, 71),
                                new Dimension(331.5506),
                            new MapFont(new Dimension(647.0374),
                                    "Bookman",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                997.9204,
                            new MapColor(190, 80, 113),
                            new MapColor(200, 148, 93),
                                464.0599,
                            HorizontalAlignment.Left,
                                true,
                                67.3912,
                                new Dimension(309.6763),
                                true),
                        new PopupTemplate("beatae velit et",
                                "sapiente",
                                ["enim",
                                    "temporibus"],
                            [new FieldInfo("createdAt",
                                    "ut",
                                    "sit",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("title",
                                    "commodi",
                                    "distinctio",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Min)],
                            [new TextPopupContent("dolorum rerum rerum"),
                            new MediaPopupContent("inventore debitis nisi",
                                    "laboriosam explicabo possimus iusto",
                                [new ImageMediaInfo("et tempora placeat",
                                        "maxime",
                                        "at voluptatem nesciunt",
                                    new ImageMediaInfoValue("https://vilma.name",
                                            "https://lawrence.name"),
                                        307.4694)],
                                    4)],
                            [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "email",
                                    "quas et suscipit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "password",
                                    "et qui nihil",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "avatar",
                                    "qui sit labore",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("eos expedita esse",
                                    "b8701697-d1f8-515a-d5f2-4356a63198fd",
                                    () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "group",
                                    "natus"),
                            new ActionToggle("placeat quo cum",
                                    "e4a98dc4-671f-1005-4f73-19ee929d2e56",
                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "name",
                                    "aspernatur"),
                            new ActionToggle("eum omnis non",
                                    "67a41f60-5809-e662-b5b1-f59df9a2946e",
                                    () => { Console.WriteLine("minus"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "id",
                                    "vero"),
                            new ActionToggle("ratione laboriosam ipsa",
                                    "b9b35572-c92f-b789-8a5c-00bb4c016f7f",
                                    () => { Console.WriteLine("modi"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "dicta")]),
                            new AttributesDictionary(),
                            true,
                            "odio",
                            "corporis",
                            new GraphicOrigin(Guid.NewGuid(),
                                "sit",
                                2)),
                        new Thumbnail("autem",
                            "ad",
                            192.3084,
                            256.4891))],
                new Dictionary<string, Domain>() {{ "eum", new RangeDomain("eum",
        "ea",
        "updatedAt") },
                { "quia", new RangeDomain("et",
        "eius",
        "token") },
                { "soluta", new InheritedDomain("createdAt") }
                },
                    "modi"),
            new FeatureType("2753feff-8cf2-7118-7255-9fe75dd9fc79",
                    "category",
                [new FeatureTemplate("iure qui sunt vel",
                    DrawingTool.Polygon,
                        "name",
                    new Graphic(new Polyline([new MapPath([new MapPoint([790.8505,
                                    400.0625,
                                    340.1222]),
                                new MapPoint([185.4903,
                                    805.4587]),
                                new MapPoint([907.4811,
                                    572.5043])])],
                            new SpatialReference(1,
                                    "qui",
                                    "nihil",
                                    "pariatur"),
                                true,
                                true),
                        new TextSymbol("eligendi repellendus est",
                            new MapColor(118, 168, 174),
                            new MapColor(40, 67, 88),
                                new Dimension(326.1657),
                            new MapFont(new Dimension(586.4897),
                                    "Palatino",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.Underline),
                                270.2827,
                            new MapColor(150, 244, 221),
                            new MapColor(139, 120, 89),
                                598.0472,
                            HorizontalAlignment.Left,
                                true,
                                546.8268,
                                new Dimension(213.9919),
                                true),
                        new PopupTemplate("aut qui amet",
                                "et",
                                ["quia",
                                    "molestiae",
                                    "id"],
                            [new FieldInfo("token",
                                    "voluptatem",
                                    "voluptate",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Var)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "est",
                                        "qui repudiandae eligendi"))],
                            [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "group",
                                    "qui odit molestiae",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "updatedAt",
                                    "beatae quisquam enim",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("quisquam voluptas quia",
                                    "https://picsum.photos/640/480/?image=355",
                                    "2a04eaaf-4b9e-8b1a-3bd6-bd411ca2b221",
                                    () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "libero"),
                            new ActionButton("accusamus aut sed",
                                    "https://picsum.photos/640/480/?image=174",
                                    "73f5dfbb-d628-2a4a-3d2d-e7e47aa3adc4",
                                    () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                                    "name",
                                    true,
                                    true,
                                    true,
                                    "quasi"),
                            new ActionButton("quos qui ea",
                                    "https://picsum.photos/640/480/?image=639",
                                    "acb99ebf-6c96-1dff-1475-5c62f96638be",
                                    () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                    "email",
                                    true,
                                    true,
                                    true,
                                    "est"),
                            new ActionToggle("rerum sint quibusdam",
                                    "2d6719f6-2a0f-8487-22a3-9fe2813ad6ce",
                                    () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "avatar",
                                    "quae")]),
                            new AttributesDictionary(),
                            true,
                            "similique",
                            "omnis",
                            new GraphicOrigin(Guid.NewGuid(),
                                "odio",
                                2)),
                        new Thumbnail("unde",
                            "qui",
                            280.8002,
                            16.5193)),
                new FeatureTemplate("tempore officiis quam magnam et natus",
                    DrawingTool.Rectangle,
                        "name",
                    new Graphic(new Extent(51.9269,
                                -83.7380,
                                -42.4175,
                                -82.1006,
                                12.0577,
                                130.2046,
                                480.5265,
                                758.8919,
                            new SpatialReference(1,
                                    "nulla",
                                    "ullam",
                                    "accusamus"),
                                true,
                                true),
                        new TextSymbol("facilis voluptas repudiandae",
                            new MapColor(101, 220, 165),
                            new MapColor(10, 16, 50),
                                new Dimension(851.5018),
                            new MapFont(new Dimension(165.3599),
                                    "Times New Roman",
                                MapFontStyle.Normal,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                429.6746,
                            new MapColor(234, 179, 147),
                            new MapColor(140, 39, 79),
                                976.3823,
                            HorizontalAlignment.Center,
                                true,
                                284.9372,
                                new Dimension(629.0034),
                                true),
                        new PopupTemplate("velit velit aut",
                                "suscipit",
                                ["pariatur",
                                    "beatae",
                                    "voluptas",
                                    "similique"],
                            [new FieldInfo("email",
                                    "distinctio",
                                    "quis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("email",
                                    "quam",
                                    "quas",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("updatedAt",
                                    "illum",
                                    "consectetur",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("category",
                                    "accusamus",
                                    "dignissimos",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "rerum",
                                        "dignissimos ut labore"))],
                            [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "group",
                                    "sint dolorem nobis",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "id",
                                    "debitis debitis odio",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "category",
                                    "voluptatem maxime nihil",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("magni in voluptas",
                                    "https://picsum.photos/640/480/?image=1069",
                                    "99d62283-0d21-6619-354e-157541ffbe4e",
                                    () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                    "title",
                                    true,
                                    true,
                                    true,
                                    "adipisci")]),
                            new AttributesDictionary(),
                            true,
                            "consequuntur",
                            "ipsa",
                            new GraphicOrigin(Guid.NewGuid(),
                                "earum",
                                8)),
                        new Thumbnail("enim",
                            "placeat",
                            294.0278,
                            174.8368)),
                new FeatureTemplate("aspernatur qui dicta autem nam labore omnis",
                    DrawingTool.Circle,
                        "phone",
                    new Graphic(new Extent(91.1363,
                                132.6004,
                                10.9617,
                                -68.9157,
                                672.0772,
                                584.3614,
                                724.0354,
                                190.8724,
                            new SpatialReference(2,
                                    "omnis",
                                    "deleniti",
                                    "voluptatibus"),
                                true,
                                true),
                        new TextSymbol("quia unde vitae",
                            new MapColor(29, 12, 120),
                            new MapColor(243, 21, 21),
                                new Dimension(581.8103),
                            new MapFont(new Dimension(884.5056),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                395.3756,
                            new MapColor(53, 172, 243),
                            new MapColor(113, 204, 231),
                                898.6934,
                            HorizontalAlignment.Left,
                                true,
                                469.8406,
                                new Dimension(909.2737),
                                true),
                        new PopupTemplate("ipsam mollitia quam",
                                "consequatur",
                                ["perferendis",
                                    "mollitia",
                                    "in",
                                    "voluptas"],
                            [new FieldInfo("name",
                                    "maiores",
                                    "ducimus",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("comment",
                                    "ut",
                                    "consequatur",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("group",
                                    "quisquam",
                                    "cumque",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                            [new FieldsPopupContent([new FieldInfo("status",
                                        "inventore",
                                        "aut",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("createdAt",
                                        "sapiente",
                                        "magni",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("email",
                                        "veniam",
                                        "dolores",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("status",
                                        "quia",
                                        "cupiditate",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                    "dolorem adipisci ipsum necessitatibus quibusdam aut",
                                    "natus veritatis libero"),
                            new AttachmentsPopupContent("natus numquam sapiente",
                                    "sed in quos sequi quia voluptatibus",
                                    AttachmentsPopupContentDisplayType.Preview)],
                            [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "updatedAt",
                                    "quam eos voluptatem",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "updatedAt",
                                    "nulla iste repellendus",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("iusto quas quae",
                                    "https://picsum.photos/640/480/?image=1029",
                                    "584ea16c-a236-a9eb-1589-574299828a52",
                                    () => { Console.WriteLine("distinctio"); return Task.CompletedTask; },
                                    "token",
                                    true,
                                    true,
                                    true,
                                    "eos"),
                            new ActionToggle("qui ut harum",
                                    "5359c46f-f4a8-bbb1-8ed4-961b84331ab7",
                                    () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "avatar",
                                    "non")]),
                            new AttributesDictionary(),
                            true,
                            "voluptatem",
                            "enim",
                            new GraphicOrigin(Guid.NewGuid(),
                                "similique",
                                2)),
                        new Thumbnail("excepturi",
                            "enim",
                            183.1300,
                            261.2436)),
                new FeatureTemplate("consectetur molestias cumque ut eaque",
                    DrawingTool.LeftArrow,
                        "group",
                    new Graphic(new Polyline([new MapPath([new MapPoint([33.8437,
                                    205.4875]),
                                new MapPoint([374.1766,
                                    643.9551,
                                    153.0383,
                                    793.5206])]),
                                new MapPath([new MapPoint([398.1052,
                                        885.2459,
                                        886.8433,
                                        849.5986]),
                                    new MapPoint([267.4578,
                                        627.3069,
                                        445.7910]),
                                    new MapPoint([286.4777,
                                        658.5868])]),
                                new MapPath([new MapPoint([70.1705,
                                        724.8407,
                                        889.2843]),
                                    new MapPoint([491.9552,
                                        353.8891,
                                        476.8951])])],
                            new SpatialReference(7,
                                    "officiis",
                                    "voluptas",
                                    "rerum"),
                                true,
                                true),
                        new TextSymbol("voluptas nihil dignissimos",
                            new MapColor(194, 113, 23),
                            new MapColor(56, 144, 190),
                                new Dimension(879.7224),
                            new MapFont(new Dimension(959.7052),
                                    "Garamond",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                863.9145,
                            new MapColor(45, 10, 46),
                            new MapColor(220, 151, 216),
                                876.0773,
                            HorizontalAlignment.Right,
                                true,
                                414.4868,
                                new Dimension(214.9836),
                                true),
                        new PopupTemplate("non qui aliquam",
                                "voluptatum",
                                ["accusamus",
                                    "error"],
                            [new FieldInfo("createdAt",
                                    "odit",
                                    "qui",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("avatar",
                                    "et",
                                    "consectetur",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                            [new RelationshipPopupContent("consequatur corrupti eveniet",
                                    "cupiditate alias voluptatem unde",
                                    9,
                                    "voluptate",
                                [new RelatedRecordsInfoFieldOrder("accusamus",
                                    OrderBy.Desc)],
                                    8)],
                            [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "createdAt",
                                    "aliquid quibusdam aut",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "email",
                                    "illum et nisi",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "status",
                                    "modi dolorem facere",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("neque nihil qui",
                                    "https://picsum.photos/640/480/?image=992",
                                    "db992aaf-d016-c1e5-5d85-a4cd7aef4a8d",
                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                    "id",
                                    true,
                                    true,
                                    true,
                                    "corrupti"),
                            new ActionToggle("officiis optio voluptate",
                                    "cf14f147-2629-9d85-579c-0f5106604243",
                                    () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "category",
                                    "nostrum"),
                            new ActionButton("et tempore quia",
                                    "https://picsum.photos/640/480/?image=969",
                                    "40ef5a0b-a503-1816-abe8-e04b3a4a320e",
                                    () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "culpa")]),
                            new AttributesDictionary(),
                            true,
                            "quasi",
                            "qui",
                            new GraphicOrigin(Guid.NewGuid(),
                                "nihil",
                                3)),
                        new Thumbnail("adipisci",
                            "illo",
                            246.8747,
                            165.4400))],
                new Dictionary<string, Domain>() {{ "sint", new InheritedDomain("name") },
                { "sint", new RangeDomain("optio",
        "laboriosam",
        "password") }
                },
                    "rerum"),
            new FeatureType("825a4715-b924-4221-1d11-8c86d28b525b",
                    "comment",
                [new FeatureTemplate("reiciendis deleniti corrupti ea minus ex",
                    DrawingTool.Freehand,
                        "title",
                    new Graphic(new Polyline([new MapPath([new MapPoint([67.2025,
                                    146.4586]),
                                new MapPoint([635.4186,
                                    950.9632])]),
                                new MapPath([new MapPoint([747.8794,
                                        839.3426,
                                        362.8196,
                                        76.5482]),
                                    new MapPoint([359.1365,
                                        444.6483,
                                        877.0009,
                                        946.7935]),
                                    new MapPoint([54.4281,
                                        130.3247,
                                        569.9785])]),
                                new MapPath([new MapPoint([947.1008,
                                        609.7970,
                                        976.7197]),
                                    new MapPoint([823.4985,
                                        91.5522,
                                        339.7453]),
                                    new MapPoint([687.9493,
                                        548.2163,
                                        581.2130,
                                        766.0578])]),
                                new MapPath([new MapPoint([85.1707,
                                        174.6952,
                                        893.4655,
                                        440.0971]),
                                    new MapPoint([317.6992,
                                        756.0916]),
                                    new MapPoint([252.6675,
                                        245.2912]),
                                    new MapPoint([895.0352,
                                        200.2011,
                                        578.4240,
                                        21.5168])])],
                            new SpatialReference(4,
                                    "aut",
                                    "et",
                                    "quisquam"),
                                true,
                                true),
                        new TextSymbol("et esse in",
                            new MapColor(191, 167, 221),
                            new MapColor(125, 119, 232),
                                new Dimension(635.6718),
                            new MapFont(new Dimension(53.0630),
                                    "Times New Roman",
                                MapFontStyle.Oblique,
                                FontWeight.Normal,
                                TextDecoration.LineThrough),
                                630.8958,
                            new MapColor(78, 72, 249),
                            new MapColor(70, 136, 2),
                                911.7791,
                            HorizontalAlignment.Right,
                                true,
                                410.0525,
                                new Dimension(484.9323),
                                true),
                        new PopupTemplate("voluptatem neque rem",
                                "repellendus",
                                ["similique",
                                    "impedit",
                                    "repudiandae",
                                    "unde"],
                            [new FieldInfo("category",
                                    "laboriosam",
                                    "et",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Count)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                        "accusantium",
                                        "aut voluptatum velit")),
                            new MediaPopupContent("enim laboriosam reprehenderit",
                                    "possimus provident nulla maiores",
                                [new ImageMediaInfo("quam nobis fugit",
                                        "provident",
                                        "saepe sunt optio",
                                    new ImageMediaInfoValue("http://mozell.name",
                                            "http://carrie.biz"),
                                        839.5241)],
                                    7)],
                            [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "avatar",
                                    "blanditiis totam dicta",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "category",
                                    "temporibus voluptas recusandae",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionToggle("corrupti repellendus reiciendis",
                                    "2f25cf0e-5e36-f317-33d6-e182a5f1bc94",
                                    () => { Console.WriteLine("illum"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "phone",
                                    "minus"),
                            new ActionButton("cupiditate et doloribus",
                                    "https://picsum.photos/640/480/?image=138",
                                    "a43b5c26-2e8c-5dce-d155-ff9c54575279",
                                    () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                    "email",
                                    true,
                                    true,
                                    true,
                                    "excepturi"),
                            new ActionButton("non expedita doloribus",
                                    "https://picsum.photos/640/480/?image=533",
                                    "388510f5-b45f-0f8f-9c25-1974ed09b678",
                                    () => { Console.WriteLine("neque"); return Task.CompletedTask; },
                                    "email",
                                    true,
                                    true,
                                    true,
                                    "quia")]),
                            new AttributesDictionary(),
                            true,
                            "quasi",
                            "quae",
                            new GraphicOrigin(Guid.NewGuid(),
                                "sint",
                                1)),
                        new Thumbnail("numquam",
                            "nesciunt",
                            283.2735,
                            11.9825))],
                new Dictionary<string, Domain>() {{ "asperiores", new RangeDomain("dolorum",
        "qui",
        "updatedAt") }
                },
                    "quo"),
            new FeatureType("6c48c80a-d96b-a7fa-e84b-0a52155c7217",
                    "comment",
                [new FeatureTemplate("dolorem harum quidem iure maiores vero nam",
                    DrawingTool.RightArrow,
                        "id",
                    new Graphic(new Polyline([new MapPath([new MapPoint([771.9538,
                                    92.8182,
                                    138.1723]),
                                new MapPoint([860.6280,
                                    751.4701,
                                    467.9129,
                                    26.6787]),
                                new MapPoint([462.1633,
                                    150.3653,
                                    117.4508,
                                    452.2716]),
                                new MapPoint([859.1560,
                                    298.7498])])],
                            new SpatialReference(7,
                                    "molestiae",
                                    "quas",
                                    "fugiat"),
                                true,
                                true),
                        new TextSymbol("ut animi eos",
                            new MapColor(172, 77, 96),
                            new MapColor(21, 251, 176),
                                new Dimension(337.8666),
                            new MapFont(new Dimension(285.5891),
                                    "Garamond",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                487.7725,
                            new MapColor(117, 21, 49),
                            new MapColor(163, 210, 42),
                                170.9804,
                            HorizontalAlignment.Left,
                                true,
                                260.1833,
                                new Dimension(35.4027),
                                true),
                        new PopupTemplate("animi omnis nulla",
                                "nihil",
                                ["placeat",
                                    "porro",
                                    "suscipit"],
                            [new FieldInfo("token",
                                    "in",
                                    "optio",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("avatar",
                                    "consequuntur",
                                    "cupiditate",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new RelationshipPopupContent("fugit illum voluptate",
                                    "et odit voluptatum ea velit",
                                    2,
                                    "cum",
                                [new RelatedRecordsInfoFieldOrder("consectetur",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("non",
                                    OrderBy.Asc)],
                                    2),
                            new FieldsPopupContent([new FieldInfo("status",
                                        "est",
                                        "illo",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("name",
                                        "autem",
                                        "quia",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.ShortDate),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("group",
                                        "et",
                                        "ullam",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                    "dignissimos et placeat aut est",
                                    "a nihil eum")],
                            [new ExpressionInfo("return Date();",
                                    "password",
                                    "ad dolore maiores",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "category",
                                    "magnam qui consequatur",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("eum inventore est",
                                    "https://picsum.photos/640/480/?image=590",
                                    "f73c6a8e-5c15-553f-9754-9eb60a2274d8",
                                    () => { Console.WriteLine("odit"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "qui"),
                            new ActionButton("nesciunt impedit molestiae",
                                    "https://picsum.photos/640/480/?image=485",
                                    "61ee9736-b905-33e4-a7b7-fa449abbdd25",
                                    () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                    "name",
                                    true,
                                    true,
                                    true,
                                    "quaerat"),
                            new ActionToggle("consequuntur sed eos",
                                    "84dff289-5410-ece6-b807-6a626f57ce5a",
                                    () => { Console.WriteLine("aliquid"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "updatedAt",
                                    "voluptas"),
                            new ActionButton("sit quia quas",
                                    "https://picsum.photos/640/480/?image=716",
                                    "39a96075-59b8-873a-6d9c-3e6770964a2a",
                                    () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                    "comment",
                                    true,
                                    true,
                                    true,
                                    "rerum")]),
                            new AttributesDictionary(),
                            true,
                            "enim",
                            "et",
                            new GraphicOrigin(Guid.NewGuid(),
                                "eum",
                                6)),
                        new Thumbnail("cumque",
                            "facere",
                            269.6680,
                            150.5623)),
                new FeatureTemplate("porro in ut dolores recusandae",
                    DrawingTool.Point,
                        "group",
                    new Graphic(new Polyline([new MapPath([new MapPoint([279.3705,
                                    780.3797,
                                    70.0841,
                                    441.3758]),
                                new MapPoint([276.6733,
                                    1.0250,
                                    460.0583,
                                    51.0520]),
                                new MapPoint([361.3162,
                                    848.9546]),
                                new MapPoint([472.2452,
                                    908.3443])]),
                                new MapPath([new MapPoint([925.4361,
                                        593.6827]),
                                    new MapPoint([554.1526,
                                        305.0876,
                                        297.5357])])],
                            new SpatialReference(4,
                                    "enim",
                                    "quasi",
                                    "et"),
                                true,
                                true),
                        new TextSymbol("est provident laudantium",
                            new MapColor(41, 152, 47),
                            new MapColor(10, 229, 130),
                                new Dimension(871.3519),
                            new MapFont(new Dimension(363.5171),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                720.5114,
                            new MapColor(92, 108, 214),
                            new MapColor(62, 115, 194),
                                744.8473,
                            HorizontalAlignment.Center,
                                true,
                                747.9395,
                                new Dimension(680.0794),
                                true),
                        new PopupTemplate("et aliquam velit",
                                "aut",
                                ["magni",
                                    "saepe",
                                    "qui",
                                    "debitis"],
                            [new FieldInfo("email",
                                    "ullam",
                                    "delectus",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("id",
                                    "deserunt",
                                    "quos",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("title",
                                    "quae",
                                    "non",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                            [new MediaPopupContent("consectetur voluptatem assumenda",
                                    "ea voluptas incidunt perferendis",
                                [new ColumnChartMediaInfo("dicta iure nihil",
                                        "nobis",
                                        "labore ipsa eum",
                                    new ChartMediaInfoValue(["dolore",
                                            "eligendi",
                                            "nesciunt",
                                            "iure"],
                                            "et",
                                            "molestiae",
                                        [new ChartMediaInfoValueSeries("password",
                                                "cum",
                                                110.6078),
                                        new ChartMediaInfoValueSeries("group",
                                                "sed",
                                                981.3123),
                                        new ChartMediaInfoValueSeries("comment",
                                                "hic",
                                                550.2435)],
                                        [new MapColor(136, 246, 156)])),
                                new BarChartMediaInfo("praesentium aut rerum",
                                        "qui",
                                        "voluptatibus debitis veritatis",
                                    new ChartMediaInfoValue(["fuga",
                                            "quia",
                                            "et"],
                                            "nihil",
                                            "libero",
                                        [new ChartMediaInfoValueSeries("token",
                                                "unde",
                                                668.7309)],
                                        [new MapColor(208, 113, 28),
                                        new MapColor(200, 188, 254)]))],
                                    3),
                            new TextPopupContent("ea enim accusantium"),
                            new AttachmentsPopupContent("explicabo ut expedita",
                                    "dicta aspernatur incidunt dolorum nesciunt error",
                                    AttachmentsPopupContentDisplayType.Auto)],
                            [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "avatar",
                                    "saepe quia illo",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "avatar",
                                    "dolorum ut suscipit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "title",
                                    "optio earum et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "group",
                                    "provident recusandae libero",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                            [new ActionButton("harum sint dolorem",
                                    "https://picsum.photos/640/480/?image=958",
                                    "4d1ccb6a-5920-ab13-1c20-e46ae879980f",
                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                    "group",
                                    true,
                                    true,
                                    true,
                                    "aut"),
                            new ActionButton("quis enim rerum",
                                    "https://picsum.photos/640/480/?image=71",
                                    "1d4d60f9-a2c8-6b1a-cef9-e439a8414783",
                                    () => { Console.WriteLine("distinctio"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "velit"),
                            new ActionToggle("laboriosam aut ut",
                                    "c3ab24b3-6513-0774-d314-b1bd3a98fea9",
                                    () => { Console.WriteLine("illo"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "token",
                                    "iusto"),
                            new ActionToggle("quia illum in",
                                    "7b304218-9f3c-da0e-c766-d6573de42668",
                                    () => { Console.WriteLine("quisquam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "password",
                                    "qui")]),
                            new AttributesDictionary(),
                            true,
                            "voluptatem",
                            "ut",
                            new GraphicOrigin(Guid.NewGuid(),
                                "reiciendis",
                                7)),
                        new Thumbnail("qui",
                            "repudiandae",
                            54.8982,
                            227.4061))],
                new Dictionary<string, Domain>() {{ "blanditiis", new InheritedDomain("title") },
                { "non", new RangeDomain("voluptas",
        "ipsum",
        "title") }
                },
                    "architecto")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2013, 6, 2, 6, 51, 35),
                    new DateTime(2021, 11, 8, 2, 50, 46));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
