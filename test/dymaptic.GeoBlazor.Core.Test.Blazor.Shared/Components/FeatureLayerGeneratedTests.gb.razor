@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedFeatureLayer(Action renderHandler)
    {
        FeatureLayer? featureLayer = null;

        FeatureLayerEditsEvent? editsResult = null;
        void OnEdits(FeatureLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <FeatureLayer 
                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")"
                        OutFields="@(["et",
                            "modi"])"
                        DefinitionExpression="@("voluptatem")"
                        MinScale="@(37892.0701)"
                        MaxScale="@(24533136.3955)"
                        ObjectIdField="@("placeat")"
                        GeometryType="@(FeatureGeometryType.Point)"
                        Title="@("non iure voluptatibus")"
                        Opacity="@(0.6558)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        ApiKey="@("suscipit")"
                        BlendMode="@(BlendMode.HardLight)"
                        Charts="@(["similique",
                            "accusamus"])"
                        Copyright="@("aut")"
                        DateFieldsTimeZone="@("sed")"
                        DisplayField="@("quidem")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("sit",
                            48883649.1790))"
                        GdbVersion="@("3.6.7.9")"
                        HasM="@(true)"
                        HasZ="@(true)"
                        HistoricMoment="@(new DateTime(2009, 5, 3, 15, 9, 54))"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(514.6918)"
                        ReturnM="@(true)"
                        ReturnZ="@(true)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SourceJSON="@("{\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [102.0, 0.5]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\"\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [102.0, 0.0],\n                                    [103.0, 1.0],\n                                    [104.0, 0.0],\n                                    [105.0, 1.0]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": 0.0\n                            }\n                        },\n                        {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"Polygon\",\n                                \"coordinates\": [\n                                    [\n                                        [100.0, 0.0],\n                                        [101.0, 0.0],\n                                        [101.0, 1.0],\n                                        [100.0, 1.0],\n                                        [100.0, 0.0]\n                                    ]\n                                ]\n                            },\n                            \"properties\": {\n                                \"prop0\": \"value0\",\n                                \"prop1\": { \"this\": \"that\" }\n                            }\n                        }\n                    ]\n                }")"
                        TypeIdField="@("in")"
                        Types="@([new FeatureType("b9cca54a-4144-2e24-2b4e-5a75172a4726",
                                "email",
                            [new FeatureTemplate("amet expedita id ipsam",
                                DrawingTool.Polygon,
                                    "title",
                                new Graphic(new Polygon([new MapPath([new MapPoint([749.6856])])],
                                        new SpatialReference(5,
                                                "illo",
                                                "qui",
                                                "et"),
                                        new Point(62.0050,
                                                -41.7417,
                                                -68.8326,
                                                20.2167,
                                                84.0468,
                                            new SpatialReference(8,
                                                    "nesciunt",
                                                    "amet",
                                                    "assumenda"),
                                                true,
                                                true,
                                                970.6134),
                                            true,
                                            true,
                                            true),
                                    new TextSymbol("vero dolorum ex",
                                        new MapColor(227, 35, 65),
                                        new MapColor(194, 39, 182),
                                            new Dimension(685.0841),
                                        new MapFont(new Dimension(136.4186),
                                                "Verdana",
                                            MapFontStyle.Normal,
                                            FontWeight.Bolder,
                                            TextDecoration.LineThrough),
                                            134.4176,
                                        new MapColor(149, 189, 30),
                                        new MapColor(218, 225, 157),
                                            228.8079,
                                        HorizontalAlignment.Left,
                                            true,
                                            863.7980,
                                            new Dimension(304.8228),
                                            true),
                                    new PopupTemplate("suscipit non consequatur",
                                            "et",
                                            ["quia",
                                                "voluptatem"],
                                        [new FieldInfo("category",
                                                "unde",
                                                "in",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Sum)],
                                        [new FieldsPopupContent([new FieldInfo("password",
                                                    "non",
                                                    "quas",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.ShortDateLe),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("createdAt",
                                                    "nostrum",
                                                    "tempora",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.LongDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                                "animi quis",
                                                "hic ex consequatur")],
                                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "password",
                                                "quas omnis cum",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "createdAt",
                                                "est commodi amet",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("suscipit quod ea",
                                                "https://picsum.photos/640/480/?image=960",
                                                "59c03cb1-0099-6d90-eec8-b56cea5c8fa0",
                                                () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                                                "id",
                                                true,
                                                true,
                                                true,
                                                "nihil")]),
                                        new AttributesDictionary(),
                                        true,
                                        "sunt",
                                        "culpa",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "qui",
                                            3)),
                                    new Thumbnail("aperiam",
                                        "ullam",
                                        250.2820,
                                        91.4607)),
                            new FeatureTemplate("sint exercitationem exercitationem",
                                DrawingTool.LeftArrow,
                                    "group",
                                new Graphic(new Polyline([new MapPath([new MapPoint([915.0238]),
                                            new MapPoint([90.0593,
                                                273.6332])])],
                                        new SpatialReference(3,
                                                "qui",
                                                "recusandae",
                                                "quo"),
                                            true,
                                            true),
                                    new TextSymbol("quos saepe itaque",
                                        new MapColor(62, 105, 138),
                                        new MapColor(43, 4, 18),
                                            new Dimension(335.0279),
                                        new MapFont(new Dimension(450.7812),
                                                "Courier New",
                                            MapFontStyle.Normal,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            3.5391,
                                        new MapColor(132, 201, 208),
                                        new MapColor(6, 79, 172),
                                            631.5725,
                                        HorizontalAlignment.Center,
                                            true,
                                            223.4090,
                                            new Dimension(531.0545),
                                            true),
                                    new PopupTemplate("libero minus quis",
                                            "quas",
                                            ["libero"],
                                        [new FieldInfo("title",
                                                "corporis",
                                                "vitae",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("token",
                                                "sed",
                                                "asperiores",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Max)],
                                        [new FieldsPopupContent([new FieldInfo("id",
                                                    "asperiores",
                                                    "ut",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.ShortDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Min)],
                                                "quam expedita beatae",
                                                "reiciendis asperiores architecto"),
                                        new FieldsPopupContent([new FieldInfo("status",
                                                    "reiciendis",
                                                    "est",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count)],
                                                "quia et dolores",
                                                "ex vel et")],
                                        [new ExpressionInfo("return Date();",
                                                "password",
                                                "vel aut tempore",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("sit dolorem id",
                                                "https://picsum.photos/640/480/?image=317",
                                                "224a1e3f-e419-2e90-9e9f-19059b265ca5",
                                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "sapiente")]),
                                        new AttributesDictionary(),
                                        true,
                                        "eligendi",
                                        "earum",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "aut",
                                            1)),
                                    new Thumbnail("blanditiis",
                                        "quibusdam",
                                        84.2432,
                                        162.3093))],
                            new Dictionary<string, Domain>() {
                                { "non", new InheritedDomain("avatar") },
                                { "molestiae", new InheritedDomain("group") }
                            },
                                "ratione"),
                        new FeatureType("f1130720-e8b4-f156-0c1e-2b89598f507e",
                                "category",
                            [new FeatureTemplate("temporibus ea praesentium",
                                DrawingTool.Circle,
                                    "updatedAt",
                                new Graphic(new Extent(15.9872,
                                            -49.9699,
                                            -87.8089,
                                            2.3082,
                                            936.8893,
                                            16.0384,
                                            87.2515,
                                            284.2665,
                                        new SpatialReference(8,
                                                "quia",
                                                "voluptatem",
                                                "est"),
                                            true,
                                            true),
                                    new TextSymbol("sed quia qui",
                                        new MapColor(234, 171, 238),
                                        new MapColor(235, 144, 13),
                                            new Dimension(904.8006),
                                        new MapFont(new Dimension(916.8643),
                                                "Palatino",
                                            MapFontStyle.Oblique,
                                            FontWeight.Lighter,
                                            TextDecoration.None),
                                            834.1936,
                                        new MapColor(205, 122, 221),
                                        new MapColor(76, 5, 189),
                                            696.7276,
                                        HorizontalAlignment.Right,
                                            true,
                                            958.3794,
                                            new Dimension(792.8699),
                                            true),
                                    new PopupTemplate("officia aut omnis",
                                            "atque",
                                            ["labore",
                                                "omnis"],
                                        [new FieldInfo("phone",
                                                "sit",
                                                "maiores",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("id",
                                                "quisquam",
                                                "aperiam",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Max)],
                                        [new FieldsPopupContent([new FieldInfo("createdAt",
                                                    "ea",
                                                    "ipsum",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("avatar",
                                                    "veritatis",
                                                    "omnis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.DayShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Min)],
                                                "est esse dolores",
                                                "omnis sit sapiente"),
                                        new MediaPopupContent("alias sit ad",
                                                "eos a earum sit",
                                            [new ColumnChartMediaInfo("vel voluptatem ducimus",
                                                    "vero",
                                                    "quidem deleniti dolore",
                                                new ChartMediaInfoValue(["est",
                                                        "dolores"],
                                                        "et",
                                                        "voluptas",
                                                    [new ChartMediaInfoValueSeries()],
                                                    [new MapColor(45, 110, 45),
                                                    new MapColor(106, 96, 211)]))],
                                                5)],
                                        [new ExpressionInfo("return Date();",
                                                "password",
                                                "possimus eveniet odio",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "id",
                                                "molestiae consequatur reiciendis",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("ut est provident",
                                                "https://picsum.photos/640/480/?image=1073",
                                                "843a49b0-c0c1-7cb8-b0c4-6d18139fcb4c",
                                                () => { Console.WriteLine("quas"); return Task.CompletedTask; },
                                                "comment",
                                                true,
                                                true,
                                                true,
                                                "reprehenderit")]),
                                        new AttributesDictionary(),
                                        true,
                                        "voluptatem",
                                        "fugiat",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "ea",
                                            4)),
                                    new Thumbnail("et",
                                        "labore",
                                        65.0283,
                                        219.9192)),
                            new FeatureTemplate("ea enim nulla quia",
                                DrawingTool.Circle,
                                    "name",
                                new Graphic(new Polyline([new MapPath([new MapPoint([207.3762,
                                                824.4879])])],
                                        new SpatialReference(2,
                                                "illum",
                                                "doloribus",
                                                "a"),
                                            true,
                                            true),
                                    new TextSymbol("enim et sint",
                                        new MapColor(145, 177, 27),
                                        new MapColor(163, 50, 81),
                                            new Dimension(703.4829),
                                        new MapFont(new Dimension(430.6718),
                                                "Courier New",
                                            MapFontStyle.Italic,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            629.9265,
                                        new MapColor(224, 12, 184),
                                        new MapColor(53, 75, 253),
                                            330.3118,
                                        HorizontalAlignment.Right,
                                            true,
                                            436.9234,
                                            new Dimension(513.1583),
                                            true),
                                    new PopupTemplate("adipisci consequatur neque",
                                            "rerum",
                                            ["ex"],
                                        [new FieldInfo("createdAt",
                                                "et",
                                                "minima",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("group",
                                                "dolorem",
                                                "qui",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                                    "est",
                                                    "quia aut voluptatem"))],
                                        [new ExpressionInfo("return Date();",
                                                "id",
                                                "expedita deserunt minus",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("pariatur repellat velit",
                                                "https://picsum.photos/640/480/?image=124",
                                                "7c26c515-38f7-54d8-97be-86fc66fb7249",
                                                () => { Console.WriteLine("a"); return Task.CompletedTask; },
                                                "updatedAt",
                                                true,
                                                true,
                                                true,
                                                "qui")]),
                                        new AttributesDictionary(),
                                        true,
                                        "est",
                                        "nostrum",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "quod",
                                            3)),
                                    new Thumbnail("rem",
                                        "veritatis",
                                        149.0732,
                                        104.5938))],
                            new Dictionary<string, Domain>() {
                                { "nihil", new RangeDomain("similique",
                                        "voluptas",
                                        "group") },
                                { "qui", new RangeDomain("accusantium",
                                        "labore",
                                        "title") }
                            },
                                "culpa")])"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(442.8321)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("eligendi")"
                            EndField="@("aliquam")"
                            Stops="@([new DateTime(2007, 8, 20, 18, 14, 57)])"
                            TimeZone="@("Asia/Kolkata")"
                            TrackIdField="@("qui")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Minutes)"
                                Value="@(289.1125)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2010, 11, 11, 22, 40, 20))"
                                End="@(new DateTime(2023, 4, 9, 13, 46, 3))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2020, 2, 11, 22, 7, 40))"
                            End="@(new DateTime(2006, 5, 13, 5, 37, 41))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("accusamus ea blanditiis")"
                            DrawingTool="@(DrawingTool.AutoCompletePolygon)"
                            Name="@("comment")"
                            Thumbnail="@(new Thumbnail("non",
                                "numquam",
                                166.8062,
                                244.0731))">
                            <Graphic 
                                Geometry="@(new Polygon([new MapPath([new MapPoint([331.9048,
                                            946.4929]),
                                        new MapPoint([88.5930])])],
                                    new SpatialReference(2,
                                            "nesciunt",
                                            "quos",
                                            "laborum"),
                                    new Point(30.5886,
                                            -10.5029,
                                            -171.6806,
                                            43.2218,
                                            196.9902,
                                        new SpatialReference(7,
                                                "incidunt",
                                                "et",
                                                "velit"),
                                            true,
                                            true,
                                            464.3350),
                                        true,
                                        true,
                                        true))"
                                Symbol="@(new TextSymbol("cum facere voluptas",
                                    new MapColor(254, 138, 105),
                                    new MapColor(141, 6, 97),
                                        new Dimension(59.5221),
                                    new MapFont(new Dimension(660.9538),
                                            "Verdana",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        899.3210,
                                    new MapColor(48, 4, 237),
                                    new MapColor(66, 28, 7),
                                        755.4154,
                                    HorizontalAlignment.Left,
                                        true,
                                        201.8381,
                                        new Dimension(143.2825),
                                        true))"
                                PopupTemplate="@(new PopupTemplate("magnam labore velit",
                                        "nihil",
                                        ["omnis",
                                            "ipsum"],
                                    [new FieldInfo("phone",
                                            "rerum",
                                            "sunt",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("name",
                                            "adipisci",
                                            "id",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                    [new MediaPopupContent("voluptatem ut perspiciatis",
                                            "fuga rerum tempore",
                                        [new ImageMediaInfo("similique voluptate dolorem",
                                                "voluptatibus",
                                                "quia consequuntur aut",
                                            new ImageMediaInfoValue("http://xander.info",
                                                    "https://rey.com"),
                                                655.1457)],
                                            6),
                                    new TextPopupContent("nihil velit iste")],
                                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "password",
                                            "qui rerum illum",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "phone",
                                            "et laborum magnam",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                        [new ActionButton("culpa dolorem cum",
                                            "https://picsum.photos/640/480/?image=564",
                                            "ebf15ade-3ff8-7458-5ece-46b068a9df60",
                                            () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                                            "comment",
                                            true,
                                            true,
                                            true,
                                            "cumque"),
                                            new ActionButton("odio repellendus voluptatum",
                                                "https://picsum.photos/640/480/?image=164",
                                                "19b37616-6ce7-d580-b448-30bab4e75028",
                                                () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                                "group",
                                                true,
                                                true,
                                                true,
                                                "rem")]))"
                                Attributes="@(new AttributesDictionary())"
                                Visible="@(true)"
                                LegendLabel="@("nihil")"
                                AggregateGeometries="@("omnis")"
                                Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                    "nihil",
                                    2))">
                            </Graphic>
                        </FeatureTemplate>
                        <Field 
                            Name="@("updatedAt")"
                            Alias="@("inventore")"
                            Description="@("et aut")"
                            Length="@(1)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "aspernatur" })"
                            ValueType="@(FieldValueType.OrderedOrRanked)"
                            Domain="@(new RangeDomain("eum",
                                    "ut",
                                    "updatedAt"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("voluptatum",
                                20739809.5348),
                                new Effect("eveniet",
                                    36349840.1236)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(94.4023,
                                new Polygon([new MapPath([new MapPoint([253.6389,
                                            10.8371])])],
                                    new SpatialReference(4,
                                            "itaque",
                                            "est",
                                            "et"),
                                    new Point(83.4542,
                                            75.5456,
                                            27.5578,
                                            51.2486,
                                            901.1808,
                                        new SpatialReference(5,
                                                "ea",
                                                "adipisci",
                                                "nemo"),
                                            true,
                                            true,
                                            820.6539),
                                        true,
                                        true,
                                        true),
                                    [5],
                                SpatialRelationship.Touches,
                                new TimeExtent(new DateTime(2007, 9, 13, 12, 45, 11),
                                        new DateTime(2003, 10, 23, 16, 43, 46)),
                                    QueryUnits.UsNauticalMiles,
                                    "Phone = '555-555-5555'"))"
                            IncludedEffect="@([new Effect("tenetur",
                                48656188.7659)])">
                        </FeatureEffect>
                        <SpatialReference 
                            Wkid="@(6)"
                            ImageCoordinateSystem="@("recusandae")"
                            Wkt="@("quibusdam")"
                            Wkt2="@("quidem")">
                        </SpatialReference>
                        <Graphic 
                            Geometry="@(new Polyline([new MapPath([new MapPoint([126.7433,
                                        20.8708])])],
                                new SpatialReference(9,
                                        "aliquid",
                                        "excepturi",
                                        "possimus"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("vero vero reiciendis",
                                new MapColor(158, 96, 244),
                                new MapColor(82, 170, 50),
                                    new Dimension(989.6291),
                                new MapFont(new Dimension(212.2233),
                                        "Courier New",
                                    MapFontStyle.Italic,
                                    FontWeight.Bolder,
                                    TextDecoration.None),
                                    144.7934,
                                new MapColor(34, 68, 155),
                                new MapColor(9, 94, 98),
                                    444.8701,
                                HorizontalAlignment.Right,
                                    true,
                                    755.1305,
                                    new Dimension(648.5080),
                                    true))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("in")"
                            AggregateGeometries="@("qui")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "sed",
                                3))">
                            <PopupTemplate 
                                Title="@("nesciunt itaque consectetur")"
                                StringContent="@("et")"
                                OutFields="@(["impedit",
                                    "sint"])"
                                FieldInfos="@([new FieldInfo("updatedAt",
                                        "ratione",
                                        "sed",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Count)])"
                                Content="@([new RelationshipPopupContent("molestias et doloribus",
                                        "dolores velit eius quisquam",
                                        3,
                                        "repudiandae",
                                    [new RelatedRecordsInfoFieldOrder("aut",
                                        OrderBy.Asc)],
                                        8),
                                new TextPopupContent("voluptatibus dignissimos consequatur")])"
                                ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "id",
                                        "recusandae quis reiciendis",
                                        ExpressionInfoReturnType.String)])"
                                OverwriteActions="@(true)"
                                ReturnGeometry="@(true)"
                                Actions="@([new ActionButton("in et architecto",
                                    "https://picsum.photos/640/480/?image=312",
                                    "4504960f-85df-8de9-cf6c-a57bc41ecb9c",
                                    () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "odio"),
                                    new ActionButton("debitis sint nisi",
                                        "https://picsum.photos/640/480/?image=1071",
                                        "5e13a3e2-a4f9-289e-8ff2-dde3fff1d4e7",
                                        () => { Console.WriteLine("consectetur"); return Task.CompletedTask; },
                                        "title",
                                        true,
                                        true,
                                        true,
                                        "sit")])">
                            </PopupTemplate>
                        </Graphic>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(178, 104, 3),
                                    new MapColor(241, 0, 26)),
                                    360.6973,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(326.8966,
                                            354.4881)],
                                        "dolor",
                                        "dolorem",
                                        "quod"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(143.3573,
                                            677.0331)],
                                        "quia",
                                        "non",
                                        "totam"),
                                    ["minima"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "placeat",
                                    true,
                                LengthUnit.Centimeters,
                                    781.5209,
                                    847.6288,
                                    44.2853,
                                    821.5543))">
                        </SimpleRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("quae et ullam")"
                            StringContent="@("animi")"
                            OutFields="@(["iste"])"
                            FieldInfos="@([new FieldInfo("phone",
                                    "repellendus",
                                    "hic",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("status",
                                    "id",
                                    "voluptatem",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)])"
                            Content="@([new TextPopupContent("quia voluptas minima")])"
                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                    "token",
                                    "consequatur beatae veritatis",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("consequatur ea recusandae",
                                "https://picsum.photos/640/480/?image=564",
                                "74717be6-a1b4-a57e-3f93-2badd0cf9f5e",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "recusandae")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("exercitationem")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("eum")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.CenterCenter)"
                            LabelExpression="@("est")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(6047625.5401)"
                            MinScale="@(22889.0690)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(77.1494))"
                            Symbol="@(new TextSymbol("deleniti iusto soluta",
                                new MapColor(94, 212, 187),
                                new MapColor(136, 239, 26),
                                    new Dimension(55.5382),
                                new MapFont(new Dimension(749.6168),
                                        "Verdana",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bold,
                                    TextDecoration.LineThrough),
                                    290.1755,
                                new MapColor(6, 118, 6),
                                new MapColor(208, 241, 47),
                                    879.6912,
                                HorizontalAlignment.Right,
                                    true,
                                    126.2646,
                                    new Dimension(738.6493),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Province = 'Ontario'")">
                        </Label>
                        <Extent 
                            Xmax="@(-0.0235)"
                            Xmin="@(-49.1530)"
                            Ymax="@(-36.4756)"
                            Ymin="@(33.4313)"
                            Zmax="@(562.3220)"
                            Zmin="@(78.2528)"
                            Mmax="@(53.7467)"
                            Mmin="@(230.0576)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(8)"
                                ImageCoordinateSystem="@("autem")"
                                Wkt="@("et")"
                                Wkt2="@("itaque")">
                            </SpatialReference>
                        </Extent>
                        <FormTemplate 
                            Title="@("dolor et cum")"
                            Description="@("reiciendis tenetur explicabo iusto")"
                            PreserveFieldValuesWhenHidden="@(true)"
                            Elements="@([new FieldElement("createdAt",
                                    "quia",
                                    "rerum reiciendis velit dolor",
                                    "atque",
                                    "excepturi",
                                    "neque",
                                    "labore",
                                new InheritedDomain("token"),
                                    default,
                                    "tempora")])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "updatedAt",
                                    "qui quae esse",
                                    ExpressionInfoReturnType.String)])">
                        </FormTemplate>
                        <LayerFloorInfo 
                            FloorField="@("vitae")">
                        </LayerFloorInfo>
                        <FeatureLayerBaseElevationInfo 
                            FeatureExpressionInfo="@(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "quia enim necessitatibus"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(195.7218)"
                            Unit="@(ElevationUnit.Decimeters)">
                        </FeatureLayerBaseElevationInfo>
                    </FeatureLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureLayer!);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [featureLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<FeatureLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "feature");
        var addAttachmentMethodResult = await featureLayer.AddAttachment(new Graphic(new Polyline([new MapPath([new MapPoint([276.9838,
                            937.9176]),
                        new MapPoint([334.8389,
                            895.7876])]),
                        new MapPath([new MapPoint([972.5538,
                                651.0535])])],
                    new SpatialReference(6,
                            "enim",
                            "nihil",
                            "aut"),
                        true,
                        true),
                new TextSymbol("aut ullam excepturi",
                    new MapColor(222, 119, 117),
                    new MapColor(113, 53, 213),
                        new Dimension(775.3772),
                    new MapFont(new Dimension(11.5649),
                            "Bookman",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.None),
                        540.3647,
                    new MapColor(195, 197, 106),
                    new MapColor(4, 247, 185),
                        569.0257,
                    HorizontalAlignment.Right,
                        true,
                        55.0789,
                        new Dimension(774.8952),
                        true),
                new PopupTemplate("natus ipsa in",
                        "eaque",
                        ["commodi"],
                    [new FieldInfo("category",
                            "perferendis",
                            "incidunt",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("token",
                            "aut",
                            "itaque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Max)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "quam",
                                "ea perspiciatis sint")),
                    new AttachmentsPopupContent("quis voluptas omnis",
                            "porro quasi ut",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return Date();",
                            "group",
                            "aut est expedita",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "category",
                            "sed error magnam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("et deserunt voluptatem",
                            "https://picsum.photos/640/480/?image=205",
                            "dafd80ef-13a7-4b8d-b9ca-c46f9ac1a0d0",
                            () => { Console.WriteLine("perspiciatis"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "voluptas"),
                            new ActionButton("consequatur vitae voluptatem",
                                "https://picsum.photos/640/480/?image=771",
                                "ad6ed041-275c-56e5-0d65-f733d6ff766c",
                                () => { Console.WriteLine("iusto"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "ea")]),
                    new AttributesDictionary(),
                    true,
                    "in",
                    "at",
                    new GraphicOrigin(Guid.NewGuid(),
                        "aut",
                        5)),
                default);
        Assert.IsNotNull(addAttachmentMethodResult);
        var deleteAttachmentsMethodResult = await featureLayer.DeleteAttachments(new Graphic(new Point(-89.6110,
                        21.5826,
                        -42.8695,
                        67.7930,
                        789.7595,
                    new SpatialReference(7,
                            "quas",
                            "impedit",
                            "deleniti"),
                        true,
                        true,
                        137.8694),
                new TextSymbol("quaerat velit ut",
                    new MapColor(57, 11, 83),
                    new MapColor(226, 221, 153),
                        new Dimension(462.0847),
                    new MapFont(new Dimension(744.3922),
                            "Courier New",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.LineThrough),
                        18.6414,
                    new MapColor(209, 175, 215),
                    new MapColor(149, 142, 129),
                        343.7111,
                    HorizontalAlignment.Left,
                        true,
                        914.6469,
                        new Dimension(809.5751),
                        true),
                new PopupTemplate("itaque dolorem et",
                        "et",
                        ["reiciendis"],
                    [new FieldInfo("id",
                            "soluta",
                            "dolores",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("group",
                            "non",
                            "et",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new MediaPopupContent("ipsam sed quisquam",
                            "nihil voluptatem sint optio",
                        [new LineChartMediaInfo("vel voluptatem enim",
                                "voluptas",
                                "et debitis at",
                            new ChartMediaInfoValue(["odio",
                                    "autem"],
                                    "possimus",
                                    "quis",
                                [new ChartMediaInfoValueSeries("status",
                                        "odio",
                                        28.5685),
                                new ChartMediaInfoValueSeries("title",
                                        "libero",
                                        101.2080)],
                                [new MapColor(175, 24, 148),
                                new MapColor(147, 245, 162)]))],
                            4),
                    new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "placeat",
                                "similique at qui"))],
                    [new ExpressionInfo("return Date();",
                            "updatedAt",
                            "reiciendis deserunt omnis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "title",
                            "molestiae animi quaerat",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("ipsa non explicabo",
                            "https://picsum.photos/640/480/?image=20",
                            "7a0d1474-48e9-aea1-803a-14d900dce2d0",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "est")]),
                    new AttributesDictionary(),
                    true,
                    "reiciendis",
                    "molestiae",
                    new GraphicOrigin(Guid.NewGuid(),
                        "quos",
                        3)),
                [9]);
        Assert.IsNotNull(deleteAttachmentsMethodResult);
        var queryAttachmentsMethodResult = await featureLayer.QueryAttachments(new AttachmentQuery("ullam",
                    ["similique",
                        "commodi"],
                    true,
                    [3],
                    ["quod",
                        "rerum"],
                    "name",
                    528.5453,
                    [9,
                        8],
                    true,
                    [9,
                        9],
                    342.5731,
                    "Phone = '555-555-5555'"),
                default);
        Assert.IsNotNull(queryAttachmentsMethodResult);
        var saveMethodResult = await featureLayer.Save(new FeatureLayerBaseSaveOptions(new FeatureLayerBaseSaveOptionsValidationOptions(true)));
        Assert.IsNotNull(saveMethodResult);
        var saveAsMethodResult = await featureLayer.SaveAs(new PortalItem(),
            new FeatureLayerBaseSaveAsOptions(new PortalFolder(new DateTime(2000, 5, 12, 14, 15, 32),
                        "saepe",
                        "repellendus laudantium fuga"),
                new FeatureLayerBaseSaveAsOptionsValidationOptions(true)));
        Assert.IsNotNull(saveAsMethodResult);
        var updateAttachmentMethodResult = await featureLayer.UpdateAttachment(new Graphic(new Extent(98.3690,
                        -144.4157,
                        -32.0008,
                        77.3181,
                        69.1504,
                        263.1595,
                        79.9719,
                        985.2119,
                    new SpatialReference(5,
                            "laboriosam",
                            "tempora",
                            "quam"),
                        true,
                        true),
                new TextSymbol("nihil maxime eos",
                    new MapColor(183, 125, 131),
                    new MapColor(230, 171, 31),
                        new Dimension(175.8956),
                    new MapFont(new Dimension(945.8049),
                            "Bookman",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        71.6919,
                    new MapColor(5, 24, 47),
                    new MapColor(210, 103, 220),
                        658.8319,
                    HorizontalAlignment.Center,
                        true,
                        979.2310,
                        new Dimension(673.5049),
                        true),
                new PopupTemplate("rerum ex sequi",
                        "dolor",
                        ["et",
                            "magnam"],
                    [new FieldInfo("password",
                            "sed",
                            "facilis",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("phone",
                            "autem",
                            "doloremque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Var)],
                    [new TextPopupContent("sint fugiat qui")],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "createdAt",
                            "adipisci et quaerat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "password",
                            "rerum pariatur odit",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("ratione deserunt et",
                            "https://picsum.photos/640/480/?image=697",
                            "663c913c-ad6d-8952-e255-be4314920024",
                            () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "itaque"),
                            new ActionButton("sequi rem quia",
                                "https://picsum.photos/640/480/?image=650",
                                "5a269742-015b-0058-b3ad-04e75ca8b5b4",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "et")]),
                    new AttributesDictionary(),
                    true,
                    "praesentium",
                    "rerum",
                    new GraphicOrigin(Guid.NewGuid(),
                        "nihil",
                        6)),
                5,
                default);
        Assert.IsNotNull(updateAttachmentMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await featureLayer.SetPortalItem(testPortalItem);
        var portalItem = await featureLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        ListMode testListMode = ListMode.Hide;
        await featureLayer.SetListMode(testListMode);
        var listMode = await featureLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("provident et eos",
                    "qui",
                    ["magni"],
                [new FieldInfo("phone",
                        "aut",
                        "aut",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.ShortDateLe),
                        true,
                        true,
                    StatisticType.Count)],
                [new RelationshipPopupContent("omnis earum voluptas",
                        "dolorum labore ut ut",
                        3,
                        "ab",
                    [new RelatedRecordsInfoFieldOrder("et",
                        OrderBy.Asc)],
                        5),
                new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                            "omnis",
                            "quia in et"))],
                [new ExpressionInfo("return Date();",
                        "category",
                        "qui qui occaecati",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                    [new ActionButton("ducimus quo id",
                        "https://picsum.photos/640/480/?image=730",
                        "7c08e5aa-fc9f-a4dd-ca4a-4a050c984e9f",
                        () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                        "id",
                        true,
                        true,
                        true,
                        "culpa")]);
        await featureLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await featureLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        BlendMode testBlendMode = BlendMode.ColorDodge;
        await featureLayer.SetBlendMode(testBlendMode);
        var blendMode = await featureLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        FeatureLayerBaseElevationInfo testElevationInfo = new FeatureLayerBaseElevationInfo(new FeatureLayerBaseElevationInfoFeatureExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "cum maxime vel"),
                ElevationInfoMode.AbsoluteHeight,
                    364.6913,
                ElevationUnit.Meters);
        await featureLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await featureLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("repudiandae",
                    21627008.5966),
                    new Effect("maxime",
                        14153278.5254)],
                    true,
                new FeatureFilter(243.3097,
                    new Extent(-29.3733,
                            147.7986,
                            -21.0067,
                            41.5148,
                            169.1251,
                            249.6101,
                            994.7916,
                            812.1724,
                        new SpatialReference(3,
                                "voluptatem",
                                "maxime",
                                "ut"),
                            true,
                            true),
                        [6,
                            2],
                    SpatialRelationship.Crosses,
                    new TimeExtent(new DateTime(2015, 5, 25, 8, 3, 50),
                            new DateTime(2003, 4, 13, 13, 39, 22)),
                        QueryUnits.NauticalMiles,
                        "Street = '123 Main St.'"),
                    [new Effect("aliquid",
                        3715348.6585),
                        new Effect("numquam",
                            13609417.2342)]);
        await featureLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await featureLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "avatar",
                    "quasi",
                    "laboriosam amet inventore",
                    8,
                    true,
                    true,
                    new { Value = "ratione" },
                FieldValueType.OrderedOrRanked,
                new InheritedDomain("updatedAt"))];
        await featureLayer.SetFields(testFields);
        var fields = await featureLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        LayerFloorInfo testFloorInfo = new LayerFloorInfo("mollitia");
        await featureLayer.SetFloorInfo(testFloorInfo);
        var floorInfo = await featureLayer.GetFloorInfo();
        Assert.AreEqual(testFloorInfo, floorInfo);
        FormTemplate testFormTemplate = new FormTemplate("quo ipsam expedita",
                    "reprehenderit voluptas alias voluptatum",
                    true,
                [new GroupElement("qui nam",
                    [new GroupElement("error sint",
                        [new FieldElement("phone",
                                "dolorem",
                                "labore sed",
                                "dolores",
                                "et",
                                "assumenda",
                                "iure",
                            new RangeDomain("voluptate",
                                    "quam",
                                    "category"),
                                default,
                                "voluptatem")],
                        InitialState.Expanded,
                            "aut",
                            "non")],
                    InitialState.Collapsed,
                        "quia",
                        "aliquid")],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "token",
                        "aut tenetur id",
                        ExpressionInfoReturnType.String)]);
        await featureLayer.SetFormTemplate(testFormTemplate);
        var formTemplate = await featureLayer.GetFormTemplate();
        Assert.AreEqual(testFormTemplate, formTemplate);
        Extent testFullExtent = new Extent(-177.4097,
                    124.8079,
                    41.8074,
                    -20.7213,
                    206.2761,
                    786.2558,
                    96.5139,
                    496.4896,
                new SpatialReference(8,
                        "commodi",
                        "eligendi",
                        "assumenda"),
                    true,
                    true);
        await featureLayer.SetFullExtent(testFullExtent);
        var fullExtent = await featureLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.BelowCenter,
                    "sed",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    18206083.6623,
                    41776.6012,
                    true,
                    new Dimension(454.8589),
                new TextSymbol("exercitationem atque repellendus",
                    new MapColor(16, 184, 9),
                    new MapColor(75, 161, 1),
                        new Dimension(129.3973),
                    new MapFont(new Dimension(503.8104),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        579.9200,
                    new MapColor(186, 215, 109),
                    new MapColor(241, 183, 52),
                        538.1419,
                    HorizontalAlignment.Center,
                        true,
                        594.5294,
                        new Dimension(669.5482),
                        true),
                    true,
                    "PostalCode = 'M5V 1J9'")];
        await featureLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await featureLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("ab",
                SortOrder.Ascending,
                    "quo"),
            new OrderedLayerOrderBy("excepturi",
                SortOrder.Descending,
                    "et")];
        await featureLayer.SetOrderBy(testOrderBy);
        var orderBy = await featureLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("accusamus aliquid cum",
                    new MapColor(220, 189, 121),
                    new MapColor(116, 31, 87),
                        new Dimension(468.4992),
                    new MapFont(new Dimension(378.2998),
                            "Arial",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        554.5780,
                    new MapColor(206, 142, 138),
                    new MapColor(12, 61, 228),
                        324.6959,
                    HorizontalAlignment.Right,
                        true,
                        215.8688,
                        new Dimension(152.3636),
                        true),
                    "autem",
                [new RotationVariable("est",
                    Axis.Roll,
                    RotationType.Arithmetic,
                    new VisualVariableLegendOptions(true,
                            "et hic necessitatibus"),
                        "et",
                        "quos et aut"),
                new SizeVariable("nihil",
                        new Dimension(509.3216),
                        new Dimension(161.7370),
                        672.4200,
                        136.5623,
                        VisualValueRepresentation.Area,
                        VisualValueUnit.Centimeters,
                        "magni",
                        "labore",
                        true,
                        VisualAxis.Depth,
                        "porro",
                        "eaque aut rerum",
                    new VisualVariableLegendOptions(true,
                            "voluptate dolor eveniet"))],
                new AuthoringInfo(ClassificationMethod.EqualInterval,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(17, 177, 113),
                            new MapColor(222, 90, 193))]),
                        879.8562,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(307.5545,
                                274.8846),
                        new AuthoringInfoField1ClassBreakInfos(177.4554,
                                527.3927)],
                            "corrupti",
                            "eius",
                            "perspiciatis"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(199.2638,
                                238.7149),
                        new AuthoringInfoField1ClassBreakInfos(181.3284,
                                874.3257)],
                            "et",
                            "et",
                            "ad"),
                        ["enim"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "quia",
                        true,
                    LengthUnit.Decimeters,
                        410.0355,
                        182.4835,
                        610.5228,
                        208.8766));
        await featureLayer.SetRenderer(testRenderer);
        var renderer = await featureLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(7,
                    "dignissimos",
                    "nostrum",
                    "iste");
        await featureLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("rerum et",
                DrawingTool.Arrow,
                    "phone",
                new Graphic(new Extent(105.9540,
                            -71.0910,
                            51.4066,
                            -53.5619,
                            499.7430,
                            541.7829,
                            935.4260,
                            956.9528,
                        new SpatialReference(7,
                                "explicabo",
                                "illum",
                                "eaque"),
                            true,
                            true),
                    new TextSymbol("id ipsum qui",
                        new MapColor(10, 195, 54),
                        new MapColor(134, 245, 250),
                            new Dimension(972.6745),
                        new MapFont(new Dimension(536.1480),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            113.4683,
                        new MapColor(204, 131, 29),
                        new MapColor(145, 39, 212),
                            696.6964,
                        HorizontalAlignment.Center,
                            true,
                            981.0965,
                            new Dimension(831.2516),
                            true),
                    new PopupTemplate("magni autem neque",
                            "ut",
                            ["dolores"],
                        [new FieldInfo("group",
                                "et",
                                "quo",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                    "eum",
                                    "deleniti officia quidem"))],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "email",
                                "quia esse quisquam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "updatedAt",
                                "numquam enim quia",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                            [new ActionButton("fugiat sit enim",
                                "https://picsum.photos/640/480/?image=738",
                                "f8a9cc42-673e-cc1e-9128-6160eef7275d",
                                () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "maiores")]),
                        new AttributesDictionary(),
                        true,
                        "nemo",
                        "qui",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ex",
                            9)),
                    new Thumbnail("id",
                        "officia",
                        43.4253,
                        114.2516))];
        await featureLayer.SetTemplates(testTemplates);
        var templates = await featureLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2023, 3, 18, 8, 5, 58),
                    new DateTime(2014, 4, 11, 2, 4, 0));
        await featureLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await featureLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("voluptatem",
                    "vel",
                new TimeExtent(new DateTime(2008, 10, 25, 18, 46, 6),
                        new DateTime(2004, 7, 12, 16, 27, 40)),
                new TimeInterval(TemporalTime.Decades,
                        998.4630),
                    [new DateTime(2016, 4, 2, 15, 39, 4)],
                    "America/Lima",
                    "ut");
        await featureLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await featureLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    497.9309);
        await featureLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await featureLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        IReadOnlyList<FeatureType> testTypes = [new FeatureType("e51082aa-ab9c-9b63-fbd3-c52d45bd5460",
                    "createdAt",
                [new FeatureTemplate("assumenda aut",
                    DrawingTool.DownArrow,
                        "group",
                    new Graphic(new Extent(-158.5401,
                                -125.0066,
                                -58.7762,
                                56.9226,
                                468.7431,
                                719.3312,
                                761.3633,
                                658.6881,
                            new SpatialReference(4,
                                    "aut",
                                    "officia",
                                    "autem"),
                                true,
                                true),
                        new TextSymbol("ex delectus non",
                            new MapColor(221, 41, 154),
                            new MapColor(136, 139, 40),
                                new Dimension(344.4814),
                            new MapFont(new Dimension(479.6769),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.None),
                                71.1413,
                            new MapColor(56, 117, 110),
                            new MapColor(102, 155, 123),
                                545.8478,
                            HorizontalAlignment.Right,
                                true,
                                440.8135,
                                new Dimension(206.3367),
                                true),
                        new PopupTemplate("amet repellat et",
                                "suscipit",
                                ["labore",
                                    "cumque"],
                            [new FieldInfo("createdAt",
                                    "voluptatibus",
                                    "voluptatem",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("comment",
                                    "commodi",
                                    "animi",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Avg)],
                            [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                        "exercitationem",
                                        "aspernatur nam magnam"))],
                            [new ExpressionInfo("return Date();",
                                    "title",
                                    "rerum voluptate non",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                                [new ActionButton("adipisci ipsum voluptates",
                                    "https://picsum.photos/640/480/?image=618",
                                    "f63ee155-9737-f10d-ea17-a25a6f03b872",
                                    () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "nesciunt")]),
                            new AttributesDictionary(),
                            true,
                            "consectetur",
                            "quaerat",
                            new GraphicOrigin(Guid.NewGuid(),
                                "beatae",
                                2)),
                        new Thumbnail("adipisci",
                            "omnis",
                            73.7128,
                            111.3612)),
                new FeatureTemplate("iure deserunt",
                    DrawingTool.Freehand,
                        "token",
                    new Graphic(new Polyline([new MapPath([new MapPoint([423.5608])])],
                            new SpatialReference(3,
                                    "rerum",
                                    "dignissimos",
                                    "aut"),
                                true,
                                true),
                        new TextSymbol("a reprehenderit reprehenderit",
                            new MapColor(9, 200, 200),
                            new MapColor(78, 14, 99),
                                new Dimension(75.6631),
                            new MapFont(new Dimension(657.3787),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.None),
                                167.4699,
                            new MapColor(53, 129, 186),
                            new MapColor(113, 28, 241),
                                974.4391,
                            HorizontalAlignment.Left,
                                true,
                                920.6185,
                                new Dimension(755.4145),
                                true),
                        new PopupTemplate("fuga rerum in",
                                "voluptas",
                                ["modi"],
                            [new FieldInfo("updatedAt",
                                    "cumque",
                                    "hic",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Sum)],
                            [new FieldsPopupContent([new FieldInfo("comment",
                                        "nobis",
                                        "qui",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.ShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("category",
                                        "tempora",
                                        "repellendus",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.DayShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "qui voluptatem est error",
                                    "laboriosam provident et")],
                            [new ExpressionInfo("return $feature.Name;",
                                    "comment",
                                    "animi et temporibus",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "avatar",
                                    "velit beatae quasi",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                                [new ActionButton("error praesentium vitae",
                                    "https://picsum.photos/640/480/?image=269",
                                    "94af5c8f-63c7-9b07-b688-8bbc6ee86a7c",
                                    () => { Console.WriteLine("iure"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "eum"),
                                    new ActionButton("voluptatibus temporibus repellat",
                                        "https://picsum.photos/640/480/?image=780",
                                        "0e718005-c01b-04c4-9d8b-1e6a9fbec006",
                                        () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                                        "name",
                                        true,
                                        true,
                                        true,
                                        "voluptas")]),
                            new AttributesDictionary(),
                            true,
                            "fugit",
                            "id",
                            new GraphicOrigin(Guid.NewGuid(),
                                "nulla",
                                8)),
                        new Thumbnail("magnam",
                            "qui",
                            112.9622,
                            252.9042))],
                new Dictionary<string, Domain>() {
                    { "fugit", new InheritedDomain("status") },
                    { "quasi", new RangeDomain("harum",
                            "sapiente",
                            "group") }
                },
                    "harum")];
        await featureLayer.SetTypes(testTypes);
        var types = await featureLayer.GetTypes();
        Assert.AreEqual(testTypes, types);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2008, 4, 16, 11, 37, 34),
                    new DateTime(2007, 2, 22, 4, 56, 57));
        await featureLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await featureLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
