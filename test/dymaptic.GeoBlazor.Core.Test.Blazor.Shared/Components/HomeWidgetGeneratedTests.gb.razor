@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedHomeWidget(Action renderHandler)
    {
        HomeWidget? homeWidget = null;

        HomeGoEvent? goResult = null;
        void OnGo(HomeGoEvent result)
        {
            goResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                </Map>
                <HomeWidget 
                    GoToOverride="@(new GoToOverride())"
                    Icon="@("quia")"
                    Label="@("voluptas")"
                    UiStrings="@("unde")"
                    ViewModel="@(new HomeViewModel(new GoToOverride(),
                        new Viewpoint(new Extent(-35.7458,
                                    38.2457,
                                    -80.7157,
                                    62.1602,
                                    799.2577,
                                    769.1614,
                                    418.9851,
                                    436.8013,
                                new SpatialReference(4,
                                        "nobis",
                                        "nam",
                                        "adipisci"),
                                    true,
                                    true),
                                9494665.1544,
                                313.3180,
                            new Camera(343.9228,
                                    27.1008,
                                new CameraLayout(63.7567,
                                        761.2329,
                                        239.2587,
                                        128.8878),
                                new Point(136.7085,
                                        0.0054,
                                        20.2089,
                                        -46.5249,
                                        260.2147,
                                    new SpatialReference(5,
                                            "totam",
                                            "animi",
                                            "dolor"),
                                        true,
                                        true,
                                        246.4541),
                                    991.7736))))"
                    Viewpoint="@(new Viewpoint(new Polyline([new MapPath([new MapPoint([285.9067,
                                    408.7193]),
                                new MapPoint([372.4749])]),
                                new MapPath([new MapPoint([537.1489,
                                        843.5200]),
                                    new MapPoint([860.4750,
                                        842.5550])])],
                            new SpatialReference(7,
                                    "nihil",
                                    "maiores",
                                    "perspiciatis"),
                                true,
                                true),
                            23816437.6413,
                            175.9000,
                        new Camera(929.5060,
                                114.8882,
                            new CameraLayout(441.8908,
                                    247.5523,
                                    489.5597,
                                    618.2471),
                            new Point(-119.7612,
                                    -5.4880,
                                    161.1539,
                                    26.0686,
                                    861.8265,
                                new SpatialReference(5,
                                        "facere",
                                        "molestiae",
                                        "est"),
                                    true,
                                    true,
                                    185.9108),
                                766.9408)))"
                    WidgetId="@("voluptatem")"
                    OnGo="OnGo">
                </HomeWidget>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(homeWidget!);
        await AssertJavaScript("dispatchEvent", args: [homeWidget!.Id, "go"]);
        int tries = 100;
        while (tries > 0 &&
            (goResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<HomeGoEvent>(goResult);
        await AssertJavaScript("assertWidgetExists", args: "home");
        await homeWidget.CancelGo();
        await homeWidget.Go();
        GoToOverride testGoToOverride = new GoToOverride();
        await homeWidget.SetGoToOverride(testGoToOverride);
        var goToOverride = await homeWidget.GetGoToOverride();
        Assert.AreEqual(testGoToOverride, goToOverride);
        HomeViewModel testViewModel = new HomeViewModel(new GoToOverride(),
                new Viewpoint(new Extent(70.8074,
                            31.1565,
                            -15.5283,
                            -69.4942,
                            560.5764,
                            686.4644,
                            190.3899,
                            573.1633,
                        new SpatialReference(6,
                                "non",
                                "est",
                                "quam"),
                            true,
                            true),
                        14345160.2533,
                        350.7042,
                    new Camera(100.8251,
                            18.7071,
                        new CameraLayout(512.0588,
                                350.5898,
                                858.9694,
                                80.0465),
                        new Point(116.3250,
                                4.2281,
                                139.3618,
                                36.9630,
                                647.8908,
                            new SpatialReference(2,
                                    "aperiam",
                                    "quo",
                                    "voluptatem"),
                                true,
                                true,
                                634.7113),
                            536.9915)));
        await homeWidget.SetViewModel(testViewModel);
        var viewModel = await homeWidget.GetViewModel();
        Assert.AreEqual(testViewModel, viewModel);
        Viewpoint testViewpoint = new Viewpoint(new Point(-93.4364,
                        -8.8764,
                        -136.9396,
                        -4.3263,
                        469.0685,
                    new SpatialReference(4,
                            "quae",
                            "necessitatibus",
                            "nostrum"),
                        true,
                        true,
                        117.5491),
                    17921202.8699,
                    216.6896,
                new Camera(97.7869,
                        850.0428,
                    new CameraLayout(747.7662,
                            225.8102,
                            462.8962,
                            866.2485),
                    new Point(58.9636,
                            55.8528,
                            98.7980,
                            34.7586,
                            90.3461,
                        new SpatialReference(2,
                                "rerum",
                                "pariatur",
                                "earum"),
                            true,
                            true,
                            896.9648),
                        289.1195));
        await homeWidget.SetViewpoint(testViewpoint);
        var viewpoint = await homeWidget.GetViewpoint();
        Assert.AreEqual(testViewpoint, viewpoint);
    }
}
