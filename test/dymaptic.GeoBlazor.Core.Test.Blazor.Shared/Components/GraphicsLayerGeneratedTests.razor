@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("deleniti quibusdam molestiae")"
                        Opacity="@(0.9983)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(46695.7612)"
                        MaxScale="@(23010761.5559)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.VividLight)"
                        Effect="@(new Effect("rerum",
                            49635651.2931))">
                        <TimeExtent 
                            Start="@(new DateTime(2022, 5, 22, 8, 23, 7))"
                            End="@(new DateTime(2001, 3, 21, 5, 2, 36))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Extent(142.4651,
                                    -35.2573,
                                    -65.6681,
                                    -8.3012,
                                    842.7365,
                                    189.5969,
                                    394.9875,
                                    675.0002,
                                new SpatialReference(9,
                                        "ipsum",
                                        "aut",
                                        "aspernatur"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("nihil minus rem",
                                new MapColor(21, 147, 133),
                                new MapColor(204, 114, 4),
                                    new Dimension(914.3521),
                                new MapFont(new Dimension(337.6149),
                                        "Helvetica",
                                    MapFontStyle.Oblique,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    866.5345,
                                new MapColor(220, 254, 18),
                                new MapColor(59, 176, 85),
                                    242.8319,
                                HorizontalAlignment.Left,
                                    true,
                                    157.5727,
                                    new Dimension(495.2174),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("quia qui a",
                                    "sunt",
                                    ["recusandae",
                                        "omnis"],
                                [new FieldInfo("name",
                                        "officia",
                                        "velit",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("updatedAt",
                                        "explicabo",
                                        "quis",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDate),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new FieldsPopupContent([new FieldInfo("password",
                                            "autem",
                                            "perferendis",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var)],
                                        "vero consequuntur",
                                        "labore quia est"),
                                new FieldsPopupContent([new FieldInfo("status",
                                            "sapiente",
                                            "consequuntur",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("comment",
                                            "totam",
                                            "unde",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateLeShortTime),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                        "et expedita voluptatum impedit",
                                        "rerum voluptas id")],
                                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "category",
                                        "quis quia odio",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("enim ex non",
                                        "https://picsum.photos/640/480/?image=556",
                                        "42e655b7-2ea3-5425-b7b5-cd07af476d28",
                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "et"),
                                        new ActionButton("quo est est",
                                            "https://picsum.photos/640/480/?image=865",
                                            "9d2a8c89-7716-8e19-6b1c-92213d5026a4",
                                            () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                                            "password",
                                            true,
                                            true,
                                            true,
                                            "nulla")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("rerum")"
                            AggregateGeometries="@("dolorum")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "quae",
                                7))">
                        </Graphic>
                        <Extent 
                            Xmax="@(38.9743)"
                            Xmin="@(-1.4398)"
                            Ymax="@(22.2917)"
                            Ymin="@(-88.8921)"
                            Zmax="@(553.2777)"
                            Zmin="@(214.3504)"
                            Mmax="@(728.2040)"
                            Mmin="@(495.1247)"
                            SpatialReference="@(new SpatialReference(7,
                                    "omnis",
                                    "in",
                                    "et"))"
                            HasM="@(true)"
                            HasZ="@(true)">
                        </Extent>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "amet possimus distinctio"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(56.4494)"
                            Unit="@(ElevationUnit.DecimalDegrees)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Extent(-72.6335,
                        87.6828,
                        -40.0721,
                        38.2732,
                        533.5508,
                        984.1815,
                        24.0056,
                        845.6070,
                    new SpatialReference(4,
                            "ea",
                            "voluptatum",
                            "voluptates"),
                        true,
                        true),
                new TextSymbol("et vel vero",
                    new MapColor(245, 126, 68),
                    new MapColor(116, 187, 0),
                        new Dimension(194.2742),
                    new MapFont(new Dimension(653.9561),
                            "Garamond",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.None),
                        564.9158,
                    new MapColor(67, 139, 176),
                    new MapColor(88, 138, 158),
                        727.2907,
                    HorizontalAlignment.Right,
                        true,
                        385.2657,
                        new Dimension(2.1428),
                        true),
                new PopupTemplate("eveniet quasi nobis",
                        "qui",
                        ["aut"],
                    [new FieldInfo("status",
                            "esse",
                            "ea",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new TextPopupContent("qui minus non")],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "updatedAt",
                            "rerum architecto dolorum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "id",
                            "corporis inventore ut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("et numquam qui",
                            "https://picsum.photos/640/480/?image=124",
                            "13cdd89f-5475-52c8-579c-fbf35f519944",
                            () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "impedit")]),
                    new AttributesDictionary(),
                    true,
                    "et",
                    "suscipit",
                    new GraphicOrigin(Guid.NewGuid(),
                        "voluptates",
                        1)),
            new Graphic(new Polygon([new MapPath([new MapPoint([304.0094,
                            276.0536]),
                        new MapPoint([771.4683])]),
                        new MapPath([new MapPoint([657.2618]),
                            new MapPoint([642.6674,
                                306.9532])])],
                    new SpatialReference(8,
                            "quisquam",
                            "animi",
                            "dolores"),
                    new Point(139.7565,
                            59.3825,
                            -84.4659,
                            60.9350,
                            657.4972,
                        new SpatialReference(5,
                                "quia",
                                "facere",
                                "et"),
                            true,
                            true,
                            170.6568),
                        true,
                        true,
                        true),
                new TextSymbol("earum provident in",
                    new MapColor(45, 140, 3),
                    new MapColor(100, 199, 120),
                        new Dimension(20.2220),
                    new MapFont(new Dimension(844.1929),
                            "Helvetica",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        750.0249,
                    new MapColor(6, 147, 251),
                    new MapColor(236, 213, 238),
                        250.2322,
                    HorizontalAlignment.Center,
                        true,
                        739.8465,
                        new Dimension(243.6701),
                        true),
                new PopupTemplate("autem dolorum est",
                        "repellendus",
                        ["eos"],
                    [new FieldInfo("status",
                            "quas",
                            "cumque",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("createdAt",
                            "quos",
                            "sed",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Min)],
                    [new TextPopupContent("maxime neque qui")],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "id",
                            "est nesciunt iure",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "animi atque rerum",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("occaecati sint sint",
                            "https://picsum.photos/640/480/?image=278",
                            "5e5cfef1-6ccd-2fe3-8f73-989e3288f7fa",
                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "culpa"),
                            new ActionButton("qui praesentium fugit",
                                "https://picsum.photos/640/480/?image=72",
                                "9ad6dd40-e7cd-9477-d2e7-9d373fb1eaf5",
                                () => { Console.WriteLine("delectus"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "nulla")]),
                    new AttributesDictionary(),
                    true,
                    "et",
                    "reprehenderit",
                    new GraphicOrigin(Guid.NewGuid(),
                        "exercitationem",
                        8))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Point(-5.1288,
                        -40.2840,
                        -126.8505,
                        -81.5209,
                        383.3463,
                    new SpatialReference(7,
                            "est",
                            "quas",
                            "nemo"),
                        true,
                        true,
                        323.9109),
                new TextSymbol("magnam error veniam",
                    new MapColor(145, 203, 75),
                    new MapColor(239, 30, 58),
                        new Dimension(433.2858),
                    new MapFont(new Dimension(919.7219),
                            "Verdana",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        824.6496,
                    new MapColor(189, 164, 171),
                    new MapColor(185, 120, 89),
                        977.9414,
                    HorizontalAlignment.Right,
                        true,
                        568.8694,
                        new Dimension(986.6803),
                        true),
                new PopupTemplate("facere ut ipsam",
                        "voluptatem",
                        ["temporibus"],
                    [new FieldInfo("category",
                            "ab",
                            "voluptatum",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new MediaPopupContent("veritatis eum vel",
                            "nesciunt alias facilis",
                        [new LineChartMediaInfo("minus fugit dolor",
                                "odit",
                                "aut quisquam distinctio",
                            new ChartMediaInfoValue(["aut"],
                                    "voluptatem",
                                    "sit",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "exercitationem",
                                        604.1434),
                                new ChartMediaInfoValueSeries("phone",
                                        "illo",
                                        407.1064)],
                                [new MapColor(137, 81, 77)])),
                        new ImageMediaInfo("laboriosam expedita reiciendis",
                                "veniam",
                                "nostrum saepe aliquam",
                            new ImageMediaInfoValue("http://jackeline.info",
                                    "http://yvette.com"),
                                444.4039)],
                            4),
                    new AttachmentsPopupContent("et sapiente assumenda",
                            "aut fugit ut cupiditate",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "category",
                            "voluptatem officia voluptatem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "createdAt",
                            "natus consequatur sed",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("et corrupti harum",
                            "https://picsum.photos/640/480/?image=186",
                            "6c1b40c3-a0bb-e35e-f246-85dc3aae7837",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "est"),
                            new ActionButton("rerum sunt consequatur",
                                "https://picsum.photos/640/480/?image=577",
                                "90a4eab5-e62c-a98f-a7aa-9c90e73b36a7",
                                () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "saepe")]),
                    new AttributesDictionary(),
                    true,
                    "nemo",
                    "dolorum",
                    new GraphicOrigin(Guid.NewGuid(),
                        "soluta",
                        7)),
            new Graphic(new Polyline([new MapPath([new MapPoint([589.1149])]),
                        new MapPath([new MapPoint([826.1151,
                                64.4102]),
                            new MapPoint([246.0476])])],
                    new SpatialReference(1,
                            "ipsum",
                            "nostrum",
                            "iusto"),
                        true,
                        true),
                new TextSymbol("et repellendus ut",
                    new MapColor(65, 214, 224),
                    new MapColor(131, 56, 59),
                        new Dimension(653.5713),
                    new MapFont(new Dimension(522.2338),
                            "Garamond",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        209.7050,
                    new MapColor(47, 112, 154),
                    new MapColor(151, 235, 155),
                        105.5247,
                    HorizontalAlignment.Right,
                        true,
                        283.6357,
                        new Dimension(833.8068),
                        true),
                new PopupTemplate("quas aperiam perferendis",
                        "voluptatum",
                        ["doloribus"],
                    [new FieldInfo("group",
                            "nesciunt",
                            "perferendis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("email",
                            "sed",
                            "consequatur",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new MediaPopupContent("nesciunt et velit",
                            "modi similique consequuntur earum",
                        [new BarChartMediaInfo("non sequi mollitia",
                                "non",
                                "possimus architecto non",
                            new ChartMediaInfoValue(["inventore"],
                                    "id",
                                    "odit",
                                [new ChartMediaInfoValueSeries("name",
                                        "rem",
                                        106.3182)],
                                [new MapColor(179, 120, 23)]))],
                            6),
                    new AttachmentsPopupContent("accusamus non qui",
                            "et quia quam",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "updatedAt",
                            "cum id sit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "updatedAt",
                            "omnis distinctio quis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("quis similique veritatis",
                            "https://picsum.photos/640/480/?image=380",
                            "cdf8765f-4142-96d9-5b45-d03a5e593b30",
                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "vel"),
                            new ActionButton("nulla ipsum nesciunt",
                                "https://picsum.photos/640/480/?image=493",
                                "11e70593-0e29-a89e-65c3-0e49da20d8f8",
                                () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "deleniti")]),
                    new AttributesDictionary(),
                    true,
                    "ratione",
                    "perferendis",
                    new GraphicOrigin(Guid.NewGuid(),
                        "quasi",
                        4))]);
        ListMode testListMode = ListMode.Show;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.ColorBurn;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "quo sit perspiciatis"),
                ElevationInfoMode.AbsoluteHeight,
                    200.7820,
                ElevationUnit.Centimeters);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(136.7560,
                    26.1187,
                    20.5074,
                    12.3067,
                    849.6699,
                    455.9462,
                    178.4686,
                    60.3638,
                new SpatialReference(8,
                        "et",
                        "provident",
                        "ab"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2021, 8, 15, 0, 10, 17),
                    new DateTime(2009, 6, 27, 2, 32, 46));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
