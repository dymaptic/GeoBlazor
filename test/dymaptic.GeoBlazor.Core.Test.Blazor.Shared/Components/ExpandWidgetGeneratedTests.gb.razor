@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedExpandWidget(Action renderHandler)
    {
        ExpandWidget? expandWidget = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                </Map>
                <ExpandWidget 
                    Mode="@(ExpandMode.Floating)"
                    AutoCollapse="@(true)"
                    CloseOnEsc="@(true)"
                    CollapseIcon="@("minima")"
                    CollapseTooltip="@("ratione")"
                    Expanded="@(true)"
                    ExpandIcon="@("odit")"
                    ExpandTooltip="@("molestiae")"
                    Group="@("aut")"
                    Icon="@("voluptatum")"
                    IconNumber="@(958.7939)"
                    Label="@("molestias")"
                    Placement="@(Placement.BeginEnd)"
                    WidgetId="@("ab")">
                    <ExpandViewModel 
                        AutoCollapse="@(true)"
                        Expanded="@(true)"
                        Group="@("nobis")">
                    </ExpandViewModel>
                </ExpandWidget>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(expandWidget!);
        await AssertJavaScript("assertWidgetExists", args: "expand");
        await expandWidget.Collapse();
        await expandWidget.Expand();
        await expandWidget.Toggle();
        Placement testPlacement = Placement.End;
        await expandWidget.SetPlacement(testPlacement);
        var placement = await expandWidget.GetPlacement();
        Assert.AreEqual(testPlacement, placement);
        ExpandViewModel testViewModel = new ExpandViewModel(true,
                    true,
                    "est");
        await expandWidget.SetViewModel(testViewModel);
        var viewModel = await expandWidget.GetViewModel();
        Assert.AreEqual(testViewModel, viewModel);
    }
}
