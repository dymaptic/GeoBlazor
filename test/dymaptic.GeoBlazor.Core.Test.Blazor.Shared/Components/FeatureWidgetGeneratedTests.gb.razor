@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedFeatureWidget(Action renderHandler)
    {
        FeatureWidget? featureWidget = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                </Map>
                <FeatureWidget 
                    DefaultPopupTemplateEnabled="@(true)"
                    HeadingLevel="@(422.6121)"
                    Icon="@("deleniti")"
                    Label="@("corporis")"
                    TimeZone="@("Asia/Dhaka")"
                    WidgetId="@("temporibus")">
                    <FeatureVisibleElements 
                        BoolContent="@(true)"
                        LastEditedInfo="@(true)"
                        Title="@(true)"
                        VisibleContentElementsContent="@(new VisibleContentElements(true,
                                true,
                                true,
                                true,
                                true))">
                    </FeatureVisibleElements>
                    <FeatureViewModel 
                        Abilities="@(new Abilities(true,
                                true,
                                true,
                                true,
                                true,
                                true))"
                        DefaultPopupTemplateEnabled="@(true)"
                        Location="@(new Point(-8.7267,
                                62.5399,
                                -119.1982,
                                -58.2361,
                                854.7030,
                            new SpatialReference(6,
                                    "aut",
                                    "sed",
                                    "illum"),
                                true,
                                true,
                                643.4264))"
                        TimeZone="@("Europe/Ljubljana")">
                        <SpatialReference 
                            Wkid="@(6)"
                            ImageCoordinateSystem="@("quia")"
                            Wkt="@("culpa")"
                            Wkt2="@("quia")">
                        </SpatialReference>
                        <Graphic 
                            Geometry="@(new Extent(92.7874,
                                    2.8501,
                                    -24.1018,
                                    -73.8987,
                                    841.9294,
                                    615.7003,
                                    165.8518,
                                    858.9677,
                                new SpatialReference(2,
                                        "est",
                                        "beatae",
                                        "incidunt"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("necessitatibus ut autem",
                                new MapColor(251, 90, 85),
                                new MapColor(225, 218, 2),
                                    new Dimension(66.4155),
                                new MapFont(new Dimension(710.6956),
                                        "Helvetica",
                                    MapFontStyle.Normal,
                                    FontWeight.Bolder,
                                    TextDecoration.None),
                                    31.7058,
                                new MapColor(191, 203, 204),
                                new MapColor(171, 36, 10),
                                    924.4536,
                                HorizontalAlignment.Right,
                                    true,
                                    911.1455,
                                    new Dimension(595.9300),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("nam quo itaque",
                                    "nobis",
                                    ["excepturi",
                                        "saepe"],
                                [new FieldInfo("updatedAt",
                                        "sed",
                                        "consequuntur",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new MediaPopupContent("eum qui rerum",
                                        "facilis et",
                                    [new LineChartMediaInfo("rerum earum enim",
                                            "earum",
                                            "laboriosam rerum quidem",
                                        new ChartMediaInfoValue(["nemo"],
                                                "culpa",
                                                "et",
                                            [new ChartMediaInfoValueSeries("token",
                                                    "architecto",
                                                    43.5571),
                                            new ChartMediaInfoValueSeries("id",
                                                    "sint",
                                                    718.8411)],
                                            [new MapColor(206, 156, 196),
                                            new MapColor(3, 19, 204)])),
                                    new PieChartMediaInfo("fugiat saepe est",
                                            "non",
                                            "iure nulla sit",
                                        new ChartMediaInfoValue(["architecto"],
                                                "sed",
                                                "illum",
                                            [new ChartMediaInfoValueSeries("token",
                                                    "cupiditate",
                                                    141.1418)],
                                            [new MapColor(31, 42, 120)]))],
                                        2),
                                new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "sed",
                                            "rerum laborum voluptates"))],
                                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "password",
                                        "consectetur quo est",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("corrupti sapiente et",
                                        "https://picsum.photos/640/480/?image=668",
                                        "599b0a61-1a13-b528-2c49-eceab8ca27ae",
                                        () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                                        "avatar",
                                        true,
                                        true,
                                        true,
                                        "fugit"),
                                        new ActionButton("eum perspiciatis cupiditate",
                                            "https://picsum.photos/640/480/?image=1036",
                                            "d369186c-148f-2f57-b71f-ec5db2f2c6df",
                                            () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                                            "avatar",
                                            true,
                                            true,
                                            true,
                                            "exercitationem")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("sint")"
                            AggregateGeometries="@("praesentium")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "aliquid",
                                3))">
                        </Graphic>
                    </FeatureViewModel>
                    <SpatialReference 
                        Wkid="@(6)"
                        ImageCoordinateSystem="@("quibusdam")"
                        Wkt="@("sapiente")"
                        Wkt2="@("repellendus")">
                    </SpatialReference>
                    <Graphic 
                        Geometry="@(new Polygon([new MapPath([new MapPoint([962.9182,
                                    170.3984]),
                                new MapPoint([821.9089])]),
                                new MapPath([new MapPoint([947.3216,
                                        573.3184]),
                                    new MapPoint([310.9527,
                                        545.6292])])],
                            new SpatialReference(6,
                                    "quis",
                                    "est",
                                    "beatae"),
                            new Point(-36.5809,
                                    75.3186,
                                    77.9243,
                                    -36.4073,
                                    838.1727,
                                new SpatialReference(3,
                                        "ut",
                                        "voluptatem",
                                        "amet"),
                                    true,
                                    true,
                                    164.2907),
                                true,
                                true,
                                true))"
                        Symbol="@(new TextSymbol("maiores accusantium quos",
                            new MapColor(50, 230, 34),
                            new MapColor(59, 183, 42),
                                new Dimension(47.5390),
                            new MapFont(new Dimension(758.1112),
                                    "Arial",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                811.2313,
                            new MapColor(81, 150, 9),
                            new MapColor(61, 224, 8),
                                850.0732,
                            HorizontalAlignment.Left,
                                true,
                                585.8128,
                                new Dimension(568.0746),
                                true))"
                        PopupTemplate="@(new PopupTemplate("modi aut non",
                                "aliquid",
                                ["magnam",
                                    "consequatur"],
                            [new FieldInfo("status",
                                    "dolorum",
                                    "neque",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Var)],
                            [new FieldsPopupContent([new FieldInfo("group",
                                        "consequatur",
                                        "esse",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.ShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("id",
                                        "delectus",
                                        "est",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "vero aut sed",
                                    "blanditiis voluptatibus animi"),
                            new RelationshipPopupContent("molestiae fuga quam",
                                    "animi itaque",
                                    7,
                                    "eius",
                                [new RelatedRecordsInfoFieldOrder("non",
                                    OrderBy.Asc)],
                                    4)],
                            [new ExpressionInfo("return $feature['FieldName'];",
                                    "email",
                                    "vitae unde quod",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                                [new ActionButton("voluptatem incidunt dolorum",
                                    "https://picsum.photos/640/480/?image=424",
                                    "31347127-aa73-e2f4-2d41-4401974f1ec3",
                                    () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                                    "phone",
                                    true,
                                    true,
                                    true,
                                    "quos"),
                                    new ActionButton("et rerum commodi",
                                        "https://picsum.photos/640/480/?image=870",
                                        "df4a0d64-c1d6-5bab-eee1-8486455e3903",
                                        () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                                        "status",
                                        true,
                                        true,
                                        true,
                                        "itaque")]))"
                        Attributes="@(new AttributesDictionary())"
                        Visible="@(true)"
                        LegendLabel="@("pariatur")"
                        AggregateGeometries="@("dolore")"
                        Origin="@(new GraphicOrigin(Guid.NewGuid(),
                            "dolores",
                            4))">
                    </Graphic>
                </FeatureWidget>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(featureWidget!);
        await AssertJavaScript("assertWidgetExists", args: "feature");
        await featureWidget.NextMedia(8);
        await featureWidget.PreviousMedia(8);
        await featureWidget.SetActiveMedia(6,
                9);
        Graphic testGraphic = new Graphic(new Polyline([new MapPath([new MapPoint([623.4763,
                            88.3823]),
                        new MapPoint([811.1706])])],
                    new SpatialReference(8,
                            "a",
                            "incidunt",
                            "sit"),
                        true,
                        true),
                new TextSymbol("repellendus odit doloremque",
                    new MapColor(175, 152, 191),
                    new MapColor(157, 99, 35),
                        new Dimension(600.1497),
                    new MapFont(new Dimension(393.8488),
                            "Courier New",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        975.2167,
                    new MapColor(231, 124, 149),
                    new MapColor(51, 80, 136),
                        531.1542,
                    HorizontalAlignment.Left,
                        true,
                        684.9509,
                        new Dimension(381.6766),
                        true),
                new PopupTemplate("sit perferendis aut",
                        "non",
                        ["incidunt",
                            "corrupti"],
                    [new FieldInfo("name",
                            "minus",
                            "unde",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Var)],
                    [new MediaPopupContent("veniam modi dolor",
                            "dicta expedita velit sed",
                        [new LineChartMediaInfo("natus eius repellendus",
                                "dolores",
                                "ut doloribus qui",
                            new ChartMediaInfoValue(["dignissimos",
                                    "commodi"],
                                    "eos",
                                    "veritatis",
                                [new ChartMediaInfoValueSeries("id",
                                        "soluta",
                                        879.6313)],
                                [new MapColor(105, 16, 89)]))],
                            8),
                    new TextPopupContent("sit quod voluptatem")],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "comment",
                            "aperiam minima dolor",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "avatar",
                            "voluptatem qui excepturi",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("et magnam dolorem",
                            "https://picsum.photos/640/480/?image=506",
                            "000cc84b-24ca-c9bc-d369-d06073eae79f",
                            () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "excepturi"),
                            new ActionButton("qui dolore enim",
                                "https://picsum.photos/640/480/?image=957",
                                "c5fd88ac-74f1-a586-4b9d-266b50b18c73",
                                () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "ratione")]),
                    new AttributesDictionary(),
                    true,
                    "ea",
                    "vero",
                    new GraphicOrigin(Guid.NewGuid(),
                        "mollitia",
                        2));
        await featureWidget.SetGraphic(testGraphic);
        var graphic = await featureWidget.GetGraphic();
        Assert.AreEqual(testGraphic, graphic);
        SpatialReference testSpatialReference = new SpatialReference(3,
                    "perspiciatis",
                    "eum",
                    "reiciendis");
        await featureWidget.SetSpatialReference(testSpatialReference);
        var spatialReference = await featureWidget.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        FeatureViewModel testViewModel = new FeatureViewModel(new Abilities(true,
                        true,
                        true,
                        true,
                        true,
                        true),
                    true,
                new Graphic(new Polyline([new MapPath([new MapPoint([511.3541])]),
                            new MapPath([new MapPoint([481.4337])])],
                        new SpatialReference(4,
                                "debitis",
                                "iure",
                                "dicta"),
                            true,
                            true),
                    new TextSymbol("animi est accusantium",
                        new MapColor(28, 249, 36),
                        new MapColor(199, 234, 160),
                            new Dimension(789.3450),
                        new MapFont(new Dimension(31.8705),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            47.0403,
                        new MapColor(131, 129, 26),
                        new MapColor(202, 152, 74),
                            576.8499,
                        HorizontalAlignment.Center,
                            true,
                            638.8078,
                            new Dimension(821.2794),
                            true),
                    new PopupTemplate("quia dignissimos quo",
                            "voluptatem",
                            ["cum"],
                        [new FieldInfo("password",
                                "nihil",
                                "qui",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Max)],
                        [new TextPopupContent("alias sint aliquam"),
                        new RelationshipPopupContent("accusantium et debitis",
                                "molestias dolores",
                                7,
                                "non",
                            [new RelatedRecordsInfoFieldOrder("quasi",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("nisi",
                                OrderBy.Desc)],
                                5)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "category",
                                "et repellat fugit",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                            [new ActionButton("nemo dolor odit",
                                "https://picsum.photos/640/480/?image=583",
                                "8e3aaf23-e6dc-77a7-576b-4ed3fa9fac03",
                                () => { Console.WriteLine("maxime"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "placeat"),
                                new ActionButton("et architecto vel",
                                    "https://picsum.photos/640/480/?image=781",
                                    "250266a4-06b8-c869-5053-81384167ae4c",
                                    () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "voluptas")]),
                        new AttributesDictionary(),
                        true,
                        "voluptas",
                        "sed",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            7)),
                new Point(6.2469,
                        -39.8080,
                        69.0616,
                        -0.8013,
                        409.8906,
                    new SpatialReference(2,
                            "sit",
                            "quae",
                            "nulla"),
                        true,
                        true,
                        641.0325),
                new SpatialReference(5,
                        "deserunt",
                        "sint",
                        "accusantium"),
                    "Asia/Tbilisi");
        await featureWidget.SetViewModel(testViewModel);
        var viewModel = await featureWidget.GetViewModel();
        Assert.AreEqual(testViewModel, viewModel);
        FeatureVisibleElements testVisibleElements = new FeatureVisibleElements(true,
                    true,
                    true,
                new VisibleContentElements(true,
                        true,
                        true,
                        true,
                        true));
        await featureWidget.SetVisibleElements(testVisibleElements);
        var visibleElements = await featureWidget.GetVisibleElements();
        Assert.AreEqual(testVisibleElements, visibleElements);
    }
}
