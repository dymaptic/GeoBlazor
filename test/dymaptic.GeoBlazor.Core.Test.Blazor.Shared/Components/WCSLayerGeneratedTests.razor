@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedWCSLayer(Action renderHandler)
    {
        WCSLayer? wCSLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <WCSLayer 
                        Url="@("https://landsat2.arcgis.com/arcgis/rest/services/Landsat/MS/ImageServer")"
                        Renderer="@(new RasterStretchRenderer(new AlgorithmicColorRamp(Algorithm.CieLab,
                                new MapColor(238, 63, 102),
                                new MapColor(254, 35, 86)),
                            true,
                            true,
                            [2,
                            9],
                            7,
                            3,
                            StretchType.PercentClip,
                            [new RasterBandStatistics(742.7703,
                                1,
                                385.5660,
                                59.3807,
                                225.8643,
                                64.1730,
                                637.1793,
                                889.4370)],
                            true,
                            8))"
                        Opacity="@(0.0910)"
                        Title="@("sint quasi est")"
                        BandIds="@([5])"
                        BlendMode="@(BlendMode.ColorDodge)"
                        Copyright="@("corporis")"
                        CoverageId="@("iure")"
                        CoverageInfo="@(new CoverageInfo(["id"],
                            new CoverageDescriptionV201(new CoverageDescriptionV201BoundedBy(["minus",
                                        "dolores"],
                                        new DateTime(2002, 3, 18, 3, 8, 15),
                                        new DateTime(2020, 6, 13, 11, 14, 30),
                                    new Extent(-101.3876,
                                            -55.6390,
                                            61.0333,
                                            19.0500,
                                            85.9892,
                                            117.1771,
                                            23.9995,
                                            869.4095,
                                        new SpatialReference(8,
                                                "consequatur",
                                                "aut",
                                                "ut"),
                                            true,
                                            true),
                                    new CoverageDescriptionV201BoundedByEnvelopeAllDims([70.3510,
                                            960.7467],
                                            [432.7300]),
                                        true,
                                        ["corrupti"]),
                                    "vel",
                                    "magni",
                                new CoverageDescriptionV201DomainSet(["vitae"],
                                        953.0527,
                                        [780.6220,
                                            280.5856],
                                        true,
                                        [29.8589,
                                            344.6615],
                                        [287.1061],
                                    new CoverageDescriptionV201DomainSetResolution(-77.1328,
                                            -85.0507),
                                        321.1293),
                                new CoverageDescriptionV201EoMetadata(new CoverageDescriptionV201EoMetadataObservation("repudiandae",
                                        new Polygon([new MapPath([new MapPoint([320.6192]),
                                                new MapPoint([413.4552,
                                                    526.6151])])],
                                            new SpatialReference(4,
                                                    "commodi",
                                                    "quia",
                                                    "voluptate"),
                                            new Point(69.8367,
                                                    28.9655,
                                                    22.2474,
                                                    -34.7247,
                                                    413.9639,
                                                new SpatialReference(4,
                                                        "eum",
                                                        "et",
                                                        "molestiae"),
                                                    true,
                                                    true,
                                                    81.7709),
                                                true,
                                                true,
                                                true),
                                            "ducimus",
                                        new TemporalDomain(new DateTime(2003, 10, 5, 17, 11, 41),
                                                new DateTime(2023, 11, 11, 6, 28, 11),
                                                76.6147,
                                                "sequi",
                                                [new DateTime(2018, 11, 14, 2, 14, 26),
                                                    new DateTime(2011, 8, 26, 4, 50, 14)]),
                                        new TemporalDomain(new DateTime(2002, 5, 9, 9, 53, 26),
                                                new DateTime(2001, 6, 9, 20, 4, 24),
                                                35.1581,
                                                "a",
                                                [new DateTime(2003, 9, 7, 3, 15, 50)]),
                                            "vel")),
                                    "ipsam",
                                [new CoverageDescriptionV201RangeType([174.7886],
                                        "dolor nihil",
                                        "updatedAt",
                                        83.7637,
                                        "distinctio")],
                                new CoverageDescriptionV201Resolution(-104.8017,
                                        52.1632),
                                    "necessitatibus",
                                    "0.7.0.9"),
                                "voluptatum",
                                "deserunt voluptatem quod",
                            new Extent(168.0486,
                                    111.0243,
                                    40.0084,
                                    5.1670,
                                    711.9333,
                                    780.3561,
                                    677.0302,
                                    348.3750,
                                new SpatialReference(8,
                                        "et",
                                        "iusto",
                                        "doloribus"),
                                    true,
                                    true),
                            new RasterInfo(new FeatureSet("id",
                                        true,
                                    [new Graphic(new Polyline([new MapPath([new MapPoint([168.3438]),
                                                new MapPoint([683.3124,
                                                    125.6082])]),
                                                new MapPath([new MapPoint([363.9815,
                                                        919.2497]),
                                                    new MapPoint([430.6885,
                                                        110.8003])])],
                                            new SpatialReference(7,
                                                    "veniam",
                                                    "perspiciatis",
                                                    "fugiat"),
                                                true,
                                                true),
                                        new TextSymbol("atque recusandae fuga",
                                            new MapColor(103, 30, 200),
                                            new MapColor(41, 58, 244),
                                                new Dimension(282.9991),
                                            new MapFont(new Dimension(528.6169),
                                                    "Palatino",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.Underline),
                                                621.7474,
                                            new MapColor(159, 210, 124),
                                            new MapColor(163, 89, 199),
                                                176.7559,
                                            HorizontalAlignment.Center,
                                                true,
                                                41.8729,
                                                new Dimension(935.3672),
                                                true),
                                        new PopupTemplate("et sunt quasi",
                                                "impedit",
                                                ["itaque",
                                                    "vel"],
                                            [new FieldInfo("token",
                                                    "expedita",
                                                    "illum",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("comment",
                                                    "omnis",
                                                    "quia",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.LongMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                            [new AttachmentsPopupContent("et officiis soluta",
                                                    "est laboriosam vel facilis",
                                                    AttachmentsPopupContentDisplayType.Auto),
                                            new FieldsPopupContent([new FieldInfo("category",
                                                        "tempore",
                                                        "ex",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max),
                                                new FieldInfo("token",
                                                        "ut",
                                                        "inventore",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)],
                                                    "perferendis et ut",
                                                    "et esse rerum")],
                                            [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "email",
                                                    "rem illum tempore",
                                                    ExpressionInfoReturnType.String)],
                                                true,
                                                true,
                                                [new ActionButton("libero laudantium accusantium",
                                                    "https://picsum.photos/640/480/?image=850",
                                                    "41a3f317-b92e-e800-acb1-9d4d4a94e755",
                                                    () => { Console.WriteLine("aliquid"); return Task.CompletedTask; },
                                                    "email",
                                                    true,
                                                    true,
                                                    true,
                                                    "et"),
                                                    new ActionButton("ipsam qui aut",
                                                        "https://picsum.photos/640/480/?image=1004",
                                                        "7d0a6b71-092b-5839-12a7-c41ecea21746",
                                                        () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                                        "category",
                                                        true,
                                                        true,
                                                        true,
                                                        "consectetur")]),
                                            new AttributesDictionary(),
                                            true,
                                            "quia",
                                            "reprehenderit",
                                            new GraphicOrigin(Guid.NewGuid(),
                                                "quia",
                                                2))],
                                    [new Field(default,
                                            "avatar",
                                            "quia",
                                            "sit inventore",
                                            4,
                                            true,
                                            true,
                                            new { Value = "perspiciatis" },
                                        FieldValueType.Description,
                                        new InheritedDomain("email"))],
                                    GeometryType.Multipoint,
                                    new Point(-114.4916,
                                            57.0596,
                                            124.4111,
                                            -52.7778,
                                            858.5542,
                                        new SpatialReference(1,
                                                "id",
                                                "vero",
                                                "reiciendis"),
                                            true,
                                            true,
                                            186.6297),
                                    new SpatialReference(1,
                                            "non",
                                            "in",
                                            "qui")),
                                    9,
                                [new RasterBandInfo(748.5145,
                                        5.9620,
                                        "comment",
                                        479.1322,
                                        235.9596,
                                        270.6150,
                                        360.3681,
                                        953.7274),
                                new RasterBandInfo(822.9681,
                                        700.6402,
                                        "avatar",
                                        413.2652,
                                        756.2048,
                                        731.4942,
                                        907.8983,
                                        998.8511)],
                                    [new ColormapPixel(500.7942,
                                        87.0678,
                                        351.2069,
                                        482.3045)],
                                DataType.StandardTime,
                                new Extent(174.6391,
                                        -21.6562,
                                        -71.8559,
                                        -57.6154,
                                        184.1251,
                                        418.7750,
                                        381.1199,
                                        964.2011,
                                    new SpatialReference(2,
                                            "itaque",
                                            "nam",
                                            "voluptas"),
                                        true,
                                        true),
                                    true,
                                    1,
                                    ["iure"],
                                    "molestiae",
                                new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("in perferendis ut",
                                        [new RasterMultidimensionalInfoVariablesDimensions("voluptatibus amet",
                                                [777.4202],
                                                true,
                                                515.5907,
                                                "velit",
                                                "avatar",
                                                "enim",
                                                [294.2543])],
                                        [new RasterHistogram([27.7819],
                                                [4,
                                                    5],
                                                117.5335,
                                                14.9039,
                                                4)],
                                            "category",
                                        [new RasterBandStatistics(82.6862,
                                                6,
                                                756.1548,
                                                263.0202,
                                                86.9612,
                                                713.1311,
                                                349.5931,
                                                999.2122)],
                                            "sint")]),
                                new RasterInfoPixelSize(-128.8293,
                                        -67.8261),
                                PixelType.F64,
                                new RasterSensorInfo(new DateTime(2016, 4, 13, 18, 8, 19),
                                        943.2242,
                                        "title",
                                        384.6035,
                                        197.0867,
                                        "avatar",
                                        842.5502,
                                        106.8652)),
                                ["similique",
                                    "ut"],
                            [SupportedInterpolations.Bilinear],
                                "culpa nulla ea",
                                true,
                            CoverageInfoVersion.One_0_0))"
                        Effect="@(new Effect("aut",
                            7711183.4555))"
                        Interpolation="@(Interpolation.Cubic)"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(917596.0649)"
                        MinScale="@(39834.3995)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        UseViewTime="@(true)"
                        Version="@("3.3.1.5")">
                        <TimeInterval 
                            Unit="@(TemporalTime.Milliseconds)"
                            Value="@(167.1322)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("iste")"
                            EndField="@("quia")"
                            Stops="@([new DateTime(2006, 2, 20, 10, 21, 51),
                                new DateTime(2008, 6, 17, 18, 55, 21)])"
                            TimeZone="@("Asia/Tokyo")"
                            TrackIdField="@("sit")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Years)"
                                Value="@(526.3243)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2022, 9, 9, 7, 54, 7))"
                                End="@(new DateTime(2021, 7, 24, 2, 43, 8))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2007, 2, 20, 14, 55, 20))"
                            End="@(new DateTime(2005, 3, 24, 0, 36, 6))">
                        </TimeExtent>
                        <Field 
                            Name="@("token")"
                            Alias="@("est")"
                            Description="@("atque sed")"
                            Length="@(1)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "alias" })"
                            ValueType="@(FieldValueType.TypeOrCategory)"
                            Domain="@(new RangeDomain("veritatis",
                                    "quia",
                                    "group"))">
                        </Field>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("dolores qui tenetur")"
                            StringContent="@("quidem")"
                            OutFields="@(["incidunt"])"
                            FieldInfos="@([new FieldInfo("comment",
                                    "est",
                                    "fuga",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("phone",
                                    "dolorum",
                                    "sunt",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Max)])"
                            Content="@([new AttachmentsPopupContent("voluptas et ut",
                                    "ipsam eligendi",
                                    AttachmentsPopupContentDisplayType.Preview)])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "password",
                                    "consequatur eaque neque",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "avatar",
                                    "neque doloremque facere",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("alias nihil consequatur",
                                "https://picsum.photos/640/480/?image=485",
                                "6218c000-1365-c08a-3ca3-9a1f3a44971a",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "culpa"),
                                new ActionButton("enim modi modi",
                                    "https://picsum.photos/640/480/?image=535",
                                    "2c5a3d91-607e-d917-e2db-045d5c7c09e2",
                                    () => { Console.WriteLine("odit"); return Task.CompletedTask; },
                                    "title",
                                    true,
                                    true,
                                    true,
                                    "ea")])">
                        </PopupTemplate>
                        <MultidimensionalSubset 
                            AreaOfInterest="@(new Extent(37.8362,
                                    101.2923,
                                    -41.4975,
                                    -62.5673,
                                    655.0215,
                                    466.0725,
                                    618.3471,
                                    535.9666,
                                new SpatialReference(2,
                                        "quaerat",
                                        "natus",
                                        "nihil"),
                                    true,
                                    true))">
                            <DimensionalDefinition 
                                DimensionName="@("email")"
                                IsSlice="@(true)"
                                VariableName="@("group")"
>
                            </DimensionalDefinition>
                        </MultidimensionalSubset>
                        <DimensionalDefinition 
                            DimensionName="@("id")"
                            IsSlice="@(true)"
                            VariableName="@("createdAt")"
>
                        </DimensionalDefinition>
                        <Extent 
                            Xmax="@(112.8831)"
                            Xmin="@(-62.0353)"
                            Ymax="@(-75.0755)"
                            Ymin="@(15.0326)"
                            Zmax="@(421.8311)"
                            Zmin="@(468.9354)"
                            Mmax="@(518.4083)"
                            Mmin="@(809.6064)"
                            SpatialReference="@(new SpatialReference(9,
                                    "quam",
                                    "sit",
                                    "in"))"
                            HasM="@(true)"
                            HasZ="@(true)">
                        </Extent>
                    </WCSLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(wCSLayer!);
        await AssertJavaScript("assertLayerExists", args: "wcs");
        var createPopupTemplateMethodResult = await wCSLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["accusantium",
                    "voluptas"],
                    ["id",
                        "id"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var fetchPixelsMethodResult = await wCSLayer.FetchPixels(new Extent(-22.9687,
                    -13.7763,
                    -18.5418,
                    -37.4809,
                    980.4027,
                    415.1389,
                    575.7895,
                    635.6156,
                new SpatialReference(9,
                        "dolores",
                        "consectetur",
                        "repellendus"),
                    true,
                    true),
                1,
                2,
            new ImageryTileMixinFetchPixelsOptions(Interpolation.Majority));
        Assert.IsNotNull(fetchPixelsMethodResult);
        var identifyMethodResult = await wCSLayer.Identify(new Point(62.2128,
                    75.2370,
                    178.7177,
                    -11.7178,
                    706.4582,
                new SpatialReference(8,
                        "dolor",
                        "aut",
                        "perferendis"),
                    true,
                    true,
                    542.3751),
            new RasterIdentifyOptions([new DimensionalDefinition("token",
                        true,
                        "updatedAt"),
                new DimensionalDefinition("email",
                        true,
                        "createdAt")],
                    "name"));
        Assert.IsNotNull(identifyMethodResult);
        IReadOnlyList<DimensionalDefinition> testMultidimensionalDefinition = [new DimensionalDefinition("phone",
                    true,
                    "createdAt")];
        await wCSLayer.SetMultidimensionalDefinition(testMultidimensionalDefinition);
        var multidimensionalDefinition = await wCSLayer.GetMultidimensionalDefinition();
        Assert.AreEqual(testMultidimensionalDefinition, multidimensionalDefinition);
        PortalItem testPortalItem = new PortalItem();
        await wCSLayer.SetPortalItem(testPortalItem);
        var portalItem = await wCSLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.SourceAtop;
        await wCSLayer.SetBlendMode(testBlendMode);
        var blendMode = await wCSLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        CoverageInfo testCoverageInfo = new CoverageInfo(["token"],
                new CoverageDescriptionV110("tempore",
                    new CoverageDescriptionV110Domain(new CoverageDescriptionV110DomainSpatialDomain(351.8134,
                            new Extent(-130.9807,
                                    -94.5911,
                                    -68.6361,
                                    -63.2354,
                                    206.3772,
                                    900.6067,
                                    312.1180,
                                    780.1382,
                                new SpatialReference(3,
                                        "aut",
                                        "deserunt",
                                        "perferendis"),
                                    true,
                                    true),
                                "sunt",
                            new CoverageDescriptionV110DomainSpatialDomainOffset(122.2861,
                                    "similique"),
                            new CoverageDescriptionV110DomainSpatialDomainOrigin(111.0144,
                                    "corrupti"),
                                475.8902,
                                true),
                        new TemporalDomain(new DateTime(2017, 8, 20, 15, 21, 17),
                                new DateTime(2016, 10, 17, 19, 16, 27),
                                20.3884,
                                "quia",
                                [new DateTime(2011, 11, 21, 2, 56, 53)])),
                        "perspiciatis",
                        "quia",
                    [new CoverageDescriptionV110Range("et",
                        [new CoverageDescriptionV110RangeAxis([659.1849],
                                "quisquam",
                                "maiores",
                                "nesciunt",
                                ["in",
                                    "atque"]),
                        new CoverageDescriptionV110RangeAxis([249.9354,
                                287.5760],
                                "quo",
                                "veritatis",
                                "vel",
                                ["qui",
                                    "aperiam"])],
                            "quisquam",
                            "occaecati magni",
                            "illo",
                            [773.0359,
                                368.7409],
                            ["necessitatibus",
                                "odit"],
                            "officia consequuntur atque"),
                    new CoverageDescriptionV110Range("assumenda",
                        [new CoverageDescriptionV110RangeAxis([128.4383,
                                688.8260],
                                "recusandae",
                                "cum",
                                "eos",
                                ["non",
                                    "dicta"])],
                            "in",
                            "aliquid ipsum quae laboriosam",
                            "autem",
                            [62.5615],
                            ["officia"],
                            "qui amet eligendi")],
                    new CoverageDescriptionV110Resolution("iste",
                            "qui"),
                        ["reiciendis",
                            "vel"],
                        ["eum"],
                        "amet est cumque",
                        "4.2.8.5"),
                    "magni",
                    "provident ut sint",
                new Extent(-136.2694,
                        -102.3220,
                        45.4483,
                        -76.1331,
                        974.3318,
                        463.3871,
                        942.8510,
                        341.8771,
                    new SpatialReference(8,
                            "sed",
                            "et",
                            "ut"),
                        true,
                        true),
                new RasterInfo(new FeatureSet("name",
                            true,
                        [new Graphic(new Polyline([new MapPath([new MapPoint([108.4719,
                                        773.1324])])],
                                new SpatialReference(5,
                                        "nisi",
                                        "omnis",
                                        "vel"),
                                    true,
                                    true),
                            new TextSymbol("fugiat excepturi itaque",
                                new MapColor(81, 134, 132),
                                new MapColor(224, 213, 196),
                                    new Dimension(421.4771),
                                new MapFont(new Dimension(664.8596),
                                        "Helvetica",
                                    MapFontStyle.Normal,
                                    FontWeight.Lighter,
                                    TextDecoration.None),
                                    667.2452,
                                new MapColor(109, 169, 58),
                                new MapColor(36, 207, 248),
                                    145.9920,
                                HorizontalAlignment.Left,
                                    true,
                                    483.5157,
                                    new Dimension(43.6192),
                                    true),
                            new PopupTemplate("voluptas fugit in",
                                    "enim",
                                    ["at"],
                                [new FieldInfo("token",
                                        "sed",
                                        "repudiandae",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("avatar",
                                        "a",
                                        "et",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new RelationshipPopupContent("dolorum nostrum pariatur",
                                        "vel labore",
                                        7,
                                        "veritatis",
                                    [new RelatedRecordsInfoFieldOrder("molestias",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("sit",
                                        OrderBy.Desc)],
                                        9),
                                new RelationshipPopupContent("fuga eveniet reiciendis",
                                        "repellendus beatae eligendi sit",
                                        2,
                                        "voluptate",
                                    [new RelatedRecordsInfoFieldOrder("quis",
                                        OrderBy.Desc),
                                    new RelatedRecordsInfoFieldOrder("maiores",
                                        OrderBy.Asc)],
                                        9)],
                                [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "phone",
                                        "sit cumque accusantium",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Name;",
                                        "title",
                                        "eius et non",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("illo deserunt quia",
                                        "https://picsum.photos/640/480/?image=143",
                                        "0dbe4b0a-72e5-51f0-0606-ee54f05eddd1",
                                        () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                                        "comment",
                                        true,
                                        true,
                                        true,
                                        "illo"),
                                        new ActionButton("molestias eius nobis",
                                            "https://picsum.photos/640/480/?image=277",
                                            "e84687a1-4620-d93b-d68b-477f5011d04d",
                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "libero")]),
                                new AttributesDictionary(),
                                true,
                                "vero",
                                "sit",
                                new GraphicOrigin(Guid.NewGuid(),
                                    "fuga",
                                    8)),
                        new Graphic(new Polyline([new MapPath([new MapPoint([941.5802,
                                        46.3099])])],
                                new SpatialReference(7,
                                        "cum",
                                        "voluptatem",
                                        "veniam"),
                                    true,
                                    true),
                            new TextSymbol("expedita placeat voluptatibus",
                                new MapColor(144, 170, 253),
                                new MapColor(27, 207, 111),
                                    new Dimension(206.0734),
                                new MapFont(new Dimension(154.3610),
                                        "Courier New",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.None),
                                    327.7759,
                                new MapColor(27, 144, 65),
                                new MapColor(191, 118, 40),
                                    441.3589,
                                HorizontalAlignment.Left,
                                    true,
                                    945.9006,
                                    new Dimension(346.7444),
                                    true),
                            new PopupTemplate("sed molestiae occaecati",
                                    "qui",
                                    ["suscipit"],
                                [new FieldInfo("comment",
                                        "non",
                                        "a",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.DayShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new RelationshipPopupContent("veniam laudantium quia",
                                        "praesentium ipsa",
                                        8,
                                        "totam",
                                    [new RelatedRecordsInfoFieldOrder("ipsam",
                                        OrderBy.Desc),
                                    new RelatedRecordsInfoFieldOrder("quo",
                                        OrderBy.Desc)],
                                        9),
                                new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "sed",
                                            "enim sed aut"))],
                                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "avatar",
                                        "inventore facilis impedit",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("ex itaque nisi",
                                        "https://picsum.photos/640/480/?image=1054",
                                        "76e1e391-eb16-28fc-0705-d30ffdb536ae",
                                        () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "quod")]),
                                new AttributesDictionary(),
                                true,
                                "perferendis",
                                "at",
                                new GraphicOrigin(Guid.NewGuid(),
                                    "at",
                                    1))],
                        [new Field(default,
                                "avatar",
                                "fugit",
                                "repellendus incidunt tempore",
                                3,
                                true,
                                true,
                                new { Value = "est" },
                            FieldValueType.UniqueIdentifier,
                            new InheritedDomain("avatar"))],
                        GeometryType.Multipoint,
                        new Point(97.5655,
                                36.8360,
                                -16.1289,
                                -20.6679,
                                631.0731,
                            new SpatialReference(1,
                                    "inventore",
                                    "possimus",
                                    "magni"),
                                true,
                                true,
                                574.1563),
                        new SpatialReference(5,
                                "adipisci",
                                "possimus",
                                "temporibus")),
                        2,
                    [new RasterBandInfo(414.2490,
                            204.9066,
                            "title",
                            121.2640,
                            886.0496,
                            214.0562,
                            750.1963,
                            549.8387),
                    new RasterBandInfo(596.4820,
                            715.3871,
                            "phone",
                            386.1269,
                            880.8025,
                            76.4718,
                            573.4793,
                            765.8184)],
                        [new ColormapPixel(189.6629,
                            327.8163,
                            206.0603,
                            563.7138),
                            new ColormapPixel(359.8451,
                                935.6580,
                                471.8789,
                                106.0316)],
                    DataType.Thematic,
                    new Extent(3.1438,
                            -17.1920,
                            -54.1832,
                            56.1885,
                            446.0873,
                            797.6411,
                            949.7229,
                            590.8020,
                        new SpatialReference(3,
                                "est",
                                "nihil",
                                "temporibus"),
                            true,
                            true),
                        true,
                        8,
                        ["quasi",
                            "nostrum"],
                        "aperiam",
                    new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("deserunt sunt eos natus",
                            [new RasterMultidimensionalInfoVariablesDimensions("ab labore placeat",
                                    [673.0019,
                                        246.5177],
                                    true,
                                    57.8474,
                                    "necessitatibus",
                                    "title",
                                    "vitae",
                                    [476.7310]),
                            new RasterMultidimensionalInfoVariablesDimensions("molestiae quis voluptas aut",
                                    [492.8763],
                                    true,
                                    325.2689,
                                    "quam",
                                    "password",
                                    "ut",
                                    [909.8044,
                                        572.0857])],
                            [new RasterHistogram([144.8020,
                                    106.6017],
                                    [3],
                                    919.7462,
                                    388.5934,
                                    2)],
                                "password",
                            [new RasterBandStatistics(814.4924,
                                    9,
                                    612.1404,
                                    885.6448,
                                    237.0328,
                                    108.5369,
                                    41.9326,
                                    320.7329)],
                                "dicta")]),
                    new RasterInfoPixelSize(59.6595,
                            -83.6012),
                    PixelType.U4,
                    new RasterSensorInfo(new DateTime(2008, 2, 11, 1, 7, 57),
                            231.5619,
                            "updatedAt",
                            718.5095,
                            600.9597,
                            "password",
                            851.2097,
                            670.3427)),
                    ["voluptatem"],
                [SupportedInterpolations.Cubic],
                    "repellendus ipsam deserunt",
                    true,
                CoverageInfoVersion.One_1_1);
        await wCSLayer.SetCoverageInfo(testCoverageInfo);
        var coverageInfo = await wCSLayer.GetCoverageInfo();
        Assert.AreEqual(testCoverageInfo, coverageInfo);
        Extent testFullExtent = new Extent(-101.1295,
                    -67.9462,
                    34.4080,
                    23.7236,
                    1.2824,
                    85.0155,
                    35.1606,
                    185.7012,
                new SpatialReference(4,
                        "est",
                        "qui",
                        "praesentium"),
                    true,
                    true);
        await wCSLayer.SetFullExtent(testFullExtent);
        var fullExtent = await wCSLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        Interpolation testInterpolation = Interpolation.Bilinear;
        await wCSLayer.SetInterpolation(testInterpolation);
        var interpolation = await wCSLayer.GetInterpolation();
        Assert.AreEqual(testInterpolation, interpolation);
        ListMode testListMode = ListMode.Show;
        await wCSLayer.SetListMode(testListMode);
        var listMode = await wCSLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        MultidimensionalSubset testMultidimensionalSubset = new MultidimensionalSubset(new Polygon([new MapPath([new MapPoint([602.0347]),
                        new MapPoint([623.7344,
                            756.3250])])],
                    new SpatialReference(4,
                            "et",
                            "debitis",
                            "quae"),
                    new Point(145.2879,
                            79.1501,
                            167.3542,
                            -72.0415,
                            531.0782,
                        new SpatialReference(3,
                                "nihil",
                                "autem",
                                "odit"),
                            true,
                            true,
                            77.0699),
                        true,
                        true,
                        true),
                [new DimensionalDefinition("id",
                        true,
                        "id"),
                new DimensionalDefinition("phone",
                        true,
                        "createdAt")]);
        await wCSLayer.SetMultidimensionalSubset(testMultidimensionalSubset);
        var multidimensionalSubset = await wCSLayer.GetMultidimensionalSubset();
        Assert.AreEqual(testMultidimensionalSubset, multidimensionalSubset);
        IReadOnlyList<Field> testRasterFields = [new Field(default,
                    "comment",
                    "unde",
                    "et occaecati consequatur eius",
                    4,
                    true,
                    true,
                    new { Value = "enim" },
                FieldValueType.Measurement,
                new InheritedDomain("comment")),
            new Field(default,
                    "password",
                    "error",
                    "cupiditate et",
                    5,
                    true,
                    true,
                    new { Value = "aut" },
                FieldValueType.OrderedOrRanked,
                new RangeDomain("voluptas",
                        "quae",
                        "password"))];
        await wCSLayer.SetRasterFields(testRasterFields);
        var rasterFields = await wCSLayer.GetRasterFields();
        Assert.AreEqual(testRasterFields, rasterFields);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2007, 7, 1, 9, 1, 47),
                    new DateTime(2019, 6, 15, 5, 8, 21));
        await wCSLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await wCSLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("facere",
                    "voluptas",
                new TimeExtent(new DateTime(2009, 7, 27, 16, 35, 40),
                        new DateTime(2001, 4, 19, 18, 37, 10)),
                new TimeInterval(TemporalTime.Seconds,
                        932.6637),
                    [new DateTime(2022, 7, 15, 16, 21, 38),
                        new DateTime(2019, 11, 24, 4, 24, 56)],
                    "Europe/London",
                    "qui");
        await wCSLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await wCSLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    877.3135);
        await wCSLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await wCSLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2012, 11, 12, 1, 50, 10),
                    new DateTime(2013, 1, 15, 5, 28, 57));
        await wCSLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await wCSLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
