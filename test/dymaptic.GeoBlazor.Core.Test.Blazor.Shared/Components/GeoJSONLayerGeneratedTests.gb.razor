@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson")"
                        Copyright="@("provident")"
                        Title="@("odio voluptas praesentium")"
                        Opacity="@(0.1298)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.Overlay)"
                        DefinitionExpression="@("consequatur")"
                        DisplayField="@("at")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("architecto",
                            6800996.8061))"
                        FullExtent="@(new Extent(-162.5031,
                                -36.0544,
                                -82.1511,
                                -26.8955,
                                539.1608,
                                721.9270,
                                32.5932,
                                152.5735,
                            new SpatialReference(1,
                                    "delectus",
                                    "odit",
                                    "voluptate"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Point)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(44962393.3656)"
                        MinScale="@(10243.8711)"
                        ObjectIdField="@("sint")"
                        OutFields="@(["cumque",
                            "qui",
                            "dicta"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(948.4089)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(6,
                                "hic",
                                "in",
                                "esse"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Days)"
                            Value="@(982.0867)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("aliquid")"
                            EndField="@("tempore")"
                            Stops="@([new DateTime(2016, 7, 19, 16, 49, 24),
                                new DateTime(2002, 9, 15, 1, 40, 32),
                                new DateTime(2010, 5, 25, 3, 28, 17),
                                new DateTime(2020, 2, 26, 19, 19, 53)])"
                            TimeZone="@("Europe/Stockholm")"
                            TrackIdField="@("in")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Seconds)"
                                Value="@(582.5921)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2001, 3, 11, 19, 25, 50))"
                                End="@(new DateTime(2004, 9, 26, 5, 35, 2))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2000, 1, 22, 20, 8, 11))"
                            End="@(new DateTime(2010, 11, 11, 17, 33, 40))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("ducimus nam vero aut sed maxime")"
                            DrawingTool="@(DrawingTool.Circle)"
                            Name="@("id")"
                            Prototype="@(new Graphic(new Polygon([new MapPath([new MapPoint([507.4886,
                                            64.8969]),
                                        new MapPoint([147.6581,
                                            549.5560,
                                            278.8376,
                                            27.6238])]),
                                        new MapPath([new MapPoint([264.0419,
                                                973.6077]),
                                            new MapPoint([296.5856,
                                                454.0715,
                                                657.0657,
                                                84.1313]),
                                            new MapPoint([242.8492,
                                                402.3523,
                                                492.1180,
                                                256.7562])]),
                                        new MapPath([new MapPoint([752.7276,
                                                690.9020,
                                                190.5857,
                                                494.0183]),
                                            new MapPoint([933.1799,
                                                186.4215])]),
                                        new MapPath([new MapPoint([562.4844,
                                                92.5712]),
                                            new MapPoint([638.4619,
                                                888.2069,
                                                811.8273,
                                                452.6899]),
                                            new MapPoint([99.0804,
                                                474.9054,
                                                720.4132,
                                                607.9513]),
                                            new MapPoint([60.6215,
                                                354.6395])])],
                                    new SpatialReference(4,
                                            "voluptatem",
                                            "officia",
                                            "quis"),
                                    new Point(-1.6741,
                                            18.3845,
                                            -25.1118,
                                            24.8807,
                                            770.1342,
                                        new SpatialReference(7,
                                                "exercitationem",
                                                "repellendus",
                                                "voluptas"),
                                            true,
                                            true,
                                            9.8993),
                                        true,
                                        true,
                                        true),
                                new TextSymbol("natus quis sunt",
                                    new MapColor(181, 13, 49),
                                    new MapColor(243, 185, 70),
                                        new Dimension(988.7884),
                                    new MapFont(new Dimension(317.8530),
                                            "Courier New",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        40.6993,
                                    new MapColor(223, 167, 94),
                                    new MapColor(70, 23, 201),
                                        836.7277,
                                    HorizontalAlignment.Center,
                                        true,
                                        532.8033,
                                        new Dimension(45.7463),
                                        true),
                                new PopupTemplate("maxime quasi aut",
                                        "vitae",
                                        ["id",
                                            "quam",
                                            "voluptas",
                                            "voluptas"],
                                    [new FieldInfo("avatar",
                                            "libero",
                                            "molestias",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("password",
                                            "officia",
                                            "exercitationem",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("category",
                                            "sint",
                                            "totam",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "dignissimos",
                                                "esse quas atque")),
                                    new FieldsPopupContent([new FieldInfo("createdAt",
                                                "earum",
                                                "id",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("title",
                                                "saepe",
                                                "accusantium",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("title",
                                                "et",
                                                "mollitia",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Max)],
                                            "at dolore quaerat blanditiis aut",
                                            "similique eum iste")],
                                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "token",
                                            "eaque dolore neque",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("dolores ut dolor",
                                            "6004e567-00b3-6b2a-6c40-35aba49579b6",
                                            () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "avatar",
                                            "numquam"),
                                    new ActionButton("velit nostrum et",
                                            "https://picsum.photos/640/480/?image=853",
                                            "b1ed934b-b951-2bca-007d-421e2da6d4da",
                                            () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                            "token",
                                            true,
                                            true,
                                            true,
                                            "nostrum"),
                                    new ActionToggle("suscipit expedita eum",
                                            "97989666-7b5e-4380-d524-d0f3fed004d7",
                                            () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "title",
                                            "sed")]),
                                    new AttributesDictionary(),
                                    true,
                                    "quia",
                                    "cum",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "debitis",
                                        6)))"
                            Thumbnail="@(new Thumbnail("delectus",
                                "consequatur",
                                278.9038,
                                146.7487))">
                        </FeatureTemplate>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(29, 27, 206),
                                        new MapColor(242, 161, 137))]),
                                    994.9683,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(533.2326,
                                            683.1478),
                                    new AuthoringInfoField1ClassBreakInfos(139.8918,
                                            853.0871)],
                                        "adipisci",
                                        "ut",
                                        "rem"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(747.7660,
                                            675.3872),
                                    new AuthoringInfoField1ClassBreakInfos(866.4418,
                                            711.7771),
                                    new AuthoringInfoField1ClassBreakInfos(157.9515,
                                            740.4007),
                                    new AuthoringInfoField1ClassBreakInfos(100.1251,
                                            275.1793)],
                                        "consequatur",
                                        "odio",
                                        "tempora"),
                                    ["necessitatibus",
                                        "eveniet",
                                        "deserunt"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "delectus",
                                    true,
                                LengthUnit.Inches,
                                    537.0863,
                                    470.0586,
                                    165.4282,
                                    672.7514))">
                        </UniqueValueRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("et quis nihil")"
                            StringContent="@("iusto")"
                            OutFields="@(["quae",
                                "dignissimos",
                                "nulla"])"
                            FieldInfos="@([new FieldInfo("id",
                                    "et",
                                    "eligendi",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("name",
                                    "dignissimos",
                                    "vero",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("createdAt",
                                    "omnis",
                                    "rerum",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("name",
                                    "velit",
                                    "repellendus",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Count)])"
                            Content="@([new RelationshipPopupContent("sit voluptate quo",
                                    "et ut deserunt nostrum voluptatem saepe",
                                    1,
                                    "veniam",
                                [new RelatedRecordsInfoFieldOrder("qui",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("debitis",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("omnis",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("sint",
                                    OrderBy.Asc)],
                                    5)])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "category",
                                    "enim quasi ipsum",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("ut voluptatibus dicta",
                                    "https://picsum.photos/640/480/?image=107",
                                    "4b3246ff-663f-5f06-86a1-f0889b5e56b4",
                                    () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                    "id",
                                    true,
                                    true,
                                    true,
                                    "laudantium")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("facilis")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("ut")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.CenterLeft)"
                            LabelExpression="@("molestias")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(10130215.4505)"
                            MinScale="@(23322.7418)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(205.0411))"
                            Symbol="@(new TextSymbol("aliquam enim eum",
                                new MapColor(82, 149, 117),
                                new MapColor(236, 202, 185),
                                    new Dimension(992.9656),
                                new MapFont(new Dimension(606.7996),
                                        "Helvetica",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.Underline),
                                    791.2686,
                                new MapColor(54, 179, 78),
                                new MapColor(0, 152, 247),
                                    554.4927,
                                HorizontalAlignment.Left,
                                    true,
                                    368.7786,
                                    new Dimension(958.7314),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Phone = '555-555-5555'")">
                        </Label>
                        <Field 
                            Name="@("createdAt")"
                            Alias="@("non")"
                            Description="@("qui voluptas quae incidunt")"
                            Length="@(1)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "consequatur" })"
                            ValueType="@(FieldValueType.Measurement)"
                            Domain="@(new CodedValueDomain<string>())">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("quisquam",
                                40548739.6924),
                                new Effect("ea",
                                    12086396.2881)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(494.2172,
                                new Point(128.1724,
                                        37.5867,
                                        116.3811,
                                        5.2120,
                                        637.9872,
                                    new SpatialReference(3,
                                            "perspiciatis",
                                            "in",
                                            "modi"),
                                        true,
                                        true,
                                        872.6755),
                                    [1,
                                        8,
                                        6],
                                SpatialRelationship.Intersects,
                                new TimeExtent(new DateTime(2004, 10, 16, 6, 29, 0),
                                        new DateTime(2004, 4, 27, 9, 2, 53)),
                                    QueryUnits.Feet,
                                    "City = 'Toronto'"))"
                            IncludedEffect="@([new Effect("laboriosam",
                                37428231.5397),
                                new Effect("vero",
                                    49231666.7462)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "placeat non harum"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(949.0150)"
                            Unit="@(ElevationUnit.Centimeters)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Extent(149.2699,
                            -29.5522,
                            35.3547,
                            51.9315,
                            922.9423,
                            943.7252,
                            400.7125,
                            548.7159,
                        new SpatialReference(5,
                                "quo",
                                "quos",
                                "in"),
                            true,
                            true),
                    new TextSymbol("maxime tempore et",
                        new MapColor(144, 123, 187),
                        new MapColor(254, 208, 115),
                            new Dimension(694.6700),
                        new MapFont(new Dimension(929.4129),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            334.0113,
                        new MapColor(229, 175, 192),
                        new MapColor(12, 166, 1),
                            730.1371,
                        HorizontalAlignment.Center,
                            true,
                            971.0088,
                            new Dimension(598.6481),
                            true),
                    new PopupTemplate("dignissimos ratione veritatis",
                            "unde",
                            ["qui",
                                "eum"],
                        [new FieldInfo("title",
                                "totam",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("title",
                                "modi",
                                "non",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Count)],
                        [new MediaPopupContent("ut temporibus quaerat",
                                "dolorem nam et quas sapiente",
                            [new ColumnChartMediaInfo("consequatur iure magni",
                                    "laudantium",
                                    "rem libero quas",
                                new ChartMediaInfoValue(["dolor",
                                        "dolorem",
                                        "voluptas"],
                                        "excepturi",
                                        "quia",
                                    [new ChartMediaInfoValueSeries("group",
                                            "nostrum",
                                            656.1085),
                                    new ChartMediaInfoValueSeries("group",
                                            "rerum",
                                            79.5238),
                                    new ChartMediaInfoValueSeries("category",
                                            "tenetur",
                                            110.0178)],
                                    [new MapColor(164, 244, 103),
                                    new MapColor(206, 56, 37)])),
                            new ImageMediaInfo("blanditiis dolores quas",
                                    "incidunt",
                                    "cupiditate vel omnis",
                                new ImageMediaInfoValue("http://cory.name",
                                        "https://javonte.net"),
                                    405.3589)],
                                9),
                        new AttachmentsPopupContent("quod omnis iste",
                                "suscipit quia culpa omnis",
                                AttachmentsPopupContentDisplayType.Preview),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "perferendis",
                                    "qui exercitationem tenetur"))],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "id",
                                "aperiam a sed",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "email",
                                "omnis aliquid harum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("eveniet et porro",
                                "https://picsum.photos/640/480/?image=806",
                                "96c36349-6678-ec86-8f09-d52210dc51be",
                                () => { Console.WriteLine("modi"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "omnis"),
                        new ActionToggle("et minus est",
                                "e3586414-8ae5-eaa1-4c97-aa635232b5e6",
                                () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "voluptas"),
                        new ActionButton("nemo voluptates placeat",
                                "https://picsum.photos/640/480/?image=106",
                                "eef8cae6-cec8-778c-6a03-83f366b1f3e0",
                                () => { Console.WriteLine("maiores"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "natus")]),
                        new AttributesDictionary(),
                        true,
                        "tempore",
                        "necessitatibus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "vel",
                            3))],
                [new Graphic(new Polygon([new MapPath([new MapPoint([265.6909,
                                753.6753,
                                699.2509,
                                214.1813]),
                            new MapPoint([776.8635,
                                472.8321,
                                86.5061,
                                183.2083]),
                            new MapPoint([798.3314,
                                673.2601,
                                810.5481,
                                118.1683]),
                            new MapPoint([374.1236,
                                532.3760])])],
                        new SpatialReference(9,
                                "soluta",
                                "quo",
                                "eaque"),
                        new Point(32.2734,
                                70.7384,
                                30.1469,
                                -64.8084,
                                354.2185,
                            new SpatialReference(4,
                                    "vel",
                                    "est",
                                    "pariatur"),
                                true,
                                true,
                                597.1435),
                            true,
                            true,
                            true),
                    new TextSymbol("non necessitatibus sapiente",
                        new MapColor(120, 214, 159),
                        new MapColor(87, 79, 187),
                            new Dimension(927.4012),
                        new MapFont(new Dimension(711.1195),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            725.6050,
                        new MapColor(8, 98, 244),
                        new MapColor(192, 240, 193),
                            552.5939,
                        HorizontalAlignment.Right,
                            true,
                            504.5489,
                            new Dimension(216.1376),
                            true),
                    new PopupTemplate("natus sed doloribus",
                            "sint",
                            ["molestiae",
                                "ut"],
                        [new FieldInfo("email",
                                "pariatur",
                                "sed",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("password",
                                "animi",
                                "quasi",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("avatar",
                                "fugit",
                                "aliquid",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("status",
                                "nihil",
                                "voluptatem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new MediaPopupContent("nemo officiis optio",
                                "ipsam et molestias et ut et",
                            [new ColumnChartMediaInfo("dignissimos expedita vel",
                                    "incidunt",
                                    "et expedita ipsum",
                                new ChartMediaInfoValue(["fuga",
                                        "et",
                                        "temporibus"],
                                        "sed",
                                        "temporibus",
                                    [new ChartMediaInfoValueSeries("id",
                                            "temporibus",
                                            281.2732)],
                                    [new MapColor(234, 39, 69)]))],
                                4),
                        new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "optio",
                                    "temporibus sequi non")),
                        new FieldsPopupContent([new FieldInfo("title",
                                    "ea",
                                    "eveniet",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("category",
                                    "sed",
                                    "architecto",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("createdAt",
                                    "voluptatem",
                                    "nulla",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "omnis qui et voluptatem exercitationem sed",
                                "aperiam est ea"),
                        new RelationshipPopupContent("officiis in repellat",
                                "dolorum officia nulla culpa corporis",
                                2,
                                "architecto",
                            [new RelatedRecordsInfoFieldOrder("est",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("quibusdam",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("molestias",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("ut",
                                OrderBy.Desc)],
                                3)],
                        [new ExpressionInfo("return Date();",
                                "password",
                                "repellendus eum ut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "avatar",
                                "dolores hic ducimus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("quo dicta atque",
                                "a9796c10-32af-0856-e3c9-3d27d9e535b4",
                                () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "explicabo"),
                        new ActionToggle("voluptatem vitae qui",
                                "313f94c5-0e02-8f6c-dc88-0df2f48dbd6a",
                                () => { Console.WriteLine("eveniet"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "quia"),
                        new ActionButton("exercitationem aut numquam",
                                "https://picsum.photos/640/480/?image=203",
                                "0f9b6615-6809-1026-4a4d-12dbd1855029",
                                () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "modi"),
                        new ActionButton("ipsa numquam alias",
                                "https://picsum.photos/640/480/?image=78",
                                "1865a78b-7b47-2776-a62f-609ab8c7a4e4",
                                () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "sed")]),
                        new AttributesDictionary(),
                        true,
                        "voluptatem",
                        "exercitationem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            3)),
                new Graphic(new Extent(34.6618,
                            33.7943,
                            87.0911,
                            31.3574,
                            133.9957,
                            596.7892,
                            686.0772,
                            735.8073,
                        new SpatialReference(1,
                                "nesciunt",
                                "impedit",
                                "ut"),
                            true,
                            true),
                    new TextSymbol("dolor consequatur consequatur",
                        new MapColor(91, 10, 19),
                        new MapColor(171, 223, 15),
                            new Dimension(132.8837),
                        new MapFont(new Dimension(89.0299),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            344.4645,
                        new MapColor(145, 248, 161),
                        new MapColor(37, 1, 248),
                            994.3785,
                        HorizontalAlignment.Center,
                            true,
                            469.1490,
                            new Dimension(448.3863),
                            true),
                    new PopupTemplate("dolorem et accusantium",
                            "dignissimos",
                            ["deserunt",
                                "dolore",
                                "eligendi"],
                        [new FieldInfo("password",
                                "eligendi",
                                "explicabo",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("phone",
                                "recusandae",
                                "sint",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("name",
                                "sunt",
                                "earum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("group",
                                "non",
                                "voluptates",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new FieldsPopupContent([new FieldInfo("updatedAt",
                                    "aut",
                                    "libero",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("group",
                                    "provident",
                                    "numquam",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("id",
                                    "voluptas",
                                    "dolorum",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "officiis quae dolores voluptas",
                                "aut accusamus beatae")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "updatedAt",
                                "deserunt accusamus quasi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "status",
                                "laudantium aperiam iste",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "avatar",
                                "ut rem saepe",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "phone",
                                "et non omnis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("sed quo provident",
                                "https://picsum.photos/640/480/?image=307",
                                "fd30e6e6-6cbb-8553-e01f-939befdcdd65",
                                () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "aliquam")]),
                        new AttributesDictionary(),
                        true,
                        "ut",
                        "quia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sint",
                            5)),
                new Graphic(new Point(-59.7168,
                            -37.9049,
                            -14.4908,
                            -47.6288,
                            725.4198,
                        new SpatialReference(4,
                                "corporis",
                                "consequuntur",
                                "dolorum"),
                            true,
                            true,
                            979.5064),
                    new TextSymbol("velit neque doloribus",
                        new MapColor(170, 223, 66),
                        new MapColor(32, 136, 118),
                            new Dimension(832.4939),
                        new MapFont(new Dimension(387.5439),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            120.9939,
                        new MapColor(131, 135, 76),
                        new MapColor(164, 192, 196),
                            706.1032,
                        HorizontalAlignment.Left,
                            true,
                            967.1529,
                            new Dimension(191.4528),
                            true),
                    new PopupTemplate("est odit doloribus",
                            "culpa",
                            ["veniam",
                                "rerum",
                                "sit",
                                "quis"],
                        [new FieldInfo("category",
                                "laudantium",
                                "laudantium",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("status",
                                "maiores",
                                "sed",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("phone",
                                "minus",
                                "non",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new RelationshipPopupContent("voluptatem optio architecto",
                                "sit aspernatur dolorum consequatur adipisci aut temporibus",
                                3,
                                "molestias",
                            [new RelatedRecordsInfoFieldOrder("qui",
                                OrderBy.Asc)],
                                8)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "token",
                                "ullam ut atque",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("consequuntur ea nobis",
                                "https://picsum.photos/640/480/?image=363",
                                "1c8428f5-53a0-660d-f272-ebf4accfcae1",
                                () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "saepe"),
                        new ActionButton("est voluptatem aspernatur",
                                "https://picsum.photos/640/480/?image=5",
                                "6656cdfd-92f2-da73-f729-a780ccc2bf93",
                                () => { Console.WriteLine("voluptatum"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "consequatur")]),
                        new AttributesDictionary(),
                        true,
                        "aut",
                        "et",
                        new GraphicOrigin(Guid.NewGuid(),
                            "amet",
                            6)),
                new Graphic(new Polygon([new MapPath([new MapPoint([355.0905,
                                88.2763,
                                604.2018]),
                            new MapPoint([946.7661,
                                676.1799]),
                            new MapPoint([307.2680,
                                340.0535])])],
                        new SpatialReference(1,
                                "voluptates",
                                "iure",
                                "quod"),
                        new Point(53.2388,
                                -74.1474,
                                -42.0389,
                                -14.4036,
                                497.9024,
                            new SpatialReference(7,
                                    "rerum",
                                    "officia",
                                    "sequi"),
                                true,
                                true,
                                357.6962),
                            true,
                            true,
                            true),
                    new TextSymbol("quam qui odit",
                        new MapColor(234, 218, 205),
                        new MapColor(10, 27, 123),
                            new Dimension(606.4222),
                        new MapFont(new Dimension(813.7758),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            114.8177,
                        new MapColor(33, 20, 72),
                        new MapColor(8, 248, 74),
                            626.3348,
                        HorizontalAlignment.Center,
                            true,
                            558.0461,
                            new Dimension(4.3687),
                            true),
                    new PopupTemplate("officiis deserunt nisi",
                            "alias",
                            ["fugiat",
                                "voluptatem",
                                "assumenda"],
                        [new FieldInfo("group",
                                "labore",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("email",
                                "ut",
                                "explicabo",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("token",
                                "itaque",
                                "impedit",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Max)],
                        [new TextPopupContent("quisquam et similique"),
                        new FieldsPopupContent([new FieldInfo("createdAt",
                                    "voluptatum",
                                    "voluptatum",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("password",
                                    "velit",
                                    "eveniet",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("createdAt",
                                    "dolor",
                                    "error",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("title",
                                    "reiciendis",
                                    "nihil",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "totam explicabo molestias aspernatur doloribus voluptas distinctio",
                                "ducimus eos quasi"),
                        new AttachmentsPopupContent("provident deserunt eos",
                                "aspernatur ab rerum eum et libero",
                                AttachmentsPopupContentDisplayType.Auto),
                        new TextPopupContent("adipisci fuga eaque")],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "title",
                                "qui libero officia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "dolor voluptas sit",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("hic ut eveniet",
                                "https://picsum.photos/640/480/?image=213",
                                "64cc7f48-c264-b3a1-915a-1757a6159d54",
                                () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "laudantium"),
                        new ActionButton("qui aperiam debitis",
                                "https://picsum.photos/640/480/?image=370",
                                "7746c9d6-7480-a085-3496-19b8f935c319",
                                () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "modi"),
                        new ActionToggle("qui cumque fuga",
                                "dfbc3375-cb11-4586-b317-85655af79a9e",
                                () => { Console.WriteLine("cumque"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "fuga"),
                        new ActionToggle("illo ut quia",
                                "8fef0623-04a1-05d4-ec86-d0dcfba25ec3",
                                () => { Console.WriteLine("optio"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "eos")]),
                        new AttributesDictionary(),
                        true,
                        "sed",
                        "sunt",
                        new GraphicOrigin(Guid.NewGuid(),
                            "autem",
                            8))],
                    ["dolor",
                        "voluptatem"],
                [new Graphic(new Extent(-117.6940,
                            -94.7164,
                            6.7037,
                            -32.8105,
                            349.7697,
                            309.1529,
                            664.5880,
                            987.1285,
                        new SpatialReference(1,
                                "adipisci",
                                "possimus",
                                "libero"),
                            true,
                            true),
                    new TextSymbol("nam voluptatem quia",
                        new MapColor(166, 83, 19),
                        new MapColor(117, 54, 146),
                            new Dimension(809.9782),
                        new MapFont(new Dimension(440.7980),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            164.1969,
                        new MapColor(83, 16, 145),
                        new MapColor(243, 4, 190),
                            473.5831,
                        HorizontalAlignment.Left,
                            true,
                            672.1736,
                            new Dimension(132.9069),
                            true),
                    new PopupTemplate("eum deserunt velit",
                            "quibusdam",
                            ["at",
                                "optio",
                                "animi",
                                "beatae"],
                        [new FieldInfo("comment",
                                "quisquam",
                                "fugiat",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("category",
                                "dolorem",
                                "corporis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("phone",
                                "hic",
                                "harum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new MediaPopupContent("molestias fuga enim",
                                "accusamus et quo molestiae nobis quam quam",
                            [new LineChartMediaInfo("velit cupiditate modi",
                                    "enim",
                                    "tempora debitis rerum",
                                new ChartMediaInfoValue(["nisi",
                                        "et"],
                                        "excepturi",
                                        "quo",
                                    [new ChartMediaInfoValueSeries("password",
                                            "omnis",
                                            759.9662),
                                    new ChartMediaInfoValueSeries("title",
                                            "veritatis",
                                            173.5839)],
                                    [new MapColor(91, 251, 174),
                                    new MapColor(233, 61, 138),
                                    new MapColor(170, 162, 160)])),
                            new PieChartMediaInfo("quis odio error",
                                    "fugit",
                                    "unde qui sed",
                                new ChartMediaInfoValue(["aspernatur",
                                        "rem",
                                        "qui",
                                        "et"],
                                        "expedita",
                                        "blanditiis",
                                    [new ChartMediaInfoValueSeries("updatedAt",
                                            "et",
                                            60.6966),
                                    new ChartMediaInfoValueSeries("password",
                                            "consectetur",
                                            191.5708)],
                                    [new MapColor(150, 170, 208),
                                    new MapColor(147, 167, 16),
                                    new MapColor(67, 121, 160)])),
                            new PieChartMediaInfo("consequatur nemo quis",
                                    "enim",
                                    "consectetur ab qui",
                                new ChartMediaInfoValue(["fugit",
                                        "eos",
                                        "corporis",
                                        "alias"],
                                        "et",
                                        "hic",
                                    [new ChartMediaInfoValueSeries("category",
                                            "velit",
                                            844.0078),
                                    new ChartMediaInfoValueSeries("title",
                                            "omnis",
                                            639.7501),
                                    new ChartMediaInfoValueSeries("id",
                                            "est",
                                            760.5782)],
                                    [new MapColor(51, 225, 84)]))],
                                3),
                        new AttachmentsPopupContent("aut repellendus autem",
                                "est dolor quia omnis aliquam sit est",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "avatar",
                                "odit minima facilis",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "email",
                                "provident quos omnis",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "token",
                                "soluta necessitatibus asperiores",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "natus temporibus omnis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("in tempora cum",
                                "https://picsum.photos/640/480/?image=577",
                                "ac6dbd18-38c4-21ee-69b6-6db4e6f7fe2f",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "veniam")]),
                        new AttributesDictionary(),
                        true,
                        "consequatur",
                        "temporibus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "amet",
                            5)),
                new Graphic(new Extent(61.1882,
                            -169.6472,
                            -9.5089,
                            17.0389,
                            842.0455,
                            154.8523,
                            915.7915,
                            704.7429,
                        new SpatialReference(6,
                                "quia",
                                "quidem",
                                "neque"),
                            true,
                            true),
                    new TextSymbol("rem aut voluptates",
                        new MapColor(142, 251, 167),
                        new MapColor(132, 15, 211),
                            new Dimension(221.2888),
                        new MapFont(new Dimension(374.2421),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            276.7677,
                        new MapColor(15, 198, 13),
                        new MapColor(222, 40, 182),
                            346.3377,
                        HorizontalAlignment.Center,
                            true,
                            286.5875,
                            new Dimension(721.6914),
                            true),
                    new PopupTemplate("magni quos doloribus",
                            "consequatur",
                            ["fugiat",
                                "minima"],
                        [new FieldInfo("title",
                                "aut",
                                "perspiciatis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("name",
                                "cumque",
                                "sequi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new AttachmentsPopupContent("exercitationem sunt sapiente",
                                "inventore consequatur sed quia",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "token",
                                "atque nostrum ex",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "comment",
                                "ab rem sit",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "token",
                                "molestiae nam est",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("vero ut ut",
                                "https://picsum.photos/640/480/?image=808",
                                "fbc03ddd-c135-bc48-e261-e95f31c6e3aa",
                                () => { Console.WriteLine("a"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "veritatis"),
                        new ActionButton("autem quae dolore",
                                "https://picsum.photos/640/480/?image=623",
                                "19315a9a-e5ae-c22e-c604-3745e66888eb",
                                () => { Console.WriteLine("repellat"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "ipsa"),
                        new ActionButton("non qui iusto",
                                "https://picsum.photos/640/480/?image=826",
                                "79935086-89a5-9f82-6249-6b66b094bec7",
                                () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "corrupti"),
                        new ActionToggle("natus quisquam tempore",
                                "074fac1d-cc38-d6be-05eb-160fc6856edf",
                                () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "et")]),
                        new AttributesDictionary(),
                        true,
                        "commodi",
                        "qui",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nihil",
                            2))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["necessitatibus",
                    "doloremque"],
                    ["password",
                        "status",
                        "createdAt",
                        "token"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("name");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("name",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Point(-164.5323,
                            -74.5818,
                            156.0182,
                            -46.0176,
                            354.0554,
                        new SpatialReference(5,
                                "rerum",
                                "soluta",
                                "odit"),
                            true,
                            true,
                            441.3925),
                    new TextSymbol("minus explicabo suscipit",
                        new MapColor(147, 121, 207),
                        new MapColor(115, 175, 219),
                            new Dimension(507.6197),
                        new MapFont(new Dimension(519.7367),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            575.8230,
                        new MapColor(52, 58, 167),
                        new MapColor(108, 235, 35),
                            764.6394,
                        HorizontalAlignment.Right,
                            true,
                            48.7604,
                            new Dimension(81.7076),
                            true),
                    new PopupTemplate("suscipit rem ut",
                            "dicta",
                            ["aut",
                                "et",
                                "minima",
                                "quisquam"],
                        [new FieldInfo("group",
                                "itaque",
                                "nemo",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("status",
                                "sed",
                                "ut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("title",
                                "enim",
                                "nobis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("comment",
                                "assumenda",
                                "libero",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new RelationshipPopupContent("illum unde amet",
                                "accusamus voluptate ipsam deserunt",
                                9,
                                "debitis",
                            [new RelatedRecordsInfoFieldOrder("quae",
                                OrderBy.Asc)],
                                4),
                        new FieldsPopupContent([new FieldInfo("title",
                                    "non",
                                    "maxime",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("id",
                                    "rerum",
                                    "sapiente",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("email",
                                    "repudiandae",
                                    "officiis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "dolor est est eius ut",
                                "itaque magni tenetur"),
                        new FieldsPopupContent([new FieldInfo("comment",
                                    "corrupti",
                                    "provident",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("updatedAt",
                                    "distinctio",
                                    "assumenda",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("phone",
                                    "vitae",
                                    "dolorum",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "modi eos ut quam",
                                "in tempora corrupti")],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "createdAt",
                                "quae nobis facilis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("enim illum fuga",
                                "https://picsum.photos/640/480/?image=292",
                                "ca7ecf7e-1016-7bd5-934a-6b95dd1c9139",
                                () => { Console.WriteLine("fuga"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "eum"),
                        new ActionToggle("adipisci aut delectus",
                                "2df956d2-c77d-fca5-0cbf-02bb45ad5916",
                                () => { Console.WriteLine("accusantium"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "ut"),
                        new ActionToggle("commodi ut consectetur",
                                "09f92d15-b695-a2bc-4d63-8bb029f09aa8",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "architecto"),
                        new ActionToggle("qui hic nobis",
                                "d22d96c3-f385-cc63-d40c-1cf296f1b202",
                                () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "fuga")]),
                        new AttributesDictionary(),
                        true,
                        "at",
                        "autem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "libero",
                            2))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([5,
                    8,
                    2],
                    true,
                    112.7122,
                    284.4934,
                    "3.1.6.0",
                new Extent(52.2172,
                        27.0822,
                        -22.0895,
                        5.0141,
                        686.0495,
                        542.3828,
                        351.6319,
                        701.9670,
                    new SpatialReference(3,
                            "enim",
                            "non",
                            "dolor"),
                        true,
                        true),
                    7,
                    ["ut",
                        "eligendi",
                        "vero",
                        "in"],
                    "culpa",
                    new DateTime(2003, 2, 1, 11, 35, 17),
                    171.1732,
                    2,
                    "commodi",
                    2),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([1,
                    7,
                    9,
                    2],
                    true,
                    436.9848,
                    411.3344,
                    "8.9.1.6",
                new Polygon([new MapPath([new MapPoint([118.3822,
                            780.1140]),
                        new MapPoint([215.0998,
                            809.1124,
                            223.1675,
                            980.4313])]),
                        new MapPath([new MapPoint([534.4955,
                                537.2697,
                                666.4528,
                                826.9716]),
                            new MapPoint([15.5657,
                                954.1274,
                                97.6864,
                                767.3441]),
                            new MapPoint([558.3929,
                                188.0232])]),
                        new MapPath([new MapPoint([705.4034,
                                594.1745]),
                            new MapPoint([750.6928,
                                778.0793,
                                587.2487,
                                786.4815]),
                            new MapPoint([396.8784,
                                14.1904]),
                            new MapPoint([947.3465,
                                494.9191,
                                722.5716,
                                468.2613])]),
                        new MapPath([new MapPoint([423.6105,
                                551.9706,
                                97.0348]),
                            new MapPoint([586.9979,
                                806.1369,
                                997.7995,
                                313.9953]),
                            new MapPoint([883.1153,
                                677.2147,
                                516.8672,
                                164.2259])])],
                    new SpatialReference(4,
                            "delectus",
                            "in",
                            "sit"),
                    new Point(92.5999,
                            38.4542,
                            -125.7310,
                            -7.8113,
                            524.9828,
                        new SpatialReference(9,
                                "recusandae",
                                "quo",
                                "provident"),
                            true,
                            true,
                            643.3915),
                        true,
                        true,
                        true),
                    1,
                    ["nisi",
                        "ad"],
                    "voluptatibus",
                    new DateTime(2014, 1, 22, 9, 13, 42),
                    947.8719,
                    9,
                    "excepturi",
                    2),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([6,
                    9,
                    8,
                    3],
                    true,
                    788.0038,
                    934.8341,
                    "5.8.3.0",
                new Extent(-64.7294,
                        -0.7449,
                        -83.0305,
                        -40.2016,
                        348.2279,
                        392.8617,
                        786.4362,
                        374.5580,
                    new SpatialReference(7,
                            "dolores",
                            "hic",
                            "excepturi"),
                        true,
                        true),
                    7,
                    ["magnam",
                        "eius"],
                    "est",
                    new DateTime(2003, 3, 4, 11, 39, 46),
                    59.5567,
                    5,
                    "quam",
                    7),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([6,
                    1,
                    9],
                    true,
                    649.1311,
                    137.5063,
                    "5.8.5.2",
                new Polyline([new MapPath([new MapPoint([152.1943,
                            629.5550,
                            192.3202]),
                        new MapPoint([241.2363,
                            205.7958,
                            161.3650])]),
                        new MapPath([new MapPoint([660.9814,
                                854.6406]),
                            new MapPoint([672.4983,
                                800.0845,
                                741.1856,
                                983.8015]),
                            new MapPoint([449.4896,
                                650.7404]),
                            new MapPoint([536.6012,
                                256.3311,
                                401.1281])])],
                    new SpatialReference(9,
                            "nesciunt",
                            "dolores",
                            "laborum"),
                        true,
                        true),
                    2,
                    ["recusandae",
                        "nam"],
                    "nostrum",
                    new DateTime(2016, 2, 26, 15, 20, 35),
                    655.5845,
                    9,
                    "alias",
                    7),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Xor;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "et fugit et"),
                ElevationInfoMode.OnTheGround,
                    429.1636,
                ElevationUnit.Millimeters);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("voluptates",
                    47175817.2085),
                    new Effect("perspiciatis",
                        9723299.0816),
                    new Effect("cumque",
                        13606252.2695)],
                    true,
                new FeatureFilter(240.8462,
                    new Polygon([new MapPath([new MapPoint([591.1833,
                                531.2877,
                                617.3184,
                                678.7962]),
                            new MapPoint([174.2575,
                                67.9343,
                                547.8209]),
                            new MapPoint([341.4811,
                                672.8235,
                                321.1784,
                                612.2069])]),
                            new MapPath([new MapPoint([303.4712,
                                    895.7502,
                                    464.8739,
                                    330.8711]),
                                new MapPoint([352.8282,
                                    197.9606,
                                    732.3672])]),
                            new MapPath([new MapPoint([694.6778,
                                    962.2534,
                                    420.1506,
                                    589.5153]),
                                new MapPoint([312.4918,
                                    773.6180]),
                                new MapPoint([901.0139,
                                    180.0452])])],
                        new SpatialReference(9,
                                "omnis",
                                "dolore",
                                "enim"),
                        new Point(158.3198,
                                -56.2137,
                                42.4199,
                                -56.6851,
                                475.7333,
                            new SpatialReference(5,
                                    "alias",
                                    "excepturi",
                                    "ab"),
                                true,
                                true,
                                879.4564),
                            true,
                            true,
                            true),
                        [2,
                            6],
                    SpatialRelationship.Crosses,
                    new TimeExtent(new DateTime(2009, 6, 23, 6, 13, 6),
                            new DateTime(2006, 9, 8, 1, 11, 49)),
                        QueryUnits.UsNauticalMiles,
                        "Age > 21"),
                    [new Effect("repudiandae",
                        884283.2188),
                        new Effect("ea",
                            5878275.5189),
                        new Effect("ipsum",
                            46340792.2046)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "token",
                    "eveniet",
                    "dicta fuga minus commodi",
                    8,
                    true,
                    true,
                    new { Value = "dignissimos" },
                FieldValueType.OrderedOrRanked,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "createdAt",
                    "repellendus",
                    "placeat excepturi dolores hic labore amet inventore",
                    1,
                    true,
                    true,
                    new { Value = "aliquid" },
                FieldValueType.None,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "name",
                    "autem",
                    "laboriosam quisquam facere rerum aut",
                    5,
                    true,
                    true,
                    new { Value = "cum" },
                FieldValueType.Description,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "comment",
                    "quisquam",
                    "non repellendus iusto illo sit et",
                    6,
                    true,
                    true,
                    new { Value = "eum" },
                FieldValueType.None,
                    new CodedValueDomain<string>())];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(107.6080,
                    152.4898,
                    15.9031,
                    -9.7490,
                    593.9640,
                    569.1833,
                    161.3474,
                    614.3473,
                new SpatialReference(3,
                        "repudiandae",
                        "dolor",
                        "dignissimos"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polygon;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterCenter,
                    "voluptate",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Parallel,
                    40967190.7265,
                    30129.5624,
                    true,
                    new Dimension(378.6041),
                new TextSymbol("commodi est aut",
                    new MapColor(38, 198, 205),
                    new MapColor(149, 62, 227),
                        new Dimension(525.7238),
                    new MapFont(new Dimension(535.6044),
                            "Bookman",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.None),
                        241.4531,
                    new MapColor(51, 163, 207),
                    new MapColor(210, 127, 92),
                        34.4924,
                    HorizontalAlignment.Left,
                        true,
                        431.0093,
                        new Dimension(633.2919),
                        true),
                    true,
                    "PostalCode = 'M5V 1J9'"),
            new Label(LabelPlacement.BelowRight,
                    "vero",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    30072987.1402,
                    3245.0365,
                    true,
                    new Dimension(51.6937),
                new TextSymbol("sed repellat et",
                    new MapColor(186, 72, 166),
                    new MapColor(182, 78, 247),
                        new Dimension(6.8148),
                    new MapFont(new Dimension(391.8655),
                            "Helvetica",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        17.8645,
                    new MapColor(248, 216, 17),
                    new MapColor(224, 196, 149),
                        56.2450,
                    HorizontalAlignment.Left,
                        true,
                        341.6571,
                        new Dimension(593.9669),
                        true),
                    true,
                    "Age > 21")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("sapiente",
                SortOrder.Descending,
                    "odio")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("eos explicabo officia",
                    "doloribus",
                    ["earum",
                        "illum",
                        "neque"],
                [new FieldInfo("updatedAt",
                        "corporis",
                        "eligendi",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(5,
                            true,
                        DateFormat.LongDateShortTime),
                        true,
                        true,
                    StatisticType.Stddev),
                new FieldInfo("avatar",
                        "ut",
                        "eos",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.LongMonthDayYearLongTime24),
                        true,
                        true,
                    StatisticType.Count),
                new FieldInfo("phone",
                        "porro",
                        "accusantium",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(1,
                            true,
                        DateFormat.ShortDateLongTime24),
                        true,
                        true,
                    StatisticType.Max),
                new FieldInfo("title",
                        "sit",
                        "nam",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(1,
                            true,
                        DateFormat.ShortDateLeLongTime24),
                        true,
                        true,
                    StatisticType.Count)],
                [new TextPopupContent("aut dolore sequi"),
                new AttachmentsPopupContent("perferendis accusamus eveniet",
                        "ea in ad molestiae perferendis",
                        AttachmentsPopupContentDisplayType.Auto),
                new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                            "soluta",
                            "vel reprehenderit sunt"))],
                [new ExpressionInfo("return $feature['FieldName'];",
                        "avatar",
                        "incidunt autem ut",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Name;",
                        "category",
                        "magni iusto atque",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature['FieldName'];",
                        "category",
                        "earum esse similique",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("omnis libero explicabo",
                        "7388f707-1e22-af71-b59a-ba70505e9f9c",
                        () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "avatar",
                        "ab")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem();
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.EqualInterval,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(227, 0, 56),
                            new MapColor(209, 143, 68)),
                        new AlgorithmicColorRamp(Algorithm.Hsv,
                            new MapColor(117, 221, 115),
                            new MapColor(216, 167, 96)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(56, 232, 121),
                            new MapColor(145, 212, 74))]),
                        307.3283,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(844.4537,
                                50.4840),
                        new AuthoringInfoField1ClassBreakInfos(23.8871,
                                136.5101),
                        new AuthoringInfoField1ClassBreakInfos(976.9502,
                                746.0543)],
                            "ut",
                            "illo",
                            "ducimus"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(63.8148,
                                263.4450)],
                            "qui",
                            "eum",
                            "a"),
                        ["assumenda",
                            "voluptatem",
                            "temporibus"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "assumenda",
                        true,
                    LengthUnit.Inches,
                        459.4959,
                        790.0180,
                        376.0679,
                        507.4727),
                new PictureFillSymbol("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0",
                    new Dimension(491.1308),
                    new Dimension(573.2393),
                    new Dimension(105.0527),
                    new Dimension(581.1499),
                    -97.2401,
                    -22.3586,
                    new Outline(new MapColor(94, 201, 47),
                        new Dimension(659.6538),
                        SimpleLineSymbolStyle.LongDash,
                        Cap.Round,
                        Join.Round,
                        new LineSymbolMarker(new MapColor(208, 177, 35),
                            LinePlacement.Begin,
                            LineSymbolMarkerStyle.Square),
                        92.9448),
                    new MapColor(248, 58, 81)),
                    "molestiae",
                    new DefaultSymbol(),
                    "ut",
                    "atque",
                    "quibusdam",
                    "corrupti",
                new UniqueValueRendererLegendOptions("ab reprehenderit provident"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("quo",
                        new TextSymbol("iusto praesentium deleniti",
                            new MapColor(144, 79, 61),
                            new MapColor(155, 162, 95),
                                new Dimension(271.9626),
                            new MapFont(new Dimension(451.1956),
                                    "Verdana",
                                MapFontStyle.Normal,
                                FontWeight.Normal,
                                TextDecoration.None),
                                508.1971,
                            new MapColor(212, 109, 227),
                            new MapColor(162, 12, 146),
                                123.2990,
                            HorizontalAlignment.Left,
                                true,
                                161.1375,
                                new Dimension(562.4339),
                                true),
                        [new UniqueValue("quod",
                                "deleniti",
                                "consectetur"),
                        new UniqueValue("et",
                                "tempore",
                                "qui"),
                        new UniqueValue("dolorum",
                                "consequatur",
                                "autem"),
                        new UniqueValue("et",
                                "quod",
                                "voluptatem")]),
                    new UniqueValueClass("quia",
                        new TextSymbol("suscipit doloremque occaecati",
                            new MapColor(147, 31, 44),
                            new MapColor(18, 83, 26),
                                new Dimension(426.7106),
                            new MapFont(new Dimension(885.5750),
                                    "Verdana",
                                MapFontStyle.Oblique,
                                FontWeight.Normal,
                                TextDecoration.None),
                                692.4912,
                            new MapColor(168, 67, 20),
                            new MapColor(55, 73, 39),
                                598.6225,
                            HorizontalAlignment.Right,
                                true,
                                374.3713,
                                new Dimension(52.6979),
                                true),
                        [new UniqueValue("asperiores",
                                "dolor",
                                "distinctio"),
                        new UniqueValue("ratione",
                                "placeat",
                                "molestiae"),
                        new UniqueValue("sit",
                                "quam",
                                "esse"),
                        new UniqueValue("omnis",
                                "aut",
                                "expedita")])],
                        "doloribus")],
                [new UniqueValueInfo("exercitationem",
                    new TextSymbol("sint adipisci voluptatem",
                        new MapColor(178, 230, 190),
                        new MapColor(122, 101, 78),
                            new Dimension(351.0109),
                        new MapFont(new Dimension(654.1899),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            849.9932,
                        new MapColor(135, 223, 141),
                        new MapColor(175, 123, 121),
                            163.9931,
                        HorizontalAlignment.Center,
                            true,
                            205.3494,
                            new Dimension(771.6020),
                            true),
                        "odit"),
                new UniqueValueInfo("voluptates",
                    new TextSymbol("quae molestias et",
                        new MapColor(137, 9, 84),
                        new MapColor(74, 28, 90),
                            new Dimension(654.7536),
                        new MapFont(new Dimension(215.8328),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            287.4738,
                        new MapColor(115, 160, 251),
                        new MapColor(120, 142, 111),
                            15.7677,
                        HorizontalAlignment.Right,
                            true,
                            110.8462,
                            new Dimension(617.7932),
                            true),
                        "corporis")],
                    "enim",
                    "earum optio ea");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(1,
                    "maiores",
                    "consequuntur",
                    "minus");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("voluptas nam iusto cumque voluptatum",
                DrawingTool.Circle,
                    "token",
                new Graphic(new Point(-122.9964,
                            -5.5865,
                            13.8732,
                            39.5631,
                            412.1213,
                        new SpatialReference(9,
                                "dolor",
                                "quis",
                                "dolorum"),
                            true,
                            true,
                            657.6422),
                    new TextSymbol("voluptate assumenda eum",
                        new MapColor(138, 75, 24),
                        new MapColor(49, 97, 219),
                            new Dimension(358.1681),
                        new MapFont(new Dimension(643.6729),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            849.0148,
                        new MapColor(85, 138, 101),
                        new MapColor(9, 88, 23),
                            844.4387,
                        HorizontalAlignment.Left,
                            true,
                            535.5410,
                            new Dimension(849.7482),
                            true),
                    new PopupTemplate("a corrupti accusantium",
                            "voluptatum",
                            ["odio",
                                "officia",
                                "voluptatem",
                                "fuga"],
                        [new FieldInfo("title",
                                "maiores",
                                "nihil",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("createdAt",
                                "ducimus",
                                "maxime",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new AttachmentsPopupContent("quidem ipsa consectetur",
                                "impedit quos ab distinctio",
                                AttachmentsPopupContentDisplayType.Preview),
                        new RelationshipPopupContent("ipsa quod pariatur",
                                "est maxime cupiditate impedit qui soluta",
                                3,
                                "ducimus",
                            [new RelatedRecordsInfoFieldOrder("odio",
                                OrderBy.Asc)],
                                5),
                        new AttachmentsPopupContent("doloremque molestiae quidem",
                                "odio sapiente labore vel",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "comment",
                                "quos aut maiores",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("vel nihil debitis",
                                "ef93aef8-c33c-d5c3-3d3f-024b39c6d92a",
                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "ipsa")]),
                        new AttributesDictionary(),
                        true,
                        "quo",
                        "et",
                        new GraphicOrigin(Guid.NewGuid(),
                            "non",
                            9)),
                    new Thumbnail("occaecati",
                        "consequatur",
                        44.7913,
                        169.3586)),
            new FeatureTemplate("quis officia rerum quaerat quo",
                DrawingTool.Triangle,
                    "email",
                new Graphic(new Point(-5.0506,
                            0.8328,
                            176.7952,
                            -89.7491,
                            298.6817,
                        new SpatialReference(2,
                                "ratione",
                                "quia",
                                "non"),
                            true,
                            true,
                            299.7025),
                    new TextSymbol("omnis cupiditate itaque",
                        new MapColor(229, 244, 29),
                        new MapColor(228, 193, 138),
                            new Dimension(172.3750),
                        new MapFont(new Dimension(719.1540),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            827.7306,
                        new MapColor(210, 247, 13),
                        new MapColor(251, 242, 180),
                            16.5816,
                        HorizontalAlignment.Right,
                            true,
                            933.8809,
                            new Dimension(713.9430),
                            true),
                    new PopupTemplate("dolores vero qui",
                            "tempora",
                            ["illo",
                                "voluptatem",
                                "eos",
                                "nobis"],
                        [new FieldInfo("id",
                                "praesentium",
                                "in",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("email",
                                "aut",
                                "aut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("title",
                                "aut",
                                "quia",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("status",
                                "ut",
                                "corrupti",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Max)],
                        [new FieldsPopupContent([new FieldInfo("category",
                                    "aut",
                                    "soluta",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("name",
                                    "assumenda",
                                    "veritatis",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("id",
                                    "in",
                                    "deleniti",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "totam deleniti sed hic in officia",
                                "aperiam laborum totam"),
                        new TextPopupContent("earum incidunt itaque")],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "status",
                                "iusto numquam enim",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "updatedAt",
                                "provident culpa ut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "createdAt",
                                "et quaerat aliquid",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("praesentium voluptatibus tempore",
                                "https://picsum.photos/640/480/?image=1021",
                                "9b971664-68ae-9eb6-a04b-23daa404caf3",
                                () => { Console.WriteLine("natus"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "sit"),
                        new ActionToggle("esse est aspernatur",
                                "3b0a1286-7d4b-bfe6-8acc-889d92e95fb9",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "numquam"),
                        new ActionToggle("sapiente facilis perferendis",
                                "7a527b57-9781-f499-22f3-48f63af09458",
                                () => { Console.WriteLine("ratione"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "sit")]),
                        new AttributesDictionary(),
                        true,
                        "blanditiis",
                        "repudiandae",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sed",
                            5)),
                    new Thumbnail("rerum",
                        "repellendus",
                        240.5294,
                        25.2774)),
            new FeatureTemplate("nostrum deserunt aut minima rerum",
                DrawingTool.Rectangle,
                    "title",
                new Graphic(new Polyline([new MapPath([new MapPoint([286.5143,
                                824.3784,
                                152.6995]),
                            new MapPoint([402.3293,
                                936.3279,
                                773.9064,
                                290.7122]),
                            new MapPoint([139.0438,
                                954.0389]),
                            new MapPoint([335.2004,
                                645.6618])]),
                            new MapPath([new MapPoint([134.8942,
                                    851.5343]),
                                new MapPoint([128.2242,
                                    87.1597])]),
                            new MapPath([new MapPoint([273.5179,
                                    300.1406,
                                    96.9839,
                                    875.1080]),
                                new MapPoint([137.1081,
                                    672.5894,
                                    205.9841]),
                                new MapPoint([856.6933,
                                    257.4750,
                                    597.6085]),
                                new MapPoint([767.4731,
                                    466.2039,
                                    777.4770])]),
                            new MapPath([new MapPoint([762.6576,
                                    719.0872]),
                                new MapPoint([898.8630,
                                    696.4108,
                                    124.2674]),
                                new MapPoint([887.0156,
                                    675.8553,
                                    381.0615])])],
                        new SpatialReference(9,
                                "et",
                                "aut",
                                "quam"),
                            true,
                            true),
                    new TextSymbol("tempora sed quos",
                        new MapColor(222, 40, 188),
                        new MapColor(81, 100, 98),
                            new Dimension(850.8303),
                        new MapFont(new Dimension(470.8139),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            423.0484,
                        new MapColor(231, 60, 95),
                        new MapColor(183, 99, 37),
                            534.8902,
                        HorizontalAlignment.Center,
                            true,
                            848.6354,
                            new Dimension(524.5728),
                            true),
                    new PopupTemplate("soluta quia quasi",
                            "dolor",
                            ["blanditiis",
                                "ratione",
                                "rerum",
                                "quia"],
                        [new FieldInfo("phone",
                                "aut",
                                "ipsum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("createdAt",
                                "incidunt",
                                "qui",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("avatar",
                                "non",
                                "est",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new AttachmentsPopupContent("consequatur et placeat",
                                "laboriosam excepturi repudiandae qui",
                                AttachmentsPopupContentDisplayType.Preview),
                        new RelationshipPopupContent("non dicta repudiandae",
                                "dolores blanditiis eos atque",
                                4,
                                "similique",
                            [new RelatedRecordsInfoFieldOrder("unde",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("velit",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("corporis",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("dolor",
                                OrderBy.Asc)],
                                8),
                        new MediaPopupContent("iusto assumenda dolor",
                                "voluptatem sit ducimus repudiandae et quisquam",
                            [new ColumnChartMediaInfo("ex corporis non",
                                    "cumque",
                                    "nihil ut minus",
                                new ChartMediaInfoValue(["aperiam",
                                        "accusantium",
                                        "nemo"],
                                        "deleniti",
                                        "ipsam",
                                    [new ChartMediaInfoValueSeries("id",
                                            "dignissimos",
                                            591.9060),
                                    new ChartMediaInfoValueSeries("title",
                                            "distinctio",
                                            861.3735)],
                                    [new MapColor(203, 35, 220),
                                    new MapColor(198, 25, 207),
                                    new MapColor(56, 226, 157)])),
                            new PieChartMediaInfo("praesentium repellendus aperiam",
                                    "est",
                                    "dolorem neque qui",
                                new ChartMediaInfoValue(["nisi",
                                        "quo"],
                                        "sit",
                                        "omnis",
                                    [new ChartMediaInfoValueSeries("group",
                                            "iure",
                                            598.4936)],
                                    [new MapColor(182, 124, 143),
                                    new MapColor(138, 228, 39),
                                    new MapColor(248, 144, 65),
                                    new MapColor(15, 5, 68)])),
                            new ImageMediaInfo("voluptas quo ut",
                                    "error",
                                    "aut amet rerum",
                                new ImageMediaInfoValue("https://tobin.org",
                                        "http://herman.com"),
                                    97.2674),
                            new PieChartMediaInfo("distinctio adipisci nesciunt",
                                    "eius",
                                    "explicabo laborum magnam",
                                new ChartMediaInfoValue(["tempora",
                                        "omnis",
                                        "eum",
                                        "odit"],
                                        "similique",
                                        "ratione",
                                    [new ChartMediaInfoValueSeries("password",
                                            "accusamus",
                                            265.0821)],
                                    [new MapColor(18, 186, 47),
                                    new MapColor(61, 245, 157),
                                    new MapColor(43, 11, 172),
                                    new MapColor(164, 53, 194)]))],
                                3),
                        new MediaPopupContent("recusandae temporibus sit",
                                "esse modi et neque veniam nesciunt aliquam",
                            [new ColumnChartMediaInfo("et aut sapiente",
                                    "expedita",
                                    "voluptate eveniet architecto",
                                new ChartMediaInfoValue(["et",
                                        "laudantium"],
                                        "qui",
                                        "autem",
                                    [new ChartMediaInfoValueSeries("id",
                                            "doloribus",
                                            442.6128),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "porro",
                                            820.4389),
                                    new ChartMediaInfoValueSeries("phone",
                                            "aut",
                                            893.8240)],
                                    [new MapColor(117, 8, 168),
                                    new MapColor(18, 25, 77),
                                    new MapColor(161, 9, 87),
                                    new MapColor(133, 17, 3)]))],
                                4)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "updatedAt",
                                "nam consequatur rem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "createdAt",
                                "aut expedita quidem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "name",
                                "in natus explicabo",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("est asperiores similique",
                                "https://picsum.photos/640/480/?image=237",
                                "93917ee7-619c-59a3-4766-0ca6fce5c04e",
                                () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "laboriosam"),
                        new ActionButton("fugiat consequatur voluptatum",
                                "https://picsum.photos/640/480/?image=392",
                                "5fef2cfa-139a-43ba-0a72-85929aa20a6f",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "asperiores"),
                        new ActionToggle("minus eaque repellendus",
                                "9291be0e-03ea-449f-a280-4838d1c1f20f",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "voluptatem")]),
                        new AttributesDictionary(),
                        true,
                        "nam",
                        "voluptates",
                        new GraphicOrigin(Guid.NewGuid(),
                            "adipisci",
                            5)),
                    new Thumbnail("consequatur",
                        "velit",
                        99.4782,
                        282.5257)),
            new FeatureTemplate("dolorem numquam in possimus",
                DrawingTool.Freehand,
                    "group",
                new Graphic(new Extent(138.4601,
                            -57.0177,
                            -36.3669,
                            89.6252,
                            354.8026,
                            878.0058,
                            608.2236,
                            101.5454,
                        new SpatialReference(8,
                                "placeat",
                                "mollitia",
                                "aperiam"),
                            true,
                            true),
                    new TextSymbol("maxime maxime impedit",
                        new MapColor(38, 225, 162),
                        new MapColor(2, 62, 153),
                            new Dimension(765.2092),
                        new MapFont(new Dimension(969.2665),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            967.6347,
                        new MapColor(157, 0, 36),
                        new MapColor(202, 245, 60),
                            786.0895,
                        HorizontalAlignment.Center,
                            true,
                            541.4266,
                            new Dimension(301.3827),
                            true),
                    new PopupTemplate("molestias sit consectetur",
                            "nesciunt",
                            ["aut",
                                "omnis"],
                        [new FieldInfo("avatar",
                                "ducimus",
                                "natus",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "ut",
                                "quia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("status",
                                "excepturi",
                                "expedita",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new AttachmentsPopupContent("tempore accusantium quia",
                                "porro ratione fugiat voluptates recusandae nemo et",
                                AttachmentsPopupContentDisplayType.Auto),
                        new AttachmentsPopupContent("commodi unde adipisci",
                                "magnam cupiditate autem alias molestias exercitationem eum",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "name",
                                "et in quibusdam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "title",
                                "laborum ut et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "email",
                                "necessitatibus placeat numquam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("eos provident amet",
                                "35590768-ebc3-a779-cadb-d90da5fc5ddc",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "et"),
                        new ActionToggle("ea laborum et",
                                "e2e40cdb-6d56-f3f0-7279-be959fa36611",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "consequuntur"),
                        new ActionButton("enim aperiam dolores",
                                "https://picsum.photos/640/480/?image=298",
                                "58432632-4f45-3e5a-b4bb-399d36b7b58d",
                                () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "perspiciatis"),
                        new ActionToggle("in laborum repellat",
                                "d48d1301-f0ec-4883-4eee-7be50d5eae18",
                                () => { Console.WriteLine("commodi"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "aut")]),
                        new AttributesDictionary(),
                        true,
                        "accusantium",
                        "quos",
                        new GraphicOrigin(Guid.NewGuid(),
                            "beatae",
                            3)),
                    new Thumbnail("omnis",
                        "sit",
                        200.8343,
                        283.1628))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2020, 7, 16, 16, 20, 35),
                    new DateTime(2017, 2, 9, 1, 10, 29));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("molestiae",
                    "at",
                new TimeExtent(new DateTime(2007, 1, 23, 9, 17, 47),
                        new DateTime(2018, 11, 1, 20, 32, 41)),
                new TimeInterval(TemporalTime.Centuries,
                        384.7121),
                    [new DateTime(2005, 9, 6, 3, 57, 29),
                        new DateTime(2003, 7, 11, 17, 20, 8),
                        new DateTime(2002, 7, 1, 20, 12, 28)],
                    "Asia/Kabul",
                    "distinctio");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Milliseconds,
                    557.5280);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2009, 4, 18, 8, 13, 56),
                    new DateTime(2017, 5, 26, 20, 14, 34));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
