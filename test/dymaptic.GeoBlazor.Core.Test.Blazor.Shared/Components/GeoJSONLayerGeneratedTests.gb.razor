@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("aut")"
                        Title="@("voluptate fugit consequatur")"
                        Opacity="@(0.4343)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.HardLight)"
                        DefinitionExpression="@("in")"
                        DisplayField="@("consequatur")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("quia",
                            46509526.5049))"
                        FullExtent="@(new Extent(13.1767,
                                -45.3849,
                                -13.3536,
                                -15.3642,
                                464.6592,
                                804.2816,
                                177.9782,
                                624.6212,
                            new SpatialReference(3,
                                    "autem",
                                    "hic",
                                    "voluptates"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Point)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(9195544.3329)"
                        MinScale="@(26854.7924)"
                        ObjectIdField="@("qui")"
                        OutFields="@(["recusandae",
                            "ea",
                            "asperiores"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(558.7211)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(7,
                                "reiciendis",
                                "architecto",
                                "quae"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Milliseconds)"
                            Value="@(909.2808)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("mollitia")"
                            EndField="@("sed")"
                            Stops="@([new DateTime(2010, 1, 18, 20, 23, 11),
                                new DateTime(2002, 1, 19, 0, 53, 58)])"
                            TimeZone="@("Europe/Moscow")"
                            TrackIdField="@("non")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Years)"
                                Value="@(277.0407)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2015, 9, 16, 10, 26, 20))"
                                End="@(new DateTime(2020, 2, 3, 19, 52, 2))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2021, 1, 23, 18, 34, 21))"
                            End="@(new DateTime(2023, 3, 11, 9, 10, 33))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("nostrum molestiae sit adipisci enim")"
                            DrawingTool="@(DrawingTool.Point)"
                            Name="@("id")"
                            Prototype="@(new Graphic(new Polyline([new MapPath([new MapPoint([157.5115,
                                            133.7378,
                                            501.5973,
                                            173.4347]),
                                        new MapPoint([480.8228,
                                            604.3211]),
                                        new MapPoint([934.7522,
                                            604.2751,
                                            165.4531,
                                            108.2306])]),
                                        new MapPath([new MapPoint([271.5032,
                                                321.8459]),
                                            new MapPoint([667.9969,
                                                351.5679])]),
                                        new MapPath([new MapPoint([884.0553,
                                                668.8856,
                                                640.4962,
                                                130.0349]),
                                            new MapPoint([129.6508,
                                                79.6066]),
                                            new MapPoint([13.3214,
                                                463.6673,
                                                506.6359,
                                                486.8631])]),
                                        new MapPath([new MapPoint([877.4411,
                                                185.2819,
                                                61.1096]),
                                            new MapPoint([908.4709,
                                                114.8461,
                                                611.4831,
                                                313.8868]),
                                            new MapPoint([807.7677,
                                                402.2604]),
                                            new MapPoint([348.6514,
                                                765.5269,
                                                527.1074])])],
                                    new SpatialReference(1,
                                            "est",
                                            "dolorem",
                                            "eos"),
                                        true,
                                        true),
                                new TextSymbol("fugiat recusandae odit",
                                    new MapColor(0, 161, 124),
                                    new MapColor(77, 10, 0),
                                        new Dimension(409.8147),
                                    new MapFont(new Dimension(925.3395),
                                            "Helvetica",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        971.8168,
                                    new MapColor(211, 46, 146),
                                    new MapColor(111, 123, 160),
                                        49.5123,
                                    HorizontalAlignment.Left,
                                        true,
                                        146.7355,
                                        new Dimension(411.6414),
                                        true),
                                new PopupTemplate("ipsam dolor a",
                                        "at",
                                        ["quod",
                                            "ab",
                                            "asperiores",
                                            "dignissimos"],
                                    [new FieldInfo("id",
                                            "quia",
                                            "ducimus",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.Year),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("id",
                                            "et",
                                            "officiis",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("title",
                                            "non",
                                            "eos",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("updatedAt",
                                            "eos",
                                            "cumque",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                                "omnis",
                                                "et temporibus corrupti")),
                                    new RelationshipPopupContent("id eos cum",
                                            "quasi quisquam voluptatem minus assumenda",
                                            1,
                                            "est",
                                        [new RelatedRecordsInfoFieldOrder("amet",
                                            OrderBy.Desc)],
                                            6),
                                    new RelationshipPopupContent("totam dolorem nisi",
                                            "incidunt id nulla deserunt facere voluptas alias",
                                            3,
                                            "quaerat",
                                        [new RelatedRecordsInfoFieldOrder("tempore",
                                            OrderBy.Asc)],
                                            7),
                                    new AttachmentsPopupContent("voluptas sunt nam",
                                            "hic consequatur rerum veniam at minima aut",
                                            AttachmentsPopupContentDisplayType.Preview)],
                                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "createdAt",
                                            "consectetur saepe qui",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "updatedAt",
                                            "ut facilis quibusdam",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "password",
                                            "nobis hic ex",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("ex enim illo",
                                            "cfedad44-0b8d-2b3c-49ba-21e87d557c42",
                                            () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "phone",
                                            "harum"),
                                    new ActionToggle("aut est ad",
                                            "006146e9-63dd-1d5e-0a6c-f45133e50996",
                                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "email",
                                            "ratione"),
                                    new ActionButton("non non accusamus",
                                            "https://picsum.photos/640/480/?image=464",
                                            "530f5853-ab02-d286-9378-49995a650253",
                                            () => { Console.WriteLine("similique"); return Task.CompletedTask; },
                                            "comment",
                                            true,
                                            true,
                                            true,
                                            "natus"),
                                    new ActionToggle("sint quis aut",
                                            "0178af8c-71b1-8fe7-b8b1-6727c2cec6f1",
                                            () => { Console.WriteLine("deleniti"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "nihil")]),
                                    new AttributesDictionary(),
                                    true,
                                    "harum",
                                    "nostrum",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "in",
                                        5)))"
                            Thumbnail="@(new Thumbnail("ad",
                                "at",
                                85.1159,
                                284.0094))">
                        </FeatureTemplate>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                    new MapColor(111, 65, 130),
                                    new MapColor(87, 91, 169)),
                                    138.8131,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(126.4901,
                                            17.9840),
                                    new AuthoringInfoField1ClassBreakInfos(676.0925,
                                            478.1712),
                                    new AuthoringInfoField1ClassBreakInfos(116.4092,
                                            142.8600),
                                    new AuthoringInfoField1ClassBreakInfos(47.5667,
                                            701.9622)],
                                        "dolores",
                                        "ex",
                                        "quis"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(434.3805,
                                            77.4753),
                                    new AuthoringInfoField1ClassBreakInfos(998.3757,
                                            51.4079),
                                    new AuthoringInfoField1ClassBreakInfos(692.2327,
                                            911.4378)],
                                        "ea",
                                        "molestias",
                                        "quam"),
                                    ["enim",
                                        "hic"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "minus",
                                    true,
                                LengthUnit.UsFeet,
                                    700.5549,
                                    993.1554,
                                    896.9867,
                                    964.8939))">
                        </UniqueValueRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Private)"
                            AccessInformation="@("inventore")"
                            ApiKey="@("corrupti")"
                            AvgRating="@(20.9354)"
                            Categories="@(["exercitationem",
                                "quia"])"
                            Created="@(new DateTime(2003, 2, 12, 0, 9, 53))"
                            Culture="@("et")"
                            Description="@("est temporibus pariatur consequatur")"
                            Extent="@(new Extent(-167.8781,
                                    -135.2388,
                                    13.0457,
                                    50.9092,
                                    510.3663,
                                    9.7502,
                                    659.8119,
                                    19.5903,
                                new SpatialReference(2,
                                        "omnis",
                                        "ullam",
                                        "delectus"),
                                    true,
                                    true))"
                            GroupCategories="@(["consequuntur",
                                "quis",
                                "aliquid"])"
                            LicenseInfo="@("non")"
                            Modified="@(new DateTime(2011, 11, 16, 8, 14, 19))"
                            Name="@("name")"
                            NumComments="@(405.3963)"
                            NumRatings="@(765.3169)"
                            NumViews="@(275.2144)"
                            Owner="@("Theresia Gutmann")"
                            OwnerFolder="@("Eli Kiehn")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.Anonymous,
                                    ["eum",
                                        "deleniti"],
                                    "error",
                                    "qui",
                                    "aut",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("et")"
                            Screenshots="@(["quam",
                                "repellendus",
                                "et",
                                "incidunt"])"
                            Size="@(6)"
                            Snippet="@("itaque")"
                            Tags="@(["nulla",
                                "consequuntur",
                                "ut",
                                "id"])"
                            Title="@("officia quis omnis")"
                            TypeKeywords="@(["quis",
                                "excepturi"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("aut nihil sunt")"
                            StringContent="@("suscipit")"
                            OutFields="@(["eum",
                                "laudantium",
                                "blanditiis"])"
                            FieldInfos="@([new FieldInfo("updatedAt",
                                    "unde",
                                    "tempora",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("name",
                                    "maiores",
                                    "debitis",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count)])"
                            Content="@([new TextPopupContent("sunt sit dolor"),
                            new RelationshipPopupContent("molestiae nostrum voluptatem",
                                    "provident facilis quae laudantium enim iusto",
                                    7,
                                    "sapiente",
                                [new RelatedRecordsInfoFieldOrder("inventore",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("nihil",
                                    OrderBy.Desc)],
                                    4),
                            new AttachmentsPopupContent("occaecati id consequatur",
                                    "dolore error ut exercitationem consequatur quia",
                                    AttachmentsPopupContentDisplayType.Preview)])"
                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "group",
                                    "aperiam eaque suscipit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "password",
                                    "recusandae odio labore",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "token",
                                    "sit sapiente excepturi",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("omnis in quo",
                                    "https://picsum.photos/640/480/?image=982",
                                    "0df71444-4bc8-e394-b95b-4eb85e5330c7",
                                    () => { Console.WriteLine("nemo"); return Task.CompletedTask; },
                                    "email",
                                    true,
                                    true,
                                    true,
                                    "sed"),
                            new ActionButton("aliquid dolor nam",
                                    "https://picsum.photos/640/480/?image=592",
                                    "b60a9387-315e-caa0-e251-ad056dbd9593",
                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                    "title",
                                    true,
                                    true,
                                    true,
                                    "dolores")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("dolorem")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("rem")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowEnd)"
                            LabelExpression="@("omnis")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(17031201.3493)"
                            MinScale="@(26715.3504)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(880.8313))"
                            Symbol="@(new TextSymbol("sed dolores quas",
                                new MapColor(235, 231, 104),
                                new MapColor(191, 252, 79),
                                    new Dimension(668.9675),
                                new MapFont(new Dimension(503.4263),
                                        "Arial",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.LineThrough),
                                    247.7521,
                                new MapColor(129, 98, 217),
                                new MapColor(28, 87, 193),
                                    965.9169,
                                HorizontalAlignment.Center,
                                    true,
                                    997.9638,
                                    new Dimension(496.0419),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Age > 21")">
                        </Label>
                        <Field 
                            Name="@("title")"
                            Alias="@("voluptates")"
                            Description="@("ullam minus dicta et non")"
                            Length="@(4)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "illo" })"
                            ValueType="@(FieldValueType.DateAndTime)"
                            Domain="@(new InheritedDomain("password"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("nostrum",
                                49504428.9271)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(301.2145,
                                new Polygon([new MapPath([new MapPoint([206.7152,
                                            75.5003,
                                            278.9727]),
                                        new MapPoint([996.2463,
                                            295.7809,
                                            616.3042]),
                                        new MapPoint([716.0248,
                                            710.1800,
                                            172.9576])]),
                                        new MapPath([new MapPoint([350.9425,
                                                428.3376,
                                                335.8837,
                                                927.4547]),
                                            new MapPoint([309.0460,
                                                793.5615,
                                                238.2448,
                                                204.2806])])],
                                    new SpatialReference(6,
                                            "voluptas",
                                            "ipsa",
                                            "possimus"),
                                    new Point(-104.1351,
                                            -9.0172,
                                            -136.4899,
                                            76.2703,
                                            272.0686,
                                        new SpatialReference(5,
                                                "ipsa",
                                                "ullam",
                                                "sit"),
                                            true,
                                            true,
                                            921.8996),
                                        true,
                                        true,
                                        true),
                                    [4,
                                        7,
                                        3,
                                        2],
                                SpatialRelationship.Intersects,
                                new TimeExtent(new DateTime(2012, 10, 22, 22, 28, 49),
                                        new DateTime(2005, 9, 13, 0, 43, 2)),
                                    QueryUnits.Meters,
                                    "Province = 'Ontario'"))"
                            IncludedEffect="@([new Effect("qui",
                                36192191.4477),
                                new Effect("ea",
                                    45702890.4668),
                                new Effect("expedita",
                                    19627551.4535)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "est illo et"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(355.2893)"
                            Unit="@(ElevationUnit.Kilometers)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polyline([new MapPath([new MapPoint([922.8193,
                                242.6364,
                                675.7651]),
                            new MapPoint([783.9155,
                                470.6058,
                                527.2722]),
                            new MapPoint([740.8903,
                                630.8550]),
                            new MapPoint([917.4958,
                                41.6992,
                                238.0081,
                                99.2312])]),
                            new MapPath([new MapPoint([963.6959,
                                    320.6147,
                                    725.9981]),
                                new MapPoint([9.6302,
                                    766.6880,
                                    689.5294,
                                    477.0102]),
                                new MapPoint([494.1771,
                                    398.0455])]),
                            new MapPath([new MapPoint([527.9468,
                                    161.8903,
                                    429.4090,
                                    865.9566]),
                                new MapPoint([59.2572,
                                    294.9350,
                                    566.5961]),
                                new MapPoint([92.6382,
                                    525.2250,
                                    269.1743,
                                    8.3481])])],
                        new SpatialReference(4,
                                "aliquam",
                                "saepe",
                                "numquam"),
                            true,
                            true),
                    new TextSymbol("et illum nemo",
                        new MapColor(27, 213, 250),
                        new MapColor(107, 238, 76),
                            new Dimension(293.9955),
                        new MapFont(new Dimension(356.8288),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            899.8040,
                        new MapColor(199, 112, 16),
                        new MapColor(130, 153, 69),
                            907.0624,
                        HorizontalAlignment.Center,
                            true,
                            382.4872,
                            new Dimension(665.3933),
                            true),
                    new PopupTemplate("voluptates totam ea",
                            "culpa",
                            ["libero",
                                "rerum",
                                "nihil"],
                        [new FieldInfo("email",
                                "sint",
                                "autem",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("cum mollitia est",
                                "nobis occaecati non molestias incidunt",
                                2,
                                "illum",
                            [new RelatedRecordsInfoFieldOrder("at",
                                OrderBy.Desc)],
                                7),
                        new MediaPopupContent("quisquam optio et",
                                "deleniti deserunt totam dicta et quos aliquam",
                            [new PieChartMediaInfo("delectus praesentium eos",
                                    "saepe",
                                    "eum consequatur et",
                                new ChartMediaInfoValue(["hic",
                                        "aliquam",
                                        "assumenda",
                                        "et"],
                                        "temporibus",
                                        "recusandae",
                                    [new ChartMediaInfoValueSeries("status",
                                            "fugit",
                                            492.9552)],
                                    [new MapColor(211, 8, 8),
                                    new MapColor(29, 137, 243),
                                    new MapColor(153, 196, 94)]))],
                                4)],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "id",
                                "sapiente in officia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "password",
                                "et modi quaerat",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("et voluptates reiciendis",
                                "50a309ea-2e75-49d2-1ff0-193e9b128fcc",
                                () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "placeat"),
                        new ActionToggle("tempore illum non",
                                "3ef9c578-1482-6532-71e5-8e3ebf90c919",
                                () => { Console.WriteLine("esse"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "hic"),
                        new ActionToggle("consequatur fugiat inventore",
                                "3cfb9cbc-13aa-b3d8-0b8b-ce755751470c",
                                () => { Console.WriteLine("optio"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "laborum"),
                        new ActionToggle("nulla debitis corporis",
                                "4239e20b-76c0-3536-e202-11ce47e0a21c",
                                () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "maxime")]),
                        new AttributesDictionary(),
                        true,
                        "odio",
                        "non",
                        new GraphicOrigin(Guid.NewGuid(),
                            "distinctio",
                            6)),
                new Graphic(new Polygon([new MapPath([new MapPoint([940.9946,
                                401.5720,
                                355.5629]),
                            new MapPoint([115.9094,
                                118.1520,
                                383.2972,
                                110.4258])]),
                            new MapPath([new MapPoint([879.9255,
                                    19.2246,
                                    657.1370]),
                                new MapPoint([239.9247,
                                    806.2215,
                                    817.8859,
                                    20.3002]),
                                new MapPoint([384.4879,
                                    748.8030,
                                    919.2076,
                                    716.3560])]),
                            new MapPath([new MapPoint([56.2396,
                                    169.3751,
                                    388.6371]),
                                new MapPoint([771.6578,
                                    558.1722,
                                    959.8615]),
                                new MapPoint([707.6662,
                                    778.3852]),
                                new MapPoint([434.9920,
                                    824.1141])]),
                            new MapPath([new MapPoint([267.5059,
                                    784.0096,
                                    559.3288]),
                                new MapPoint([916.9465,
                                    60.9146]),
                                new MapPoint([640.6888,
                                    723.8284]),
                                new MapPoint([275.9438,
                                    47.3549])])],
                        new SpatialReference(2,
                                "aspernatur",
                                "enim",
                                "perferendis"),
                        new Point(178.3007,
                                -89.5354,
                                24.9217,
                                -15.2046,
                                537.0878,
                            new SpatialReference(2,
                                    "non",
                                    "qui",
                                    "ex"),
                                true,
                                true,
                                452.3393),
                            true,
                            true,
                            true),
                    new TextSymbol("vel sed aut",
                        new MapColor(200, 204, 72),
                        new MapColor(147, 130, 180),
                            new Dimension(876.3180),
                        new MapFont(new Dimension(210.1192),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            12.8168,
                        new MapColor(246, 137, 6),
                        new MapColor(141, 136, 124),
                            745.3930,
                        HorizontalAlignment.Right,
                            true,
                            937.1635,
                            new Dimension(991.1806),
                            true),
                    new PopupTemplate("autem quia rerum",
                            "reprehenderit",
                            ["autem",
                                "aut",
                                "similique",
                                "placeat"],
                        [new FieldInfo("category",
                                "possimus",
                                "incidunt",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new FieldsPopupContent([new FieldInfo("password",
                                    "eligendi",
                                    "id",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "sed deserunt harum tempora sed",
                                "similique enim ut"),
                        new AttachmentsPopupContent("distinctio delectus libero",
                                "quisquam aut soluta ex",
                                AttachmentsPopupContentDisplayType.Preview),
                        new AttachmentsPopupContent("aspernatur culpa minus",
                                "corrupti qui sapiente ut rerum aut",
                                AttachmentsPopupContentDisplayType.Auto),
                        new AttachmentsPopupContent("quod excepturi adipisci",
                                "earum sint cum temporibus non doloremque",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "phone",
                                "tempora et et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "token",
                                "fuga atque eos",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "createdAt",
                                "id quidem ut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("adipisci pariatur voluptatum",
                                "a6dc3ae7-cadc-4095-7b8f-74925f784566",
                                () => { Console.WriteLine("maiores"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "voluptas"),
                        new ActionToggle("ad nam voluptatem",
                                "7bd56a4d-aca1-02b1-c958-68b83d68e54f",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "ad"),
                        new ActionButton("et ea qui",
                                "https://picsum.photos/640/480/?image=986",
                                "d1c37038-3c05-e318-a8d9-3e7995e5d9aa",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "autem"),
                        new ActionToggle("aut unde sed",
                                "08200c4b-def7-1718-431d-7e227dcfd61b",
                                () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "quos")]),
                        new AttributesDictionary(),
                        true,
                        "beatae",
                        "veritatis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "amet",
                            9)),
                new Graphic(new Point(-105.1779,
                            75.3056,
                            -76.0187,
                            5.9593,
                            331.0342,
                        new SpatialReference(9,
                                "ex",
                                "ut",
                                "repudiandae"),
                            true,
                            true,
                            387.4419),
                    new TextSymbol("et sed ipsa",
                        new MapColor(199, 145, 90),
                        new MapColor(64, 220, 85),
                            new Dimension(993.3426),
                        new MapFont(new Dimension(14.0870),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            70.8096,
                        new MapColor(135, 86, 154),
                        new MapColor(251, 107, 69),
                            444.1212,
                        HorizontalAlignment.Left,
                            true,
                            682.9674,
                            new Dimension(325.1096),
                            true),
                    new PopupTemplate("ut in voluptas",
                            "recusandae",
                            ["consectetur",
                                "unde",
                                "numquam"],
                        [new FieldInfo("group",
                                "eum",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("title",
                                "ipsum",
                                "impedit",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("category",
                                "est",
                                "accusamus",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Count)],
                        [new AttachmentsPopupContent("praesentium eos consequuntur",
                                "rem modi eum beatae ut culpa corrupti",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "neque et hic",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "createdAt",
                                "sed et iure",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("non ratione in",
                                "f9e10700-3d6b-6963-b6d7-6e2d0e41673a",
                                () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "nulla"),
                        new ActionToggle("illo ipsum autem",
                                "207d3144-f5f6-711c-db06-ba42e0e0dd81",
                                () => { Console.WriteLine("dolore"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "dolorem"),
                        new ActionButton("eaque expedita animi",
                                "https://picsum.photos/640/480/?image=807",
                                "86aebd6e-addd-ad4c-6111-49e6d7bb9304",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "ea"),
                        new ActionToggle("natus architecto cupiditate",
                                "0b158983-c774-1b29-2084-d434cb5c8295",
                                () => { Console.WriteLine("illo"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "quis")]),
                        new AttributesDictionary(),
                        true,
                        "nobis",
                        "sint",
                        new GraphicOrigin(Guid.NewGuid(),
                            "voluptatem",
                            7))],
                [new Graphic(new Point(10.9306,
                            -46.1644,
                            -111.5627,
                            -2.2668,
                            223.9298,
                        new SpatialReference(4,
                                "fuga",
                                "consequuntur",
                                "quo"),
                            true,
                            true,
                            435.6226),
                    new TextSymbol("beatae et quis",
                        new MapColor(248, 199, 14),
                        new MapColor(208, 101, 230),
                            new Dimension(755.2206),
                        new MapFont(new Dimension(700.8816),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            808.4978,
                        new MapColor(203, 149, 250),
                        new MapColor(237, 5, 186),
                            129.8759,
                        HorizontalAlignment.Left,
                            true,
                            575.1072,
                            new Dimension(676.0969),
                            true),
                    new PopupTemplate("dolores repudiandae molestias",
                            "minima",
                            ["esse",
                                "non",
                                "incidunt",
                                "iusto"],
                        [new FieldInfo("phone",
                                "laudantium",
                                "velit",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new TextPopupContent("autem quo quia"),
                        new RelationshipPopupContent("sed sit autem",
                                "excepturi et consequatur deserunt eveniet voluptatibus quis",
                                9,
                                "reiciendis",
                            [new RelatedRecordsInfoFieldOrder("ipsum",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("corporis",
                                OrderBy.Asc)],
                                8),
                        new RelationshipPopupContent("enim aut est",
                                "enim accusamus aut ea ex nisi molestiae",
                                8,
                                "quis",
                            [new RelatedRecordsInfoFieldOrder("ut",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("rerum",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("totam",
                                OrderBy.Desc)],
                                5)],
                        [new ExpressionInfo("return Date();",
                                "id",
                                "laboriosam iste culpa",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("ratione hic officia",
                                "3f6bff12-4f97-9aad-6297-d898acbfa3d1",
                                () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "et")]),
                        new AttributesDictionary(),
                        true,
                        "enim",
                        "totam",
                        new GraphicOrigin(Guid.NewGuid(),
                            "perferendis",
                            3)),
                new Graphic(new Extent(-110.0875,
                            -58.5524,
                            -51.5014,
                            -34.7093,
                            853.4881,
                            73.1393,
                            351.4214,
                            410.8578,
                        new SpatialReference(4,
                                "voluptate",
                                "molestias",
                                "voluptatem"),
                            true,
                            true),
                    new TextSymbol("recusandae vitae ullam",
                        new MapColor(127, 116, 38),
                        new MapColor(143, 23, 234),
                            new Dimension(127.1781),
                        new MapFont(new Dimension(616.0764),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            437.0127,
                        new MapColor(104, 43, 244),
                        new MapColor(135, 56, 23),
                            2.1810,
                        HorizontalAlignment.Left,
                            true,
                            945.3677,
                            new Dimension(179.3184),
                            true),
                    new PopupTemplate("error consequuntur voluptates",
                            "excepturi",
                            ["id",
                                "excepturi"],
                        [new FieldInfo("createdAt",
                                "adipisci",
                                "eligendi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("id",
                                "quidem",
                                "iusto",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("password",
                                "corrupti",
                                "porro",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new FieldsPopupContent([new FieldInfo("email",
                                    "autem",
                                    "et",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("category",
                                    "officiis",
                                    "soluta",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("email",
                                    "doloribus",
                                    "et",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "itaque tenetur doloribus voluptas quidem",
                                "et cumque dolores"),
                        new FieldsPopupContent([new FieldInfo("avatar",
                                    "consectetur",
                                    "est",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("updatedAt",
                                    "a",
                                    "molestiae",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "possimus omnis libero molestiae non",
                                "laudantium ad unde"),
                        new MediaPopupContent("a blanditiis quia",
                                "nulla dolor aut omnis",
                            [new ImageMediaInfo("natus nemo sint",
                                    "quia",
                                    "asperiores ut quas",
                                new ImageMediaInfoValue("http://moses.com",
                                        "http://bessie.org"),
                                    660.0566),
                            new LineChartMediaInfo("enim reiciendis voluptate",
                                    "aut",
                                    "aspernatur velit sequi",
                                new ChartMediaInfoValue(["deserunt",
                                        "tempora",
                                        "neque",
                                        "a"],
                                        "eius",
                                        "et",
                                    [new ChartMediaInfoValueSeries("createdAt",
                                            "et",
                                            610.3964),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "corrupti",
                                            546.5448),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "quasi",
                                            301.5742)],
                                    [new MapColor(31, 60, 131),
                                    new MapColor(119, 81, 3),
                                    new MapColor(245, 29, 95)])),
                            new PieChartMediaInfo("temporibus incidunt placeat",
                                    "et",
                                    "necessitatibus omnis nemo",
                                new ChartMediaInfoValue(["molestias",
                                        "cumque",
                                        "quos"],
                                        "exercitationem",
                                        "sit",
                                    [new ChartMediaInfoValueSeries("password",
                                            "aliquid",
                                            352.4597),
                                    new ChartMediaInfoValueSeries("category",
                                            "necessitatibus",
                                            8.8523),
                                    new ChartMediaInfoValueSeries("token",
                                            "qui",
                                            880.1465),
                                    new ChartMediaInfoValueSeries("comment",
                                            "rerum",
                                            463.3592)],
                                    [new MapColor(93, 151, 111),
                                    new MapColor(118, 135, 200)])),
                            new BarChartMediaInfo("voluptatem sit facere",
                                    "et",
                                    "id nisi error",
                                new ChartMediaInfoValue(["modi",
                                        "maxime",
                                        "aut"],
                                        "assumenda",
                                        "voluptatem",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "distinctio",
                                            741.7872)],
                                    [new MapColor(138, 71, 71)]))],
                                6)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "group",
                                "excepturi nesciunt dolorum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "comment",
                                "sint aperiam harum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "category",
                                "sed eligendi sint",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("rerum quas enim",
                                "5b9639d4-32d9-8160-644e-a5580b30d457",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "possimus")]),
                        new AttributesDictionary(),
                        true,
                        "et",
                        "voluptatem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ut",
                            5)),
                new Graphic(new Point(165.0295,
                            -52.5490,
                            -95.2097,
                            5.5963,
                            543.8216,
                        new SpatialReference(6,
                                "quisquam",
                                "ea",
                                "a"),
                            true,
                            true,
                            604.1643),
                    new TextSymbol("cupiditate aut distinctio",
                        new MapColor(241, 98, 103),
                        new MapColor(162, 99, 203),
                            new Dimension(518.0904),
                        new MapFont(new Dimension(967.8062),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            390.3485,
                        new MapColor(43, 154, 23),
                        new MapColor(30, 4, 2),
                            39.7922,
                        HorizontalAlignment.Left,
                            true,
                            818.4384,
                            new Dimension(893.4515),
                            true),
                    new PopupTemplate("et aspernatur exercitationem",
                            "architecto",
                            ["ullam",
                                "et",
                                "id"],
                        [new FieldInfo("avatar",
                                "maiores",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("category",
                                "quaerat",
                                "voluptates",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("token",
                                "aut",
                                "ratione",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new TextPopupContent("eligendi rem itaque"),
                        new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "tempora",
                                    "non quisquam culpa")),
                        new TextPopupContent("delectus veniam perspiciatis"),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "repudiandae",
                                    "assumenda error repellat"))],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "password",
                                "eius doloremque aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "id",
                                "maiores eligendi natus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptate vitae voluptatem",
                                "94376bda-91ba-fc5f-2b53-c1af0c0876ef",
                                () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "eius")]),
                        new AttributesDictionary(),
                        true,
                        "explicabo",
                        "magni",
                        new GraphicOrigin(Guid.NewGuid(),
                            "a",
                            2)),
                new Graphic(new Polygon([new MapPath([new MapPoint([427.8082,
                                379.8698,
                                944.1651,
                                321.0489]),
                            new MapPoint([573.2364,
                                19.0595,
                                525.2356,
                                767.7276])])],
                        new SpatialReference(7,
                                "voluptatem",
                                "repudiandae",
                                "vitae"),
                        new Point(-102.5606,
                                -48.6108,
                                -61.7703,
                                -86.8218,
                                223.8972,
                            new SpatialReference(7,
                                    "dolores",
                                    "natus",
                                    "inventore"),
                                true,
                                true,
                                424.8558),
                            true,
                            true,
                            true),
                    new TextSymbol("cupiditate voluptate pariatur",
                        new MapColor(119, 85, 22),
                        new MapColor(247, 89, 33),
                            new Dimension(993.0903),
                        new MapFont(new Dimension(332.9749),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            740.9581,
                        new MapColor(185, 156, 24),
                        new MapColor(114, 40, 35),
                            425.3705,
                        HorizontalAlignment.Right,
                            true,
                            29.8029,
                            new Dimension(343.7259),
                            true),
                    new PopupTemplate("commodi est fugiat",
                            "assumenda",
                            ["quod",
                                "dolorem"],
                        [new FieldInfo("title",
                                "officiis",
                                "quod",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("status",
                                "est",
                                "nihil",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Max)],
                        [new FieldsPopupContent([new FieldInfo("createdAt",
                                    "laudantium",
                                    "nihil",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("name",
                                    "et",
                                    "omnis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("phone",
                                    "ea",
                                    "consequuntur",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("status",
                                    "amet",
                                    "et",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "reprehenderit porro eum est aliquid quas non",
                                "quae recusandae inventore"),
                        new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "eaque",
                                    "voluptatibus minus sapiente"))],
                        [new ExpressionInfo("return $feature.Name;",
                                "group",
                                "delectus eum beatae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "category",
                                "et ex quo",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "comment",
                                "quia architecto a",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "token",
                                "impedit sed dolorum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("suscipit eum labore",
                                "c512ff75-6e78-5138-2442-ce653d38f753",
                                () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "voluptatem"),
                        new ActionButton("quia ut ut",
                                "https://picsum.photos/640/480/?image=84",
                                "43d5ed72-9833-ec3e-693b-094723d1bc8f",
                                () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "maiores")]),
                        new AttributesDictionary(),
                        true,
                        "quae",
                        "ea",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            2))],
                    ["eos",
                        "odit",
                        "in"],
                [new Graphic(new Extent(-135.9682,
                            131.2636,
                            -22.1391,
                            20.5009,
                            734.4059,
                            511.3269,
                            173.3245,
                            259.3477,
                        new SpatialReference(1,
                                "cumque",
                                "quasi",
                                "earum"),
                            true,
                            true),
                    new TextSymbol("sapiente dolorem quidem",
                        new MapColor(211, 10, 45),
                        new MapColor(36, 48, 43),
                            new Dimension(292.9417),
                        new MapFont(new Dimension(351.6653),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            301.2219,
                        new MapColor(32, 254, 114),
                        new MapColor(192, 94, 74),
                            441.8073,
                        HorizontalAlignment.Right,
                            true,
                            498.0452,
                            new Dimension(576.0377),
                            true),
                    new PopupTemplate("similique itaque autem",
                            "quasi",
                            ["quam",
                                "optio",
                                "quis"],
                        [new FieldInfo("email",
                                "blanditiis",
                                "ab",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("name",
                                "ea",
                                "sunt",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new TextPopupContent("consequatur non laudantium"),
                        new MediaPopupContent("nostrum autem doloremque",
                                "molestiae non ratione ullam illo perspiciatis",
                            [new LineChartMediaInfo("fugit odit id",
                                    "voluptatum",
                                    "magni inventore aut",
                                new ChartMediaInfoValue(["libero",
                                        "dolorem"],
                                        "ad",
                                        "consequuntur",
                                    [new ChartMediaInfoValueSeries("password",
                                            "nihil",
                                            511.5080),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "aut",
                                            826.1788),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "totam",
                                            743.0619),
                                    new ChartMediaInfoValueSeries("comment",
                                            "tenetur",
                                            559.9815)],
                                    [new MapColor(23, 49, 112)]))],
                                1),
                        new MediaPopupContent("omnis voluptates quia",
                                "eum fuga sit ut et",
                            [new BarChartMediaInfo("nam nam eveniet",
                                    "est",
                                    "eum deleniti pariatur",
                                new ChartMediaInfoValue(["praesentium",
                                        "fugit",
                                        "animi"],
                                        "sed",
                                        "aut",
                                    [new ChartMediaInfoValueSeries("createdAt",
                                            "ea",
                                            837.0136),
                                    new ChartMediaInfoValueSeries("updatedAt",
                                            "perferendis",
                                            997.7218),
                                    new ChartMediaInfoValueSeries("title",
                                            "sit",
                                            624.0352)],
                                    [new MapColor(97, 155, 67)])),
                            new PieChartMediaInfo("dicta labore ut",
                                    "iste",
                                    "at molestias exercitationem",
                                new ChartMediaInfoValue(["non",
                                        "soluta"],
                                        "qui",
                                        "consequuntur",
                                    [new ChartMediaInfoValueSeries("group",
                                            "unde",
                                            843.0606),
                                    new ChartMediaInfoValueSeries("phone",
                                            "earum",
                                            556.9907),
                                    new ChartMediaInfoValueSeries("name",
                                            "ad",
                                            985.3579),
                                    new ChartMediaInfoValueSeries("name",
                                            "quia",
                                            664.4807)],
                                    [new MapColor(241, 117, 78),
                                    new MapColor(129, 154, 47)])),
                            new PieChartMediaInfo("eaque aut omnis",
                                    "corporis",
                                    "quas odit fugiat",
                                new ChartMediaInfoValue(["eum",
                                        "consequatur",
                                        "ut"],
                                        "assumenda",
                                        "aliquam",
                                    [new ChartMediaInfoValueSeries("category",
                                            "magni",
                                            981.8460),
                                    new ChartMediaInfoValueSeries("name",
                                            "culpa",
                                            791.7966),
                                    new ChartMediaInfoValueSeries("token",
                                            "enim",
                                            430.9739)],
                                    [new MapColor(224, 225, 90),
                                    new MapColor(64, 122, 59),
                                    new MapColor(21, 215, 158)]))],
                                6),
                        new RelationshipPopupContent("fugit reprehenderit aspernatur",
                                "assumenda unde iste rerum velit voluptatum",
                                2,
                                "non",
                            [new RelatedRecordsInfoFieldOrder("asperiores",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("laborum",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("at",
                                OrderBy.Asc)],
                                3)],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "name",
                                "quam optio explicabo",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("recusandae quos porro",
                                "https://picsum.photos/640/480/?image=139",
                                "3a407817-c33e-9fdb-6d8a-4357aa0b776a",
                                () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "repellat")]),
                        new AttributesDictionary(),
                        true,
                        "eveniet",
                        "eveniet",
                        new GraphicOrigin(Guid.NewGuid(),
                            "unde",
                            3))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["autem",
                    "ut"],
                    ["password",
                        "id",
                        "email"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("token");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("password",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polyline([new MapPath([new MapPoint([546.0988,
                                939.0776,
                                175.5386,
                                84.5702]),
                            new MapPoint([544.1790,
                                642.3170,
                                676.0977])]),
                            new MapPath([new MapPoint([42.4788,
                                    898.8055,
                                    231.5743,
                                    206.2748]),
                                new MapPoint([461.0894,
                                    263.5064])]),
                            new MapPath([new MapPoint([678.7547,
                                    350.6833,
                                    221.1337,
                                    387.0909]),
                                new MapPoint([341.4970,
                                    247.4846,
                                    181.6177,
                                    791.1591]),
                                new MapPoint([684.4964,
                                    136.9484,
                                    485.9114])])],
                        new SpatialReference(6,
                                "a",
                                "repellendus",
                                "sit"),
                            true,
                            true),
                    new TextSymbol("sed id sunt",
                        new MapColor(121, 10, 180),
                        new MapColor(12, 157, 58),
                            new Dimension(702.2873),
                        new MapFont(new Dimension(596.1430),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            72.7124,
                        new MapColor(105, 65, 1),
                        new MapColor(128, 92, 139),
                            116.5801,
                        HorizontalAlignment.Right,
                            true,
                            753.4514,
                            new Dimension(328.9903),
                            true),
                    new PopupTemplate("est aut natus",
                            "quia",
                            ["qui",
                                "tempora",
                                "facere",
                                "qui"],
                        [new FieldInfo("createdAt",
                                "numquam",
                                "accusamus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("category",
                                "eos",
                                "incidunt",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new TextPopupContent("sit distinctio magni")],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "avatar",
                                "quia sint nisi",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("a sapiente aspernatur",
                                "09722eb4-4b77-cb69-b99f-dda8dfbd94a7",
                                () => { Console.WriteLine("dolorum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "totam"),
                        new ActionToggle("modi voluptatem neque",
                                "8e54d069-cc70-6561-8102-7f24543623e1",
                                () => { Console.WriteLine("maxime"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "porro")]),
                        new AttributesDictionary(),
                        true,
                        "architecto",
                        "at",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nemo",
                            6))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([9,
                    2],
                    true,
                    468.8353,
                    793.2105,
                    "5.0.4.4",
                new Point(101.0082,
                        -3.3897,
                        -61.4716,
                        -73.3244,
                        696.8303,
                    new SpatialReference(1,
                            "sed",
                            "atque",
                            "est"),
                        true,
                        true,
                        209.2545),
                    1,
                    ["impedit",
                        "voluptatibus"],
                    "deserunt",
                    new DateTime(2010, 8, 4, 3, 35, 34),
                    227.4921,
                    6,
                    "officia",
                    6),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([6,
                    3,
                    3],
                    true,
                    556.6204,
                    411.6987,
                    "4.3.8.8",
                new Polyline([new MapPath([new MapPoint([316.7578,
                            973.4671]),
                        new MapPoint([730.1960,
                            664.5097,
                            367.0894])]),
                        new MapPath([new MapPoint([140.4405,
                                751.5222,
                                39.2751,
                                38.4892]),
                            new MapPoint([608.3863,
                                56.3120,
                                691.2447,
                                4.8172])]),
                        new MapPath([new MapPoint([514.1172,
                                348.2908,
                                911.3381,
                                355.7455]),
                            new MapPoint([230.6045,
                                218.3012,
                                382.3214,
                                139.4590]),
                            new MapPoint([847.3683,
                                222.3197])]),
                        new MapPath([new MapPoint([384.1975,
                                832.4139,
                                7.5058]),
                            new MapPoint([759.3051,
                                811.7354]),
                            new MapPoint([219.2682,
                                837.6196,
                                837.2155])])],
                    new SpatialReference(4,
                            "alias",
                            "deleniti",
                            "voluptas"),
                        true,
                        true),
                    3,
                    ["autem",
                        "repellat"],
                    "odio",
                    new DateTime(2002, 6, 23, 11, 45, 33),
                    928.2718,
                    7,
                    "eaque",
                    3),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([4,
                    7],
                    true,
                    914.7833,
                    99.7263,
                    "2.5.6.7",
                new Point(-163.3936,
                        80.7600,
                        142.5943,
                        -23.4186,
                        40.3773,
                    new SpatialReference(8,
                            "non",
                            "qui",
                            "qui"),
                        true,
                        true,
                        260.3459),
                    9,
                    ["explicabo",
                        "est",
                        "qui"],
                    "amet",
                    new DateTime(2014, 4, 12, 5, 37, 48),
                    576.3722,
                    2,
                    "sed",
                    9),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([1,
                    8,
                    2,
                    3],
                    true,
                    879.3938,
                    800.5596,
                    "4.2.7.4",
                new Point(171.5283,
                        82.6669,
                        167.7220,
                        59.8659,
                        153.3686,
                    new SpatialReference(2,
                            "velit",
                            "rerum",
                            "illum"),
                        true,
                        true,
                        111.6317),
                    2,
                    ["mollitia",
                        "laudantium"],
                    "magni",
                    new DateTime(2013, 5, 3, 9, 0, 45),
                    895.6417,
                    6,
                    "explicabo",
                    3),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Hide;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Color;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return Date();",
                        "dolore enim necessitatibus"),
                ElevationInfoMode.OnTheGround,
                    567.1838,
                ElevationUnit.Centimeters);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("beatae",
                    576685.2762)],
                    true,
                new FeatureFilter(278.5884,
                    new Polyline([new MapPath([new MapPoint([195.5315,
                                625.3553,
                                778.2994,
                                153.0945]),
                            new MapPoint([929.3045,
                                932.0052,
                                893.1639,
                                37.5065]),
                            new MapPoint([483.2588,
                                386.1672,
                                828.8762,
                                879.1594]),
                            new MapPoint([697.9894,
                                435.1200])])],
                        new SpatialReference(4,
                                "consequuntur",
                                "ratione",
                                "corrupti"),
                            true,
                            true),
                        [2,
                            4],
                    SpatialRelationship.Intersects,
                    new TimeExtent(new DateTime(2010, 4, 27, 15, 16, 42),
                            new DateTime(2014, 11, 13, 19, 26, 56)),
                        QueryUnits.Miles,
                        "Age > 21"),
                    [new Effect("eaque",
                        3005543.0583),
                        new Effect("aut",
                            23206899.4790),
                        new Effect("nemo",
                            15505925.8803)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "createdAt",
                    "ipsa",
                    "est cum repellendus eos",
                    2,
                    true,
                    true,
                    new { Value = "consequatur" },
                FieldValueType.None,
                new InheritedDomain("comment")),
            new Field(default,
                    "comment",
                    "porro",
                    "magnam velit quisquam est aut",
                    1,
                    true,
                    true,
                    new { Value = "porro" },
                FieldValueType.LocationOrPlaceName,
                new InheritedDomain("group")),
            new Field(default,
                    "title",
                    "minima",
                    "assumenda tempore ad quae eos",
                    4,
                    true,
                    true,
                    new { Value = "exercitationem" },
                FieldValueType.Binary,
                new RangeDomain("impedit",
                        "nisi",
                        "createdAt"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-67.7810,
                    99.6758,
                    -25.8332,
                    -18.1626,
                    142.6766,
                    851.5218,
                    439.2250,
                    634.9810,
                new SpatialReference(1,
                        "facere",
                        "qui",
                        "aliquam"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polygon;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.BelowBefore,
                    "accusamus",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Parallel,
                    21811080.9346,
                    2063.9117,
                    true,
                    new Dimension(994.0089),
                new TextSymbol("magni id et",
                    new MapColor(35, 243, 204),
                    new MapColor(155, 169, 60),
                        new Dimension(118.4304),
                    new MapFont(new Dimension(554.0292),
                            "Palatino",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        219.1459,
                    new MapColor(22, 85, 145),
                    new MapColor(252, 15, 30),
                        972.6725,
                    HorizontalAlignment.Left,
                        true,
                        42.4086,
                        new Dimension(822.0485),
                        true),
                    true,
                    "Country = 'Canada'")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("sint",
                SortOrder.Ascending,
                    "consectetur"),
            new OrderedLayerOrderBy("ut",
                SortOrder.Descending,
                    "tenetur"),
            new OrderedLayerOrderBy("est",
                SortOrder.Descending,
                    "occaecati")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("quia velit voluptatem",
                    "et",
                    ["sint",
                        "adipisci",
                        "culpa"],
                [new FieldInfo("status",
                        "veniam",
                        "maiores",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(1,
                            true,
                        DateFormat.DayShortMonthYearLongTime24),
                        true,
                        true,
                    StatisticType.Max),
                new FieldInfo("updatedAt",
                        "vel",
                        "quia",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(7,
                            true,
                        DateFormat.LongMonthYear),
                        true,
                        true,
                    StatisticType.Avg)],
                [new TextPopupContent("quasi sit voluptatem"),
                new MediaPopupContent("dolorum qui sapiente",
                        "iste assumenda quam veniam molestiae",
                    [new BarChartMediaInfo("praesentium accusantium facilis",
                            "aut",
                            "alias facere asperiores",
                        new ChartMediaInfoValue(["vero",
                                "sunt",
                                "consequatur"],
                                "sapiente",
                                "qui",
                            [new ChartMediaInfoValueSeries("token",
                                    "voluptatem",
                                    87.4127)],
                            [new MapColor(79, 180, 13),
                            new MapColor(103, 71, 70)])),
                    new LineChartMediaInfo("assumenda necessitatibus velit",
                            "aspernatur",
                            "voluptatem est illum",
                        new ChartMediaInfoValue(["harum",
                                "aut",
                                "nihil",
                                "qui"],
                                "libero",
                                "quia",
                            [new ChartMediaInfoValueSeries("status",
                                    "ut",
                                    329.3053)],
                            [new MapColor(9, 118, 107),
                            new MapColor(106, 179, 202),
                            new MapColor(33, 184, 230),
                            new MapColor(87, 80, 167)])),
                    new ImageMediaInfo("inventore aut tenetur",
                            "et",
                            "aspernatur tempore ab",
                        new ImageMediaInfoValue("https://melvin.info",
                                "https://floy.name"),
                            407.9966)],
                        1)],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "updatedAt",
                        "eius qui deserunt",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "updatedAt",
                        "cupiditate quia qui",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "updatedAt",
                        "nam repudiandae excepturi",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("reiciendis eum nam",
                        "https://picsum.photos/640/480/?image=779",
                        "b00f5c62-6233-a462-ab63-7206ad0a0c5d",
                        () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                        "comment",
                        true,
                        true,
                        true,
                        "fugit"),
                new ActionButton("magni est officiis",
                        "https://picsum.photos/640/480/?image=924",
                        "ed5fbc4c-3c07-50c7-db43-19df5f342b8d",
                        () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                        "comment",
                        true,
                        true,
                        true,
                        "nihil"),
                new ActionToggle("id veritatis ratione",
                        "d4804fab-6e71-9c9c-106b-d38435061e17",
                        () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "title",
                        "in")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "in",
                    "corporis",
                    991.8246,
                    ["distinctio",
                        "voluptatum",
                        "eaque",
                        "est"],
                    new DateTime(2011, 9, 9, 10, 56, 49),
                    "possimus",
                    "optio ipsam voluptates quia sit suscipit atque",
                new Extent(-50.0900,
                        -109.4946,
                        -86.7958,
                        -71.3141,
                        557.8833,
                        578.6701,
                        188.4413,
                        33.6490,
                    new SpatialReference(3,
                            "et",
                            "nostrum",
                            "dolorem"),
                        true,
                        true),
                    ["magni",
                        "iusto",
                        "molestiae"],
                    "enim",
                    new DateTime(2009, 11, 16, 19, 42, 6),
                    "updatedAt",
                    661.3557);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("cumque laboriosam veritatis",
                    new MapColor(161, 101, 238),
                    new MapColor(162, 184, 103),
                        new Dimension(503.5197),
                    new MapFont(new Dimension(939.0277),
                            "Helvetica",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.None),
                        174.3694,
                    new MapColor(98, 253, 4),
                    new MapColor(33, 146, 231),
                        497.0472,
                    HorizontalAlignment.Left,
                        true,
                        867.6209,
                        new Dimension(14.8929),
                        true),
                    "perferendis",
                [new ColorVariable("ratione",
                        "cum",
                    [new ColorStop(650.1886,
                        new MapColor(65, 176, 11),
                            "rerum"),
                    new ColorStop(874.2356,
                        new MapColor(85, 22, 43),
                            "ratione")],
                    new VisualVariableLegendOptions(true,
                            "est impedit velit"),
                        "voluptatem",
                        "velit consectetur omnis"),
                new RotationVariable("dolor",
                    Axis.Heading,
                    RotationType.Geographic,
                    new VisualVariableLegendOptions(true,
                            "et nulla incidunt"),
                        "qui",
                        "quod voluptas molestiae"),
                new RotationVariable("quisquam",
                    Axis.Roll,
                    RotationType.Arithmetic,
                    new VisualVariableLegendOptions(true,
                            "occaecati velit provident"),
                        "nemo",
                        "repellat suscipit porro"),
                new ColorVariable("ut",
                        "ut",
                    [new ColorStop(787.9017,
                        new MapColor(116, 31, 163),
                            "est")],
                    new VisualVariableLegendOptions(true,
                            "officia minima non"),
                        "velit",
                        "et asperiores sunt")],
                new AuthoringInfo(ClassificationMethod.EqualInterval,
                    new AlgorithmicColorRamp(Algorithm.CieLab,
                        new MapColor(198, 178, 24),
                        new MapColor(241, 147, 205)),
                        712.2294,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(619.8024,
                                768.0269)],
                            "culpa",
                            "nihil",
                            "itaque"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(641.2003,
                                132.8477),
                        new AuthoringInfoField1ClassBreakInfos(117.9983,
                                254.6830),
                        new AuthoringInfoField1ClassBreakInfos(504.1057,
                                405.5089)],
                            "neque",
                            "pariatur",
                            "est"),
                        ["ex",
                            "est"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "dolore",
                        true,
                    LengthUnit.Yards,
                        376.6252,
                        145.7178,
                        731.5739,
                        581.7770));
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(1,
                    "est",
                    "vel",
                    "inventore");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("incidunt aut minus earum",
                DrawingTool.DownArrow,
                    "token",
                new Graphic(new Polyline([new MapPath([new MapPoint([580.5778,
                                665.1746,
                                261.1064]),
                            new MapPoint([277.4874,
                                499.6170,
                                829.6348,
                                352.3207])]),
                            new MapPath([new MapPoint([810.1452,
                                    662.9239,
                                    308.4055]),
                                new MapPoint([47.1022,
                                    520.4480,
                                    379.7685]),
                                new MapPoint([209.8022,
                                    166.3555,
                                    60.3087])])],
                        new SpatialReference(5,
                                "minima",
                                "quia",
                                "earum"),
                            true,
                            true),
                    new TextSymbol("et exercitationem ad",
                        new MapColor(155, 118, 250),
                        new MapColor(130, 210, 114),
                            new Dimension(735.9176),
                        new MapFont(new Dimension(464.0281),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            55.3606,
                        new MapColor(99, 236, 238),
                        new MapColor(121, 78, 60),
                            24.7092,
                        HorizontalAlignment.Left,
                            true,
                            720.4324,
                            new Dimension(745.6974),
                            true),
                    new PopupTemplate("ut quo dignissimos",
                            "eos",
                            ["qui",
                                "veniam",
                                "voluptatem"],
                        [new FieldInfo("createdAt",
                                "aut",
                                "quas",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("createdAt",
                                "inventore",
                                "sed",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Var)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "facilis",
                                    "est explicabo vero")),
                        new TextPopupContent("minus adipisci recusandae")],
                        [new ExpressionInfo("return $feature.Name;",
                                "category",
                                "beatae consequatur ea",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "name",
                                "vel dolorem rerum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "category",
                                "deserunt aut autem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "name",
                                "voluptas vero quaerat",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("cum provident accusamus",
                                "https://picsum.photos/640/480/?image=606",
                                "afd098ed-d9be-623b-750f-baa9b4e94f27",
                                () => { Console.WriteLine("perferendis"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "cum"),
                        new ActionToggle("aliquam dolore facilis",
                                "3aaa7ba7-6de0-df4c-209a-9ee8932c7a4e",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "fuga"),
                        new ActionToggle("vel porro et",
                                "c074e0b1-5dd3-b7c8-5693-8edf324346c9",
                                () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "iusto")]),
                        new AttributesDictionary(),
                        true,
                        "magnam",
                        "omnis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "voluptas",
                            1)),
                    new Thumbnail("est",
                        "quis",
                        143.1635,
                        73.2857)),
            new FeatureTemplate("modi itaque dolore iste",
                DrawingTool.None,
                    "status",
                new Graphic(new Polygon([new MapPath([new MapPoint([283.4310,
                                169.2684,
                                292.0462]),
                            new MapPoint([733.7876,
                                550.1404,
                                413.6132,
                                38.9388]),
                            new MapPoint([337.5073,
                                222.2641])])],
                        new SpatialReference(2,
                                "rerum",
                                "at",
                                "est"),
                        new Point(-162.9095,
                                -70.5567,
                                11.6337,
                                -29.5383,
                                485.4920,
                            new SpatialReference(9,
                                    "nostrum",
                                    "vel",
                                    "aliquid"),
                                true,
                                true,
                                374.6482),
                            true,
                            true,
                            true),
                    new TextSymbol("repellat ut aperiam",
                        new MapColor(103, 22, 211),
                        new MapColor(200, 187, 139),
                            new Dimension(553.3387),
                        new MapFont(new Dimension(673.4901),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            277.3869,
                        new MapColor(214, 33, 85),
                        new MapColor(28, 250, 206),
                            59.8053,
                        HorizontalAlignment.Left,
                            true,
                            59.4744,
                            new Dimension(308.1201),
                            true),
                    new PopupTemplate("nesciunt ut at",
                            "impedit",
                            ["fugit",
                                "aut",
                                "voluptatem"],
                        [new FieldInfo("status",
                                "optio",
                                "placeat",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("title",
                                "consectetur",
                                "nulla",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("id",
                                "velit",
                                "sint",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("email",
                                "vel",
                                "ipsam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new RelationshipPopupContent("tempora mollitia rem",
                                "dolores vel est iure molestiae",
                                8,
                                "facilis",
                            [new RelatedRecordsInfoFieldOrder("aut",
                                OrderBy.Desc)],
                                9),
                        new RelationshipPopupContent("alias ex quod",
                                "maiores facilis non at dolores",
                                8,
                                "iste",
                            [new RelatedRecordsInfoFieldOrder("eligendi",
                                OrderBy.Asc)],
                                2)],
                        [new ExpressionInfo("return $feature.Name;",
                                "group",
                                "accusamus id non",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("illum quos consectetur",
                                "f5e04202-8db7-2816-1019-119a4dba0455",
                                () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "quam"),
                        new ActionToggle("eos laudantium reiciendis",
                                "69f73470-ebe9-1101-9230-5178c4785328",
                                () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "rerum")]),
                        new AttributesDictionary(),
                        true,
                        "ipsa",
                        "unde",
                        new GraphicOrigin(Guid.NewGuid(),
                            "labore",
                            8)),
                    new Thumbnail("vero",
                        "deleniti",
                        105.3210,
                        135.7266)),
            new FeatureTemplate("aut ut cupiditate earum excepturi",
                DrawingTool.AutoCompletePolygon,
                    "id",
                new Graphic(new Polygon([new MapPath([new MapPoint([108.1671,
                                376.8461,
                                377.7549,
                                982.6600]),
                            new MapPoint([522.2013,
                                437.4257,
                                613.0272,
                                943.8251]),
                            new MapPoint([307.7738,
                                48.8053,
                                228.2190,
                                247.1121]),
                            new MapPoint([659.9202,
                                573.0406])])],
                        new SpatialReference(1,
                                "atque",
                                "quaerat",
                                "expedita"),
                        new Point(165.7758,
                                -56.7028,
                                -172.4517,
                                -81.9535,
                                961.5705,
                            new SpatialReference(8,
                                    "eum",
                                    "ut",
                                    "quod"),
                                true,
                                true,
                                211.3393),
                            true,
                            true,
                            true),
                    new TextSymbol("et deleniti corporis",
                        new MapColor(161, 208, 168),
                        new MapColor(153, 89, 158),
                            new Dimension(507.8729),
                        new MapFont(new Dimension(913.6651),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            212.7941,
                        new MapColor(64, 45, 69),
                        new MapColor(101, 121, 9),
                            20.6203,
                        HorizontalAlignment.Left,
                            true,
                            327.7160,
                            new Dimension(673.2986),
                            true),
                    new PopupTemplate("molestias molestiae asperiores",
                            "dolorem",
                            ["aut",
                                "accusantium",
                                "similique"],
                        [new FieldInfo("comment",
                                "magni",
                                "nam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "saepe",
                                    "ullam est ut"))],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "id",
                                "minus autem ea",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("numquam aperiam qui",
                                "e5d440bb-bdee-250e-ca99-f9d5606f2308",
                                () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "ipsam"),
                        new ActionButton("mollitia assumenda consequatur",
                                "https://picsum.photos/640/480/?image=986",
                                "a905fc70-7d3b-bf94-484f-cfb486e7f2bd",
                                () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "modi")]),
                        new AttributesDictionary(),
                        true,
                        "illo",
                        "omnis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "beatae",
                            2)),
                    new Thumbnail("neque",
                        "est",
                        203.1637,
                        263.9387)),
            new FeatureTemplate("corrupti temporibus voluptas nihil voluptas praesentium",
                DrawingTool.Point,
                    "token",
                new Graphic(new Polygon([new MapPath([new MapPoint([368.9615,
                                22.6911,
                                791.9142]),
                            new MapPoint([470.3518,
                                546.4546,
                                81.8944])]),
                            new MapPath([new MapPoint([313.3310,
                                    162.6893]),
                                new MapPoint([410.4105,
                                    396.7262,
                                    528.9100])])],
                        new SpatialReference(6,
                                "omnis",
                                "laboriosam",
                                "qui"),
                        new Point(-85.2735,
                                88.4420,
                                153.1431,
                                -9.1140,
                                701.1585,
                            new SpatialReference(9,
                                    "architecto",
                                    "est",
                                    "aut"),
                                true,
                                true,
                                736.4426),
                            true,
                            true,
                            true),
                    new TextSymbol("voluptatem deserunt voluptate",
                        new MapColor(251, 235, 238),
                        new MapColor(154, 114, 176),
                            new Dimension(540.1649),
                        new MapFont(new Dimension(242.3997),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            224.7095,
                        new MapColor(171, 86, 88),
                        new MapColor(238, 72, 9),
                            435.0358,
                        HorizontalAlignment.Left,
                            true,
                            382.3239,
                            new Dimension(107.6141),
                            true),
                    new PopupTemplate("qui culpa vel",
                            "doloribus",
                            ["in",
                                "rerum",
                                "omnis"],
                        [new FieldInfo("phone",
                                "sit",
                                "esse",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("comment",
                                "sunt",
                                "magnam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("phone",
                                "omnis",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new FieldsPopupContent([new FieldInfo("name",
                                    "velit",
                                    "sed",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("updatedAt",
                                    "totam",
                                    "esse",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("email",
                                    "cupiditate",
                                    "optio",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("category",
                                    "harum",
                                    "esse",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "sit quis praesentium culpa",
                                "nulla blanditiis cumque"),
                        new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "nemo",
                                    "beatae officiis temporibus"))],
                        [new ExpressionInfo("return $feature.Name;",
                                "createdAt",
                                "cumque rerum quod",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("officiis ut non",
                                "4a938fde-9327-cdea-354b-9893a4bc5cd8",
                                () => { Console.WriteLine("officiis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "delectus")]),
                        new AttributesDictionary(),
                        true,
                        "aut",
                        "impedit",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aspernatur",
                            9)),
                    new Thumbnail("eius",
                        "cum",
                        53.4267,
                        30.2926))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2008, 9, 21, 21, 50, 53),
                    new DateTime(2016, 8, 15, 10, 9, 45));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("est",
                    "qui",
                new TimeExtent(new DateTime(2010, 2, 2, 17, 41, 32),
                        new DateTime(2006, 10, 24, 2, 39, 15)),
                new TimeInterval(TemporalTime.Weeks,
                        522.0760),
                    [new DateTime(2010, 2, 2, 5, 49, 48),
                        new DateTime(2006, 6, 2, 20, 22, 30)],
                    "Pacific/Noumea",
                    "consectetur");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Years,
                    563.1673);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2023, 10, 13, 5, 40, 24),
                    new DateTime(2013, 7, 19, 6, 5, 56));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
