@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("perspiciatis")"
                        Title="@("ipsum beatae vitae")"
                        Opacity="@(0.5862)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.Difference)"
                        DefinitionExpression="@("expedita")"
                        DisplayField="@("qui")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("maiores",
                            42175093.0845))"
                        FullExtent="@(new Extent(-54.4790,
                                130.4339,
                                -77.1154,
                                8.9082,
                                834.2710,
                                682.4181,
                                283.9831,
                                455.9718,
                            new SpatialReference(5,
                                    "excepturi",
                                    "ut",
                                    "hic"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Multipoint)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(15563516.2668)"
                        MinScale="@(46945.9943)"
                        ObjectIdField="@("quas")"
                        OutFields="@(["aut",
                            "in",
                            "et",
                            "quaerat"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(695.1137)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(9,
                                "ut",
                                "voluptatum",
                                "aperiam"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(543.3238)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("molestiae")"
                            EndField="@("reiciendis")"
                            Stops="@([new DateTime(2014, 10, 14, 11, 52, 32),
                                new DateTime(2006, 1, 21, 2, 51, 18),
                                new DateTime(2020, 3, 24, 20, 44, 58)])"
                            TimeZone="@("America/Los_Angeles")"
                            TrackIdField="@("et")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Hours)"
                                Value="@(49.2540)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2006, 9, 19, 9, 1, 53))"
                                End="@(new DateTime(2011, 3, 9, 18, 8, 16))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2016, 9, 18, 3, 56, 44))"
                            End="@(new DateTime(2004, 9, 10, 13, 46, 17))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("ut voluptatem nemo repellendus enim")"
                            DrawingTool="@(DrawingTool.DownArrow)"
                            Name="@("updatedAt")"
                            Prototype="@(new Graphic(new Polyline([new MapPath([new MapPoint([379.2356,
                                            450.4288,
                                            243.3941]),
                                        new MapPoint([892.3229,
                                            501.1173,
                                            336.4960])]),
                                        new MapPath([new MapPoint([347.8145,
                                                720.0209]),
                                            new MapPoint([608.9098,
                                                607.3818,
                                                751.9974]),
                                            new MapPoint([758.6197,
                                                434.1871,
                                                115.4605,
                                                554.9110])]),
                                        new MapPath([new MapPoint([585.9857,
                                                21.8318,
                                                142.0803]),
                                            new MapPoint([271.5169,
                                                97.0203,
                                                568.3671,
                                                583.4618])]),
                                        new MapPath([new MapPoint([16.2083,
                                                840.0997]),
                                            new MapPoint([916.0561,
                                                829.4492,
                                                370.0259]),
                                            new MapPoint([495.3030,
                                                208.2409,
                                                370.3766,
                                                551.7164]),
                                            new MapPoint([246.5625,
                                                993.1511])])],
                                    new SpatialReference(9,
                                            "aspernatur",
                                            "totam",
                                            "veritatis"),
                                        true,
                                        true),
                                new TextSymbol("ea ut quo",
                                    new MapColor(69, 143, 195),
                                    new MapColor(201, 19, 77),
                                        new Dimension(966.0110),
                                    new MapFont(new Dimension(781.8361),
                                            "Verdana",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        352.4034,
                                    new MapColor(89, 89, 177),
                                    new MapColor(25, 204, 188),
                                        378.5169,
                                    HorizontalAlignment.Center,
                                        true,
                                        342.4165,
                                        new Dimension(716.0476),
                                        true),
                                new PopupTemplate("ad sit ipsam",
                                        "enim",
                                        ["labore",
                                            "qui",
                                            "dolorum",
                                            "veniam"],
                                    [new FieldInfo("status",
                                            "qui",
                                            "quia",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.ShortDateLe),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("phone",
                                            "neque",
                                            "repellendus",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                    [new RelationshipPopupContent("quod at neque",
                                            "est occaecati voluptatum asperiores",
                                            3,
                                            "veritatis",
                                        [new RelatedRecordsInfoFieldOrder("eligendi",
                                            OrderBy.Asc)],
                                            6)],
                                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "phone",
                                            "doloremque architecto labore",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "email",
                                            "exercitationem rem enim",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "status",
                                            "sit ullam dolor",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("ut est eligendi",
                                            "https://picsum.photos/640/480/?image=975",
                                            "6f12eccc-45ac-ed87-2833-7d4bef6fffd4",
                                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                            "category",
                                            true,
                                            true,
                                            true,
                                            "hic"),
                                    new ActionToggle("ad omnis distinctio",
                                            "c843b81b-d9f6-9d27-eeaf-6e1922f7352b",
                                            () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "token",
                                            "eveniet"),
                                    new ActionToggle("repellat sunt expedita",
                                            "c0df1db0-32f9-0160-6066-a26427c06828",
                                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "password",
                                            "quam")]),
                                    new AttributesDictionary(),
                                    true,
                                    "quam",
                                    "voluptatum",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "eos",
                                        8)))"
                            Thumbnail="@(new Thumbnail("reiciendis",
                                "voluptatem",
                                81.3971,
                                123.3102))">
                        </FeatureTemplate>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(163, 197, 254),
                                    new MapColor(126, 204, 115)),
                                    157.6048,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(513.3759,
                                            942.2722),
                                    new AuthoringInfoField1ClassBreakInfos(300.4188,
                                            196.6677)],
                                        "eum",
                                        "iure",
                                        "ut"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(626.9800,
                                            64.3153)],
                                        "et",
                                        "nobis",
                                        "voluptatem"),
                                    ["rerum",
                                        "dolorem",
                                        "facere"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "veniam",
                                    true,
                                LengthUnit.Yards,
                                    237.2808,
                                    932.8746,
                                    960.0499,
                                    820.3268))">
                        </SimpleRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("aliquam porro accusamus")"
                            StringContent="@("cupiditate")"
                            OutFields="@(["quidem",
                                "libero",
                                "et"])"
                            FieldInfos="@([new FieldInfo("password",
                                    "sed",
                                    "dolorem",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Sum)])"
                            Content="@([new TextPopupContent("quibusdam fugit reprehenderit"),
                            new FieldsPopupContent([new FieldInfo("token",
                                        "excepturi",
                                        "quibusdam",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.DayShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("id",
                                        "qui",
                                        "tempora",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("name",
                                        "qui",
                                        "qui",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateLe),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "sit minima neque ullam saepe ut exercitationem",
                                    "iure id aspernatur"),
                            new AttachmentsPopupContent("eos animi totam",
                                    "consequuntur quo ut et est",
                                    AttachmentsPopupContentDisplayType.Auto),
                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "nulla",
                                        "ipsam et est"))])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "comment",
                                    "omnis minima et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "password",
                                    "rerum molestiae eaque",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "status",
                                    "ut ipsa iure",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("atque explicabo qui",
                                    "33bab6a9-2c70-23c4-9596-af2ebc880eed",
                                    () => { Console.WriteLine("facere"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "status",
                                    "ut"),
                            new ActionToggle("atque accusamus officiis",
                                    "52334e25-2f06-8910-f98e-4dfc5abfb6c4",
                                    () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "id",
                                    "officiis")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("pariatur")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("odio")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowStart)"
                            LabelExpression="@("voluptatum")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(46846774.3520)"
                            MinScale="@(36903.1530)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(908.2972))"
                            Symbol="@(new TextSymbol("laboriosam amet et",
                                new MapColor(196, 113, 208),
                                new MapColor(188, 56, 144),
                                    new Dimension(109.3678),
                                new MapFont(new Dimension(563.6611),
                                        "Times New Roman",
                                    MapFontStyle.Italic,
                                    FontWeight.Lighter,
                                    TextDecoration.LineThrough),
                                    533.4215,
                                new MapColor(240, 123, 188),
                                new MapColor(248, 110, 33),
                                    315.1880,
                                HorizontalAlignment.Left,
                                    true,
                                    238.3760,
                                    new Dimension(929.6485),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("1 = 1")">
                        </Label>
                        <Field 
                            Name="@("name")"
                            Alias="@("saepe")"
                            Description="@("quia vel illum velit ipsum quia")"
                            Length="@(9)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "rerum" })"
                            ValueType="@(FieldValueType.Measurement)"
                            Domain="@(new RangeDomain("recusandae",
                                    "dolorum",
                                    "name"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("ut",
                                26979626.5531),
                                new Effect("sit",
                                    43686583.1394)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(425.2554,
                                new Point(-74.1158,
                                        -38.6565,
                                        155.9985,
                                        -32.9377,
                                        763.0984,
                                    new SpatialReference(9,
                                            "fugiat",
                                            "nemo",
                                            "qui"),
                                        true,
                                        true,
                                        913.9655),
                                    [5,
                                        7,
                                        2],
                                SpatialRelationship.Relation,
                                new TimeExtent(new DateTime(2014, 9, 5, 5, 45, 8),
                                        new DateTime(2001, 6, 2, 4, 7, 19)),
                                    QueryUnits.Feet,
                                    "Name = 'John Doe'"))"
                            IncludedEffect="@([new Effect("eum",
                                30083950.9995)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "aut quis exercitationem"))"
                            Mode="@(ElevationInfoMode.RelativeToGround)"
                            Offset="@(548.7074)"
                            Unit="@(ElevationUnit.Feet)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polyline([new MapPath([new MapPoint([133.8162,
                                543.1881,
                                553.1715,
                                863.0079]),
                            new MapPoint([230.3048,
                                182.7889,
                                116.7134,
                                55.4990])]),
                            new MapPath([new MapPoint([893.9149,
                                    465.4192,
                                    937.3601]),
                                new MapPoint([884.3828,
                                    130.0421,
                                    482.6879]),
                                new MapPoint([641.1762,
                                    920.0168,
                                    856.9858])]),
                            new MapPath([new MapPoint([678.8156,
                                    13.7168,
                                    98.3272]),
                                new MapPoint([944.8050,
                                    748.2758,
                                    436.9923,
                                    817.6363]),
                                new MapPoint([697.2919,
                                    320.9328,
                                    75.5116,
                                    403.7356]),
                                new MapPoint([225.2423,
                                    610.9538])])],
                        new SpatialReference(7,
                                "recusandae",
                                "nemo",
                                "quam"),
                            true,
                            true),
                    new TextSymbol("voluptatem odit animi",
                        new MapColor(4, 126, 247),
                        new MapColor(248, 2, 11),
                            new Dimension(255.5603),
                        new MapFont(new Dimension(97.2966),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            585.9339,
                        new MapColor(163, 19, 185),
                        new MapColor(82, 112, 168),
                            955.6842,
                        HorizontalAlignment.Right,
                            true,
                            86.4910,
                            new Dimension(312.2932),
                            true),
                    new PopupTemplate("ea esse aut",
                            "dolore",
                            ["est",
                                "aut",
                                "est"],
                        [new FieldInfo("avatar",
                                "unde",
                                "odio",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("name",
                                "vel",
                                "dicta",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("title",
                                "quasi",
                                "voluptatem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("password",
                                "provident",
                                "itaque",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("non reiciendis quo",
                                "consectetur sit quae est ratione numquam",
                                3,
                                "fuga",
                            [new RelatedRecordsInfoFieldOrder("repellat",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("commodi",
                                OrderBy.Desc)],
                                9),
                        new TextPopupContent("veniam et exercitationem")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "category",
                                "ut laborum atque",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "password",
                                "accusantium molestias dolorem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "title",
                                "quis aperiam quo",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("fuga ipsam occaecati",
                                "42012b66-f6c6-dd61-4f63-99ee0263d628",
                                () => { Console.WriteLine("ratione"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "iste"),
                        new ActionButton("aut rem error",
                                "https://picsum.photos/640/480/?image=657",
                                "dd036669-43b7-4cff-62f8-85c5f0a9a07d",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "et"),
                        new ActionButton("cum ab velit",
                                "https://picsum.photos/640/480/?image=734",
                                "1a3bfaa0-aebb-3e2c-2b96-ae313e5f8ae1",
                                () => { Console.WriteLine("asperiores"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "iste")]),
                        new AttributesDictionary(),
                        true,
                        "dolor",
                        "repellat",
                        new GraphicOrigin(Guid.NewGuid(),
                            "in",
                            1)),
                new Graphic(new Point(-92.5954,
                            28.7966,
                            -26.0342,
                            72.6687,
                            713.0875,
                        new SpatialReference(5,
                                "rem",
                                "totam",
                                "aut"),
                            true,
                            true,
                            471.2644),
                    new TextSymbol("ut facere aliquam",
                        new MapColor(50, 30, 107),
                        new MapColor(2, 190, 183),
                            new Dimension(512.4513),
                        new MapFont(new Dimension(645.1751),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            620.3336,
                        new MapColor(155, 171, 77),
                        new MapColor(96, 36, 35),
                            206.0330,
                        HorizontalAlignment.Center,
                            true,
                            282.0818,
                            new Dimension(539.0210),
                            true),
                    new PopupTemplate("vel voluptas placeat",
                            "qui",
                            ["est",
                                "praesentium",
                                "eos"],
                        [new FieldInfo("category",
                                "labore",
                                "repellendus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("token",
                                "exercitationem",
                                "rem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("group",
                                "aut",
                                "consequuntur",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("phone",
                                "aut",
                                "est",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new TextPopupContent("saepe molestiae quaerat"),
                        new FieldsPopupContent([new FieldInfo("phone",
                                    "corrupti",
                                    "id",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("phone",
                                    "architecto",
                                    "neque",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "molestiae est provident rem",
                                "eaque odio voluptas"),
                        new FieldsPopupContent([new FieldInfo("createdAt",
                                    "dolor",
                                    "accusantium",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("group",
                                    "id",
                                    "reprehenderit",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "repellat eligendi quasi ex laboriosam et aspernatur",
                                "libero autem assumenda"),
                        new MediaPopupContent("doloremque optio id",
                                "asperiores consequuntur nobis culpa reiciendis ipsum",
                            [new LineChartMediaInfo("reprehenderit deserunt eos",
                                    "alias",
                                    "nobis qui blanditiis",
                                new ChartMediaInfoValue(["eius",
                                        "corrupti",
                                        "et"],
                                        "vel",
                                        "placeat",
                                    [new ChartMediaInfoValueSeries("title",
                                            "dolorum",
                                            898.8311)],
                                    [new MapColor(169, 221, 104),
                                    new MapColor(99, 53, 53),
                                    new MapColor(232, 142, 205)])),
                            new PieChartMediaInfo("modi ut odit",
                                    "quae",
                                    "in qui laudantium",
                                new ChartMediaInfoValue(["nesciunt",
                                        "officiis",
                                        "natus"],
                                        "dolore",
                                        "ut",
                                    [new ChartMediaInfoValueSeries("title",
                                            "quae",
                                            792.0949),
                                    new ChartMediaInfoValueSeries("name",
                                            "provident",
                                            924.9741),
                                    new ChartMediaInfoValueSeries("category",
                                            "aliquid",
                                            352.6886),
                                    new ChartMediaInfoValueSeries("status",
                                            "aut",
                                            165.9533)],
                                    [new MapColor(164, 207, 17)]))],
                                4)],
                        [new ExpressionInfo("return $feature.Name;",
                                "avatar",
                                "consequatur soluta iusto",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "avatar",
                                "in dolorem sit",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "token",
                                "ea dolorem dolorem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "group",
                                "minima repellendus sed",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("eos sequi quaerat",
                                "https://picsum.photos/640/480/?image=958",
                                "31449df1-06b2-4d83-9bb0-f87f7a5c33f8",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "praesentium"),
                        new ActionButton("corrupti et laudantium",
                                "https://picsum.photos/640/480/?image=652",
                                "15c8dfef-77dd-d3b9-7b4d-5a9b7bf86749",
                                () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "minus"),
                        new ActionToggle("voluptatem qui inventore",
                                "192000c1-ff58-292f-9b39-9a8bf61f1be0",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "quo"),
                        new ActionToggle("molestiae fuga sed",
                                "acb5713e-3b5c-c9bd-9faf-58ec3857e4c6",
                                () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "eum")]),
                        new AttributesDictionary(),
                        true,
                        "perspiciatis",
                        "natus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "doloribus",
                            5)),
                new Graphic(new Polyline([new MapPath([new MapPoint([526.5627,
                                806.2649,
                                222.2037,
                                850.5043]),
                            new MapPoint([868.2572,
                                548.7833]),
                            new MapPoint([313.1345,
                                931.7608,
                                743.0096]),
                            new MapPoint([312.3030,
                                406.7941])]),
                            new MapPath([new MapPoint([221.7565,
                                    372.9397]),
                                new MapPoint([522.9593,
                                    198.6775,
                                    238.4808]),
                                new MapPoint([528.3150,
                                    880.3083,
                                    847.3592,
                                    749.3740])]),
                            new MapPath([new MapPoint([827.6640,
                                    6.0393,
                                    828.5435,
                                    107.9620]),
                                new MapPoint([312.1535,
                                    574.1934,
                                    800.5653,
                                    620.2735]),
                                new MapPoint([904.0572,
                                    232.7521]),
                                new MapPoint([206.7038,
                                    423.4568,
                                    629.9589,
                                    63.3772])])],
                        new SpatialReference(8,
                                "aut",
                                "iste",
                                "at"),
                            true,
                            true),
                    new TextSymbol("numquam voluptatem eveniet",
                        new MapColor(14, 198, 88),
                        new MapColor(42, 77, 49),
                            new Dimension(961.2832),
                        new MapFont(new Dimension(88.9512),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            984.5186,
                        new MapColor(30, 246, 185),
                        new MapColor(31, 132, 20),
                            487.2798,
                        HorizontalAlignment.Left,
                            true,
                            734.8968,
                            new Dimension(676.7030),
                            true),
                    new PopupTemplate("nihil asperiores numquam",
                            "dolore",
                            ["ratione",
                                "et",
                                "quidem"],
                        [new FieldInfo("phone",
                                "omnis",
                                "totam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new MediaPopupContent("qui recusandae voluptas",
                                "autem nostrum et et voluptas quidem",
                            [new LineChartMediaInfo("aliquid incidunt consequatur",
                                    "non",
                                    "rem hic doloremque",
                                new ChartMediaInfoValue(["libero",
                                        "qui"],
                                        "itaque",
                                        "animi",
                                    [new ChartMediaInfoValueSeries("id",
                                            "quaerat",
                                            731.7935)],
                                    [new MapColor(158, 199, 44),
                                    new MapColor(121, 191, 38),
                                    new MapColor(133, 78, 152)])),
                            new ImageMediaInfo("hic distinctio et",
                                    "voluptatem",
                                    "pariatur esse omnis",
                                new ImageMediaInfoValue("http://korbin.com",
                                        "http://patrick.net"),
                                    45.9993)],
                                7),
                        new TextPopupContent("harum labore iste"),
                        new FieldsPopupContent([new FieldInfo("name",
                                    "perspiciatis",
                                    "ut",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("password",
                                    "cumque",
                                    "nisi",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("updatedAt",
                                    "sit",
                                    "est",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("password",
                                    "ut",
                                    "aliquid",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "aut consectetur odit quis",
                                "nihil illo at"),
                        new TextPopupContent("minima eum numquam")],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "phone",
                                "tempora voluptas quas",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "group",
                                "nobis inventore et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("provident alias adipisci",
                                "https://picsum.photos/640/480/?image=681",
                                "7f35bdd0-0583-ae5b-bcc9-211d14ea86c6",
                                () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "libero"),
                        new ActionButton("unde nostrum eveniet",
                                "https://picsum.photos/640/480/?image=680",
                                "19db399f-c1d4-75bc-5e94-7873ed0f73f4",
                                () => { Console.WriteLine("quas"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "rerum"),
                        new ActionButton("enim dolores quasi",
                                "https://picsum.photos/640/480/?image=568",
                                "ac91d6e3-c71a-53fe-9977-588c9b37208f",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "quod"),
                        new ActionButton("odio sed ratione",
                                "https://picsum.photos/640/480/?image=436",
                                "2d7472d9-53d4-8873-c687-d953ccbd6b41",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "aut")]),
                        new AttributesDictionary(),
                        true,
                        "laboriosam",
                        "facilis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "omnis",
                            2))],
                [new Graphic(new Polyline([new MapPath([new MapPoint([659.9149,
                                198.1495,
                                308.5664]),
                            new MapPoint([203.7140,
                                167.7521,
                                533.5299])]),
                            new MapPath([new MapPoint([947.9743,
                                    537.2895,
                                    784.4957]),
                                new MapPoint([630.8052,
                                    221.8966,
                                    159.6975,
                                    56.2406])]),
                            new MapPath([new MapPoint([865.3724,
                                    713.8999,
                                    457.6233,
                                    474.3806]),
                                new MapPoint([400.0480,
                                    410.5844,
                                    427.6579]),
                                new MapPoint([224.5638,
                                    996.7358]),
                                new MapPoint([999.4996,
                                    193.1077,
                                    163.9252])]),
                            new MapPath([new MapPoint([313.5120,
                                    453.0976,
                                    811.2671]),
                                new MapPoint([615.6912,
                                    889.1609,
                                    668.1986])])],
                        new SpatialReference(6,
                                "magni",
                                "necessitatibus",
                                "fugit"),
                            true,
                            true),
                    new TextSymbol("aut voluptas magnam",
                        new MapColor(193, 148, 171),
                        new MapColor(214, 161, 44),
                            new Dimension(528.0913),
                        new MapFont(new Dimension(883.8605),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            814.7550,
                        new MapColor(41, 194, 62),
                        new MapColor(206, 35, 178),
                            329.6859,
                        HorizontalAlignment.Center,
                            true,
                            621.4471,
                            new Dimension(376.9924),
                            true),
                    new PopupTemplate("et enim iusto",
                            "aspernatur",
                            ["occaecati",
                                "modi"],
                        [new FieldInfo("category",
                                "blanditiis",
                                "impedit",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("updatedAt",
                                "autem",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new FieldsPopupContent([new FieldInfo("comment",
                                    "non",
                                    "qui",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("status",
                                    "mollitia",
                                    "sed",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("token",
                                    "quae",
                                    "consequatur",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("comment",
                                    "sequi",
                                    "ipsam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "aut numquam possimus magnam velit et",
                                "ipsa et voluptatem"),
                        new FieldsPopupContent([new FieldInfo("createdAt",
                                    "quia",
                                    "dignissimos",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("name",
                                    "alias",
                                    "neque",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("category",
                                    "error",
                                    "quibusdam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("email",
                                    "sit",
                                    "dolore",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "dignissimos illum labore minima accusamus quidem",
                                "velit tenetur blanditiis")],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "status",
                                "sed debitis qui",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "status",
                                "minima occaecati non",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "password",
                                "ab minus id",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "createdAt",
                                "porro aliquid ut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("a aspernatur nihil",
                                "fd7082e9-0b16-d2a6-c090-88aeab7cdfeb",
                                () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "laborum"),
                        new ActionToggle("id dolor ipsa",
                                "220b8e89-d62d-1126-c2ba-4493e8d4384e",
                                () => { Console.WriteLine("ipsum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "voluptatibus"),
                        new ActionButton("quos et nisi",
                                "https://picsum.photos/640/480/?image=241",
                                "55bc3f4f-5745-bc42-6afd-12871a017195",
                                () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "debitis"),
                        new ActionToggle("dolores optio quasi",
                                "559042ad-2341-88ea-c3de-d7803e6d687b",
                                () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "explicabo")]),
                        new AttributesDictionary(),
                        true,
                        "mollitia",
                        "numquam",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sed",
                            4)),
                new Graphic(new Polyline([new MapPath([new MapPoint([233.5650,
                                28.2849]),
                            new MapPoint([737.9361,
                                680.0286,
                                524.7609,
                                958.3295]),
                            new MapPoint([645.0556,
                                802.1091])]),
                            new MapPath([new MapPoint([649.5107,
                                    400.6708,
                                    132.5171,
                                    417.5069]),
                                new MapPoint([215.3017,
                                    661.8899]),
                                new MapPoint([930.3571,
                                    675.5870,
                                    551.9567,
                                    877.9785]),
                                new MapPoint([831.6460,
                                    553.4159,
                                    372.0153,
                                    921.9411])]),
                            new MapPath([new MapPoint([548.1723,
                                    10.5796,
                                    22.0664]),
                                new MapPoint([108.3200,
                                    110.7085]),
                                new MapPoint([190.8830,
                                    198.1834,
                                    65.9152,
                                    173.6181])])],
                        new SpatialReference(4,
                                "perferendis",
                                "omnis",
                                "quis"),
                            true,
                            true),
                    new TextSymbol("tempore dolore eligendi",
                        new MapColor(21, 14, 202),
                        new MapColor(18, 9, 139),
                            new Dimension(558.0313),
                        new MapFont(new Dimension(785.2564),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            630.9798,
                        new MapColor(98, 148, 73),
                        new MapColor(224, 56, 79),
                            57.8059,
                        HorizontalAlignment.Right,
                            true,
                            126.4758,
                            new Dimension(842.3803),
                            true),
                    new PopupTemplate("eaque eos doloremque",
                            "nam",
                            ["dolor",
                                "et"],
                        [new FieldInfo("createdAt",
                                "aut",
                                "est",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("title",
                                "quo",
                                "eligendi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "ipsa",
                                "quae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("password",
                                "vero",
                                "officiis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new FieldsPopupContent([new FieldInfo("group",
                                    "voluptas",
                                    "dolores",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("createdAt",
                                    "et",
                                    "deserunt",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("phone",
                                    "consequatur",
                                    "saepe",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("createdAt",
                                    "exercitationem",
                                    "veniam",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "exercitationem dolores nam voluptatem",
                                "quia tenetur recusandae"),
                        new FieldsPopupContent([new FieldInfo("updatedAt",
                                    "qui",
                                    "et",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("avatar",
                                    "mollitia",
                                    "ducimus",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("token",
                                    "illum",
                                    "rerum",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "qui id voluptate ut vel",
                                "molestiae occaecati voluptatem"),
                        new MediaPopupContent("itaque alias quia",
                                "nihil eaque quas eius",
                            [new BarChartMediaInfo("voluptatem mollitia aut",
                                    "minus",
                                    "qui commodi sunt",
                                new ChartMediaInfoValue(["nemo",
                                        "et"],
                                        "provident",
                                        "earum",
                                    [new ChartMediaInfoValueSeries("token",
                                            "consequatur",
                                            665.8876),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "eum",
                                            862.5154),
                                    new ChartMediaInfoValueSeries("title",
                                            "neque",
                                            416.0237),
                                    new ChartMediaInfoValueSeries("id",
                                            "occaecati",
                                            687.8049)],
                                    [new MapColor(174, 166, 194),
                                    new MapColor(167, 108, 151),
                                    new MapColor(67, 135, 222),
                                    new MapColor(190, 197, 212)]))],
                                9)],
                        [new ExpressionInfo("return Date();",
                                "category",
                                "corporis maiores laborum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "phone",
                                "libero aut voluptatem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "updatedAt",
                                "officiis sit quam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "password",
                                "ipsum eaque adipisci",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("repellendus dolor sapiente",
                                "44092b17-3531-3bc6-6282-c95d3b6509e0",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "debitis"),
                        new ActionButton("libero rerum autem",
                                "https://picsum.photos/640/480/?image=348",
                                "2794b358-47a9-da45-0538-f38f7a639c2d",
                                () => { Console.WriteLine("facere"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "perferendis"),
                        new ActionToggle("vel tenetur sed",
                                "eb5d2be9-bc84-fda1-9e4c-dd1fa8e1f2e4",
                                () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "explicabo")]),
                        new AttributesDictionary(),
                        true,
                        "vel",
                        "omnis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "error",
                            7))],
                    ["quo",
                        "voluptatem"],
                [new Graphic(new Polyline([new MapPath([new MapPoint([2.4814,
                                893.3555,
                                906.1256,
                                215.8178]),
                            new MapPoint([231.2573,
                                178.7224,
                                503.4489,
                                325.4316])]),
                            new MapPath([new MapPoint([266.5355,
                                    579.4472,
                                    944.4467,
                                    375.1373]),
                                new MapPoint([939.4565,
                                    621.6524,
                                    668.4184,
                                    165.3171]),
                                new MapPoint([493.6399,
                                    974.4130,
                                    16.6705,
                                    44.2070])])],
                        new SpatialReference(9,
                                "nulla",
                                "commodi",
                                "ut"),
                            true,
                            true),
                    new TextSymbol("est nam velit",
                        new MapColor(61, 96, 201),
                        new MapColor(232, 23, 4),
                            new Dimension(89.5312),
                        new MapFont(new Dimension(624.2344),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            778.1010,
                        new MapColor(121, 107, 239),
                        new MapColor(181, 48, 220),
                            751.1640,
                        HorizontalAlignment.Right,
                            true,
                            490.7114,
                            new Dimension(27.6200),
                            true),
                    new PopupTemplate("asperiores adipisci sapiente",
                            "suscipit",
                            ["suscipit",
                                "atque",
                                "est",
                                "sed"],
                        [new FieldInfo("category",
                                "vero",
                                "dolorum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("group",
                                "assumenda",
                                "labore",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("createdAt",
                                "cumque",
                                "vel",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("updatedAt",
                                "sint",
                                "reprehenderit",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new TextPopupContent("velit maxime ipsa"),
                        new RelationshipPopupContent("aut aut accusantium",
                                "et iusto totam voluptatem aliquam",
                                3,
                                "ad",
                            [new RelatedRecordsInfoFieldOrder("ea",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("dolor",
                                OrderBy.Asc)],
                                8),
                        new MediaPopupContent("et vel voluptatem",
                                "necessitatibus delectus est nihil enim",
                            [new BarChartMediaInfo("sunt omnis veniam",
                                    "omnis",
                                    "dignissimos inventore eum",
                                new ChartMediaInfoValue(["ut",
                                        "quaerat"],
                                        "aut",
                                        "ut",
                                    [new ChartMediaInfoValueSeries("status",
                                            "exercitationem",
                                            169.1178),
                                    new ChartMediaInfoValueSeries("password",
                                            "eum",
                                            2.3969),
                                    new ChartMediaInfoValueSeries("comment",
                                            "aliquam",
                                            772.9789),
                                    new ChartMediaInfoValueSeries("name",
                                            "occaecati",
                                            335.6933)],
                                    [new MapColor(136, 93, 16),
                                    new MapColor(170, 80, 199)])),
                            new PieChartMediaInfo("rerum et ex",
                                    "a",
                                    "sit inventore sunt",
                                new ChartMediaInfoValue(["ea",
                                        "ad",
                                        "hic",
                                        "dolore"],
                                        "quia",
                                        "non",
                                    [new ChartMediaInfoValueSeries("phone",
                                            "velit",
                                            593.1224),
                                    new ChartMediaInfoValueSeries("email",
                                            "et",
                                            288.8020)],
                                    [new MapColor(90, 206, 83),
                                    new MapColor(165, 237, 68),
                                    new MapColor(48, 57, 208),
                                    new MapColor(193, 172, 61)])),
                            new LineChartMediaInfo("veritatis laboriosam eum",
                                    "aut",
                                    "ducimus eveniet cumque",
                                new ChartMediaInfoValue(["fuga",
                                        "nobis",
                                        "magnam"],
                                        "libero",
                                        "quos",
                                    [new ChartMediaInfoValueSeries("id",
                                            "et",
                                            991.7571),
                                    new ChartMediaInfoValueSeries("comment",
                                            "tenetur",
                                            171.5901),
                                    new ChartMediaInfoValueSeries("title",
                                            "vitae",
                                            193.1891)],
                                    [new MapColor(120, 41, 166),
                                    new MapColor(39, 200, 171),
                                    new MapColor(153, 96, 53),
                                    new MapColor(93, 59, 99)]))],
                                3)],
                        [new ExpressionInfo("return $feature.Name;",
                                "name",
                                "harum omnis laudantium",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "avatar",
                                "nemo ipsa quo",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "name",
                                "quia autem dolore",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "title",
                                "impedit quas veritatis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("amet quia quis",
                                "50096583-c0a3-068b-7421-1ec90a27401b",
                                () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "qui"),
                        new ActionButton("impedit magnam sed",
                                "https://picsum.photos/640/480/?image=756",
                                "9cb68eaf-6c96-2210-2310-0e8c27068370",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "rerum"),
                        new ActionButton("totam porro doloribus",
                                "https://picsum.photos/640/480/?image=850",
                                "5204ac36-d762-3a8a-e3b9-9ddd379a3aa9",
                                () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "adipisci"),
                        new ActionButton("aliquid rerum officia",
                                "https://picsum.photos/640/480/?image=1012",
                                "e04b975e-be13-f272-733e-46dee2b28b27",
                                () => { Console.WriteLine("quasi"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "at")]),
                        new AttributesDictionary(),
                        true,
                        "iure",
                        "quia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quas",
                            7)),
                new Graphic(new Polyline([new MapPath([new MapPoint([364.1193,
                                167.0080,
                                285.2171,
                                280.6025]),
                            new MapPoint([922.6662,
                                948.1311,
                                264.2716]),
                            new MapPoint([615.9967,
                                729.5562,
                                619.2346,
                                878.1419]),
                            new MapPoint([661.4940,
                                209.2008])]),
                            new MapPath([new MapPoint([610.4893,
                                    99.9078,
                                    864.3408,
                                    877.1153]),
                                new MapPoint([62.6138,
                                    42.9470,
                                    191.4260]),
                                new MapPoint([539.6306,
                                    330.0710])])],
                        new SpatialReference(6,
                                "omnis",
                                "id",
                                "praesentium"),
                            true,
                            true),
                    new TextSymbol("earum amet nostrum",
                        new MapColor(11, 93, 34),
                        new MapColor(183, 241, 56),
                            new Dimension(505.3366),
                        new MapFont(new Dimension(623.4906),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            662.6856,
                        new MapColor(58, 131, 59),
                        new MapColor(249, 218, 209),
                            872.6988,
                        HorizontalAlignment.Right,
                            true,
                            627.1786,
                            new Dimension(917.0878),
                            true),
                    new PopupTemplate("maiores dolorem et",
                            "nihil",
                            ["nisi",
                                "provident"],
                        [new FieldInfo("avatar",
                                "nulla",
                                "ea",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("category",
                                "corrupti",
                                "officiis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("createdAt",
                                "dolore",
                                "provident",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new TextPopupContent("impedit iusto eos"),
                        new AttachmentsPopupContent("qui dolorem eos",
                                "aut enim ipsum provident non",
                                AttachmentsPopupContentDisplayType.Auto),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "est",
                                    "explicabo facilis reiciendis"))],
                        [new ExpressionInfo("return $feature.Name;",
                                "phone",
                                "facere perferendis dicta",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("est rerum non",
                                "6512df03-4a52-009f-952f-c43269ce9401",
                                () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "fuga"),
                        new ActionButton("inventore maxime ex",
                                "https://picsum.photos/640/480/?image=185",
                                "f8fd32e2-72e0-4ebc-6e4d-1b62d84ebd1d",
                                () => { Console.WriteLine("iure"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "quia"),
                        new ActionToggle("ex aut dolor",
                                "06182a28-cc60-946d-7fee-0d999fa28520",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "libero")]),
                        new AttributesDictionary(),
                        true,
                        "quasi",
                        "itaque",
                        new GraphicOrigin(Guid.NewGuid(),
                            "rerum",
                            5)),
                new Graphic(new Point(98.6685,
                            86.9264,
                            -22.2872,
                            -56.4571,
                            465.0451,
                        new SpatialReference(6,
                                "id",
                                "omnis",
                                "doloremque"),
                            true,
                            true,
                            775.7190),
                    new TextSymbol("officia facere porro",
                        new MapColor(199, 28, 76),
                        new MapColor(92, 242, 152),
                            new Dimension(386.1722),
                        new MapFont(new Dimension(869.5427),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            869.8453,
                        new MapColor(139, 93, 247),
                        new MapColor(66, 179, 125),
                            603.1118,
                        HorizontalAlignment.Center,
                            true,
                            517.4273,
                            new Dimension(264.5016),
                            true),
                    new PopupTemplate("molestiae qui totam",
                            "molestiae",
                            ["doloremque",
                                "reprehenderit",
                                "tenetur"],
                        [new FieldInfo("password",
                                "beatae",
                                "delectus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("category",
                                "et",
                                "voluptatem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new TextPopupContent("adipisci odit rerum")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "password",
                                "consectetur sint nostrum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "createdAt",
                                "vitae quod nihil",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("nisi corrupti natus",
                                "https://picsum.photos/640/480/?image=114",
                                "fe4ef8af-42a0-04f2-6898-ef21c9edfa34",
                                () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "id"),
                        new ActionToggle("alias aut eum",
                                "3923a00e-89f8-8454-ffb6-ff7e068dce5f",
                                () => { Console.WriteLine("nemo"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "non"),
                        new ActionButton("mollitia autem omnis",
                                "https://picsum.photos/640/480/?image=848",
                                "e62b29da-c243-c0b2-27cc-3171350990bf",
                                () => { Console.WriteLine("nemo"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "debitis")]),
                        new AttributesDictionary(),
                        true,
                        "similique",
                        "qui",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sint",
                            1))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["repudiandae",
                    "rerum",
                    "corrupti"],
                    ["updatedAt",
                        "password",
                        "group",
                        "category"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("token");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("category",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polyline([new MapPath([new MapPoint([332.7958,
                                378.3899]),
                            new MapPoint([375.3410,
                                865.9301]),
                            new MapPoint([810.2176,
                                115.3892,
                                584.4376,
                                940.5082])]),
                            new MapPath([new MapPoint([254.2938,
                                    991.9738]),
                                new MapPoint([663.5185,
                                    991.1654])]),
                            new MapPath([new MapPoint([470.5469,
                                    327.7253,
                                    427.3458,
                                    972.8279]),
                                new MapPoint([498.6063,
                                    727.3796,
                                    610.0646]),
                                new MapPoint([985.0897,
                                    632.9348])]),
                            new MapPath([new MapPoint([450.4561,
                                    643.1290]),
                                new MapPoint([362.0858,
                                    737.9410,
                                    924.6924])])],
                        new SpatialReference(4,
                                "alias",
                                "cumque",
                                "voluptas"),
                            true,
                            true),
                    new TextSymbol("illum exercitationem enim",
                        new MapColor(241, 38, 209),
                        new MapColor(21, 116, 183),
                            new Dimension(390.4780),
                        new MapFont(new Dimension(634.4460),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            581.5901,
                        new MapColor(145, 161, 31),
                        new MapColor(93, 147, 96),
                            228.9794,
                        HorizontalAlignment.Left,
                            true,
                            336.4536,
                            new Dimension(929.3544),
                            true),
                    new PopupTemplate("aut fuga et",
                            "et",
                            ["perspiciatis",
                                "ut"],
                        [new FieldInfo("avatar",
                                "aut",
                                "iusto",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new AttachmentsPopupContent("nam dolorem quia",
                                "sequi sed repudiandae perferendis voluptatem quia at",
                                AttachmentsPopupContentDisplayType.Preview),
                        new FieldsPopupContent([new FieldInfo("updatedAt",
                                    "et",
                                    "tenetur",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("name",
                                    "nam",
                                    "natus",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("status",
                                    "a",
                                    "voluptates",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("id",
                                    "accusamus",
                                    "consectetur",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "iure nostrum ut consequatur repellendus aut",
                                "nostrum quam ut"),
                        new RelationshipPopupContent("eveniet vero qui",
                                "qui quibusdam deleniti accusantium excepturi tenetur unde",
                                7,
                                "dignissimos",
                            [new RelatedRecordsInfoFieldOrder("occaecati",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("minima",
                                OrderBy.Desc)],
                                2),
                        new FieldsPopupContent([new FieldInfo("id",
                                    "fugiat",
                                    "eos",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "in sapiente est sed perferendis",
                                "qui vitae inventore")],
                        [new ExpressionInfo("return $feature.Name;",
                                "password",
                                "enim dolores voluptatum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "email",
                                "dolores nam aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "email",
                                "repellat ad quia",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("aliquid nesciunt qui",
                                "176438c9-6478-bd98-36cd-20531b95ca67",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "a"),
                        new ActionToggle("qui laborum optio",
                                "889a4750-82a3-b974-7068-68997d7d1df3",
                                () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "labore"),
                        new ActionButton("et ipsum harum",
                                "https://picsum.photos/640/480/?image=327",
                                "ef15733a-d125-fca1-0f4a-d1132d77f71c",
                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "nisi")]),
                        new AttributesDictionary(),
                        true,
                        "aut",
                        "optio",
                        new GraphicOrigin(Guid.NewGuid(),
                            "labore",
                            1))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([7,
                    6],
                    true,
                    623.8235,
                    589.0405,
                    "1.7.6.1",
                new Point(-65.3183,
                        -71.3493,
                        112.0109,
                        53.4943,
                        168.5260,
                    new SpatialReference(1,
                            "tempora",
                            "iusto",
                            "consectetur"),
                        true,
                        true,
                        53.5186),
                    7,
                    ["nulla",
                        "quaerat"],
                    "ad",
                    new DateTime(2021, 7, 5, 7, 38, 24),
                    968.1959,
                    2,
                    "delectus",
                    5),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([5,
                    2,
                    2,
                    1],
                    true,
                    347.3328,
                    177.7200,
                    "8.3.1.2",
                new Polygon([new MapPath([new MapPoint([853.5884,
                            218.9973]),
                        new MapPoint([97.6081,
                            53.5149]),
                        new MapPoint([493.1367,
                            425.8354,
                            749.7019,
                            149.8688])]),
                        new MapPath([new MapPoint([428.2576,
                                932.0172,
                                115.9717]),
                            new MapPoint([757.4707,
                                930.1426,
                                163.2373,
                                735.8648])]),
                        new MapPath([new MapPoint([783.1295,
                                405.8418]),
                            new MapPoint([590.0787,
                                66.3294,
                                612.3612])]),
                        new MapPath([new MapPoint([452.1139,
                                113.7064]),
                            new MapPoint([578.2005,
                                729.2607])])],
                    new SpatialReference(8,
                            "nihil",
                            "modi",
                            "sapiente"),
                    new Point(108.8474,
                            -18.7250,
                            -69.0829,
                            79.8638,
                            192.9876,
                        new SpatialReference(3,
                                "tempore",
                                "ut",
                                "expedita"),
                            true,
                            true,
                            236.6289),
                        true,
                        true,
                        true),
                    7,
                    ["ex",
                        "facilis"],
                    "aut",
                    new DateTime(2019, 4, 22, 9, 50, 54),
                    64.0894,
                    3,
                    "ratione",
                    9),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([7,
                    7,
                    6,
                    4],
                    true,
                    524.9622,
                    664.5099,
                    "3.7.8.0",
                new Point(-134.6325,
                        -3.3782,
                        59.9279,
                        -49.2924,
                        21.2253,
                    new SpatialReference(8,
                            "est",
                            "nihil",
                            "iusto"),
                        true,
                        true,
                        157.9108),
                    4,
                    ["quo",
                        "optio"],
                    "cum",
                    new DateTime(2004, 6, 13, 4, 44, 22),
                    57.0781,
                    9,
                    "sed",
                    3),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([1,
                    1,
                    2],
                    true,
                    15.6679,
                    252.9627,
                    "0.2.9.4",
                new Point(-75.4746,
                        -67.2955,
                        -27.9847,
                        -30.0389,
                        632.7206,
                    new SpatialReference(2,
                            "aut",
                            "libero",
                            "molestiae"),
                        true,
                        true,
                        816.0559),
                    9,
                    ["rerum",
                        "consectetur"],
                    "praesentium",
                    new DateTime(2015, 1, 18, 17, 48, 46),
                    353.9945,
                    3,
                    "corrupti",
                    4),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.DestinationIn;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "voluptas suscipit et"),
                ElevationInfoMode.OnTheGround,
                    397.8800,
                ElevationUnit.Centimeters);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("et",
                    32531721.4551)],
                    true,
                new FeatureFilter(867.8573,
                    new Point(69.7051,
                            43.9196,
                            136.0817,
                            -24.6193,
                            756.8635,
                        new SpatialReference(7,
                                "recusandae",
                                "beatae",
                                "ullam"),
                            true,
                            true,
                            526.6152),
                        [7,
                            5],
                    SpatialRelationship.IndexIntersects,
                    new TimeExtent(new DateTime(2004, 5, 5, 21, 46, 10),
                            new DateTime(2013, 3, 3, 22, 41, 15)),
                        QueryUnits.UsNauticalMiles,
                        "Phone = '555-555-5555'"),
                    [new Effect("praesentium",
                        6082621.3660),
                        new Effect("enim",
                            40911496.5156),
                        new Effect("distinctio",
                            7863642.4475)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "updatedAt",
                    "vero",
                    "quis sunt fugit aut",
                    3,
                    true,
                    true,
                    new { Value = "ad" },
                FieldValueType.LocationOrPlaceName,
                new RangeDomain("quo",
                        "fugiat",
                        "createdAt"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-42.8946,
                    -0.4693,
                    32.0821,
                    8.6888,
                    533.5081,
                    924.4477,
                    173.3324,
                    554.5590,
                new SpatialReference(7,
                        "et",
                        "quia",
                        "tempore"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polyline;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveAfter,
                    "consectetur",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    871706.2604,
                    31067.4029,
                    true,
                    new Dimension(109.5491),
                new TextSymbol("impedit corporis similique",
                    new MapColor(102, 69, 22),
                    new MapColor(56, 34, 1),
                        new Dimension(436.1848),
                    new MapFont(new Dimension(997.3740),
                            "Verdana",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        170.3923,
                    new MapColor(193, 94, 19),
                    new MapColor(95, 240, 45),
                        335.9810,
                    HorizontalAlignment.Left,
                        true,
                        353.1947,
                        new Dimension(640.7346),
                        true),
                    true,
                    "ObjectID = 1"),
            new Label(LabelPlacement.AboveAfter,
                    "et",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    28195468.2347,
                    19412.0488,
                    true,
                    new Dimension(3.6705),
                new TextSymbol("provident sit hic",
                    new MapColor(236, 253, 252),
                    new MapColor(203, 143, 183),
                        new Dimension(630.6700),
                    new MapFont(new Dimension(33.6173),
                            "Arial",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.None),
                        615.1552,
                    new MapColor(202, 110, 212),
                    new MapColor(191, 137, 46),
                        814.0384,
                    HorizontalAlignment.Right,
                        true,
                        572.9077,
                        new Dimension(689.9911),
                        true),
                    true,
                    "Street = '123 Main St.'"),
            new Label(LabelPlacement.BelowAfter,
                    "quam",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    46525623.4055,
                    36031.2678,
                    true,
                    new Dimension(624.7747),
                new TextSymbol("cum iste eaque",
                    new MapColor(111, 75, 205),
                    new MapColor(228, 12, 241),
                        new Dimension(933.7724),
                    new MapFont(new Dimension(688.9002),
                            "Garamond",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        187.6361,
                    new MapColor(10, 91, 3),
                    new MapColor(202, 132, 108),
                        11.6032,
                    HorizontalAlignment.Right,
                        true,
                        609.5379,
                        new Dimension(592.3181),
                        true),
                    true,
                    "Country = 'Canada'")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("consectetur",
                SortOrder.Ascending,
                    "eos"),
            new OrderedLayerOrderBy("sed",
                SortOrder.Ascending,
                    "sit"),
            new OrderedLayerOrderBy("nihil",
                SortOrder.Ascending,
                    "ipsa")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("beatae architecto ab",
                    "dicta",
                    ["quis",
                        "voluptas",
                        "dolor",
                        "perspiciatis"],
                [new FieldInfo("status",
                        "ut",
                        "voluptas",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.DayShortMonthYear),
                        true,
                        true,
                    StatisticType.Max)],
                [new AttachmentsPopupContent("eveniet dolorum molestiae",
                        "ut assumenda ut ad est beatae et",
                        AttachmentsPopupContentDisplayType.Auto),
                new MediaPopupContent("sapiente reiciendis et",
                        "nulla tenetur suscipit iusto quos in totam",
                    [new ColumnChartMediaInfo("id est sit",
                            "maxime",
                            "inventore voluptatem voluptas",
                        new ChartMediaInfoValue(["eos",
                                "voluptatem",
                                "velit",
                                "accusantium"],
                                "explicabo",
                                "repellat",
                            [new ChartMediaInfoValueSeries("id",
                                    "commodi",
                                    476.6271),
                            new ChartMediaInfoValueSeries("category",
                                    "quaerat",
                                    291.4111),
                            new ChartMediaInfoValueSeries("password",
                                    "magni",
                                    792.9314),
                            new ChartMediaInfoValueSeries("id",
                                    "eos",
                                    460.7476)],
                            [new MapColor(191, 53, 80)])),
                    new ImageMediaInfo("et qui ducimus",
                            "rem",
                            "nam expedita assumenda",
                        new ImageMediaInfoValue("http://emory.com",
                                "https://dena.name"),
                            698.4140),
                    new ImageMediaInfo("voluptatem asperiores quia",
                            "aut",
                            "esse eaque modi",
                        new ImageMediaInfoValue("https://winfield.org",
                                "https://emmanuelle.biz"),
                            925.3320)],
                        6),
                new TextPopupContent("porro pariatur magni")],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "password",
                        "aut natus explicabo",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("impedit ipsam magni",
                        "034f1c30-d955-6e3e-0c40-76635014c6e1",
                        () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "title",
                        "et"),
                new ActionToggle("maxime corrupti similique",
                        "1b3e8dca-1a98-baea-7f55-02f9e13961ed",
                        () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "category",
                        "et")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem();
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("quo modi dignissimos",
                    new MapColor(57, 20, 23),
                    new MapColor(173, 167, 102),
                        new Dimension(600.1194),
                    new MapFont(new Dimension(563.3417),
                            "Georgia",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        368.6262,
                    new MapColor(170, 50, 145),
                    new MapColor(148, 98, 12),
                        764.5258,
                    HorizontalAlignment.Right,
                        true,
                        189.7746,
                        new Dimension(408.6295),
                        true),
                    "laudantium",
                [new SizeVariable("qui",
                        new Dimension(152.2465),
                        new Dimension(130.6462),
                        235.9435,
                        14.0797,
                        VisualValueRepresentation.Diameter,
                        VisualValueUnit.Unknown,
                        "totam",
                        "facilis",
                        true,
                        VisualAxis.Width,
                        "id",
                        "distinctio similique aspernatur",
                    new VisualVariableLegendOptions(true,
                            "reiciendis voluptas suscipit")),
                new RotationVariable("voluptatum",
                    Axis.Tilt,
                    RotationType.Arithmetic,
                    new VisualVariableLegendOptions(true,
                            "aut omnis unde"),
                        "labore",
                        "qui ut distinctio"),
                new RotationVariable("exercitationem",
                    Axis.Roll,
                    RotationType.Geographic,
                    new VisualVariableLegendOptions(true,
                            "et et sit"),
                        "libero",
                        "officia doloremque et")],
                new AuthoringInfo(ClassificationMethod.Quantile,
                    new AlgorithmicColorRamp(Algorithm.LabLch,
                        new MapColor(130, 30, 118),
                        new MapColor(9, 223, 147)),
                        166.4558,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(40.1355,
                                2.2723),
                        new AuthoringInfoField1ClassBreakInfos(249.2672,
                                202.1082)],
                            "similique",
                            "ut",
                            "et"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(233.2853,
                                291.2222)],
                            "voluptates",
                            "consequuntur",
                            "quae"),
                        ["enim",
                            "expedita",
                            "voluptatem"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "labore",
                        true,
                    LengthUnit.Yards,
                        171.3046,
                        212.0223,
                        300.2905,
                        785.9181));
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(2,
                    "molestiae",
                    "distinctio",
                    "harum");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("nulla aut consequuntur ratione corporis voluptatum deleniti",
                DrawingTool.Freehand,
                    "group",
                new Graphic(new Point(-93.5680,
                            -16.6690,
                            60.5850,
                            -7.9917,
                            448.5314,
                        new SpatialReference(4,
                                "excepturi",
                                "ipsam",
                                "eligendi"),
                            true,
                            true,
                            331.2307),
                    new TextSymbol("odit voluptatem deleniti",
                        new MapColor(102, 214, 11),
                        new MapColor(81, 209, 70),
                            new Dimension(264.8708),
                        new MapFont(new Dimension(420.4539),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            853.9491,
                        new MapColor(151, 225, 7),
                        new MapColor(64, 11, 201),
                            260.5366,
                        HorizontalAlignment.Left,
                            true,
                            191.5891,
                            new Dimension(95.9728),
                            true),
                    new PopupTemplate("quae quae sint",
                            "atque",
                            ["itaque",
                                "aut",
                                "molestiae"],
                        [new FieldInfo("phone",
                                "et",
                                "est",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("title",
                                "dolorem",
                                "voluptatem",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("group",
                                "eum",
                                "accusamus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("category",
                                "quis",
                                "earum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("quod qui cum",
                                "quia natus laborum fugit",
                                1,
                                "non",
                            [new RelatedRecordsInfoFieldOrder("voluptatem",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("sunt",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("minus",
                                OrderBy.Desc)],
                                1)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "comment",
                                "aut est praesentium",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "avatar",
                                "quae repudiandae veniam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "phone",
                                "et expedita quia",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("natus similique placeat",
                                "af83e35f-70e9-5968-76df-e35500ab9c75",
                                () => { Console.WriteLine("accusantium"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "tempora"),
                        new ActionButton("est deleniti est",
                                "https://picsum.photos/640/480/?image=912",
                                "2a0f3838-848c-f69a-5820-eeb0299602ca",
                                () => { Console.WriteLine("dignissimos"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "illo"),
                        new ActionButton("maiores quisquam quidem",
                                "https://picsum.photos/640/480/?image=779",
                                "6e69ebbb-c793-3175-d805-504e2335cca4",
                                () => { Console.WriteLine("mollitia"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "nesciunt")]),
                        new AttributesDictionary(),
                        true,
                        "commodi",
                        "libero",
                        new GraphicOrigin(Guid.NewGuid(),
                            "dolores",
                            6)),
                    new Thumbnail("fugit",
                        "voluptatibus",
                        101.7098,
                        35.7973)),
            new FeatureTemplate("est totam saepe facilis et",
                DrawingTool.Ellipse,
                    "name",
                new Graphic(new Extent(105.7611,
                            -114.6968,
                            54.0292,
                            87.3152,
                            595.3080,
                            700.1563,
                            869.8568,
                            398.9083,
                        new SpatialReference(6,
                                "minima",
                                "at",
                                "et"),
                            true,
                            true),
                    new TextSymbol("adipisci sit possimus",
                        new MapColor(37, 65, 103),
                        new MapColor(221, 234, 156),
                            new Dimension(910.7166),
                        new MapFont(new Dimension(176.9937),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            328.3772,
                        new MapColor(20, 52, 193),
                        new MapColor(117, 30, 46),
                            220.1321,
                        HorizontalAlignment.Center,
                            true,
                            564.1490,
                            new Dimension(747.1745),
                            true),
                    new PopupTemplate("ut voluptas officiis",
                            "sunt",
                            ["odio",
                                "ea",
                                "mollitia",
                                "consequatur"],
                        [new FieldInfo("name",
                                "facere",
                                "eligendi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new RelationshipPopupContent("doloribus qui libero",
                                "ratione ullam sed soluta nisi",
                                3,
                                "nam",
                            [new RelatedRecordsInfoFieldOrder("iure",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("enim",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("facere",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("sunt",
                                OrderBy.Desc)],
                                9)],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "phone",
                                "nisi non numquam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "updatedAt",
                                "nulla est rerum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "group",
                                "odit et molestiae",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("dolorem delectus ipsam",
                                "81804777-eb00-43a5-f969-9aa52c722a42",
                                () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "quo")]),
                        new AttributesDictionary(),
                        true,
                        "distinctio",
                        "non",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nostrum",
                            2)),
                    new Thumbnail("et",
                        "dolorem",
                        170.1635,
                        299.0152)),
            new FeatureTemplate("omnis consequuntur qui recusandae",
                DrawingTool.Circle,
                    "comment",
                new Graphic(new Extent(-129.1819,
                            -158.4092,
                            41.2758,
                            -29.7648,
                            148.0147,
                            749.8235,
                            853.6679,
                            209.1568,
                        new SpatialReference(1,
                                "consequuntur",
                                "error",
                                "numquam"),
                            true,
                            true),
                    new TextSymbol("rerum porro praesentium",
                        new MapColor(20, 80, 209),
                        new MapColor(75, 159, 125),
                            new Dimension(850.2726),
                        new MapFont(new Dimension(366.8029),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            268.2041,
                        new MapColor(15, 36, 228),
                        new MapColor(86, 101, 13),
                            35.5683,
                        HorizontalAlignment.Center,
                            true,
                            657.6722,
                            new Dimension(662.4682),
                            true),
                    new PopupTemplate("tenetur reprehenderit rerum",
                            "nostrum",
                            ["distinctio",
                                "dolor"],
                        [new FieldInfo("status",
                                "et",
                                "sunt",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("createdAt",
                                "quasi",
                                "ullam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new MediaPopupContent("sunt quibusdam illum",
                                "itaque in tempore ut saepe soluta",
                            [new ImageMediaInfo("officiis cum et",
                                    "laborum",
                                    "et assumenda dignissimos",
                                new ImageMediaInfoValue("https://prince.com",
                                        "https://tyrique.org"),
                                    37.4777),
                            new ColumnChartMediaInfo("mollitia inventore qui",
                                    "sequi",
                                    "quo incidunt quos",
                                new ChartMediaInfoValue(["aliquam",
                                        "laudantium",
                                        "ut",
                                        "laudantium"],
                                        "vero",
                                        "et",
                                    [new ChartMediaInfoValueSeries("category",
                                            "omnis",
                                            60.9966),
                                    new ChartMediaInfoValueSeries("group",
                                            "dolorum",
                                            899.5385)],
                                    [new MapColor(203, 177, 106),
                                    new MapColor(31, 157, 194)]))],
                                8),
                        new TextPopupContent("est qui vero")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "status",
                                "aperiam maxime sed",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "updatedAt",
                                "possimus architecto reiciendis",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "phone",
                                "quia a est",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("aut consectetur quidem",
                                "https://picsum.photos/640/480/?image=988",
                                "835fe86b-8c59-925d-6253-1d13e5b620de",
                                () => { Console.WriteLine("beatae"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "et"),
                        new ActionToggle("et eligendi quis",
                                "b5e182c9-62df-3fb1-9d17-0f608997781b",
                                () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "at")]),
                        new AttributesDictionary(),
                        true,
                        "consequatur",
                        "amet",
                        new GraphicOrigin(Guid.NewGuid(),
                            "reiciendis",
                            8)),
                    new Thumbnail("repudiandae",
                        "eos",
                        51.4407,
                        253.7998))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2009, 10, 13, 2, 50, 53),
                    new DateTime(2000, 9, 17, 17, 13, 30));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("cupiditate",
                    "quia",
                new TimeExtent(new DateTime(2008, 1, 13, 8, 7, 25),
                        new DateTime(2000, 4, 26, 19, 48, 26)),
                new TimeInterval(TemporalTime.Minutes,
                        23.0043),
                    [new DateTime(2014, 1, 21, 15, 23, 33),
                        new DateTime(2012, 4, 10, 20, 23, 21),
                        new DateTime(2022, 10, 20, 4, 34, 31),
                        new DateTime(2003, 4, 14, 16, 7, 18)],
                    "Asia/Tokyo",
                    "illum");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Months,
                    918.4723);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2005, 9, 16, 20, 35, 16),
                    new DateTime(2000, 5, 5, 20, 51, 37));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
