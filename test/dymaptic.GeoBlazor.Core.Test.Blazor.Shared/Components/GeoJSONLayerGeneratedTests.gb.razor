@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("sed")"
                        Title="@("saepe quod molestias")"
                        Opacity="@(0.1389)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.Average)"
                        DefinitionExpression="@("optio")"
                        DisplayField="@("quo")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("fugit",
                            47999818.6561))"
                        FullExtent="@(new Extent(-162.7578,
                                134.7878,
                                72.6800,
                                -16.3477,
                                379.2153,
                                601.2159,
                                754.3581,
                                179.2764,
                            new SpatialReference(6,
                                    "voluptates",
                                    "deserunt",
                                    "et"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Polyline)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(47306945.9405)"
                        MinScale="@(23320.0281)"
                        ObjectIdField="@("aut")"
                        OutFields="@(["id",
                            "velit"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(257.2335)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(7,
                                "sit",
                                "repellat",
                                "non"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Seconds)"
                            Value="@(226.3047)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("pariatur")"
                            EndField="@("adipisci")"
                            Stops="@([new DateTime(2006, 6, 25, 0, 42, 23),
                                new DateTime(2002, 11, 16, 1, 52, 17)])"
                            TimeZone="@("Asia/Riyadh")"
                            TrackIdField="@("cupiditate")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Days)"
                                Value="@(62.3800)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2011, 1, 23, 4, 51, 43))"
                                End="@(new DateTime(2020, 5, 23, 22, 12, 43))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2013, 11, 8, 20, 56, 49))"
                            End="@(new DateTime(2011, 4, 7, 18, 5, 47))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("sed ullam in eos quibusdam")"
                            DrawingTool="@(DrawingTool.Line)"
                            Name="@("token")"
                            Prototype="@(new Graphic(new Polygon([new MapPath([new MapPoint([198.0855,
                                            113.2861,
                                            827.2869,
                                            773.4324]),
                                        new MapPoint([898.7967,
                                            234.3705,
                                            134.4207,
                                            161.8505])]),
                                        new MapPath([new MapPoint([231.5563,
                                                859.8482,
                                                366.9098]),
                                            new MapPoint([779.0576,
                                                359.2241,
                                                226.7134])]),
                                        new MapPath([new MapPoint([699.1620,
                                                865.6852,
                                                416.1600,
                                                331.5091]),
                                            new MapPoint([705.5378,
                                                392.6133])]),
                                        new MapPath([new MapPoint([984.1536,
                                                339.0795,
                                                795.8668]),
                                            new MapPoint([953.3687,
                                                381.0788,
                                                659.9130,
                                                933.1482]),
                                            new MapPoint([942.6089,
                                                267.2064,
                                                781.9478,
                                                747.7366])])],
                                    new SpatialReference(4,
                                            "sed",
                                            "quod",
                                            "et"),
                                    new Point(26.8325,
                                            -35.7282,
                                            -116.6591,
                                            88.9508,
                                            653.4112,
                                        new SpatialReference(9,
                                                "sit",
                                                "sed",
                                                "expedita"),
                                            true,
                                            true,
                                            372.9153),
                                        true,
                                        true,
                                        true),
                                new TextSymbol("officiis assumenda optio",
                                    new MapColor(202, 235, 230),
                                    new MapColor(186, 45, 179),
                                        new Dimension(649.4881),
                                    new MapFont(new Dimension(391.6823),
                                            "Bookman",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        535.9151,
                                    new MapColor(31, 10, 90),
                                    new MapColor(6, 142, 85),
                                        904.9767,
                                    HorizontalAlignment.Right,
                                        true,
                                        643.6862,
                                        new Dimension(628.2483),
                                        true),
                                new PopupTemplate("repellendus maiores temporibus",
                                        "voluptatem",
                                        ["sunt",
                                            "minus",
                                            "error"],
                                    [new FieldInfo("updatedAt",
                                            "sit",
                                            "ipsum",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                    [new AttachmentsPopupContent("at officia inventore",
                                            "doloremque aperiam magni magni sit quia est",
                                            AttachmentsPopupContentDisplayType.Auto),
                                    new TextPopupContent("quaerat quam dolores")],
                                    [new ExpressionInfo("return $feature.Name;",
                                            "status",
                                            "a exercitationem voluptatem",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "name",
                                            "voluptas fuga odit",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "createdAt",
                                            "et iusto quaerat",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("laboriosam ut ea",
                                            "https://picsum.photos/640/480/?image=231",
                                            "1a2ecca3-ae79-70d1-e54b-1a43326b00d4",
                                            () => { Console.WriteLine("odio"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "fugit"),
                                    new ActionToggle("laborum sed suscipit",
                                            "65742246-a7e5-f18c-94f4-6568e0f1aac6",
                                            () => { Console.WriteLine("quas"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "name",
                                            "ut")]),
                                    new AttributesDictionary(),
                                    true,
                                    "eius",
                                    "ipsa",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "laborum",
                                        4)))"
                            Thumbnail="@(new Thumbnail("ratione",
                                "culpa",
                                192.6148,
                                83.7356))">
                        </FeatureTemplate>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(194, 187, 0),
                                    new MapColor(6, 134, 157)),
                                    351.3778,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(364.0039,
                                            891.3172),
                                    new AuthoringInfoField1ClassBreakInfos(770.3599,
                                            65.6783),
                                    new AuthoringInfoField1ClassBreakInfos(733.0933,
                                            582.5204),
                                    new AuthoringInfoField1ClassBreakInfos(994.4048,
                                            971.7622)],
                                        "laboriosam",
                                        "deserunt",
                                        "perferendis"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(888.5016,
                                            232.1741),
                                    new AuthoringInfoField1ClassBreakInfos(939.8468,
                                            444.8309),
                                    new AuthoringInfoField1ClassBreakInfos(627.2437,
                                            359.7703)],
                                        "cumque",
                                        "eos",
                                        "quidem"),
                                    ["iusto",
                                        "expedita"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "nostrum",
                                    true,
                                LengthUnit.NauticalMiles,
                                    95.7665,
                                    267.8563,
                                    666.5848,
                                    340.4934))">
                        </UniqueValueRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("minima")"
                            ApiKey="@("quod")"
                            AvgRating="@(495.5023)"
                            Categories="@(["ullam",
                                "libero"])"
                            Created="@(new DateTime(2022, 8, 15, 9, 18, 15))"
                            Culture="@("et")"
                            Description="@("dolorem perferendis ut velit")"
                            Extent="@(new Extent(-78.5303,
                                    149.4887,
                                    -48.1677,
                                    -33.2497,
                                    174.1467,
                                    387.6294,
                                    543.5543,
                                    659.3461,
                                new SpatialReference(3,
                                        "vitae",
                                        "quia",
                                        "ut"),
                                    true,
                                    true))"
                            GroupCategories="@(["nesciunt",
                                "ipsam",
                                "officia"])"
                            LicenseInfo="@("voluptates")"
                            Modified="@(new DateTime(2014, 9, 18, 13, 46, 29))"
                            Name="@("comment")"
                            NumComments="@(451.8034)"
                            NumRatings="@(972.4523)"
                            NumViews="@(469.8603)"
                            Owner="@("Kaleb Wunsch")"
                            OwnerFolder="@("Stanford Ebert")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.NoPrompt,
                                    ["quaerat",
                                        "sapiente"],
                                    "sit",
                                    "quia",
                                    "eius",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("amet")"
                            Screenshots="@(["quisquam",
                                "cupiditate",
                                "saepe",
                                "nemo"])"
                            Size="@(4)"
                            Snippet="@("aut")"
                            Tags="@(["fugit",
                                "molestias",
                                "et"])"
                            Title="@("aut et tempora")"
                            TypeKeywords="@(["exercitationem",
                                "modi"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("sapiente tempora labore")"
                            StringContent="@("aut")"
                            OutFields="@(["quo",
                                "possimus",
                                "qui",
                                "fugit"])"
                            FieldInfos="@([new FieldInfo("id",
                                    "et",
                                    "placeat",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Count)])"
                            Content="@([new TextPopupContent("magni repellat vero"),
                            new AttachmentsPopupContent("mollitia voluptatum laborum",
                                    "velit perferendis magni accusamus ut",
                                    AttachmentsPopupContentDisplayType.Preview),
                            new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "et",
                                        "quod voluptas soluta")),
                            new AttachmentsPopupContent("qui voluptas veritatis",
                                    "voluptates qui id sit minus odit",
                                    AttachmentsPopupContentDisplayType.Preview)])"
                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "name",
                                    "quidem sint necessitatibus",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "category",
                                    "ratione nulla alias",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "password",
                                    "sit doloribus nihil",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "comment",
                                    "quod adipisci dolor",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("voluptatem illo animi",
                                    "https://picsum.photos/640/480/?image=387",
                                    "60d58a9f-d5c6-41e4-600f-46deea65ae79",
                                    () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                    "email",
                                    true,
                                    true,
                                    true,
                                    "itaque"),
                            new ActionToggle("assumenda necessitatibus voluptas",
                                    "b60211bc-748c-f8b4-a860-2d8b18418b55",
                                    () => { Console.WriteLine("eaque"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "category",
                                    "mollitia"),
                            new ActionToggle("veritatis beatae quia",
                                    "a9c4ae51-8993-ec34-44be-de3e1c07090d",
                                    () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "phone",
                                    "ipsum"),
                            new ActionButton("enim non hic",
                                    "https://picsum.photos/640/480/?image=312",
                                    "a6fa31c7-14a1-a956-509a-5327b4ade86d",
                                    () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                    "group",
                                    true,
                                    true,
                                    true,
                                    "aliquid")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("laudantium")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("voluptatem")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AboveAlong)"
                            LabelExpression="@("sequi")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(4650946.7855)"
                            MinScale="@(38385.5386)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(712.2601))"
                            Symbol="@(new TextSymbol("non alias eum",
                                new MapColor(127, 117, 125),
                                new MapColor(26, 113, 48),
                                    new Dimension(568.6568),
                                new MapFont(new Dimension(40.2924),
                                        "Arial",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.LineThrough),
                                    861.2195,
                                new MapColor(209, 127, 73),
                                new MapColor(89, 5, 254),
                                    487.3675,
                                HorizontalAlignment.Center,
                                    true,
                                    191.7143,
                                    new Dimension(426.2865),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Name = 'John Doe'")">
                        </Label>
                        <Field 
                            Name="@("id")"
                            Alias="@("ratione")"
                            Description="@("repudiandae atque ab iure")"
                            Length="@(2)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "commodi" })"
                            ValueType="@(FieldValueType.UniqueIdentifier)"
                            Domain="@(new InheritedDomain("password"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("eos",
                                31692553.1732),
                                new Effect("voluptas",
                                    34518631.4908),
                                new Effect("itaque",
                                    25002388.7428)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(173.2701,
                                new Polyline([new MapPath([new MapPoint([228.6118,
                                            297.1700,
                                            802.3050,
                                            757.1702]),
                                        new MapPoint([751.7852,
                                            727.7252,
                                            774.6501])]),
                                        new MapPath([new MapPoint([733.1214,
                                                314.9273]),
                                            new MapPoint([101.8230,
                                                293.7033,
                                                149.8116]),
                                            new MapPoint([676.7987,
                                                561.3171,
                                                988.2243,
                                                899.3194]),
                                            new MapPoint([208.0915,
                                                185.8488,
                                                987.1696])]),
                                        new MapPath([new MapPoint([125.0841,
                                                70.9087,
                                                810.3957]),
                                            new MapPoint([704.2902,
                                                157.2136,
                                                565.3715])]),
                                        new MapPath([new MapPoint([882.2469,
                                                212.6776]),
                                            new MapPoint([851.2933,
                                                976.6404,
                                                233.1870]),
                                            new MapPoint([436.0293,
                                                772.0077])])],
                                    new SpatialReference(3,
                                            "reprehenderit",
                                            "doloremque",
                                            "error"),
                                        true,
                                        true),
                                    [8,
                                        8,
                                        6],
                                SpatialRelationship.Contains,
                                new TimeExtent(new DateTime(2013, 4, 7, 17, 23, 25),
                                        new DateTime(2017, 11, 21, 18, 7, 52)),
                                    QueryUnits.Miles,
                                    "Name = 'John Doe'"))"
                            IncludedEffect="@([new Effect("qui",
                                48078704.2566),
                                new Effect("voluptatem",
                                    33177650.1957)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "ut ratione est"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(624.6233)"
                            Unit="@(ElevationUnit.Decimeters)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Extent(78.0745,
                            -65.3881,
                            -47.9658,
                            -70.8484,
                            786.0579,
                            900.6322,
                            711.4575,
                            17.3349,
                        new SpatialReference(5,
                                "voluptas",
                                "qui",
                                "a"),
                            true,
                            true),
                    new TextSymbol("laborum cum nostrum",
                        new MapColor(108, 222, 138),
                        new MapColor(46, 86, 245),
                            new Dimension(854.2048),
                        new MapFont(new Dimension(775.1553),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            137.7594,
                        new MapColor(217, 227, 91),
                        new MapColor(248, 175, 209),
                            869.7836,
                        HorizontalAlignment.Right,
                            true,
                            452.5375,
                            new Dimension(63.0579),
                            true),
                    new PopupTemplate("officia ea consequuntur",
                            "occaecati",
                            ["est",
                                "adipisci",
                                "tenetur"],
                        [new FieldInfo("email",
                                "corporis",
                                "animi",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("email",
                                "laboriosam",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("title",
                                "corrupti",
                                "quis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("status",
                                "asperiores",
                                "quia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new TextPopupContent("aut recusandae in"),
                        new FieldsPopupContent([new FieldInfo("email",
                                    "id",
                                    "itaque",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("name",
                                    "qui",
                                    "sit",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "consequatur culpa omnis id et libero",
                                "voluptatem harum unde")],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "group",
                                "quasi et iure",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "title",
                                "error rerum vitae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "aut quod ut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("nihil ut perspiciatis",
                                "f6598c9b-be2f-d287-f936-13faebc0ced3",
                                () => { Console.WriteLine("vero"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "rerum"),
                        new ActionToggle("temporibus non ab",
                                "8fce0dfd-8700-381e-71fa-a1065b937639",
                                () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "illum"),
                        new ActionButton("illum et quia",
                                "https://picsum.photos/640/480/?image=492",
                                "6f37e6f4-dc99-18a1-702b-916ad5bd4f55",
                                () => { Console.WriteLine("esse"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "natus")]),
                        new AttributesDictionary(),
                        true,
                        "eligendi",
                        "id",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sed",
                            7))],
                [new Graphic(new Point(-20.7234,
                            32.8431,
                            -67.1644,
                            5.4038,
                            578.6724,
                        new SpatialReference(7,
                                "veniam",
                                "quo",
                                "ad"),
                            true,
                            true,
                            56.6293),
                    new TextSymbol("et est nam",
                        new MapColor(240, 172, 28),
                        new MapColor(53, 124, 89),
                            new Dimension(123.3530),
                        new MapFont(new Dimension(835.6198),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            30.0270,
                        new MapColor(163, 153, 191),
                        new MapColor(21, 20, 216),
                            361.6817,
                        HorizontalAlignment.Center,
                            true,
                            425.2317,
                            new Dimension(681.4795),
                            true),
                    new PopupTemplate("non perspiciatis ipsum",
                            "ut",
                            ["cupiditate",
                                "sequi",
                                "itaque"],
                        [new FieldInfo("createdAt",
                                "velit",
                                "eius",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("id",
                                "qui",
                                "reprehenderit",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                        [new MediaPopupContent("corporis optio vitae",
                                "dolore voluptatibus voluptatem beatae explicabo",
                            [new ColumnChartMediaInfo("reiciendis perspiciatis omnis",
                                    "quam",
                                    "qui quae minima",
                                new ChartMediaInfoValue(["omnis",
                                        "consectetur",
                                        "distinctio"],
                                        "enim",
                                        "qui",
                                    [new ChartMediaInfoValueSeries("createdAt",
                                            "dolor",
                                            858.0951),
                                    new ChartMediaInfoValueSeries("group",
                                            "consectetur",
                                            831.2290),
                                    new ChartMediaInfoValueSeries("id",
                                            "cum",
                                            261.5215)],
                                    [new MapColor(93, 131, 188),
                                    new MapColor(126, 71, 55),
                                    new MapColor(164, 134, 224)]))],
                                2),
                        new FieldsPopupContent([new FieldInfo("title",
                                    "sapiente",
                                    "ut",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "facilis et illum mollitia officiis autem et",
                                "dolorum ut deserunt"),
                        new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "ratione",
                                    "enim quasi provident"))],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "token",
                                "enim iusto architecto",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("dicta optio amet",
                                "4f09e4dc-2068-88e5-c534-da1917b520c5",
                                () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "aliquam"),
                        new ActionToggle("aut culpa ut",
                                "a2513c79-b1a1-cebb-3e42-b4216128d7a4",
                                () => { Console.WriteLine("optio"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "repudiandae"),
                        new ActionToggle("deleniti quos dolorum",
                                "4a293a02-2e19-1a7b-fe48-ec4fb8aeea5d",
                                () => { Console.WriteLine("minima"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "molestias")]),
                        new AttributesDictionary(),
                        true,
                        "repudiandae",
                        "aliquam",
                        new GraphicOrigin(Guid.NewGuid(),
                            "suscipit",
                            4)),
                new Graphic(new Extent(-69.8156,
                            -102.2232,
                            65.9599,
                            14.5088,
                            718.4129,
                            1.5185,
                            704.0582,
                            501.0349,
                        new SpatialReference(7,
                                "vero",
                                "porro",
                                "iure"),
                            true,
                            true),
                    new TextSymbol("velit quae nobis",
                        new MapColor(142, 118, 44),
                        new MapColor(242, 120, 108),
                            new Dimension(87.9424),
                        new MapFont(new Dimension(835.4175),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            565.9129,
                        new MapColor(226, 189, 8),
                        new MapColor(118, 152, 9),
                            658.9144,
                        HorizontalAlignment.Center,
                            true,
                            2.7004,
                            new Dimension(579.4711),
                            true),
                    new PopupTemplate("adipisci ipsam fuga",
                            "fugit",
                            ["in",
                                "doloremque",
                                "sed",
                                "veniam"],
                        [new FieldInfo("status",
                                "eum",
                                "natus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("token",
                                "eum",
                                "voluptatem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("password",
                                "iusto",
                                "enim",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new RelationshipPopupContent("voluptatem quasi commodi",
                                "sed ea soluta reiciendis quam minima",
                                3,
                                "aspernatur",
                            [new RelatedRecordsInfoFieldOrder("occaecati",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("delectus",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("quidem",
                                OrderBy.Desc)],
                                7),
                        new TextPopupContent("ut eos nisi")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "email",
                                "dolores aliquid dicta",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "password",
                                "ut ullam alias",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "id",
                                "error accusantium modi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "updatedAt",
                                "eaque et nam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("dolores distinctio dolor",
                                "8420c873-faed-d27e-f527-efb08edef658",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "libero")]),
                        new AttributesDictionary(),
                        true,
                        "minus",
                        "veritatis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "totam",
                            7)),
                new Graphic(new Polyline([new MapPath([new MapPoint([539.1514,
                                439.6679,
                                195.0915,
                                699.9337]),
                            new MapPoint([276.0594,
                                750.4079,
                                362.3205,
                                803.3241]),
                            new MapPoint([301.8074,
                                841.7929,
                                664.4888]),
                            new MapPoint([538.4607,
                                775.9973,
                                2.9898])]),
                            new MapPath([new MapPoint([552.7132,
                                    645.3953]),
                                new MapPoint([212.3310,
                                    488.3384])])],
                        new SpatialReference(7,
                                "corrupti",
                                "quaerat",
                                "totam"),
                            true,
                            true),
                    new TextSymbol("recusandae rerum eum",
                        new MapColor(148, 151, 50),
                        new MapColor(107, 54, 72),
                            new Dimension(751.4827),
                        new MapFont(new Dimension(305.1423),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            930.4028,
                        new MapColor(190, 159, 191),
                        new MapColor(59, 211, 16),
                            678.6588,
                        HorizontalAlignment.Left,
                            true,
                            117.2807,
                            new Dimension(429.7431),
                            true),
                    new PopupTemplate("eos fugiat culpa",
                            "id",
                            ["suscipit",
                                "eius",
                                "repellat"],
                        [new FieldInfo("title",
                                "dolor",
                                "recusandae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("phone",
                                "quibusdam",
                                "nulla",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("phone",
                                "dolor",
                                "dolor",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("dicta qui est",
                                "iusto vero cum ex est",
                                6,
                                "exercitationem",
                            [new RelatedRecordsInfoFieldOrder("nostrum",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("quia",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("odio",
                                OrderBy.Asc)],
                                1)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "id",
                                "iusto consequatur eum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("laborum in delectus",
                                "https://picsum.photos/640/480/?image=631",
                                "aba724bf-9dca-bb95-e671-f8fdd1df09af",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "aperiam"),
                        new ActionToggle("quisquam sint qui",
                                "7b61d688-856d-28f4-3d65-5c270bd0f3b9",
                                () => { Console.WriteLine("eius"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "voluptatum"),
                        new ActionButton("nobis praesentium dolorem",
                                "https://picsum.photos/640/480/?image=739",
                                "46064897-a7a0-add3-ed15-89af4ee5e2c2",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "quaerat")]),
                        new AttributesDictionary(),
                        true,
                        "laboriosam",
                        "dolorum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "dolorem",
                            5))],
                    ["cumque",
                        "autem",
                        "sed",
                        "sit"],
                [new Graphic(new Polyline([new MapPath([new MapPoint([233.9660,
                                271.6469]),
                            new MapPoint([409.3831,
                                655.7669,
                                654.1826]),
                            new MapPoint([411.3084,
                                992.9792]),
                            new MapPoint([818.3449,
                                868.5320,
                                464.7274])])],
                        new SpatialReference(9,
                                "distinctio",
                                "laboriosam",
                                "harum"),
                            true,
                            true),
                    new TextSymbol("eos ut et",
                        new MapColor(27, 187, 169),
                        new MapColor(157, 159, 230),
                            new Dimension(833.4554),
                        new MapFont(new Dimension(838.4701),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            589.9720,
                        new MapColor(150, 195, 226),
                        new MapColor(12, 251, 44),
                            848.6022,
                        HorizontalAlignment.Right,
                            true,
                            260.1568,
                            new Dimension(706.8764),
                            true),
                    new PopupTemplate("adipisci sunt tempore",
                            "quia",
                            ["sint",
                                "tenetur"],
                        [new FieldInfo("id",
                                "eius",
                                "tempore",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("password",
                                "eos",
                                "qui",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new AttachmentsPopupContent("facere est labore",
                                "et iure quia eos quis nihil",
                                AttachmentsPopupContentDisplayType.Preview),
                        new AttachmentsPopupContent("eaque quis veniam",
                                "sed et quis culpa",
                                AttachmentsPopupContentDisplayType.Auto),
                        new TextPopupContent("architecto odio repellendus"),
                        new FieldsPopupContent([new FieldInfo("token",
                                    "accusamus",
                                    "a",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("title",
                                    "consequatur",
                                    "tempora",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "quam eum rerum quia dolores",
                                "amet neque expedita")],
                        [new ExpressionInfo("return $feature.Name;",
                                "email",
                                "laudantium voluptates quod",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "status",
                                "dolor sunt id",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "password",
                                "ratione reprehenderit rerum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "category",
                                "enim nulla tempore",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptatibus culpa non",
                                "0ee8f4c2-a96c-8039-424f-8c78c4628a41",
                                () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "asperiores")]),
                        new AttributesDictionary(),
                        true,
                        "veritatis",
                        "nobis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "omnis",
                            4)),
                new Graphic(new Polyline([new MapPath([new MapPoint([174.1802,
                                870.7068,
                                256.4566,
                                763.7787]),
                            new MapPoint([733.7372,
                                992.5545,
                                975.3176,
                                827.1713]),
                            new MapPoint([7.7780,
                                332.0924,
                                810.0018]),
                            new MapPoint([845.0075,
                                746.6300])]),
                            new MapPath([new MapPoint([240.5140,
                                    705.2085,
                                    962.8463,
                                    723.3872]),
                                new MapPoint([858.1171,
                                    439.6680,
                                    445.6687,
                                    624.5505]),
                                new MapPoint([56.7774,
                                    749.3654,
                                    645.5942]),
                                new MapPoint([822.4324,
                                    819.4286,
                                    855.5171])]),
                            new MapPath([new MapPoint([35.0693,
                                    18.9753,
                                    923.3065]),
                                new MapPoint([250.7529,
                                    518.7858,
                                    177.7662,
                                    821.2029]),
                                new MapPoint([116.4473,
                                    920.1257,
                                    84.6426])])],
                        new SpatialReference(7,
                                "eligendi",
                                "quis",
                                "aut"),
                            true,
                            true),
                    new TextSymbol("non molestias quam",
                        new MapColor(160, 171, 155),
                        new MapColor(226, 199, 188),
                            new Dimension(278.5629),
                        new MapFont(new Dimension(634.6653),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            140.7470,
                        new MapColor(20, 72, 128),
                        new MapColor(198, 49, 218),
                            726.2853,
                        HorizontalAlignment.Right,
                            true,
                            771.3283,
                            new Dimension(860.2102),
                            true),
                    new PopupTemplate("est iusto et",
                            "necessitatibus",
                            ["repellendus",
                                "beatae",
                                "aliquam"],
                        [new FieldInfo("updatedAt",
                                "officiis",
                                "officiis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("id",
                                "maxime",
                                "quasi",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("createdAt",
                                "quos",
                                "vero",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new MediaPopupContent("est culpa eius",
                                "et nulla velit qui facere iure velit",
                            [new LineChartMediaInfo("adipisci sequi ipsum",
                                    "animi",
                                    "molestias nesciunt ullam",
                                new ChartMediaInfoValue(["quod",
                                        "beatae"],
                                        "voluptatem",
                                        "nam",
                                    [new ChartMediaInfoValueSeries("avatar",
                                            "ipsum",
                                            426.0469),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "quia",
                                            884.7866),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "quidem",
                                            347.2771),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "reiciendis",
                                            100.4274)],
                                    [new MapColor(9, 223, 97),
                                    new MapColor(220, 141, 233),
                                    new MapColor(8, 242, 91),
                                    new MapColor(138, 152, 207)])),
                            new BarChartMediaInfo("et eum esse",
                                    "velit",
                                    "sed nam tempore",
                                new ChartMediaInfoValue(["qui",
                                        "sed"],
                                        "maiores",
                                        "tenetur",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "iusto",
                                            905.2011),
                                    new ChartMediaInfoValueSeries("email",
                                            "tempore",
                                            526.1495),
                                    new ChartMediaInfoValueSeries("name",
                                            "ut",
                                            136.4540)],
                                    [new MapColor(70, 74, 150)])),
                            new BarChartMediaInfo("non praesentium explicabo",
                                    "fugit",
                                    "labore deserunt necessitatibus",
                                new ChartMediaInfoValue(["unde",
                                        "tempora"],
                                        "voluptatem",
                                        "ullam",
                                    [new ChartMediaInfoValueSeries("id",
                                            "labore",
                                            199.9218),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "est",
                                            620.3103),
                                    new ChartMediaInfoValueSeries("password",
                                            "accusantium",
                                            619.4612)],
                                    [new MapColor(158, 52, 143),
                                    new MapColor(83, 229, 96),
                                    new MapColor(191, 9, 47),
                                    new MapColor(99, 6, 215)])),
                            new ImageMediaInfo("hic tempore debitis",
                                    "suscipit",
                                    "rerum modi est",
                                new ImageMediaInfoValue("http://wilfrid.info",
                                        "https://edwina.name"),
                                    3.9509)],
                                6)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "email",
                                "adipisci enim exercitationem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "category",
                                "incidunt occaecati aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "phone",
                                "id molestiae aliquid",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("est sit aperiam",
                                "https://picsum.photos/640/480/?image=306",
                                "7a9f9ebf-2e25-b744-7db9-62a68c64a076",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "totam"),
                        new ActionToggle("vel et ut",
                                "cccd5a6c-db43-c17c-a551-a2c2d2765dc0",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "quasi")]),
                        new AttributesDictionary(),
                        true,
                        "inventore",
                        "voluptatem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "mollitia",
                            9)),
                new Graphic(new Polygon([new MapPath([new MapPoint([72.6946,
                                531.1807,
                                792.5282]),
                            new MapPoint([446.6218,
                                301.3405]),
                            new MapPoint([806.1247,
                                263.4110]),
                            new MapPoint([708.1490,
                                27.4686])]),
                            new MapPath([new MapPoint([167.4864,
                                    711.3158,
                                    130.3004]),
                                new MapPoint([178.7815,
                                    895.0234])])],
                        new SpatialReference(3,
                                "mollitia",
                                "minus",
                                "quia"),
                        new Point(-28.9645,
                                -67.0734,
                                -20.2344,
                                81.7570,
                                50.7456,
                            new SpatialReference(4,
                                    "voluptates",
                                    "tenetur",
                                    "ipsam"),
                                true,
                                true,
                                718.6303),
                            true,
                            true,
                            true),
                    new TextSymbol("totam ipsam ut",
                        new MapColor(111, 168, 36),
                        new MapColor(105, 14, 66),
                            new Dimension(919.2606),
                        new MapFont(new Dimension(933.5212),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            74.5349,
                        new MapColor(41, 80, 75),
                        new MapColor(45, 19, 229),
                            59.7588,
                        HorizontalAlignment.Center,
                            true,
                            470.7368,
                            new Dimension(252.8538),
                            true),
                    new PopupTemplate("dolorem commodi praesentium",
                            "non",
                            ["illo",
                                "eum",
                                "voluptatum"],
                        [new FieldInfo("id",
                                "veritatis",
                                "molestiae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("email",
                                "quaerat",
                                "facere",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("createdAt",
                                "facere",
                                "occaecati",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Var)],
                        [new TextPopupContent("cupiditate optio porro")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "avatar",
                                "molestias quaerat unde",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "token",
                                "odio asperiores optio",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "email",
                                "asperiores beatae aut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("eligendi voluptate architecto",
                                "27d97ed8-5c8a-eb71-b4f7-5e42bf307736",
                                () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "accusantium"),
                        new ActionButton("officiis fuga dolor",
                                "https://picsum.photos/640/480/?image=733",
                                "059cb84a-6a12-b8dc-cc6e-5aee9ff093da",
                                () => { Console.WriteLine("deleniti"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "rerum"),
                        new ActionToggle("tenetur atque harum",
                                "06372fff-a848-78b4-fc0c-61310c198cad",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "et"),
                        new ActionButton("voluptates sint eos",
                                "https://picsum.photos/640/480/?image=495",
                                "c847a481-40ce-eac4-3dcb-22f7d2d0417f",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "vel")]),
                        new AttributesDictionary(),
                        true,
                        "quae",
                        "tempore",
                        new GraphicOrigin(Guid.NewGuid(),
                            "hic",
                            7)),
                new Graphic(new Polyline([new MapPath([new MapPoint([842.7359,
                                222.4433,
                                1.7573,
                                883.5736]),
                            new MapPoint([215.9081,
                                9.3278]),
                            new MapPoint([749.5689,
                                438.4610,
                                747.2611,
                                768.4788])]),
                            new MapPath([new MapPoint([298.0816,
                                    47.8307,
                                    798.8083]),
                                new MapPoint([3.8934,
                                    840.3131,
                                    387.6833,
                                    681.5473])])],
                        new SpatialReference(9,
                                "ut",
                                "sequi",
                                "tempora"),
                            true,
                            true),
                    new TextSymbol("exercitationem exercitationem natus",
                        new MapColor(207, 180, 124),
                        new MapColor(15, 46, 238),
                            new Dimension(454.9819),
                        new MapFont(new Dimension(17.7074),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            57.8965,
                        new MapColor(252, 224, 56),
                        new MapColor(228, 133, 120),
                            464.6456,
                        HorizontalAlignment.Center,
                            true,
                            890.0572,
                            new Dimension(57.2404),
                            true),
                    new PopupTemplate("perspiciatis error odit",
                            "voluptas",
                            ["fuga",
                                "rerum",
                                "omnis"],
                        [new FieldInfo("createdAt",
                                "cumque",
                                "reiciendis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("name",
                                "nobis",
                                "voluptatem",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new FieldsPopupContent([new FieldInfo("comment",
                                    "quasi",
                                    "suscipit",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("avatar",
                                    "eos",
                                    "eius",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("createdAt",
                                    "maiores",
                                    "autem",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "esse perspiciatis et deleniti eveniet aut dolore",
                                "repellendus nihil cum")],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "name",
                                "est eligendi tempore",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptatibus doloremque autem",
                                "edb9d5cf-80cf-2d07-0d40-46273465fb4e",
                                () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "laboriosam"),
                        new ActionToggle("quidem natus voluptatibus",
                                "0529dd47-0402-cca4-0cf6-e061a8d4229a",
                                () => { Console.WriteLine("occaecati"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "neque"),
                        new ActionToggle("neque voluptatem neque",
                                "b0358630-38ff-9ff6-81bd-da79fb33870f",
                                () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "et"),
                        new ActionToggle("omnis non beatae",
                                "5a45b108-0231-87ee-db3a-f4c48a2ad2e2",
                                () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "nobis")]),
                        new AttributesDictionary(),
                        true,
                        "et",
                        "quasi",
                        new GraphicOrigin(Guid.NewGuid(),
                            "similique",
                            8))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["reiciendis",
                    "ut",
                    "tempore",
                    "consequatur"],
                    ["token",
                        "token",
                        "id",
                        "createdAt"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("avatar");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("token",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polyline([new MapPath([new MapPoint([806.9960,
                                424.8010]),
                            new MapPoint([767.3337,
                                738.2335]),
                            new MapPoint([445.6488,
                                811.5753,
                                183.1275,
                                803.4081])])],
                        new SpatialReference(2,
                                "eius",
                                "repudiandae",
                                "consectetur"),
                            true,
                            true),
                    new TextSymbol("sed tempore nemo",
                        new MapColor(128, 118, 18),
                        new MapColor(29, 79, 73),
                            new Dimension(229.0298),
                        new MapFont(new Dimension(204.4060),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            720.8662,
                        new MapColor(53, 134, 217),
                        new MapColor(93, 217, 114),
                            592.2230,
                        HorizontalAlignment.Left,
                            true,
                            57.1796,
                            new Dimension(612.0817),
                            true),
                    new PopupTemplate("quaerat et veritatis",
                            "neque",
                            ["sunt",
                                "praesentium",
                                "architecto",
                                "aut"],
                        [new FieldInfo("token",
                                "explicabo",
                                "quia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Var)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "velit",
                                    "aut amet cumque"))],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "avatar",
                                "ipsam accusantium molestiae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "title",
                                "delectus ea quasi",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("non quis maiores",
                                "c1d95696-a5a2-dc0e-140c-52c4789f888a",
                                () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "dolores"),
                        new ActionButton("ex expedita qui",
                                "https://picsum.photos/640/480/?image=777",
                                "87f35dc7-bf96-7348-d82c-094a7019ed18",
                                () => { Console.WriteLine("perspiciatis"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "esse"),
                        new ActionToggle("ipsum voluptas natus",
                                "de4f72c8-1bc4-396d-168d-b43c5fb2732c",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "harum"),
                        new ActionButton("nisi quasi dolores",
                                "https://picsum.photos/640/480/?image=348",
                                "fe397bcc-84a8-49d0-53d1-3af8a3b2b2dc",
                                () => { Console.WriteLine("perspiciatis"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "eum")]),
                        new AttributesDictionary(),
                        true,
                        "repellendus",
                        "occaecati",
                        new GraphicOrigin(Guid.NewGuid(),
                            "cumque",
                            8))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([1,
                    1],
                    true,
                    773.4247,
                    978.2257,
                    "3.4.8.6",
                new Polyline([new MapPath([new MapPoint([164.2865,
                            186.3184]),
                        new MapPoint([358.5575,
                            173.2256,
                            538.5083,
                            173.2169])])],
                    new SpatialReference(3,
                            "magnam",
                            "amet",
                            "perspiciatis"),
                        true,
                        true),
                    3,
                    ["aut",
                        "quidem",
                        "corrupti"],
                    "quod",
                    new DateTime(2019, 8, 16, 0, 5, 41),
                    655.1643,
                    2,
                    "quas",
                    9),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([7,
                    1,
                    1,
                    4],
                    true,
                    618.7414,
                    198.6494,
                    "4.3.4.0",
                new Point(-69.9197,
                        71.8725,
                        162.9937,
                        -50.8613,
                        453.9262,
                    new SpatialReference(9,
                            "est",
                            "dignissimos",
                            "laborum"),
                        true,
                        true,
                        396.5465),
                    6,
                    ["impedit",
                        "totam",
                        "autem"],
                    "excepturi",
                    new DateTime(2009, 11, 4, 0, 23, 16),
                    263.5268,
                    7,
                    "qui",
                    4),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([2,
                    5,
                    1,
                    3],
                    true,
                    461.7470,
                    573.8301,
                    "0.7.4.8",
                new Polyline([new MapPath([new MapPoint([884.1801,
                            150.8387,
                            331.4792,
                            401.3670]),
                        new MapPoint([870.2607,
                            68.0753,
                            533.8255]),
                        new MapPoint([86.5869,
                            492.2662,
                            133.4114,
                            750.5770]),
                        new MapPoint([62.2443,
                            936.9273,
                            64.5901])]),
                        new MapPath([new MapPoint([594.2582,
                                788.8669]),
                            new MapPoint([195.2032,
                                366.5888,
                                208.9661,
                                593.7851]),
                            new MapPoint([848.5579,
                                559.9370]),
                            new MapPoint([847.6104,
                                132.2846,
                                627.2876])]),
                        new MapPath([new MapPoint([107.8808,
                                14.6713,
                                843.3973]),
                            new MapPoint([488.7270,
                                671.8772]),
                            new MapPoint([0.6414,
                                86.6682,
                                34.7623])]),
                        new MapPath([new MapPoint([8.1626,
                                330.8228,
                                949.2861,
                                754.8457]),
                            new MapPoint([37.6656,
                                849.0790])])],
                    new SpatialReference(3,
                            "maiores",
                            "et",
                            "veritatis"),
                        true,
                        true),
                    9,
                    ["a",
                        "reiciendis",
                        "reprehenderit"],
                    "et",
                    new DateTime(2015, 6, 27, 22, 19, 23),
                    269.1067,
                    9,
                    "est",
                    2),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([5,
                    5],
                    true,
                    994.7484,
                    9.9939,
                    "0.5.8.5",
                new Extent(168.0608,
                        -53.0280,
                        -86.8040,
                        80.4358,
                        286.4803,
                        97.7332,
                        283.4879,
                        923.8029,
                    new SpatialReference(9,
                            "iure",
                            "nulla",
                            "aut"),
                        true,
                        true),
                    3,
                    ["odio",
                        "perferendis",
                        "perferendis"],
                    "id",
                    new DateTime(2011, 6, 19, 13, 34, 7),
                    982.4858,
                    7,
                    "animi",
                    7),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Hide;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Plus;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "laborum numquam repellendus"),
                ElevationInfoMode.RelativeToScene,
                    405.7275,
                ElevationUnit.Yards);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("expedita",
                    32783595.5741),
                    new Effect("eum",
                        32654156.5508)],
                    true,
                new FeatureFilter(160.2524,
                    new Polyline([new MapPath([new MapPoint([85.4345,
                                746.1027]),
                            new MapPoint([169.6915,
                                305.1289,
                                333.6167]),
                            new MapPoint([415.8421,
                                187.4194,
                                653.3575]),
                            new MapPoint([732.7599,
                                776.0627,
                                98.9798,
                                386.7930])]),
                            new MapPath([new MapPoint([996.0914,
                                    56.0424,
                                    174.9246]),
                                new MapPoint([100.3465,
                                    312.9650,
                                    138.2722,
                                    881.2196]),
                                new MapPoint([613.9663,
                                    586.0089]),
                                new MapPoint([935.0472,
                                    651.4386,
                                    497.2772])]),
                            new MapPath([new MapPoint([695.6507,
                                    844.1680,
                                    952.6737,
                                    411.2276]),
                                new MapPoint([134.9536,
                                    867.0494,
                                    342.5470])]),
                            new MapPath([new MapPoint([170.3436,
                                    354.9250,
                                    825.4050]),
                                new MapPoint([819.0497,
                                    583.0964,
                                    866.2310]),
                                new MapPoint([297.4073,
                                    666.5853,
                                    354.1488]),
                                new MapPoint([848.7363,
                                    719.0229,
                                    119.4788,
                                    693.6066])])],
                        new SpatialReference(9,
                                "nesciunt",
                                "ab",
                                "repellat"),
                            true,
                            true),
                        [3,
                            1],
                    SpatialRelationship.Disjoint,
                    new TimeExtent(new DateTime(2016, 11, 24, 14, 49, 52),
                            new DateTime(2008, 2, 2, 8, 29, 57)),
                        QueryUnits.Meters,
                        "City = 'Toronto'"),
                    [new Effect("soluta",
                        45177086.0968),
                        new Effect("qui",
                            738708.4017)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "updatedAt",
                    "expedita",
                    "voluptatem veniam voluptatibus repellat architecto",
                    1,
                    true,
                    true,
                    new { Value = "ea" },
                FieldValueType.PercentageOrRatio,
                new InheritedDomain("title")),
            new Field(default,
                    "comment",
                    "fugit",
                    "repellendus et dolor consectetur",
                    3,
                    true,
                    true,
                    new { Value = "dolor" },
                FieldValueType.LocationOrPlaceName,
                new InheritedDomain("status")),
            new Field(default,
                    "createdAt",
                    "eaque",
                    "inventore nihil et quaerat non in",
                    3,
                    true,
                    true,
                    new { Value = "fugit" },
                FieldValueType.None,
                new InheritedDomain("comment")),
            new Field(default,
                    "group",
                    "praesentium",
                    "eum quia voluptatem ea enim possimus sit",
                    6,
                    true,
                    true,
                    new { Value = "ipsum" },
                FieldValueType.Binary,
                new InheritedDomain("phone"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-120.8564,
                    106.2659,
                    -58.3782,
                    -63.6150,
                    751.3642,
                    322.2691,
                    144.2487,
                    801.8734,
                new SpatialReference(7,
                        "sit",
                        "veniam",
                        "ipsa"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polygon;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterLeft,
                    "et",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    1250651.8568,
                    25944.7665,
                    true,
                    new Dimension(488.8089),
                new TextSymbol("dolore provident cumque",
                    new MapColor(36, 131, 146),
                    new MapColor(140, 80, 199),
                        new Dimension(899.3394),
                    new MapFont(new Dimension(101.9202),
                            "Bookman",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        427.4037,
                    new MapColor(121, 203, 162),
                    new MapColor(110, 42, 233),
                        827.0479,
                    HorizontalAlignment.Left,
                        true,
                        94.7956,
                        new Dimension(895.2064),
                        true),
                    true,
                    "Street = '123 Main St.'")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("enim",
                SortOrder.Ascending,
                    "enim")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("reiciendis harum fugit",
                    "repellat",
                    ["quis",
                        "nesciunt",
                        "qui"],
                [new FieldInfo("id",
                        "est",
                        "dolorem",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.ShortDateLeLongTime24),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("token",
                        "quisquam",
                        "sunt",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(6,
                            true,
                        DateFormat.ShortDateLeShortTime),
                        true,
                        true,
                    StatisticType.Avg),
                new FieldInfo("createdAt",
                        "omnis",
                        "et",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.LongMonthDayYearShortTime24),
                        true,
                        true,
                    StatisticType.Sum)],
                [new FieldsPopupContent([new FieldInfo("updatedAt",
                            "et",
                            "quasi",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("id",
                            "enim",
                            "illo",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("password",
                            "sequi",
                            "incidunt",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Min)],
                        "assumenda aspernatur soluta est voluptatibus harum quaerat",
                        "aut et molestiae"),
                new MediaPopupContent("in aperiam laborum",
                        "optio earum saepe illum",
                    [new ImageMediaInfo("repudiandae voluptatibus maxime",
                            "qui",
                            "velit voluptas ut",
                        new ImageMediaInfoValue("http://dameon.com",
                                "http://destin.net"),
                            616.5573)],
                        7),
                new RelationshipPopupContent("saepe exercitationem quis",
                        "quia autem dolores esse",
                        3,
                        "exercitationem",
                    [new RelatedRecordsInfoFieldOrder("dolorem",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("nihil",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("eaque",
                        OrderBy.Asc)],
                        7),
                new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "corrupti",
                            "pariatur blanditiis quia"))],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "password",
                        "architecto reprehenderit voluptatem",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "id",
                        "quis temporibus et",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "group",
                        "excepturi voluptatem vero",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "title",
                        "quia id et",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("nesciunt architecto recusandae",
                        "https://picsum.photos/640/480/?image=176",
                        "6f9e0f60-9c6f-54cd-5d6a-dbd5d5be768b",
                        () => { Console.WriteLine("at"); return Task.CompletedTask; },
                        "updatedAt",
                        true,
                        true,
                        true,
                        "qui"),
                new ActionButton("est et consequatur",
                        "https://picsum.photos/640/480/?image=234",
                        "f8bf06d6-54e6-2217-cc1d-151285cd4ca7",
                        () => { Console.WriteLine("unde"); return Task.CompletedTask; },
                        "avatar",
                        true,
                        true,
                        true,
                        "ea"),
                new ActionToggle("voluptatum ab qui",
                        "ea4b0145-3307-d7f0-cd37-3ae2a8389baf",
                        () => { Console.WriteLine("corporis"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "id",
                        "beatae")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "deleniti",
                    "in",
                    650.3750,
                    ["est",
                        "voluptatem",
                        "et"],
                    new DateTime(2017, 3, 17, 1, 49, 22),
                    "et",
                    "aliquid fuga quaerat rerum et autem",
                new Extent(-11.2735,
                        95.6086,
                        -71.5311,
                        -64.8628,
                        52.6940,
                        160.7876,
                        605.2494,
                        254.1600,
                    new SpatialReference(9,
                            "omnis",
                            "sunt",
                            "aperiam"),
                        true,
                        true),
                    ["non",
                        "quisquam",
                        "et"],
                    "rerum",
                    new DateTime(2013, 2, 23, 7, 42, 4),
                    "password",
                    993.9179);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("ut ut illum",
                    new MapColor(135, 164, 132),
                    new MapColor(173, 167, 52),
                        new Dimension(959.3726),
                    new MapFont(new Dimension(902.6847),
                            "Arial",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        584.2188,
                    new MapColor(110, 179, 11),
                    new MapColor(134, 8, 2),
                        214.1109,
                    HorizontalAlignment.Right,
                        true,
                        799.2425,
                        new Dimension(475.6574),
                        true),
                    "assumenda",
                [new OpacityVariable("voluptatum",
                        "commodi",
                    [new OpacityStop(654.7557,
                            0.3212,
                            "ea"),
                    new OpacityStop(98.3824,
                            0.6300,
                            "quis")],
                    new VisualVariableLegendOptions(true,
                            "ad et voluptates"),
                        "temporibus",
                        "vero et dolorem"),
                new RotationVariable("et",
                    Axis.Heading,
                    RotationType.Geographic,
                    new VisualVariableLegendOptions(true,
                            "officia voluptatibus totam"),
                        "provident",
                        "ut id suscipit"),
                new ColorVariable("voluptas",
                        "corporis",
                    [new ColorStop(513.8568,
                        new MapColor(203, 182, 190),
                            "aspernatur")],
                    new VisualVariableLegendOptions(true,
                            "et mollitia quia"),
                        "nihil",
                        "repellat aliquid nulla"),
                new ColorVariable("cupiditate",
                        "porro",
                    [new ColorStop(366.5833,
                        new MapColor(219, 135, 205),
                            "voluptatem"),
                    new ColorStop(84.5234,
                        new MapColor(7, 42, 216),
                            "aut"),
                    new ColorStop(28.5174,
                        new MapColor(140, 40, 37),
                            "corporis")],
                    new VisualVariableLegendOptions(true,
                            "vitae quidem nam"),
                        "pariatur",
                        "omnis ab debitis")],
                new AuthoringInfo(ClassificationMethod.Manual,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                            new MapColor(25, 199, 50),
                            new MapColor(31, 89, 246)),
                        new AlgorithmicColorRamp(Algorithm.Hsv,
                            new MapColor(74, 85, 139),
                            new MapColor(4, 70, 97))]),
                        305.9560,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(489.6000,
                                974.7717),
                        new AuthoringInfoField1ClassBreakInfos(313.6216,
                                674.6740)],
                            "architecto",
                            "sit",
                            "alias"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(774.2829,
                                193.7554),
                        new AuthoringInfoField1ClassBreakInfos(728.2634,
                                346.6626),
                        new AuthoringInfoField1ClassBreakInfos(469.4626,
                                935.6560),
                        new AuthoringInfoField1ClassBreakInfos(853.6770,
                                544.3614)],
                            "quia",
                            "aliquid",
                            "sunt"),
                        ["delectus",
                            "id",
                            "minima",
                            "natus"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "blanditiis",
                        true,
                    LengthUnit.NauticalMiles,
                        163.4408,
                        47.5137,
                        723.1684,
                        184.9642));
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(6,
                    "possimus",
                    "quia",
                    "laboriosam");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("doloremque cupiditate magnam ut corrupti",
                DrawingTool.Rectangle,
                    "group",
                new Graphic(new Point(153.5224,
                            37.8011,
                            71.9110,
                            -58.8237,
                            483.7511,
                        new SpatialReference(6,
                                "reprehenderit",
                                "excepturi",
                                "quo"),
                            true,
                            true,
                            279.6628),
                    new TextSymbol("omnis et autem",
                        new MapColor(76, 102, 189),
                        new MapColor(118, 182, 130),
                            new Dimension(180.0332),
                        new MapFont(new Dimension(638.9346),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            746.1461,
                        new MapColor(182, 79, 144),
                        new MapColor(31, 124, 175),
                            699.8026,
                        HorizontalAlignment.Center,
                            true,
                            803.1446,
                            new Dimension(731.3501),
                            true),
                    new PopupTemplate("labore dolorum quasi",
                            "quaerat",
                            ["quis",
                                "et",
                                "ut",
                                "ipsa"],
                        [new FieldInfo("category",
                                "aut",
                                "harum",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new AttachmentsPopupContent("ut perferendis laborum",
                                "vitae qui nesciunt quae aperiam vero debitis",
                                AttachmentsPopupContentDisplayType.Auto),
                        new AttachmentsPopupContent("ullam ipsa illum",
                                "architecto earum ut facilis magni",
                                AttachmentsPopupContentDisplayType.Preview),
                        new TextPopupContent("sit ex commodi")],
                        [new ExpressionInfo("return Date();",
                                "email",
                                "illum voluptatem voluptatibus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "status",
                                "deserunt occaecati veniam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("enim aut harum",
                                "https://picsum.photos/640/480/?image=1024",
                                "354be101-23c2-1d7d-f03e-babfd852bf32",
                                () => { Console.WriteLine("saepe"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "incidunt")]),
                        new AttributesDictionary(),
                        true,
                        "quia",
                        "minima",
                        new GraphicOrigin(Guid.NewGuid(),
                            "maxime",
                            7)),
                    new Thumbnail("consequatur",
                        "ut",
                        18.7547,
                        91.3442))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2006, 2, 6, 17, 36, 34),
                    new DateTime(2001, 5, 22, 12, 17, 50));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("consequatur",
                    "exercitationem",
                new TimeExtent(new DateTime(2005, 2, 3, 7, 2, 17),
                        new DateTime(2008, 10, 16, 8, 0, 3)),
                new TimeInterval(TemporalTime.Minutes,
                        538.9764),
                    [new DateTime(2000, 2, 26, 17, 18, 47),
                        new DateTime(2000, 7, 10, 2, 9, 58),
                        new DateTime(2002, 9, 6, 8, 5, 17),
                        new DateTime(2012, 9, 17, 1, 49, 29)],
                    "Europe/Sofia",
                    "voluptatibus");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    410.1313);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2004, 1, 20, 12, 12, 33),
                    new DateTime(2019, 8, 15, 21, 5, 3));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
