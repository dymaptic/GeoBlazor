@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("quidem")"
                        Title="@("ea omnis id")"
                        Opacity="@(0.4320)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        BlendMode="@(BlendMode.SourceAtop)"
                        DefinitionExpression="@("autem")"
                        DisplayField="@("excepturi")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("accusamus",
                            39069331.5900))"
                        FullExtent="@(new Extent(-80.3926,
                                17.1306,
                                49.4730,
                                -68.1851,
                                927.0448,
                                641.8446,
                                408.7472,
                                175.2021,
                            new SpatialReference(8,
                                    "corrupti",
                                    "eius",
                                    "corrupti"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Multipoint)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(31820962.1776)"
                        MinScale="@(14005.8794)"
                        ObjectIdField="@("enim")"
                        OutFields="@(["quos",
                            "ut"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(135.6618)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(6,
                                "harum",
                                "fugiat",
                                "tempora"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Minutes)"
                            Value="@(592.7715)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("sit")"
                            EndField="@("voluptas")"
                            Stops="@([new DateTime(2006, 11, 24, 2, 54, 41),
                                new DateTime(2010, 7, 2, 18, 14, 33),
                                new DateTime(2003, 7, 15, 8, 44, 29)])"
                            TimeZone="@("Europe/Warsaw")"
                            TrackIdField="@("eos")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Decades)"
                                Value="@(456.9455)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2012, 6, 2, 12, 10, 22))"
                                End="@(new DateTime(2015, 3, 4, 8, 23, 19))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2004, 4, 21, 15, 34, 24))"
                            End="@(new DateTime(2010, 9, 13, 14, 23, 22))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("explicabo quo et praesentium voluptas doloremque")"
                            DrawingTool="@(DrawingTool.RightArrow)"
                            Name="@("comment")"
                            Prototype="@(new Graphic(new Polygon([new MapPath([new MapPoint([510.8703,
                                            235.0220,
                                            296.2211]),
                                        new MapPoint([776.0245,
                                            856.9577,
                                            351.4593,
                                            443.8230])]),
                                        new MapPath([new MapPoint([459.2838,
                                                702.8581,
                                                232.0651,
                                                843.0409]),
                                            new MapPoint([343.5565,
                                                234.6064,
                                                1.2126]),
                                            new MapPoint([180.5563,
                                                782.3688,
                                                546.9317,
                                                7.8767]),
                                            new MapPoint([580.4122,
                                                558.1239,
                                                250.5334])]),
                                        new MapPath([new MapPoint([231.4998,
                                                358.0556]),
                                            new MapPoint([850.4429,
                                                662.5040,
                                                997.6115,
                                                625.1509])])],
                                    new SpatialReference(4,
                                            "nam",
                                            "ipsa",
                                            "ut"),
                                    new Point(-139.1767,
                                            -67.3853,
                                            -82.1889,
                                            -43.8797,
                                            488.6724,
                                        new SpatialReference(7,
                                                "dolor",
                                                "aspernatur",
                                                "sunt"),
                                            true,
                                            true,
                                            477.6010),
                                        true,
                                        true,
                                        true),
                                new TextSymbol("facilis et sit",
                                    new MapColor(115, 178, 49),
                                    new MapColor(87, 107, 156),
                                        new Dimension(279.7634),
                                    new MapFont(new Dimension(539.9420),
                                            "Helvetica",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        969.3109,
                                    new MapColor(111, 202, 7),
                                    new MapColor(112, 75, 236),
                                        118.7116,
                                    HorizontalAlignment.Right,
                                        true,
                                        299.1662,
                                        new Dimension(233.5649),
                                        true),
                                new PopupTemplate("sed maxime quia",
                                        "iste",
                                        ["officiis",
                                            "velit",
                                            "molestiae"],
                                    [new FieldInfo("title",
                                            "ipsum",
                                            "numquam",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("title",
                                            "rerum",
                                            "ducimus",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Var)],
                                    [new MediaPopupContent("at maiores exercitationem",
                                            "sunt aut eos repellendus sunt",
                                        [new ColumnChartMediaInfo("consequatur debitis rerum",
                                                "reiciendis",
                                                "qui maxime cupiditate",
                                            new ChartMediaInfoValue(["incidunt",
                                                    "repellat",
                                                    "et",
                                                    "qui"],
                                                    "consequatur",
                                                    "molestias",
                                                [new ChartMediaInfoValueSeries("avatar",
                                                        "et",
                                                        889.7987),
                                                new ChartMediaInfoValueSeries("updatedAt",
                                                        "voluptatem",
                                                        707.8567),
                                                new ChartMediaInfoValueSeries("password",
                                                        "dolor",
                                                        206.9113)],
                                                [new MapColor(25, 78, 254),
                                                new MapColor(64, 168, 56)])),
                                        new ColumnChartMediaInfo("eligendi quae suscipit",
                                                "esse",
                                                "voluptatum libero eaque",
                                            new ChartMediaInfoValue(["asperiores",
                                                    "impedit"],
                                                    "odio",
                                                    "id",
                                                [new ChartMediaInfoValueSeries("password",
                                                        "est",
                                                        26.9136),
                                                new ChartMediaInfoValueSeries("updatedAt",
                                                        "dolorum",
                                                        558.3572),
                                                new ChartMediaInfoValueSeries("group",
                                                        "nemo",
                                                        206.9858)],
                                                [new MapColor(232, 22, 247),
                                                new MapColor(42, 119, 254)]))],
                                            4),
                                    new TextPopupContent("voluptatem quo architecto")],
                                    [new ExpressionInfo("return $feature.Name;",
                                            "password",
                                            "ea voluptatem tenetur",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "email",
                                            "sequi architecto sunt",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "title",
                                            "voluptas quis omnis",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("et repudiandae doloremque",
                                            "da6a6174-254f-4959-fa72-e8f18b5ce2c7",
                                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "phone",
                                            "adipisci"),
                                    new ActionToggle("est neque officia",
                                            "74f023d5-39e8-ba5c-a7e1-397d36fa9c5c",
                                            () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "category",
                                            "eum")]),
                                    new AttributesDictionary(),
                                    true,
                                    "nobis",
                                    "rem",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "quae",
                                        9)))"
                            Thumbnail="@(new Thumbnail("est",
                                "quaerat",
                                60.4221,
                                121.7256))">
                        </FeatureTemplate>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(139, 177, 88),
                                        new MapColor(163, 7, 143)),
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(92, 106, 45),
                                        new MapColor(155, 3, 248)),
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(139, 28, 160),
                                        new MapColor(241, 88, 44))]),
                                    155.3540,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(422.6059,
                                            893.3785),
                                    new AuthoringInfoField1ClassBreakInfos(254.9126,
                                            769.0368),
                                    new AuthoringInfoField1ClassBreakInfos(783.4518,
                                            861.0660)],
                                        "reiciendis",
                                        "assumenda",
                                        "delectus"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(668.0875,
                                            955.2470)],
                                        "quia",
                                        "occaecati",
                                        "tempore"),
                                    ["ut",
                                        "ut",
                                        "qui"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "eos",
                                    true,
                                LengthUnit.Inches,
                                    350.8307,
                                    972.3320,
                                    356.9222,
                                    661.2547))">
                        </UniqueValueRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("minima et perferendis")"
                            StringContent="@("exercitationem")"
                            OutFields="@(["sunt",
                                "et"])"
                            FieldInfos="@([new FieldInfo("category",
                                    "debitis",
                                    "aperiam",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("name",
                                    "natus",
                                    "voluptatem",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)])"
                            Content="@([new TextPopupContent("dolorem corporis in"),
                            new AttachmentsPopupContent("repellat velit officia",
                                    "adipisci inventore autem qui numquam",
                                    AttachmentsPopupContentDisplayType.Preview),
                            new RelationshipPopupContent("asperiores mollitia et",
                                    "repellat hic unde perferendis optio blanditiis sequi",
                                    9,
                                    "suscipit",
                                [new RelatedRecordsInfoFieldOrder("nesciunt",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("ab",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("consectetur",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("aperiam",
                                    OrderBy.Asc)],
                                    3)])"
                            ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "category",
                                    "dolor ut labore",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "id",
                                    "quisquam blanditiis error",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "status",
                                    "vitae consequatur tempore",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("ducimus est sint",
                                    "https://picsum.photos/640/480/?image=569",
                                    "be6a930c-f63f-9a20-f8db-5c57ce3b358d",
                                    () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                    "phone",
                                    true,
                                    true,
                                    true,
                                    "voluptatem"),
                            new ActionToggle("qui est quia",
                                    "1bbbb846-596a-dbee-4c58-ef6345f1f4c5",
                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "name",
                                    "ea"),
                            new ActionButton("iure architecto amet",
                                    "https://picsum.photos/640/480/?image=633",
                                    "96203c3b-cec5-cbac-331c-1d318165b41a",
                                    () => { Console.WriteLine("hic"); return Task.CompletedTask; },
                                    "title",
                                    true,
                                    true,
                                    true,
                                    "nemo")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("modi")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("deleniti")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowRight)"
                            LabelExpression="@("similique")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(33938742.3061)"
                            MinScale="@(49362.0008)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(543.7016))"
                            Symbol="@(new TextSymbol("et tempora minus",
                                new MapColor(95, 8, 37),
                                new MapColor(126, 139, 211),
                                    new Dimension(392.0196),
                                new MapFont(new Dimension(251.7107),
                                        "Courier New",
                                    MapFontStyle.Normal,
                                    FontWeight.Bold,
                                    TextDecoration.LineThrough),
                                    618.4672,
                                new MapColor(103, 201, 79),
                                new MapColor(114, 225, 8),
                                    992.9628,
                                HorizontalAlignment.Right,
                                    true,
                                    504.5639,
                                    new Dimension(982.5700),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Street = '123 Main St.'")">
                        </Label>
                        <Field 
                            Name="@("phone")"
                            Alias="@("pariatur")"
                            Description="@("aliquam tempore blanditiis eligendi")"
                            Length="@(4)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "ut" })"
                            ValueType="@(FieldValueType.CountOrAmount)"
                            Domain="@(new CodedValueDomain<string>())">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("dolores",
                                47313964.1503),
                                new Effect("et",
                                    25989024.0455),
                                new Effect("iure",
                                    32825734.4573),
                                new Effect("pariatur",
                                    40008832.1882)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(92.7684,
                                new Polyline([new MapPath([new MapPoint([217.8410,
                                            497.0902,
                                            985.0278]),
                                        new MapPoint([22.6785,
                                            589.9052,
                                            400.2878,
                                            597.1709]),
                                        new MapPoint([397.4504,
                                            798.2333])])],
                                    new SpatialReference(8,
                                            "quod",
                                            "nemo",
                                            "aut"),
                                        true,
                                        true),
                                    [6,
                                        6,
                                        6,
                                        3],
                                SpatialRelationship.Within,
                                new TimeExtent(new DateTime(2021, 9, 9, 17, 26, 40),
                                        new DateTime(2021, 7, 4, 20, 0, 52)),
                                    QueryUnits.Miles,
                                    "Name = 'John Doe'"))"
                            IncludedEffect="@([new Effect("et",
                                18482109.0565),
                                new Effect("eligendi",
                                    10600096.1068),
                                new Effect("atque",
                                    36252180.8447),
                                new Effect("natus",
                                    18309399.4313)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "consequatur vel neque"))"
                            Mode="@(ElevationInfoMode.RelativeToGround)"
                            Offset="@(724.8354)"
                            Unit="@(ElevationUnit.Kilometers)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Point(86.9280,
                            -41.3579,
                            68.1514,
                            -47.8835,
                            859.2835,
                        new SpatialReference(3,
                                "qui",
                                "nostrum",
                                "facilis"),
                            true,
                            true,
                            515.0258),
                    new TextSymbol("fugiat consequatur ullam",
                        new MapColor(74, 110, 145),
                        new MapColor(185, 205, 97),
                            new Dimension(635.2030),
                        new MapFont(new Dimension(477.2627),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            968.7173,
                        new MapColor(204, 221, 252),
                        new MapColor(179, 13, 241),
                            116.4995,
                        HorizontalAlignment.Center,
                            true,
                            815.1899,
                            new Dimension(387.7283),
                            true),
                    new PopupTemplate("recusandae sed libero",
                            "quidem",
                            ["modi",
                                "et"],
                        [new FieldInfo("title",
                                "nam",
                                "blanditiis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("updatedAt",
                                "optio",
                                "ea",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("status",
                                "rem",
                                "dolores",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new MediaPopupContent("aperiam temporibus corporis",
                                "neque et doloribus tempore necessitatibus ut",
                            [new ImageMediaInfo("est mollitia voluptatem",
                                    "quidem",
                                    "aperiam sunt nostrum",
                                new ImageMediaInfoValue("http://alena.info",
                                        "https://shane.com"),
                                    122.9342)],
                                2),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                    "blanditiis",
                                    "impedit excepturi vel")),
                        new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "sint",
                                    "nam aperiam quibusdam"))],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "token",
                                "dolor ipsa deleniti",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "name",
                                "similique ratione possimus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "name",
                                "ut et voluptas",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("ut fugiat impedit",
                                "ac2a059a-3c8b-4a71-0da2-b2a9537a3a69",
                                () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "velit"),
                        new ActionButton("accusamus repudiandae eum",
                                "https://picsum.photos/640/480/?image=898",
                                "e3bdc80c-55dc-6a82-638c-3dcd8b3a9b72",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "dolor"),
                        new ActionToggle("dolore libero totam",
                                "d2769a94-9387-d708-e07f-5f53d61c08f8",
                                () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "numquam"),
                        new ActionToggle("cum aut non",
                                "d77b0919-0c0d-d77e-8444-5a902f00a53a",
                                () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "dolorum")]),
                        new AttributesDictionary(),
                        true,
                        "et",
                        "quia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "est",
                            3)),
                new Graphic(new Point(158.4506,
                            -65.8116,
                            -107.2596,
                            -77.5774,
                            544.7919,
                        new SpatialReference(6,
                                "sunt",
                                "in",
                                "dicta"),
                            true,
                            true,
                            78.5724),
                    new TextSymbol("facilis minima et",
                        new MapColor(141, 31, 122),
                        new MapColor(203, 152, 46),
                            new Dimension(575.3848),
                        new MapFont(new Dimension(353.2863),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            930.4499,
                        new MapColor(122, 77, 2),
                        new MapColor(151, 131, 183),
                            934.1364,
                        HorizontalAlignment.Left,
                            true,
                            90.5859,
                            new Dimension(494.2573),
                            true),
                    new PopupTemplate("vitae dicta porro",
                            "labore",
                            ["officiis",
                                "minus"],
                        [new FieldInfo("category",
                                "sed",
                                "exercitationem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new TextPopupContent("quas nam itaque"),
                        new FieldsPopupContent([new FieldInfo("avatar",
                                    "et",
                                    "dicta",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("token",
                                    "inventore",
                                    "facere",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "corrupti fugiat consectetur laudantium aliquid",
                                "voluptatem illum saepe")],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "id",
                                "vero ut harum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "phone",
                                "est ipsa exercitationem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "id",
                                "harum unde harum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("eius occaecati enim",
                                "2207b5a1-6e19-fcc7-8852-540f1bed7e6c",
                                () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "rem"),
                        new ActionToggle("amet illum nostrum",
                                "fd6e413f-679d-c1ba-9e4c-c0d38c3e3d71",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "voluptatum")]),
                        new AttributesDictionary(),
                        true,
                        "unde",
                        "labore",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quia",
                            5))],
                [new Graphic(new Extent(-35.1764,
                            112.7861,
                            64.3349,
                            64.7295,
                            248.1478,
                            986.3972,
                            580.9719,
                            538.4281,
                        new SpatialReference(2,
                                "quaerat",
                                "nisi",
                                "vero"),
                            true,
                            true),
                    new TextSymbol("maiores atque earum",
                        new MapColor(247, 55, 162),
                        new MapColor(71, 103, 141),
                            new Dimension(846.9357),
                        new MapFont(new Dimension(400.5713),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            203.4856,
                        new MapColor(71, 180, 131),
                        new MapColor(190, 19, 116),
                            927.0750,
                        HorizontalAlignment.Left,
                            true,
                            530.9840,
                            new Dimension(246.8117),
                            true),
                    new PopupTemplate("molestiae eveniet iusto",
                            "magnam",
                            ["quia",
                                "dolorem"],
                        [new FieldInfo("title",
                                "minus",
                                "earum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("id",
                                "et",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new FieldsPopupContent([new FieldInfo("password",
                                    "odit",
                                    "dolorem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "eius aut sit itaque",
                                "aspernatur quisquam est"),
                        new RelationshipPopupContent("voluptates beatae nemo",
                                "voluptatum sapiente id debitis quia autem",
                                3,
                                "porro",
                            [new RelatedRecordsInfoFieldOrder("explicabo",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("deserunt",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("voluptatem",
                                OrderBy.Asc)],
                                1)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "updatedAt",
                                "iusto dolore accusamus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "title",
                                "ut quod nobis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("debitis totam excepturi",
                                "https://picsum.photos/640/480/?image=704",
                                "923da2fb-17ec-ac16-2c65-ca4c9428173c",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "voluptatem"),
                        new ActionButton("sed neque mollitia",
                                "https://picsum.photos/640/480/?image=1004",
                                "7d6a1c9b-a308-fe31-d046-091b203dddd5",
                                () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "similique"),
                        new ActionToggle("enim commodi praesentium",
                                "021b7cbb-5a14-3f1f-d9a3-5ea488a915c5",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "distinctio"),
                        new ActionToggle("deserunt enim quis",
                                "316ba1f6-54f5-b5f7-27a9-d47a9b77bf07",
                                () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "comment",
                                "tempore")]),
                        new AttributesDictionary(),
                        true,
                        "ullam",
                        "aut",
                        new GraphicOrigin(Guid.NewGuid(),
                            "officia",
                            9)),
                new Graphic(new Point(-51.5301,
                            -14.9900,
                            124.2679,
                            -37.7874,
                            760.1836,
                        new SpatialReference(4,
                                "aperiam",
                                "quisquam",
                                "voluptas"),
                            true,
                            true,
                            302.3065),
                    new TextSymbol("repellendus ea fugit",
                        new MapColor(66, 237, 34),
                        new MapColor(177, 92, 122),
                            new Dimension(243.0516),
                        new MapFont(new Dimension(574.1150),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            66.9065,
                        new MapColor(122, 203, 79),
                        new MapColor(111, 237, 159),
                            999.2523,
                        HorizontalAlignment.Left,
                            true,
                            795.6539,
                            new Dimension(671.4483),
                            true),
                    new PopupTemplate("qui ut consectetur",
                            "est",
                            ["sed",
                                "ab",
                                "ut"],
                        [new FieldInfo("name",
                                "et",
                                "alias",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("avatar",
                                "alias",
                                "impedit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new RelationshipPopupContent("quo repudiandae rerum",
                                "sit laudantium quo ipsum quibusdam",
                                1,
                                "sunt",
                            [new RelatedRecordsInfoFieldOrder("aperiam",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("voluptatem",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("nam",
                                OrderBy.Asc)],
                                8),
                        new RelationshipPopupContent("ea voluptas necessitatibus",
                                "nostrum consequatur saepe doloribus reiciendis",
                                8,
                                "suscipit",
                            [new RelatedRecordsInfoFieldOrder("possimus",
                                OrderBy.Desc)],
                                2)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "token",
                                "consectetur ea dolor",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "createdAt",
                                "rerum eligendi inventore",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "status",
                                "repudiandae ducimus voluptatem",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("voluptates ut earum",
                                "https://picsum.photos/640/480/?image=436",
                                "ded28495-13cd-679c-495e-671a263f7af8",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "placeat"),
                        new ActionToggle("quibusdam et non",
                                "1b5eab29-363a-a87a-11f5-7cc5a9c24c32",
                                () => { Console.WriteLine("esse"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "aliquid"),
                        new ActionButton("incidunt assumenda quis",
                                "https://picsum.photos/640/480/?image=215",
                                "292d9f4a-8e1a-9121-1835-da2685b42821",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "sapiente"),
                        new ActionToggle("suscipit tempora dignissimos",
                                "08305e93-3bc4-9ada-8016-f07aee3ac48d",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "vero")]),
                        new AttributesDictionary(),
                        true,
                        "quia",
                        "harum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sit",
                            4))],
                    ["accusamus",
                        "aut",
                        "quae"],
                [new Graphic(new Point(179.5390,
                            84.9294,
                            32.7895,
                            -50.9256,
                            296.9296,
                        new SpatialReference(3,
                                "et",
                                "et",
                                "ad"),
                            true,
                            true,
                            82.1160),
                    new TextSymbol("itaque quidem ut",
                        new MapColor(210, 152, 46),
                        new MapColor(83, 249, 26),
                            new Dimension(983.9683),
                        new MapFont(new Dimension(241.0932),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            523.7725,
                        new MapColor(120, 254, 86),
                        new MapColor(211, 32, 81),
                            391.6981,
                        HorizontalAlignment.Right,
                            true,
                            152.2937,
                            new Dimension(435.1659),
                            true),
                    new PopupTemplate("velit vel doloremque",
                            "qui",
                            ["deserunt",
                                "ut",
                                "repellat",
                                "repudiandae"],
                        [new FieldInfo("group",
                                "modi",
                                "qui",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new AttachmentsPopupContent("quia minus voluptas",
                                "maxime hic minima assumenda deserunt quasi",
                                AttachmentsPopupContentDisplayType.Preview),
                        new FieldsPopupContent([new FieldInfo("group",
                                    "cupiditate",
                                    "consequatur",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("avatar",
                                    "deleniti",
                                    "et",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("comment",
                                    "ut",
                                    "omnis",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "consequuntur facilis officia neque",
                                "qui saepe sint"),
                        new FieldsPopupContent([new FieldInfo("name",
                                    "molestias",
                                    "est",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("password",
                                    "non",
                                    "odit",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("token",
                                    "sunt",
                                    "atque",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "suscipit totam a saepe quas placeat vel",
                                "aut nemo ipsum")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "avatar",
                                "temporibus porro qui",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "title",
                                "placeat modi nemo",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "id",
                                "tenetur totam mollitia",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("pariatur dolorum sunt",
                                "https://picsum.photos/640/480/?image=61",
                                "e7f0f0f9-aba4-ce37-0b33-5bde4ab2a60b",
                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "blanditiis"),
                        new ActionToggle("harum labore eum",
                                "1331ceb7-b04d-b958-6b96-3f933ea8b691",
                                () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "expedita"),
                        new ActionToggle("molestias non voluptates",
                                "12bd2859-0f8a-053a-bcfe-ae116717b895",
                                () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "recusandae"),
                        new ActionToggle("reprehenderit alias autem",
                                "7b2b9408-b1de-a9d0-b21c-679ae02a016f",
                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "molestiae")]),
                        new AttributesDictionary(),
                        true,
                        "commodi",
                        "consequuntur",
                        new GraphicOrigin(Guid.NewGuid(),
                            "molestiae",
                            2)),
                new Graphic(new Extent(-86.4825,
                            -114.4030,
                            -5.1439,
                            80.6429,
                            620.6685,
                            84.1209,
                            159.3062,
                            744.5579,
                        new SpatialReference(2,
                                "quasi",
                                "natus",
                                "quia"),
                            true,
                            true),
                    new TextSymbol("nesciunt iure aliquam",
                        new MapColor(36, 238, 228),
                        new MapColor(236, 23, 247),
                            new Dimension(395.6013),
                        new MapFont(new Dimension(967.8882),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            634.5179,
                        new MapColor(80, 74, 33),
                        new MapColor(59, 196, 63),
                            404.4617,
                        HorizontalAlignment.Left,
                            true,
                            551.3800,
                            new Dimension(103.1479),
                            true),
                    new PopupTemplate("cum nihil odit",
                            "aut",
                            ["natus",
                                "tempora"],
                        [new FieldInfo("comment",
                                "accusamus",
                                "laboriosam",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("title",
                                "possimus",
                                "quisquam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("group",
                                "voluptatibus",
                                "necessitatibus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("comment",
                                "quidem",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new MediaPopupContent("sit hic sapiente",
                                "sed quos mollitia ut laboriosam porro reprehenderit",
                            [new BarChartMediaInfo("autem est dolorum",
                                    "saepe",
                                    "quasi delectus veritatis",
                                new ChartMediaInfoValue(["similique",
                                        "quo"],
                                        "dolorum",
                                        "dicta",
                                    [new ChartMediaInfoValueSeries("id",
                                            "mollitia",
                                            845.7614),
                                    new ChartMediaInfoValueSeries("email",
                                            "provident",
                                            613.0697)],
                                    [new MapColor(104, 168, 85),
                                    new MapColor(165, 5, 197),
                                    new MapColor(132, 193, 191),
                                    new MapColor(31, 214, 104)])),
                            new ImageMediaInfo("non aliquam sit",
                                    "facilis",
                                    "minus asperiores nobis",
                                new ImageMediaInfoValue("http://sigurd.biz",
                                        "http://abel.name"),
                                    956.6650),
                            new ImageMediaInfo("eum distinctio est",
                                    "eos",
                                    "nihil ea consequatur",
                                new ImageMediaInfoValue("https://otilia.name",
                                        "https://jonas.org"),
                                    118.2370),
                            new PieChartMediaInfo("necessitatibus est omnis",
                                    "facilis",
                                    "reiciendis in est",
                                new ChartMediaInfoValue(["vero",
                                        "asperiores",
                                        "non",
                                        "neque"],
                                        "ut",
                                        "unde",
                                    [new ChartMediaInfoValueSeries("avatar",
                                            "voluptatem",
                                            428.1894),
                                    new ChartMediaInfoValueSeries("updatedAt",
                                            "qui",
                                            249.7717),
                                    new ChartMediaInfoValueSeries("phone",
                                            "est",
                                            406.9268),
                                    new ChartMediaInfoValueSeries("status",
                                            "aliquid",
                                            937.7763)],
                                    [new MapColor(122, 220, 150)]))],
                                5)],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "title",
                                "molestiae non quo",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("sit eum repellat",
                                "https://picsum.photos/640/480/?image=678",
                                "2cf43578-a361-d2f7-6b32-09cef1861306",
                                () => { Console.WriteLine("excepturi"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "recusandae")]),
                        new AttributesDictionary(),
                        true,
                        "aspernatur",
                        "sunt",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quasi",
                            1))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["ducimus",
                    "nam",
                    "voluptatum",
                    "est"],
                    ["status",
                        "category"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("avatar");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("avatar",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polygon([new MapPath([new MapPoint([629.8882,
                                257.6807]),
                            new MapPoint([608.6061,
                                650.4550])]),
                            new MapPath([new MapPoint([99.2716,
                                    995.0876,
                                    356.8058]),
                                new MapPoint([547.9533,
                                    566.5909,
                                    947.9580]),
                                new MapPoint([189.2268,
                                    441.4066]),
                                new MapPoint([578.8583,
                                    867.8887,
                                    568.0555,
                                    503.2798])]),
                            new MapPath([new MapPoint([89.5815,
                                    400.0737,
                                    863.1646]),
                                new MapPoint([656.8312,
                                    610.7353]),
                                new MapPoint([277.6214,
                                    879.2953]),
                                new MapPoint([37.5808,
                                    158.1104,
                                    963.2237,
                                    744.7055])]),
                            new MapPath([new MapPoint([183.9927,
                                    3.1876]),
                                new MapPoint([930.4725,
                                    513.8191])])],
                        new SpatialReference(9,
                                "et",
                                "et",
                                "aut"),
                        new Point(94.8903,
                                -15.3152,
                                30.6161,
                                -62.2207,
                                925.6186,
                            new SpatialReference(7,
                                    "alias",
                                    "qui",
                                    "aut"),
                                true,
                                true,
                                547.9205),
                            true,
                            true,
                            true),
                    new TextSymbol("adipisci aliquid ut",
                        new MapColor(127, 109, 66),
                        new MapColor(40, 60, 178),
                            new Dimension(889.0184),
                        new MapFont(new Dimension(60.6859),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            367.5800,
                        new MapColor(23, 236, 187),
                        new MapColor(200, 248, 91),
                            885.3272,
                        HorizontalAlignment.Right,
                            true,
                            662.4111,
                            new Dimension(138.5096),
                            true),
                    new PopupTemplate("quaerat occaecati sequi",
                            "eos",
                            ["rem",
                                "optio",
                                "officiis"],
                        [new FieldInfo("phone",
                                "culpa",
                                "quis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("password",
                                "tempora",
                                "architecto",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new TextPopupContent("nihil sint sed"),
                        new FieldsPopupContent([new FieldInfo("group",
                                    "fuga",
                                    "est",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "ut culpa vel sequi libero nulla",
                                "consequatur et ratione")],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "category",
                                "voluptas explicabo eum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "status",
                                "est ut error",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "culpa praesentium natus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "group",
                                "ab eaque aut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("voluptatem nihil autem",
                                "https://picsum.photos/640/480/?image=955",
                                "d02665c0-16e0-55a2-194b-f9ef1133f5a1",
                                () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "deleniti",
                        "magnam",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            6))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([6,
                    6],
                    true,
                    727.5390,
                    93.3050,
                    "0.6.7.6",
                new Extent(165.7521,
                        95.6099,
                        43.8421,
                        63.2034,
                        200.9123,
                        78.0797,
                        911.5311,
                        212.7700,
                    new SpatialReference(4,
                            "voluptatem",
                            "placeat",
                            "fugit"),
                        true,
                        true),
                    3,
                    ["qui",
                        "sequi"],
                    "enim",
                    new DateTime(2015, 4, 19, 12, 48, 55),
                    387.5719,
                    7,
                    "quae",
                    3),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([5,
                    2,
                    6,
                    1],
                    true,
                    294.5528,
                    714.1108,
                    "8.0.8.2",
                new Point(2.8709,
                        -43.5033,
                        44.2351,
                        31.6213,
                        782.4428,
                    new SpatialReference(8,
                            "rem",
                            "voluptatem",
                            "omnis"),
                        true,
                        true,
                        291.3152),
                    3,
                    ["vero",
                        "delectus",
                        "aut",
                        "recusandae"],
                    "ipsum",
                    new DateTime(2017, 8, 14, 2, 53, 16),
                    213.5752,
                    7,
                    "ratione",
                    5),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([4,
                    3],
                    true,
                    268.5014,
                    900.5351,
                    "8.4.5.6",
                new Polygon([new MapPath([new MapPoint([86.1624,
                            303.3982,
                            620.3668]),
                        new MapPoint([542.6353,
                            596.5027,
                            806.7567,
                            146.1893])])],
                    new SpatialReference(5,
                            "ratione",
                            "ipsum",
                            "et"),
                    new Point(177.2552,
                            -83.7808,
                            -21.2723,
                            -21.0175,
                            65.3334,
                        new SpatialReference(1,
                                "impedit",
                                "et",
                                "earum"),
                            true,
                            true,
                            80.5708),
                        true,
                        true,
                        true),
                    6,
                    ["ab",
                        "consequatur"],
                    "et",
                    new DateTime(2002, 5, 9, 17, 55, 39),
                    468.7233,
                    9,
                    "ab",
                    5),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([9,
                    5,
                    5,
                    4],
                    true,
                    736.7370,
                    579.5383,
                    "7.2.3.4",
                new Point(-113.4731,
                        -77.7441,
                        -112.0535,
                        -35.7070,
                        5.8033,
                    new SpatialReference(6,
                            "est",
                            "sequi",
                            "nulla"),
                        true,
                        true,
                        759.3624),
                    9,
                    ["blanditiis",
                        "possimus",
                        "omnis",
                        "accusantium"],
                    "itaque",
                    new DateTime(2001, 2, 16, 19, 50, 43),
                    727.7487,
                    5,
                    "minus",
                    7),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Normal;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Name;",
                        "odio dolore asperiores"),
                ElevationInfoMode.AbsoluteHeight,
                    574.6070,
                ElevationUnit.Yards);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("dolores",
                    17652607.6516),
                    new Effect("placeat",
                        45152921.2771)],
                    true,
                new FeatureFilter(41.5844,
                    new Point(-45.1301,
                            51.9348,
                            -28.9621,
                            35.9858,
                            671.7040,
                        new SpatialReference(5,
                                "voluptatem",
                                "ut",
                                "non"),
                            true,
                            true,
                            196.6426),
                        [5,
                            2,
                            3],
                    SpatialRelationship.IndexIntersects,
                    new TimeExtent(new DateTime(2006, 11, 1, 11, 35, 34),
                            new DateTime(2013, 11, 6, 15, 10, 37)),
                        QueryUnits.Meters,
                        "Age > 21"),
                    [new Effect("eum",
                        35545841.2866),
                        new Effect("occaecati",
                            23163976.5420),
                        new Effect("qui",
                            41744403.8898)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "group",
                    "soluta",
                    "itaque facilis vitae nemo",
                    6,
                    true,
                    true,
                    new { Value = "repellat" },
                FieldValueType.TypeOrCategory,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "email",
                    "est",
                    "enim voluptatem non et quidem deleniti",
                    6,
                    true,
                    true,
                    new { Value = "quo" },
                FieldValueType.OrderedOrRanked,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "comment",
                    "asperiores",
                    "tempore doloremque dolores alias inventore",
                    7,
                    true,
                    true,
                    new { Value = "voluptatem" },
                FieldValueType.CountOrAmount,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "status",
                    "ad",
                    "enim doloribus illum occaecati consequuntur nobis",
                    5,
                    true,
                    true,
                    new { Value = "ipsa" },
                FieldValueType.OrderedOrRanked,
                    new CodedValueDomain<string>())];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(131.4419,
                    -25.2649,
                    28.4095,
                    80.9140,
                    646.5405,
                    94.9803,
                    846.4891,
                    714.3487,
                new SpatialReference(6,
                        "quisquam",
                        "ex",
                        "cupiditate"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Multipoint;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveAfter,
                    "in",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    18805642.5433,
                    23516.8134,
                    true,
                    new Dimension(468.5651),
                new TextSymbol("omnis cumque saepe",
                    new MapColor(50, 7, 152),
                    new MapColor(37, 142, 88),
                        new Dimension(656.7029),
                    new MapFont(new Dimension(545.5648),
                            "Garamond",
                        MapFontStyle.Oblique,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        694.5828,
                    new MapColor(80, 139, 149),
                    new MapColor(214, 241, 40),
                        239.7265,
                    HorizontalAlignment.Right,
                        true,
                        287.7705,
                        new Dimension(865.4142),
                        true),
                    true,
                    "ObjectID = 1"),
            new Label(LabelPlacement.BelowStart,
                    "veritatis",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    13451599.5165,
                    40695.8926,
                    true,
                    new Dimension(338.6890),
                new TextSymbol("quibusdam facere quia",
                    new MapColor(250, 208, 166),
                    new MapColor(114, 196, 97),
                        new Dimension(315.6055),
                    new MapFont(new Dimension(953.0916),
                            "Georgia",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        206.2234,
                    new MapColor(3, 223, 188),
                    new MapColor(44, 66, 120),
                        255.4476,
                    HorizontalAlignment.Right,
                        true,
                        961.4112,
                        new Dimension(389.2117),
                        true),
                    true,
                    "City = 'Toronto'"),
            new Label(LabelPlacement.CenterAfter,
                    "quibusdam",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    2297182.1248,
                    47111.3445,
                    true,
                    new Dimension(256.6309),
                new TextSymbol("accusamus illum accusamus",
                    new MapColor(180, 186, 232),
                    new MapColor(210, 117, 31),
                        new Dimension(641.4030),
                    new MapFont(new Dimension(107.9302),
                            "Georgia",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        4.6480,
                    new MapColor(108, 91, 185),
                    new MapColor(143, 229, 54),
                        367.9041,
                    HorizontalAlignment.Left,
                        true,
                        752.2732,
                        new Dimension(189.1203),
                        true),
                    true,
                    "Age > 21")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("similique",
                SortOrder.Ascending,
                    "voluptate"),
            new OrderedLayerOrderBy("veritatis",
                SortOrder.Descending,
                    "totam")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("sit quia dolore",
                    "dolores",
                    ["quia",
                        "voluptatem"],
                [new FieldInfo("status",
                        "aliquid",
                        "eos",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(1,
                            true,
                        DateFormat.ShortDateLe),
                        true,
                        true,
                    StatisticType.Stddev),
                new FieldInfo("status",
                        "deleniti",
                        "sunt",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(5,
                            true,
                        DateFormat.ShortDateLeShortTime),
                        true,
                        true,
                    StatisticType.Avg),
                new FieldInfo("title",
                        "dolorem",
                        "soluta",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.DayShortMonthYearShortTime24),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("group",
                        "unde",
                        "praesentium",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(2,
                            true,
                        DateFormat.ShortDateLongTime24),
                        true,
                        true,
                    StatisticType.Min)],
                [new RelationshipPopupContent("eum sint magnam",
                        "enim voluptatem quasi assumenda",
                        2,
                        "ipsam",
                    [new RelatedRecordsInfoFieldOrder("temporibus",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("ipsum",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("sed",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("voluptatum",
                        OrderBy.Desc)],
                        3),
                new FieldsPopupContent([new FieldInfo("title",
                            "necessitatibus",
                            "laboriosam",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("comment",
                            "aperiam",
                            "et",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Max)],
                        "occaecati at voluptates deleniti iste necessitatibus",
                        "aliquam perferendis aspernatur"),
                new AttachmentsPopupContent("velit et officia",
                        "eum expedita itaque est tempora possimus est",
                        AttachmentsPopupContentDisplayType.Preview),
                new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                            "aut",
                            "id dolor esse"))],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "id",
                        "molestiae earum omnis",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "phone",
                        "autem deserunt occaecati",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("vel facilis ad",
                        "https://picsum.photos/640/480/?image=538",
                        "b148edad-f713-988a-af48-8d55ef36b1f3",
                        () => { Console.WriteLine("nesciunt"); return Task.CompletedTask; },
                        "updatedAt",
                        true,
                        true,
                        true,
                        "sint"),
                new ActionButton("et nobis et",
                        "https://picsum.photos/640/480/?image=358",
                        "5808316e-eddb-1b04-34ad-af279388f7eb",
                        () => { Console.WriteLine("officiis"); return Task.CompletedTask; },
                        "title",
                        true,
                        true,
                        true,
                        "quia")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem();
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("aut dolor aspernatur",
                    new MapColor(138, 196, 71),
                    new MapColor(233, 90, 142),
                        new Dimension(351.0630),
                    new MapFont(new Dimension(271.7772),
                            "Verdana",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.None),
                        276.3124,
                    new MapColor(106, 9, 247),
                    new MapColor(24, 50, 14),
                        314.1268,
                    HorizontalAlignment.Center,
                        true,
                        442.2210,
                        new Dimension(584.7290),
                        true),
                    "quia",
                [new RotationVariable("consequuntur",
                    Axis.Heading,
                    RotationType.Arithmetic,
                    new VisualVariableLegendOptions(true,
                            "est mollitia nihil"),
                        "est",
                        "aspernatur qui dolor"),
                new SizeVariable("ea",
                        new Dimension(734.0730),
                        new Dimension(67.2236),
                        862.9768,
                        340.6691,
                        VisualValueRepresentation.Area,
                        VisualValueUnit.Feet,
                        "qui",
                        "temporibus",
                        true,
                        VisualAxis.Width,
                        "adipisci",
                        "et qui aut",
                    new VisualVariableLegendOptions(true,
                            "dicta aut dolorem")),
                new OpacityVariable("odit",
                        "adipisci",
                    [new OpacityStop(570.8413,
                            0.7523,
                            "odio"),
                    new OpacityStop(519.8603,
                            0.9763,
                            "consequuntur")],
                    new VisualVariableLegendOptions(true,
                            "numquam voluptatem veniam"),
                        "est",
                        "nihil aut minima")],
                new AuthoringInfo(ClassificationMethod.Quantile,
                    new AlgorithmicColorRamp(Algorithm.LabLch,
                        new MapColor(71, 24, 61),
                        new MapColor(78, 1, 148)),
                        180.3734,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(847.4225,
                                116.8150),
                        new AuthoringInfoField1ClassBreakInfos(389.5539,
                                71.1221)],
                            "dicta",
                            "voluptas",
                            "dignissimos"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(754.9955,
                                139.5867),
                        new AuthoringInfoField1ClassBreakInfos(223.4654,
                                970.3992)],
                            "dolorem",
                            "ut",
                            "similique"),
                        ["autem",
                            "sint"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "veritatis",
                        true,
                    LengthUnit.NauticalMiles,
                        410.7150,
                        671.9983,
                        679.0309,
                        14.6973));
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(8,
                    "rerum",
                    "aperiam",
                    "magni");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("voluptas qui vitae dolorum officiis veritatis qui",
                DrawingTool.Polygon,
                    "comment",
                new Graphic(new Extent(104.1876,
                            -139.3080,
                            79.2596,
                            -20.4251,
                            693.1757,
                            49.6236,
                            0.2302,
                            743.2623,
                        new SpatialReference(9,
                                "aut",
                                "omnis",
                                "illo"),
                            true,
                            true),
                    new TextSymbol("fuga dolorum omnis",
                        new MapColor(79, 67, 51),
                        new MapColor(153, 125, 237),
                            new Dimension(946.6193),
                        new MapFont(new Dimension(555.6026),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            24.3944,
                        new MapColor(36, 43, 88),
                        new MapColor(175, 189, 142),
                            988.8586,
                        HorizontalAlignment.Left,
                            true,
                            260.9416,
                            new Dimension(318.9232),
                            true),
                    new PopupTemplate("nesciunt dolorem saepe",
                            "et",
                            ["nemo",
                                "accusamus"],
                        [new FieldInfo("phone",
                                "quasi",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("token",
                                "reprehenderit",
                                "sint",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new FieldsPopupContent([new FieldInfo("category",
                                    "voluptatem",
                                    "quo",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("email",
                                    "minima",
                                    "excepturi",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("avatar",
                                    "voluptatem",
                                    "nihil",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("password",
                                    "quia",
                                    "non",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "eos natus velit ut laboriosam voluptatem perspiciatis",
                                "dolore quia eius"),
                        new FieldsPopupContent([new FieldInfo("group",
                                    "voluptatem",
                                    "ipsam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("id",
                                    "nihil",
                                    "officia",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "nihil rem totam dicta facere omnis est",
                                "perspiciatis laboriosam ut")],
                        [new ExpressionInfo("return Date();",
                                "category",
                                "velit quia provident",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "title",
                                "ut totam nulla",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "category",
                                "atque maiores dolorem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "email",
                                "in ipsa dolore",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("ullam blanditiis et",
                                "98b3e713-2df6-7d40-d52b-08a5670a5f7a",
                                () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "libero"),
                        new ActionToggle("aspernatur nisi porro",
                                "e0779345-22d0-9582-81d6-26550970927b",
                                () => { Console.WriteLine("a"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "non")]),
                        new AttributesDictionary(),
                        true,
                        "et",
                        "vero",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nihil",
                            2)),
                    new Thumbnail("officia",
                        "sunt",
                        241.1608,
                        279.3823)),
            new FeatureTemplate("quae rerum illum mollitia iusto",
                DrawingTool.Line,
                    "token",
                new Graphic(new Polygon([new MapPath([new MapPoint([482.4849,
                                140.9571,
                                651.0808]),
                            new MapPoint([348.2431,
                                881.4244])]),
                            new MapPath([new MapPoint([302.7756,
                                    251.2070]),
                                new MapPoint([621.1582,
                                    353.7588,
                                    973.5503,
                                    140.9838])])],
                        new SpatialReference(6,
                                "corrupti",
                                "eveniet",
                                "occaecati"),
                        new Point(13.9879,
                                85.9393,
                                -36.6097,
                                -45.3420,
                                502.1149,
                            new SpatialReference(4,
                                    "voluptate",
                                    "ut",
                                    "exercitationem"),
                                true,
                                true,
                                476.2270),
                            true,
                            true,
                            true),
                    new TextSymbol("quas nihil temporibus",
                        new MapColor(13, 87, 245),
                        new MapColor(159, 177, 183),
                            new Dimension(314.8997),
                        new MapFont(new Dimension(591.6759),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            381.9629,
                        new MapColor(254, 18, 41),
                        new MapColor(126, 226, 69),
                            693.4032,
                        HorizontalAlignment.Left,
                            true,
                            237.8235,
                            new Dimension(436.7794),
                            true),
                    new PopupTemplate("nihil dolorem tenetur",
                            "autem",
                            ["similique",
                                "natus",
                                "in",
                                "harum"],
                        [new FieldInfo("token",
                                "adipisci",
                                "repellendus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("ullam velit et",
                                "quasi est dolore aliquam ipsam",
                                8,
                                "sed",
                            [new RelatedRecordsInfoFieldOrder("doloribus",
                                OrderBy.Asc)],
                                2),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "doloribus",
                                    "ullam ducimus veniam")),
                        new AttachmentsPopupContent("aut et at",
                                "nihil error quis laudantium sit enim alias",
                                AttachmentsPopupContentDisplayType.Preview),
                        new RelationshipPopupContent("molestias architecto est",
                                "quidem tempore distinctio voluptatem",
                                9,
                                "aut",
                            [new RelatedRecordsInfoFieldOrder("velit",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("eaque",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("ab",
                                OrderBy.Desc)],
                                4)],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "title",
                                "consequatur dolor voluptas",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("est consectetur dolorem",
                                "https://picsum.photos/640/480/?image=589",
                                "28603d61-b215-8997-ea37-0ba15f249761",
                                () => { Console.WriteLine("iusto"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "commodi"),
                        new ActionToggle("unde ullam et",
                                "47b3c03b-58f6-dc52-d254-ed6cffbddc2e",
                                () => { Console.WriteLine("excepturi"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "impedit"),
                        new ActionButton("eos autem a",
                                "https://picsum.photos/640/480/?image=389",
                                "09f73f90-d20e-9d33-dbb8-99d72bb7489c",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "est")]),
                        new AttributesDictionary(),
                        true,
                        "omnis",
                        "voluptas",
                        new GraphicOrigin(Guid.NewGuid(),
                            "est",
                            6)),
                    new Thumbnail("et",
                        "et",
                        157.1394,
                        141.4848))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2000, 6, 9, 1, 21, 33),
                    new DateTime(2008, 5, 3, 16, 14, 41));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("asperiores",
                    "hic",
                new TimeExtent(new DateTime(2019, 1, 13, 16, 9, 2),
                        new DateTime(2002, 6, 4, 17, 46, 23)),
                new TimeInterval(TemporalTime.Weeks,
                        178.1588),
                    [new DateTime(2016, 3, 24, 17, 39, 8),
                        new DateTime(2009, 10, 3, 16, 10, 1),
                        new DateTime(2008, 7, 23, 2, 42, 45),
                        new DateTime(2016, 1, 8, 15, 47, 0)],
                    "Europe/Sofia",
                    "debitis");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Centuries,
                    395.0218);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2021, 5, 17, 11, 34, 26),
                    new DateTime(2004, 8, 9, 1, 13, 55));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
