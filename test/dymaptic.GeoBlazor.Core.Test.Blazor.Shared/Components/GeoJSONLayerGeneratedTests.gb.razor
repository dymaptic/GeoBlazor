@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("porro")"
                        Title="@("consequatur rerum voluptates")"
                        Opacity="@(0.8032)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.Exclusion)"
                        DefinitionExpression="@("itaque")"
                        DisplayField="@("adipisci")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("recusandae",
                            34421722.8505))"
                        FullExtent="@(new Extent(-0.5171,
                                115.6159,
                                -10.9287,
                                84.2906,
                                469.2733,
                                997.6119,
                                60.9666,
                                199.1743,
                            new SpatialReference(5,
                                    "aliquid",
                                    "impedit",
                                    "ea"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Point)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(15863167.0227)"
                        MinScale="@(39236.7367)"
                        ObjectIdField="@("qui")"
                        OutFields="@(["alias",
                            "atque"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(19.7043)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(7,
                                "corrupti",
                                "earum",
                                "blanditiis"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(652.9139)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("distinctio")"
                            EndField="@("perspiciatis")"
                            Stops="@([new DateTime(2023, 1, 12, 7, 55, 46),
                                new DateTime(2000, 2, 3, 21, 28, 12),
                                new DateTime(2004, 8, 19, 4, 46, 40),
                                new DateTime(2010, 7, 17, 20, 38, 5)])"
                            TimeZone="@("Pacific/Port_Moresby")"
                            TrackIdField="@("enim")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Hours)"
                                Value="@(667.2127)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2008, 8, 17, 0, 27, 2))"
                                End="@(new DateTime(2023, 5, 15, 14, 31, 31))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2015, 4, 12, 10, 15, 41))"
                            End="@(new DateTime(2011, 3, 11, 13, 47, 44))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("quae magnam sit dolores")"
                            DrawingTool="@(DrawingTool.Rectangle)"
                            Name="@("createdAt")"
                            Prototype="@(new Graphic(new Point(148.8847,
                                        39.4660,
                                        26.0615,
                                        -81.4360,
                                        482.1053,
                                    new SpatialReference(8,
                                            "repellat",
                                            "quia",
                                            "debitis"),
                                        true,
                                        true,
                                        370.2173),
                                new TextSymbol("animi ipsa et",
                                    new MapColor(51, 242, 77),
                                    new MapColor(30, 57, 145),
                                        new Dimension(795.1732),
                                    new MapFont(new Dimension(838.9346),
                                            "Arial",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        907.9092,
                                    new MapColor(97, 161, 166),
                                    new MapColor(49, 126, 175),
                                        267.0118,
                                    HorizontalAlignment.Left,
                                        true,
                                        886.7581,
                                        new Dimension(486.9377),
                                        true),
                                new PopupTemplate("neque et aut",
                                        "nulla",
                                        ["impedit",
                                            "sequi",
                                            "consequatur",
                                            "omnis"],
                                    [new FieldInfo("createdAt",
                                            "quidem",
                                            "accusamus",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.ShortDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                    [new RelationshipPopupContent("vel incidunt corrupti",
                                            "eligendi quasi voluptates vitae magni",
                                            8,
                                            "cum",
                                        [new RelatedRecordsInfoFieldOrder("veniam",
                                            OrderBy.Asc)],
                                            6),
                                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "numquam",
                                                "alias ipsam repellat")),
                                    new FieldsPopupContent([new FieldInfo("group",
                                                "atque",
                                                "nobis",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.ShortDateLe),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("title",
                                                "facere",
                                                "perferendis",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.DayShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("category",
                                                "quae",
                                                "repellat",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("status",
                                                "aut",
                                                "inventore",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                            "quis quia voluptatem id voluptatibus et odit",
                                            "non debitis harum")],
                                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "token",
                                            "architecto dolor consectetur",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "status",
                                            "vel quas et",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "group",
                                            "asperiores aut et",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("aliquid saepe id",
                                            "b7f0204d-40ba-93b0-7137-37068ef81532",
                                            () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "group",
                                            "doloremque")]),
                                    new AttributesDictionary(),
                                    true,
                                    "accusamus",
                                    "omnis",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "aut",
                                        4)))"
                            Thumbnail="@(new Thumbnail("reprehenderit",
                                "nihil",
                                147.4067,
                                227.4269))">
                        </FeatureTemplate>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(189, 64, 92),
                                    new MapColor(134, 237, 235)),
                                    224.3157,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(208.6176,
                                            593.6019)],
                                        "maiores",
                                        "alias",
                                        "aliquam"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(132.5999,
                                            951.2678)],
                                        "ut",
                                        "deserunt",
                                        "sint"),
                                    ["incidunt",
                                        "laborum",
                                        "architecto"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "sed",
                                    true,
                                LengthUnit.Yards,
                                    946.7636,
                                    724.5436,
                                    867.6442,
                                    901.3714))">
                        </SimpleRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("maxime dolor ut")"
                            StringContent="@("perferendis")"
                            OutFields="@(["quasi",
                                "dolores",
                                "praesentium"])"
                            FieldInfos="@([new FieldInfo("group",
                                    "et",
                                    "harum",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Min)])"
                            Content="@([new FieldsPopupContent([new FieldInfo("avatar",
                                        "voluptas",
                                        "porro",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                    "doloremque suscipit eius reiciendis ea dicta",
                                    "vitae ducimus quia")])"
                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                    "name",
                                    "eius soluta delectus",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "category",
                                    "excepturi quidem nisi",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "id",
                                    "accusamus illum dolorum",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("perferendis vel ea",
                                    "493d6e66-8b65-892d-3c98-81ec4dab08e5",
                                    () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "group",
                                    "et")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("est")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("quam")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.CenterBefore)"
                            LabelExpression="@("quae")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(10177114.9162)"
                            MinScale="@(8902.1255)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(500.7353))"
                            Symbol="@(new TextSymbol("nesciunt iure voluptatibus",
                                new MapColor(254, 109, 170),
                                new MapColor(21, 122, 185),
                                    new Dimension(143.4718),
                                new MapFont(new Dimension(860.1686),
                                        "Times New Roman",
                                    MapFontStyle.Oblique,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    926.1260,
                                new MapColor(187, 155, 152),
                                new MapColor(97, 196, 51),
                                    530.1410,
                                HorizontalAlignment.Center,
                                    true,
                                    743.3354,
                                    new Dimension(223.5706),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Country = 'Canada'")">
                        </Label>
                        <Field 
                            Name="@("status")"
                            Alias="@("quos")"
                            Description="@("similique amet maxime sed occaecati")"
                            Length="@(7)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "dolorem" })"
                            ValueType="@(FieldValueType.NameOrTitle)"
                            Domain="@(new InheritedDomain("title"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("doloribus",
                                43723945.0808)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(80.7884,
                                new Extent(-39.5870,
                                        58.2702,
                                        67.2296,
                                        -53.7037,
                                        884.9466,
                                        149.4878,
                                        693.1429,
                                        315.6489,
                                    new SpatialReference(5,
                                            "itaque",
                                            "voluptate",
                                            "reiciendis"),
                                        true,
                                        true),
                                    [2,
                                        2,
                                        7,
                                        7],
                                SpatialRelationship.Relation,
                                new TimeExtent(new DateTime(2021, 9, 13, 13, 29, 34),
                                        new DateTime(2016, 6, 21, 21, 13, 21)),
                                    QueryUnits.Meters,
                                    "Country = 'Canada'"))"
                            IncludedEffect="@([new Effect("ex",
                                37640792.9634),
                                new Effect("quidem",
                                    46209417.0541),
                                new Effect("harum",
                                    31766528.5402),
                                new Effect("odio",
                                    3087729.8763)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "dolor rem rerum"))"
                            Mode="@(ElevationInfoMode.RelativeToGround)"
                            Offset="@(385.7608)"
                            Unit="@(ElevationUnit.DecimalDegrees)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polygon([new MapPath([new MapPoint([187.1796,
                                653.9449,
                                426.3612]),
                            new MapPoint([939.8921,
                                388.5080,
                                590.5869]),
                            new MapPoint([985.0644,
                                500.0223,
                                475.4587,
                                93.9970])]),
                            new MapPath([new MapPoint([912.2726,
                                    464.3775]),
                                new MapPoint([590.1761,
                                    813.7187]),
                                new MapPoint([342.0400,
                                    503.3647,
                                    739.6014,
                                    481.7345])])],
                        new SpatialReference(9,
                                "odit",
                                "id",
                                "ipsum"),
                        new Point(41.5836,
                                26.7670,
                                156.8605,
                                -25.6608,
                                780.0207,
                            new SpatialReference(5,
                                    "iusto",
                                    "sit",
                                    "provident"),
                                true,
                                true,
                                185.4599),
                            true,
                            true,
                            true),
                    new TextSymbol("nisi rerum doloribus",
                        new MapColor(28, 222, 128),
                        new MapColor(3, 178, 67),
                            new Dimension(850.4045),
                        new MapFont(new Dimension(651.8352),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            207.5991,
                        new MapColor(163, 174, 30),
                        new MapColor(144, 232, 203),
                            219.3283,
                        HorizontalAlignment.Right,
                            true,
                            258.8223,
                            new Dimension(956.7942),
                            true),
                    new PopupTemplate("nam perferendis sapiente",
                            "in",
                            ["eum",
                                "atque"],
                        [new FieldInfo("avatar",
                                "ea",
                                "quis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("email",
                                "recusandae",
                                "eius",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "dolores",
                                    "sunt quia totam")),
                        new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "perferendis",
                                    "nostrum labore aliquid"))],
                        [new ExpressionInfo("return Date();",
                                "category",
                                "distinctio totam quas",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("enim rerum dolor",
                                "b4af117b-231f-9b7c-3813-8e69939b1595",
                                () => { Console.WriteLine("debitis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "adipisci"),
                        new ActionToggle("in sed eum",
                                "557d34af-c4ad-8388-d597-7499e8bbca1e",
                                () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "ad")]),
                        new AttributesDictionary(),
                        true,
                        "corporis",
                        "quo",
                        new GraphicOrigin(Guid.NewGuid(),
                            "alias",
                            4)),
                new Graphic(new Polygon([new MapPath([new MapPoint([159.0058,
                                326.4327]),
                            new MapPoint([218.9678,
                                140.9825,
                                410.7986]),
                            new MapPoint([150.0423,
                                708.9861,
                                170.2044,
                                610.5160])]),
                            new MapPath([new MapPoint([787.5292,
                                    550.5884]),
                                new MapPoint([785.9741,
                                    719.6946]),
                                new MapPoint([769.8319,
                                    577.3122]),
                                new MapPoint([996.3099,
                                    187.8251])]),
                            new MapPath([new MapPoint([703.1417,
                                    401.3017,
                                    718.2375,
                                    869.1578]),
                                new MapPoint([608.7463,
                                    288.7428,
                                    511.3894])])],
                        new SpatialReference(3,
                                "aut",
                                "eum",
                                "aut"),
                        new Point(87.3282,
                                55.4983,
                                -82.6493,
                                77.1621,
                                114.2823,
                            new SpatialReference(4,
                                    "in",
                                    "excepturi",
                                    "in"),
                                true,
                                true,
                                460.5594),
                            true,
                            true,
                            true),
                    new TextSymbol("accusantium eveniet laudantium",
                        new MapColor(115, 223, 156),
                        new MapColor(95, 54, 135),
                            new Dimension(181.1026),
                        new MapFont(new Dimension(711.5356),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            256.1226,
                        new MapColor(190, 124, 194),
                        new MapColor(164, 27, 151),
                            370.3962,
                        HorizontalAlignment.Center,
                            true,
                            481.8503,
                            new Dimension(862.0414),
                            true),
                    new PopupTemplate("aut atque corporis",
                            "atque",
                            ["nihil",
                                "ullam",
                                "et",
                                "harum"],
                        [new FieldInfo("group",
                                "iure",
                                "corporis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new FieldsPopupContent([new FieldInfo("email",
                                    "at",
                                    "eos",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("avatar",
                                    "sit",
                                    "quis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("phone",
                                    "ab",
                                    "doloribus",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "vel repudiandae iusto debitis ut",
                                "est eligendi qui"),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "vel",
                                    "maiores quo dolores")),
                        new MediaPopupContent("vitae animi repudiandae",
                                "corrupti occaecati voluptas dolorum",
                            [new ColumnChartMediaInfo("quas excepturi dolorem",
                                    "ipsum",
                                    "voluptatum optio voluptas",
                                new ChartMediaInfoValue(["est",
                                        "harum",
                                        "error"],
                                        "enim",
                                        "accusantium",
                                    [new ChartMediaInfoValueSeries("updatedAt",
                                            "perspiciatis",
                                            583.4950),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "voluptatem",
                                            111.5300)],
                                    [new MapColor(80, 77, 220),
                                    new MapColor(128, 130, 93),
                                    new MapColor(1, 238, 62),
                                    new MapColor(177, 212, 175)])),
                            new BarChartMediaInfo("quis sit inventore",
                                    "illo",
                                    "sed velit ullam",
                                new ChartMediaInfoValue(["ad",
                                        "voluptatem"],
                                        "iure",
                                        "corrupti",
                                    [new ChartMediaInfoValueSeries("name",
                                            "sed",
                                            861.0512),
                                    new ChartMediaInfoValueSeries("status",
                                            "animi",
                                            124.4304)],
                                    [new MapColor(9, 190, 38)]))],
                                4)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "token",
                                "possimus aliquam neque",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "createdAt",
                                "qui aliquid eos",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "avatar",
                                "ut velit quia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "name",
                                "alias quia cupiditate",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("sint rem perferendis",
                                "https://picsum.photos/640/480/?image=312",
                                "b1abbbb2-7e30-2f6d-ba56-7def0bb05ae0",
                                () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "consequuntur"),
                        new ActionButton("dolorum beatae eos",
                                "https://picsum.photos/640/480/?image=201",
                                "1d171659-0f71-ff06-5588-d5a07a31d761",
                                () => { Console.WriteLine("placeat"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "repellendus"),
                        new ActionToggle("a omnis minus",
                                "eb111e27-634e-24bd-db5a-c0bc6b4f339f",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "est"),
                        new ActionToggle("ducimus qui consequuntur",
                                "e59a214c-0dbe-a38f-c61e-949f5227179f",
                                () => { Console.WriteLine("explicabo"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "molestiae")]),
                        new AttributesDictionary(),
                        true,
                        "sit",
                        "id",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            8)),
                new Graphic(new Polyline([new MapPath([new MapPoint([669.7617,
                                768.7689]),
                            new MapPoint([708.9498,
                                104.2418,
                                295.9937]),
                            new MapPoint([747.6049,
                                226.5391,
                                631.0983]),
                            new MapPoint([102.4579,
                                44.1746,
                                315.3472])]),
                            new MapPath([new MapPoint([302.1487,
                                    263.0881,
                                    724.7453,
                                    172.0025]),
                                new MapPoint([692.7113,
                                    889.9384,
                                    315.5777,
                                    391.0754])]),
                            new MapPath([new MapPoint([691.8390,
                                    402.8529,
                                    64.7415]),
                                new MapPoint([22.6622,
                                    404.2689,
                                    99.1983,
                                    200.0559])])],
                        new SpatialReference(8,
                                "nobis",
                                "expedita",
                                "molestiae"),
                            true,
                            true),
                    new TextSymbol("et libero eaque",
                        new MapColor(48, 208, 141),
                        new MapColor(244, 100, 150),
                            new Dimension(596.5522),
                        new MapFont(new Dimension(992.8169),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            502.8803,
                        new MapColor(12, 82, 135),
                        new MapColor(3, 145, 177),
                            968.1203,
                        HorizontalAlignment.Center,
                            true,
                            995.2472,
                            new Dimension(685.3594),
                            true),
                    new PopupTemplate("ut cumque labore",
                            "libero",
                            ["totam",
                                "aliquid",
                                "sed",
                                "perspiciatis"],
                        [new FieldInfo("name",
                                "et",
                                "esse",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new FieldsPopupContent([new FieldInfo("status",
                                    "maiores",
                                    "est",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("title",
                                    "rem",
                                    "velit",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "est dolorum quia omnis nulla",
                                "blanditiis sit inventore")],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "password",
                                "sint harum et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "updatedAt",
                                "qui distinctio assumenda",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "email",
                                "minima placeat ex",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("ipsa voluptas rerum",
                                "https://picsum.photos/640/480/?image=678",
                                "346f9488-31da-c27c-64da-3f011c61d5ba",
                                () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "sed"),
                        new ActionButton("cum excepturi sit",
                                "https://picsum.photos/640/480/?image=909",
                                "43cc4d96-a421-5d90-3b17-410d9245ce33",
                                () => { Console.WriteLine("adipisci"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "illo"),
                        new ActionButton("rerum eligendi assumenda",
                                "https://picsum.photos/640/480/?image=350",
                                "ea8f012a-d0a7-434d-e833-54b1bfe49517",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "sint")]),
                        new AttributesDictionary(),
                        true,
                        "dicta",
                        "magni",
                        new GraphicOrigin(Guid.NewGuid(),
                            "totam",
                            6)),
                new Graphic(new Extent(27.5520,
                            -99.4122,
                            -8.6979,
                            -50.6810,
                            306.2524,
                            995.3813,
                            825.1573,
                            517.3989,
                        new SpatialReference(3,
                                "facilis",
                                "consequatur",
                                "omnis"),
                            true,
                            true),
                    new TextSymbol("enim eligendi quisquam",
                        new MapColor(225, 112, 75),
                        new MapColor(120, 11, 183),
                            new Dimension(481.9456),
                        new MapFont(new Dimension(994.6678),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            125.0468,
                        new MapColor(179, 118, 171),
                        new MapColor(177, 170, 142),
                            967.7126,
                        HorizontalAlignment.Right,
                            true,
                            494.5031,
                            new Dimension(604.6007),
                            true),
                    new PopupTemplate("magnam deleniti facilis",
                            "distinctio",
                            ["et",
                                "id",
                                "eum",
                                "rem"],
                        [new FieldInfo("phone",
                                "omnis",
                                "iusto",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("category",
                                "odio",
                                "architecto",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("name",
                                "alias",
                                "similique",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("createdAt",
                                "itaque",
                                "omnis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new RelationshipPopupContent("rerum laudantium vel",
                                "eum sed ut minima aliquid voluptas",
                                2,
                                "quia",
                            [new RelatedRecordsInfoFieldOrder("quia",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("qui",
                                OrderBy.Asc)],
                                7),
                        new AttachmentsPopupContent("iusto cumque soluta",
                                "rerum repellendus quidem rerum odio",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "comment",
                                "facilis dolorum est",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "title",
                                "eum accusamus vel",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "phone",
                                "est est ut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("ut officia nostrum",
                                "4c5f4718-2abc-39c9-51d6-a1f75038d632",
                                () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "ipsum")]),
                        new AttributesDictionary(),
                        true,
                        "accusamus",
                        "ut",
                        new GraphicOrigin(Guid.NewGuid(),
                            "dolor",
                            1))],
                [new Graphic(new Extent(-4.4455,
                            153.4177,
                            71.0465,
                            -83.2843,
                            118.7356,
                            133.5560,
                            188.2099,
                            527.6676,
                        new SpatialReference(6,
                                "assumenda",
                                "ut",
                                "qui"),
                            true,
                            true),
                    new TextSymbol("dicta molestiae eveniet",
                        new MapColor(51, 203, 108),
                        new MapColor(69, 59, 41),
                            new Dimension(532.6490),
                        new MapFont(new Dimension(142.0548),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            439.3243,
                        new MapColor(178, 183, 180),
                        new MapColor(77, 9, 186),
                            619.5876,
                        HorizontalAlignment.Right,
                            true,
                            22.5810,
                            new Dimension(25.7366),
                            true),
                    new PopupTemplate("et aliquid quasi",
                            "ab",
                            ["qui",
                                "molestiae",
                                "fugiat",
                                "ut"],
                        [new FieldInfo("avatar",
                                "cum",
                                "temporibus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("token",
                                "odio",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new RelationshipPopupContent("doloribus repellendus voluptatem",
                                "aut ut dolorem corporis quaerat similique aut",
                                1,
                                "mollitia",
                            [new RelatedRecordsInfoFieldOrder("distinctio",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("velit",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("quos",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("et",
                                OrderBy.Desc)],
                                4),
                        new RelationshipPopupContent("reprehenderit nemo voluptate",
                                "suscipit id nemo autem blanditiis quia",
                                2,
                                "recusandae",
                            [new RelatedRecordsInfoFieldOrder("vel",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("dicta",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("eum",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("nam",
                                OrderBy.Desc)],
                                8)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "avatar",
                                "rerum labore consectetur",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "id",
                                "voluptatem facilis expedita",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "phone",
                                "pariatur earum commodi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "group",
                                "laborum quia est",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("numquam officiis quia",
                                "12831474-b550-07e7-af92-b4b8adefe12a",
                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "beatae"),
                        new ActionToggle("dolorem velit sit",
                                "725fc2f5-c01b-2dc1-d9d4-b736ecaf27a4",
                                () => { Console.WriteLine("accusantium"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "comment",
                                "molestiae"),
                        new ActionButton("mollitia modi voluptatem",
                                "https://picsum.photos/640/480/?image=206",
                                "cd7753d3-8d65-7daf-8fbb-e9fb88fe489d",
                                () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "voluptatem"),
                        new ActionToggle("consequatur enim quaerat",
                                "b204a8b3-6f34-3d8e-d7d5-acf7b07059e5",
                                () => { Console.WriteLine("debitis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "aut")]),
                        new AttributesDictionary(),
                        true,
                        "consectetur",
                        "architecto",
                        new GraphicOrigin(Guid.NewGuid(),
                            "magni",
                            5)),
                new Graphic(new Polygon([new MapPath([new MapPoint([411.0549,
                                486.3676,
                                70.6669]),
                            new MapPoint([273.9290,
                                217.1150,
                                910.8865]),
                            new MapPoint([683.8873,
                                635.2187])])],
                        new SpatialReference(4,
                                "dolor",
                                "enim",
                                "consequuntur"),
                        new Point(30.7107,
                                58.0298,
                                88.0034,
                                85.2787,
                                331.9369,
                            new SpatialReference(4,
                                    "qui",
                                    "eligendi",
                                    "corporis"),
                                true,
                                true,
                                624.3695),
                            true,
                            true,
                            true),
                    new TextSymbol("sit perferendis consequatur",
                        new MapColor(196, 165, 63),
                        new MapColor(211, 175, 160),
                            new Dimension(280.4877),
                        new MapFont(new Dimension(641.8099),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            554.9625,
                        new MapColor(93, 93, 174),
                        new MapColor(237, 66, 192),
                            291.2219,
                        HorizontalAlignment.Right,
                            true,
                            857.6046,
                            new Dimension(576.5657),
                            true),
                    new PopupTemplate("laborum aut recusandae",
                            "quia",
                            ["et",
                                "sint",
                                "sunt"],
                        [new FieldInfo("title",
                                "hic",
                                "quae",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new AttachmentsPopupContent("nobis nihil ea",
                                "nam reiciendis laudantium quis aut",
                                AttachmentsPopupContentDisplayType.Preview),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "rerum",
                                    "alias nesciunt incidunt"))],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "group",
                                "quisquam id magnam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "updatedAt",
                                "enim non suscipit",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("eligendi facilis enim",
                                "https://picsum.photos/640/480/?image=564",
                                "1808afa9-2c1d-f899-3e9b-a79bba6bd99a",
                                () => { Console.WriteLine("quaerat"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "in"),
                        new ActionToggle("error eos doloribus",
                                "f164858c-12b2-51a0-93c4-3df2cb3e5928",
                                () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "ad"),
                        new ActionToggle("magnam animi quidem",
                                "1b4c480f-9b3c-2c85-b149-47b3b0eaf188",
                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "consequatur"),
                        new ActionToggle("magnam ipsam non",
                                "866e5fe1-0bed-31a8-56be-d642f7c1895c",
                                () => { Console.WriteLine("delectus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "suscipit")]),
                        new AttributesDictionary(),
                        true,
                        "consectetur",
                        "fugit",
                        new GraphicOrigin(Guid.NewGuid(),
                            "illo",
                            3)),
                new Graphic(new Extent(-176.5607,
                            58.3804,
                            60.4911,
                            -72.8217,
                            209.1957,
                            940.5089,
                            798.7576,
                            658.0384,
                        new SpatialReference(4,
                                "voluptates",
                                "praesentium",
                                "laboriosam"),
                            true,
                            true),
                    new TextSymbol("quidem numquam quo",
                        new MapColor(61, 171, 229),
                        new MapColor(195, 159, 229),
                            new Dimension(412.5099),
                        new MapFont(new Dimension(865.4651),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            349.8508,
                        new MapColor(1, 32, 240),
                        new MapColor(5, 195, 202),
                            391.1351,
                        HorizontalAlignment.Left,
                            true,
                            552.7622,
                            new Dimension(151.9492),
                            true),
                    new PopupTemplate("aut a dolorem",
                            "nemo",
                            ["et",
                                "rem"],
                        [new FieldInfo("comment",
                                "consequatur",
                                "iure",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("status",
                                "ipsa",
                                "tenetur",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new AttachmentsPopupContent("molestiae esse officiis",
                                "et doloribus sunt itaque officiis magni cupiditate",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("return Date();",
                                "avatar",
                                "ut qui ea",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "password",
                                "numquam quia nesciunt",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "token",
                                "ut incidunt ipsam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "email",
                                "tempore nisi labore",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("non tenetur nihil",
                                "2cca0ae6-291a-dc7b-4119-674d483eac59",
                                () => { Console.WriteLine("cumque"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "et"),
                        new ActionToggle("ipsum asperiores debitis",
                                "1da78357-f613-0966-8e42-a623cffc53b7",
                                () => { Console.WriteLine("deserunt"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "et")]),
                        new AttributesDictionary(),
                        true,
                        "facere",
                        "placeat",
                        new GraphicOrigin(Guid.NewGuid(),
                            "omnis",
                            3)),
                new Graphic(new Polygon([new MapPath([new MapPoint([919.6345,
                                289.6967,
                                223.4174,
                                869.9128]),
                            new MapPoint([61.4975,
                                0.1638,
                                585.6132]),
                            new MapPoint([36.9368,
                                227.8778]),
                            new MapPoint([960.3282,
                                522.3781])])],
                        new SpatialReference(5,
                                "cum",
                                "cumque",
                                "magni"),
                        new Point(-170.0895,
                                -24.2431,
                                -110.7569,
                                -39.6870,
                                286.9346,
                            new SpatialReference(7,
                                    "dolor",
                                    "ut",
                                    "quia"),
                                true,
                                true,
                                786.9878),
                            true,
                            true,
                            true),
                    new TextSymbol("et nisi sed",
                        new MapColor(206, 5, 110),
                        new MapColor(22, 108, 28),
                            new Dimension(984.4053),
                        new MapFont(new Dimension(280.7827),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            97.7565,
                        new MapColor(188, 254, 77),
                        new MapColor(20, 44, 148),
                            484.0490,
                        HorizontalAlignment.Left,
                            true,
                            219.0879,
                            new Dimension(536.4931),
                            true),
                    new PopupTemplate("nostrum quia debitis",
                            "labore",
                            ["et",
                                "beatae"],
                        [new FieldInfo("id",
                                "reprehenderit",
                                "reprehenderit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("name",
                                "rerum",
                                "sapiente",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("id",
                                "qui",
                                "voluptatem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                        [new MediaPopupContent("porro impedit totam",
                                "eius modi at ipsa excepturi velit",
                            [new BarChartMediaInfo("omnis autem accusantium",
                                    "dolorem",
                                    "omnis at consequuntur",
                                new ChartMediaInfoValue(["aut",
                                        "quia",
                                        "repellat",
                                        "dicta"],
                                        "omnis",
                                        "iusto",
                                    [new ChartMediaInfoValueSeries("name",
                                            "ut",
                                            141.5657),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "porro",
                                            325.8310)],
                                    [new MapColor(234, 53, 199),
                                    new MapColor(191, 57, 3),
                                    new MapColor(186, 193, 129),
                                    new MapColor(169, 49, 203)])),
                            new LineChartMediaInfo("neque omnis sed",
                                    "inventore",
                                    "illo vitae architecto",
                                new ChartMediaInfoValue(["repellendus",
                                        "atque"],
                                        "minima",
                                        "autem",
                                    [new ChartMediaInfoValueSeries("avatar",
                                            "veritatis",
                                            427.1497),
                                    new ChartMediaInfoValueSeries("category",
                                            "rem",
                                            69.4648)],
                                    [new MapColor(196, 195, 233),
                                    new MapColor(11, 97, 130),
                                    new MapColor(199, 233, 252),
                                    new MapColor(223, 108, 95)]))],
                                9),
                        new MediaPopupContent("architecto aspernatur nisi",
                                "aperiam numquam fugit et",
                            [new LineChartMediaInfo("numquam nihil non",
                                    "occaecati",
                                    "perferendis quam harum",
                                new ChartMediaInfoValue(["voluptate",
                                        "est",
                                        "eum"],
                                        "perspiciatis",
                                        "rerum",
                                    [new ChartMediaInfoValueSeries("token",
                                            "qui",
                                            460.1966),
                                    new ChartMediaInfoValueSeries("name",
                                            "nihil",
                                            809.3291)],
                                    [new MapColor(114, 245, 69),
                                    new MapColor(216, 254, 93),
                                    new MapColor(12, 185, 227)])),
                            new LineChartMediaInfo("aliquid accusamus perspiciatis",
                                    "omnis",
                                    "ut ab ullam",
                                new ChartMediaInfoValue(["voluptatem",
                                        "accusantium"],
                                        "sit",
                                        "minima",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "animi",
                                            178.4231)],
                                    [new MapColor(35, 233, 68)]))],
                                2)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "avatar",
                                "libero repellat quia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "phone",
                                "delectus autem quas",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "title",
                                "velit quia et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("non et sit",
                                "https://picsum.photos/640/480/?image=932",
                                "f5741373-3abb-ccfb-9aba-166b0a091977",
                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "sed"),
                        new ActionToggle("earum eos qui",
                                "4846753c-8aff-e4cd-786c-87f18efb32b9",
                                () => { Console.WriteLine("numquam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "consequatur"),
                        new ActionButton("dicta nam est",
                                "https://picsum.photos/640/480/?image=590",
                                "8a7accdf-f33b-5738-d074-00e6db02de04",
                                () => { Console.WriteLine("facere"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "eveniet"),
                        new ActionButton("vitae labore facere",
                                "https://picsum.photos/640/480/?image=458",
                                "7055e458-8459-83c7-e40a-49e61c3beb59",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "earum")]),
                        new AttributesDictionary(),
                        true,
                        "sapiente",
                        "commodi",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            2))],
                    ["soluta",
                        "a"],
                [new Graphic(new Polygon([new MapPath([new MapPoint([837.9310,
                                231.9865]),
                            new MapPoint([496.9872,
                                65.0451]),
                            new MapPoint([701.3499,
                                845.7727]),
                            new MapPoint([66.3569,
                                326.1790])]),
                            new MapPath([new MapPoint([617.1595,
                                    783.5931,
                                    986.0931,
                                    299.3121]),
                                new MapPoint([157.7909,
                                    331.8298,
                                    473.1907,
                                    897.5259])]),
                            new MapPath([new MapPoint([57.6737,
                                    845.8134]),
                                new MapPoint([733.5700,
                                    843.4162,
                                    796.6339,
                                    244.7499])])],
                        new SpatialReference(4,
                                "exercitationem",
                                "excepturi",
                                "dolorem"),
                        new Point(145.4535,
                                75.1392,
                                -73.4998,
                                -5.9093,
                                906.5145,
                            new SpatialReference(6,
                                    "nostrum",
                                    "praesentium",
                                    "voluptatem"),
                                true,
                                true,
                                171.5332),
                            true,
                            true,
                            true),
                    new TextSymbol("voluptas repudiandae temporibus",
                        new MapColor(222, 145, 7),
                        new MapColor(172, 202, 250),
                            new Dimension(390.9385),
                        new MapFont(new Dimension(861.9392),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            407.5318,
                        new MapColor(237, 201, 55),
                        new MapColor(123, 40, 29),
                            507.0539,
                        HorizontalAlignment.Right,
                            true,
                            67.3541,
                            new Dimension(652.4307),
                            true),
                    new PopupTemplate("officia repellat voluptatum",
                            "distinctio",
                            ["beatae",
                                "porro",
                                "quia"],
                        [new FieldInfo("title",
                                "architecto",
                                "ut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("avatar",
                                "eos",
                                "voluptas",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("category",
                                "quia",
                                "iusto",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Max)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                    "minus",
                                    "nihil ipsum quia"))],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "status",
                                "velit explicabo doloremque",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "aut sunt quae",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("voluptas rerum sit",
                                "https://picsum.photos/640/480/?image=569",
                                "884b414c-aff2-cb6a-4387-93be368b15f9",
                                () => { Console.WriteLine("mollitia"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "aut"),
                        new ActionButton("eos est doloribus",
                                "https://picsum.photos/640/480/?image=1053",
                                "9e539174-48ac-6580-c969-f8ab797c2e87",
                                () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "et"),
                        new ActionToggle("perspiciatis sunt eius",
                                "663a9da0-e72b-d901-6eba-5ddf6fa1c3f2",
                                () => { Console.WriteLine("quaerat"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "aut")]),
                        new AttributesDictionary(),
                        true,
                        "voluptate",
                        "ut",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aut",
                            9)),
                new Graphic(new Polyline([new MapPath([new MapPoint([825.5402,
                                442.9945]),
                            new MapPoint([507.2618,
                                639.7340,
                                266.6841])]),
                            new MapPath([new MapPoint([803.1974,
                                    6.5207,
                                    514.7896,
                                    112.8521]),
                                new MapPoint([39.5861,
                                    501.2945,
                                    676.0693,
                                    133.7209]),
                                new MapPoint([118.3927,
                                    574.0003])]),
                            new MapPath([new MapPoint([851.3499,
                                    408.1141]),
                                new MapPoint([357.6335,
                                    783.8933,
                                    255.5564,
                                    245.9628]),
                                new MapPoint([439.7121,
                                    143.5268,
                                    100.4217,
                                    670.0817])]),
                            new MapPath([new MapPoint([928.2391,
                                    680.2027,
                                    313.3516,
                                    478.2202]),
                                new MapPoint([362.8674,
                                    505.6123,
                                    353.9884,
                                    378.0612]),
                                new MapPoint([865.3047,
                                    306.7928,
                                    215.5107])])],
                        new SpatialReference(7,
                                "reiciendis",
                                "eligendi",
                                "inventore"),
                            true,
                            true),
                    new TextSymbol("eos perferendis corrupti",
                        new MapColor(198, 178, 224),
                        new MapColor(209, 99, 31),
                            new Dimension(521.6769),
                        new MapFont(new Dimension(925.0613),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            35.7241,
                        new MapColor(175, 199, 240),
                        new MapColor(141, 28, 153),
                            63.5026,
                        HorizontalAlignment.Left,
                            true,
                            566.7801,
                            new Dimension(681.9932),
                            true),
                    new PopupTemplate("corporis rem doloribus",
                            "similique",
                            ["et",
                                "vel",
                                "in",
                                "voluptatem"],
                        [new FieldInfo("title",
                                "fuga",
                                "enim",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("avatar",
                                "id",
                                "expedita",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("password",
                                "commodi",
                                "laborum",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("name",
                                "omnis",
                                "sunt",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new AttachmentsPopupContent("iure enim nisi",
                                "necessitatibus tenetur et alias aliquam omnis alias",
                                AttachmentsPopupContentDisplayType.Auto),
                        new RelationshipPopupContent("et enim ut",
                                "omnis vitae velit laborum",
                                7,
                                "est",
                            [new RelatedRecordsInfoFieldOrder("enim",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("est",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("laboriosam",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("in",
                                OrderBy.Asc)],
                                7)],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "avatar",
                                "hic laborum eius",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "password",
                                "dolor cumque minus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("commodi enim repellat",
                                "921bc609-d97d-2535-5082-fdacce1d850c",
                                () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "aut"),
                        new ActionToggle("consequatur quibusdam in",
                                "dff91749-50ed-29a8-d04e-8f98dead4218",
                                () => { Console.WriteLine("aliquam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "quo"),
                        new ActionToggle("cumque et ut",
                                "787ee3f9-9667-9b66-f738-5ece44774dbf",
                                () => { Console.WriteLine("ipsam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "eos"),
                        new ActionToggle("eius nihil saepe",
                                "1a2b7304-057c-f869-0d78-335a9ef1a753",
                                () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "comment",
                                "nihil")]),
                        new AttributesDictionary(),
                        true,
                        "non",
                        "sit",
                        new GraphicOrigin(Guid.NewGuid(),
                            "doloremque",
                            3))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["ut",
                    "nam"],
                    ["comment",
                        "category",
                        "avatar"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("createdAt");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("email",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Point(10.9608,
                            3.5080,
                            -50.2252,
                            -11.7547,
                            249.9445,
                        new SpatialReference(6,
                                "nisi",
                                "quibusdam",
                                "consequatur"),
                            true,
                            true,
                            711.9794),
                    new TextSymbol("voluptate velit nobis",
                        new MapColor(236, 95, 178),
                        new MapColor(21, 92, 252),
                            new Dimension(726.7389),
                        new MapFont(new Dimension(811.6160),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            226.0327,
                        new MapColor(53, 39, 26),
                        new MapColor(210, 190, 13),
                            700.3236,
                        HorizontalAlignment.Right,
                            true,
                            283.3796,
                            new Dimension(954.8380),
                            true),
                    new PopupTemplate("tempore non et",
                            "voluptates",
                            ["nisi",
                                "ratione",
                                "optio",
                                "et"],
                        [new FieldInfo("group",
                                "quos",
                                "inventore",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new FieldsPopupContent([new FieldInfo("password",
                                    "mollitia",
                                    "et",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("createdAt",
                                    "nisi",
                                    "possimus",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("email",
                                    "similique",
                                    "amet",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "vitae dolorem et illum blanditiis",
                                "voluptas sed quasi"),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                    "sed",
                                    "recusandae eligendi voluptatem")),
                        new FieldsPopupContent([new FieldInfo("phone",
                                    "expedita",
                                    "ullam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("comment",
                                    "animi",
                                    "et",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("category",
                                    "ut",
                                    "ex",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "et architecto doloribus sapiente asperiores aut sapiente",
                                "consectetur tempore voluptas")],
                        [new ExpressionInfo("return $feature.Name;",
                                "updatedAt",
                                "iure libero sed",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "name",
                                "eos vitae recusandae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "status",
                                "libero sit sed",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("alias blanditiis aut",
                                "https://picsum.photos/640/480/?image=678",
                                "08d9e3f2-4178-a6ea-d149-c480c05df31e",
                                () => { Console.WriteLine("ipsum"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "aliquam"),
                        new ActionButton("aut laudantium quibusdam",
                                "https://picsum.photos/640/480/?image=92",
                                "9cb85378-ed12-73f2-ec24-07e2ebe90b80",
                                () => { Console.WriteLine("deleniti"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "eaque"),
                        new ActionButton("ut pariatur ex",
                                "https://picsum.photos/640/480/?image=184",
                                "f1214df8-986e-df53-e91b-9367df572de9",
                                () => { Console.WriteLine("soluta"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "non")]),
                        new AttributesDictionary(),
                        true,
                        "est",
                        "illum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "consequatur",
                            1))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([8,
                    1,
                    9],
                    true,
                    573.6426,
                    461.2460,
                    "8.0.5.6",
                new Polyline([new MapPath([new MapPoint([912.4869,
                            885.1907,
                            246.7756]),
                        new MapPoint([645.0287,
                            858.5438,
                            395.8308])]),
                        new MapPath([new MapPoint([50.7052,
                                744.1881]),
                            new MapPoint([717.6667,
                                770.2426,
                                608.1134,
                                725.6844]),
                            new MapPoint([584.5059,
                                259.9417])]),
                        new MapPath([new MapPoint([676.8320,
                                450.8901,
                                592.9596,
                                48.4802]),
                            new MapPoint([508.9431,
                                666.7542]),
                            new MapPoint([896.2735,
                                860.8260])])],
                    new SpatialReference(8,
                            "libero",
                            "illum",
                            "expedita"),
                        true,
                        true),
                    5,
                    ["animi",
                        "et"],
                    "sit",
                    new DateTime(2016, 11, 13, 12, 24, 14),
                    49.7136,
                    4,
                    "aperiam",
                    8),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([9,
                    6,
                    7],
                    true,
                    207.5388,
                    991.4502,
                    "1.5.8.1",
                new Polyline([new MapPath([new MapPoint([766.4482,
                            334.0170,
                            713.2644]),
                        new MapPoint([585.9540,
                            607.4182,
                            66.8169]),
                        new MapPoint([855.9669,
                            765.8501,
                            639.1397,
                            709.7592])]),
                        new MapPath([new MapPoint([20.8567,
                                548.2626,
                                460.0312,
                                65.2251]),
                            new MapPoint([32.8865,
                                878.0512,
                                299.4637,
                                25.1080])]),
                        new MapPath([new MapPoint([470.1982,
                                924.6407,
                                893.7424,
                                911.4129]),
                            new MapPoint([842.7639,
                                159.1808,
                                531.5695]),
                            new MapPoint([477.9972,
                                878.2461,
                                563.1271]),
                            new MapPoint([126.2140,
                                858.7696,
                                312.8849])]),
                        new MapPath([new MapPoint([375.3289,
                                148.8689]),
                            new MapPoint([827.2064,
                                195.9726,
                                982.8046])])],
                    new SpatialReference(9,
                            "similique",
                            "odio",
                            "corporis"),
                        true,
                        true),
                    6,
                    ["omnis",
                        "inventore",
                        "cum",
                        "pariatur"],
                    "aliquid",
                    new DateTime(2003, 5, 3, 5, 50, 5),
                    454.5510,
                    1,
                    "aut",
                    9),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([3,
                    6],
                    true,
                    274.6491,
                    557.9304,
                    "4.7.2.6",
                new Point(64.6174,
                        59.1646,
                        105.0519,
                        -76.5171,
                        867.7959,
                    new SpatialReference(7,
                            "quo",
                            "laborum",
                            "voluptas"),
                        true,
                        true,
                        993.4514),
                    1,
                    ["et",
                        "fugiat",
                        "cum",
                        "dolor"],
                    "debitis",
                    new DateTime(2006, 9, 14, 3, 42, 53),
                    952.0650,
                    3,
                    "et",
                    6),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([3,
                    6],
                    true,
                    571.2518,
                    542.6236,
                    "0.5.2.5",
                new Point(33.1734,
                        -47.0447,
                        -136.3542,
                        -2.9454,
                        867.6942,
                    new SpatialReference(1,
                            "aut",
                            "quod",
                            "consequuntur"),
                        true,
                        true,
                        435.9028),
                    5,
                    ["quas",
                        "vel"],
                    "eum",
                    new DateTime(2000, 1, 3, 19, 41, 7),
                    100.6871,
                    9,
                    "dolorem",
                    5),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Hide;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.DestinationOut;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "eius ea est"),
                ElevationInfoMode.AbsoluteHeight,
                    840.2149,
                ElevationUnit.Miles);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("ipsum",
                    40344000.1343),
                    new Effect("magni",
                        4384455.5142),
                    new Effect("laboriosam",
                        43494555.8766)],
                    true,
                new FeatureFilter(359.8688,
                    new Polygon([new MapPath([new MapPoint([54.7945,
                                193.9602]),
                            new MapPoint([920.7584,
                                691.0320,
                                225.4092,
                                433.0001]),
                            new MapPoint([528.6012,
                                101.5057,
                                936.9212,
                                575.5130])])],
                        new SpatialReference(9,
                                "laboriosam",
                                "est",
                                "doloribus"),
                        new Point(-137.9820,
                                47.5784,
                                34.5671,
                                -67.9140,
                                67.0339,
                            new SpatialReference(4,
                                    "est",
                                    "molestiae",
                                    "et"),
                                true,
                                true,
                                200.7949),
                            true,
                            true,
                            true),
                        [6,
                            5,
                            1],
                    SpatialRelationship.Within,
                    new TimeExtent(new DateTime(2008, 3, 2, 5, 47, 50),
                            new DateTime(2011, 6, 4, 17, 36, 16)),
                        QueryUnits.NauticalMiles,
                        "Street = '123 Main St.'"),
                    [new Effect("nostrum",
                        41269082.2952),
                        new Effect("cumque",
                            26653722.3452)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "avatar",
                    "nobis",
                    "sint sunt sunt harum",
                    8,
                    true,
                    true,
                    new { Value = "ea" },
                FieldValueType.DateAndTime,
                new InheritedDomain("createdAt")),
            new Field(default,
                    "category",
                    "non",
                    "voluptatum ea porro aut nemo voluptas voluptas",
                    4,
                    true,
                    true,
                    new { Value = "dolores" },
                FieldValueType.None,
                new InheritedDomain("phone")),
            new Field(default,
                    "category",
                    "eligendi",
                    "at necessitatibus praesentium quos tempore asperiores rerum",
                    2,
                    true,
                    true,
                    new { Value = "quidem" },
                FieldValueType.LocationOrPlaceName,
                new RangeDomain("suscipit",
                        "incidunt",
                        "name")),
            new Field(default,
                    "updatedAt",
                    "ut",
                    "laboriosam perspiciatis ut ea doloremque",
                    5,
                    true,
                    true,
                    new { Value = "debitis" },
                FieldValueType.None,
                new InheritedDomain("updatedAt"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-12.3394,
                    -47.9589,
                    3.9792,
                    6.7921,
                    963.2068,
                    989.9359,
                    884.9002,
                    440.5014,
                new SpatialReference(6,
                        "numquam",
                        "quas",
                        "impedit"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polyline;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterAfter,
                    "qui",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    45397080.8525,
                    26084.4250,
                    true,
                    new Dimension(646.0134),
                new TextSymbol("repellat molestiae qui",
                    new MapColor(23, 54, 27),
                    new MapColor(41, 247, 149),
                        new Dimension(437.9239),
                    new MapFont(new Dimension(9.4487),
                            "Courier New",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        91.5076,
                    new MapColor(172, 53, 87),
                    new MapColor(168, 29, 79),
                        778.5673,
                    HorizontalAlignment.Center,
                        true,
                        388.4755,
                        new Dimension(838.5041),
                        true),
                    true,
                    "Name = 'John Doe'"),
            new Label(LabelPlacement.AboveEnd,
                    "aut",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    15405148.2547,
                    35020.1083,
                    true,
                    new Dimension(924.4677),
                new TextSymbol("adipisci qui ipsa",
                    new MapColor(142, 34, 35),
                    new MapColor(113, 211, 183),
                        new Dimension(604.6649),
                    new MapFont(new Dimension(680.4496),
                            "Helvetica",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        760.5143,
                    new MapColor(19, 199, 174),
                    new MapColor(43, 154, 187),
                        994.4127,
                    HorizontalAlignment.Right,
                        true,
                        21.6745,
                        new Dimension(64.9248),
                        true),
                    true,
                    "City = 'Toronto'"),
            new Label(LabelPlacement.AboveAlong,
                    "tenetur",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    27532394.2635,
                    36101.1174,
                    true,
                    new Dimension(964.3433),
                new TextSymbol("iusto tempora iste",
                    new MapColor(187, 132, 237),
                    new MapColor(188, 36, 236),
                        new Dimension(21.2047),
                    new MapFont(new Dimension(879.6256),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.None),
                        998.4732,
                    new MapColor(237, 104, 182),
                    new MapColor(221, 178, 24),
                        48.1291,
                    HorizontalAlignment.Left,
                        true,
                        174.7381,
                        new Dimension(453.1136),
                        true),
                    true,
                    "Name = 'John Doe'"),
            new Label(LabelPlacement.BelowEnd,
                    "nisi",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    20521008.5999,
                    9955.0105,
                    true,
                    new Dimension(163.9843),
                new TextSymbol("repellendus quam aut",
                    new MapColor(181, 228, 54),
                    new MapColor(25, 39, 31),
                        new Dimension(385.0565),
                    new MapFont(new Dimension(695.6842),
                            "Georgia",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        493.7540,
                    new MapColor(136, 45, 85),
                    new MapColor(48, 241, 123),
                        47.2637,
                    HorizontalAlignment.Left,
                        true,
                        364.5185,
                        new Dimension(14.4633),
                        true),
                    true,
                    "Province = 'Ontario'")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("odit",
                SortOrder.Ascending,
                    "et")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("illum repellat itaque",
                    "quis",
                    ["consequatur",
                        "blanditiis",
                        "et"],
                [new FieldInfo("token",
                        "corporis",
                        "quis",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.LongDate),
                        true,
                        true,
                    StatisticType.Stddev)],
                [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                            "qui",
                            "eum reprehenderit consequatur")),
                new TextPopupContent("quo est voluptas"),
                new AttachmentsPopupContent("voluptas praesentium veritatis",
                        "et repellat id illum",
                        AttachmentsPopupContentDisplayType.Auto)],
                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "phone",
                        "suscipit culpa vel",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("aliquam et qui",
                        "40274d84-b6b8-1cdf-787c-7f93a3992103",
                        () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "email",
                        "est"),
                new ActionButton("omnis est magnam",
                        "https://picsum.photos/640/480/?image=662",
                        "8fa55818-63aa-7cf8-6a54-93737979640c",
                        () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                        "group",
                        true,
                        true,
                        true,
                        "sunt"),
                new ActionButton("ducimus consequatur et",
                        "https://picsum.photos/640/480/?image=487",
                        "db9bad22-ad57-b29e-fc40-dd920fb98754",
                        () => { Console.WriteLine("explicabo"); return Task.CompletedTask; },
                        "comment",
                        true,
                        true,
                        true,
                        "rem")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem();
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("quod necessitatibus corrupti",
                    new MapColor(193, 120, 166),
                    new MapColor(236, 95, 233),
                        new Dimension(687.4418),
                    new MapFont(new Dimension(555.3375),
                            "Times New Roman",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.None),
                        74.6261,
                    new MapColor(167, 217, 197),
                    new MapColor(121, 14, 129),
                        373.7512,
                    HorizontalAlignment.Center,
                        true,
                        738.2896,
                        new Dimension(739.3289),
                        true),
                    "quae",
                [new RotationVariable("in",
                    Axis.Roll,
                    RotationType.Arithmetic,
                    new VisualVariableLegendOptions(true,
                            "similique facilis asperiores"),
                        "officiis",
                        "aliquam tempore ut"),
                new SizeVariable("omnis",
                        new Dimension(940.8935),
                        new Dimension(294.9774),
                        206.4016,
                        521.7184,
                        VisualValueRepresentation.Area,
                        VisualValueUnit.Unknown,
                        "aliquid",
                        "non",
                        true,
                        VisualAxis.WidthAndDepth,
                        "praesentium",
                        "id dolorem quia",
                    new VisualVariableLegendOptions(true,
                            "quia ut fugit")),
                new RotationVariable("nobis",
                    Axis.Tilt,
                    RotationType.Geographic,
                    new VisualVariableLegendOptions(true,
                            "dolores magnam doloremque"),
                        "porro",
                        "vel nobis esse"),
                new RotationVariable("error",
                    Axis.Tilt,
                    RotationType.Geographic,
                    new VisualVariableLegendOptions(true,
                            "nostrum libero soluta"),
                        "consequatur",
                        "velit excepturi minima")],
                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(38, 154, 138),
                            new MapColor(13, 112, 194)),
                        new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(75, 85, 222),
                            new MapColor(84, 42, 237))]),
                        855.5623,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(622.5301,
                                103.6828),
                        new AuthoringInfoField1ClassBreakInfos(795.8793,
                                821.4940),
                        new AuthoringInfoField1ClassBreakInfos(854.5870,
                                50.8563),
                        new AuthoringInfoField1ClassBreakInfos(877.1190,
                                765.0855)],
                            "vitae",
                            "dicta",
                            "aut"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(371.4187,
                                799.3148),
                        new AuthoringInfoField1ClassBreakInfos(376.7879,
                                275.3420)],
                            "animi",
                            "vero",
                            "enim"),
                        ["ab",
                            "ratione",
                            "qui",
                            "dicta"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "molestiae",
                        true,
                    LengthUnit.Decimeters,
                        312.1963,
                        68.5642,
                        102.4382,
                        573.4433));
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(9,
                    "ipsa",
                    "excepturi",
                    "ipsam");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("iste quaerat accusamus reiciendis",
                DrawingTool.Triangle,
                    "token",
                new Graphic(new Polygon([new MapPath([new MapPoint([974.7069,
                                381.0534,
                                63.7964]),
                            new MapPoint([88.3388,
                                319.7931]),
                            new MapPoint([240.4902,
                                347.7735,
                                953.1897]),
                            new MapPoint([268.1222,
                                107.5352,
                                291.6919,
                                36.1726])]),
                            new MapPath([new MapPoint([670.4539,
                                    394.7748,
                                    226.2324,
                                    332.0946]),
                                new MapPoint([234.8413,
                                    417.7584]),
                                new MapPoint([569.4993,
                                    527.0964,
                                    762.8450]),
                                new MapPoint([49.6038,
                                    812.8835])]),
                            new MapPath([new MapPoint([642.6267,
                                    488.1644]),
                                new MapPoint([424.6304,
                                    88.4150,
                                    762.3733]),
                                new MapPoint([831.5067,
                                    550.1418,
                                    275.5080]),
                                new MapPoint([529.9831,
                                    920.1435,
                                    779.5201])])],
                        new SpatialReference(5,
                                "reiciendis",
                                "ratione",
                                "autem"),
                        new Point(-140.0488,
                                -23.1438,
                                -48.0446,
                                -77.4597,
                                48.5332,
                            new SpatialReference(5,
                                    "vel",
                                    "amet",
                                    "accusantium"),
                                true,
                                true,
                                507.9352),
                            true,
                            true,
                            true),
                    new TextSymbol("quia nihil atque",
                        new MapColor(53, 219, 233),
                        new MapColor(97, 73, 18),
                            new Dimension(158.1345),
                        new MapFont(new Dimension(386.3671),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            717.7767,
                        new MapColor(127, 47, 11),
                        new MapColor(20, 93, 166),
                            54.6946,
                        HorizontalAlignment.Center,
                            true,
                            246.7441,
                            new Dimension(871.7417),
                            true),
                    new PopupTemplate("aut qui accusantium",
                            "est",
                            ["est",
                                "occaecati",
                                "rerum"],
                        [new FieldInfo("group",
                                "unde",
                                "commodi",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("updatedAt",
                                "inventore",
                                "est",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new MediaPopupContent("debitis consectetur quia",
                                "velit atque dolores nostrum et rem modi",
                            [new ImageMediaInfo("in dolor eveniet",
                                    "sed",
                                    "voluptatem quia quaerat",
                                new ImageMediaInfoValue("http://abbigail.net",
                                        "https://rosalind.info"),
                                    890.2980)],
                                2)],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "title",
                                "ratione sed id",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "category",
                                "sed nobis odio",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "updatedAt",
                                "sunt ratione architecto",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("blanditiis minima sit",
                                "be2b0134-dd50-1756-40b2-8ac3903bd16d",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "atque"),
                        new ActionButton("repudiandae minima ea",
                                "https://picsum.photos/640/480/?image=648",
                                "d0210220-99ca-9b4a-31da-15c484cddabf",
                                () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "molestiae")]),
                        new AttributesDictionary(),
                        true,
                        "error",
                        "perspiciatis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quam",
                            9)),
                    new Thumbnail("voluptatem",
                        "soluta",
                        235.1968,
                        246.7485)),
            new FeatureTemplate("omnis sint ut accusantium nam aut",
                DrawingTool.LeftArrow,
                    "comment",
                new Graphic(new Polyline([new MapPath([new MapPoint([769.5391,
                                731.4880,
                                919.8111,
                                529.0661]),
                            new MapPoint([447.6564,
                                574.7775,
                                423.3078]),
                            new MapPoint([561.9604,
                                237.2030])]),
                            new MapPath([new MapPoint([866.2260,
                                    49.1018]),
                                new MapPoint([552.0389,
                                    160.2546,
                                    336.4628]),
                                new MapPoint([167.4170,
                                    375.4782])])],
                        new SpatialReference(9,
                                "voluptas",
                                "quos",
                                "qui"),
                            true,
                            true),
                    new TextSymbol("rerum odit eos",
                        new MapColor(253, 54, 88),
                        new MapColor(227, 91, 129),
                            new Dimension(504.4163),
                        new MapFont(new Dimension(494.1461),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            59.9777,
                        new MapColor(249, 246, 67),
                        new MapColor(138, 55, 222),
                            517.0677,
                        HorizontalAlignment.Right,
                            true,
                            571.0951,
                            new Dimension(137.8220),
                            true),
                    new PopupTemplate("optio cupiditate velit",
                            "et",
                            ["quia",
                                "numquam"],
                        [new FieldInfo("status",
                                "sunt",
                                "ratione",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("avatar",
                                "autem",
                                "ut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("status",
                                "cumque",
                                "a",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new FieldsPopupContent([new FieldInfo("title",
                                    "temporibus",
                                    "nesciunt",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("avatar",
                                    "ipsum",
                                    "dolor",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("token",
                                    "iste",
                                    "id",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "consectetur enim est unde in voluptatem",
                                "optio ea architecto"),
                        new FieldsPopupContent([new FieldInfo("password",
                                    "laboriosam",
                                    "adipisci",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "ut reprehenderit est ratione ea enim",
                                "ut iusto consequatur"),
                        new RelationshipPopupContent("quia magni impedit",
                                "iusto et qui et voluptatem illum",
                                6,
                                "deserunt",
                            [new RelatedRecordsInfoFieldOrder("ullam",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("deserunt",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("id",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("nisi",
                                OrderBy.Desc)],
                                2)],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "id",
                                "itaque accusamus delectus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("natus sit at",
                                "https://picsum.photos/640/480/?image=700",
                                "8f9ae9e9-53ba-5c05-b8d4-da50cc2b526d",
                                () => { Console.WriteLine("nostrum"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "non"),
                        new ActionToggle("consectetur rerum commodi",
                                "9ca8ab2f-7b86-356a-b454-226fc0c49c88",
                                () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "eum"),
                        new ActionButton("asperiores porro eos",
                                "https://picsum.photos/640/480/?image=363",
                                "7a26f93f-e372-68d5-d37c-5030cc543320",
                                () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "animi"),
                        new ActionButton("sapiente rerum soluta",
                                "https://picsum.photos/640/480/?image=358",
                                "203feb9e-5963-4372-0f2a-f7f3736ee00b",
                                () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "nesciunt")]),
                        new AttributesDictionary(),
                        true,
                        "tempore",
                        "magnam",
                        new GraphicOrigin(Guid.NewGuid(),
                            "possimus",
                            8)),
                    new Thumbnail("eveniet",
                        "mollitia",
                        227.8024,
                        65.3881)),
            new FeatureTemplate("ut minima illum harum dolorum",
                DrawingTool.Arrow,
                    "title",
                new Graphic(new Polyline([new MapPath([new MapPoint([482.6040,
                                839.2930,
                                405.3958]),
                            new MapPoint([302.5818,
                                85.9401,
                                623.3890,
                                621.6506])]),
                            new MapPath([new MapPoint([803.0962,
                                    751.9675,
                                    101.0256,
                                    622.2188]),
                                new MapPoint([61.6944,
                                    742.3037,
                                    817.9257])])],
                        new SpatialReference(1,
                                "et",
                                "quo",
                                "dolores"),
                            true,
                            true),
                    new TextSymbol("necessitatibus molestiae unde",
                        new MapColor(151, 48, 8),
                        new MapColor(223, 153, 52),
                            new Dimension(462.9652),
                        new MapFont(new Dimension(218.1865),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            903.1838,
                        new MapColor(95, 142, 139),
                        new MapColor(28, 186, 72),
                            101.2850,
                        HorizontalAlignment.Left,
                            true,
                            878.5626,
                            new Dimension(554.0160),
                            true),
                    new PopupTemplate("ut pariatur et",
                            "eius",
                            ["exercitationem",
                                "qui"],
                        [new FieldInfo("id",
                                "nesciunt",
                                "iusto",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "dolor",
                                "eius",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("createdAt",
                                "autem",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Min)],
                        [new RelationshipPopupContent("non rerum exercitationem",
                                "rerum molestiae ab velit atque consequatur",
                                9,
                                "atque",
                            [new RelatedRecordsInfoFieldOrder("ut",
                                OrderBy.Asc)],
                                8)],
                        [new ExpressionInfo("return $feature.Name;",
                                "category",
                                "tempore assumenda nulla",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "group",
                                "repellat velit iste",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptate quo suscipit",
                                "252b69b9-7770-775e-9d5c-929f930c015a",
                                () => { Console.WriteLine("eligendi"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "reiciendis"),
                        new ActionToggle("qui accusamus unde",
                                "df83e8ec-7006-5517-f3b1-6daf7c4ca5b9",
                                () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "ut"),
                        new ActionButton("maiores labore maxime",
                                "https://picsum.photos/640/480/?image=391",
                                "1634458b-3aed-68a2-af97-36806a36fcba",
                                () => { Console.WriteLine("neque"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "reprehenderit")]),
                        new AttributesDictionary(),
                        true,
                        "eum",
                        "rerum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "optio",
                            2)),
                    new Thumbnail("natus",
                        "sit",
                        241.1208,
                        212.7452))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2006, 6, 17, 17, 12, 11),
                    new DateTime(2006, 1, 21, 13, 9, 19));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("alias",
                    "provident",
                new TimeExtent(new DateTime(2011, 3, 14, 3, 49, 16),
                        new DateTime(2003, 5, 1, 11, 18, 31)),
                new TimeInterval(TemporalTime.Seconds,
                        463.4854),
                    [new DateTime(2000, 8, 23, 5, 48, 23),
                        new DateTime(2001, 3, 17, 4, 1, 30),
                        new DateTime(2015, 7, 4, 9, 13, 11),
                        new DateTime(2001, 6, 25, 9, 14, 30)],
                    "America/Regina",
                    "esse");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Centuries,
                    608.9794);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2016, 8, 5, 4, 3, 26),
                    new DateTime(2013, 11, 22, 9, 6, 34));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
