@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson")"
                        Copyright="@("vitae")"
                        Title="@("illum et placeat")"
                        Opacity="@(0.6636)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.Reflect)"
                        DefinitionExpression="@("aut")"
                        DisplayField="@("sit")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("cumque",
                            47949520.3409))"
                        FullExtent="@(new Extent(176.3303,
                                -148.0408,
                                -23.6995,
                                -68.3293,
                                769.8741,
                                677.1697,
                                898.8513,
                                352.5345,
                            new SpatialReference(5,
                                    "enim",
                                    "voluptas",
                                    "iure"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Multipoint)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(44917227.0315)"
                        MinScale="@(27637.8600)"
                        ObjectIdField="@("eveniet")"
                        OutFields="@(["sint",
                            "veritatis",
                            "praesentium"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(602.3729)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(3,
                                "corrupti",
                                "nesciunt",
                                "totam"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(135.9791)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("nobis")"
                            EndField="@("consequatur")"
                            Stops="@([new DateTime(2018, 7, 23, 0, 4, 1),
                                new DateTime(2009, 6, 4, 3, 4, 34),
                                new DateTime(2018, 11, 4, 5, 13, 10),
                                new DateTime(2017, 1, 11, 8, 37, 21)])"
                            TimeZone="@("America/Monterrey")"
                            TrackIdField="@("reprehenderit")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Minutes)"
                                Value="@(883.1610)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2009, 11, 3, 4, 22, 52))"
                                End="@(new DateTime(2002, 1, 9, 5, 40, 4))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2017, 6, 6, 14, 13, 8))"
                            End="@(new DateTime(2006, 3, 19, 1, 0, 32))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("distinctio voluptatum autem vel vel voluptatem ex")"
                            DrawingTool="@(DrawingTool.Triangle)"
                            Name="@("email")"
                            Prototype="@(new Graphic(new Extent(134.5958,
                                        12.8427,
                                        83.9068,
                                        89.0820,
                                        134.3523,
                                        540.1250,
                                        234.3836,
                                        452.6092,
                                    new SpatialReference(8,
                                            "sit",
                                            "illo",
                                            "tenetur"),
                                        true,
                                        true),
                                new TextSymbol("doloremque fuga vel",
                                    new MapColor(26, 22, 211),
                                    new MapColor(220, 78, 244),
                                        new Dimension(945.1385),
                                    new MapFont(new Dimension(294.5203),
                                            "Helvetica",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        427.0815,
                                    new MapColor(173, 212, 10),
                                    new MapColor(70, 35, 236),
                                        279.1424,
                                    HorizontalAlignment.Left,
                                        true,
                                        731.8360,
                                        new Dimension(765.7612),
                                        true),
                                new PopupTemplate("repudiandae voluptatum incidunt",
                                        "voluptatem",
                                        ["quod",
                                            "unde",
                                            "totam",
                                            "magnam"],
                                    [new FieldInfo("password",
                                            "voluptate",
                                            "reiciendis",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("createdAt",
                                            "sit",
                                            "blanditiis",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("phone",
                                            "possimus",
                                            "laboriosam",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("avatar",
                                            "consequatur",
                                            "sed",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthDayYear),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                    [new AttachmentsPopupContent("porro minima doloribus",
                                            "est maxime voluptas quos voluptate libero",
                                            AttachmentsPopupContentDisplayType.Preview)],
                                    [new ExpressionInfo("return $feature['FieldName'];",
                                            "updatedAt",
                                            "minima quasi sit",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature['FieldName'];",
                                            "avatar",
                                            "quo molestias voluptate",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "email",
                                            "esse assumenda nostrum",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("suscipit veniam porro",
                                            "35d36e2d-ef53-461d-deee-bac9cbc09065",
                                            () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "password",
                                            "fuga"),
                                    new ActionToggle("laborum repellat veritatis",
                                            "93673d45-87ab-7e03-695a-b71fc5414df5",
                                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "title",
                                            "neque"),
                                    new ActionButton("earum corrupti saepe",
                                            "https://picsum.photos/640/480/?image=692",
                                            "6b3a7211-cd4c-01db-5533-2232131eb913",
                                            () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "consequatur"),
                                    new ActionButton("rerum totam sapiente",
                                            "https://picsum.photos/640/480/?image=1010",
                                            "4901cbf2-e877-02e3-72ba-82c5ab07e407",
                                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "assumenda")]),
                                    new AttributesDictionary(),
                                    true,
                                    "aspernatur",
                                    "ullam",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "sequi",
                                        7)))"
                            Thumbnail="@(new Thumbnail("laboriosam",
                                "unde",
                                267.0690,
                                34.0797))">
                        </FeatureTemplate>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(3, 100, 7),
                                        new MapColor(197, 105, 31)),
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(239, 44, 21),
                                        new MapColor(121, 12, 78)),
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(121, 223, 160),
                                        new MapColor(236, 218, 142)),
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(11, 95, 135),
                                        new MapColor(40, 164, 119))]),
                                    830.0639,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(90.4083,
                                            132.7905),
                                    new AuthoringInfoField1ClassBreakInfos(991.2325,
                                            750.9451)],
                                        "excepturi",
                                        "id",
                                        "nisi"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(204.2848,
                                            332.8168),
                                    new AuthoringInfoField1ClassBreakInfos(647.4089,
                                            935.7175),
                                    new AuthoringInfoField1ClassBreakInfos(829.5098,
                                            168.1540)],
                                        "et",
                                        "ea",
                                        "nesciunt"),
                                    ["aliquam",
                                        "et"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "aut",
                                    true,
                                LengthUnit.Yards,
                                    657.2339,
                                    27.8893,
                                    505.2611,
                                    389.1408))">
                        </SimpleRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("autem")"
                            ApiKey="@("eaque")"
                            AvgRating="@(451.3572)"
                            Categories="@(["excepturi",
                                "dolorem",
                                "animi"])"
                            Created="@(new DateTime(2009, 4, 27, 11, 21, 23))"
                            Culture="@("amet")"
                            Description="@("illum aperiam voluptatum et maxime tenetur")"
                            Extent="@(new Extent(-24.7814,
                                    99.8027,
                                    -26.9091,
                                    -49.9133,
                                    639.9863,
                                    157.3029,
                                    859.9290,
                                    908.4366,
                                new SpatialReference(3,
                                        "totam",
                                        "qui",
                                        "qui"),
                                    true,
                                    true))"
                            GroupCategories="@(["perspiciatis",
                                "sed"])"
                            LicenseInfo="@("cupiditate")"
                            Modified="@(new DateTime(2006, 11, 16, 19, 58, 19))"
                            Name="@("avatar")"
                            NumComments="@(452.9438)"
                            NumRatings="@(731.5114)"
                            NumViews="@(503.2867)"
                            Owner="@("D'angelo Hermiston")"
                            OwnerFolder="@("Alberta Swaniawski")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Immediate,
                                    ["qui",
                                        "ut"],
                                    "eligendi",
                                    "et",
                                    "sapiente",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("ea")"
                            Screenshots="@(["soluta",
                                "inventore",
                                "vero"])"
                            Size="@(3)"
                            Snippet="@("distinctio")"
                            Tags="@(["eligendi",
                                "quidem",
                                "perspiciatis"])"
                            Title="@("maiores eos veniam")"
                            TypeKeywords="@(["voluptatem",
                                "nulla"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("quia nihil et")"
                            StringContent="@("et")"
                            OutFields="@(["totam",
                                "et",
                                "et"])"
                            FieldInfos="@([new FieldInfo("status",
                                    "consectetur",
                                    "aut",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("password",
                                    "est",
                                    "eligendi",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("category",
                                    "accusantium",
                                    "nulla",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("status",
                                    "rerum",
                                    "rem",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count)])"
                            Content="@([new RelationshipPopupContent("dolorum temporibus atque",
                                    "suscipit nisi ea harum nostrum dolorem consequatur",
                                    1,
                                    "repellendus",
                                [new RelatedRecordsInfoFieldOrder("autem",
                                    OrderBy.Asc)],
                                    5),
                            new TextPopupContent("laboriosam exercitationem aliquam"),
                            new TextPopupContent("a recusandae labore"),
                            new MediaPopupContent("assumenda veniam ut",
                                    "omnis et doloribus qui tempore",
                                [new PieChartMediaInfo("aut quia quibusdam",
                                        "dolores",
                                        "vero harum magnam",
                                    new ChartMediaInfoValue(["in",
                                            "doloribus",
                                            "labore"],
                                            "rerum",
                                            "qui",
                                        [new ChartMediaInfoValueSeries("title",
                                                "debitis",
                                                199.4077),
                                        new ChartMediaInfoValueSeries("title",
                                                "consectetur",
                                                276.6410),
                                        new ChartMediaInfoValueSeries("email",
                                                "repudiandae",
                                                359.1407)],
                                        [new MapColor(225, 84, 93),
                                        new MapColor(64, 82, 125)])),
                                new LineChartMediaInfo("explicabo deleniti dignissimos",
                                        "sunt",
                                        "dicta quia rerum",
                                    new ChartMediaInfoValue(["veritatis",
                                            "laborum",
                                            "quae",
                                            "quia"],
                                            "non",
                                            "eum",
                                        [new ChartMediaInfoValueSeries("status",
                                                "esse",
                                                138.3108),
                                        new ChartMediaInfoValueSeries("token",
                                                "aut",
                                                865.8018),
                                        new ChartMediaInfoValueSeries("email",
                                                "necessitatibus",
                                                881.1899)],
                                        [new MapColor(9, 84, 153),
                                        new MapColor(84, 105, 137),
                                        new MapColor(92, 159, 61)]))],
                                    6)])"
                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                    "category",
                                    "dignissimos expedita velit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "status",
                                    "voluptatibus quam eaque",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "token",
                                    "veniam deleniti sapiente",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "group",
                                    "provident expedita consequatur",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("est omnis et",
                                    "c1004f8b-f93c-fed7-86c7-109dc019befe",
                                    () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "phone",
                                    "vel"),
                            new ActionButton("suscipit aliquam labore",
                                    "https://picsum.photos/640/480/?image=41",
                                    "607da217-892f-5be3-2c8a-40063a425313",
                                    () => { Console.WriteLine("at"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "quisquam"),
                            new ActionToggle("dolores facilis in",
                                    "3ebf9859-fd69-10c4-ae84-c521744a53fe",
                                    () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "id",
                                    "alias")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("ratione")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("a")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowRight)"
                            LabelExpression="@("tempora")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(24618503.4585)"
                            MinScale="@(40296.1547)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(315.4144))"
                            Symbol="@(new TextSymbol("voluptate doloribus repudiandae",
                                new MapColor(27, 93, 100),
                                new MapColor(65, 228, 91),
                                    new Dimension(235.8240),
                                new MapFont(new Dimension(715.0986),
                                        "Arial",
                                    MapFontStyle.Normal,
                                    FontWeight.Lighter,
                                    TextDecoration.None),
                                    478.2315,
                                new MapColor(105, 116, 162),
                                new MapColor(163, 157, 185),
                                    510.8493,
                                HorizontalAlignment.Left,
                                    true,
                                    408.8523,
                                    new Dimension(358.3230),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Country = 'Canada'")">
                        </Label>
                        <Field 
                            Name="@("category")"
                            Alias="@("est")"
                            Description="@("accusamus possimus quo dignissimos iure odio")"
                            Length="@(4)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "et" })"
                            ValueType="@(FieldValueType.Coordinate)"
                            Domain="@(new RangeDomain("voluptatem",
                                    "dolores",
                                    "token"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("maxime",
                                12248391.7827),
                                new Effect("eos",
                                    1534291.6388),
                                new Effect("tempora",
                                    45559936.6843)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(633.8008,
                                new Point(176.7091,
                                        -87.1172,
                                        -53.2328,
                                        -85.9623,
                                        531.3260,
                                    new SpatialReference(8,
                                            "mollitia",
                                            "voluptatem",
                                            "officiis"),
                                        true,
                                        true,
                                        593.8572),
                                    [6,
                                        4,
                                        5],
                                SpatialRelationship.Disjoint,
                                new TimeExtent(new DateTime(2012, 2, 27, 12, 51, 5),
                                        new DateTime(2009, 6, 4, 13, 48, 48)),
                                    QueryUnits.Miles,
                                    "Street = '123 Main St.'"))"
                            IncludedEffect="@([new Effect("ullam",
                                45634244.1122)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return Date();",
                                    "ipsam aliquam ut"))"
                            Mode="@(ElevationInfoMode.RelativeToGround)"
                            Offset="@(302.6486)"
                            Unit="@(ElevationUnit.Kilometers)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Extent(-23.0237,
                            -143.2707,
                            -89.0666,
                            -59.8763,
                            956.3321,
                            824.1523,
                            360.1421,
                            476.3903,
                        new SpatialReference(5,
                                "voluptatibus",
                                "aliquid",
                                "pariatur"),
                            true,
                            true),
                    new TextSymbol("cumque quam eos",
                        new MapColor(238, 129, 118),
                        new MapColor(197, 82, 27),
                            new Dimension(669.7934),
                        new MapFont(new Dimension(61.7555),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            513.8039,
                        new MapColor(237, 86, 188),
                        new MapColor(183, 60, 248),
                            995.6583,
                        HorizontalAlignment.Right,
                            true,
                            879.2626,
                            new Dimension(220.1963),
                            true),
                    new PopupTemplate("nisi cupiditate non",
                            "enim",
                            ["dolor",
                                "a",
                                "cupiditate",
                                "est"],
                        [new FieldInfo("email",
                                "magni",
                                "aspernatur",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("password",
                                "rerum",
                                "cupiditate",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("avatar",
                                "quo",
                                "repudiandae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("id",
                                "ea",
                                "sed",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new AttachmentsPopupContent("sint illum adipisci",
                                "earum quasi et dolor nam illum incidunt",
                                AttachmentsPopupContentDisplayType.Auto),
                        new AttachmentsPopupContent("est culpa perspiciatis",
                                "rem similique nisi doloribus quisquam et quam",
                                AttachmentsPopupContentDisplayType.Preview),
                        new TextPopupContent("aperiam iusto nulla"),
                        new FieldsPopupContent([new FieldInfo("id",
                                    "voluptas",
                                    "quas",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "vel itaque nihil expedita quia cupiditate aut",
                                "distinctio facilis accusantium")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "token",
                                "vel dicta numquam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "password",
                                "a voluptatibus eos",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "updatedAt",
                                "iure temporibus inventore",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "password",
                                "odit officiis voluptates",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("tempora debitis natus",
                                "86151037-87fa-588b-65d1-7f8fc0a62cb6",
                                () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "quaerat")]),
                        new AttributesDictionary(),
                        true,
                        "esse",
                        "eum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "cupiditate",
                            4)),
                new Graphic(new Polygon([new MapPath([new MapPoint([650.5095,
                                354.7156,
                                321.8577]),
                            new MapPoint([281.1147,
                                616.2404,
                                593.8973])]),
                            new MapPath([new MapPoint([794.3570,
                                    888.1972,
                                    539.1379]),
                                new MapPoint([726.0043,
                                    951.2140]),
                                new MapPoint([246.7582,
                                    753.9663,
                                    727.2256]),
                                new MapPoint([98.2896,
                                    214.9139])]),
                            new MapPath([new MapPoint([952.0111,
                                    101.7653,
                                    696.0137,
                                    341.8993]),
                                new MapPoint([503.5217,
                                    282.4005,
                                    950.8037,
                                    766.1298]),
                                new MapPoint([516.4453,
                                    155.1689,
                                    133.1055,
                                    11.7780]),
                                new MapPoint([86.1928,
                                    521.1947,
                                    219.6607])])],
                        new SpatialReference(1,
                                "rerum",
                                "sit",
                                "in"),
                        new Point(2.2551,
                                63.0449,
                                20.2705,
                                51.1347,
                                571.0131,
                            new SpatialReference(7,
                                    "eligendi",
                                    "tempora",
                                    "explicabo"),
                                true,
                                true,
                                382.8868),
                            true,
                            true,
                            true),
                    new TextSymbol("est beatae aut",
                        new MapColor(23, 133, 87),
                        new MapColor(53, 213, 190),
                            new Dimension(693.8105),
                        new MapFont(new Dimension(618.1867),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            176.1087,
                        new MapColor(210, 154, 227),
                        new MapColor(83, 27, 138),
                            401.5594,
                        HorizontalAlignment.Left,
                            true,
                            370.4933,
                            new Dimension(555.6287),
                            true),
                    new PopupTemplate("eum qui repellat",
                            "doloribus",
                            ["rerum",
                                "dolor",
                                "quibusdam",
                                "dolorum"],
                        [new FieldInfo("token",
                                "accusamus",
                                "officia",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new TextPopupContent("ea rerum vel"),
                        new AttachmentsPopupContent("accusamus ex corporis",
                                "enim dolorum ratione dolore reiciendis molestiae laborum",
                                AttachmentsPopupContentDisplayType.Auto),
                        new RelationshipPopupContent("nisi atque eos",
                                "aut porro vero suscipit vero aliquam tempore",
                                1,
                                "tempore",
                            [new RelatedRecordsInfoFieldOrder("quia",
                                OrderBy.Desc)],
                                1)],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "password",
                                "adipisci eum suscipit",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "category",
                                "doloremque et et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("atque iusto praesentium",
                                "https://picsum.photos/640/480/?image=985",
                                "413326b5-566c-ba75-acb1-78f23dcf5cc5",
                                () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "eum"),
                        new ActionToggle("ducimus quis laborum",
                                "62cc2f2f-9229-f7cb-8202-91ea9be4628b",
                                () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "unde",
                        "enim",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quod",
                            8)),
                new Graphic(new Polygon([new MapPath([new MapPoint([403.1284,
                                270.6076]),
                            new MapPoint([775.2772,
                                727.4119])]),
                            new MapPath([new MapPoint([655.0668,
                                    403.2783,
                                    887.5455,
                                    509.2067]),
                                new MapPoint([508.2894,
                                    342.5814,
                                    763.4393,
                                    910.4194])]),
                            new MapPath([new MapPoint([213.3772,
                                    288.5526,
                                    39.7724,
                                    262.7351]),
                                new MapPoint([688.8435,
                                    175.7775,
                                    299.0408,
                                    500.0446])]),
                            new MapPath([new MapPoint([135.8439,
                                    511.3564]),
                                new MapPoint([51.2648,
                                    75.4646]),
                                new MapPoint([662.3396,
                                    62.2560,
                                    437.0352])])],
                        new SpatialReference(7,
                                "debitis",
                                "et",
                                "commodi"),
                        new Point(148.3946,
                                5.6179,
                                -148.2803,
                                57.0488,
                                271.6987,
                            new SpatialReference(8,
                                    "cum",
                                    "et",
                                    "numquam"),
                                true,
                                true,
                                116.6791),
                            true,
                            true,
                            true),
                    new TextSymbol("blanditiis reprehenderit consequatur",
                        new MapColor(248, 59, 124),
                        new MapColor(135, 100, 148),
                            new Dimension(369.0696),
                        new MapFont(new Dimension(855.5851),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            548.4734,
                        new MapColor(22, 28, 19),
                        new MapColor(171, 212, 138),
                            316.2296,
                        HorizontalAlignment.Left,
                            true,
                            859.1792,
                            new Dimension(114.2973),
                            true),
                    new PopupTemplate("incidunt non velit",
                            "animi",
                            ["voluptatem",
                                "doloremque",
                                "iure",
                                "ab"],
                        [new FieldInfo("password",
                                "eligendi",
                                "est",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("group",
                                "quasi",
                                "beatae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "mollitia",
                                    "et aut quas")),
                        new AttachmentsPopupContent("qui et est",
                                "laudantium dolores nostrum nemo cumque nihil",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "group",
                                "repudiandae necessitatibus impedit",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "phone",
                                "quod sit libero",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "email",
                                "ut consequatur eos",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "status",
                                "et et vitae",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("veritatis dolorem rerum",
                                "7e320894-0a8a-c728-e58b-fcef05ad354f",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "aperiam"),
                        new ActionButton("enim dolor eum",
                                "https://picsum.photos/640/480/?image=1048",
                                "c1bc54c2-f26c-d577-0930-b777e725ce47",
                                () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "dolor"),
                        new ActionToggle("explicabo dolore rerum",
                                "82827167-6bae-0d24-de87-2f90b020b00c",
                                () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "reprehenderit")]),
                        new AttributesDictionary(),
                        true,
                        "tempora",
                        "eligendi",
                        new GraphicOrigin(Guid.NewGuid(),
                            "temporibus",
                            8))],
                [new Graphic(new Polygon([new MapPath([new MapPoint([564.8991,
                                184.2695,
                                695.7223,
                                632.7531]),
                            new MapPoint([477.5736,
                                932.1423,
                                256.3485,
                                245.3731]),
                            new MapPoint([675.5913,
                                283.6797,
                                471.1877]),
                            new MapPoint([601.5927,
                                606.6103])]),
                            new MapPath([new MapPoint([813.7457,
                                    484.8516,
                                    369.6757,
                                    870.6051]),
                                new MapPoint([928.0498,
                                    281.8568,
                                    816.5526])]),
                            new MapPath([new MapPoint([732.9727,
                                    721.4736,
                                    176.8727]),
                                new MapPoint([401.8869,
                                    154.9575]),
                                new MapPoint([808.8102,
                                    617.7343]),
                                new MapPoint([228.0284,
                                    540.9090,
                                    858.2800])]),
                            new MapPath([new MapPoint([635.2582,
                                    969.8721,
                                    797.3277,
                                    317.3014]),
                                new MapPoint([366.5750,
                                    312.9259,
                                    222.5650,
                                    48.4841]),
                                new MapPoint([635.2160,
                                    409.5732,
                                    515.5448,
                                    223.3032])])],
                        new SpatialReference(4,
                                "in",
                                "facilis",
                                "dolorem"),
                        new Point(7.5072,
                                77.7183,
                                113.8678,
                                51.8485,
                                996.2053,
                            new SpatialReference(6,
                                    "culpa",
                                    "repudiandae",
                                    "autem"),
                                true,
                                true,
                                973.5854),
                            true,
                            true,
                            true),
                    new TextSymbol("deleniti assumenda dicta",
                        new MapColor(157, 136, 126),
                        new MapColor(244, 89, 7),
                            new Dimension(622.8903),
                        new MapFont(new Dimension(623.2773),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            80.5913,
                        new MapColor(91, 70, 183),
                        new MapColor(22, 167, 4),
                            969.9881,
                        HorizontalAlignment.Left,
                            true,
                            339.2753,
                            new Dimension(932.2864),
                            true),
                    new PopupTemplate("nisi aliquid rerum",
                            "dolorem",
                            ["incidunt",
                                "ex"],
                        [new FieldInfo("avatar",
                                "asperiores",
                                "autem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("phone",
                                "deserunt",
                                "non",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Min)],
                        [new RelationshipPopupContent("et et dolorum",
                                "necessitatibus deserunt fuga quidem saepe",
                                1,
                                "ad",
                            [new RelatedRecordsInfoFieldOrder("accusamus",
                                OrderBy.Asc)],
                                6),
                        new AttachmentsPopupContent("dolores omnis officia",
                                "aut consequuntur et in sed dolorem",
                                AttachmentsPopupContentDisplayType.Preview),
                        new AttachmentsPopupContent("deleniti voluptatem neque",
                                "temporibus sed voluptate officiis",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("return $feature.Name;",
                                "group",
                                "odit repudiandae aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "updatedAt",
                                "veniam rerum rerum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("quidem aliquam magnam",
                                "3a68664c-684f-0280-ec0e-549ec1bd83cb",
                                () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "magni")]),
                        new AttributesDictionary(),
                        true,
                        "veniam",
                        "doloribus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "numquam",
                            1)),
                new Graphic(new Polygon([new MapPath([new MapPoint([850.0883,
                                474.1191,
                                893.8113,
                                301.0252]),
                            new MapPoint([235.1041,
                                371.8568]),
                            new MapPoint([738.4910,
                                553.7599]),
                            new MapPoint([69.8437,
                                588.5740])])],
                        new SpatialReference(2,
                                "architecto",
                                "sit",
                                "fuga"),
                        new Point(-114.5752,
                                77.8350,
                                63.8125,
                                82.5211,
                                31.2659,
                            new SpatialReference(2,
                                    "repudiandae",
                                    "vel",
                                    "sequi"),
                                true,
                                true,
                                606.7764),
                            true,
                            true,
                            true),
                    new TextSymbol("ut recusandae explicabo",
                        new MapColor(184, 125, 79),
                        new MapColor(13, 167, 189),
                            new Dimension(47.0511),
                        new MapFont(new Dimension(494.2094),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            252.1910,
                        new MapColor(65, 222, 67),
                        new MapColor(233, 181, 146),
                            17.1983,
                        HorizontalAlignment.Right,
                            true,
                            245.9513,
                            new Dimension(135.2797),
                            true),
                    new PopupTemplate("deserunt dolorem voluptates",
                            "et",
                            ["doloremque",
                                "modi",
                                "ut",
                                "non"],
                        [new FieldInfo("password",
                                "odit",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("category",
                                "repudiandae",
                                "officiis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new FieldsPopupContent([new FieldInfo("updatedAt",
                                    "est",
                                    "accusamus",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("email",
                                    "assumenda",
                                    "ab",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "qui vero magni occaecati recusandae aut",
                                "quia asperiores non"),
                        new FieldsPopupContent([new FieldInfo("updatedAt",
                                    "voluptas",
                                    "dicta",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("comment",
                                    "repellat",
                                    "eum",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("token",
                                    "laborum",
                                    "laboriosam",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "aut nihil sequi dolor doloribus vero assumenda",
                                "natus animi cupiditate"),
                        new TextPopupContent("incidunt debitis quis"),
                        new TextPopupContent("ut rerum aliquid")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "avatar",
                                "corporis labore doloribus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "name",
                                "perspiciatis odit molestiae",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("est dignissimos doloribus",
                                "4d22daf5-a73d-b990-3a15-51d057a1b0bf",
                                () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "culpa"),
                        new ActionToggle("ab facilis at",
                                "62c7aa8e-0ecd-be2c-329b-2813b366e822",
                                () => { Console.WriteLine("nesciunt"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "dicta"),
                        new ActionToggle("consectetur perferendis ullam",
                                "d4e2870b-7171-c6a2-0d25-14d1ef68661b",
                                () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "occaecati"),
                        new ActionButton("recusandae modi voluptate",
                                "https://picsum.photos/640/480/?image=133",
                                "c7ffa1b8-7be1-4006-c507-1a81878a8576",
                                () => { Console.WriteLine("eveniet"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "autem",
                        "neque",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aliquam",
                            9)),
                new Graphic(new Polyline([new MapPath([new MapPoint([890.3785,
                                818.7391]),
                            new MapPoint([658.8991,
                                690.9655,
                                630.2441])]),
                            new MapPath([new MapPoint([446.2618,
                                    667.3847,
                                    608.0806,
                                    681.2634]),
                                new MapPoint([330.0023,
                                    505.0893,
                                    796.9402,
                                    586.1570]),
                                new MapPoint([344.7413,
                                    702.3786,
                                    801.7889,
                                    8.5718]),
                                new MapPoint([607.9203,
                                    647.1926,
                                    673.3543,
                                    149.6568])]),
                            new MapPath([new MapPoint([441.8031,
                                    280.5542]),
                                new MapPoint([474.0934,
                                    517.0832]),
                                new MapPoint([91.2451,
                                    835.9939])]),
                            new MapPath([new MapPoint([119.1702,
                                    857.5728,
                                    784.4984]),
                                new MapPoint([676.2625,
                                    254.4210,
                                    876.6935])])],
                        new SpatialReference(2,
                                "illum",
                                "sunt",
                                "quo"),
                            true,
                            true),
                    new TextSymbol("doloribus aut doloribus",
                        new MapColor(44, 220, 1),
                        new MapColor(97, 239, 193),
                            new Dimension(428.6284),
                        new MapFont(new Dimension(514.3307),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            267.8610,
                        new MapColor(175, 35, 104),
                        new MapColor(228, 47, 158),
                            299.3570,
                        HorizontalAlignment.Left,
                            true,
                            26.6884,
                            new Dimension(132.5516),
                            true),
                    new PopupTemplate("illo ad eum",
                            "similique",
                            ["alias",
                                "ducimus",
                                "in",
                                "odit"],
                        [new FieldInfo("title",
                                "voluptatibus",
                                "nihil",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("avatar",
                                "et",
                                "rerum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("email",
                                "nulla",
                                "voluptates",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("name",
                                "ut",
                                "sunt",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Var)],
                        [new AttachmentsPopupContent("quod quia iusto",
                                "dolorem et qui ut",
                                AttachmentsPopupContentDisplayType.Auto),
                        new TextPopupContent("et tempora nihil"),
                        new TextPopupContent("in neque autem"),
                        new FieldsPopupContent([new FieldInfo("group",
                                    "exercitationem",
                                    "ut",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("avatar",
                                    "quisquam",
                                    "iste",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("createdAt",
                                    "qui",
                                    "iste",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "non dolorem voluptatem quidem animi",
                                "ducimus rerum illum")],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "id",
                                "odio fuga quia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "phone",
                                "architecto tenetur facilis",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "status",
                                "quia omnis dolore",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("suscipit placeat eligendi",
                                "62fd43bb-b243-aea0-aabd-47ba10a7e882",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "minus")]),
                        new AttributesDictionary(),
                        true,
                        "quasi",
                        "repellat",
                        new GraphicOrigin(Guid.NewGuid(),
                            "rerum",
                            1))],
                    ["dolorem",
                        "ut",
                        "cupiditate"],
                [new Graphic(new Point(-85.9474,
                            -89.0231,
                            -165.1254,
                            9.3646,
                            952.5868,
                        new SpatialReference(2,
                                "aut",
                                "et",
                                "numquam"),
                            true,
                            true,
                            483.3757),
                    new TextSymbol("ea at culpa",
                        new MapColor(54, 239, 45),
                        new MapColor(218, 89, 19),
                            new Dimension(938.1154),
                        new MapFont(new Dimension(266.1324),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            726.0797,
                        new MapColor(8, 140, 132),
                        new MapColor(109, 166, 88),
                            560.1855,
                        HorizontalAlignment.Center,
                            true,
                            370.2416,
                            new Dimension(861.1519),
                            true),
                    new PopupTemplate("maxime ut voluptatem",
                            "et",
                            ["esse",
                                "sunt",
                                "quia"],
                        [new FieldInfo("password",
                                "non",
                                "labore",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new FieldsPopupContent([new FieldInfo("status",
                                    "dolorem",
                                    "maxime",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("password",
                                    "fuga",
                                    "in",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("group",
                                    "dolore",
                                    "soluta",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("updatedAt",
                                    "dolorem",
                                    "sed",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "vel fugit laborum omnis quis velit",
                                "asperiores et sint")],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "name",
                                "ea temporibus pariatur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("eligendi modi consequatur",
                                "e9d08a1a-91d8-2c13-c119-d4e16a531f5f",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "beatae")]),
                        new AttributesDictionary(),
                        true,
                        "rerum",
                        "modi",
                        new GraphicOrigin(Guid.NewGuid(),
                            "vel",
                            9)),
                new Graphic(new Polyline([new MapPath([new MapPoint([431.9048,
                                397.3252]),
                            new MapPoint([18.3318,
                                751.5471,
                                362.5832]),
                            new MapPoint([496.3820,
                                844.0889,
                                887.2637])]),
                            new MapPath([new MapPoint([386.3030,
                                    405.7297]),
                                new MapPoint([121.5684,
                                    202.9962])]),
                            new MapPath([new MapPoint([885.5359,
                                    932.0480,
                                    503.6066]),
                                new MapPoint([425.0042,
                                    438.6474]),
                                new MapPoint([718.6416,
                                    114.8652,
                                    931.2963,
                                    117.2302])])],
                        new SpatialReference(6,
                                "occaecati",
                                "reprehenderit",
                                "quidem"),
                            true,
                            true),
                    new TextSymbol("et adipisci sed",
                        new MapColor(28, 24, 140),
                        new MapColor(176, 246, 112),
                            new Dimension(545.4618),
                        new MapFont(new Dimension(393.6751),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            121.3948,
                        new MapColor(139, 5, 12),
                        new MapColor(205, 77, 214),
                            938.3761,
                        HorizontalAlignment.Right,
                            true,
                            740.4704,
                            new Dimension(395.6748),
                            true),
                    new PopupTemplate("in adipisci et",
                            "eum",
                            ["eligendi",
                                "blanditiis",
                                "velit",
                                "aut"],
                        [new FieldInfo("name",
                                "animi",
                                "blanditiis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("updatedAt",
                                "tempora",
                                "quae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new AttachmentsPopupContent("sequi praesentium impedit",
                                "dolorem tenetur aut iure esse expedita autem",
                                AttachmentsPopupContentDisplayType.Auto),
                        new TextPopupContent("repellendus earum aperiam"),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "ducimus",
                                    "a vel sunt")),
                        new RelationshipPopupContent("alias consequatur sit",
                                "qui eius a quam expedita dicta",
                                9,
                                "quia",
                            [new RelatedRecordsInfoFieldOrder("optio",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("nostrum",
                                OrderBy.Asc)],
                                9)],
                        [new ExpressionInfo("return Date();",
                                "phone",
                                "hic quisquam minima",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("earum qui incidunt",
                                "fd44668e-0c66-1183-6522-d6684b96d982",
                                () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "aspernatur"),
                        new ActionToggle("id fuga eum",
                                "9e3faa40-6abd-2a53-38bc-d7a3a7dcab0d",
                                () => { Console.WriteLine("consectetur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "magnam"),
                        new ActionToggle("id ut voluptates",
                                "46d3ec4e-af42-c3a5-f789-6560c7dbce08",
                                () => { Console.WriteLine("mollitia"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "et"),
                        new ActionToggle("dignissimos doloribus autem",
                                "2f5faa30-f2c0-c9e0-3856-02c75b11f136",
                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "comment",
                                "tempore")]),
                        new AttributesDictionary(),
                        true,
                        "repudiandae",
                        "eius",
                        new GraphicOrigin(Guid.NewGuid(),
                            "corrupti",
                            4))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["sed",
                    "esse",
                    "pariatur",
                    "est"],
                    ["title",
                        "updatedAt",
                        "group"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("avatar");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("phone",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polygon([new MapPath([new MapPoint([655.3307,
                                68.9497]),
                            new MapPoint([812.7224,
                                892.5410]),
                            new MapPoint([876.5757,
                                609.4284,
                                665.8479,
                                651.6839])]),
                            new MapPath([new MapPoint([410.9195,
                                    931.0648]),
                                new MapPoint([299.3178,
                                    627.3939]),
                                new MapPoint([346.4168,
                                    69.9285,
                                    45.9167]),
                                new MapPoint([849.0597,
                                    409.0890,
                                    194.5921])]),
                            new MapPath([new MapPoint([814.3508,
                                    358.9893,
                                    703.9414]),
                                new MapPoint([45.4522,
                                    190.9074]),
                                new MapPoint([936.9001,
                                    120.8565,
                                    430.2531])])],
                        new SpatialReference(2,
                                "ipsam",
                                "quibusdam",
                                "sequi"),
                        new Point(23.3899,
                                -8.3228,
                                63.4302,
                                -44.6749,
                                143.6239,
                            new SpatialReference(5,
                                    "iusto",
                                    "culpa",
                                    "aliquam"),
                                true,
                                true,
                                640.0189),
                            true,
                            true,
                            true),
                    new TextSymbol("in distinctio similique",
                        new MapColor(231, 176, 78),
                        new MapColor(247, 33, 66),
                            new Dimension(60.0911),
                        new MapFont(new Dimension(56.6552),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            606.4022,
                        new MapColor(209, 88, 58),
                        new MapColor(68, 176, 124),
                            698.6072,
                        HorizontalAlignment.Right,
                            true,
                            88.6844,
                            new Dimension(210.2388),
                            true),
                    new PopupTemplate("accusantium similique recusandae",
                            "dolores",
                            ["cupiditate",
                                "aliquam",
                                "ipsam",
                                "fugit"],
                        [new FieldInfo("title",
                                "rerum",
                                "eveniet",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("email",
                                "ipsum",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("group",
                                "omnis",
                                "accusantium",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new RelationshipPopupContent("et exercitationem ut",
                                "quas maiores aut ut",
                                2,
                                "adipisci",
                            [new RelatedRecordsInfoFieldOrder("rerum",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("itaque",
                                OrderBy.Asc)],
                                1)],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "phone",
                                "est dolorem repudiandae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "status",
                                "aliquam et quia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "group",
                                "error provident exercitationem",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("ratione omnis soluta",
                                "8412f911-551d-f60f-4703-d08fe19fef2f",
                                () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "est"),
                        new ActionToggle("nulla magnam quo",
                                "d1b5efa9-08f3-047e-7c5d-13fc840db1bd",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "totam"),
                        new ActionToggle("facilis voluptatem eos",
                                "da9f35b5-4f79-cac9-a700-fb8654a2b742",
                                () => { Console.WriteLine("illo"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "quisquam"),
                        new ActionToggle("quas et quia",
                                "bb550ba0-eca6-c151-010e-1d52c271f187",
                                () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "necessitatibus")]),
                        new AttributesDictionary(),
                        true,
                        "ab",
                        "excepturi",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quis",
                            9))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([9,
                    5,
                    5],
                    true,
                    718.8819,
                    757.1391,
                    "4.5.6.1",
                new Point(-155.9967,
                        40.7921,
                        72.9939,
                        -62.6355,
                        330.8662,
                    new SpatialReference(1,
                            "voluptas",
                            "provident",
                            "facilis"),
                        true,
                        true,
                        919.1602),
                    8,
                    ["et",
                        "accusantium",
                        "praesentium",
                        "soluta"],
                    "beatae",
                    new DateTime(2013, 5, 14, 19, 5, 18),
                    976.2083,
                    8,
                    "iste",
                    7),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([1,
                    2,
                    4],
                    true,
                    742.3869,
                    53.6895,
                    "7.0.5.2",
                new Polyline([new MapPath([new MapPoint([995.5030,
                            641.0650]),
                        new MapPoint([879.1698,
                            963.8139,
                            99.8128,
                            186.4102]),
                        new MapPoint([646.2446,
                            820.2805]),
                        new MapPoint([947.5763,
                            363.2669,
                            614.0359])]),
                        new MapPath([new MapPoint([608.4322,
                                627.5090]),
                            new MapPoint([884.7942,
                                630.6712,
                                647.1957]),
                            new MapPoint([675.5705,
                                540.8636])]),
                        new MapPath([new MapPoint([434.4848,
                                2.2154,
                                503.8881]),
                            new MapPoint([498.3790,
                                864.4246,
                                283.8141]),
                            new MapPoint([396.3219,
                                723.7012]),
                            new MapPoint([284.2579,
                                132.0277])]),
                        new MapPath([new MapPoint([353.4844,
                                705.3647,
                                350.9460]),
                            new MapPoint([657.2184,
                                665.0752]),
                            new MapPoint([140.0873,
                                611.8304])])],
                    new SpatialReference(8,
                            "modi",
                            "nihil",
                            "expedita"),
                        true,
                        true),
                    1,
                    ["repellendus",
                        "provident",
                        "at",
                        "dolorem"],
                    "vitae",
                    new DateTime(2000, 4, 3, 12, 58, 48),
                    831.8750,
                    4,
                    "ducimus",
                    2),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([1,
                    3,
                    2,
                    6],
                    true,
                    404.6889,
                    111.0944,
                    "0.7.8.6",
                new Point(57.4912,
                        -48.8213,
                        -58.7543,
                        61.6994,
                        651.9813,
                    new SpatialReference(1,
                            "minima",
                            "doloribus",
                            "sunt"),
                        true,
                        true,
                        20.7139),
                    5,
                    ["velit",
                        "doloribus"],
                    "voluptatem",
                    new DateTime(2016, 11, 20, 3, 53, 51),
                    742.9007,
                    1,
                    "sit",
                    3),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([7,
                    4,
                    5,
                    4],
                    true,
                    487.4587,
                    404.9786,
                    "9.0.7.8",
                new Polyline([new MapPath([new MapPoint([714.4219,
                            770.2385]),
                        new MapPoint([931.4486,
                            585.6996])]),
                        new MapPath([new MapPoint([800.2427,
                                124.3442]),
                            new MapPoint([257.6397,
                                333.4510,
                                710.1513,
                                430.4736]),
                            new MapPoint([239.5760,
                                331.9997,
                                174.9516,
                                590.0973])])],
                    new SpatialReference(7,
                            "nostrum",
                            "consequatur",
                            "fugiat"),
                        true,
                        true),
                    9,
                    ["qui",
                        "quidem"],
                    "totam",
                    new DateTime(2021, 8, 11, 10, 43, 37),
                    339.9257,
                    9,
                    "voluptatum",
                    6),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.VividLight;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Name;",
                        "odit aut et"),
                ElevationInfoMode.AbsoluteHeight,
                    261.5216,
                ElevationUnit.Unknown);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("doloribus",
                    12170951.8370)],
                    true,
                new FeatureFilter(459.2253,
                    new Polygon([new MapPath([new MapPoint([429.3317,
                                722.8062,
                                666.1849]),
                            new MapPoint([313.5489,
                                907.2591,
                                810.7841,
                                851.7571]),
                            new MapPoint([904.8601,
                                18.3749,
                                832.7236,
                                951.8203])]),
                            new MapPath([new MapPoint([264.5434,
                                    101.0928]),
                                new MapPoint([447.3589,
                                    281.6266,
                                    873.2633]),
                                new MapPoint([744.3142,
                                    197.8150,
                                    403.6288,
                                    607.6540])])],
                        new SpatialReference(1,
                                "cupiditate",
                                "sed",
                                "quia"),
                        new Point(65.6044,
                                32.1382,
                                139.5045,
                                -35.9977,
                                480.6229,
                            new SpatialReference(1,
                                    "nulla",
                                    "veniam",
                                    "harum"),
                                true,
                                true,
                                550.3404),
                            true,
                            true,
                            true),
                        [2,
                            2,
                            1,
                            1],
                    SpatialRelationship.Contains,
                    new TimeExtent(new DateTime(2023, 5, 27, 14, 5, 16),
                            new DateTime(2003, 6, 23, 2, 53, 7)),
                        QueryUnits.Feet,
                        "PostalCode = 'M5V 1J9'"),
                    [new Effect("voluptatum",
                        43444495.9964)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "comment",
                    "aut",
                    "sed perferendis sequi nulla corporis provident quae",
                    8,
                    true,
                    true,
                    new { Value = "libero" },
                FieldValueType.None,
                new RangeDomain("consequuntur",
                        "est",
                        "createdAt")),
            new Field(default,
                    "comment",
                    "accusamus",
                    "totam velit illo ipsa sed et porro",
                    1,
                    true,
                    true,
                    new { Value = "voluptatem" },
                FieldValueType.UniqueIdentifier,
                new RangeDomain("veritatis",
                        "et",
                        "token"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(72.7852,
                    -89.0665,
                    52.5473,
                    -4.9932,
                    908.9386,
                    986.0196,
                    377.8939,
                    863.3510,
                new SpatialReference(4,
                        "vitae",
                        "eveniet",
                        "totam"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Point;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveAlong,
                    "a",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    24074528.7662,
                    47828.8097,
                    true,
                    new Dimension(443.7322),
                new TextSymbol("est consectetur temporibus",
                    new MapColor(232, 11, 176),
                    new MapColor(59, 218, 133),
                        new Dimension(633.6368),
                    new MapFont(new Dimension(909.0884),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        578.5626,
                    new MapColor(28, 237, 80),
                    new MapColor(188, 163, 188),
                        595.6136,
                    HorizontalAlignment.Center,
                        true,
                        698.6122,
                        new Dimension(846.2821),
                        true),
                    true,
                    "Phone = '555-555-5555'"),
            new Label(LabelPlacement.AboveLeft,
                    "unde",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    7165562.4728,
                    45664.7109,
                    true,
                    new Dimension(172.2564),
                new TextSymbol("eos facere occaecati",
                    new MapColor(204, 93, 208),
                    new MapColor(26, 169, 23),
                        new Dimension(556.8172),
                    new MapFont(new Dimension(965.4357),
                            "Arial",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.None),
                        583.3319,
                    new MapColor(93, 123, 241),
                    new MapColor(1, 42, 39),
                        380.5663,
                    HorizontalAlignment.Right,
                        true,
                        907.3274,
                        new Dimension(301.3345),
                        true),
                    true,
                    "ObjectID = 1"),
            new Label(LabelPlacement.AboveLeft,
                    "harum",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    26949354.0461,
                    19236.2932,
                    true,
                    new Dimension(570.9956),
                new TextSymbol("omnis natus et",
                    new MapColor(202, 84, 73),
                    new MapColor(0, 27, 23),
                        new Dimension(693.5276),
                    new MapFont(new Dimension(608.1978),
                            "Courier New",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        558.3551,
                    new MapColor(133, 150, 145),
                    new MapColor(166, 103, 172),
                        644.4880,
                    HorizontalAlignment.Right,
                        true,
                        182.3269,
                        new Dimension(889.4305),
                        true),
                    true,
                    "ObjectID = 1")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("officia",
                SortOrder.Ascending,
                    "animi"),
            new OrderedLayerOrderBy("et",
                SortOrder.Ascending,
                    "rerum"),
            new OrderedLayerOrderBy("repellendus",
                SortOrder.Descending,
                    "repellendus")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("quod impedit voluptatem",
                    "optio",
                    ["ut",
                        "saepe",
                        "in"],
                [new FieldInfo("name",
                        "commodi",
                        "sint",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(1,
                            true,
                        DateFormat.LongDateShortTime24),
                        true,
                        true,
                    StatisticType.Max)],
                [new MediaPopupContent("nemo asperiores aut",
                        "velit hic laboriosam libero repudiandae quia perspiciatis",
                    [new ImageMediaInfo("mollitia odit illum",
                            "quod",
                            "facere quis dignissimos",
                        new ImageMediaInfoValue("http://margie.org",
                                "https://dane.com"),
                            337.4406)],
                        7),
                new FieldsPopupContent([new FieldInfo("phone",
                            "accusamus",
                            "soluta",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Min)],
                        "fugiat sit ducimus aspernatur",
                        "eos nemo neque"),
                new RelationshipPopupContent("reiciendis quia nobis",
                        "quisquam quae molestiae eaque ut eos",
                        1,
                        "dolor",
                    [new RelatedRecordsInfoFieldOrder("labore",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("ut",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("non",
                        OrderBy.Desc)],
                        7)],
                [new ExpressionInfo("return Date();",
                        "phone",
                        "deleniti temporibus tempore",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "comment",
                        "nemo facilis et",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "status",
                        "rerum assumenda eos",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "name",
                        "nihil sunt nisi",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("repellendus atque eius",
                        "d49a6058-e189-d1a5-ac7a-caa44e921103",
                        () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "category",
                        "quia")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "consequatur",
                    "laboriosam",
                    669.1078,
                    ["beatae",
                        "tempora"],
                    new DateTime(2018, 1, 10, 9, 49, 30),
                    "minima",
                    "corrupti vitae consequatur ipsum delectus",
                new Extent(-26.2792,
                        -74.4987,
                        -9.3198,
                        -32.1299,
                        135.0679,
                        669.2506,
                        888.1643,
                        365.1636,
                    new SpatialReference(3,
                            "et",
                            "voluptatem",
                            "rem"),
                        true,
                        true),
                    ["quidem",
                        "fugit",
                        "sit"],
                    "eaque",
                    new DateTime(2008, 4, 6, 5, 6, 29),
                    "avatar",
                    500.1829);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer([new UniqueValueInfo("quos",
                    new TextSymbol("aliquid ipsum ut",
                        new MapColor(94, 149, 200),
                        new MapColor(76, 248, 244),
                            new Dimension(496.9399),
                        new MapFont(new Dimension(272.0265),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            227.8543,
                        new MapColor(247, 173, 77),
                        new MapColor(169, 144, 13),
                            499.4506,
                        HorizontalAlignment.Center,
                            true,
                            843.8116,
                            new Dimension(483.5046),
                            true),
                        "eos"),
                new UniqueValueInfo("molestiae",
                    new TextSymbol("quisquam ratione quod",
                        new MapColor(224, 15, 241),
                        new MapColor(250, 105, 169),
                            new Dimension(829.1732),
                        new MapFont(new Dimension(917.6399),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            918.6068,
                        new MapColor(233, 137, 81),
                        new MapColor(108, 183, 2),
                            210.7411,
                        HorizontalAlignment.Left,
                            true,
                            252.3852,
                            new Dimension(323.5992),
                            true),
                        "maiores")],
                new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(27, 35, 48),
                            new MapColor(65, 242, 157)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(189, 97, 192),
                            new MapColor(162, 140, 89)),
                        new AlgorithmicColorRamp(Algorithm.Hsv,
                            new MapColor(165, 147, 221),
                            new MapColor(89, 4, 133))]),
                        818.9193,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(841.2511,
                                147.8185),
                        new AuthoringInfoField1ClassBreakInfos(390.8622,
                                985.2410)],
                            "rerum",
                            "ducimus",
                            "velit"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(652.4092,
                                843.7342),
                        new AuthoringInfoField1ClassBreakInfos(643.4501,
                                680.5623)],
                            "praesentium",
                            "nihil",
                            "totam"),
                        ["blanditiis",
                            "dolore"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "ex",
                        true,
                    LengthUnit.Inches,
                        942.3467,
                        663.9309,
                        492.1571,
                        543.9752),
                new PictureFillSymbol("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0",
                    new Dimension(685.9367),
                    new Dimension(613.5898),
                    new Dimension(920.9563),
                    new Dimension(546.8243),
                    98.1721,
                    -51.8463,
                    new Outline(new MapColor(234, 115, 249),
                        new Dimension(919.8440),
                        SimpleLineSymbolStyle.LongDashDot,
                        Cap.Butt,
                        Join.Miter,
                        new LineSymbolMarker(new MapColor(182, 167, 215),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Square),
                        674.7797),
                    new MapColor(174, 128, 185)),
                    "odit",
                    new DefaultSymbol(),
                    "facilis",
                    "voluptatem",
                    "quos",
                    "pariatur",
                new UniqueValueRendererLegendOptions("beatae nemo facilis"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("repudiandae",
                        new TextSymbol("qui et eos",
                            new MapColor(40, 34, 203),
                            new MapColor(26, 195, 90),
                                new Dimension(58.0432),
                            new MapFont(new Dimension(557.5621),
                                    "Verdana",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.None),
                                953.7010,
                            new MapColor(140, 46, 107),
                            new MapColor(27, 218, 190),
                                174.5755,
                            HorizontalAlignment.Left,
                                true,
                                763.3346,
                                new Dimension(396.0715),
                                true),
                        [new UniqueValue("quasi",
                                "possimus",
                                "maiores"),
                        new UniqueValue("eum",
                                "magni",
                                "voluptate"),
                        new UniqueValue("qui",
                                "velit",
                                "dolores"),
                        new UniqueValue("sunt",
                                "qui",
                                "similique")]),
                    new UniqueValueClass("ab",
                        new TextSymbol("repellendus non non",
                            new MapColor(224, 131, 248),
                            new MapColor(169, 139, 118),
                                new Dimension(913.6311),
                            new MapFont(new Dimension(575.3706),
                                    "Palatino",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                921.4538,
                            new MapColor(72, 129, 228),
                            new MapColor(188, 220, 120),
                                207.1334,
                            HorizontalAlignment.Center,
                                true,
                                806.8694,
                                new Dimension(108.1330),
                                true),
                        [new UniqueValue("reiciendis",
                                "veritatis",
                                "quia"),
                        new UniqueValue("totam",
                                "labore",
                                "et"),
                        new UniqueValue("nam",
                                "fugiat",
                                "id"),
                        new UniqueValue("tempora",
                                "ut",
                                "nobis")]),
                    new UniqueValueClass("magni",
                        new TextSymbol("et error modi",
                            new MapColor(48, 65, 149),
                            new MapColor(237, 18, 75),
                                new Dimension(467.4222),
                            new MapFont(new Dimension(506.3442),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                215.0233,
                            new MapColor(195, 168, 153),
                            new MapColor(13, 95, 62),
                                154.9692,
                            HorizontalAlignment.Center,
                                true,
                                545.5495,
                                new Dimension(54.0419),
                                true),
                        [new UniqueValue("repellendus",
                                "voluptatem",
                                "illo"),
                        new UniqueValue("suscipit",
                                "doloribus",
                                "vitae"),
                        new UniqueValue("aut",
                                "est",
                                "magnam")]),
                    new UniqueValueClass("ratione",
                        new TextSymbol("autem hic quisquam",
                            new MapColor(118, 100, 126),
                            new MapColor(131, 184, 193),
                                new Dimension(796.6640),
                            new MapFont(new Dimension(954.2504),
                                    "Courier New",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.Underline),
                                184.7202,
                            new MapColor(91, 5, 50),
                            new MapColor(26, 55, 97),
                                50.3171,
                            HorizontalAlignment.Right,
                                true,
                                697.1798,
                                new Dimension(722.7524),
                                true),
                        [new UniqueValue("totam",
                                "assumenda",
                                "aliquam"),
                        new UniqueValue("consequatur",
                                "rem",
                                "architecto"),
                        new UniqueValue("non",
                                "et",
                                "est"),
                        new UniqueValue("aperiam",
                                "doloribus",
                                "ut")])],
                        "qui")],
                    "est",
                    "perferendis magnam dolor");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(3,
                    "neque",
                    "eum",
                    "quibusdam");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("aperiam eligendi numquam nesciunt quo cupiditate consequuntur",
                DrawingTool.None,
                    "name",
                new Graphic(new Point(90.5134,
                            49.1970,
                            -48.2169,
                            -25.8756,
                            52.3015,
                        new SpatialReference(8,
                                "repudiandae",
                                "incidunt",
                                "iure"),
                            true,
                            true,
                            261.7138),
                    new TextSymbol("blanditiis ratione dicta",
                        new MapColor(174, 112, 126),
                        new MapColor(63, 28, 155),
                            new Dimension(70.6860),
                        new MapFont(new Dimension(223.9672),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            543.9211,
                        new MapColor(44, 97, 45),
                        new MapColor(87, 224, 64),
                            934.5056,
                        HorizontalAlignment.Center,
                            true,
                            590.0635,
                            new Dimension(343.2667),
                            true),
                    new PopupTemplate("modi neque non",
                            "ducimus",
                            ["accusantium",
                                "quae"],
                        [new FieldInfo("status",
                                "ab",
                                "et",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("createdAt",
                                "non",
                                "ipsam",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("status",
                                "ducimus",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Var)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "quia",
                                    "quae possimus aliquam"))],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "createdAt",
                                "quod ipsam quasi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "name",
                                "dignissimos in impedit",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("sed nemo excepturi",
                                "https://picsum.photos/640/480/?image=671",
                                "b34eb898-a675-c4bc-fe39-92d87127536f",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "necessitatibus"),
                        new ActionButton("neque omnis voluptatem",
                                "https://picsum.photos/640/480/?image=104",
                                "fad15442-d239-da85-4520-fab8a3730d06",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "aut")]),
                        new AttributesDictionary(),
                        true,
                        "autem",
                        "delectus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "veniam",
                            6)),
                    new Thumbnail("corporis",
                        "itaque",
                        16.2484,
                        61.0976))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2006, 3, 4, 6, 15, 34),
                    new DateTime(2020, 2, 21, 18, 43, 11));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("blanditiis",
                    "reprehenderit",
                new TimeExtent(new DateTime(2017, 1, 18, 8, 13, 38),
                        new DateTime(2021, 11, 8, 5, 2, 44)),
                new TimeInterval(TemporalTime.Minutes,
                        250.4900),
                    [new DateTime(2008, 4, 7, 9, 29, 16),
                        new DateTime(2004, 10, 21, 17, 46, 40),
                        new DateTime(2004, 3, 20, 6, 52, 36)],
                    "Africa/Casablanca",
                    "ut");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Centuries,
                    326.2638);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2004, 1, 9, 5, 56, 37),
                    new DateTime(2003, 3, 17, 9, 49, 22));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
