@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson")"
                        Copyright="@("nostrum")"
                        Title="@("in ut et")"
                        Opacity="@(0.8982)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.ColorBurn)"
                        DefinitionExpression="@("et")"
                        DisplayField="@("sed")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("et",
                            306368.9061))"
                        FullExtent="@(new Extent(3.8478,
                                95.0131,
                                83.8843,
                                44.9776,
                                718.4311,
                                197.2314,
                                640.5205,
                                100.9832,
                            new SpatialReference(7,
                                    "voluptate",
                                    "hic",
                                    "impedit"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Point)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(44687739.0792)"
                        MinScale="@(21287.5866)"
                        ObjectIdField="@("corrupti")"
                        OutFields="@(["officia",
                            "quae",
                            "et"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(105.0945)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(5,
                                "quibusdam",
                                "quo",
                                "asperiores"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(55.7224)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("tempore")"
                            EndField="@("sed")"
                            Stops="@([new DateTime(2014, 8, 6, 4, 38, 30),
                                new DateTime(2021, 9, 8, 6, 2, 45),
                                new DateTime(2010, 9, 27, 21, 32, 7)])"
                            TimeZone="@("Asia/Krasnoyarsk")"
                            TrackIdField="@("nulla")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Months)"
                                Value="@(293.2835)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2011, 9, 24, 16, 12, 2))"
                                End="@(new DateTime(2010, 9, 14, 17, 12, 57))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2018, 1, 4, 5, 8, 56))"
                            End="@(new DateTime(2004, 3, 4, 21, 56, 2))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("perferendis dolorum officiis molestias reiciendis voluptas")"
                            DrawingTool="@(DrawingTool.UpArrow)"
                            Name="@("token")"
                            Prototype="@(new Graphic(new Polyline([new MapPath([new MapPoint([480.1287,
                                            874.4040]),
                                        new MapPoint([355.4505,
                                            567.6902,
                                            738.3626]),
                                        new MapPoint([889.7302,
                                            921.9940]),
                                        new MapPoint([74.2816,
                                            707.7691])]),
                                        new MapPath([new MapPoint([58.1587,
                                                652.3506,
                                                517.7202,
                                                572.4808]),
                                            new MapPoint([101.7806,
                                                238.1897,
                                                699.8928])]),
                                        new MapPath([new MapPoint([357.0192,
                                                309.6101]),
                                            new MapPoint([604.9893,
                                                533.4997,
                                                546.2873]),
                                            new MapPoint([909.1509,
                                                250.1631])])],
                                    new SpatialReference(2,
                                            "ad",
                                            "est",
                                            "ut"),
                                        true,
                                        true),
                                new TextSymbol("sed nihil debitis",
                                    new MapColor(236, 13, 208),
                                    new MapColor(151, 182, 190),
                                        new Dimension(804.9312),
                                    new MapFont(new Dimension(91.8206),
                                            "Helvetica",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        196.7810,
                                    new MapColor(84, 26, 78),
                                    new MapColor(233, 156, 178),
                                        850.4498,
                                    HorizontalAlignment.Right,
                                        true,
                                        888.4298,
                                        new Dimension(745.4681),
                                        true),
                                new PopupTemplate("quia nam in",
                                        "culpa",
                                        ["dolorum",
                                            "vel"],
                                    [new FieldInfo("category",
                                            "ut",
                                            "ea",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthDayYear),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("phone",
                                            "dolorum",
                                            "dicta",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                    [new RelationshipPopupContent("iusto deserunt culpa",
                                            "voluptas praesentium reprehenderit officia veritatis",
                                            9,
                                            "nesciunt",
                                        [new RelatedRecordsInfoFieldOrder("dolorem",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("natus",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("doloribus",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("repellendus",
                                            OrderBy.Desc)],
                                            7),
                                    new AttachmentsPopupContent("quam et quia",
                                            "est natus vel nihil corrupti",
                                            AttachmentsPopupContentDisplayType.Preview),
                                    new RelationshipPopupContent("sed eaque accusamus",
                                            "omnis sit tempora odit et",
                                            1,
                                            "iusto",
                                        [new RelatedRecordsInfoFieldOrder("deserunt",
                                            OrderBy.Desc)],
                                            8),
                                    new RelationshipPopupContent("sit cupiditate error",
                                            "sunt quasi quidem impedit qui quaerat",
                                            4,
                                            "inventore",
                                        [new RelatedRecordsInfoFieldOrder("voluptatum",
                                            OrderBy.Asc)],
                                            9)],
                                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "group",
                                            "suscipit quia ipsam",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return Date();",
                                            "updatedAt",
                                            "sint culpa alias",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "token",
                                            "aliquid soluta eos",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "token",
                                            "incidunt ullam id",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("hic vel facilis",
                                            "5478b1ca-7c0f-1ba1-228a-7088e0e6b807",
                                            () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "omnis"),
                                    new ActionToggle("et praesentium voluptate",
                                            "d1aa56ea-3e95-1cce-732d-79f6cab55a7b",
                                            () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "id",
                                            "aut")]),
                                    new AttributesDictionary(),
                                    true,
                                    "ab",
                                    "aut",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "illo",
                                        1)))"
                            Thumbnail="@(new Thumbnail("doloribus",
                                "ut",
                                51.6234,
                                225.5110))">
                        </FeatureTemplate>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(74, 39, 52),
                                        new MapColor(120, 202, 169)),
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(160, 20, 119),
                                        new MapColor(112, 233, 69)),
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(225, 194, 248),
                                        new MapColor(29, 190, 100)),
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(230, 75, 36),
                                        new MapColor(216, 24, 244))]),
                                    674.3342,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(812.5908,
                                            543.5081)],
                                        "voluptatem",
                                        "delectus",
                                        "incidunt"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(373.6917,
                                            423.9243)],
                                        "qui",
                                        "et",
                                        "sint"),
                                    ["vel",
                                        "est"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "sint",
                                    true,
                                LengthUnit.Inches,
                                    915.4549,
                                    159.5365,
                                    880.5413,
                                    272.8189))">
                        </SimpleRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("et")"
                            ApiKey="@("tempore")"
                            AvgRating="@(199.8311)"
                            Categories="@(["explicabo",
                                "illo"])"
                            Created="@(new DateTime(2001, 3, 19, 6, 3, 58))"
                            Culture="@("doloremque")"
                            Description="@("hic qui iure sit quas placeat")"
                            Extent="@(new Extent(172.3866,
                                    -117.0962,
                                    57.1575,
                                    1.8644,
                                    193.7832,
                                    333.6051,
                                    186.4699,
                                    695.3146,
                                new SpatialReference(4,
                                        "laborum",
                                        "sunt",
                                        "voluptas"),
                                    true,
                                    true))"
                            GroupCategories="@(["soluta",
                                "distinctio",
                                "quam"])"
                            LicenseInfo="@("et")"
                            Modified="@(new DateTime(2000, 8, 18, 0, 53, 58))"
                            Name="@("createdAt")"
                            NumComments="@(443.7413)"
                            NumRatings="@(798.5680)"
                            NumViews="@(361.5933)"
                            Owner="@("Lyda Waelchi")"
                            OwnerFolder="@("Tyreek Dare")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.NoPrompt,
                                    ["in",
                                        "quis",
                                        "est",
                                        "sed"],
                                    "consequatur",
                                    "neque",
                                    "est",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("recusandae")"
                            Screenshots="@(["vero",
                                "voluptas",
                                "dolorem"])"
                            Size="@(9)"
                            Snippet="@("quia")"
                            Tags="@(["laudantium",
                                "non",
                                "aperiam",
                                "maxime"])"
                            Title="@("veniam facere sit")"
                            TypeKeywords="@(["possimus",
                                "cum",
                                "quia"])"
                            Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("enim corrupti harum")"
                            StringContent="@("voluptatum")"
                            OutFields="@(["aut",
                                "laborum",
                                "omnis",
                                "fugiat"])"
                            FieldInfos="@([new FieldInfo("phone",
                                    "sint",
                                    "aut",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("group",
                                    "tenetur",
                                    "aut",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("email",
                                    "dolor",
                                    "et",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev)])"
                            Content="@([new MediaPopupContent("voluptates enim laboriosam",
                                    "error non minus adipisci",
                                [new LineChartMediaInfo("laudantium voluptatem molestiae",
                                        "quas",
                                        "omnis quos delectus",
                                    new ChartMediaInfoValue(["quia",
                                            "sunt",
                                            "beatae"],
                                            "ducimus",
                                            "repudiandae",
                                        [new ChartMediaInfoValueSeries("group",
                                                "rerum",
                                                707.7169)],
                                        [new MapColor(31, 89, 45),
                                        new MapColor(196, 168, 143),
                                        new MapColor(236, 209, 108)])),
                                new LineChartMediaInfo("repellat autem est",
                                        "non",
                                        "officiis aut qui",
                                    new ChartMediaInfoValue(["architecto",
                                            "animi",
                                            "quisquam"],
                                            "quisquam",
                                            "quia",
                                        [new ChartMediaInfoValueSeries("status",
                                                "cupiditate",
                                                504.4427)],
                                        [new MapColor(60, 120, 214),
                                        new MapColor(91, 76, 91),
                                        new MapColor(25, 187, 204),
                                        new MapColor(210, 33, 87)])),
                                new ColumnChartMediaInfo("recusandae esse et",
                                        "rerum",
                                        "tenetur sed eaque",
                                    new ChartMediaInfoValue(["est",
                                            "vero",
                                            "optio",
                                            "sit"],
                                            "quisquam",
                                            "et",
                                        [new ChartMediaInfoValueSeries("createdAt",
                                                "quam",
                                                371.7134),
                                        new ChartMediaInfoValueSeries("phone",
                                                "vel",
                                                63.6580)],
                                        [new MapColor(216, 201, 228)]))],
                                    1),
                            new FieldsPopupContent([new FieldInfo("password",
                                        "dolorem",
                                        "quia",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("category",
                                        "deserunt",
                                        "ut",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                    "eos est recusandae quae dolore et porro",
                                    "optio sed enim"),
                            new TextPopupContent("et sit voluptatem")])"
                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "avatar",
                                    "voluptas dolor sunt",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("reprehenderit itaque nulla",
                                    "https://picsum.photos/640/480/?image=144",
                                    "4817fba3-6691-671f-c792-e04a9af53d19",
                                    () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                    "name",
                                    true,
                                    true,
                                    true,
                                    "ut")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("voluptates")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("quo")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AboveAlong)"
                            LabelExpression="@("tempora")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(7748006.3983)"
                            MinScale="@(1616.7450)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(157.1844))"
                            Symbol="@(new TextSymbol("dolorem eos blanditiis",
                                new MapColor(181, 166, 57),
                                new MapColor(87, 122, 129),
                                    new Dimension(425.1943),
                                new MapFont(new Dimension(279.3238),
                                        "Times New Roman",
                                    MapFontStyle.Italic,
                                    FontWeight.Normal,
                                    TextDecoration.None),
                                    245.9943,
                                new MapColor(150, 75, 76),
                                new MapColor(13, 135, 215),
                                    745.4929,
                                HorizontalAlignment.Center,
                                    true,
                                    55.1411,
                                    new Dimension(807.3329),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Country = 'Canada'")">
                        </Label>
                        <Field 
                            Name="@("title")"
                            Alias="@("laborum")"
                            Description="@("quod eius ut vel facere")"
                            Length="@(8)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "odio" })"
                            ValueType="@(FieldValueType.TypeOrCategory)"
                            Domain="@(new InheritedDomain("status"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("eius",
                                32315911.8549),
                                new Effect("quidem",
                                    44838764.5396),
                                new Effect("assumenda",
                                    45532547.6454),
                                new Effect("voluptate",
                                    38141061.9345)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(493.4617,
                                new Point(-59.3735,
                                        84.4923,
                                        152.1365,
                                        -63.4299,
                                        464.4034,
                                    new SpatialReference(4,
                                            "sit",
                                            "exercitationem",
                                            "unde"),
                                        true,
                                        true,
                                        459.1629),
                                    [5,
                                        2],
                                SpatialRelationship.Crosses,
                                new TimeExtent(new DateTime(2010, 3, 17, 19, 0, 50),
                                        new DateTime(2017, 11, 26, 21, 34, 1)),
                                    QueryUnits.Feet,
                                    "City = 'Toronto'"))"
                            IncludedEffect="@([new Effect("iusto",
                                21832286.5338),
                                new Effect("ut",
                                    43190458.2463)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature['FieldName'];",
                                    "quisquam commodi suscipit"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(428.8760)"
                            Unit="@(ElevationUnit.Decimeters)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polyline([new MapPath([new MapPoint([657.1415,
                                390.2926,
                                525.9120,
                                321.8545]),
                            new MapPoint([923.1775,
                                738.1697,
                                74.5799,
                                668.4797])]),
                            new MapPath([new MapPoint([322.6658,
                                    983.5700,
                                    160.0724,
                                    962.2358]),
                                new MapPoint([938.8381,
                                    596.6694,
                                    592.9587])])],
                        new SpatialReference(4,
                                "et",
                                "vero",
                                "suscipit"),
                            true,
                            true),
                    new TextSymbol("molestias vel consequuntur",
                        new MapColor(223, 189, 245),
                        new MapColor(112, 84, 244),
                            new Dimension(512.2796),
                        new MapFont(new Dimension(103.8645),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            677.5918,
                        new MapColor(126, 215, 70),
                        new MapColor(69, 24, 47),
                            155.4263,
                        HorizontalAlignment.Right,
                            true,
                            732.8631,
                            new Dimension(372.3437),
                            true),
                    new PopupTemplate("ab voluptatum earum",
                            "delectus",
                            ["eos",
                                "est",
                                "est"],
                        [new FieldInfo("name",
                                "dolor",
                                "quia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "saepe",
                                "ab",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Max)],
                        [new AttachmentsPopupContent("et aut incidunt",
                                "expedita nemo amet officia vitae est",
                                AttachmentsPopupContentDisplayType.Preview),
                        new AttachmentsPopupContent("totam deleniti officia",
                                "similique et ducimus nulla hic ipsam",
                                AttachmentsPopupContentDisplayType.Preview),
                        new RelationshipPopupContent("ad sit sit",
                                "est optio quasi accusantium omnis",
                                2,
                                "distinctio",
                            [new RelatedRecordsInfoFieldOrder("occaecati",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("eos",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("dolore",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("ut",
                                OrderBy.Asc)],
                                6),
                        new MediaPopupContent("nulla quia natus",
                                "rem quae et esse commodi rem sed",
                            [new ImageMediaInfo("quo commodi aut",
                                    "labore",
                                    "distinctio sapiente quas",
                                new ImageMediaInfoValue("https://amina.name",
                                        "https://colby.net"),
                                    558.3377)],
                                6)],
                        [new ExpressionInfo("return Date();",
                                "category",
                                "iusto velit autem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "title",
                                "eveniet aliquid quasi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "createdAt",
                                "et quod modi",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("eveniet vitae enim",
                                "https://picsum.photos/640/480/?image=469",
                                "edb32bba-8006-a926-a20f-2d6182ac6d2e",
                                () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "ut"),
                        new ActionButton("enim id delectus",
                                "https://picsum.photos/640/480/?image=744",
                                "61fb00cd-8382-f6e5-c903-77d7b457f643",
                                () => { Console.WriteLine("distinctio"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "ipsum"),
                        new ActionButton("ex accusantium vero",
                                "https://picsum.photos/640/480/?image=791",
                                "c9d97e81-25ad-3892-81c8-ef73e95d9426",
                                () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "quia")]),
                        new AttributesDictionary(),
                        true,
                        "voluptas",
                        "culpa",
                        new GraphicOrigin(Guid.NewGuid(),
                            "odit",
                            5)),
                new Graphic(new Extent(179.4121,
                            -82.3274,
                            65.8344,
                            22.4888,
                            574.9775,
                            362.9802,
                            288.1944,
                            445.7424,
                        new SpatialReference(3,
                                "illo",
                                "recusandae",
                                "quo"),
                            true,
                            true),
                    new TextSymbol("reprehenderit sequi et",
                        new MapColor(6, 208, 52),
                        new MapColor(167, 65, 186),
                            new Dimension(902.6392),
                        new MapFont(new Dimension(134.4812),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            897.2921,
                        new MapColor(254, 16, 112),
                        new MapColor(179, 19, 235),
                            799.7969,
                        HorizontalAlignment.Center,
                            true,
                            393.6036,
                            new Dimension(958.4725),
                            true),
                    new PopupTemplate("nihil quaerat aut",
                            "numquam",
                            ["in",
                                "sit",
                                "vitae",
                                "sed"],
                        [new FieldInfo("id",
                                "sequi",
                                "iste",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("password",
                                "itaque",
                                "excepturi",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "qui",
                                    "libero dolorem doloremque")),
                        new RelationshipPopupContent("non aut ea",
                                "velit deserunt quam velit accusantium",
                                1,
                                "aperiam",
                            [new RelatedRecordsInfoFieldOrder("quo",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("alias",
                                OrderBy.Asc)],
                                2)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "phone",
                                "eius animi quaerat",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "avatar",
                                "vel eum sed",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "password",
                                "et tempora temporibus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("saepe nostrum fuga",
                                "cd9d5869-65ee-31bb-1192-1caa46d4ffae",
                                () => { Console.WriteLine("numquam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "officiis")]),
                        new AttributesDictionary(),
                        true,
                        "ex",
                        "temporibus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quos",
                            8)),
                new Graphic(new Polyline([new MapPath([new MapPoint([127.8060,
                                647.8910]),
                            new MapPoint([336.5371,
                                720.9569])]),
                            new MapPath([new MapPoint([639.3381,
                                    900.6644,
                                    188.4597,
                                    714.6703]),
                                new MapPoint([983.3417,
                                    524.3300,
                                    341.2910])]),
                            new MapPath([new MapPoint([26.2045,
                                    234.0803,
                                    185.5532,
                                    246.3399]),
                                new MapPoint([596.6081,
                                    521.0209]),
                                new MapPoint([837.0596,
                                    280.5958]),
                                new MapPoint([825.0871,
                                    831.8562,
                                    867.0856])]),
                            new MapPath([new MapPoint([129.1275,
                                    161.8025,
                                    938.7025]),
                                new MapPoint([187.3670,
                                    49.6407]),
                                new MapPoint([762.5863,
                                    495.4524,
                                    387.6799,
                                    143.4808])])],
                        new SpatialReference(2,
                                "id",
                                "ab",
                                "molestiae"),
                            true,
                            true),
                    new TextSymbol("earum eveniet assumenda",
                        new MapColor(9, 22, 222),
                        new MapColor(124, 248, 162),
                            new Dimension(151.6414),
                        new MapFont(new Dimension(129.3541),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            454.9695,
                        new MapColor(14, 151, 162),
                        new MapColor(166, 243, 33),
                            746.9918,
                        HorizontalAlignment.Left,
                            true,
                            334.6404,
                            new Dimension(214.4494),
                            true),
                    new PopupTemplate("commodi alias impedit",
                            "aut",
                            ["nesciunt",
                                "ea",
                                "sed",
                                "molestiae"],
                        [new FieldInfo("updatedAt",
                                "ex",
                                "est",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new MediaPopupContent("eligendi odit voluptas",
                                "eaque soluta ducimus doloribus impedit explicabo",
                            [new ColumnChartMediaInfo("cum non quia",
                                    "quod",
                                    "eligendi consectetur aliquid",
                                new ChartMediaInfoValue(["dolorem",
                                        "quaerat"],
                                        "qui",
                                        "sed",
                                    [new ChartMediaInfoValueSeries("group",
                                            "voluptatem",
                                            613.9213)],
                                    [new MapColor(141, 49, 196),
                                    new MapColor(124, 97, 231)])),
                            new BarChartMediaInfo("vel sed voluptatibus",
                                    "maxime",
                                    "maiores iure voluptatem",
                                new ChartMediaInfoValue(["maxime",
                                        "quibusdam",
                                        "consectetur"],
                                        "ea",
                                        "sunt",
                                    [new ChartMediaInfoValueSeries("category",
                                            "ipsam",
                                            205.1763)],
                                    [new MapColor(159, 134, 149),
                                    new MapColor(98, 228, 70)]))],
                                4),
                        new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                    "pariatur",
                                    "perferendis cum laudantium"))],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "email",
                                "beatae non quidem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "password",
                                "fugit nam molestiae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "group",
                                "omnis voluptas in",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("rerum ducimus vero",
                                "26b094be-f44c-bed8-57a3-e9895e19a5aa",
                                () => { Console.WriteLine("esse"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "cum"),
                        new ActionButton("magnam similique quaerat",
                                "https://picsum.photos/640/480/?image=25",
                                "8db3fc3a-489d-1b0f-f1e1-a3fb32422011",
                                () => { Console.WriteLine("praesentium"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "magnam"),
                        new ActionButton("qui et nam",
                                "https://picsum.photos/640/480/?image=685",
                                "699ea0c8-989a-963b-170e-cd3209d894f2",
                                () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "qui")]),
                        new AttributesDictionary(),
                        true,
                        "nihil",
                        "saepe",
                        new GraphicOrigin(Guid.NewGuid(),
                            "officia",
                            5))],
                [new Graphic(new Polyline([new MapPath([new MapPoint([581.3884,
                                785.0318]),
                            new MapPoint([566.7996,
                                699.3344,
                                858.8960,
                                265.4253])]),
                            new MapPath([new MapPoint([919.8734,
                                    162.4636,
                                    912.1009]),
                                new MapPoint([448.7018,
                                    949.9873]),
                                new MapPoint([895.9459,
                                    223.7902]),
                                new MapPoint([259.3814,
                                    712.1720,
                                    752.1790,
                                    830.7765])])],
                        new SpatialReference(9,
                                "et",
                                "esse",
                                "blanditiis"),
                            true,
                            true),
                    new TextSymbol("occaecati rerum consequatur",
                        new MapColor(208, 41, 189),
                        new MapColor(37, 70, 138),
                            new Dimension(809.3446),
                        new MapFont(new Dimension(394.6625),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            621.8651,
                        new MapColor(195, 26, 81),
                        new MapColor(68, 103, 129),
                            911.6500,
                        HorizontalAlignment.Center,
                            true,
                            697.1225,
                            new Dimension(465.3474),
                            true),
                    new PopupTemplate("placeat reiciendis quisquam",
                            "et",
                            ["et",
                                "aut"],
                        [new FieldInfo("name",
                                "beatae",
                                "velit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new AttachmentsPopupContent("voluptatibus fugiat sunt",
                                "suscipit est quo ea",
                                AttachmentsPopupContentDisplayType.Preview),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "aut",
                                    "veniam beatae temporibus")),
                        new FieldsPopupContent([new FieldInfo("token",
                                    "eveniet",
                                    "dolorem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("updatedAt",
                                    "molestiae",
                                    "et",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("createdAt",
                                    "quia",
                                    "consequatur",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "totam dolores exercitationem perferendis",
                                "quo autem placeat"),
                        new FieldsPopupContent([new FieldInfo("comment",
                                    "excepturi",
                                    "suscipit",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "error recusandae error aut",
                                "est molestias aut")],
                        [new ExpressionInfo("return Date();",
                                "category",
                                "repudiandae officia ut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "password",
                                "ut quis repellat",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "comment",
                                "eligendi est esse",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "token",
                                "eos aut natus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("beatae aut nobis",
                                "b5be96c7-a644-eb27-5f9f-5fad1a828f99",
                                () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "excepturi"),
                        new ActionToggle("reprehenderit officia maxime",
                                "2e4b86d7-0b68-57e2-7503-060661a71051",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "et"),
                        new ActionButton("excepturi voluptatibus non",
                                "https://picsum.photos/640/480/?image=1016",
                                "1b31ce5f-50e1-ea42-7aa8-7af8d4366b0a",
                                () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "officiis")]),
                        new AttributesDictionary(),
                        true,
                        "nihil",
                        "aut",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ipsa",
                            7)),
                new Graphic(new Extent(176.0585,
                            -142.6631,
                            -85.8130,
                            82.7270,
                            641.8491,
                            263.3750,
                            888.4835,
                            147.0865,
                        new SpatialReference(8,
                                "doloribus",
                                "rem",
                                "et"),
                            true,
                            true),
                    new TextSymbol("omnis voluptas placeat",
                        new MapColor(22, 127, 104),
                        new MapColor(101, 9, 170),
                            new Dimension(280.7709),
                        new MapFont(new Dimension(12.6571),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            50.4474,
                        new MapColor(9, 167, 103),
                        new MapColor(97, 205, 179),
                            12.1363,
                        HorizontalAlignment.Center,
                            true,
                            374.1049,
                            new Dimension(403.5222),
                            true),
                    new PopupTemplate("sit quia cum",
                            "voluptas",
                            ["praesentium",
                                "illo",
                                "maxime"],
                        [new FieldInfo("token",
                                "sunt",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "nihil",
                                "velit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("title",
                                "nobis",
                                "officiis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("email",
                                "molestiae",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new FieldsPopupContent([new FieldInfo("password",
                                    "quo",
                                    "qui",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("id",
                                    "quis",
                                    "non",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "nulla qui consequatur iure numquam at",
                                "mollitia omnis delectus")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "password",
                                "consequatur et est",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("alias atque dignissimos",
                                "e04b4bbd-4352-3b2f-4d7c-69bf66257fd4",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "quae"),
                        new ActionButton("quia recusandae occaecati",
                                "https://picsum.photos/640/480/?image=569",
                                "0b8a2b83-5e33-197c-3eaf-99df1266cc32",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "soluta"),
                        new ActionButton("mollitia iusto ratione",
                                "https://picsum.photos/640/480/?image=360",
                                "8ec9f5f7-0b07-f602-7fde-f88b1a5b9478",
                                () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "quisquam"),
                        new ActionToggle("nam aliquam laboriosam",
                                "5ba9a69a-874e-220c-6fdf-2f4dc3e67552",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "qui")]),
                        new AttributesDictionary(),
                        true,
                        "iusto",
                        "quia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "voluptatem",
                            5)),
                new Graphic(new Polygon([new MapPath([new MapPoint([732.8963,
                                244.9730]),
                            new MapPoint([247.5809,
                                953.2156,
                                253.6058,
                                318.0941]),
                            new MapPoint([950.4506,
                                717.5569,
                                764.7982]),
                            new MapPoint([929.0350,
                                862.7573])]),
                            new MapPath([new MapPoint([211.4445,
                                    202.2222,
                                    245.4278,
                                    885.2567]),
                                new MapPoint([132.6152,
                                    843.8168,
                                    888.9461,
                                    403.5186]),
                                new MapPoint([448.6499,
                                    841.6656,
                                    12.6352])]),
                            new MapPath([new MapPoint([267.9496,
                                    622.6878]),
                                new MapPoint([233.6509,
                                    4.9024])])],
                        new SpatialReference(8,
                                "dolorum",
                                "voluptas",
                                "qui"),
                        new Point(-36.7021,
                                70.8950,
                                81.6633,
                                -30.4476,
                                254.2152,
                            new SpatialReference(2,
                                    "quibusdam",
                                    "quis",
                                    "iusto"),
                                true,
                                true,
                                248.9984),
                            true,
                            true,
                            true),
                    new TextSymbol("modi repudiandae officiis",
                        new MapColor(160, 12, 129),
                        new MapColor(149, 204, 64),
                            new Dimension(0.1537),
                        new MapFont(new Dimension(695.3755),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            789.8973,
                        new MapColor(13, 17, 71),
                        new MapColor(139, 49, 197),
                            59.3957,
                        HorizontalAlignment.Center,
                            true,
                            818.3013,
                            new Dimension(916.6105),
                            true),
                    new PopupTemplate("voluptas et cumque",
                            "accusamus",
                            ["eligendi",
                                "itaque"],
                        [new FieldInfo("category",
                                "quasi",
                                "dicta",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("name",
                                "dolor",
                                "totam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("category",
                                "impedit",
                                "iure",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "quisquam",
                                    "sequi aut neque")),
                        new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                    "id",
                                    "officia consectetur enim"))],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "name",
                                "id ut ipsam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("natus voluptates delectus",
                                "https://picsum.photos/640/480/?image=865",
                                "4b34c439-e573-7a20-0e12-0fa33e652987",
                                () => { Console.WriteLine("numquam"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "tempore"),
                        new ActionButton("at aut dolorem",
                                "https://picsum.photos/640/480/?image=850",
                                "ba9af2de-5a6d-3b04-8247-40833445cf05",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "ipsam"),
                        new ActionToggle("tenetur voluptatem nesciunt",
                                "034cc1c6-1afe-e085-3f57-885086b00aaf",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "quasi")]),
                        new AttributesDictionary(),
                        true,
                        "omnis",
                        "pariatur",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ipsam",
                            9))],
                    ["autem",
                        "laboriosam"],
                [new Graphic(new Extent(9.3761,
                            -68.5607,
                            -67.5804,
                            29.8991,
                            185.9080,
                            719.2473,
                            778.2540,
                            555.7339,
                        new SpatialReference(4,
                                "cumque",
                                "impedit",
                                "qui"),
                            true,
                            true),
                    new TextSymbol("aut dolorem nostrum",
                        new MapColor(124, 48, 109),
                        new MapColor(208, 91, 236),
                            new Dimension(857.8015),
                        new MapFont(new Dimension(32.0871),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            327.4743,
                        new MapColor(168, 243, 112),
                        new MapColor(206, 173, 92),
                            676.5895,
                        HorizontalAlignment.Left,
                            true,
                            45.0659,
                            new Dimension(466.0832),
                            true),
                    new PopupTemplate("est exercitationem doloribus",
                            "ut",
                            ["id",
                                "et",
                                "sint"],
                        [new FieldInfo("status",
                                "non",
                                "dicta",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Min)],
                        [new RelationshipPopupContent("eum dolore animi",
                                "et culpa incidunt ut",
                                3,
                                "sunt",
                            [new RelatedRecordsInfoFieldOrder("aut",
                                OrderBy.Desc)],
                                1),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "et",
                                    "magni eius deserunt"))],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "token",
                                "odit sunt architecto",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "status",
                                "quia et vel",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("vel sed non",
                                "https://picsum.photos/640/480/?image=701",
                                "f77fbe90-a460-8df8-03b4-6a5abd43b82e",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "voluptas"),
                        new ActionButton("quas qui iusto",
                                "https://picsum.photos/640/480/?image=742",
                                "abbcb1d7-a65e-4f4d-c040-dd861058f906",
                                () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "doloremque"),
                        new ActionButton("maxime est excepturi",
                                "https://picsum.photos/640/480/?image=3",
                                "fc778ce8-bef0-70d3-776c-5bcc8b0af8ef",
                                () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "eos")]),
                        new AttributesDictionary(),
                        true,
                        "aliquid",
                        "deleniti",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quam",
                            1))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["molestias",
                    "et",
                    "repellat",
                    "delectus"],
                    ["password",
                        "phone",
                        "category"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("createdAt");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("category",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Point(78.6585,
                            -16.0196,
                            -54.6607,
                            -87.2757,
                            87.3743,
                        new SpatialReference(2,
                                "soluta",
                                "modi",
                                "illo"),
                            true,
                            true,
                            829.5752),
                    new TextSymbol("enim dolores et",
                        new MapColor(196, 122, 239),
                        new MapColor(179, 152, 198),
                            new Dimension(618.9767),
                        new MapFont(new Dimension(143.7945),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            346.6855,
                        new MapColor(26, 107, 72),
                        new MapColor(84, 254, 72),
                            762.9017,
                        HorizontalAlignment.Left,
                            true,
                            233.8691,
                            new Dimension(212.5298),
                            true),
                    new PopupTemplate("et hic quia",
                            "omnis",
                            ["est",
                                "dolores",
                                "eos"],
                        [new FieldInfo("token",
                                "dolore",
                                "dolor",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new TextPopupContent("unde aut delectus"),
                        new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "alias",
                                    "dignissimos ipsam illum")),
                        new TextPopupContent("reiciendis voluptatem ut")],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "name",
                                "quibusdam optio ducimus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "status",
                                "dolores autem quos",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "category",
                                "nemo nihil officiis",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "avatar",
                                "enim at soluta",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("laboriosam voluptatem ut",
                                "https://picsum.photos/640/480/?image=27",
                                "4ff32a23-b230-20ae-2964-87086ec6cafd",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "voluptate"),
                        new ActionToggle("illo quisquam est",
                                "363ecb67-2602-1f5d-8a4d-cffb8cfcddeb",
                                () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "deleniti"),
                        new ActionButton("et est qui",
                                "https://picsum.photos/640/480/?image=384",
                                "1b8aaeb6-272f-4c49-c88a-d9ca0417a75a",
                                () => { Console.WriteLine("commodi"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "quasi"),
                        new ActionButton("omnis occaecati incidunt",
                                "https://picsum.photos/640/480/?image=1015",
                                "c3667612-560b-90d2-f4f6-6b489a72ed5b",
                                () => { Console.WriteLine("eius"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "non")]),
                        new AttributesDictionary(),
                        true,
                        "consequatur",
                        "debitis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nulla",
                            3))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([8,
                    7,
                    3,
                    1],
                    true,
                    680.8517,
                    943.8801,
                    "3.6.8.5",
                new Polyline([new MapPath([new MapPoint([569.7425,
                            489.3835,
                            571.8265]),
                        new MapPoint([713.7714,
                            476.1702,
                            992.1413])]),
                        new MapPath([new MapPoint([59.4417,
                                537.5864,
                                389.5027,
                                504.8583]),
                            new MapPoint([287.1013,
                                436.0440,
                                432.8640,
                                84.9817])]),
                        new MapPath([new MapPoint([471.5617,
                                387.1465,
                                277.0308]),
                            new MapPoint([190.8778,
                                491.0666]),
                            new MapPoint([474.9636,
                                146.3759,
                                686.5455,
                                91.4925])]),
                        new MapPath([new MapPoint([27.0853,
                                870.0126,
                                374.5178]),
                            new MapPoint([671.2772,
                                602.7600]),
                            new MapPoint([228.5105,
                                404.8727,
                                961.2531,
                                894.0960])])],
                    new SpatialReference(2,
                            "quas",
                            "officiis",
                            "illo"),
                        true,
                        true),
                    1,
                    ["consequatur",
                        "et",
                        "maxime",
                        "ea"],
                    "sed",
                    new DateTime(2007, 6, 12, 8, 26, 7),
                    117.3952,
                    4,
                    "magnam",
                    9),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([8,
                    4,
                    2,
                    1],
                    true,
                    380.5817,
                    588.0598,
                    "1.0.4.6",
                new Point(-41.0382,
                        25.4071,
                        -124.9763,
                        45.1983,
                        877.4869,
                    new SpatialReference(4,
                            "hic",
                            "rerum",
                            "quo"),
                        true,
                        true,
                        206.1134),
                    7,
                    ["rerum",
                        "totam"],
                    "et",
                    new DateTime(2007, 7, 27, 9, 30, 39),
                    6.9515,
                    2,
                    "magni",
                    3),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([2,
                    3,
                    4],
                    true,
                    893.2830,
                    812.4621,
                    "1.4.5.3",
                new Polygon([new MapPath([new MapPoint([246.2579,
                            143.4862,
                            799.3413]),
                        new MapPoint([328.5947,
                            106.1012,
                            991.6826,
                            961.8658]),
                        new MapPoint([249.8382,
                            611.1671,
                            872.8768]),
                        new MapPoint([980.0423,
                            570.2073,
                            538.8622])]),
                        new MapPath([new MapPoint([671.8616,
                                374.2584,
                                318.9821,
                                96.7512]),
                            new MapPoint([35.3313,
                                572.4870]),
                            new MapPoint([336.8673,
                                290.7115]),
                            new MapPoint([391.3286,
                                572.7165,
                                762.0169,
                                633.0823])]),
                        new MapPath([new MapPoint([199.9739,
                                966.2906,
                                906.9393,
                                778.4457]),
                            new MapPoint([108.9941,
                                449.2713]),
                            new MapPoint([402.3659,
                                398.3361,
                                410.9007]),
                            new MapPoint([383.3978,
                                885.9603])]),
                        new MapPath([new MapPoint([987.5963,
                                382.1754,
                                987.8970,
                                88.0356]),
                            new MapPoint([41.2213,
                                589.6358,
                                21.1866]),
                            new MapPoint([462.6544,
                                423.4809,
                                752.4848,
                                544.8517])])],
                    new SpatialReference(1,
                            "consectetur",
                            "debitis",
                            "quo"),
                    new Point(-132.1238,
                            -83.5777,
                            -135.6905,
                            59.3018,
                            114.3584,
                        new SpatialReference(1,
                                "omnis",
                                "expedita",
                                "sed"),
                            true,
                            true,
                            396.5918),
                        true,
                        true,
                        true),
                    9,
                    ["cupiditate",
                        "nemo",
                        "sint"],
                    "qui",
                    new DateTime(2003, 2, 20, 20, 0, 20),
                    237.2776,
                    7,
                    "ut",
                    2),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([9,
                    2,
                    4],
                    true,
                    159.2441,
                    83.0890,
                    "0.3.7.6",
                new Point(77.1813,
                        -18.4556,
                        -16.3833,
                        4.7520,
                        897.5153,
                    new SpatialReference(2,
                            "accusamus",
                            "reprehenderit",
                            "soluta"),
                        true,
                        true,
                        646.8887),
                    2,
                    ["vero",
                        "voluptate",
                        "quidem"],
                    "aspernatur",
                    new DateTime(2017, 9, 7, 9, 41, 50),
                    988.4100,
                    1,
                    "optio",
                    6),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Hide;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Overlay;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Population / $feature.Area;",
                        "magni ex ipsa"),
                ElevationInfoMode.OnTheGround,
                    98.0464,
                ElevationUnit.Millimeters);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("reiciendis",
                    13506482.8293)],
                    true,
                new FeatureFilter(31.3628,
                    new Polyline([new MapPath([new MapPoint([645.6069,
                                67.0208,
                                543.8325]),
                            new MapPoint([201.9683,
                                312.5140,
                                665.0588,
                                105.5805]),
                            new MapPoint([566.1735,
                                735.1295,
                                738.8862,
                                669.1293])])],
                        new SpatialReference(1,
                                "et",
                                "molestias",
                                "cupiditate"),
                            true,
                            true),
                        [4,
                            8,
                            2,
                            4],
                    SpatialRelationship.Overlaps,
                    new TimeExtent(new DateTime(2007, 5, 24, 6, 12, 34),
                            new DateTime(2010, 5, 23, 12, 40, 14)),
                        QueryUnits.UsNauticalMiles,
                        "Street = '123 Main St.'"),
                    [new Effect("dolores",
                        11934370.5295)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "password",
                    "omnis",
                    "soluta non sed veniam ipsa",
                    7,
                    true,
                    true,
                    new { Value = "quas" },
                FieldValueType.None,
                new InheritedDomain("updatedAt")),
            new Field(default,
                    "group",
                    "et",
                    "dolore ipsam animi doloribus sed et",
                    9,
                    true,
                    true,
                    new { Value = "distinctio" },
                FieldValueType.Measurement,
                new RangeDomain("explicabo",
                        "ut",
                        "status"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-49.7205,
                    -143.0496,
                    63.1690,
                    48.9685,
                    846.8047,
                    96.3967,
                    246.3416,
                    25.5418,
                new SpatialReference(4,
                        "exercitationem",
                        "ut",
                        "et"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Multipoint;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterAfter,
                    "beatae",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    42907948.0233,
                    6977.5825,
                    true,
                    new Dimension(405.5676),
                new TextSymbol("odit magni iusto",
                    new MapColor(254, 45, 156),
                    new MapColor(189, 236, 90),
                        new Dimension(895.1798),
                    new MapFont(new Dimension(988.0403),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        24.4104,
                    new MapColor(244, 152, 158),
                    new MapColor(39, 129, 86),
                        457.5461,
                    HorizontalAlignment.Center,
                        true,
                        862.9166,
                        new Dimension(772.0458),
                        true),
                    true,
                    "Province = 'Ontario'"),
            new Label(LabelPlacement.BelowStart,
                    "in",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    10210451.3129,
                    31995.5492,
                    true,
                    new Dimension(996.4604),
                new TextSymbol("asperiores quibusdam labore",
                    new MapColor(80, 54, 23),
                    new MapColor(137, 70, 173),
                        new Dimension(993.0362),
                    new MapFont(new Dimension(670.2915),
                            "Arial",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        381.8441,
                    new MapColor(190, 61, 240),
                    new MapColor(143, 125, 39),
                        833.7207,
                    HorizontalAlignment.Center,
                        true,
                        852.6069,
                        new Dimension(896.0765),
                        true),
                    true,
                    "PostalCode = 'M5V 1J9'"),
            new Label(LabelPlacement.AboveStart,
                    "enim",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    36060801.6090,
                    15457.2049,
                    true,
                    new Dimension(146.7503),
                new TextSymbol("repellat ea nulla",
                    new MapColor(6, 74, 31),
                    new MapColor(25, 2, 91),
                        new Dimension(625.8552),
                    new MapFont(new Dimension(178.6661),
                            "Verdana",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        210.3902,
                    new MapColor(34, 176, 139),
                    new MapColor(55, 45, 133),
                        608.9323,
                    HorizontalAlignment.Left,
                        true,
                        947.1068,
                        new Dimension(423.4402),
                        true),
                    true,
                    "PostalCode = 'M5V 1J9'"),
            new Label(LabelPlacement.AboveEnd,
                    "et",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    43378639.3174,
                    29868.6836,
                    true,
                    new Dimension(283.5022),
                new TextSymbol("in ea quia",
                    new MapColor(125, 209, 116),
                    new MapColor(66, 205, 226),
                        new Dimension(942.6201),
                    new MapFont(new Dimension(891.1541),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        759.2350,
                    new MapColor(62, 226, 235),
                    new MapColor(132, 110, 1),
                        978.7035,
                    HorizontalAlignment.Left,
                        true,
                        359.1836,
                        new Dimension(805.1755),
                        true),
                    true,
                    "Street = '123 Main St.'")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("consequatur",
                SortOrder.Descending,
                    "est"),
            new OrderedLayerOrderBy("quod",
                SortOrder.Descending,
                    "ut"),
            new OrderedLayerOrderBy("quis",
                SortOrder.Ascending,
                    "officia"),
            new OrderedLayerOrderBy("aut",
                SortOrder.Ascending,
                    "tempore")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("dignissimos rerum fugiat",
                    "libero",
                    ["molestiae",
                        "neque",
                        "laborum",
                        "vel"],
                [new FieldInfo("group",
                        "saepe",
                        "harum",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.ShortDateLeLongTime),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("createdAt",
                        "hic",
                        "maxime",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.LongDateShortTime),
                        true,
                        true,
                    StatisticType.Max),
                new FieldInfo("token",
                        "velit",
                        "praesentium",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(6,
                            true,
                        DateFormat.Year),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("comment",
                        "id",
                        "praesentium",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.LongDateLongTime24),
                        true,
                        true,
                    StatisticType.Min)],
                [new AttachmentsPopupContent("aut nobis modi",
                        "rerum et blanditiis quia facere et",
                        AttachmentsPopupContentDisplayType.Preview),
                new RelationshipPopupContent("ab praesentium numquam",
                        "esse laboriosam magnam id esse architecto repellat",
                        7,
                        "dignissimos",
                    [new RelatedRecordsInfoFieldOrder("et",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("quasi",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("officia",
                        OrderBy.Desc)],
                        3)],
                [new ExpressionInfo("return Date();",
                        "name",
                        "vel dolorem unde",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Name;",
                        "avatar",
                        "molestias aut vero",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("impedit quod reiciendis",
                        "https://picsum.photos/640/480/?image=55",
                        "872cb292-cea4-dc38-a728-45909e16acc4",
                        () => { Console.WriteLine("reiciendis"); return Task.CompletedTask; },
                        "group",
                        true,
                        true,
                        true,
                        "recusandae"),
                new ActionToggle("ut atque accusamus",
                        "109674c3-72cd-a67e-6d7c-113977dc3e11",
                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "id",
                        "non"),
                new ActionToggle("veniam possimus harum",
                        "fe2f153d-8ac5-7436-fef2-a3941b8333ad",
                        () => { Console.WriteLine("odit"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "avatar",
                        "aspernatur"),
                new ActionButton("delectus sint molestiae",
                        "https://picsum.photos/640/480/?image=63",
                        "e0102a9e-bcec-f3a5-64aa-657f95fc944c",
                        () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                        "token",
                        true,
                        true,
                        true,
                        "est")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "sed",
                    "beatae",
                    789.6475,
                    ["animi",
                        "minima",
                        "quis"],
                    new DateTime(2019, 11, 21, 6, 42, 12),
                    "suscipit",
                    "voluptatum rem cupiditate aspernatur consequatur aut",
                new Extent(-89.3727,
                        -162.3015,
                        60.2619,
                        -18.5084,
                        856.0758,
                        568.8060,
                        209.7706,
                        482.5355,
                    new SpatialReference(6,
                            "beatae",
                            "laudantium",
                            "in"),
                        true,
                        true),
                    ["molestiae",
                        "commodi"],
                    "dolorem",
                    new DateTime(2020, 5, 13, 12, 43, 45),
                    "name",
                    547.4918);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                    new AlgorithmicColorRamp(Algorithm.CieLab,
                        new MapColor(96, 61, 245),
                        new MapColor(150, 133, 158)),
                        199.9471,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(135.1608,
                                777.3230),
                        new AuthoringInfoField1ClassBreakInfos(712.3793,
                                968.5528),
                        new AuthoringInfoField1ClassBreakInfos(12.3689,
                                1.9601)],
                            "error",
                            "omnis",
                            "omnis"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(360.3272,
                                944.4139),
                        new AuthoringInfoField1ClassBreakInfos(43.4394,
                                184.3851),
                        new AuthoringInfoField1ClassBreakInfos(341.8711,
                                649.9401)],
                            "dolorem",
                            "voluptas",
                            "vero"),
                        ["est",
                            "est",
                            "labore",
                            "cum"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "enim",
                        true,
                    LengthUnit.Kilometers,
                        386.3550,
                        80.3008,
                        487.1868,
                        287.8808),
                new PictureFillSymbol("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0",
                    new Dimension(694.5411),
                    new Dimension(607.8758),
                    new Dimension(439.5438),
                    new Dimension(78.2959),
                    2.9363,
                    -60.6590,
                    new Outline(new MapColor(75, 216, 58),
                        new Dimension(457.2802),
                        SimpleLineSymbolStyle.LongDash,
                        Cap.Round,
                        Join.Miter,
                        new LineSymbolMarker(new MapColor(126, 172, 21),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Cross),
                        736.0710),
                    new MapColor(107, 151, 223)),
                    "voluptate",
                    new DefaultSymbol(),
                    "et",
                    "repellendus",
                    "nesciunt",
                    "et",
                new UniqueValueRendererLegendOptions("minus eius ea"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("voluptates",
                        new TextSymbol("perspiciatis ullam et",
                            new MapColor(58, 15, 128),
                            new MapColor(231, 34, 49),
                                new Dimension(354.6512),
                            new MapFont(new Dimension(696.0945),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                503.2680,
                            new MapColor(124, 164, 24),
                            new MapColor(201, 235, 154),
                                982.1887,
                            HorizontalAlignment.Right,
                                true,
                                635.9910,
                                new Dimension(831.1015),
                                true),
                        [new UniqueValue("vero",
                                "consequatur",
                                "et"),
                        new UniqueValue("ut",
                                "facilis",
                                "similique"),
                        new UniqueValue("aspernatur",
                                "accusamus",
                                "ipsa"),
                        new UniqueValue("ad",
                                "facilis",
                                "soluta")]),
                    new UniqueValueClass("alias",
                        new TextSymbol("repellendus fugit enim",
                            new MapColor(254, 48, 241),
                            new MapColor(42, 195, 31),
                                new Dimension(39.2798),
                            new MapFont(new Dimension(601.8248),
                                    "Helvetica",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.None),
                                737.4285,
                            new MapColor(126, 115, 74),
                            new MapColor(136, 177, 120),
                                642.5686,
                            HorizontalAlignment.Right,
                                true,
                                878.1640,
                                new Dimension(297.6942),
                                true),
                        [new UniqueValue("et",
                                "adipisci",
                                "molestias")]),
                    new UniqueValueClass("eaque",
                        new TextSymbol("nemo eum doloremque",
                            new MapColor(0, 48, 88),
                            new MapColor(44, 36, 200),
                                new Dimension(679.3413),
                            new MapFont(new Dimension(503.4189),
                                    "Arial",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                106.0092,
                            new MapColor(101, 29, 88),
                            new MapColor(15, 90, 15),
                                317.1327,
                            HorizontalAlignment.Center,
                                true,
                                654.2370,
                                new Dimension(403.6897),
                                true),
                        [new UniqueValue("dolorum",
                                "nobis",
                                "perspiciatis"),
                        new UniqueValue("corrupti",
                                "accusantium",
                                "esse")]),
                    new UniqueValueClass("cupiditate",
                        new TextSymbol("id est fuga",
                            new MapColor(174, 214, 90),
                            new MapColor(64, 209, 10),
                                new Dimension(415.6789),
                            new MapFont(new Dimension(162.2461),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                645.6535,
                            new MapColor(200, 12, 8),
                            new MapColor(97, 56, 144),
                                528.8926,
                            HorizontalAlignment.Center,
                                true,
                                256.2961,
                                new Dimension(540.5303),
                                true),
                        [new UniqueValue("voluptate",
                                "aliquid",
                                "necessitatibus"),
                        new UniqueValue("animi",
                                "rerum",
                                "placeat"),
                        new UniqueValue("minima",
                                "qui",
                                "ut")])],
                        "dolor"),
                new UniqueValueGroup([new UniqueValueClass("a",
                        new TextSymbol("numquam illum dolorem",
                            new MapColor(220, 100, 181),
                            new MapColor(66, 54, 188),
                                new Dimension(704.2548),
                            new MapFont(new Dimension(347.6423),
                                    "Verdana",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.Underline),
                                585.1744,
                            new MapColor(228, 209, 215),
                            new MapColor(206, 61, 93),
                                126.6061,
                            HorizontalAlignment.Right,
                                true,
                                393.7290,
                                new Dimension(274.4884),
                                true),
                        [new UniqueValue("officia",
                                "aut",
                                "nostrum"),
                        new UniqueValue("est",
                                "et",
                                "animi"),
                        new UniqueValue("vel",
                                "est",
                                "sit")]),
                    new UniqueValueClass("ullam",
                        new TextSymbol("alias ullam repellat",
                            new MapColor(107, 149, 250),
                            new MapColor(209, 131, 59),
                                new Dimension(108.5840),
                            new MapFont(new Dimension(311.3200),
                                    "Verdana",
                                MapFontStyle.Normal,
                                FontWeight.Lighter,
                                TextDecoration.LineThrough),
                                637.0149,
                            new MapColor(17, 119, 181),
                            new MapColor(180, 26, 131),
                                8.6287,
                            HorizontalAlignment.Left,
                                true,
                                768.7347,
                                new Dimension(512.9916),
                                true),
                        [new UniqueValue("dolore",
                                "deleniti",
                                "debitis"),
                        new UniqueValue("aut",
                                "eum",
                                "et"),
                        new UniqueValue("voluptate",
                                "fugiat",
                                "fugiat"),
                        new UniqueValue("corporis",
                                "voluptatum",
                                "cupiditate")])],
                        "est"),
                new UniqueValueGroup([new UniqueValueClass("consequatur",
                        new TextSymbol("necessitatibus necessitatibus qui",
                            new MapColor(165, 252, 50),
                            new MapColor(106, 179, 67),
                                new Dimension(916.2856),
                            new MapFont(new Dimension(527.5484),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Lighter,
                                TextDecoration.Underline),
                                118.7444,
                            new MapColor(65, 169, 235),
                            new MapColor(182, 204, 60),
                                620.5032,
                            HorizontalAlignment.Right,
                                true,
                                768.4942,
                                new Dimension(362.6355),
                                true),
                        [new UniqueValue("qui",
                                "quia",
                                "molestiae"),
                        new UniqueValue("repellat",
                                "et",
                                "velit"),
                        new UniqueValue("minus",
                                "distinctio",
                                "nesciunt")]),
                    new UniqueValueClass("ullam",
                        new TextSymbol("tempore beatae inventore",
                            new MapColor(17, 20, 231),
                            new MapColor(134, 209, 190),
                                new Dimension(124.6678),
                            new MapFont(new Dimension(275.3906),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                453.8484,
                            new MapColor(23, 31, 245),
                            new MapColor(192, 135, 30),
                                870.4789,
                            HorizontalAlignment.Right,
                                true,
                                267.3876,
                                new Dimension(482.5976),
                                true),
                        [new UniqueValue("ut",
                                "voluptate",
                                "quaerat"),
                        new UniqueValue("dignissimos",
                                "velit",
                                "sunt"),
                        new UniqueValue("ea",
                                "dignissimos",
                                "recusandae"),
                        new UniqueValue("odio",
                                "delectus",
                                "similique")])],
                        "consequatur")],
                [new UniqueValueInfo("est",
                    new TextSymbol("distinctio culpa asperiores",
                        new MapColor(53, 102, 57),
                        new MapColor(177, 118, 93),
                            new Dimension(962.2908),
                        new MapFont(new Dimension(413.7490),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            232.7858,
                        new MapColor(201, 169, 1),
                        new MapColor(225, 155, 172),
                            364.6788,
                        HorizontalAlignment.Right,
                            true,
                            146.1895,
                            new Dimension(80.5001),
                            true),
                        "omnis"),
                new UniqueValueInfo("ex",
                    new TextSymbol("magnam facilis soluta",
                        new MapColor(63, 139, 44),
                        new MapColor(33, 177, 138),
                            new Dimension(302.6717),
                        new MapFont(new Dimension(628.9025),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            823.2769,
                        new MapColor(183, 201, 17),
                        new MapColor(31, 36, 189),
                            459.9026,
                        HorizontalAlignment.Right,
                            true,
                            251.0893,
                            new Dimension(797.2638),
                            true),
                        "vel")],
                    "ab",
                    "sunt deserunt sint");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(6,
                    "commodi",
                    "ea",
                    "vel");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("quibusdam ipsum deserunt temporibus fuga expedita",
                DrawingTool.UpArrow,
                    "token",
                new Graphic(new Polyline([new MapPath([new MapPoint([958.6113,
                                9.8963,
                                983.7791]),
                            new MapPoint([949.8781,
                                466.0032,
                                579.3248,
                                927.7697]),
                            new MapPoint([792.3435,
                                392.0917,
                                368.5810]),
                            new MapPoint([938.4735,
                                998.7542,
                                133.9348])]),
                            new MapPath([new MapPoint([521.8210,
                                    312.0732,
                                    982.4845]),
                                new MapPoint([682.6040,
                                    596.2512,
                                    775.8845,
                                    503.3941])]),
                            new MapPath([new MapPoint([289.5342,
                                    42.9313,
                                    782.9768,
                                    183.9725]),
                                new MapPoint([104.1075,
                                    660.9975]),
                                new MapPoint([804.9652,
                                    916.0145,
                                    279.5466,
                                    208.4335])])],
                        new SpatialReference(5,
                                "modi",
                                "nulla",
                                "fuga"),
                            true,
                            true),
                    new TextSymbol("ut laboriosam tempora",
                        new MapColor(150, 101, 118),
                        new MapColor(77, 14, 229),
                            new Dimension(551.8087),
                        new MapFont(new Dimension(414.8188),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            14.6724,
                        new MapColor(204, 52, 2),
                        new MapColor(136, 25, 219),
                            371.5425,
                        HorizontalAlignment.Right,
                            true,
                            372.3065,
                            new Dimension(737.2953),
                            true),
                    new PopupTemplate("possimus perspiciatis tempore",
                            "asperiores",
                            ["aut",
                                "consequuntur",
                                "dolorum"],
                        [new FieldInfo("email",
                                "quibusdam",
                                "soluta",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("id",
                                "aliquam",
                                "et",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("avatar",
                                "rem",
                                "in",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Max)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "dolorem",
                                    "quis officiis sapiente")),
                        new TextPopupContent("nisi praesentium labore"),
                        new MediaPopupContent("omnis et neque",
                                "molestias quos reiciendis aut est",
                            [new LineChartMediaInfo("voluptates ullam sed",
                                    "aliquam",
                                    "magnam suscipit delectus",
                                new ChartMediaInfoValue(["et",
                                        "earum"],
                                        "nulla",
                                        "dolor",
                                    [new ChartMediaInfoValueSeries("status",
                                            "nulla",
                                            276.6754),
                                    new ChartMediaInfoValueSeries("email",
                                            "at",
                                            553.0613),
                                    new ChartMediaInfoValueSeries("group",
                                            "aperiam",
                                            714.7487)],
                                    [new MapColor(192, 76, 18),
                                    new MapColor(194, 152, 222)])),
                            new ColumnChartMediaInfo("consequatur illum et",
                                    "rerum",
                                    "numquam ut quo",
                                new ChartMediaInfoValue(["et",
                                        "illo",
                                        "neque"],
                                        "sed",
                                        "beatae",
                                    [new ChartMediaInfoValueSeries("group",
                                            "deleniti",
                                            978.4333)],
                                    [new MapColor(245, 21, 44),
                                    new MapColor(169, 247, 115),
                                    new MapColor(203, 62, 159)])),
                            new ColumnChartMediaInfo("ut earum quia",
                                    "et",
                                    "reprehenderit et voluptates",
                                new ChartMediaInfoValue(["voluptatem",
                                        "numquam",
                                        "eos",
                                        "eius"],
                                        "sed",
                                        "quae",
                                    [new ChartMediaInfoValueSeries("group",
                                            "tenetur",
                                            206.7966),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "sunt",
                                            944.3909),
                                    new ChartMediaInfoValueSeries("phone",
                                            "magni",
                                            584.1358),
                                    new ChartMediaInfoValueSeries("status",
                                            "aut",
                                            535.3390)],
                                    [new MapColor(232, 96, 219),
                                    new MapColor(132, 37, 144),
                                    new MapColor(223, 3, 11),
                                    new MapColor(115, 1, 162)])),
                            new ImageMediaInfo("delectus magnam adipisci",
                                    "qui",
                                    "velit cupiditate ut",
                                new ImageMediaInfoValue("https://maye.com",
                                        "https://tyson.org"),
                                    789.6957)],
                                9)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "password",
                                "autem voluptatum qui",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "status",
                                "atque nostrum incidunt",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("culpa id molestiae",
                                "https://picsum.photos/640/480/?image=998",
                                "f51fa561-6f11-dbc6-f200-1dd4b9d9e548",
                                () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "sunt"),
                        new ActionToggle("nobis ipsa eius",
                                "9bd75332-595d-c466-bb43-9a1ffd2c851e",
                                () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "deserunt"),
                        new ActionToggle("id quo quisquam",
                                "d2e207a6-b562-0501-a2cf-af7c8a39a2dd",
                                () => { Console.WriteLine("soluta"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "nostrum")]),
                        new AttributesDictionary(),
                        true,
                        "recusandae",
                        "similique",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sunt",
                            3)),
                    new Thumbnail("nemo",
                        "harum",
                        37.8923,
                        19.0657)),
            new FeatureTemplate("nihil rem fugit id eos",
                DrawingTool.DownArrow,
                    "avatar",
                new Graphic(new Extent(141.3711,
                            102.6584,
                            -33.0911,
                            -74.6563,
                            834.9459,
                            727.8062,
                            128.9159,
                            388.2161,
                        new SpatialReference(4,
                                "qui",
                                "voluptas",
                                "est"),
                            true,
                            true),
                    new TextSymbol("non assumenda aliquam",
                        new MapColor(33, 69, 240),
                        new MapColor(23, 121, 174),
                            new Dimension(292.3330),
                        new MapFont(new Dimension(439.5128),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            405.5267,
                        new MapColor(167, 162, 27),
                        new MapColor(79, 220, 63),
                            209.9807,
                        HorizontalAlignment.Right,
                            true,
                            329.7913,
                            new Dimension(336.0550),
                            true),
                    new PopupTemplate("eligendi doloremque exercitationem",
                            "facere",
                            ["quia",
                                "exercitationem",
                                "cupiditate",
                                "molestias"],
                        [new FieldInfo("id",
                                "dolorem",
                                "porro",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("avatar",
                                "dicta",
                                "officia",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("token",
                                "aut",
                                "sit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("name",
                                "illum",
                                "sed",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new AttachmentsPopupContent("velit ab dolor",
                                "incidunt cupiditate et nihil neque consequatur expedita",
                                AttachmentsPopupContentDisplayType.Preview),
                        new FieldsPopupContent([new FieldInfo("status",
                                    "quos",
                                    "esse",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("id",
                                    "pariatur",
                                    "qui",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "omnis quasi et officia ipsam voluptatem et",
                                "ut repellendus optio")],
                        [new ExpressionInfo("return $feature.Name;",
                                "comment",
                                "sit sunt sed",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "token",
                                "alias consequatur ex",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "avatar",
                                "non rerum nostrum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "updatedAt",
                                "in temporibus amet",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("aperiam quo ipsum",
                                "2d694bfa-44fa-2adc-d1a9-4538eaf5bdee",
                                () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "magni"),
                        new ActionButton("rerum mollitia quisquam",
                                "https://picsum.photos/640/480/?image=586",
                                "0dfd66a2-4da2-6c15-6f2e-3e94684b2b8f",
                                () => { Console.WriteLine("occaecati"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "atque"),
                        new ActionToggle("ut et omnis",
                                "886cfccb-dd52-1870-ca49-3671a3aef836",
                                () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "voluptate"),
                        new ActionButton("rem quo beatae",
                                "https://picsum.photos/640/480/?image=816",
                                "2b5d3f92-97d6-bbe3-3449-c72697ac7466",
                                () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "ea")]),
                        new AttributesDictionary(),
                        true,
                        "ex",
                        "et",
                        new GraphicOrigin(Guid.NewGuid(),
                            "blanditiis",
                            6)),
                    new Thumbnail("nobis",
                        "et",
                        78.4344,
                        122.8447)),
            new FeatureTemplate("libero facere impedit aut",
                DrawingTool.Arrow,
                    "phone",
                new Graphic(new Extent(8.9482,
                            -67.7026,
                            14.8335,
                            12.6431,
                            74.9992,
                            181.7975,
                            234.9662,
                            158.8983,
                        new SpatialReference(3,
                                "quasi",
                                "eaque",
                                "et"),
                            true,
                            true),
                    new TextSymbol("amet sed laborum",
                        new MapColor(150, 137, 65),
                        new MapColor(86, 172, 178),
                            new Dimension(608.3174),
                        new MapFont(new Dimension(526.0916),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            819.7973,
                        new MapColor(229, 84, 180),
                        new MapColor(151, 234, 246),
                            95.3253,
                        HorizontalAlignment.Right,
                            true,
                            694.7525,
                            new Dimension(728.7178),
                            true),
                    new PopupTemplate("sint et in",
                            "autem",
                            ["quos",
                                "architecto"],
                        [new FieldInfo("status",
                                "similique",
                                "sint",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("createdAt",
                                "est",
                                "nemo",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("createdAt",
                                "a",
                                "rem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Var)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "culpa",
                                    "quos iure ad"))],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "status",
                                "sequi aut enim",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "token",
                                "quae blanditiis libero",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "group",
                                "et voluptas temporibus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("quia sit vitae",
                                "3f27484a-469a-ffe6-25c1-246d50fa69f9",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "et"),
                        new ActionButton("autem voluptatibus consequuntur",
                                "https://picsum.photos/640/480/?image=250",
                                "97540a3c-b3e2-4253-d8a1-443fc3e074af",
                                () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "voluptate")]),
                        new AttributesDictionary(),
                        true,
                        "ut",
                        "commodi",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aut",
                            8)),
                    new Thumbnail("distinctio",
                        "et",
                        33.7515,
                        124.6845))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2007, 4, 25, 20, 51, 2),
                    new DateTime(2023, 1, 6, 15, 52, 30));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("aut",
                    "architecto",
                new TimeExtent(new DateTime(2008, 6, 13, 5, 2, 49),
                        new DateTime(2017, 10, 14, 4, 7, 11)),
                new TimeInterval(TemporalTime.Milliseconds,
                        625.5925),
                    [new DateTime(2004, 6, 25, 0, 39, 23),
                        new DateTime(2012, 4, 25, 22, 55, 43)],
                    "Europe/Warsaw",
                    "beatae");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Years,
                    315.0896);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2008, 9, 12, 21, 53, 15),
                    new DateTime(2021, 2, 23, 14, 49, 5));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
