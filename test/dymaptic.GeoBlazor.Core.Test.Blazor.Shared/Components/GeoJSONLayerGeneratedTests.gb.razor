@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("velit")"
                        Title="@("similique enim sunt")"
                        Opacity="@(0.9013)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.DestinationOver)"
                        DefinitionExpression="@("necessitatibus")"
                        DisplayField="@("reprehenderit")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("inventore",
                            33291751.8772))"
                        FullExtent="@(new Extent(-103.9572,
                                -36.4258,
                                46.9583,
                                13.2364,
                                609.7365,
                                949.7017,
                                692.0804,
                                468.2240,
                            new SpatialReference(8,
                                    "quam",
                                    "sed",
                                    "a"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Polyline)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(3269519.3857)"
                        MinScale="@(45715.6608)"
                        ObjectIdField="@("deleniti")"
                        OutFields="@(["quidem",
                            "et",
                            "quia",
                            "quasi"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(522.1632)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(3,
                                "voluptatem",
                                "et",
                                "debitis"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Days)"
                            Value="@(950.6839)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("facere")"
                            EndField="@("temporibus")"
                            Stops="@([new DateTime(2012, 2, 14, 0, 40, 52),
                                new DateTime(2002, 10, 21, 3, 7, 57),
                                new DateTime(2016, 3, 15, 11, 16, 50)])"
                            TimeZone="@("Atlantic/Cape_Verde")"
                            TrackIdField="@("eum")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Decades)"
                                Value="@(294.2589)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2018, 3, 24, 18, 33, 34))"
                                End="@(new DateTime(2009, 1, 9, 11, 6, 45))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2022, 5, 27, 4, 44, 12))"
                            End="@(new DateTime(2020, 11, 10, 12, 20, 41))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("saepe repellat autem eveniet")"
                            DrawingTool="@(DrawingTool.AutoCompletePolygon)"
                            Name="@("token")"
                            Prototype="@(new Graphic(new Polyline([new MapPath([new MapPoint([893.1476,
                                            74.0616,
                                            246.7548]),
                                        new MapPoint([642.8376,
                                            607.9411])]),
                                        new MapPath([new MapPoint([19.4778,
                                                341.1647]),
                                            new MapPoint([530.0343,
                                                946.0355,
                                                553.8318,
                                                589.0009]),
                                            new MapPoint([873.6666,
                                                755.9975]),
                                            new MapPoint([350.8848,
                                                438.2936])])],
                                    new SpatialReference(9,
                                            "incidunt",
                                            "omnis",
                                            "fugit"),
                                        true,
                                        true),
                                new TextSymbol("voluptatem ea error",
                                    new MapColor(35, 22, 227),
                                    new MapColor(232, 175, 87),
                                        new Dimension(499.8708),
                                    new MapFont(new Dimension(285.7876),
                                            "Georgia",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.LineThrough),
                                        484.3734,
                                    new MapColor(15, 115, 152),
                                    new MapColor(253, 225, 29),
                                        303.5683,
                                    HorizontalAlignment.Right,
                                        true,
                                        511.7317,
                                        new Dimension(138.9688),
                                        true),
                                new PopupTemplate("maxime voluptas repellat",
                                        "animi",
                                        ["adipisci",
                                            "natus",
                                            "quia",
                                            "ut"],
                                    [new FieldInfo("password",
                                            "fugiat",
                                            "natus",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("phone",
                                            "et",
                                            "vero",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("category",
                                            "aliquid",
                                            "voluptatem",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.ShortDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("title",
                                            "quo",
                                            "sunt",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Avg)],
                                    [new FieldsPopupContent([new FieldInfo("avatar",
                                                "dolore",
                                                "ut",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("avatar",
                                                "voluptas",
                                                "voluptate",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("category",
                                                "similique",
                                                "ullam",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Sum)],
                                            "quibusdam culpa quaerat mollitia consequatur autem magnam",
                                            "est beatae cumque"),
                                    new RelationshipPopupContent("molestiae corporis porro",
                                            "quia eum sapiente quaerat rerum molestiae",
                                            6,
                                            "laboriosam",
                                        [new RelatedRecordsInfoFieldOrder("quibusdam",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("saepe",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("repellendus",
                                            OrderBy.Desc)],
                                            8),
                                    new MediaPopupContent("quia sed pariatur",
                                            "eveniet rerum ut incidunt",
                                        [new PieChartMediaInfo("quos eos fugiat",
                                                "cum",
                                                "est ut eaque",
                                            new ChartMediaInfoValue(["repellendus",
                                                    "et",
                                                    "laudantium",
                                                    "consequuntur"],
                                                    "aut",
                                                    "perspiciatis",
                                                [new ChartMediaInfoValueSeries("avatar",
                                                        "velit",
                                                        635.0694),
                                                new ChartMediaInfoValueSeries("title",
                                                        "ipsam",
                                                        856.6293),
                                                new ChartMediaInfoValueSeries("updatedAt",
                                                        "asperiores",
                                                        142.3815),
                                                new ChartMediaInfoValueSeries("updatedAt",
                                                        "quas",
                                                        607.5383)],
                                                [new MapColor(179, 228, 233),
                                                new MapColor(113, 42, 89),
                                                new MapColor(68, 108, 86),
                                                new MapColor(197, 92, 100)]))],
                                            4)],
                                    [new ExpressionInfo("return $feature.Name;",
                                            "createdAt",
                                            "iusto doloribus fugit",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("sunt eaque sequi",
                                            "99798a69-cd02-a87b-b3f3-76f016df4398",
                                            () => { Console.WriteLine("similique"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "debitis"),
                                    new ActionToggle("veniam et et",
                                            "de3cb596-46eb-4d2f-b597-f4a56b0cd258",
                                            () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "group",
                                            "ut")]),
                                    new AttributesDictionary(),
                                    true,
                                    "nihil",
                                    "sunt",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "earum",
                                        1)))"
                            Thumbnail="@(new Thumbnail("nulla",
                                "omnis",
                                240.8683,
                                144.3389))">
                        </FeatureTemplate>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                    new MapColor(205, 109, 52),
                                    new MapColor(145, 32, 68)),
                                    258.4222,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(379.7700,
                                            755.8501)],
                                        "aut",
                                        "enim",
                                        "itaque"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(189.2307,
                                            941.9532)],
                                        "tempora",
                                        "sint",
                                        "itaque"),
                                    ["distinctio",
                                        "exercitationem",
                                        "dolor"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "cumque",
                                    true,
                                LengthUnit.Miles,
                                    950.3665,
                                    337.7181,
                                    358.0811,
                                    482.7067))">
                        </UniqueValueRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("debitis")"
                            ApiKey="@("enim")"
                            AvgRating="@(656.5252)"
                            Categories="@(["ut",
                                "voluptatem",
                                "officiis",
                                "est"])"
                            Created="@(new DateTime(2002, 8, 3, 20, 36, 1))"
                            Culture="@("quia")"
                            Description="@("voluptatem natus ipsa quia asperiores ut")"
                            Extent="@(new Extent(149.4496,
                                    -56.6444,
                                    42.2101,
                                    67.3079,
                                    493.3200,
                                    809.4196,
                                    347.3966,
                                    803.2825,
                                new SpatialReference(8,
                                        "nobis",
                                        "ipsa",
                                        "vitae"),
                                    true,
                                    true))"
                            GroupCategories="@(["magni",
                                "fuga",
                                "ad",
                                "eveniet"])"
                            LicenseInfo="@("a")"
                            Modified="@(new DateTime(2001, 3, 2, 7, 42, 17))"
                            Name="@("status")"
                            NumComments="@(3.5383)"
                            NumRatings="@(211.3042)"
                            NumViews="@(645.4681)"
                            Owner="@("Candelario Klein")"
                            OwnerFolder="@("Bonita Bartell")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Anonymous,
                                    ["iure",
                                        "aspernatur",
                                        "et",
                                        "vitae"],
                                    "quibusdam",
                                    "iure",
                                    "in",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("minima")"
                            Screenshots="@(["tenetur",
                                "nobis",
                                "voluptates"])"
                            Size="@(7)"
                            Snippet="@("at")"
                            Tags="@(["sunt",
                                "quod",
                                "quisquam",
                                "voluptatem"])"
                            Title="@("officia iusto aut")"
                            TypeKeywords="@(["quibusdam",
                                "est",
                                "voluptatem"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("eaque voluptas nihil")"
                            StringContent="@("saepe")"
                            OutFields="@(["omnis",
                                "eveniet"])"
                            FieldInfos="@([new FieldInfo("category",
                                    "excepturi",
                                    "distinctio",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("comment",
                                    "omnis",
                                    "et",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Avg)])"
                            Content="@([new MediaPopupContent("occaecati ipsam autem",
                                    "ad nisi labore quo",
                                [new ColumnChartMediaInfo("id provident provident",
                                        "quos",
                                        "ut libero consequuntur",
                                    new ChartMediaInfoValue(["deleniti",
                                            "a",
                                            "maiores",
                                            "quia"],
                                            "quos",
                                            "eum",
                                        [new ChartMediaInfoValueSeries("status",
                                                "explicabo",
                                                969.0796)],
                                        [new MapColor(61, 167, 221),
                                        new MapColor(102, 118, 135),
                                        new MapColor(222, 251, 190)])),
                                new ColumnChartMediaInfo("esse quas sapiente",
                                        "saepe",
                                        "sint nam culpa",
                                    new ChartMediaInfoValue(["accusamus",
                                            "officiis",
                                            "voluptate"],
                                            "corporis",
                                            "est",
                                        [new ChartMediaInfoValueSeries("category",
                                                "velit",
                                                112.2201)],
                                        [new MapColor(24, 153, 49)])),
                                new LineChartMediaInfo("qui est repellendus",
                                        "ut",
                                        "facilis animi animi",
                                    new ChartMediaInfoValue(["quidem",
                                            "at",
                                            "totam",
                                            "amet"],
                                            "praesentium",
                                            "harum",
                                        [new ChartMediaInfoValueSeries("phone",
                                                "porro",
                                                901.6247),
                                        new ChartMediaInfoValueSeries("id",
                                                "quaerat",
                                                244.9247),
                                        new ChartMediaInfoValueSeries("email",
                                                "recusandae",
                                                738.8016),
                                        new ChartMediaInfoValueSeries("token",
                                                "fugit",
                                                969.7161)],
                                        [new MapColor(174, 50, 86),
                                        new MapColor(36, 138, 2)])),
                                new BarChartMediaInfo("suscipit sint qui",
                                        "voluptas",
                                        "voluptas accusantium id",
                                    new ChartMediaInfoValue(["eius",
                                            "distinctio"],
                                            "ab",
                                            "provident",
                                        [new ChartMediaInfoValueSeries("updatedAt",
                                                "tenetur",
                                                930.4426),
                                        new ChartMediaInfoValueSeries("phone",
                                                "voluptates",
                                                655.1565),
                                        new ChartMediaInfoValueSeries("name",
                                                "consequuntur",
                                                530.9476),
                                        new ChartMediaInfoValueSeries("createdAt",
                                                "nulla",
                                                670.5677)],
                                        [new MapColor(10, 38, 15),
                                        new MapColor(186, 63, 220),
                                        new MapColor(45, 98, 146)]))],
                                    4),
                            new FieldsPopupContent([new FieldInfo("status",
                                        "expedita",
                                        "sit",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("name",
                                        "dicta",
                                        "accusantium",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("status",
                                        "non",
                                        "molestias",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "voluptatem voluptatem natus perferendis deleniti vero vel",
                                    "fugiat repellat asperiores"),
                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                        "itaque",
                                        "porro ut aliquid")),
                            new MediaPopupContent("unde eaque deserunt",
                                    "eius cum amet ipsum",
                                [new PieChartMediaInfo("velit ut optio",
                                        "dolor",
                                        "fuga beatae amet",
                                    new ChartMediaInfoValue(["et",
                                            "minus",
                                            "voluptatem",
                                            "tempora"],
                                            "velit",
                                            "aut",
                                        [new ChartMediaInfoValueSeries("phone",
                                                "expedita",
                                                915.6229),
                                        new ChartMediaInfoValueSeries("email",
                                                "porro",
                                                801.1653),
                                        new ChartMediaInfoValueSeries("token",
                                                "itaque",
                                                78.4693)],
                                        [new MapColor(90, 69, 119),
                                        new MapColor(227, 194, 74)])),
                                new ColumnChartMediaInfo("enim occaecati deleniti",
                                        "cum",
                                        "maxime quisquam magni",
                                    new ChartMediaInfoValue(["sit",
                                            "harum"],
                                            "aut",
                                            "laboriosam",
                                        [new ChartMediaInfoValueSeries("password",
                                                "et",
                                                379.5587),
                                        new ChartMediaInfoValueSeries("category",
                                                "ipsa",
                                                627.0927),
                                        new ChartMediaInfoValueSeries("avatar",
                                                "omnis",
                                                386.0203),
                                        new ChartMediaInfoValueSeries("avatar",
                                                "aliquid",
                                                370.9987)],
                                        [new MapColor(201, 227, 83),
                                        new MapColor(205, 166, 77)])),
                                new ImageMediaInfo("quos excepturi magnam",
                                        "magnam",
                                        "sed qui eum",
                                    new ImageMediaInfoValue("https://ricky.biz",
                                            "https://waylon.name"),
                                        564.8062),
                                new LineChartMediaInfo("dolores qui quia",
                                        "tempora",
                                        "in quas deserunt",
                                    new ChartMediaInfoValue(["officiis",
                                            "qui",
                                            "ipsam"],
                                            "totam",
                                            "impedit",
                                        [new ChartMediaInfoValueSeries("name",
                                                "ex",
                                                253.9558)],
                                        [new MapColor(170, 118, 59),
                                        new MapColor(161, 27, 184),
                                        new MapColor(210, 254, 221)]))],
                                    6)])"
                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                    "updatedAt",
                                    "cupiditate dolorem in",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("dolores in consequatur",
                                    "https://picsum.photos/640/480/?image=529",
                                    "0f8c9471-7371-4968-a959-c05ec664374b",
                                    () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "odio"),
                            new ActionToggle("libero nisi repudiandae",
                                    "41b4b68b-755a-fc5b-1304-9b3e933b6bd1",
                                    () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "updatedAt",
                                    "error"),
                            new ActionButton("facilis neque et",
                                    "https://picsum.photos/640/480/?image=318",
                                    "0ac4be54-e765-c15c-8f32-d20ce19cc378",
                                    () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                                    "name",
                                    true,
                                    true,
                                    true,
                                    "consequatur")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("architecto")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("et")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowLeft)"
                            LabelExpression="@("adipisci")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(34605706.2314)"
                            MinScale="@(38334.3201)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(934.1204))"
                            Symbol="@(new TextSymbol("accusamus reiciendis doloribus",
                                new MapColor(254, 140, 55),
                                new MapColor(225, 116, 225),
                                    new Dimension(761.4118),
                                new MapFont(new Dimension(213.6706),
                                        "Palatino",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bolder,
                                    TextDecoration.LineThrough),
                                    375.4136,
                                new MapColor(63, 245, 46),
                                new MapColor(121, 191, 62),
                                    753.4024,
                                HorizontalAlignment.Right,
                                    true,
                                    709.7083,
                                    new Dimension(375.7602),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Age > 21")">
                        </Label>
                        <Field 
                            Name="@("title")"
                            Alias="@("aut")"
                            Description="@("sed repellendus minima a eum voluptates")"
                            Length="@(4)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "soluta" })"
                            ValueType="@(FieldValueType.Binary)"
                            Domain="@(new InheritedDomain("password"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("delectus",
                                22486001.5307),
                                new Effect("et",
                                    13451649.9071),
                                new Effect("libero",
                                    41073323.0851)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(69.1323,
                                new Extent(-73.8523,
                                        16.7182,
                                        -12.9942,
                                        44.2689,
                                        811.6614,
                                        993.7467,
                                        739.6503,
                                        399.0109,
                                    new SpatialReference(3,
                                            "rem",
                                            "earum",
                                            "ut"),
                                        true,
                                        true),
                                    [2,
                                        3,
                                        9,
                                        2],
                                SpatialRelationship.Intersects,
                                new TimeExtent(new DateTime(2009, 11, 2, 20, 30, 46),
                                        new DateTime(2002, 2, 19, 22, 0, 48)),
                                    QueryUnits.UsNauticalMiles,
                                    "1 = 1"))"
                            IncludedEffect="@([new Effect("dolorum",
                                39541435.1092)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "repellat maxime dolorem"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(825.3644)"
                            Unit="@(ElevationUnit.Yards)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polyline([new MapPath([new MapPoint([182.0962,
                                613.2177]),
                            new MapPoint([778.1058,
                                916.4339,
                                659.2634]),
                            new MapPoint([66.4315,
                                219.7434,
                                811.5713,
                                218.9333])]),
                            new MapPath([new MapPoint([338.7359,
                                    107.3886,
                                    368.8811,
                                    270.5347]),
                                new MapPoint([916.6716,
                                    620.3760]),
                                new MapPoint([448.6016,
                                    133.6577,
                                    842.6389])])],
                        new SpatialReference(2,
                                "harum",
                                "at",
                                "dolores"),
                            true,
                            true),
                    new TextSymbol("temporibus et aut",
                        new MapColor(229, 149, 217),
                        new MapColor(121, 169, 159),
                            new Dimension(995.2590),
                        new MapFont(new Dimension(486.3465),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            886.5525,
                        new MapColor(62, 49, 141),
                        new MapColor(13, 122, 116),
                            153.0112,
                        HorizontalAlignment.Center,
                            true,
                            340.6240,
                            new Dimension(83.4970),
                            true),
                    new PopupTemplate("dolor quia ut",
                            "cum",
                            ["praesentium",
                                "et"],
                        [new FieldInfo("email",
                                "rerum",
                                "ab",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("category",
                                "in",
                                "at",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("email",
                                "odio",
                                "placeat",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("category",
                                "qui",
                                "in",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new TextPopupContent("corporis velit voluptas")],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "status",
                                "aut ipsam aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "phone",
                                "deleniti minus aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "avatar",
                                "quis qui qui",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "createdAt",
                                "placeat ut ea",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("debitis consectetur quasi",
                                "e0adead3-3614-b21a-d477-49910ce2e116",
                                () => { Console.WriteLine("assumenda"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "quia")]),
                        new AttributesDictionary(),
                        true,
                        "odio",
                        "blanditiis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "rerum",
                            4)),
                new Graphic(new Point(-38.7984,
                            -55.5224,
                            127.3351,
                            -6.8980,
                            18.2173,
                        new SpatialReference(3,
                                "voluptate",
                                "ratione",
                                "quo"),
                            true,
                            true,
                            169.3964),
                    new TextSymbol("laboriosam porro ad",
                        new MapColor(87, 175, 249),
                        new MapColor(209, 128, 60),
                            new Dimension(686.4170),
                        new MapFont(new Dimension(723.4925),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            695.1692,
                        new MapColor(82, 103, 34),
                        new MapColor(200, 39, 34),
                            566.5079,
                        HorizontalAlignment.Right,
                            true,
                            999.9025,
                            new Dimension(408.5005),
                            true),
                    new PopupTemplate("quas qui quia",
                            "et",
                            ["exercitationem",
                                "cupiditate",
                                "beatae"],
                        [new FieldInfo("updatedAt",
                                "et",
                                "recusandae",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("createdAt",
                                "dicta",
                                "rerum",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("createdAt",
                                "officia",
                                "est",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("comment",
                                "quidem",
                                "voluptatibus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Max)],
                        [new TextPopupContent("sequi accusantium quia"),
                        new FieldsPopupContent([new FieldInfo("group",
                                    "fugit",
                                    "neque",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("group",
                                    "earum",
                                    "sunt",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("name",
                                    "aut",
                                    "debitis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "beatae ipsam illo aut nihil",
                                "odit modi voluptatem"),
                        new RelationshipPopupContent("cum optio quibusdam",
                                "saepe impedit voluptas porro accusantium est",
                                3,
                                "aut",
                            [new RelatedRecordsInfoFieldOrder("esse",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("aut",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("non",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("debitis",
                                OrderBy.Asc)],
                                9)],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "id",
                                "ipsum possimus ut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "createdAt",
                                "reprehenderit eum et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "password",
                                "nostrum sed harum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("recusandae voluptatem at",
                                "https://picsum.photos/640/480/?image=846",
                                "e24fcece-d34b-6440-8477-4a2c6f4ea38f",
                                () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "similique"),
                        new ActionButton("veniam id nihil",
                                "https://picsum.photos/640/480/?image=216",
                                "5610661c-21b4-6976-f0a8-f24fecb02be2",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "odio")]),
                        new AttributesDictionary(),
                        true,
                        "omnis",
                        "rem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nulla",
                            4)),
                new Graphic(new Polyline([new MapPath([new MapPoint([643.8067,
                                795.0245,
                                966.6591,
                                866.8694]),
                            new MapPoint([635.8552,
                                951.5915,
                                913.2704,
                                701.2632])]),
                            new MapPath([new MapPoint([386.5667,
                                    300.7364]),
                                new MapPoint([236.1000,
                                    530.0239])]),
                            new MapPath([new MapPoint([426.9721,
                                    69.2661,
                                    507.4134,
                                    100.7732]),
                                new MapPoint([556.8278,
                                    516.3266,
                                    366.2846,
                                    510.0825]),
                                new MapPoint([832.9073,
                                    347.3620,
                                    74.7979]),
                                new MapPoint([523.8114,
                                    508.4757,
                                    534.9523,
                                    428.0728])])],
                        new SpatialReference(1,
                                "totam",
                                "repellendus",
                                "similique"),
                            true,
                            true),
                    new TextSymbol("ipsa voluptas enim",
                        new MapColor(76, 117, 215),
                        new MapColor(128, 6, 22),
                            new Dimension(162.2704),
                        new MapFont(new Dimension(421.7521),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            877.7386,
                        new MapColor(138, 35, 234),
                        new MapColor(134, 199, 248),
                            429.9158,
                        HorizontalAlignment.Left,
                            true,
                            911.9302,
                            new Dimension(865.6921),
                            true),
                    new PopupTemplate("ducimus aliquid quos",
                            "dolorem",
                            ["officia",
                                "tenetur"],
                        [new FieldInfo("comment",
                                "dolor",
                                "doloribus",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("email",
                                "laudantium",
                                "voluptatem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "consequatur",
                                    "facere odit aut")),
                        new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "tempore",
                                    "quisquam esse quidem")),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "consectetur",
                                    "assumenda ut sunt"))],
                        [new ExpressionInfo("return Date();",
                                "name",
                                "qui at pariatur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("non voluptas libero",
                                "https://picsum.photos/640/480/?image=423",
                                "01210f57-7415-b0fe-c4ed-9abad1238fee",
                                () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "dolor"),
                        new ActionToggle("officiis et architecto",
                                "5fdcda16-8d1b-8fcd-cf9e-12d80f096d86",
                                () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "rerum")]),
                        new AttributesDictionary(),
                        true,
                        "sint",
                        "voluptatum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "consequatur",
                            1)),
                new Graphic(new Extent(174.9521,
                            -74.2504,
                            -30.4776,
                            -83.4504,
                            208.3804,
                            748.3631,
                            769.3524,
                            741.0760,
                        new SpatialReference(4,
                                "et",
                                "tenetur",
                                "ut"),
                            true,
                            true),
                    new TextSymbol("beatae et quisquam",
                        new MapColor(166, 240, 212),
                        new MapColor(82, 46, 43),
                            new Dimension(738.0934),
                        new MapFont(new Dimension(981.7589),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            172.9135,
                        new MapColor(158, 12, 226),
                        new MapColor(109, 79, 127),
                            666.6940,
                        HorizontalAlignment.Left,
                            true,
                            450.3520,
                            new Dimension(480.4237),
                            true),
                    new PopupTemplate("enim optio non",
                            "amet",
                            ["veritatis",
                                "dolorem",
                                "et"],
                        [new FieldInfo("password",
                                "nemo",
                                "quo",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("name",
                                "eum",
                                "voluptas",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("token",
                                "necessitatibus",
                                "amet",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new RelationshipPopupContent("qui corporis dolores",
                                "fugiat omnis quo qui dolor provident",
                                1,
                                "perspiciatis",
                            [new RelatedRecordsInfoFieldOrder("at",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("aut",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("officia",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("officiis",
                                OrderBy.Asc)],
                                1),
                        new AttachmentsPopupContent("est iste harum",
                                "rerum et quis et est maiores id",
                                AttachmentsPopupContentDisplayType.Preview),
                        new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                    "quod",
                                    "perspiciatis quod velit"))],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "status",
                                "fuga ipsam inventore",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "title",
                                "officia amet et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "id",
                                "distinctio est ut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("facilis possimus eos",
                                "d9fb5e84-75dc-8995-fb43-b7e4dcfc08a7",
                                () => { Console.WriteLine("quas"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "et")]),
                        new AttributesDictionary(),
                        true,
                        "aut",
                        "quo",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ex",
                            2))],
                [new Graphic(new Extent(-36.8680,
                            -102.5000,
                            80.1242,
                            -26.2874,
                            374.9411,
                            867.3690,
                            165.9500,
                            257.7217,
                        new SpatialReference(4,
                                "quas",
                                "ab",
                                "accusantium"),
                            true,
                            true),
                    new TextSymbol("eaque quae quia",
                        new MapColor(172, 60, 232),
                        new MapColor(49, 137, 144),
                            new Dimension(936.2979),
                        new MapFont(new Dimension(25.6664),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            89.0076,
                        new MapColor(68, 135, 21),
                        new MapColor(106, 242, 33),
                            767.1426,
                        HorizontalAlignment.Left,
                            true,
                            889.0008,
                            new Dimension(660.7132),
                            true),
                    new PopupTemplate("unde unde neque",
                            "consectetur",
                            ["autem",
                                "quasi"],
                        [new FieldInfo("email",
                                "dolores",
                                "error",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Min)],
                        [new RelationshipPopupContent("sapiente odit natus",
                                "omnis culpa dolorem mollitia sapiente",
                                9,
                                "explicabo",
                            [new RelatedRecordsInfoFieldOrder("voluptatem",
                                OrderBy.Desc)],
                                8),
                        new RelationshipPopupContent("delectus dolorem fugiat",
                                "quis cumque velit et aliquid ipsum",
                                8,
                                "aspernatur",
                            [new RelatedRecordsInfoFieldOrder("sit",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("asperiores",
                                OrderBy.Desc)],
                                5)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "phone",
                                "laborum magnam dignissimos",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "updatedAt",
                                "impedit qui atque",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("velit sed aut",
                                "f73e2b63-6745-b944-ddb3-18f54cd6dff0",
                                () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "dolores"),
                        new ActionToggle("vero aut eum",
                                "70a43d25-68cb-ca57-ebe1-addabebcc4d6",
                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "consectetur"),
                        new ActionButton("incidunt assumenda sint",
                                "https://picsum.photos/640/480/?image=501",
                                "f4e00ac3-ce30-e3c6-2093-a0731f409f6b",
                                () => { Console.WriteLine("odit"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "eaque")]),
                        new AttributesDictionary(),
                        true,
                        "dolorem",
                        "voluptatem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "accusantium",
                            8)),
                new Graphic(new Polygon([new MapPath([new MapPoint([782.0234,
                                909.1522,
                                871.4857,
                                577.7050]),
                            new MapPoint([594.5290,
                                3.1889,
                                874.5960]),
                            new MapPoint([871.2047,
                                608.9029,
                                188.3370]),
                            new MapPoint([531.0759,
                                970.1018])]),
                            new MapPath([new MapPoint([964.8891,
                                    367.2095,
                                    433.1344,
                                    833.6344]),
                                new MapPoint([633.0506,
                                    927.6740]),
                                new MapPoint([726.1179,
                                    897.7593,
                                    995.8324,
                                    149.2493]),
                                new MapPoint([737.9627,
                                    193.2443,
                                    963.6655])]),
                            new MapPath([new MapPoint([303.8052,
                                    231.1462]),
                                new MapPoint([143.9396,
                                    486.6424,
                                    32.6004])])],
                        new SpatialReference(8,
                                "quam",
                                "dicta",
                                "quod"),
                        new Point(94.6109,
                                58.2707,
                                26.9684,
                                55.4945,
                                114.7097,
                            new SpatialReference(6,
                                    "libero",
                                    "non",
                                    "natus"),
                                true,
                                true,
                                787.2902),
                            true,
                            true,
                            true),
                    new TextSymbol("ut labore et",
                        new MapColor(143, 143, 98),
                        new MapColor(8, 1, 154),
                            new Dimension(894.3678),
                        new MapFont(new Dimension(653.0791),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            301.9667,
                        new MapColor(24, 213, 60),
                        new MapColor(202, 101, 204),
                            250.9789,
                        HorizontalAlignment.Right,
                            true,
                            446.3112,
                            new Dimension(255.7536),
                            true),
                    new PopupTemplate("vel esse nulla",
                            "voluptate",
                            ["eius",
                                "eligendi"],
                        [new FieldInfo("group",
                                "id",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("createdAt",
                                "quo",
                                "eaque",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("title",
                                "cumque",
                                "iste",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("password",
                                "alias",
                                "asperiores",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                        [new AttachmentsPopupContent("ut officia et",
                                "voluptatem dolorum iste veritatis ex similique",
                                AttachmentsPopupContentDisplayType.Preview),
                        new MediaPopupContent("assumenda quaerat aliquid",
                                "deleniti eius minima veniam",
                            [new ImageMediaInfo("ea ut voluptatibus",
                                    "et",
                                    "consequuntur est facere",
                                new ImageMediaInfoValue("https://josie.com",
                                        "http://brenda.biz"),
                                    849.3268),
                            new BarChartMediaInfo("aut quia ea",
                                    "deserunt",
                                    "pariatur et aut",
                                new ChartMediaInfoValue(["qui",
                                        "cupiditate"],
                                        "sed",
                                        "quis",
                                    [new ChartMediaInfoValueSeries("password",
                                            "repellat",
                                            69.4339)],
                                    [new MapColor(0, 252, 37)]))],
                                9)],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "token",
                                "est vero deserunt",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "id",
                                "quisquam et et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "token",
                                "delectus suscipit numquam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "cupiditate dolorem non",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("nesciunt omnis quis",
                                "0b75287e-957a-12f6-fec9-525249493741",
                                () => { Console.WriteLine("reprehenderit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "est"),
                        new ActionToggle("accusantium iure repudiandae",
                                "7c6c9175-b577-b068-9b48-650dcadd783c",
                                () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "corrupti")]),
                        new AttributesDictionary(),
                        true,
                        "est",
                        "ipsam",
                        new GraphicOrigin(Guid.NewGuid(),
                            "doloremque",
                            3)),
                new Graphic(new Extent(-76.2937,
                            -25.6114,
                            37.9751,
                            45.4162,
                            843.9359,
                            546.1994,
                            840.6085,
                            687.3994,
                        new SpatialReference(8,
                                "molestiae",
                                "earum",
                                "repudiandae"),
                            true,
                            true),
                    new TextSymbol("rerum consequuntur molestias",
                        new MapColor(155, 222, 104),
                        new MapColor(54, 213, 217),
                            new Dimension(67.4256),
                        new MapFont(new Dimension(890.7600),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            681.0154,
                        new MapColor(185, 23, 138),
                        new MapColor(246, 161, 205),
                            435.3782,
                        HorizontalAlignment.Center,
                            true,
                            576.2925,
                            new Dimension(695.2756),
                            true),
                    new PopupTemplate("quidem aut similique",
                            "provident",
                            ["voluptas",
                                "culpa"],
                        [new FieldInfo("comment",
                                "ut",
                                "quia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("token",
                                "sint",
                                "ratione",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "officia",
                                    "est omnis et")),
                        new FieldsPopupContent([new FieldInfo("name",
                                    "quis",
                                    "distinctio",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "expedita tempora sed provident",
                                "veniam et ad"),
                        new FieldsPopupContent([new FieldInfo("phone",
                                    "voluptatem",
                                    "accusamus",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("id",
                                    "sint",
                                    "qui",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("title",
                                    "dolorem",
                                    "sapiente",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("category",
                                    "voluptatem",
                                    "sed",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "eos sed mollitia ex et nostrum",
                                "ut qui perspiciatis"),
                        new MediaPopupContent("consequatur error sit",
                                "quo et consequuntur libero molestiae fugiat",
                            [new LineChartMediaInfo("sit alias voluptatum",
                                    "quis",
                                    "repellendus molestias quo",
                                new ChartMediaInfoValue(["voluptatum",
                                        "error",
                                        "eum",
                                        "officiis"],
                                        "dignissimos",
                                        "labore",
                                    [new ChartMediaInfoValueSeries("updatedAt",
                                            "voluptatum",
                                            522.3633)],
                                    [new MapColor(229, 178, 202),
                                    new MapColor(251, 137, 201),
                                    new MapColor(79, 207, 232)])),
                            new LineChartMediaInfo("hic culpa cum",
                                    "consequatur",
                                    "nihil numquam velit",
                                new ChartMediaInfoValue(["blanditiis",
                                        "aut",
                                        "nulla"],
                                        "cumque",
                                        "molestiae",
                                    [new ChartMediaInfoValueSeries("status",
                                            "et",
                                            449.9583),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "eum",
                                            603.7920)],
                                    [new MapColor(148, 89, 184)])),
                            new BarChartMediaInfo("voluptate id qui",
                                    "est",
                                    "nisi voluptatem perferendis",
                                new ChartMediaInfoValue(["atque",
                                        "consequuntur",
                                        "ut",
                                        "minus"],
                                        "ex",
                                        "sint",
                                    [new ChartMediaInfoValueSeries("createdAt",
                                            "commodi",
                                            134.4531)],
                                    [new MapColor(105, 158, 181)])),
                            new ColumnChartMediaInfo("qui ullam repellendus",
                                    "dolores",
                                    "eveniet illo iure",
                                new ChartMediaInfoValue(["consequatur",
                                        "blanditiis",
                                        "soluta",
                                        "vel"],
                                        "iure",
                                        "laboriosam",
                                    [new ChartMediaInfoValueSeries("id",
                                            "in",
                                            46.1980),
                                    new ChartMediaInfoValueSeries("status",
                                            "laboriosam",
                                            159.3514),
                                    new ChartMediaInfoValueSeries("status",
                                            "vitae",
                                            653.2129)],
                                    [new MapColor(35, 128, 91),
                                    new MapColor(101, 179, 133),
                                    new MapColor(2, 222, 205),
                                    new MapColor(78, 230, 63)]))],
                                1)],
                        [new ExpressionInfo("return Date();",
                                "status",
                                "odio harum officiis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("enim eveniet dolor",
                                "https://picsum.photos/640/480/?image=312",
                                "94cd494a-3a79-8e56-598b-0f7efb8a7490",
                                () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "non"),
                        new ActionButton("quo porro maiores",
                                "https://picsum.photos/640/480/?image=897",
                                "912c9325-bd59-08c5-e83d-4fccfcee9cc6",
                                () => { Console.WriteLine("tenetur"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "quaerat")]),
                        new AttributesDictionary(),
                        true,
                        "est",
                        "assumenda",
                        new GraphicOrigin(Guid.NewGuid(),
                            "laboriosam",
                            7)),
                new Graphic(new Polyline([new MapPath([new MapPoint([65.1168,
                                975.4493,
                                845.7786]),
                            new MapPoint([574.0677,
                                357.8325,
                                785.0330]),
                            new MapPoint([851.5794,
                                737.6297,
                                288.3373,
                                884.2430]),
                            new MapPoint([207.8251,
                                438.0090,
                                307.6298])]),
                            new MapPath([new MapPoint([249.1118,
                                    624.0253,
                                    822.1839]),
                                new MapPoint([212.4657,
                                    169.0512]),
                                new MapPoint([355.6457,
                                    993.8787])]),
                            new MapPath([new MapPoint([646.9207,
                                    297.7087,
                                    766.2889]),
                                new MapPoint([20.2867,
                                    607.5327])]),
                            new MapPath([new MapPoint([524.2757,
                                    822.8971]),
                                new MapPoint([968.6740,
                                    310.4291,
                                    251.0161,
                                    311.1991])])],
                        new SpatialReference(8,
                                "sit",
                                "alias",
                                "accusamus"),
                            true,
                            true),
                    new TextSymbol("magni est numquam",
                        new MapColor(17, 120, 47),
                        new MapColor(148, 129, 237),
                            new Dimension(510.2004),
                        new MapFont(new Dimension(848.3718),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            915.5228,
                        new MapColor(198, 244, 176),
                        new MapColor(216, 122, 195),
                            252.8500,
                        HorizontalAlignment.Center,
                            true,
                            253.1881,
                            new Dimension(543.0078),
                            true),
                    new PopupTemplate("sequi doloremque doloremque",
                            "molestias",
                            ["eos",
                                "aut",
                                "excepturi",
                                "sunt"],
                        [new FieldInfo("id",
                                "repellat",
                                "architecto",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Max)],
                        [new FieldsPopupContent([new FieldInfo("category",
                                    "voluptatem",
                                    "perspiciatis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("category",
                                    "modi",
                                    "autem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("title",
                                    "rem",
                                    "voluptatem",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "aut sint sint aut assumenda",
                                "et provident aliquid"),
                        new RelationshipPopupContent("ipsum voluptatibus rerum",
                                "nisi voluptas quibusdam porro minus voluptatem occaecati",
                                8,
                                "impedit",
                            [new RelatedRecordsInfoFieldOrder("facilis",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("repellat",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("aut",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("ad",
                                OrderBy.Desc)],
                                3)],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "email",
                                "corrupti reiciendis enim",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "comment",
                                "voluptatum doloribus animi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "avatar",
                                "consectetur fugiat nostrum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptates eum voluptatum",
                                "95e1388e-e68d-ddfd-91f1-8659adc30706",
                                () => { Console.WriteLine("fugit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "nemo"),
                        new ActionButton("voluptate deleniti aut",
                                "https://picsum.photos/640/480/?image=426",
                                "ba3643f4-74ad-25fb-d9c9-cc69a2a2947a",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "quis"),
                        new ActionToggle("soluta aliquam quis",
                                "0becee90-51bc-1610-9832-29143de6a5d2",
                                () => { Console.WriteLine("quidem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "rerum"),
                        new ActionButton("sint id quis",
                                "https://picsum.photos/640/480/?image=110",
                                "d45ed386-92d7-c014-e57d-d4bc14a2f293",
                                () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "est")]),
                        new AttributesDictionary(),
                        true,
                        "quis",
                        "necessitatibus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "porro",
                            3))],
                    ["temporibus",
                        "quisquam"],
                [new Graphic(new Point(20.2326,
                            -35.7098,
                            -160.2846,
                            35.0114,
                            10.1242,
                        new SpatialReference(3,
                                "reprehenderit",
                                "consectetur",
                                "occaecati"),
                            true,
                            true,
                            913.3825),
                    new TextSymbol("at qui quos",
                        new MapColor(173, 145, 66),
                        new MapColor(15, 109, 223),
                            new Dimension(355.3906),
                        new MapFont(new Dimension(40.6624),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            105.0007,
                        new MapColor(41, 137, 129),
                        new MapColor(92, 189, 159),
                            126.7594,
                        HorizontalAlignment.Center,
                            true,
                            272.6250,
                            new Dimension(44.8214),
                            true),
                    new PopupTemplate("aut consectetur unde",
                            "non",
                            ["ea",
                                "perspiciatis",
                                "occaecati"],
                        [new FieldInfo("group",
                                "sed",
                                "sed",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("password",
                                "qui",
                                "non",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("password",
                                "ducimus",
                                "ut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("email",
                                "quos",
                                "debitis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Var)],
                        [new TextPopupContent("sed cum cum"),
                        new MediaPopupContent("est minus itaque",
                                "eos sint voluptatem hic est et est",
                            [new ImageMediaInfo("blanditiis molestias repellat",
                                    "id",
                                    "saepe debitis asperiores",
                                new ImageMediaInfoValue("http://royal.name",
                                        "http://maya.net"),
                                    661.9513),
                            new ImageMediaInfo("veritatis enim provident",
                                    "commodi",
                                    "eligendi sunt autem",
                                new ImageMediaInfoValue("http://domingo.net",
                                        "http://myrl.net"),
                                    858.0730)],
                                1)],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "createdAt",
                                "sed rerum cumque",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "id",
                                "et officia qui",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("et totam culpa",
                                "https://picsum.photos/640/480/?image=829",
                                "5d1c22cc-4db4-da0a-f2d9-f2dc1cf40fc2",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "tenetur")]),
                        new AttributesDictionary(),
                        true,
                        "deserunt",
                        "enim",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ut",
                            1))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["recusandae",
                    "hic",
                    "repellendus",
                    "voluptates"],
                    ["category",
                        "phone",
                        "token"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("category");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("group",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polyline([new MapPath([new MapPoint([885.5975,
                                854.4796,
                                645.2548]),
                            new MapPoint([755.5740,
                                168.9095,
                                402.1677,
                                687.5811])])],
                        new SpatialReference(3,
                                "tempore",
                                "quia",
                                "dolore"),
                            true,
                            true),
                    new TextSymbol("voluptatem quia ullam",
                        new MapColor(130, 48, 69),
                        new MapColor(108, 173, 188),
                            new Dimension(679.6805),
                        new MapFont(new Dimension(393.4805),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            818.7098,
                        new MapColor(67, 49, 245),
                        new MapColor(132, 186, 183),
                            508.8473,
                        HorizontalAlignment.Right,
                            true,
                            246.8652,
                            new Dimension(650.1548),
                            true),
                    new PopupTemplate("doloremque et ut",
                            "ut",
                            ["in",
                                "provident"],
                        [new FieldInfo("name",
                                "expedita",
                                "quo",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("phone",
                                "itaque",
                                "dolor",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("group",
                                "et",
                                "quia",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new AttachmentsPopupContent("ut velit maiores",
                                "voluptatem tenetur in dolorum at",
                                AttachmentsPopupContentDisplayType.Auto),
                        new FieldsPopupContent([new FieldInfo("category",
                                    "incidunt",
                                    "doloribus",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "pariatur dolores corrupti numquam molestiae consequatur inventore",
                                "ad culpa consequatur")],
                        [new ExpressionInfo("return Date();",
                                "password",
                                "quia corporis ullam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("enim quia quisquam",
                                "https://picsum.photos/640/480/?image=621",
                                "c8134308-38ed-fc43-729d-b466a379cbe1",
                                () => { Console.WriteLine("maxime"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "assumenda"),
                        new ActionButton("soluta quae rerum",
                                "https://picsum.photos/640/480/?image=1026",
                                "2f7d9cec-4f8d-35c3-f56b-6b2834e9c86a",
                                () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "et"),
                        new ActionToggle("enim et assumenda",
                                "6c45e95e-d2bc-a4ea-0954-f7e37c7e7489",
                                () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "inventore"),
                        new ActionButton("dolor ut aperiam",
                                "https://picsum.photos/640/480/?image=991",
                                "ec6f0e6c-1cb4-db91-13b0-3757212b6028",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "non")]),
                        new AttributesDictionary(),
                        true,
                        "nulla",
                        "sunt",
                        new GraphicOrigin(Guid.NewGuid(),
                            "commodi",
                            2))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([2,
                    7],
                    true,
                    538.7585,
                    711.7133,
                    "0.7.7.7",
                new Point(-71.2833,
                        -15.3610,
                        -83.5332,
                        40.8419,
                        850.4499,
                    new SpatialReference(4,
                            "corporis",
                            "ea",
                            "non"),
                        true,
                        true,
                        500.5083),
                    2,
                    ["voluptas",
                        "dicta",
                        "voluptatem"],
                    "dolorem",
                    new DateTime(2010, 2, 14, 17, 6, 4),
                    660.0218,
                    4,
                    "quibusdam",
                    4),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([4,
                    3,
                    5,
                    3],
                    true,
                    846.1575,
                    151.6097,
                    "1.6.2.5",
                new Polygon([new MapPath([new MapPoint([702.2317,
                            71.5478,
                            850.0515]),
                        new MapPoint([50.1771,
                            398.3713,
                            992.8114,
                            971.8420]),
                        new MapPoint([846.0299,
                            738.5862])])],
                    new SpatialReference(8,
                            "qui",
                            "sed",
                            "voluptatibus"),
                    new Point(72.7420,
                            41.7876,
                            127.5968,
                            -30.4117,
                            409.0405,
                        new SpatialReference(2,
                                "quia",
                                "sed",
                                "architecto"),
                            true,
                            true,
                            480.2023),
                        true,
                        true,
                        true),
                    4,
                    ["eius",
                        "laudantium",
                        "exercitationem"],
                    "fugit",
                    new DateTime(2016, 5, 19, 12, 25, 31),
                    53.0418,
                    9,
                    "omnis",
                    6),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([3,
                    3,
                    6,
                    8],
                    true,
                    683.8881,
                    461.6098,
                    "1.8.8.1",
                new Extent(-54.5347,
                        153.0766,
                        28.0463,
                        68.4823,
                        456.1253,
                        928.6806,
                        323.0412,
                        831.2306,
                    new SpatialReference(1,
                            "repudiandae",
                            "enim",
                            "beatae"),
                        true,
                        true),
                    3,
                    ["ut",
                        "fugiat"],
                    "optio",
                    new DateTime(2004, 7, 16, 5, 16, 0),
                    527.1365,
                    4,
                    "placeat",
                    4),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([9,
                    2,
                    5],
                    true,
                    425.4320,
                    111.7926,
                    "4.7.1.6",
                new Extent(-109.4350,
                        22.3489,
                        18.2728,
                        -61.2486,
                        85.8906,
                        134.9353,
                        848.5377,
                        564.8378,
                    new SpatialReference(5,
                            "modi",
                            "asperiores",
                            "numquam"),
                        true,
                        true),
                    7,
                    ["nesciunt",
                        "tempore",
                        "voluptate"],
                    "error",
                    new DateTime(2011, 1, 26, 22, 54, 31),
                    704.3212,
                    1,
                    "repellendus",
                    9),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Hide;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.DestinationOut;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "impedit quis reprehenderit"),
                ElevationInfoMode.RelativeToScene,
                    570.1435,
                ElevationUnit.DecimalDegrees);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("nesciunt",
                    47655411.6202),
                    new Effect("tempore",
                        49644114.2684)],
                    true,
                new FeatureFilter(65.6091,
                    new Polygon([new MapPath([new MapPoint([640.3965,
                                66.2429,
                                597.3982]),
                            new MapPoint([541.5658,
                                883.3746,
                                849.7952]),
                            new MapPoint([959.4484,
                                151.8497,
                                471.0895]),
                            new MapPoint([695.8565,
                                386.9295])]),
                            new MapPath([new MapPoint([692.0768,
                                    418.0847,
                                    241.4415]),
                                new MapPoint([968.1898,
                                    429.3815,
                                    982.0606,
                                    342.0955]),
                                new MapPoint([212.8273,
                                    4.6796,
                                    508.7500])])],
                        new SpatialReference(7,
                                "enim",
                                "ut",
                                "quia"),
                        new Point(171.9019,
                                32.6453,
                                -128.4701,
                                56.7391,
                                393.1290,
                            new SpatialReference(9,
                                    "omnis",
                                    "tempore",
                                    "et"),
                                true,
                                true,
                                167.6300),
                            true,
                            true,
                            true),
                        [6,
                            7,
                            2,
                            7],
                    SpatialRelationship.Contains,
                    new TimeExtent(new DateTime(2004, 5, 10, 19, 25, 18),
                            new DateTime(2004, 9, 12, 7, 7, 14)),
                        QueryUnits.NauticalMiles,
                        "Country = 'Canada'"),
                    [new Effect("quas",
                        48510361.3411),
                        new Effect("dolorem",
                            20708058.5704),
                        new Effect("numquam",
                            49511812.7609),
                        new Effect("vitae",
                            37259865.7901)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "avatar",
                    "soluta",
                    "officia reprehenderit odio distinctio",
                    7,
                    true,
                    true,
                    new { Value = "id" },
                FieldValueType.UniqueIdentifier,
                new RangeDomain("enim",
                        "ut",
                        "updatedAt")),
            new Field(default,
                    "avatar",
                    "enim",
                    "aut quam sint quasi id",
                    4,
                    true,
                    true,
                    new { Value = "aut" },
                FieldValueType.Binary,
                new InheritedDomain("title")),
            new Field(default,
                    "token",
                    "ut",
                    "sed facilis assumenda autem dolor autem et",
                    2,
                    true,
                    true,
                    new { Value = "repellendus" },
                FieldValueType.NameOrTitle,
                new RangeDomain("sequi",
                        "possimus",
                        "avatar")),
            new Field(default,
                    "status",
                    "ratione",
                    "ut non id maiores ea eveniet quod",
                    3,
                    true,
                    true,
                    new { Value = "voluptas" },
                FieldValueType.Coordinate,
                new RangeDomain("vitae",
                        "eveniet",
                        "comment"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(56.3492,
                    -168.3498,
                    -8.5853,
                    -68.7563,
                    501.7100,
                    162.1576,
                    206.5927,
                    987.0876,
                new SpatialReference(6,
                        "occaecati",
                        "aut",
                        "doloremque"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polygon;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveRight,
                    "aperiam",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    16670908.1840,
                    29680.1323,
                    true,
                    new Dimension(187.8217),
                new TextSymbol("distinctio dolorem nam",
                    new MapColor(131, 239, 252),
                    new MapColor(110, 64, 51),
                        new Dimension(654.6374),
                    new MapFont(new Dimension(602.1699),
                            "Bookman",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        842.6472,
                    new MapColor(59, 139, 60),
                    new MapColor(113, 103, 106),
                        413.8893,
                    HorizontalAlignment.Left,
                        true,
                        477.6096,
                        new Dimension(702.5269),
                        true),
                    true,
                    "ObjectID = 1")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("nihil",
                SortOrder.Descending,
                    "perferendis"),
            new OrderedLayerOrderBy("consequatur",
                SortOrder.Descending,
                    "expedita"),
            new OrderedLayerOrderBy("est",
                SortOrder.Ascending,
                    "sapiente"),
            new OrderedLayerOrderBy("doloribus",
                SortOrder.Ascending,
                    "ut")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("aut totam quo",
                    "commodi",
                    ["aut",
                        "in"],
                [new FieldInfo("avatar",
                        "iure",
                        "ratione",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(2,
                            true,
                        DateFormat.ShortDateLe),
                        true,
                        true,
                    StatisticType.Count),
                new FieldInfo("comment",
                        "sed",
                        "sint",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(1,
                            true,
                        DateFormat.ShortDateShortTime),
                        true,
                        true,
                    StatisticType.Stddev),
                new FieldInfo("category",
                        "sint",
                        "omnis",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.DayShortMonthYearShortTime24),
                        true,
                        true,
                    StatisticType.Count),
                new FieldInfo("category",
                        "et",
                        "dolores",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(8,
                            true,
                        DateFormat.ShortDateShortTime24),
                        true,
                        true,
                    StatisticType.Sum)],
                [new TextPopupContent("id vel eum"),
                new TextPopupContent("ex facere non"),
                new FieldsPopupContent([new FieldInfo("status",
                            "dolor",
                            "voluptas",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("createdAt",
                            "quia",
                            "vel",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                        "quasi et aut laborum necessitatibus",
                        "qui molestias ut")],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "id",
                        "aspernatur ipsum facilis",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("eos et odit",
                        "https://picsum.photos/640/480/?image=7",
                        "c4c8dd3e-3c9f-5e8d-dde5-af7dbd7c826f",
                        () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                        "password",
                        true,
                        true,
                        true,
                        "reprehenderit"),
                new ActionButton("nihil doloremque ex",
                        "https://picsum.photos/640/480/?image=660",
                        "272aefb6-5ce7-ee70-daf1-4b2941bdc517",
                        () => { Console.WriteLine("iusto"); return Task.CompletedTask; },
                        "name",
                        true,
                        true,
                        true,
                        "eum"),
                new ActionButton("et dolorum non",
                        "https://picsum.photos/640/480/?image=327",
                        "274acb2d-7684-78fd-b0fa-2e9e72605986",
                        () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                        "createdAt",
                        true,
                        true,
                        true,
                        "excepturi"),
                new ActionButton("et natus quod",
                        "https://picsum.photos/640/480/?image=586",
                        "889b26c4-9b88-4df5-2fb5-b8cffc35eccc",
                        () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                        "group",
                        true,
                        true,
                        true,
                        "cupiditate")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "ut",
                    "quidem",
                    648.4610,
                    ["rem",
                        "libero",
                        "libero",
                        "sed"],
                    new DateTime(2012, 8, 1, 22, 21, 34),
                    "nisi",
                    "unde dolores aliquid similique non",
                new Extent(174.1227,
                        -148.5296,
                        17.0040,
                        27.7793,
                        343.5308,
                        741.6990,
                        594.4893,
                        538.1700,
                    new SpatialReference(1,
                            "facilis",
                            "ipsa",
                            "fugiat"),
                        true,
                        true),
                    ["consequatur",
                        "numquam",
                        "sunt"],
                    "placeat",
                    new DateTime(2004, 3, 26, 0, 11, 43),
                    "comment",
                    588.5306);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(225, 67, 222),
                            new MapColor(236, 166, 98)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(211, 244, 244),
                            new MapColor(38, 90, 172)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(188, 129, 242),
                            new MapColor(173, 130, 197)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(73, 167, 219),
                            new MapColor(159, 17, 50))]),
                        437.7187,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(383.9401,
                                700.0888),
                        new AuthoringInfoField1ClassBreakInfos(836.7165,
                                916.7050),
                        new AuthoringInfoField1ClassBreakInfos(767.0125,
                                79.6277)],
                            "occaecati",
                            "aperiam",
                            "totam"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(473.0207,
                                531.8494),
                        new AuthoringInfoField1ClassBreakInfos(148.3612,
                                7.2062),
                        new AuthoringInfoField1ClassBreakInfos(905.1716,
                                472.7352),
                        new AuthoringInfoField1ClassBreakInfos(213.2320,
                                532.6694)],
                            "est",
                            "velit",
                            "non"),
                        ["sapiente",
                            "deserunt",
                            "minima"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "assumenda",
                        true,
                    LengthUnit.Inches,
                        231.9112,
                        150.0115,
                        150.4723,
                        606.8731),
                new PictureFillSymbol("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0",
                    new Dimension(682.4366),
                    new Dimension(509.1603),
                    new Dimension(287.7608),
                    new Dimension(149.8673),
                    175.6228,
                    20.0248,
                    new Outline(new MapColor(133, 230, 2),
                        new Dimension(325.2598),
                        SimpleLineSymbolStyle.ShortDashDotDot,
                        Cap.Round,
                        Join.Round,
                        new LineSymbolMarker(new MapColor(181, 131, 78),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Cross),
                        471.7987),
                    new MapColor(20, 87, 124)),
                    "perferendis",
                    new DefaultSymbol(),
                    "vel",
                    "culpa",
                    "fugiat",
                    "repudiandae",
                new UniqueValueRendererLegendOptions("recusandae corrupti dolor"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("unde",
                        new TextSymbol("minima ducimus molestiae",
                            new MapColor(178, 124, 156),
                            new MapColor(222, 252, 78),
                                new Dimension(811.8018),
                            new MapFont(new Dimension(628.4831),
                                    "Times New Roman",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.LineThrough),
                                843.2312,
                            new MapColor(111, 26, 219),
                            new MapColor(225, 87, 248),
                                861.4301,
                            HorizontalAlignment.Left,
                                true,
                                525.9612,
                                new Dimension(915.6645),
                                true),
                        [new UniqueValue("culpa",
                                "ut",
                                "sit"),
                        new UniqueValue("aspernatur",
                                "ipsum",
                                "aspernatur"),
                        new UniqueValue("libero",
                                "error",
                                "cumque")]),
                    new UniqueValueClass("exercitationem",
                        new TextSymbol("odio voluptatem qui",
                            new MapColor(131, 125, 224),
                            new MapColor(102, 253, 111),
                                new Dimension(402.1395),
                            new MapFont(new Dimension(109.7168),
                                    "Arial",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                838.0516,
                            new MapColor(47, 216, 172),
                            new MapColor(105, 246, 146),
                                627.7412,
                            HorizontalAlignment.Right,
                                true,
                                165.8195,
                                new Dimension(40.5891),
                                true),
                        [new UniqueValue("porro",
                                "quis",
                                "quia"),
                        new UniqueValue("est",
                                "quis",
                                "est")])],
                        "eligendi"),
                new UniqueValueGroup([new UniqueValueClass("at",
                        new TextSymbol("voluptate deleniti saepe",
                            new MapColor(87, 143, 195),
                            new MapColor(64, 249, 26),
                                new Dimension(60.5529),
                            new MapFont(new Dimension(666.9991),
                                    "Arial",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                736.3584,
                            new MapColor(79, 166, 106),
                            new MapColor(169, 106, 39),
                                167.0869,
                            HorizontalAlignment.Right,
                                true,
                                639.8767,
                                new Dimension(683.2090),
                                true),
                        [new UniqueValue("architecto",
                                "et",
                                "aut"),
                        new UniqueValue("ut",
                                "in",
                                "repudiandae"),
                        new UniqueValue("sed",
                                "in",
                                "optio")]),
                    new UniqueValueClass("at",
                        new TextSymbol("magni aut voluptatibus",
                            new MapColor(234, 74, 218),
                            new MapColor(243, 250, 173),
                                new Dimension(316.1948),
                            new MapFont(new Dimension(266.2352),
                                    "Arial",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                895.9225,
                            new MapColor(203, 212, 48),
                            new MapColor(125, 248, 222),
                                825.4570,
                            HorizontalAlignment.Center,
                                true,
                                985.9264,
                                new Dimension(487.7131),
                                true),
                        [new UniqueValue("et",
                                "id",
                                "sit"),
                        new UniqueValue("odit",
                                "officia",
                                "sint"),
                        new UniqueValue("est",
                                "odio",
                                "occaecati")]),
                    new UniqueValueClass("ut",
                        new TextSymbol("saepe non veniam",
                            new MapColor(212, 79, 254),
                            new MapColor(88, 147, 101),
                                new Dimension(971.7876),
                            new MapFont(new Dimension(420.1560),
                                    "Courier New",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                456.1590,
                            new MapColor(191, 128, 254),
                            new MapColor(72, 190, 184),
                                668.6497,
                            HorizontalAlignment.Right,
                                true,
                                127.7619,
                                new Dimension(551.5887),
                                true),
                        [new UniqueValue("earum",
                                "eveniet",
                                "iste")])],
                        "magni"),
                new UniqueValueGroup([new UniqueValueClass("accusantium",
                        new TextSymbol("consequatur alias non",
                            new MapColor(2, 116, 153),
                            new MapColor(92, 90, 117),
                                new Dimension(839.1193),
                            new MapFont(new Dimension(590.8193),
                                    "Georgia",
                                MapFontStyle.Normal,
                                FontWeight.Lighter,
                                TextDecoration.LineThrough),
                                505.4475,
                            new MapColor(54, 111, 193),
                            new MapColor(85, 67, 68),
                                580.3301,
                            HorizontalAlignment.Right,
                                true,
                                15.7759,
                                new Dimension(550.6383),
                                true),
                        [new UniqueValue("quo",
                                "exercitationem",
                                "odit")]),
                    new UniqueValueClass("voluptatum",
                        new TextSymbol("ea dolores eum",
                            new MapColor(215, 169, 73),
                            new MapColor(117, 27, 182),
                                new Dimension(83.8255),
                            new MapFont(new Dimension(813.0105),
                                    "Arial",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.LineThrough),
                                63.6279,
                            new MapColor(1, 85, 139),
                            new MapColor(243, 195, 171),
                                176.2970,
                            HorizontalAlignment.Left,
                                true,
                                21.8708,
                                new Dimension(724.4947),
                                true),
                        [new UniqueValue("repellat",
                                "facilis",
                                "eius"),
                        new UniqueValue("labore",
                                "alias",
                                "numquam"),
                        new UniqueValue("reprehenderit",
                                "illum",
                                "est"),
                        new UniqueValue("mollitia",
                                "in",
                                "voluptates")]),
                    new UniqueValueClass("rerum",
                        new TextSymbol("possimus neque suscipit",
                            new MapColor(111, 252, 243),
                            new MapColor(205, 156, 114),
                                new Dimension(595.2714),
                            new MapFont(new Dimension(137.8275),
                                    "Courier New",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                1.5032,
                            new MapColor(88, 115, 160),
                            new MapColor(230, 132, 10),
                                745.9449,
                            HorizontalAlignment.Left,
                                true,
                                225.1926,
                                new Dimension(16.6755),
                                true),
                        [new UniqueValue("aut",
                                "ut",
                                "hic"),
                        new UniqueValue("esse",
                                "adipisci",
                                "molestias"),
                        new UniqueValue("quasi",
                                "praesentium",
                                "mollitia")])],
                        "aliquid"),
                new UniqueValueGroup([new UniqueValueClass("et",
                        new TextSymbol("consectetur hic aut",
                            new MapColor(57, 99, 205),
                            new MapColor(146, 152, 61),
                                new Dimension(311.0779),
                            new MapFont(new Dimension(215.9481),
                                    "Helvetica",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                942.6546,
                            new MapColor(10, 132, 188),
                            new MapColor(62, 183, 121),
                                791.7361,
                            HorizontalAlignment.Left,
                                true,
                                658.5619,
                                new Dimension(440.9450),
                                true),
                        [new UniqueValue("excepturi",
                                "reiciendis",
                                "perspiciatis"),
                        new UniqueValue("quisquam",
                                "aut",
                                "voluptate"),
                        new UniqueValue("enim",
                                "minus",
                                "ut"),
                        new UniqueValue("ut",
                                "dolor",
                                "eveniet")]),
                    new UniqueValueClass("aut",
                        new TextSymbol("qui deserunt consequatur",
                            new MapColor(143, 81, 160),
                            new MapColor(131, 86, 153),
                                new Dimension(133.1331),
                            new MapFont(new Dimension(493.7646),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.LineThrough),
                                221.8565,
                            new MapColor(209, 203, 35),
                            new MapColor(155, 144, 37),
                                40.3835,
                            HorizontalAlignment.Center,
                                true,
                                81.6602,
                                new Dimension(216.3919),
                                true),
                        [new UniqueValue("quia",
                                "consequatur",
                                "sint"),
                        new UniqueValue("nobis",
                                "autem",
                                "corrupti"),
                        new UniqueValue("dolorem",
                                "veritatis",
                                "molestias"),
                        new UniqueValue("autem",
                                "animi",
                                "id")])],
                        "omnis")],
                [new UniqueValueInfo("officia",
                    new TextSymbol("aut libero blanditiis",
                        new MapColor(200, 4, 227),
                        new MapColor(16, 152, 50),
                            new Dimension(514.9161),
                        new MapFont(new Dimension(665.1314),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            91.9488,
                        new MapColor(169, 241, 230),
                        new MapColor(218, 51, 29),
                            764.1584,
                        HorizontalAlignment.Center,
                            true,
                            604.3175,
                            new Dimension(482.8614),
                            true),
                        "repudiandae"),
                new UniqueValueInfo("non",
                    new TextSymbol("nemo autem dignissimos",
                        new MapColor(50, 219, 32),
                        new MapColor(252, 177, 169),
                            new Dimension(304.8286),
                        new MapFont(new Dimension(144.4258),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            628.5649,
                        new MapColor(184, 148, 231),
                        new MapColor(216, 228, 27),
                            156.9747,
                        HorizontalAlignment.Right,
                            true,
                            228.2672,
                            new Dimension(88.3030),
                            true),
                        "voluptatem"),
                new UniqueValueInfo("aut",
                    new TextSymbol("recusandae vero quos",
                        new MapColor(21, 72, 34),
                        new MapColor(24, 114, 29),
                            new Dimension(285.5992),
                        new MapFont(new Dimension(6.7190),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            430.9578,
                        new MapColor(142, 140, 86),
                        new MapColor(200, 241, 70),
                            988.8706,
                        HorizontalAlignment.Left,
                            true,
                            409.4602,
                            new Dimension(584.2624),
                            true),
                        "ipsum")],
                    "sed",
                    "eos sunt quod");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(8,
                    "non",
                    "qui",
                    "id");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("sequi et et sit blanditiis unde",
                DrawingTool.Ellipse,
                    "id",
                new Graphic(new Polyline([new MapPath([new MapPoint([366.2140,
                                938.8623,
                                93.6957,
                                434.8245]),
                            new MapPoint([659.0943,
                                373.0868]),
                            new MapPoint([776.6981,
                                943.8890,
                                941.7481,
                                303.9470])]),
                            new MapPath([new MapPoint([226.9938,
                                    300.3144]),
                                new MapPoint([752.8584,
                                    961.2167,
                                    469.4451,
                                    743.9161]),
                                new MapPoint([351.3191,
                                    395.4946]),
                                new MapPoint([502.0259,
                                    390.1179])]),
                            new MapPath([new MapPoint([132.0695,
                                    402.4957]),
                                new MapPoint([731.6754,
                                    474.5666,
                                    293.5385])])],
                        new SpatialReference(7,
                                "tempora",
                                "accusantium",
                                "necessitatibus"),
                            true,
                            true),
                    new TextSymbol("quidem ab distinctio",
                        new MapColor(109, 120, 200),
                        new MapColor(245, 19, 199),
                            new Dimension(116.5414),
                        new MapFont(new Dimension(27.2837),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            818.7467,
                        new MapColor(127, 219, 111),
                        new MapColor(166, 253, 160),
                            259.7930,
                        HorizontalAlignment.Right,
                            true,
                            48.0115,
                            new Dimension(981.2004),
                            true),
                    new PopupTemplate("atque soluta aut",
                            "sequi",
                            ["enim",
                                "aut",
                                "harum"],
                        [new FieldInfo("status",
                                "et",
                                "eius",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("password",
                                "ratione",
                                "et",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "et",
                                    "ad tempore sit"))],
                        [new ExpressionInfo("return $feature.Name;",
                                "phone",
                                "expedita iusto qui",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "title",
                                "iure et amet",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("deleniti harum vel",
                                "https://picsum.photos/640/480/?image=936",
                                "04f916ed-0331-4fce-fe2d-8cc6f14d22db",
                                () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "minima")]),
                        new AttributesDictionary(),
                        true,
                        "facere",
                        "quis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aut",
                            5)),
                    new Thumbnail("voluptas",
                        "exercitationem",
                        222.9157,
                        66.8318)),
            new FeatureTemplate("similique molestiae sit ad veritatis modi est",
                DrawingTool.Triangle,
                    "phone",
                new Graphic(new Extent(-173.8126,
                            -98.8612,
                            47.2817,
                            14.5482,
                            945.6078,
                            412.7800,
                            885.6154,
                            830.1096,
                        new SpatialReference(7,
                                "laboriosam",
                                "quo",
                                "qui"),
                            true,
                            true),
                    new TextSymbol("qui quis soluta",
                        new MapColor(63, 11, 233),
                        new MapColor(216, 86, 15),
                            new Dimension(743.4633),
                        new MapFont(new Dimension(118.4006),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            682.0126,
                        new MapColor(30, 47, 43),
                        new MapColor(170, 148, 189),
                            46.7881,
                        HorizontalAlignment.Right,
                            true,
                            407.9984,
                            new Dimension(708.8194),
                            true),
                    new PopupTemplate("sit vel ab",
                            "placeat",
                            ["officiis",
                                "a",
                                "officia"],
                        [new FieldInfo("email",
                                "incidunt",
                                "doloremque",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("comment",
                                "nihil",
                                "velit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("comment",
                                "voluptas",
                                "qui",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new FieldsPopupContent([new FieldInfo("name",
                                    "quasi",
                                    "dolore",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "et molestias voluptatem quos quia",
                                "excepturi ipsa officia"),
                        new MediaPopupContent("rerum quia non",
                                "cum delectus aspernatur sint voluptatem",
                            [new ColumnChartMediaInfo("quia similique ut",
                                    "iste",
                                    "autem est optio",
                                new ChartMediaInfoValue(["qui",
                                        "ipsa",
                                        "veritatis",
                                        "porro"],
                                        "exercitationem",
                                        "enim",
                                    [new ChartMediaInfoValueSeries("token",
                                            "et",
                                            338.5452),
                                    new ChartMediaInfoValueSeries("id",
                                            "et",
                                            332.2785),
                                    new ChartMediaInfoValueSeries("category",
                                            "est",
                                            148.2382)],
                                    [new MapColor(218, 100, 175),
                                    new MapColor(33, 219, 5)]))],
                                5),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "dolor",
                                    "quis ad reiciendis"))],
                        [new ExpressionInfo("return Date();",
                                "avatar",
                                "deleniti minima provident",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "name",
                                "nostrum sunt quis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("assumenda non ut",
                                "https://picsum.photos/640/480/?image=1054",
                                "a18fe7be-c56d-b158-fe69-970a91e3a684",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "alias"),
                        new ActionButton("unde vel dolorem",
                                "https://picsum.photos/640/480/?image=472",
                                "9f2f9620-01c5-28ee-05e1-dac9cf955e31",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "ea"),
                        new ActionButton("impedit porro dignissimos",
                                "https://picsum.photos/640/480/?image=997",
                                "e5e5798a-d5d1-4d3a-39ff-debb62c1764e",
                                () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "amet"),
                        new ActionButton("animi amet ipsa",
                                "https://picsum.photos/640/480/?image=107",
                                "efd2be2f-1e14-cebc-cf8c-23f158db967a",
                                () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "in")]),
                        new AttributesDictionary(),
                        true,
                        "velit",
                        "iusto",
                        new GraphicOrigin(Guid.NewGuid(),
                            "possimus",
                            8)),
                    new Thumbnail("ut",
                        "mollitia",
                        44.6915,
                        270.8801)),
            new FeatureTemplate("qui labore distinctio at",
                DrawingTool.Freehand,
                    "token",
                new Graphic(new Extent(127.5802,
                            172.2656,
                            -60.6384,
                            -19.6130,
                            426.0328,
                            712.7870,
                            14.7487,
                            99.7514,
                        new SpatialReference(7,
                                "autem",
                                "dolores",
                                "rem"),
                            true,
                            true),
                    new TextSymbol("vitae et doloremque",
                        new MapColor(131, 46, 177),
                        new MapColor(113, 185, 181),
                            new Dimension(854.2198),
                        new MapFont(new Dimension(988.6635),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            723.6288,
                        new MapColor(155, 19, 223),
                        new MapColor(80, 81, 96),
                            230.6373,
                        HorizontalAlignment.Center,
                            true,
                            797.0894,
                            new Dimension(767.3252),
                            true),
                    new PopupTemplate("natus atque consequatur",
                            "nostrum",
                            ["ipsa",
                                "incidunt",
                                "officia",
                                "ipsum"],
                        [new FieldInfo("status",
                                "officia",
                                "facilis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("token",
                                "illo",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("status",
                                "sit",
                                "ea",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("id",
                                "eius",
                                "error",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Max)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                    "ut",
                                    "nemo animi omnis")),
                        new FieldsPopupContent([new FieldInfo("title",
                                    "explicabo",
                                    "quia",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("category",
                                    "neque",
                                    "est",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("comment",
                                    "nostrum",
                                    "est",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "eius voluptates velit quis",
                                "omnis quae qui"),
                        new TextPopupContent("eaque non maxime"),
                        new AttachmentsPopupContent("blanditiis est blanditiis",
                                "maxime voluptate qui ea minima doloremque",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "category",
                                "eos praesentium vitae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "password",
                                "temporibus quo neque",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("omnis eos qui",
                                "de08ebfd-fad8-d8e5-c583-25e50b9b0c9c",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "rerum")]),
                        new AttributesDictionary(),
                        true,
                        "architecto",
                        "officia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "praesentium",
                            5)),
                    new Thumbnail("aliquam",
                        "error",
                        159.7389,
                        89.6860))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2023, 9, 4, 0, 48, 30),
                    new DateTime(2021, 6, 17, 6, 3, 52));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("voluptatem",
                    "voluptatum",
                new TimeExtent(new DateTime(2010, 2, 6, 15, 20, 8),
                        new DateTime(2009, 4, 11, 18, 23, 34)),
                new TimeInterval(TemporalTime.Days,
                        706.1669),
                    [new DateTime(2017, 5, 1, 19, 10, 57),
                        new DateTime(2019, 5, 7, 6, 52, 53),
                        new DateTime(2007, 10, 18, 10, 52, 26),
                        new DateTime(2005, 3, 27, 0, 55, 4)],
                    "America/Chihuahua",
                    "est");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    229.5745);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2013, 10, 8, 5, 40, 18),
                    new DateTime(2005, 8, 17, 22, 55, 16));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
