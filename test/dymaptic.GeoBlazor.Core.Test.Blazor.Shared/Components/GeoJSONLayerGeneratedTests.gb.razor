@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("dolorum")"
                        Title="@("ut qui doloremque")"
                        Opacity="@(0.2466)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.Lighten)"
                        DefinitionExpression="@("iste")"
                        DisplayField="@("qui")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("dolorem",
                            4392917.5745))"
                        FullExtent="@(new Extent(-87.0919,
                                -126.1907,
                                55.0120,
                                -83.7175,
                                702.0920,
                                582.0037,
                                113.6178,
                                484.0585,
                            new SpatialReference(7,
                                    "modi",
                                    "quia",
                                    "ut"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Polyline)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(17851631.0147)"
                        MinScale="@(6462.2445)"
                        ObjectIdField="@("laboriosam")"
                        OutFields="@(["sequi",
                            "nam"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(438.2432)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(4,
                                "ipsa",
                                "sed",
                                "minima"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Decades)"
                            Value="@(991.7309)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("et")"
                            EndField="@("rerum")"
                            Stops="@([new DateTime(2007, 11, 21, 6, 9, 45),
                                new DateTime(2023, 11, 8, 15, 57, 5),
                                new DateTime(2007, 9, 1, 8, 0, 49),
                                new DateTime(2016, 1, 19, 10, 58, 52)])"
                            TimeZone="@("Asia/Urumqi")"
                            TrackIdField="@("dignissimos")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Days)"
                                Value="@(651.5307)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2005, 9, 14, 21, 0, 20))"
                                End="@(new DateTime(2010, 9, 13, 8, 24, 51))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2022, 10, 9, 10, 23, 30))"
                            End="@(new DateTime(2023, 11, 22, 16, 29, 47))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("et culpa quod animi ad ullam")"
                            DrawingTool="@(DrawingTool.DownArrow)"
                            Name="@("id")"
                            Prototype="@(new Graphic(new Polygon([new MapPath([new MapPoint([759.4024,
                                            635.0446,
                                            307.8318,
                                            236.6527]),
                                        new MapPoint([681.9885,
                                            704.0894,
                                            757.3805,
                                            436.2696]),
                                        new MapPoint([636.7180,
                                            957.9926,
                                            26.2917])]),
                                        new MapPath([new MapPoint([607.3839,
                                                202.6325,
                                                666.3579]),
                                            new MapPoint([266.1106,
                                                139.1150,
                                                854.1358,
                                                649.0412]),
                                            new MapPoint([861.0269,
                                                452.0569,
                                                710.7650,
                                                24.0741]),
                                            new MapPoint([997.0986,
                                                961.5948])])],
                                    new SpatialReference(4,
                                            "vel",
                                            "nulla",
                                            "vitae"),
                                    new Point(-120.5944,
                                            -7.2905,
                                            -91.0296,
                                            -54.3516,
                                            839.2525,
                                        new SpatialReference(8,
                                                "rerum",
                                                "iure",
                                                "voluptate"),
                                            true,
                                            true,
                                            123.1896),
                                        true,
                                        true,
                                        true),
                                new TextSymbol("in autem odio",
                                    new MapColor(251, 185, 154),
                                    new MapColor(72, 119, 122),
                                        new Dimension(327.7005),
                                    new MapFont(new Dimension(258.2874),
                                            "Garamond",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        197.2473,
                                    new MapColor(86, 119, 203),
                                    new MapColor(1, 91, 207),
                                        920.0003,
                                    HorizontalAlignment.Left,
                                        true,
                                        351.7827,
                                        new Dimension(542.6755),
                                        true),
                                new PopupTemplate("deserunt iure dolorem",
                                        "quae",
                                        ["exercitationem",
                                            "nulla",
                                            "omnis"],
                                    [new FieldInfo("id",
                                            "vel",
                                            "aut",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongMonthDayYear),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("name",
                                            "tempore",
                                            "corporis",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.DayShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                    [new TextPopupContent("dignissimos soluta reiciendis"),
                                    new AttachmentsPopupContent("adipisci expedita ut",
                                            "sunt error voluptate in quasi autem consequatur",
                                            AttachmentsPopupContentDisplayType.Preview)],
                                    [new ExpressionInfo("return Date();",
                                            "password",
                                            "praesentium fugiat et",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "group",
                                            "optio veniam nulla",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("consequatur nesciunt totam",
                                            "c901f607-a142-9fc8-f060-c5a8389350c0",
                                            () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "group",
                                            "repellat"),
                                    new ActionToggle("ad laboriosam saepe",
                                            "039cfe55-0b34-fe71-cd22-ca8d999e4a6b",
                                            () => { Console.WriteLine("vero"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "updatedAt",
                                            "sed")]),
                                    new AttributesDictionary(),
                                    true,
                                    "et",
                                    "aut",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "non",
                                        8)))"
                            Thumbnail="@(new Thumbnail("ut",
                                "similique",
                                200.3641,
                                122.2887))">
                        </FeatureTemplate>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(236, 99, 0),
                                    new MapColor(77, 106, 131)),
                                    404.6515,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(176.2980,
                                            955.3607)],
                                        "corporis",
                                        "quaerat",
                                        "voluptatibus"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(404.9434,
                                            230.7270),
                                    new AuthoringInfoField1ClassBreakInfos(825.4452,
                                            623.9730),
                                    new AuthoringInfoField1ClassBreakInfos(610.0868,
                                            523.5357)],
                                        "odit",
                                        "et",
                                        "cum"),
                                    ["commodi",
                                        "quam"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "natus",
                                    true,
                                LengthUnit.Meters,
                                    273.2052,
                                    34.3843,
                                    110.0526,
                                    312.2129))">
                        </SimpleRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Public)"
                            AccessInformation="@("est")"
                            ApiKey="@("vel")"
                            AvgRating="@(303.2664)"
                            Categories="@(["distinctio",
                                "placeat",
                                "aut",
                                "velit"])"
                            Created="@(new DateTime(2003, 5, 25, 18, 25, 47))"
                            Culture="@("sed")"
                            Description="@("hic accusantium ea praesentium delectus aut")"
                            Extent="@(new Extent(-114.0866,
                                    -40.5914,
                                    -68.3870,
                                    -28.5718,
                                    823.3378,
                                    318.0832,
                                    773.7172,
                                    585.5990,
                                new SpatialReference(1,
                                        "aspernatur",
                                        "dolore",
                                        "ex"),
                                    true,
                                    true))"
                            GroupCategories="@(["ipsam",
                                "commodi"])"
                            LicenseInfo="@("non")"
                            Modified="@(new DateTime(2023, 1, 19, 8, 9, 39))"
                            Name="@("createdAt")"
                            NumComments="@(522.0774)"
                            NumRatings="@(119.9972)"
                            NumViews="@(769.2601)"
                            Owner="@("Keaton Mann")"
                            OwnerFolder="@("Beau Smitham")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Immediate,
                                    ["deserunt",
                                        "praesentium",
                                        "omnis",
                                        "ipsa"],
                                    "est",
                                    "quibusdam",
                                    "cumque",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("expedita")"
                            Screenshots="@(["pariatur",
                                "autem",
                                "sint",
                                "velit"])"
                            Size="@(2)"
                            Snippet="@("maiores")"
                            Tags="@(["esse",
                                "enim",
                                "qui",
                                "doloribus"])"
                            Title="@("sunt aspernatur beatae")"
                            TypeKeywords="@(["odio",
                                "beatae"])"
                            Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("necessitatibus minima consectetur")"
                            StringContent="@("corrupti")"
                            OutFields="@(["qui",
                                "dolorem",
                                "harum",
                                "excepturi"])"
                            FieldInfos="@([new FieldInfo("createdAt",
                                    "nam",
                                    "ut",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Min)])"
                            Content="@([new FieldsPopupContent([new FieldInfo("token",
                                        "eos",
                                        "quo",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("title",
                                        "ipsam",
                                        "voluptatem",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "quo fuga explicabo dolorem et",
                                    "rerum eum nihil"),
                            new FieldsPopupContent([new FieldInfo("title",
                                        "aliquid",
                                        "voluptate",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                    "quisquam beatae velit consectetur dolorem tempore consequatur",
                                    "fuga qui dolores")])"
                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                    "password",
                                    "molestiae sint eveniet",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "status",
                                    "sed laboriosam voluptatem",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "token",
                                    "porro voluptas numquam",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("et sed qui",
                                    "https://picsum.photos/640/480/?image=713",
                                    "e150f794-c490-a3d0-7121-6c0220b06f03",
                                    () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "in"),
                            new ActionToggle("ut temporibus placeat",
                                    "59c15fd1-9fc9-2127-0c19-b609ebf01671",
                                    () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "comment",
                                    "quidem"),
                            new ActionToggle("voluptatem repellendus consequatur",
                                    "f7c83979-a220-6d58-98ad-3ec59fe009c3",
                                    () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "category",
                                    "quos"),
                            new ActionToggle("inventore sit asperiores",
                                    "d285a5a3-04ee-d415-8cc7-8269522f65e4",
                                    () => { Console.WriteLine("totam"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "status",
                                    "natus")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("dignissimos")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("fuga")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.CenterAlong)"
                            LabelExpression="@("aut")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(42142302.8513)"
                            MinScale="@(706.3878)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(819.8626))"
                            Symbol="@(new TextSymbol("consectetur consequatur est",
                                new MapColor(144, 69, 26),
                                new MapColor(190, 110, 186),
                                    new Dimension(86.1031),
                                new MapFont(new Dimension(714.0719),
                                        "Bookman",
                                    MapFontStyle.Oblique,
                                    FontWeight.Normal,
                                    TextDecoration.LineThrough),
                                    500.5897,
                                new MapColor(112, 26, 126),
                                new MapColor(136, 195, 180),
                                    813.6070,
                                HorizontalAlignment.Center,
                                    true,
                                    868.9375,
                                    new Dimension(966.7917),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Phone = '555-555-5555'")">
                        </Label>
                        <Field 
                            Name="@("avatar")"
                            Alias="@("perspiciatis")"
                            Description="@("rerum ex suscipit ut")"
                            Length="@(5)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "placeat" })"
                            ValueType="@(FieldValueType.LocationOrPlaceName)"
                            Domain="@(new RangeDomain("excepturi",
                                    "quam",
                                    "phone"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("ea",
                                29367406.5743),
                                new Effect("quae",
                                    24068572.4610)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(16.0990,
                                new Polygon([new MapPath([new MapPoint([73.7614,
                                            405.1127,
                                            324.6890]),
                                        new MapPoint([648.4975,
                                            242.0479,
                                            702.6750])]),
                                        new MapPath([new MapPoint([265.9943,
                                                395.1656]),
                                            new MapPoint([169.8616,
                                                113.0242,
                                                971.6978,
                                                931.0392]),
                                            new MapPoint([119.0650,
                                                820.9497,
                                                427.2762])]),
                                        new MapPath([new MapPoint([923.5602,
                                                19.4467,
                                                219.0906,
                                                866.5994]),
                                            new MapPoint([903.5375,
                                                791.0274,
                                                774.3097])])],
                                    new SpatialReference(5,
                                            "autem",
                                            "facilis",
                                            "velit"),
                                    new Point(79.3045,
                                            28.2288,
                                            -120.8405,
                                            -78.8019,
                                            632.6651,
                                        new SpatialReference(1,
                                                "sed",
                                                "reiciendis",
                                                "recusandae"),
                                            true,
                                            true,
                                            710.0299),
                                        true,
                                        true,
                                        true),
                                    [4,
                                        2,
                                        2,
                                        2],
                                SpatialRelationship.Touches,
                                new TimeExtent(new DateTime(2000, 10, 14, 22, 21, 51),
                                        new DateTime(2012, 8, 17, 0, 45, 32)),
                                    QueryUnits.Feet,
                                    "PostalCode = 'M5V 1J9'"))"
                            IncludedEffect="@([new Effect("sint",
                                25472949.2100),
                                new Effect("dolorem",
                                    43445595.9149),
                                new Effect("architecto",
                                    45141451.7508),
                                new Effect("dolor",
                                    39949142.0663)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "voluptas voluptas eum"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(932.3893)"
                            Unit="@(ElevationUnit.Meters)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Point(-38.6245,
                            13.1341,
                            114.9721,
                            -20.7174,
                            375.5124,
                        new SpatialReference(1,
                                "et",
                                "error",
                                "amet"),
                            true,
                            true,
                            844.9847),
                    new TextSymbol("et dicta quo",
                        new MapColor(233, 184, 86),
                        new MapColor(1, 4, 250),
                            new Dimension(34.9768),
                        new MapFont(new Dimension(756.4646),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            48.6972,
                        new MapColor(59, 152, 47),
                        new MapColor(202, 137, 51),
                            682.7836,
                        HorizontalAlignment.Center,
                            true,
                            90.2106,
                            new Dimension(474.9319),
                            true),
                    new PopupTemplate("rerum quidem voluptatem",
                            "deserunt",
                            ["et",
                                "quidem"],
                        [new FieldInfo("group",
                                "eius",
                                "eos",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("comment",
                                "deserunt",
                                "aliquam",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "veritatis",
                                    "sapiente qui velit")),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "labore",
                                    "nisi ut vel"))],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "group",
                                "optio ullam neque",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "nihil fugiat consectetur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("aut nam quia",
                                "https://picsum.photos/640/480/?image=680",
                                "57fde4a6-27c2-85d2-f7b2-e99d2176f693",
                                () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "ut"),
                        new ActionToggle("ex maxime dolores",
                                "49fddaec-1932-a891-364b-10423b0565f5",
                                () => { Console.WriteLine("quasi"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "earum"),
                        new ActionButton("quod dignissimos qui",
                                "https://picsum.photos/640/480/?image=816",
                                "1737ff2d-5e11-087c-e0c2-bafca0c2fbf5",
                                () => { Console.WriteLine("perspiciatis"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "illo")]),
                        new AttributesDictionary(),
                        true,
                        "nihil",
                        "minus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "voluptas",
                            9)),
                new Graphic(new Extent(-111.6874,
                            27.9116,
                            -12.8688,
                            56.1691,
                            807.5524,
                            727.2942,
                            276.4319,
                            288.1763,
                        new SpatialReference(1,
                                "ullam",
                                "et",
                                "qui"),
                            true,
                            true),
                    new TextSymbol("est maiores provident",
                        new MapColor(182, 53, 140),
                        new MapColor(84, 89, 252),
                            new Dimension(30.8939),
                        new MapFont(new Dimension(157.2650),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            738.6395,
                        new MapColor(136, 38, 230),
                        new MapColor(15, 211, 162),
                            728.3307,
                        HorizontalAlignment.Left,
                            true,
                            613.1006,
                            new Dimension(137.4777),
                            true),
                    new PopupTemplate("non architecto id",
                            "sed",
                            ["aut",
                                "et",
                                "aspernatur"],
                        [new FieldInfo("createdAt",
                                "deserunt",
                                "maxime",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("createdAt",
                                "dolorem",
                                "enim",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("createdAt",
                                "adipisci",
                                "officiis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new MediaPopupContent("ut numquam cumque",
                                "voluptatem dolorem nemo modi hic est",
                            [new LineChartMediaInfo("quis quasi odit",
                                    "a",
                                    "quaerat optio consequuntur",
                                new ChartMediaInfoValue(["commodi",
                                        "qui"],
                                        "non",
                                        "culpa",
                                    [new ChartMediaInfoValueSeries("email",
                                            "non",
                                            127.5239),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "ratione",
                                            15.9440)],
                                    [new MapColor(112, 164, 147)])),
                            new ImageMediaInfo("ducimus itaque non",
                                    "excepturi",
                                    "omnis voluptatem sit",
                                new ImageMediaInfoValue("https://filomena.org",
                                        "https://seamus.biz"),
                                    834.7890)],
                                4),
                        new FieldsPopupContent([new FieldInfo("id",
                                    "est",
                                    "vitae",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("group",
                                    "consequatur",
                                    "error",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("id",
                                    "eius",
                                    "rerum",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "aut ipsam sit aut",
                                "ut et voluptas"),
                        new MediaPopupContent("similique vitae debitis",
                                "quo velit voluptate non excepturi et consequatur",
                            [new LineChartMediaInfo("quae adipisci est",
                                    "pariatur",
                                    "eum sit qui",
                                new ChartMediaInfoValue(["quidem",
                                        "ut",
                                        "cupiditate"],
                                        "nulla",
                                        "et",
                                    [new ChartMediaInfoValueSeries("phone",
                                            "nesciunt",
                                            201.5425),
                                    new ChartMediaInfoValueSeries("category",
                                            "provident",
                                            58.2277),
                                    new ChartMediaInfoValueSeries("status",
                                            "qui",
                                            916.0226),
                                    new ChartMediaInfoValueSeries("name",
                                            "autem",
                                            331.2049)],
                                    [new MapColor(215, 171, 213),
                                    new MapColor(190, 136, 143),
                                    new MapColor(171, 105, 247)])),
                            new BarChartMediaInfo("eveniet laborum et",
                                    "quam",
                                    "illo voluptatem quam",
                                new ChartMediaInfoValue(["exercitationem",
                                        "assumenda"],
                                        "quisquam",
                                        "fugit",
                                    [new ChartMediaInfoValueSeries("password",
                                            "odio",
                                            98.3307)],
                                    [new MapColor(102, 147, 120)])),
                            new BarChartMediaInfo("ut commodi aut",
                                    "fugiat",
                                    "quo eos aut",
                                new ChartMediaInfoValue(["nemo",
                                        "qui"],
                                        "blanditiis",
                                        "ea",
                                    [new ChartMediaInfoValueSeries("email",
                                            "quis",
                                            136.4648),
                                    new ChartMediaInfoValueSeries("id",
                                            "ducimus",
                                            27.5632),
                                    new ChartMediaInfoValueSeries("group",
                                            "consequatur",
                                            840.5508)],
                                    [new MapColor(162, 51, 192),
                                    new MapColor(144, 61, 127),
                                    new MapColor(135, 33, 71)]))],
                                3)],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "createdAt",
                                "qui ducimus earum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "inventore molestias recusandae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "password",
                                "est ex rerum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("aut ut sit",
                                "de29740a-718d-c1a1-abc2-90a2afc04b9b",
                                () => { Console.WriteLine("commodi"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "vel")]),
                        new AttributesDictionary(),
                        true,
                        "repudiandae",
                        "autem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "non",
                            8))],
                [new Graphic(new Extent(34.3902,
                            49.4124,
                            21.9216,
                            -18.9959,
                            394.9063,
                            755.9811,
                            199.8074,
                            790.5957,
                        new SpatialReference(8,
                                "fuga",
                                "eius",
                                "reiciendis"),
                            true,
                            true),
                    new TextSymbol("autem aut qui",
                        new MapColor(82, 73, 149),
                        new MapColor(214, 102, 230),
                            new Dimension(666.9106),
                        new MapFont(new Dimension(314.5423),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            372.9030,
                        new MapColor(252, 164, 212),
                        new MapColor(68, 49, 126),
                            288.9254,
                        HorizontalAlignment.Right,
                            true,
                            67.8074,
                            new Dimension(255.3877),
                            true),
                    new PopupTemplate("enim est et",
                            "perspiciatis",
                            ["qui",
                                "alias",
                                "eum"],
                        [new FieldInfo("token",
                                "quidem",
                                "repellat",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Max)],
                        [new RelationshipPopupContent("maxime quia architecto",
                                "itaque ex voluptas repudiandae",
                                6,
                                "rerum",
                            [new RelatedRecordsInfoFieldOrder("recusandae",
                                OrderBy.Desc)],
                                5),
                        new FieldsPopupContent([new FieldInfo("title",
                                    "laborum",
                                    "sed",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("password",
                                    "odit",
                                    "atque",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("category",
                                    "ipsam",
                                    "velit",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "et occaecati consequuntur quibusdam voluptatem",
                                "necessitatibus quae facilis"),
                        new TextPopupContent("facilis ut nobis")],
                        [new ExpressionInfo("return Date();",
                                "status",
                                "et voluptatem quia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "cumque quibusdam officia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "name",
                                "ea omnis soluta",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("officiis nulla aut",
                                "ec912bea-f5d7-309a-8301-b34b5ce90bef",
                                () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "nihil"),
                        new ActionButton("rerum tenetur adipisci",
                                "https://picsum.photos/640/480/?image=865",
                                "0c9df78c-b4dc-6325-ec82-fddbf64b2f86",
                                () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "dicta"),
                        new ActionToggle("vero aliquid est",
                                "53f8980d-361a-b79e-ab27-9cd388ee6414",
                                () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "et"),
                        new ActionButton("modi exercitationem impedit",
                                "https://picsum.photos/640/480/?image=224",
                                "9081ab6e-59ff-cc0c-d128-3a1aacea4dc2",
                                () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "maiores")]),
                        new AttributesDictionary(),
                        true,
                        "sapiente",
                        "repellendus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "consequatur",
                            9)),
                new Graphic(new Point(-95.2522,
                            11.4253,
                            40.6586,
                            70.9540,
                            276.1121,
                        new SpatialReference(1,
                                "ex",
                                "quaerat",
                                "nihil"),
                            true,
                            true,
                            625.7685),
                    new TextSymbol("rerum provident optio",
                        new MapColor(77, 234, 211),
                        new MapColor(151, 31, 110),
                            new Dimension(187.1807),
                        new MapFont(new Dimension(592.0041),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            688.7403,
                        new MapColor(172, 61, 67),
                        new MapColor(68, 40, 103),
                            306.8834,
                        HorizontalAlignment.Center,
                            true,
                            478.9607,
                            new Dimension(416.4582),
                            true),
                    new PopupTemplate("et atque atque",
                            "sapiente",
                            ["ut",
                                "distinctio"],
                        [new FieldInfo("token",
                                "esse",
                                "tempora",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new FieldsPopupContent([new FieldInfo("password",
                                    "vel",
                                    "cupiditate",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "esse placeat sit est necessitatibus",
                                "quia nesciunt est")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "name",
                                "eligendi in laborum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("et est sunt",
                                "ec3c91c6-b6bf-3e13-4182-7dd4a9f15dd9",
                                () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "fugiat"),
                        new ActionToggle("ab odio facilis",
                                "7596d751-1b19-e952-47ae-567bfb330dc0",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "repellendus")]),
                        new AttributesDictionary(),
                        true,
                        "rerum",
                        "ab",
                        new GraphicOrigin(Guid.NewGuid(),
                            "dolores",
                            1))],
                    ["a",
                        "quia",
                        "aperiam"],
                [new Graphic(new Extent(-106.1830,
                            -116.6967,
                            44.9437,
                            48.4276,
                            709.2368,
                            161.0595,
                            839.7767,
                            536.0901,
                        new SpatialReference(5,
                                "tempora",
                                "vitae",
                                "perspiciatis"),
                            true,
                            true),
                    new TextSymbol("explicabo quibusdam eos",
                        new MapColor(238, 2, 67),
                        new MapColor(192, 119, 196),
                            new Dimension(812.8656),
                        new MapFont(new Dimension(858.3180),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            262.5412,
                        new MapColor(97, 141, 218),
                        new MapColor(208, 125, 38),
                            664.6941,
                        HorizontalAlignment.Right,
                            true,
                            544.8972,
                            new Dimension(70.6954),
                            true),
                    new PopupTemplate("et officia sed",
                            "odit",
                            ["aut",
                                "incidunt"],
                        [new FieldInfo("title",
                                "rerum",
                                "inventore",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("category",
                                "molestiae",
                                "saepe",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("aliquid voluptatem numquam",
                                "necessitatibus quam ut aspernatur incidunt voluptatem quis",
                                9,
                                "et",
                            [new RelatedRecordsInfoFieldOrder("veniam",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("quae",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("eaque",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("corrupti",
                                OrderBy.Desc)],
                                3),
                        new TextPopupContent("nulla distinctio quis")],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "necessitatibus molestias optio",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "avatar",
                                "dolorum ea ut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("possimus omnis id",
                                "f9b12170-cdc3-f53b-cfdc-64bb8b7f2dfa",
                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "necessitatibus"),
                        new ActionToggle("earum nisi ipsum",
                                "11e81530-bc41-b5e1-87fe-15ea5c1942f1",
                                () => { Console.WriteLine("illo"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "ipsam"),
                        new ActionButton("modi ullam voluptas",
                                "https://picsum.photos/640/480/?image=861",
                                "82f8d9b8-6e6b-8413-aaf8-4697f84b42f8",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "similique"),
                        new ActionButton("dicta quaerat et",
                                "https://picsum.photos/640/480/?image=753",
                                "bf6e808b-0217-adbe-30bd-a1abd4db771a",
                                () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "excepturi")]),
                        new AttributesDictionary(),
                        true,
                        "dicta",
                        "voluptatibus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sunt",
                            6)),
                new Graphic(new Polyline([new MapPath([new MapPoint([917.4338,
                                316.1642,
                                960.1481,
                                427.6472]),
                            new MapPoint([62.7906,
                                30.9405,
                                801.1166,
                                756.1054]),
                            new MapPoint([995.3344,
                                91.4969,
                                253.4172]),
                            new MapPoint([36.5518,
                                877.8739])]),
                            new MapPath([new MapPoint([721.8495,
                                    431.6859,
                                    320.4921]),
                                new MapPoint([292.8175,
                                    386.7286,
                                    642.0780,
                                    50.1738]),
                                new MapPoint([72.5175,
                                    15.5162,
                                    716.4171]),
                                new MapPoint([56.0767,
                                    598.2659])]),
                            new MapPath([new MapPoint([31.8918,
                                    281.2592]),
                                new MapPoint([22.8419,
                                    110.7469])]),
                            new MapPath([new MapPoint([414.3539,
                                    492.6566]),
                                new MapPoint([773.8847,
                                    558.1196,
                                    39.5333,
                                    510.3329])])],
                        new SpatialReference(9,
                                "laboriosam",
                                "sequi",
                                "delectus"),
                            true,
                            true),
                    new TextSymbol("qui laborum officiis",
                        new MapColor(159, 72, 96),
                        new MapColor(117, 173, 149),
                            new Dimension(822.1123),
                        new MapFont(new Dimension(363.4079),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            441.8036,
                        new MapColor(16, 81, 150),
                        new MapColor(108, 181, 238),
                            216.9688,
                        HorizontalAlignment.Left,
                            true,
                            890.0980,
                            new Dimension(949.4628),
                            true),
                    new PopupTemplate("veritatis suscipit quo",
                            "aut",
                            ["eius",
                                "in"],
                        [new FieldInfo("updatedAt",
                                "hic",
                                "quis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "et",
                                "placeat",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("email",
                                "esse",
                                "repudiandae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("group",
                                "exercitationem",
                                "maiores",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Max)],
                        [new RelationshipPopupContent("omnis at ipsum",
                                "incidunt et nesciunt autem",
                                6,
                                "quidem",
                            [new RelatedRecordsInfoFieldOrder("qui",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("soluta",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("et",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("quo",
                                OrderBy.Desc)],
                                3)],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "phone",
                                "iure est placeat",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "group",
                                "nemo et minus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "phone",
                                "qui rerum et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("sunt accusamus rerum",
                                "https://picsum.photos/640/480/?image=742",
                                "2c266778-2434-af85-2fcd-2faba15c8e02",
                                () => { Console.WriteLine("quidem"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "odio"),
                        new ActionButton("et nemo sit",
                                "https://picsum.photos/640/480/?image=491",
                                "a1f87d04-f6d8-9922-e4f4-f6980c0d1d53",
                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "delectus"),
                        new ActionToggle("quia dolorem qui",
                                "3769b44b-5f39-4934-0927-fb6eab3037c7",
                                () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "doloribus")]),
                        new AttributesDictionary(),
                        true,
                        "aut",
                        "officia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "voluptas",
                            4))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["voluptas",
                    "omnis"],
                    ["password",
                        "createdAt",
                        "comment",
                        "password"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("avatar");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("token",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polyline([new MapPath([new MapPoint([714.0755,
                                968.9020,
                                665.6750]),
                            new MapPoint([49.6690,
                                905.9974,
                                706.4052,
                                375.8410]),
                            new MapPoint([836.6840,
                                88.2470,
                                164.1357]),
                            new MapPoint([119.7081,
                                29.8259])])],
                        new SpatialReference(9,
                                "libero",
                                "illo",
                                "libero"),
                            true,
                            true),
                    new TextSymbol("consectetur facere et",
                        new MapColor(63, 73, 250),
                        new MapColor(16, 238, 67),
                            new Dimension(164.8395),
                        new MapFont(new Dimension(618.7757),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            236.1317,
                        new MapColor(49, 161, 185),
                        new MapColor(254, 182, 160),
                            155.5011,
                        HorizontalAlignment.Center,
                            true,
                            493.9544,
                            new Dimension(683.7108),
                            true),
                    new PopupTemplate("delectus nemo hic",
                            "voluptatibus",
                            ["id",
                                "sunt",
                                "molestiae",
                                "debitis"],
                        [new FieldInfo("createdAt",
                                "minus",
                                "qui",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new TextPopupContent("velit earum id"),
                        new AttachmentsPopupContent("saepe sit numquam",
                                "autem sed ipsa numquam quae vero cumque",
                                AttachmentsPopupContentDisplayType.Auto),
                        new AttachmentsPopupContent("et reprehenderit corrupti",
                                "ex perferendis doloremque labore dolor a",
                                AttachmentsPopupContentDisplayType.Auto),
                        new TextPopupContent("illum id voluptas")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "title",
                                "sit ducimus culpa",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "maiores eum nihil",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "phone",
                                "repudiandae voluptate ut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "id",
                                "animi ut aspernatur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("quibusdam voluptatibus doloribus",
                                "c104c1f0-5133-6977-f159-e6c99fb72979",
                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "et")]),
                        new AttributesDictionary(),
                        true,
                        "quia",
                        "aut",
                        new GraphicOrigin(Guid.NewGuid(),
                            "eos",
                            7))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([5,
                    1],
                    true,
                    104.1571,
                    618.3128,
                    "9.7.8.8",
                new Extent(39.9700,
                        -128.4188,
                        11.6669,
                        -49.1514,
                        665.9237,
                        568.9035,
                        643.7355,
                        303.7323,
                    new SpatialReference(3,
                            "atque",
                            "nam",
                            "fugit"),
                        true,
                        true),
                    3,
                    ["velit",
                        "ipsa",
                        "ea",
                        "officiis"],
                    "voluptatibus",
                    new DateTime(2023, 8, 5, 21, 51, 46),
                    854.2442,
                    5,
                    "omnis",
                    5),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([1,
                    3,
                    9,
                    2],
                    true,
                    133.8893,
                    68.3457,
                    "8.1.7.7",
                new Polygon([new MapPath([new MapPoint([941.6369,
                            995.2377,
                            823.5873]),
                        new MapPoint([765.8275,
                            445.7051,
                            394.1761,
                            224.2915]),
                        new MapPoint([584.1949,
                            253.6389,
                            556.0072,
                            404.1368])])],
                    new SpatialReference(8,
                            "quo",
                            "aut",
                            "magni"),
                    new Point(-152.5419,
                            37.8157,
                            -24.3522,
                            10.4059,
                            854.7495,
                        new SpatialReference(4,
                                "optio",
                                "est",
                                "modi"),
                            true,
                            true,
                            70.2492),
                        true,
                        true,
                        true),
                    1,
                    ["omnis",
                        "sunt",
                        "numquam",
                        "doloremque"],
                    "est",
                    new DateTime(2022, 5, 8, 0, 55, 13),
                    227.9323,
                    2,
                    "et",
                    6),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([6,
                    5],
                    true,
                    875.2836,
                    356.2140,
                    "7.6.3.6",
                new Polygon([new MapPath([new MapPoint([57.7285,
                            427.1516]),
                        new MapPoint([869.0326,
                            654.2726,
                            397.4270,
                            648.8513]),
                        new MapPoint([55.9911,
                            74.5735,
                            780.2888,
                            82.3188])])],
                    new SpatialReference(2,
                            "rem",
                            "odio",
                            "eum"),
                    new Point(80.5314,
                            0.9305,
                            81.6757,
                            76.5026,
                            637.2451,
                        new SpatialReference(7,
                                "ea",
                                "maxime",
                                "illum"),
                            true,
                            true,
                            185.5734),
                        true,
                        true,
                        true),
                    2,
                    ["illo",
                        "et",
                        "aperiam",
                        "est"],
                    "sunt",
                    new DateTime(2015, 8, 27, 1, 20, 30),
                    656.7687,
                    9,
                    "est",
                    5),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([4,
                    7,
                    2,
                    7],
                    true,
                    788.8150,
                    332.7569,
                    "0.6.4.6",
                new Polyline([new MapPath([new MapPoint([127.6094,
                            312.5295]),
                        new MapPoint([956.2011,
                            907.2526,
                            746.4639]),
                        new MapPoint([305.0795,
                            567.0581]),
                        new MapPoint([798.1168,
                            503.0111])]),
                        new MapPath([new MapPoint([211.0635,
                                247.5513]),
                            new MapPoint([606.6832,
                                3.5893]),
                            new MapPoint([287.5053,
                                114.8430]),
                            new MapPoint([910.8940,
                                392.9769])]),
                        new MapPath([new MapPoint([357.9681,
                                54.6102,
                                909.7548,
                                323.4582]),
                            new MapPoint([49.2396,
                                623.2451])]),
                        new MapPath([new MapPoint([327.5543,
                                284.4570]),
                            new MapPoint([724.1764,
                                485.3684,
                                312.9460])])],
                    new SpatialReference(6,
                            "dicta",
                            "quis",
                            "qui"),
                        true,
                        true),
                    4,
                    ["ut",
                        "voluptatem"],
                    "commodi",
                    new DateTime(2014, 6, 9, 21, 21, 13),
                    147.8107,
                    3,
                    "perferendis",
                    4),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Darken;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "corrupti in laudantium"),
                ElevationInfoMode.AbsoluteHeight,
                    470.2380,
                ElevationUnit.Millimeters);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("autem",
                    17408313.6216),
                    new Effect("sequi",
                        28109713.4716),
                    new Effect("culpa",
                        13157210.7361)],
                    true,
                new FeatureFilter(825.7200,
                    new Extent(74.8833,
                            -123.3031,
                            -50.5294,
                            -37.0834,
                            112.2476,
                            566.2178,
                            352.3190,
                            8.1025,
                        new SpatialReference(1,
                                "exercitationem",
                                "atque",
                                "dolor"),
                            true,
                            true),
                        [5,
                            2,
                            4,
                            2],
                    SpatialRelationship.Intersects,
                    new TimeExtent(new DateTime(2000, 3, 2, 4, 21, 5),
                            new DateTime(2004, 7, 24, 1, 26, 14)),
                        QueryUnits.NauticalMiles,
                        "City = 'Toronto'"),
                    [new Effect("ut",
                        45311128.0457),
                        new Effect("eius",
                            25234973.7920),
                        new Effect("fuga",
                            48542202.1524)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "token",
                    "laboriosam",
                    "hic beatae blanditiis enim",
                    7,
                    true,
                    true,
                    new { Value = "numquam" },
                FieldValueType.DateAndTime,
                new RangeDomain("non",
                        "iure",
                        "avatar")),
            new Field(default,
                    "category",
                    "eos",
                    "maiores optio rem commodi et animi",
                    4,
                    true,
                    true,
                    new { Value = "tempora" },
                FieldValueType.TypeOrCategory,
                new InheritedDomain("title"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(89.8645,
                    91.8532,
                    -84.2781,
                    64.1618,
                    436.8503,
                    92.3078,
                    113.9994,
                    600.6392,
                new SpatialReference(9,
                        "et",
                        "ratione",
                        "vitae"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polyline;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.BelowCenter,
                    "sit",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    13279806.6395,
                    831.8915,
                    true,
                    new Dimension(750.7532),
                new TextSymbol("quos non blanditiis",
                    new MapColor(130, 183, 59),
                    new MapColor(231, 104, 67),
                        new Dimension(497.5966),
                    new MapFont(new Dimension(743.9080),
                            "Courier New",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        494.9751,
                    new MapColor(165, 112, 133),
                    new MapColor(214, 89, 225),
                        935.0451,
                    HorizontalAlignment.Left,
                        true,
                        161.8833,
                        new Dimension(129.6737),
                        true),
                    true,
                    "Street = '123 Main St.'"),
            new Label(LabelPlacement.AboveRight,
                    "est",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Parallel,
                    46703095.7722,
                    47991.5149,
                    true,
                    new Dimension(786.5156),
                new TextSymbol("voluptatem animi eos",
                    new MapColor(8, 91, 61),
                    new MapColor(155, 236, 187),
                        new Dimension(842.6808),
                    new MapFont(new Dimension(402.4912),
                            "Garamond",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        757.5217,
                    new MapColor(233, 91, 223),
                    new MapColor(159, 37, 24),
                        944.1405,
                    HorizontalAlignment.Right,
                        true,
                        246.0422,
                        new Dimension(578.1121),
                        true),
                    true,
                    "City = 'Toronto'"),
            new Label(LabelPlacement.BelowStart,
                    "maiores",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    30812320.7710,
                    9887.0233,
                    true,
                    new Dimension(172.2182),
                new TextSymbol("amet in in",
                    new MapColor(246, 136, 170),
                    new MapColor(140, 12, 122),
                        new Dimension(155.4454),
                    new MapFont(new Dimension(548.6497),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        629.5063,
                    new MapColor(236, 31, 128),
                    new MapColor(50, 202, 173),
                        491.9140,
                    HorizontalAlignment.Right,
                        true,
                        2.2822,
                        new Dimension(328.5804),
                        true),
                    true,
                    "Country = 'Canada'")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("tenetur",
                SortOrder.Ascending,
                    "qui"),
            new OrderedLayerOrderBy("ut",
                SortOrder.Ascending,
                    "placeat")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("et sequi labore",
                    "rem",
                    ["officiis",
                        "ex"],
                [new FieldInfo("password",
                        "sit",
                        "dolorum",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.DayShortMonthYearLongTime),
                        true,
                        true,
                    StatisticType.Avg),
                new FieldInfo("category",
                        "ut",
                        "soluta",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.ShortDateShortTime24),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("token",
                        "tempore",
                        "et",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(5,
                            true,
                        DateFormat.Year),
                        true,
                        true,
                    StatisticType.Sum)],
                [new RelationshipPopupContent("voluptatum doloribus amet",
                        "voluptates praesentium sed odit ut cumque exercitationem",
                        7,
                        "est",
                    [new RelatedRecordsInfoFieldOrder("iusto",
                        OrderBy.Desc)],
                        1)],
                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "group",
                        "nobis quia laudantium",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "email",
                        "aspernatur esse ipsam",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("quibusdam quibusdam voluptatibus",
                        "b7ff928f-f0a9-c9a6-dcff-067531114a07",
                        () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "avatar",
                        "itaque"),
                new ActionToggle("sequi tempore aut",
                        "12f456ec-6f71-3cc2-4d87-12b060145d7b",
                        () => { Console.WriteLine("non"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "name",
                        "quas"),
                new ActionToggle("at delectus vero",
                        "a263bdf6-49cb-63f3-cac7-de7664898ca6",
                        () => { Console.WriteLine("cupiditate"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "category",
                        "voluptates"),
                new ActionToggle("quis laboriosam sint",
                        "02f00d69-c9ed-f9f7-a0b5-ecc24d6e7280",
                        () => { Console.WriteLine("eaque"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "status",
                        "sequi")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "porro",
                    "est",
                    287.8969,
                    ["maxime",
                        "dolores",
                        "optio",
                        "enim"],
                    new DateTime(2005, 1, 18, 7, 14, 55),
                    "provident",
                    "iste nihil sit nesciunt et ullam blanditiis",
                new Extent(-66.3060,
                        -84.0101,
                        -58.4050,
                        -34.5248,
                        163.9104,
                        436.5393,
                        574.1985,
                        963.0143,
                    new SpatialReference(5,
                            "eaque",
                            "molestias",
                            "dolor"),
                        true,
                        true),
                    ["nisi",
                        "culpa",
                        "modi",
                        "provident"],
                    "amet",
                    new DateTime(2001, 8, 9, 17, 27, 1),
                    "token",
                    559.7419);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("nisi labore dolores",
                    new MapColor(199, 215, 131),
                    new MapColor(211, 219, 200),
                        new Dimension(52.1351),
                    new MapFont(new Dimension(996.6068),
                            "Helvetica",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        77.5904,
                    new MapColor(43, 222, 61),
                    new MapColor(117, 114, 227),
                        15.0096,
                    HorizontalAlignment.Center,
                        true,
                        109.3667,
                        new Dimension(908.6167),
                        true),
                    "pariatur",
                [new ColorVariable("quasi",
                        "ut",
                    [new ColorStop(618.4810,
                        new MapColor(139, 113, 175),
                            "quia")],
                    new VisualVariableLegendOptions(true,
                            "reprehenderit ut sit"),
                        "minus",
                        "amet tempora amet"),
                new OpacityVariable("maiores",
                        "suscipit",
                    [new OpacityStop(618.2420,
                            0.7128,
                            "alias")],
                    new VisualVariableLegendOptions(true,
                            "labore exercitationem culpa"),
                        "ut",
                        "atque aliquam accusantium")],
                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                    new AlgorithmicColorRamp(Algorithm.Hsv,
                        new MapColor(28, 194, 183),
                        new MapColor(251, 154, 8)),
                        756.3475,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(734.8300,
                                269.8486),
                        new AuthoringInfoField1ClassBreakInfos(830.5157,
                                769.7277)],
                            "delectus",
                            "eos",
                            "accusamus"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(151.1925,
                                77.6841)],
                            "quia",
                            "quia",
                            "odio"),
                        ["et",
                            "ea"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "eveniet",
                        true,
                    LengthUnit.Miles,
                        157.3556,
                        627.8178,
                        719.8719,
                        701.6532));
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(6,
                    "hic",
                    "officia",
                    "qui");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("expedita molestias nostrum laborum ipsam",
                DrawingTool.Arrow,
                    "id",
                new Graphic(new Polyline([new MapPath([new MapPoint([327.4757,
                                803.9474,
                                577.4292]),
                            new MapPoint([530.4254,
                                367.2607,
                                552.7756])])],
                        new SpatialReference(7,
                                "repellat",
                                "quis",
                                "voluptas"),
                            true,
                            true),
                    new TextSymbol("adipisci rerum nihil",
                        new MapColor(188, 87, 81),
                        new MapColor(84, 198, 186),
                            new Dimension(338.4308),
                        new MapFont(new Dimension(322.0516),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            177.2150,
                        new MapColor(161, 25, 43),
                        new MapColor(74, 1, 24),
                            312.4290,
                        HorizontalAlignment.Right,
                            true,
                            844.3092,
                            new Dimension(854.7933),
                            true),
                    new PopupTemplate("sapiente ut porro",
                            "nobis",
                            ["veniam",
                                "sed",
                                "quia",
                                "dolores"],
                        [new FieldInfo("id",
                                "unde",
                                "non",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("password",
                                "omnis",
                                "illum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("id",
                                "aut",
                                "aut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new MediaPopupContent("impedit delectus sapiente",
                                "dolorem omnis assumenda et ut qui",
                            [new ImageMediaInfo("sint sed et",
                                    "dolorem",
                                    "expedita repellat sunt",
                                new ImageMediaInfoValue("http://logan.info",
                                        "http://eda.net"),
                                    644.6947),
                            new ColumnChartMediaInfo("eos minima accusantium",
                                    "voluptas",
                                    "aut aut veritatis",
                                new ChartMediaInfoValue(["repellat",
                                        "cumque"],
                                        "in",
                                        "quia",
                                    [new ChartMediaInfoValueSeries("category",
                                            "aut",
                                            141.5693),
                                    new ChartMediaInfoValueSeries("updatedAt",
                                            "veniam",
                                            675.0069),
                                    new ChartMediaInfoValueSeries("password",
                                            "saepe",
                                            705.0088),
                                    new ChartMediaInfoValueSeries("status",
                                            "labore",
                                            126.7931)],
                                    [new MapColor(18, 202, 165)])),
                            new ColumnChartMediaInfo("doloremque beatae velit",
                                    "ut",
                                    "a possimus praesentium",
                                new ChartMediaInfoValue(["corporis",
                                        "et",
                                        "et"],
                                        "exercitationem",
                                        "ea",
                                    [new ChartMediaInfoValueSeries("status",
                                            "perspiciatis",
                                            279.8758),
                                    new ChartMediaInfoValueSeries("id",
                                            "ratione",
                                            531.7384),
                                    new ChartMediaInfoValueSeries("comment",
                                            "ut",
                                            737.9952),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "incidunt",
                                            79.9817)],
                                    [new MapColor(228, 95, 130)])),
                            new BarChartMediaInfo("cum sapiente accusamus",
                                    "inventore",
                                    "facere dolor et",
                                new ChartMediaInfoValue(["eius",
                                        "est",
                                        "laudantium"],
                                        "commodi",
                                        "eligendi",
                                    [new ChartMediaInfoValueSeries("name",
                                            "sit",
                                            40.8712),
                                    new ChartMediaInfoValueSeries("phone",
                                            "amet",
                                            848.2414),
                                    new ChartMediaInfoValueSeries("name",
                                            "architecto",
                                            268.9594),
                                    new ChartMediaInfoValueSeries("status",
                                            "voluptatem",
                                            375.7432)],
                                    [new MapColor(201, 59, 164),
                                    new MapColor(129, 113, 152),
                                    new MapColor(20, 89, 135)]))],
                                9),
                        new FieldsPopupContent([new FieldInfo("updatedAt",
                                    "ut",
                                    "facilis",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("updatedAt",
                                    "id",
                                    "adipisci",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "est dolorum qui veritatis assumenda voluptas",
                                "consequatur provident nulla")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "avatar",
                                "et quis minima",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "name",
                                "nesciunt id facere",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "phone",
                                "quae nobis omnis",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "id",
                                "libero officia laudantium",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("et sapiente et",
                                "https://picsum.photos/640/480/?image=959",
                                "1dc0833e-80de-7f0d-9dea-d3415efc9571",
                                () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "perspiciatis"),
                        new ActionToggle("ex blanditiis ea",
                                "760b2236-0804-0ad5-1132-bc80946128e1",
                                () => { Console.WriteLine("nostrum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "dolorem"),
                        new ActionToggle("in voluptatem enim",
                                "851e859e-c8db-5989-adf2-d69648bcbb99",
                                () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "iusto"),
                        new ActionButton("harum adipisci consequatur",
                                "https://picsum.photos/640/480/?image=837",
                                "71965037-4ce1-0ebd-2717-b7ccd1e3175d",
                                () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "voluptatem")]),
                        new AttributesDictionary(),
                        true,
                        "sed",
                        "praesentium",
                        new GraphicOrigin(Guid.NewGuid(),
                            "minima",
                            4)),
                    new Thumbnail("veritatis",
                        "occaecati",
                        83.4988,
                        270.4468)),
            new FeatureTemplate("temporibus veniam impedit sed a vero",
                DrawingTool.Circle,
                    "email",
                new Graphic(new Point(43.7907,
                            37.3449,
                            -21.6062,
                            62.2945,
                            920.3101,
                        new SpatialReference(9,
                                "est",
                                "voluptas",
                                "rerum"),
                            true,
                            true,
                            837.6788),
                    new TextSymbol("autem ab voluptas",
                        new MapColor(166, 74, 128),
                        new MapColor(148, 200, 242),
                            new Dimension(702.9991),
                        new MapFont(new Dimension(832.3130),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            236.5364,
                        new MapColor(135, 200, 17),
                        new MapColor(100, 30, 80),
                            253.0232,
                        HorizontalAlignment.Center,
                            true,
                            684.3610,
                            new Dimension(225.8797),
                            true),
                    new PopupTemplate("voluptatum ut fuga",
                            "asperiores",
                            ["molestiae",
                                "quaerat",
                                "ut",
                                "exercitationem"],
                        [new FieldInfo("updatedAt",
                                "quis",
                                "cupiditate",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("token",
                                "commodi",
                                "molestiae",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("name",
                                "inventore",
                                "minima",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("token",
                                "necessitatibus",
                                "molestiae",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new FieldsPopupContent([new FieldInfo("phone",
                                    "amet",
                                    "error",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("phone",
                                    "quod",
                                    "nisi",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("avatar",
                                    "vero",
                                    "fuga",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "perspiciatis aliquid ut quo earum dolorem et",
                                "at suscipit dolor"),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                    "omnis",
                                    "laborum labore unde"))],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "updatedAt",
                                "inventore qui ut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("est fuga sed",
                                "https://picsum.photos/640/480/?image=806",
                                "0cfd1b9b-6d3d-2721-c163-39f5b468abe0",
                                () => { Console.WriteLine("aliquid"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "et"),
                        new ActionToggle("debitis eveniet expedita",
                                "e31dba60-505b-2f74-c362-fe8db818def4",
                                () => { Console.WriteLine("recusandae"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "quos"),
                        new ActionToggle("voluptas numquam molestiae",
                                "01b5dd9b-974f-239c-d531-5e3c173f3e6c",
                                () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "et"),
                        new ActionToggle("distinctio nihil asperiores",
                                "38eb4f97-103e-f3eb-0d0b-dcc5007bf865",
                                () => { Console.WriteLine("excepturi"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "non")]),
                        new AttributesDictionary(),
                        true,
                        "deserunt",
                        "libero",
                        new GraphicOrigin(Guid.NewGuid(),
                            "qui",
                            1)),
                    new Thumbnail("maiores",
                        "sequi",
                        265.3992,
                        193.2637)),
            new FeatureTemplate("eaque rem et ut deserunt",
                DrawingTool.Point,
                    "status",
                new Graphic(new Polyline([new MapPath([new MapPoint([757.9020,
                                935.7616]),
                            new MapPoint([503.6618,
                                569.7973,
                                10.0907,
                                22.5786])]),
                            new MapPath([new MapPoint([164.5671,
                                    873.6654,
                                    752.3637]),
                                new MapPoint([87.6096,
                                    479.8576,
                                    479.5121,
                                    513.7365])]),
                            new MapPath([new MapPoint([613.4365,
                                    725.9138,
                                    725.3518]),
                                new MapPoint([328.8911,
                                    107.9969,
                                    217.9771])])],
                        new SpatialReference(9,
                                "earum",
                                "pariatur",
                                "possimus"),
                            true,
                            true),
                    new TextSymbol("praesentium consequuntur aut",
                        new MapColor(138, 45, 55),
                        new MapColor(254, 110, 192),
                            new Dimension(793.5303),
                        new MapFont(new Dimension(816.4307),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            982.7924,
                        new MapColor(27, 186, 74),
                        new MapColor(47, 108, 38),
                            578.3010,
                        HorizontalAlignment.Center,
                            true,
                            45.0028,
                            new Dimension(550.3211),
                            true),
                    new PopupTemplate("similique quis inventore",
                            "fuga",
                            ["quae",
                                "commodi",
                                "veritatis",
                                "deleniti"],
                        [new FieldInfo("title",
                                "et",
                                "perferendis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("status",
                                "error",
                                "labore",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("category",
                                "quisquam",
                                "quia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("title",
                                "similique",
                                "eum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "quia",
                                    "et ullam dolorem")),
                        new FieldsPopupContent([new FieldInfo("phone",
                                    "blanditiis",
                                    "odit",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("group",
                                    "dicta",
                                    "sed",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "a quae possimus voluptate quia",
                                "voluptatum distinctio neque")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "avatar",
                                "facere necessitatibus labore",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "group",
                                "quasi eum in",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "group",
                                "earum veniam doloribus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "avatar",
                                "et mollitia at",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("qui dolorem dolores",
                                "00fbb1f9-4510-2947-5444-28f4e54897d8",
                                () => { Console.WriteLine("dignissimos"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "fugit"),
                        new ActionToggle("iste ut voluptas",
                                "55001406-8826-8e8d-d2e0-45fed9bec9b6",
                                () => { Console.WriteLine("saepe"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "minima")]),
                        new AttributesDictionary(),
                        true,
                        "aut",
                        "sunt",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ut",
                            1)),
                    new Thumbnail("aut",
                        "aut",
                        38.8731,
                        272.3641)),
            new FeatureTemplate("et aut voluptatum ab ipsa",
                DrawingTool.UpArrow,
                    "status",
                new Graphic(new Polygon([new MapPath([new MapPoint([11.9395,
                                425.6129,
                                863.0601]),
                            new MapPoint([794.7636,
                                516.0474,
                                594.8337,
                                244.5951]),
                            new MapPoint([349.6041,
                                451.4213,
                                883.0958,
                                748.8015]),
                            new MapPoint([157.7209,
                                480.8148,
                                597.6256])]),
                            new MapPath([new MapPoint([485.6541,
                                    924.0309,
                                    200.1668]),
                                new MapPoint([145.1428,
                                    383.7913]),
                                new MapPoint([450.4751,
                                    239.2461])])],
                        new SpatialReference(7,
                                "nisi",
                                "debitis",
                                "impedit"),
                        new Point(79.8190,
                                -23.3928,
                                52.8950,
                                10.1786,
                                310.9919,
                            new SpatialReference(6,
                                    "molestiae",
                                    "ut",
                                    "sequi"),
                                true,
                                true,
                                60.5074),
                            true,
                            true,
                            true),
                    new TextSymbol("omnis rerum itaque",
                        new MapColor(32, 103, 5),
                        new MapColor(153, 201, 32),
                            new Dimension(243.8810),
                        new MapFont(new Dimension(113.5251),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            750.3768,
                        new MapColor(73, 244, 137),
                        new MapColor(41, 43, 206),
                            426.9450,
                        HorizontalAlignment.Right,
                            true,
                            77.6789,
                            new Dimension(141.2826),
                            true),
                    new PopupTemplate("nemo eaque ad",
                            "et",
                            ["quos",
                                "assumenda",
                                "mollitia",
                                "ut"],
                        [new FieldInfo("status",
                                "sit",
                                "soluta",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("password",
                                "et",
                                "consequuntur",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "nihil",
                                    "sed eum ut"))],
                        [new ExpressionInfo("return $feature.Name;",
                                "comment",
                                "beatae consequatur eos",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("impedit eum voluptatem",
                                "13f84ad3-d686-291a-32aa-9c26f7d525a1",
                                () => { Console.WriteLine("fugiat"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "sit"),
                        new ActionButton("necessitatibus sit ad",
                                "https://picsum.photos/640/480/?image=335",
                                "3c9171f8-2339-28cb-96df-4ce32ce42033",
                                () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "quia"),
                        new ActionButton("dolorem et nihil",
                                "https://picsum.photos/640/480/?image=440",
                                "d5c9db5a-0f34-938d-b8b0-70cde85eb3bf",
                                () => { Console.WriteLine("minus"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "consequatur"),
                        new ActionButton("soluta esse alias",
                                "https://picsum.photos/640/480/?image=227",
                                "cd10b470-085c-4ff8-df70-d9b0eb835e75",
                                () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "sint")]),
                        new AttributesDictionary(),
                        true,
                        "iusto",
                        "perspiciatis",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nesciunt",
                            6)),
                    new Thumbnail("consequatur",
                        "recusandae",
                        266.4564,
                        299.1201))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2021, 7, 1, 10, 21, 46),
                    new DateTime(2021, 10, 15, 3, 49, 48));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("dignissimos",
                    "ut",
                new TimeExtent(new DateTime(2001, 8, 27, 7, 45, 2),
                        new DateTime(2012, 10, 22, 2, 0, 46)),
                new TimeInterval(TemporalTime.Days,
                        111.3522),
                    [new DateTime(2015, 1, 25, 0, 28, 0),
                        new DateTime(2015, 10, 2, 5, 2, 8),
                        new DateTime(2004, 3, 4, 16, 34, 55),
                        new DateTime(2006, 7, 23, 4, 15, 51)],
                    "Pacific/Auckland",
                    "illum");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Months,
                    524.1196);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2018, 9, 9, 12, 17, 44),
                    new DateTime(2012, 9, 11, 19, 50, 49));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
