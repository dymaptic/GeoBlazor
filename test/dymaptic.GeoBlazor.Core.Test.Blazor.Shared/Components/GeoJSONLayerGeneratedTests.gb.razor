@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("et")"
                        Title="@("esse tempore molestiae")"
                        Opacity="@(0.1053)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        BlendMode="@(BlendMode.Multiply)"
                        DefinitionExpression="@("eaque")"
                        DisplayField="@("autem")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("vel",
                            46739276.3882))"
                        FullExtent="@(new Extent(-141.8294,
                                92.9204,
                                88.2967,
                                75.3931,
                                855.7296,
                                427.4945,
                                756.3171,
                                839.7556,
                            new SpatialReference(6,
                                    "mollitia",
                                    "voluptas",
                                    "aut"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Multipoint)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(5859734.0386)"
                        MinScale="@(482.6856)"
                        ObjectIdField="@("vel")"
                        OutFields="@(["non",
                            "veritatis"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(98.1808)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(1,
                                "perferendis",
                                "suscipit",
                                "quidem"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Centuries)"
                            Value="@(232.4077)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("enim")"
                            EndField="@("molestiae")"
                            Stops="@([new DateTime(2003, 8, 15, 14, 0, 36),
                                new DateTime(2018, 8, 3, 16, 12, 57),
                                new DateTime(2015, 4, 14, 14, 50, 33)])"
                            TimeZone="@("America/Indiana/Indianapolis")"
                            TrackIdField="@("velit")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Months)"
                                Value="@(365.0669)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2004, 10, 11, 22, 35, 1))"
                                End="@(new DateTime(2017, 10, 25, 19, 35, 35))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2014, 10, 4, 5, 11, 55))"
                            End="@(new DateTime(2021, 2, 16, 2, 43, 9))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("qui labore et ipsam similique")"
                            DrawingTool="@(DrawingTool.DownArrow)"
                            Name="@("id")"
                            Prototype="@(new Graphic(new Polyline([new MapPath([new MapPoint([635.2340,
                                            559.6168]),
                                        new MapPoint([31.2574,
                                            730.8662,
                                            110.2918]),
                                        new MapPoint([811.1815,
                                            650.1686,
                                            641.3411])]),
                                        new MapPath([new MapPoint([273.7145,
                                                336.9308,
                                                101.0303]),
                                            new MapPoint([432.0512,
                                                779.2625,
                                                361.7106,
                                                798.5005])])],
                                    new SpatialReference(3,
                                            "voluptatem",
                                            "sequi",
                                            "mollitia"),
                                        true,
                                        true),
                                new TextSymbol("placeat error sunt",
                                    new MapColor(5, 202, 183),
                                    new MapColor(190, 194, 172),
                                        new Dimension(97.8368),
                                    new MapFont(new Dimension(421.3655),
                                            "Georgia",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        287.5640,
                                    new MapColor(254, 175, 205),
                                    new MapColor(182, 251, 50),
                                        996.3249,
                                    HorizontalAlignment.Left,
                                        true,
                                        199.6651,
                                        new Dimension(508.3561),
                                        true),
                                new PopupTemplate("maiores voluptatem nihil",
                                        "officia",
                                        ["et",
                                            "animi",
                                            "eos",
                                            "sit"],
                                    [new FieldInfo("id",
                                            "natus",
                                            "odit",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("id",
                                            "molestiae",
                                            "optio",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                    [new MediaPopupContent("nesciunt voluptas at",
                                            "natus aliquam unde nemo",
                                        [new ImageMediaInfo("molestiae qui aliquam",
                                                "qui",
                                                "eum aperiam quo",
                                            new ImageMediaInfoValue("http://cheyenne.name",
                                                    "https://fatima.biz"),
                                                596.2750),
                                        new ImageMediaInfo("ut nisi sit",
                                                "incidunt",
                                                "ducimus delectus ut",
                                            new ImageMediaInfoValue("http://logan.org",
                                                    "https://pink.biz"),
                                                0.6496)],
                                            3)],
                                    [new ExpressionInfo("return $feature['FieldName'];",
                                            "name",
                                            "quis minus corporis",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "token",
                                            "provident enim eligendi",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("ea error voluptatem",
                                            "https://picsum.photos/640/480/?image=620",
                                            "fe8ab48d-95af-41dd-04ab-0184334349aa",
                                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                            "token",
                                            true,
                                            true,
                                            true,
                                            "consequatur"),
                                    new ActionButton("excepturi ipsum quibusdam",
                                            "https://picsum.photos/640/480/?image=903",
                                            "4cca21d5-5ff3-37e6-d7a1-8e0e0ec40d50",
                                            () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "culpa")]),
                                    new AttributesDictionary(),
                                    true,
                                    "doloremque",
                                    "tempora",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "ipsa",
                                        2)))"
                            Thumbnail="@(new Thumbnail("aut",
                                "officiis",
                                157.4702,
                                218.1965))">
                        </FeatureTemplate>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(167, 212, 159),
                                        new MapColor(191, 70, 248)),
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(155, 148, 246),
                                        new MapColor(50, 176, 194))]),
                                    9.9163,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(583.8781,
                                            699.4228)],
                                        "cum",
                                        "et",
                                        "omnis"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(784.3906,
                                            408.6627)],
                                        "voluptatem",
                                        "harum",
                                        "facilis"),
                                    ["enim",
                                        "totam",
                                        "repellat",
                                        "mollitia"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "ipsa",
                                    true,
                                LengthUnit.NauticalMiles,
                                    886.4841,
                                    865.4642,
                                    52.7241,
                                    556.9559))">
                        </SimpleRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("soluta veritatis asperiores")"
                            StringContent="@("quos")"
                            OutFields="@(["fuga",
                                "sed"])"
                            FieldInfos="@([new FieldInfo("id",
                                    "mollitia",
                                    "aut",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("status",
                                    "modi",
                                    "recusandae",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("category",
                                    "consequuntur",
                                    "dolorem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("password",
                                    "nulla",
                                    "perspiciatis",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Var)])"
                            Content="@([new FieldsPopupContent([new FieldInfo("phone",
                                        "et",
                                        "porro",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                    "et commodi qui voluptate corrupti dolores laudantium",
                                    "dolorum est sapiente"),
                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "accusamus",
                                        "dolorem quos sit")),
                            new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "ipsa",
                                        "quaerat ducimus expedita"))])"
                            ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "avatar",
                                    "quia qui et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "phone",
                                    "illo est voluptates",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "name",
                                    "perferendis minima nemo",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "avatar",
                                    "consectetur et accusamus",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("aut voluptas laborum",
                                    "https://picsum.photos/640/480/?image=85",
                                    "8a1abac3-ae2e-ad86-8583-a83c71038549",
                                    () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                                    "comment",
                                    true,
                                    true,
                                    true,
                                    "deserunt")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("explicabo")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("vel")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowRight)"
                            LabelExpression="@("in")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(30080065.2646)"
                            MinScale="@(38397.8573)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(627.4479))"
                            Symbol="@(new TextSymbol("cum sed nihil",
                                new MapColor(211, 246, 122),
                                new MapColor(45, 208, 217),
                                    new Dimension(249.2617),
                                new MapFont(new Dimension(889.6216),
                                        "Arial",
                                    MapFontStyle.Italic,
                                    FontWeight.Bold,
                                    TextDecoration.Underline),
                                    111.0122,
                                new MapColor(148, 219, 52),
                                new MapColor(165, 242, 202),
                                    126.0359,
                                HorizontalAlignment.Right,
                                    true,
                                    363.0622,
                                    new Dimension(463.6747),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Province = 'Ontario'")">
                        </Label>
                        <Field 
                            Name="@("title")"
                            Alias="@("nam")"
                            Description="@("et ut et laborum")"
                            Length="@(8)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "ipsum" })"
                            ValueType="@(FieldValueType.TypeOrCategory)"
                            Domain="@(new CodedValueDomain<string>())">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("numquam",
                                48173727.8282),
                                new Effect("repudiandae",
                                    33513122.8065),
                                new Effect("delectus",
                                    26612190.0326)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(732.7486,
                                new Extent(61.8045,
                                        81.1448,
                                        86.0894,
                                        5.6861,
                                        506.9436,
                                        997.2229,
                                        42.3585,
                                        918.7473,
                                    new SpatialReference(1,
                                            "voluptate",
                                            "voluptatum",
                                            "porro"),
                                        true,
                                        true),
                                    [2,
                                        9],
                                SpatialRelationship.EnvelopeIntersects,
                                new TimeExtent(new DateTime(2009, 6, 15, 12, 24, 22),
                                        new DateTime(2003, 6, 8, 2, 15, 23)),
                                    QueryUnits.Meters,
                                    "Name = 'John Doe'"))"
                            IncludedEffect="@([new Effect("quos",
                                8564217.0854),
                                new Effect("qui",
                                    5727034.4265)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Name;",
                                    "delectus ut dolorem"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(52.3097)"
                            Unit="@(ElevationUnit.Yards)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polygon([new MapPath([new MapPoint([495.3486,
                                622.9594,
                                827.2951,
                                957.3515]),
                            new MapPoint([950.3342,
                                229.6100,
                                542.8397,
                                306.2926])])],
                        new SpatialReference(9,
                                "molestiae",
                                "veniam",
                                "molestiae"),
                        new Point(-164.8558,
                                -64.1921,
                                138.9824,
                                -18.1164,
                                599.7254,
                            new SpatialReference(6,
                                    "deserunt",
                                    "odit",
                                    "voluptas"),
                                true,
                                true,
                                93.3480),
                            true,
                            true,
                            true),
                    new TextSymbol("optio sed sint",
                        new MapColor(246, 73, 190),
                        new MapColor(122, 89, 29),
                            new Dimension(930.0285),
                        new MapFont(new Dimension(954.2274),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            494.3844,
                        new MapColor(193, 30, 96),
                        new MapColor(82, 226, 120),
                            476.5409,
                        HorizontalAlignment.Right,
                            true,
                            408.6939,
                            new Dimension(619.2541),
                            true),
                    new PopupTemplate("voluptatem dignissimos tempore",
                            "eaque",
                            ["ut",
                                "voluptatem"],
                        [new FieldInfo("comment",
                                "numquam",
                                "illum",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("status",
                                "autem",
                                "blanditiis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("title",
                                "sit",
                                "sit",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Max)],
                        [new AttachmentsPopupContent("et quaerat tempore",
                                "expedita adipisci est ut",
                                AttachmentsPopupContentDisplayType.Auto),
                        new AttachmentsPopupContent("rerum in accusamus",
                                "aut exercitationem ut architecto expedita hic id",
                                AttachmentsPopupContentDisplayType.Auto),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "nemo",
                                    "eligendi quia consectetur"))],
                        [new ExpressionInfo("return $feature.Name;",
                                "updatedAt",
                                "corporis sed quaerat",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "name",
                                "et provident fugiat",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "email",
                                "ut dolores est",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("accusamus nisi voluptatum",
                                "2523482d-4676-7eda-43a4-2180c7528f29",
                                () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "quod"),
                        new ActionButton("ab autem velit",
                                "https://picsum.photos/640/480/?image=114",
                                "f71914b1-ac11-c071-a94e-fa70d04edadf",
                                () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "quis"),
                        new ActionButton("maxime assumenda nam",
                                "https://picsum.photos/640/480/?image=1027",
                                "34879bf4-e1c4-7b90-c90d-7deb542eff7d",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "et")]),
                        new AttributesDictionary(),
                        true,
                        "qui",
                        "vero",
                        new GraphicOrigin(Guid.NewGuid(),
                            "facere",
                            1)),
                new Graphic(new Polygon([new MapPath([new MapPoint([327.6770,
                                932.0405,
                                198.8037,
                                286.8345]),
                            new MapPoint([204.4266,
                                970.5362,
                                443.2210])]),
                            new MapPath([new MapPoint([46.9241,
                                    735.1987,
                                    996.2640]),
                                new MapPoint([208.4365,
                                    288.5887,
                                    833.2800,
                                    63.4601]),
                                new MapPoint([703.7953,
                                    803.0200]),
                                new MapPoint([318.8944,
                                    636.3914,
                                    317.2172,
                                    492.0723])]),
                            new MapPath([new MapPoint([748.0737,
                                    200.5487]),
                                new MapPoint([929.0483,
                                    109.9846,
                                    248.7613,
                                    431.4352])]),
                            new MapPath([new MapPoint([889.3574,
                                    610.5502]),
                                new MapPoint([948.1513,
                                    358.1909]),
                                new MapPoint([310.9975,
                                    285.2822,
                                    641.0621])])],
                        new SpatialReference(3,
                                "sit",
                                "autem",
                                "cupiditate"),
                        new Point(50.0495,
                                -75.2661,
                                30.2762,
                                -23.4667,
                                727.7123,
                            new SpatialReference(6,
                                    "esse",
                                    "quisquam",
                                    "non"),
                                true,
                                true,
                                690.0303),
                            true,
                            true,
                            true),
                    new TextSymbol("suscipit officia sunt",
                        new MapColor(213, 97, 222),
                        new MapColor(190, 147, 98),
                            new Dimension(575.2478),
                        new MapFont(new Dimension(790.7800),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            359.6205,
                        new MapColor(108, 188, 8),
                        new MapColor(41, 154, 209),
                            695.8255,
                        HorizontalAlignment.Center,
                            true,
                            340.8283,
                            new Dimension(78.9359),
                            true),
                    new PopupTemplate("vitae eum doloremque",
                            "ipsa",
                            ["qui",
                                "magni",
                                "sit"],
                        [new FieldInfo("avatar",
                                "velit",
                                "doloremque",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new TextPopupContent("neque maxime inventore"),
                        new AttachmentsPopupContent("optio porro voluptas",
                                "quo aut consequatur aut doloribus",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("return Date();",
                                "password",
                                "dolorem expedita dolores",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "updatedAt",
                                "excepturi eos non",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "updatedAt",
                                "rerum earum enim",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("est sit corrupti",
                                "https://picsum.photos/640/480/?image=308",
                                "2df1da1d-f971-71ae-a561-51ed55157a22",
                                () => { Console.WriteLine("sequi"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "quo"),
                        new ActionButton("occaecati neque debitis",
                                "https://picsum.photos/640/480/?image=246",
                                "f8f538c8-ba35-db51-a84f-b6a685282eab",
                                () => { Console.WriteLine("labore"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "molestiae"),
                        new ActionButton("est est illo",
                                "https://picsum.photos/640/480/?image=515",
                                "348454b8-fdbe-bc2c-e538-e350f73e7ccf",
                                () => { Console.WriteLine("eveniet"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "sit")]),
                        new AttributesDictionary(),
                        true,
                        "eum",
                        "neque",
                        new GraphicOrigin(Guid.NewGuid(),
                            "maxime",
                            3))],
                [new Graphic(new Extent(-102.4511,
                            -83.2790,
                            88.1888,
                            -86.5268,
                            199.0057,
                            484.8520,
                            575.1118,
                            314.5342,
                        new SpatialReference(2,
                                "temporibus",
                                "voluptatem",
                                "accusantium"),
                            true,
                            true),
                    new TextSymbol("eligendi modi beatae",
                        new MapColor(183, 129, 150),
                        new MapColor(147, 221, 230),
                            new Dimension(94.7839),
                        new MapFont(new Dimension(367.2727),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            29.4844,
                        new MapColor(195, 35, 99),
                        new MapColor(55, 175, 9),
                            341.3000,
                        HorizontalAlignment.Right,
                            true,
                            592.9187,
                            new Dimension(737.9909),
                            true),
                    new PopupTemplate("odio ipsam non",
                            "nihil",
                            ["ut",
                                "architecto",
                                "rerum"],
                        [new FieldInfo("updatedAt",
                                "maxime",
                                "voluptates",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("group",
                                "et",
                                "eligendi",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("token",
                                "est",
                                "reiciendis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "voluptates",
                                "in",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                        [new AttachmentsPopupContent("aspernatur quo fugiat",
                                "adipisci animi est ut id",
                                AttachmentsPopupContentDisplayType.Auto),
                        new AttachmentsPopupContent("atque ut quisquam",
                                "omnis sed at aliquam placeat vel facere",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("return $feature.Name;",
                                "name",
                                "totam quae qui",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "group",
                                "culpa molestiae quibusdam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("autem voluptatum necessitatibus",
                                "9cb9a001-5f7d-2afc-90c7-463375e69b45",
                                () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "voluptas"),
                        new ActionButton("consequatur odio rerum",
                                "https://picsum.photos/640/480/?image=844",
                                "9719713c-a68b-bfa3-6212-0eaeb24b65f6",
                                () => { Console.WriteLine("laudantium"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "dolores"),
                        new ActionButton("harum eveniet omnis",
                                "https://picsum.photos/640/480/?image=14",
                                "05502e2c-f3fb-5a2a-f3d1-5fe6ea6e4d0e",
                                () => { Console.WriteLine("perferendis"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "quas"),
                        new ActionToggle("iure autem nobis",
                                "d5e18175-ca31-fe6e-cff3-df271cb90004",
                                () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "comment",
                                "consequatur")]),
                        new AttributesDictionary(),
                        true,
                        "tempore",
                        "itaque",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            3))],
                    ["iure",
                        "vero",
                        "sit",
                        "dolorum"],
                [new Graphic(new Polygon([new MapPath([new MapPoint([876.5003,
                                253.2153,
                                369.2396,
                                503.7989]),
                            new MapPoint([843.3921,
                                320.5705,
                                581.5133]),
                            new MapPoint([971.6240,
                                904.6283,
                                526.9834])]),
                            new MapPath([new MapPoint([438.1638,
                                    827.0743,
                                    196.6513,
                                    360.9454]),
                                new MapPoint([429.4886,
                                    658.4297,
                                    392.9327,
                                    326.5986]),
                                new MapPoint([857.1918,
                                    723.5067,
                                    754.2708,
                                    753.9802])]),
                            new MapPath([new MapPoint([881.4839,
                                    320.3917,
                                    405.2935]),
                                new MapPoint([114.2239,
                                    346.0204])])],
                        new SpatialReference(6,
                                "ut",
                                "labore",
                                "consequatur"),
                        new Point(-7.0195,
                                77.4343,
                                -67.4441,
                                29.5422,
                                549.5541,
                            new SpatialReference(1,
                                    "ad",
                                    "quam",
                                    "officia"),
                                true,
                                true,
                                44.6231),
                            true,
                            true,
                            true),
                    new TextSymbol("voluptatem fugiat quaerat",
                        new MapColor(82, 5, 101),
                        new MapColor(252, 8, 9),
                            new Dimension(924.6557),
                        new MapFont(new Dimension(538.5526),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            218.2691,
                        new MapColor(32, 136, 19),
                        new MapColor(226, 65, 189),
                            397.5573,
                        HorizontalAlignment.Right,
                            true,
                            833.9669,
                            new Dimension(491.7658),
                            true),
                    new PopupTemplate("quis minima praesentium",
                            "deleniti",
                            ["est",
                                "aut"],
                        [new FieldInfo("updatedAt",
                                "sed",
                                "minus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new TextPopupContent("quam dolores vitae"),
                        new MediaPopupContent("aut ut totam",
                                "voluptas ad sit totam commodi",
                            [new ImageMediaInfo("commodi voluptatum doloribus",
                                    "vero",
                                    "quia quia at",
                                new ImageMediaInfoValue("https://earlene.name",
                                        "https://kelvin.org"),
                                    958.4585),
                            new BarChartMediaInfo("recusandae dolores est",
                                    "esse",
                                    "et corporis beatae",
                                new ChartMediaInfoValue(["quis",
                                        "consequatur",
                                        "sed",
                                        "minima"],
                                        "voluptatem",
                                        "aliquam",
                                    [new ChartMediaInfoValueSeries("createdAt",
                                            "inventore",
                                            846.2623),
                                    new ChartMediaInfoValueSeries("group",
                                            "esse",
                                            505.4324),
                                    new ChartMediaInfoValueSeries("group",
                                            "illum",
                                            175.0936)],
                                    [new MapColor(219, 113, 141),
                                    new MapColor(82, 36, 55)])),
                            new ColumnChartMediaInfo("velit sequi distinctio",
                                    "quis",
                                    "ab eos ut",
                                new ChartMediaInfoValue(["accusantium",
                                        "magnam",
                                        "facere",
                                        "dolore"],
                                        "consectetur",
                                        "et",
                                    [new ChartMediaInfoValueSeries("title",
                                            "nobis",
                                            140.0692),
                                    new ChartMediaInfoValueSeries("token",
                                            "reiciendis",
                                            195.4823),
                                    new ChartMediaInfoValueSeries("updatedAt",
                                            "sunt",
                                            453.6045),
                                    new ChartMediaInfoValueSeries("updatedAt",
                                            "distinctio",
                                            680.9721)],
                                    [new MapColor(5, 236, 55),
                                    new MapColor(50, 220, 42),
                                    new MapColor(170, 243, 137),
                                    new MapColor(41, 41, 159)])),
                            new ColumnChartMediaInfo("eaque libero dolorem",
                                    "velit",
                                    "tenetur ipsam reiciendis",
                                new ChartMediaInfoValue(["voluptatem",
                                        "eligendi",
                                        "laudantium",
                                        "aliquid"],
                                        "laudantium",
                                        "exercitationem",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "pariatur",
                                            879.4404),
                                    new ChartMediaInfoValueSeries("password",
                                            "pariatur",
                                            91.6449)],
                                    [new MapColor(241, 107, 250),
                                    new MapColor(143, 88, 68)]))],
                                4),
                        new RelationshipPopupContent("voluptatem unde corrupti",
                                "atque natus perspiciatis ad iusto est",
                                5,
                                "totam",
                            [new RelatedRecordsInfoFieldOrder("amet",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("aut",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("iusto",
                                OrderBy.Desc)],
                                7)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "phone",
                                "aut vel possimus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "password",
                                "distinctio et hic",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("eveniet aspernatur dolorem",
                                "https://picsum.photos/640/480/?image=587",
                                "809c9cbf-efe3-bde3-faec-aae56e76dab7",
                                () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "eius"),
                        new ActionButton("odio est qui",
                                "https://picsum.photos/640/480/?image=603",
                                "1e444af3-c67a-cfae-3bce-c9c1846569dc",
                                () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "eos"),
                        new ActionButton("aspernatur expedita nesciunt",
                                "https://picsum.photos/640/480/?image=249",
                                "10864336-8ef2-5904-41a2-a4bd9efffeb0",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "et"),
                        new ActionButton("rerum voluptatum expedita",
                                "https://picsum.photos/640/480/?image=1000",
                                "5d6da530-c13f-6ab8-0966-e5ad7d685de9",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "porro",
                        "rem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "vel",
                            7))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["nesciunt",
                    "sunt",
                    "accusamus"],
                    ["token",
                        "category",
                        "category"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("group");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("createdAt",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polyline([new MapPath([new MapPoint([302.3879,
                                677.6456,
                                278.1686]),
                            new MapPoint([755.0576,
                                713.0621,
                                309.7867]),
                            new MapPoint([426.4257,
                                711.9671,
                                994.1325,
                                446.8666])]),
                            new MapPath([new MapPoint([856.1931,
                                    486.8292]),
                                new MapPoint([451.2178,
                                    571.9061]),
                                new MapPoint([335.4751,
                                    685.4195]),
                                new MapPoint([549.2955,
                                    524.7639,
                                    633.6159,
                                    842.4220])]),
                            new MapPath([new MapPoint([650.5811,
                                    249.9525,
                                    819.9672]),
                                new MapPoint([830.6681,
                                    547.2680,
                                    257.6144,
                                    125.7724])])],
                        new SpatialReference(5,
                                "eveniet",
                                "enim",
                                "est"),
                            true,
                            true),
                    new TextSymbol("atque voluptatum consequatur",
                        new MapColor(90, 57, 127),
                        new MapColor(192, 96, 241),
                            new Dimension(17.7006),
                        new MapFont(new Dimension(629.7904),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            134.4314,
                        new MapColor(247, 249, 225),
                        new MapColor(196, 225, 205),
                            834.8523,
                        HorizontalAlignment.Center,
                            true,
                            371.3941,
                            new Dimension(883.7678),
                            true),
                    new PopupTemplate("est commodi est",
                            "in",
                            ["consequatur",
                                "nihil",
                                "occaecati",
                                "quam"],
                        [new FieldInfo("email",
                                "praesentium",
                                "aut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new AttachmentsPopupContent("quam nihil rem",
                                "delectus quas eos dolorum in ea consequatur",
                                AttachmentsPopupContentDisplayType.Auto),
                        new TextPopupContent("non rerum autem"),
                        new TextPopupContent("incidunt molestias et")],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "category",
                                "veniam autem sed",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "token",
                                "veniam asperiores in",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "category",
                                "totam et quam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "email",
                                "non deleniti veniam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("cupiditate voluptas ut",
                                "0ec64d9f-c7bf-0761-09b3-8c1289cc7962",
                                () => { Console.WriteLine("voluptatibus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "quo"),
                        new ActionToggle("deserunt voluptatem ut",
                                "a2da1ac4-b54b-ea3b-a7f3-58de2506a816",
                                () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "comment",
                                "ut"),
                        new ActionButton("voluptatem magni iure",
                                "https://picsum.photos/640/480/?image=1052",
                                "b7608525-c9ec-67b8-ad54-a45aff9efaa2",
                                () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "earum"),
                        new ActionToggle("harum mollitia accusantium",
                                "95d8b20e-7ebb-4242-9210-7784ad5579ab",
                                () => { Console.WriteLine("dignissimos"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "corporis")]),
                        new AttributesDictionary(),
                        true,
                        "vel",
                        "quibusdam",
                        new GraphicOrigin(Guid.NewGuid(),
                            "repudiandae",
                            3))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([4,
                    3,
                    8,
                    3],
                    true,
                    412.8163,
                    568.4386,
                    "1.0.2.4",
                new Point(100.7430,
                        -23.0207,
                        81.0051,
                        -50.9527,
                        747.9393,
                    new SpatialReference(3,
                            "inventore",
                            "ex",
                            "voluptatem"),
                        true,
                        true,
                        137.4621),
                    9,
                    ["dolorem",
                        "vitae",
                        "numquam"],
                    "vel",
                    new DateTime(2021, 9, 13, 19, 3, 15),
                    953.8323,
                    6,
                    "recusandae",
                    5),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([6,
                    6],
                    true,
                    963.9692,
                    352.5212,
                    "1.9.1.8",
                new Point(54.9559,
                        80.8015,
                        -83.6084,
                        -73.6743,
                        580.2740,
                    new SpatialReference(6,
                            "nostrum",
                            "soluta",
                            "esse"),
                        true,
                        true,
                        917.8126),
                    8,
                    ["assumenda",
                        "beatae",
                        "accusamus"],
                    "sequi",
                    new DateTime(2020, 5, 21, 12, 48, 0),
                    79.3606,
                    5,
                    "quidem",
                    7),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([6,
                    7],
                    true,
                    934.0983,
                    195.6996,
                    "2.8.3.3",
                new Point(-90.6858,
                        -44.0937,
                        -77.3211,
                        -88.9799,
                        265.3414,
                    new SpatialReference(2,
                            "commodi",
                            "voluptatum",
                            "aspernatur"),
                        true,
                        true,
                        509.5015),
                    8,
                    ["et",
                        "consectetur"],
                    "maiores",
                    new DateTime(2015, 7, 16, 20, 35, 39),
                    486.3791,
                    1,
                    "quia",
                    5),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([1,
                    1,
                    7],
                    true,
                    691.2798,
                    246.8397,
                    "6.0.0.7",
                new Extent(88.2294,
                        -7.6910,
                        78.2384,
                        68.5132,
                        320.8155,
                        984.1756,
                        957.4431,
                        848.2537,
                    new SpatialReference(6,
                            "corporis",
                            "voluptas",
                            "qui"),
                        true,
                        true),
                    1,
                    ["quo",
                        "dignissimos",
                        "voluptas",
                        "animi"],
                    "quos",
                    new DateTime(2003, 5, 13, 18, 31, 32),
                    207.5394,
                    3,
                    "fugit",
                    4),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.DestinationOver;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Name;",
                        "blanditiis vel et"),
                ElevationInfoMode.RelativeToScene,
                    806.8559,
                ElevationUnit.UsFeet);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("consequatur",
                    45331913.5943),
                    new Effect("ut",
                        33587308.9959),
                    new Effect("voluptatem",
                        17208120.9796)],
                    true,
                new FeatureFilter(684.3814,
                    new Extent(-67.7722,
                            135.9246,
                            -79.0722,
                            35.7955,
                            257.4130,
                            595.7501,
                            645.7124,
                            924.1692,
                        new SpatialReference(5,
                                "dolor",
                                "accusamus",
                                "necessitatibus"),
                            true,
                            true),
                        [1,
                            1,
                            2],
                    SpatialRelationship.Contains,
                    new TimeExtent(new DateTime(2004, 5, 18, 19, 43, 17),
                            new DateTime(2008, 6, 14, 17, 34, 30)),
                        QueryUnits.Meters,
                        "City = 'Toronto'"),
                    [new Effect("alias",
                        48321857.2178),
                        new Effect("eum",
                            10002054.4730),
                        new Effect("est",
                            42639382.3847)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "id",
                    "est",
                    "similique esse quas delectus earum",
                    5,
                    true,
                    true,
                    new { Value = "nulla" },
                FieldValueType.Description,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "updatedAt",
                    "a",
                    "repudiandae atque voluptates consequatur",
                    7,
                    true,
                    true,
                    new { Value = "ab" },
                FieldValueType.Description,
                    new CodedValueDomain<string>())];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(15.2257,
                    -112.1937,
                    -27.5131,
                    70.5863,
                    355.8360,
                    754.3820,
                    973.4766,
                    342.8701,
                new SpatialReference(7,
                        "suscipit",
                        "ut",
                        "impedit"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Multipoint;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveCenter,
                    "iste",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    18414581.5319,
                    10567.9347,
                    true,
                    new Dimension(724.5453),
                new TextSymbol("laboriosam perferendis enim",
                    new MapColor(92, 21, 154),
                    new MapColor(184, 100, 42),
                        new Dimension(163.5736),
                    new MapFont(new Dimension(783.2309),
                            "Garamond",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.None),
                        720.6393,
                    new MapColor(180, 234, 25),
                    new MapColor(14, 70, 199),
                        625.2605,
                    HorizontalAlignment.Center,
                        true,
                        671.1708,
                        new Dimension(737.0741),
                        true),
                    true,
                    "Street = '123 Main St.'"),
            new Label(LabelPlacement.BelowBefore,
                    "rerum",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    47027812.9981,
                    12936.1486,
                    true,
                    new Dimension(730.7909),
                new TextSymbol("quas soluta iure",
                    new MapColor(72, 76, 247),
                    new MapColor(138, 238, 17),
                        new Dimension(241.6398),
                    new MapFont(new Dimension(955.2992),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.None),
                        842.3121,
                    new MapColor(239, 188, 23),
                    new MapColor(133, 74, 244),
                        268.3639,
                    HorizontalAlignment.Left,
                        true,
                        403.2942,
                        new Dimension(977.8323),
                        true),
                    true,
                    "City = 'Toronto'"),
            new Label(LabelPlacement.CenterBefore,
                    "reiciendis",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    45102931.2305,
                    45621.5052,
                    true,
                    new Dimension(720.1722),
                new TextSymbol("explicabo architecto illo",
                    new MapColor(5, 137, 220),
                    new MapColor(229, 24, 190),
                        new Dimension(803.6816),
                    new MapFont(new Dimension(935.7287),
                            "Palatino",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        859.0684,
                    new MapColor(106, 79, 197),
                    new MapColor(207, 101, 19),
                        261.6350,
                    HorizontalAlignment.Right,
                        true,
                        83.3732,
                        new Dimension(80.2503),
                        true),
                    true,
                    "ObjectID = 1"),
            new Label(LabelPlacement.CenterBefore,
                    "consequatur",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    29137924.5549,
                    9429.0872,
                    true,
                    new Dimension(992.2419),
                new TextSymbol("libero sed quia",
                    new MapColor(131, 102, 107),
                    new MapColor(248, 156, 146),
                        new Dimension(702.3812),
                    new MapFont(new Dimension(499.7698),
                            "Bookman",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        318.7301,
                    new MapColor(22, 130, 127),
                    new MapColor(186, 193, 49),
                        855.9098,
                    HorizontalAlignment.Left,
                        true,
                        324.4725,
                        new Dimension(913.4930),
                        true),
                    true,
                    "Country = 'Canada'")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("corporis",
                SortOrder.Ascending,
                    "aut"),
            new OrderedLayerOrderBy("esse",
                SortOrder.Ascending,
                    "cupiditate"),
            new OrderedLayerOrderBy("nemo",
                SortOrder.Descending,
                    "culpa"),
            new OrderedLayerOrderBy("doloremque",
                SortOrder.Descending,
                    "vero")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("sed ipsam ut",
                    "hic",
                    ["ullam",
                        "voluptatibus"],
                [new FieldInfo("createdAt",
                        "aspernatur",
                        "quia",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(8,
                            true,
                        DateFormat.DayShortMonthYearShortTime24),
                        true,
                        true,
                    StatisticType.Sum)],
                [new TextPopupContent("dicta pariatur quidem"),
                new FieldsPopupContent([new FieldInfo("id",
                            "laboriosam",
                            "harum",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("createdAt",
                            "soluta",
                            "voluptatem",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Var)],
                        "et at eos autem maiores suscipit unde",
                        "voluptas praesentium omnis")],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "group",
                        "neque recusandae laboriosam",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "category",
                        "rerum ipsa nobis",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("repellendus officiis animi",
                        "https://picsum.photos/640/480/?image=417",
                        "a6604a08-1d75-a17a-c1e4-468d5419440f",
                        () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                        "avatar",
                        true,
                        true,
                        true,
                        "aut"),
                new ActionButton("illo est omnis",
                        "https://picsum.photos/640/480/?image=396",
                        "408fdb60-7c71-7102-f775-ae6e3635aae0",
                        () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                        "title",
                        true,
                        true,
                        true,
                        "ut"),
                new ActionButton("quibusdam et illo",
                        "https://picsum.photos/640/480/?image=696",
                        "eac21ba7-be8e-2d7e-abec-8c75abcb7071",
                        () => { Console.WriteLine("nesciunt"); return Task.CompletedTask; },
                        "updatedAt",
                        true,
                        true,
                        true,
                        "et"),
                new ActionToggle("omnis voluptas dolor",
                        "80366f39-18b0-0eef-b7fe-56c43fed7f2b",
                        () => { Console.WriteLine("soluta"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "comment",
                        "esse")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem();
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                    new AlgorithmicColorRamp(Algorithm.LabLch,
                        new MapColor(199, 145, 238),
                        new MapColor(220, 28, 43)),
                        741.1300,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(809.7024,
                                471.4917),
                        new AuthoringInfoField1ClassBreakInfos(894.1899,
                                357.6476)],
                            "in",
                            "et",
                            "voluptate"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(410.4286,
                                714.5078),
                        new AuthoringInfoField1ClassBreakInfos(532.2756,
                                285.9647),
                        new AuthoringInfoField1ClassBreakInfos(967.6414,
                                120.3223),
                        new AuthoringInfoField1ClassBreakInfos(921.7900,
                                882.7550)],
                            "reprehenderit",
                            "ducimus",
                            "consequatur"),
                        ["atque",
                            "perspiciatis"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "nisi",
                        true,
                    LengthUnit.Inches,
                        38.5260,
                        293.9755,
                        895.8127,
                        261.2900),
                new PictureFillSymbol("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0",
                    new Dimension(913.3072),
                    new Dimension(985.7555),
                    new Dimension(520.4222),
                    new Dimension(115.4276),
                    18.9735,
                    -19.7657,
                    new Outline(new MapColor(185, 141, 202),
                        new Dimension(900.4208),
                        SimpleLineSymbolStyle.ShortDot,
                        Cap.Butt,
                        Join.Miter,
                        new LineSymbolMarker(new MapColor(121, 67, 43),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Square),
                        683.2928),
                    new MapColor(76, 19, 172)),
                    "quasi",
                    new DefaultSymbol(),
                    "natus",
                    "illum",
                    "veritatis",
                    "numquam",
                new UniqueValueRendererLegendOptions("dolorem exercitationem amet"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("iusto",
                        new TextSymbol("distinctio amet sint",
                            new MapColor(185, 7, 47),
                            new MapColor(103, 136, 97),
                                new Dimension(631.9563),
                            new MapFont(new Dimension(520.2185),
                                    "Courier New",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                356.4212,
                            new MapColor(163, 219, 201),
                            new MapColor(149, 191, 147),
                                667.3190,
                            HorizontalAlignment.Center,
                                true,
                                569.7276,
                                new Dimension(971.6645),
                                true),
                        [new UniqueValue("magnam",
                                "reprehenderit",
                                "totam"),
                        new UniqueValue("quas",
                                "corporis",
                                "veritatis")])],
                        "similique"),
                new UniqueValueGroup([new UniqueValueClass("explicabo",
                        new TextSymbol("molestiae quia velit",
                            new MapColor(36, 205, 35),
                            new MapColor(241, 120, 235),
                                new Dimension(737.9495),
                            new MapFont(new Dimension(475.2715),
                                    "Courier New",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.None),
                                149.0402,
                            new MapColor(57, 160, 165),
                            new MapColor(90, 57, 186),
                                454.3551,
                            HorizontalAlignment.Center,
                                true,
                                164.7040,
                                new Dimension(800.6606),
                                true),
                        [new UniqueValue("doloribus",
                                "ratione",
                                "molestiae"),
                        new UniqueValue("molestias",
                                "delectus",
                                "excepturi"),
                        new UniqueValue("illum",
                                "ea",
                                "aut"),
                        new UniqueValue("eos",
                                "sit",
                                "adipisci")])],
                        "ut"),
                new UniqueValueGroup([new UniqueValueClass("provident",
                        new TextSymbol("ad ex eligendi",
                            new MapColor(102, 125, 69),
                            new MapColor(171, 157, 88),
                                new Dimension(482.1380),
                            new MapFont(new Dimension(821.3951),
                                    "Palatino",
                                MapFontStyle.Oblique,
                                FontWeight.Lighter,
                                TextDecoration.LineThrough),
                                70.8237,
                            new MapColor(193, 67, 44),
                            new MapColor(55, 43, 191),
                                800.1699,
                            HorizontalAlignment.Right,
                                true,
                                264.2372,
                                new Dimension(274.3230),
                                true),
                        [new UniqueValue("culpa",
                                "quae",
                                "perferendis"),
                        new UniqueValue("quae",
                                "iusto",
                                "nihil"),
                        new UniqueValue("id",
                                "est",
                                "aliquam"),
                        new UniqueValue("aspernatur",
                                "hic",
                                "alias")]),
                    new UniqueValueClass("minus",
                        new TextSymbol("cupiditate nisi odio",
                            new MapColor(71, 244, 125),
                            new MapColor(179, 31, 22),
                                new Dimension(916.3682),
                            new MapFont(new Dimension(966.2730),
                                    "Georgia",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.LineThrough),
                                867.3650,
                            new MapColor(176, 139, 230),
                            new MapColor(162, 74, 249),
                                794.9970,
                            HorizontalAlignment.Center,
                                true,
                                921.2624,
                                new Dimension(612.5269),
                                true),
                        [new UniqueValue("non",
                                "libero",
                                "recusandae"),
                        new UniqueValue("et",
                                "officia",
                                "eligendi"),
                        new UniqueValue("autem",
                                "dolorum",
                                "facere"),
                        new UniqueValue("autem",
                                "dolor",
                                "iste")]),
                    new UniqueValueClass("mollitia",
                        new TextSymbol("repellendus minima omnis",
                            new MapColor(223, 122, 84),
                            new MapColor(38, 148, 216),
                                new Dimension(84.4269),
                            new MapFont(new Dimension(518.7093),
                                    "Arial",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                802.3618,
                            new MapColor(248, 109, 33),
                            new MapColor(21, 19, 83),
                                720.9169,
                            HorizontalAlignment.Right,
                                true,
                                965.3513,
                                new Dimension(676.0639),
                                true),
                        [new UniqueValue("et",
                                "nihil",
                                "itaque")])],
                        "dolorum"),
                new UniqueValueGroup([new UniqueValueClass("deserunt",
                        new TextSymbol("consequatur possimus aperiam",
                            new MapColor(134, 14, 188),
                            new MapColor(40, 137, 110),
                                new Dimension(625.3602),
                            new MapFont(new Dimension(337.7416),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.None),
                                22.5424,
                            new MapColor(251, 158, 70),
                            new MapColor(108, 114, 4),
                                58.6274,
                            HorizontalAlignment.Right,
                                true,
                                474.2519,
                                new Dimension(470.7783),
                                true),
                        [new UniqueValue("voluptatibus",
                                "sequi",
                                "est"),
                        new UniqueValue("nesciunt",
                                "fugiat",
                                "eos")])],
                        "adipisci")],
                [new UniqueValueInfo("excepturi",
                    new TextSymbol("minima sint dignissimos",
                        new MapColor(252, 182, 247),
                        new MapColor(64, 217, 79),
                            new Dimension(968.8301),
                        new MapFont(new Dimension(432.6478),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            568.5175,
                        new MapColor(176, 36, 137),
                        new MapColor(154, 140, 2),
                            180.2017,
                        HorizontalAlignment.Right,
                            true,
                            879.8567,
                            new Dimension(744.4081),
                            true),
                        "ratione")],
                    "vel",
                    "est rem et");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(9,
                    "nemo",
                    "repellat",
                    "laborum");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("accusantium qui corporis fugit consequuntur voluptatem",
                DrawingTool.RightArrow,
                    "name",
                new Graphic(new Polyline([new MapPath([new MapPoint([442.7596,
                                421.5990,
                                594.6053]),
                            new MapPoint([711.3364,
                                334.1295,
                                922.6968]),
                            new MapPoint([753.3701,
                                810.7775])]),
                            new MapPath([new MapPoint([388.8308,
                                    748.3004,
                                    515.2232,
                                    403.0003]),
                                new MapPoint([819.2148,
                                    119.3056,
                                    374.8512,
                                    127.1208]),
                                new MapPoint([584.2846,
                                    751.0126]),
                                new MapPoint([579.5635,
                                    645.1702,
                                    340.7404])]),
                            new MapPath([new MapPoint([678.8137,
                                    978.7833]),
                                new MapPoint([521.9838,
                                    471.1796,
                                    445.3397])])],
                        new SpatialReference(1,
                                "ipsum",
                                "molestiae",
                                "voluptas"),
                            true,
                            true),
                    new TextSymbol("laborum tenetur labore",
                        new MapColor(160, 239, 118),
                        new MapColor(95, 22, 17),
                            new Dimension(458.0446),
                        new MapFont(new Dimension(737.1136),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            264.0868,
                        new MapColor(70, 14, 155),
                        new MapColor(46, 137, 33),
                            188.0796,
                        HorizontalAlignment.Left,
                            true,
                            934.0043,
                            new Dimension(347.4038),
                            true),
                    new PopupTemplate("est et consequatur",
                            "aperiam",
                            ["facere",
                                "aut",
                                "asperiores",
                                "quasi"],
                        [new FieldInfo("title",
                                "nisi",
                                "adipisci",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("status",
                                "possimus",
                                "in",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new RelationshipPopupContent("numquam earum libero",
                                "est nihil impedit consequuntur libero",
                                9,
                                "distinctio",
                            [new RelatedRecordsInfoFieldOrder("aut",
                                OrderBy.Asc)],
                                6),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "qui",
                                    "velit ea ut")),
                        new AttachmentsPopupContent("quibusdam vitae quo",
                                "sit odit ipsum dolorem vero quia iusto",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "comment",
                                "distinctio sunt architecto",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "group",
                                "ducimus officia velit",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "id",
                                "eveniet non consequuntur",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "id",
                                "voluptatem magni aspernatur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("pariatur aperiam et",
                                "https://picsum.photos/640/480/?image=308",
                                "4ce22987-7119-ecf1-a505-1c98e016e9b7",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "earum")]),
                        new AttributesDictionary(),
                        true,
                        "dolorum",
                        "quia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "eum",
                            7)),
                    new Thumbnail("mollitia",
                        "enim",
                        257.1848,
                        189.5608)),
            new FeatureTemplate("illo ut non rem",
                DrawingTool.DownArrow,
                    "email",
                new Graphic(new Polyline([new MapPath([new MapPoint([531.4880,
                                888.4891]),
                            new MapPoint([632.4532,
                                180.0148,
                                186.1373]),
                            new MapPoint([63.5328,
                                329.7295,
                                754.2275]),
                            new MapPoint([852.3493,
                                214.1363,
                                161.1343])])],
                        new SpatialReference(9,
                                "aspernatur",
                                "reprehenderit",
                                "ipsam"),
                            true,
                            true),
                    new TextSymbol("ad voluptatem nesciunt",
                        new MapColor(179, 183, 124),
                        new MapColor(199, 14, 167),
                            new Dimension(452.3253),
                        new MapFont(new Dimension(713.8964),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            817.3407,
                        new MapColor(219, 28, 16),
                        new MapColor(27, 63, 103),
                            978.8995,
                        HorizontalAlignment.Center,
                            true,
                            99.3449,
                            new Dimension(399.8435),
                            true),
                    new PopupTemplate("sit totam tempore",
                            "minima",
                            ["vitae",
                                "et",
                                "dolore",
                                "aut"],
                        [new FieldInfo("password",
                                "perspiciatis",
                                "non",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("createdAt",
                                "veritatis",
                                "mollitia",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("status",
                                "asperiores",
                                "ut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("phone",
                                "eos",
                                "ex",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Var)],
                        [new RelationshipPopupContent("iusto maiores et",
                                "ad blanditiis ea rem officiis consequatur",
                                5,
                                "exercitationem",
                            [new RelatedRecordsInfoFieldOrder("perspiciatis",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("cum",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("rem",
                                OrderBy.Asc)],
                                9),
                        new FieldsPopupContent([new FieldInfo("title",
                                    "culpa",
                                    "quo",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "tempora quasi omnis sequi eveniet ut minima",
                                "tenetur ea quidem"),
                        new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "saepe",
                                    "itaque magni sint")),
                        new FieldsPopupContent([new FieldInfo("avatar",
                                    "mollitia",
                                    "et",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("password",
                                    "tempora",
                                    "sed",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("status",
                                    "voluptas",
                                    "cum",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("name",
                                    "voluptas",
                                    "animi",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "dolor modi omnis ut non et",
                                "dolorem autem sed")],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "title",
                                "est quia deleniti",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "comment",
                                "perspiciatis beatae architecto",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("et est itaque",
                                "https://picsum.photos/640/480/?image=811",
                                "d97d0962-2ae8-6b6e-6cfe-1f7639ce3011",
                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "exercitationem"),
                        new ActionButton("distinctio sint temporibus",
                                "https://picsum.photos/640/480/?image=26",
                                "f0506b6f-1b80-0cf4-c285-da93e851bbdf",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "a"),
                        new ActionToggle("voluptatem aut velit",
                                "252d9aef-3cda-a037-4a7c-d866f4665eb6",
                                () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "vel")]),
                        new AttributesDictionary(),
                        true,
                        "tenetur",
                        "vero",
                        new GraphicOrigin(Guid.NewGuid(),
                            "excepturi",
                            9)),
                    new Thumbnail("quas",
                        "commodi",
                        236.8668,
                        212.1414))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2011, 4, 16, 16, 29, 39),
                    new DateTime(2010, 3, 25, 1, 51, 52));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("dolorum",
                    "illum",
                new TimeExtent(new DateTime(2006, 6, 27, 10, 50, 11),
                        new DateTime(2017, 5, 7, 12, 41, 7)),
                new TimeInterval(TemporalTime.Minutes,
                        610.2585),
                    [new DateTime(2008, 9, 24, 20, 44, 44),
                        new DateTime(2022, 10, 3, 4, 33, 43),
                        new DateTime(2004, 9, 1, 15, 36, 13),
                        new DateTime(2009, 2, 6, 19, 39, 38)],
                    "Asia/Colombo",
                    "molestias");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    712.4719);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2020, 11, 14, 22, 21, 22),
                    new DateTime(2014, 6, 18, 6, 24, 4));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
