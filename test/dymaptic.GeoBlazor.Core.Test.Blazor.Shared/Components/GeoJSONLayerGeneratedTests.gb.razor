@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("distinctio")"
                        Title="@("accusamus accusamus quos")"
                        Opacity="@(0.2789)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        BlendMode="@(BlendMode.Screen)"
                        DefinitionExpression="@("et")"
                        DisplayField="@("molestiae")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("eum",
                            26501718.1696))"
                        FullExtent="@(new Extent(33.2232,
                                -102.1400,
                                10.1967,
                                -69.3827,
                                695.4463,
                                879.4520,
                                21.6971,
                                233.0243,
                            new SpatialReference(6,
                                    "est",
                                    "dolores",
                                    "aut"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Multipoint)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(14511158.7801)"
                        MinScale="@(1625.6004)"
                        ObjectIdField="@("molestias")"
                        OutFields="@(["vel",
                            "in",
                            "eum"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(737.6550)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(7,
                                "delectus",
                                "nulla",
                                "qui"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(719.4619)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("praesentium")"
                            EndField="@("ducimus")"
                            Stops="@([new DateTime(2012, 7, 3, 11, 32, 29),
                                new DateTime(2001, 1, 1, 13, 46, 9)])"
                            TimeZone="@("Australia/Brisbane")"
                            TrackIdField="@("id")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Centuries)"
                                Value="@(692.2938)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2001, 9, 16, 13, 54, 34))"
                                End="@(new DateTime(2006, 8, 5, 15, 39, 2))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2004, 2, 22, 12, 25, 49))"
                            End="@(new DateTime(2011, 8, 11, 14, 41, 54))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("dolor similique pariatur consequatur incidunt et explicabo")"
                            DrawingTool="@(DrawingTool.Freehand)"
                            Name="@("avatar")"
                            Prototype="@(new Graphic(new Point(163.8366,
                                        -48.4863,
                                        136.2980,
                                        41.0328,
                                        788.9530,
                                    new SpatialReference(2,
                                            "aliquam",
                                            "reprehenderit",
                                            "quidem"),
                                        true,
                                        true,
                                        548.2101),
                                new TextSymbol("eligendi et eius",
                                    new MapColor(65, 218, 184),
                                    new MapColor(140, 234, 104),
                                        new Dimension(667.5242),
                                    new MapFont(new Dimension(554.1934),
                                            "Georgia",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        887.0258,
                                    new MapColor(46, 143, 206),
                                    new MapColor(50, 248, 47),
                                        272.9072,
                                    HorizontalAlignment.Left,
                                        true,
                                        835.3579,
                                        new Dimension(927.3119),
                                        true),
                                new PopupTemplate("vel dolores eligendi",
                                        "repudiandae",
                                        ["eum",
                                            "est"],
                                    [new FieldInfo("token",
                                            "quo",
                                            "dolorem",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("name",
                                            "eos",
                                            "in",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDateLeShortTime),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("avatar",
                                            "omnis",
                                            "ducimus",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("status",
                                            "dolorem",
                                            "et",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                    [new TextPopupContent("nihil repellat qui"),
                                    new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "suscipit",
                                                "laborum enim exercitationem"))],
                                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "password",
                                            "perspiciatis vel perferendis",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("maiores sequi iusto",
                                            "9f5ce222-ca2b-46d2-d44f-abaf2cb1baf3",
                                            () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "title",
                                            "veniam"),
                                    new ActionToggle("odio architecto ad",
                                            "781b237a-5fe3-15cc-3970-fb8d21bf49d5",
                                            () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "token",
                                            "omnis"),
                                    new ActionToggle("quo ipsum nostrum",
                                            "a55cf03f-01ae-bcf5-dd4a-9c14ece59567",
                                            () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "token",
                                            "aut")]),
                                    new AttributesDictionary(),
                                    true,
                                    "ipsam",
                                    "odit",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "itaque",
                                        1)))"
                            Thumbnail="@(new Thumbnail("illo",
                                "placeat",
                                233.6710,
                                130.5609))">
                        </FeatureTemplate>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                    new MapColor(63, 158, 218),
                                    new MapColor(243, 214, 43)),
                                    500.1392,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(636.4427,
                                            739.5175)],
                                        "possimus",
                                        "porro",
                                        "sunt"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(74.8099,
                                            450.1871),
                                    new AuthoringInfoField1ClassBreakInfos(548.5321,
                                            653.6967),
                                    new AuthoringInfoField1ClassBreakInfos(820.4897,
                                            409.7035),
                                    new AuthoringInfoField1ClassBreakInfos(416.4821,
                                            682.9883)],
                                        "ipsam",
                                        "consectetur",
                                        "nemo"),
                                    ["quis",
                                        "dolorem"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "est",
                                    true,
                                LengthUnit.Centimeters,
                                    946.2965,
                                    11.1428,
                                    0.0715,
                                    331.4355))">
                        </SimpleRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("in")"
                            ApiKey="@("beatae")"
                            AvgRating="@(790.6951)"
                            Categories="@(["ex",
                                "est",
                                "eligendi"])"
                            Created="@(new DateTime(2022, 6, 9, 11, 22, 45))"
                            Culture="@("aut")"
                            Description="@("consequatur accusamus est ipsam voluptas quia")"
                            Extent="@(new Extent(-25.6819,
                                    -120.9426,
                                    -58.3105,
                                    62.8303,
                                    195.6410,
                                    673.5299,
                                    358.3542,
                                    706.1854,
                                new SpatialReference(3,
                                        "delectus",
                                        "expedita",
                                        "autem"),
                                    true,
                                    true))"
                            GroupCategories="@(["omnis",
                                "rem",
                                "aut",
                                "dolorem"])"
                            LicenseInfo="@("adipisci")"
                            Modified="@(new DateTime(2019, 2, 12, 22, 41, 25))"
                            Name="@("password")"
                            NumComments="@(575.1049)"
                            NumRatings="@(217.6829)"
                            NumViews="@(170.4207)"
                            Owner="@("Rubye Altenwerth")"
                            OwnerFolder="@("Quinten Durgan")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.NoPrompt,
                                    ["enim",
                                        "nesciunt",
                                        "libero"],
                                    "error",
                                    "voluptas",
                                    "occaecati",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("sed")"
                            Screenshots="@(["est",
                                "ea",
                                "deserunt"])"
                            Size="@(7)"
                            Snippet="@("et")"
                            Tags="@(["facere",
                                "suscipit",
                                "totam",
                                "cum"])"
                            Title="@("et in suscipit")"
                            TypeKeywords="@(["placeat",
                                "magnam",
                                "placeat",
                                "eum"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("laborum adipisci incidunt")"
                            StringContent="@("hic")"
                            OutFields="@(["ut",
                                "est",
                                "dolores"])"
                            FieldInfos="@([new FieldInfo("category",
                                    "ut",
                                    "est",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("comment",
                                    "rem",
                                    "explicabo",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("token",
                                    "nihil",
                                    "sapiente",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("title",
                                    "ullam",
                                    "et",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Count)])"
                            Content="@([new FieldsPopupContent([new FieldInfo("group",
                                        "hic",
                                        "ipsa",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("updatedAt",
                                        "libero",
                                        "consequatur",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongMonthDayYear),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("token",
                                        "tempore",
                                        "a",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Stddev)],
                                    "atque dolor ipsam maiores quisquam minus",
                                    "doloribus eos eos")])"
                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "token",
                                    "nihil voluptatem eos",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "createdAt",
                                    "et placeat voluptate",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "title",
                                    "necessitatibus quia accusantium",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature['FieldName'];",
                                    "updatedAt",
                                    "sed aliquam qui",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("animi ab vel",
                                    "3a8b2f8a-1365-555e-3e11-4b047685ed26",
                                    () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "createdAt",
                                    "fugiat"),
                            new ActionButton("et consequatur voluptas",
                                    "https://picsum.photos/640/480/?image=878",
                                    "3cc5154d-3d45-1610-029a-e0767e01df17",
                                    () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                    "id",
                                    true,
                                    true,
                                    true,
                                    "repellat"),
                            new ActionButton("fugit quasi delectus",
                                    "https://picsum.photos/640/480/?image=1027",
                                    "5c49d03d-d291-1218-8193-f766f3f9d4fe",
                                    () => { Console.WriteLine("reprehenderit"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "atque")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("aliquam")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("fugit")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.CenterAlong)"
                            LabelExpression="@("voluptas")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(39397221.5192)"
                            MinScale="@(44345.2858)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(952.0294))"
                            Symbol="@(new TextSymbol("sed nam dolore",
                                new MapColor(200, 82, 37),
                                new MapColor(40, 59, 23),
                                    new Dimension(752.1198),
                                new MapFont(new Dimension(496.5680),
                                        "Verdana",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bold,
                                    TextDecoration.None),
                                    319.6299,
                                new MapColor(129, 147, 104),
                                new MapColor(136, 107, 55),
                                    72.4764,
                                HorizontalAlignment.Center,
                                    true,
                                    195.6222,
                                    new Dimension(207.3763),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Street = '123 Main St.'")">
                        </Label>
                        <Field 
                            Name="@("title")"
                            Alias="@("maiores")"
                            Description="@("ea neque ab quis")"
                            Length="@(5)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "totam" })"
                            ValueType="@(FieldValueType.Measurement)"
                            Domain="@(new RangeDomain("tempora",
                                    "eveniet",
                                    "id"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("quo",
                                20359356.4112),
                                new Effect("autem",
                                    7978601.6885),
                                new Effect("fugiat",
                                    8303396.3388)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(588.6171,
                                new Point(126.1457,
                                        87.9014,
                                        -88.2313,
                                        39.0536,
                                        326.3798,
                                    new SpatialReference(2,
                                            "id",
                                            "porro",
                                            "molestias"),
                                        true,
                                        true,
                                        209.1118),
                                    [5,
                                        6],
                                SpatialRelationship.Contains,
                                new TimeExtent(new DateTime(2022, 11, 19, 11, 5, 28),
                                        new DateTime(2002, 5, 1, 14, 47, 58)),
                                    QueryUnits.NauticalMiles,
                                    "Age > 21"))"
                            IncludedEffect="@([new Effect("aperiam",
                                15690268.1183),
                                new Effect("velit",
                                    32955642.9653)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "magnam voluptatibus autem"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(788.8783)"
                            Unit="@(ElevationUnit.Decimeters)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polygon([new MapPath([new MapPoint([104.4981,
                                17.5851]),
                            new MapPoint([432.4490,
                                338.8549])]),
                            new MapPath([new MapPoint([768.4251,
                                    91.1504]),
                                new MapPoint([784.3707,
                                    333.8787,
                                    700.7035,
                                    717.3032])]),
                            new MapPath([new MapPoint([463.6904,
                                    614.9696]),
                                new MapPoint([293.1676,
                                    240.4864,
                                    665.3801])])],
                        new SpatialReference(1,
                                "est",
                                "perferendis",
                                "quae"),
                        new Point(34.9283,
                                -24.9550,
                                107.7175,
                                70.8231,
                                859.3997,
                            new SpatialReference(4,
                                    "illo",
                                    "quis",
                                    "quo"),
                                true,
                                true,
                                220.8616),
                            true,
                            true,
                            true),
                    new TextSymbol("et placeat aut",
                        new MapColor(56, 218, 223),
                        new MapColor(89, 124, 82),
                            new Dimension(626.9694),
                        new MapFont(new Dimension(605.8236),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            602.2981,
                        new MapColor(208, 250, 150),
                        new MapColor(187, 121, 182),
                            153.2778,
                        HorizontalAlignment.Right,
                            true,
                            69.8184,
                            new Dimension(123.5047),
                            true),
                    new PopupTemplate("aspernatur sapiente aut",
                            "autem",
                            ["veritatis",
                                "accusamus",
                                "nisi"],
                        [new FieldInfo("category",
                                "et",
                                "sit",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("title",
                                "aut",
                                "et",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new TextPopupContent("hic non recusandae"),
                        new AttachmentsPopupContent("laboriosam quam similique",
                                "totam error temporibus ad",
                                AttachmentsPopupContentDisplayType.Preview),
                        new FieldsPopupContent([new FieldInfo("email",
                                    "temporibus",
                                    "dolorem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("group",
                                    "quo",
                                    "provident",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearLongTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("avatar",
                                    "illo",
                                    "excepturi",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "rem delectus quis corrupti",
                                "sunt explicabo ab"),
                        new TextPopupContent("provident non unde")],
                        [new ExpressionInfo("return $feature.Name;",
                                "status",
                                "rerum assumenda aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "status",
                                "fugit sed itaque",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "email",
                                "beatae fugiat molestias",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "title",
                                "asperiores voluptatem enim",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptas perferendis unde",
                                "1287e150-7472-7373-954d-277689c12211",
                                () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "numquam"),
                        new ActionButton("quo perspiciatis ab",
                                "https://picsum.photos/640/480/?image=291",
                                "1b81396c-c1b6-63c7-dddd-bcc7e9f09342",
                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "rem")]),
                        new AttributesDictionary(),
                        true,
                        "voluptates",
                        "fugiat",
                        new GraphicOrigin(Guid.NewGuid(),
                            "delectus",
                            5))],
                [new Graphic(new Extent(-27.7745,
                            -87.9176,
                            -77.2142,
                            53.5345,
                            491.9854,
                            582.7478,
                            962.1477,
                            712.3104,
                        new SpatialReference(1,
                                "reiciendis",
                                "alias",
                                "aut"),
                            true,
                            true),
                    new TextSymbol("eaque quia sapiente",
                        new MapColor(246, 87, 185),
                        new MapColor(144, 247, 191),
                            new Dimension(182.7611),
                        new MapFont(new Dimension(356.0386),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            38.2181,
                        new MapColor(165, 73, 57),
                        new MapColor(21, 59, 29),
                            292.3549,
                        HorizontalAlignment.Center,
                            true,
                            729.9210,
                            new Dimension(505.6082),
                            true),
                    new PopupTemplate("recusandae minus non",
                            "officiis",
                            ["vel",
                                "id",
                                "voluptatem"],
                        [new FieldInfo("id",
                                "distinctio",
                                "vero",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("createdAt",
                                "molestiae",
                                "reiciendis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("updatedAt",
                                "inventore",
                                "temporibus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("category",
                                "aliquam",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                    "et",
                                    "et architecto fuga"))],
                        [new ExpressionInfo("return Date();",
                                "phone",
                                "consequuntur ullam quia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "phone",
                                "ut voluptatem hic",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "comment",
                                "eligendi qui fugiat",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "rerum voluptate ab",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("mollitia amet dignissimos",
                                "09f2e717-fc0b-fc7b-f33b-4d6392cea347",
                                () => { Console.WriteLine("asperiores"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "veniam"),
                        new ActionToggle("et rerum eos",
                                "7aef45b7-179f-e74d-ad50-1491a6843b3f",
                                () => { Console.WriteLine("ullam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "perspiciatis"),
                        new ActionToggle("quo enim ad",
                                "640b6391-ef05-ddb3-72c4-eb13be8b611e",
                                () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "et")]),
                        new AttributesDictionary(),
                        true,
                        "aspernatur",
                        "eos",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aspernatur",
                            8)),
                new Graphic(new Extent(-38.1916,
                            -76.0932,
                            -43.7850,
                            67.2278,
                            953.0879,
                            291.5599,
                            865.8100,
                            549.9800,
                        new SpatialReference(6,
                                "quas",
                                "possimus",
                                "beatae"),
                            true,
                            true),
                    new TextSymbol("nobis mollitia debitis",
                        new MapColor(223, 54, 56),
                        new MapColor(207, 172, 207),
                            new Dimension(309.5257),
                        new MapFont(new Dimension(252.6584),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            916.4950,
                        new MapColor(37, 136, 143),
                        new MapColor(117, 228, 10),
                            983.7009,
                        HorizontalAlignment.Center,
                            true,
                            802.5674,
                            new Dimension(419.8673),
                            true),
                    new PopupTemplate("enim soluta ipsa",
                            "omnis",
                            ["natus",
                                "nam",
                                "natus",
                                "inventore"],
                        [new FieldInfo("status",
                                "praesentium",
                                "consequuntur",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("email",
                                "magnam",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new TextPopupContent("est ducimus et")],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "id",
                                "porro minima dolores",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "password",
                                "pariatur et et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("amet dicta corporis",
                                "11c11d0b-fc74-1c42-70c9-0d32bdd9df4b",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "consequatur")]),
                        new AttributesDictionary(),
                        true,
                        "occaecati",
                        "sed",
                        new GraphicOrigin(Guid.NewGuid(),
                            "voluptatem",
                            6))],
                    ["quisquam",
                        "corrupti",
                        "tenetur"],
                [new Graphic(new Extent(-97.1842,
                            -177.8704,
                            -44.5033,
                            -74.7025,
                            692.1235,
                            72.9181,
                            223.1743,
                            307.3010,
                        new SpatialReference(4,
                                "perspiciatis",
                                "modi",
                                "corporis"),
                            true,
                            true),
                    new TextSymbol("et dignissimos non",
                        new MapColor(229, 0, 253),
                        new MapColor(42, 72, 166),
                            new Dimension(735.4965),
                        new MapFont(new Dimension(78.8847),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            638.2856,
                        new MapColor(207, 208, 237),
                        new MapColor(173, 11, 70),
                            481.9513,
                        HorizontalAlignment.Left,
                            true,
                            293.6596,
                            new Dimension(510.8059),
                            true),
                    new PopupTemplate("qui labore quae",
                            "illo",
                            ["laudantium",
                                "quia"],
                        [new FieldInfo("status",
                                "reiciendis",
                                "atque",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("updatedAt",
                                "illum",
                                "laudantium",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("email",
                                "dicta",
                                "repellat",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new TextPopupContent("necessitatibus porro excepturi"),
                        new FieldsPopupContent([new FieldInfo("token",
                                    "exercitationem",
                                    "tempora",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("updatedAt",
                                    "sunt",
                                    "eum",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("category",
                                    "natus",
                                    "adipisci",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("password",
                                    "magni",
                                    "deserunt",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "quia temporibus et necessitatibus",
                                "ipsum omnis et")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "updatedAt",
                                "reprehenderit qui modi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "createdAt",
                                "repellendus vel fugit",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "password",
                                "quia autem qui",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("quis itaque qui",
                                "https://picsum.photos/640/480/?image=326",
                                "f47ece07-8566-4acc-3a19-01db565a3c53",
                                () => { Console.WriteLine("aliquid"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "assumenda"),
                        new ActionToggle("occaecati voluptatem maxime",
                                "dcc99a76-4d4d-da75-f3cc-98f5c38b624c",
                                () => { Console.WriteLine("eaque"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "et"),
                        new ActionToggle("doloribus non nihil",
                                "4ffba26f-415a-d074-186d-3dba94238251",
                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "ipsa"),
                        new ActionToggle("quia tempore earum",
                                "80aaf545-42fb-c207-12e9-bab817c2bc32",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "ut",
                        "quia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "autem",
                            2))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["sapiente",
                    "sapiente",
                    "perspiciatis",
                    "aut"],
                    ["phone",
                        "category",
                        "phone",
                        "title"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("category");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("status",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Point(-114.9527,
                            65.5664,
                            -4.2212,
                            -49.2502,
                            806.3390,
                        new SpatialReference(3,
                                "ea",
                                "harum",
                                "nisi"),
                            true,
                            true,
                            962.3575),
                    new TextSymbol("excepturi suscipit neque",
                        new MapColor(207, 52, 87),
                        new MapColor(93, 133, 149),
                            new Dimension(536.7934),
                        new MapFont(new Dimension(719.9996),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            297.3795,
                        new MapColor(82, 221, 16),
                        new MapColor(38, 66, 164),
                            468.7819,
                        HorizontalAlignment.Center,
                            true,
                            742.0124,
                            new Dimension(539.1911),
                            true),
                    new PopupTemplate("laborum nemo qui",
                            "velit",
                            ["et",
                                "minima",
                                "illum",
                                "ipsa"],
                        [new FieldInfo("password",
                                "architecto",
                                "sunt",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("category",
                                "voluptate",
                                "qui",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("category",
                                "quas",
                                "architecto",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("password",
                                "laborum",
                                "magnam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new TextPopupContent("quam porro quae"),
                        new RelationshipPopupContent("dolor est aperiam",
                                "excepturi consectetur expedita placeat dolores esse",
                                7,
                                "est",
                            [new RelatedRecordsInfoFieldOrder("impedit",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("mollitia",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("optio",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("eum",
                                OrderBy.Desc)],
                                2),
                        new RelationshipPopupContent("perspiciatis odio voluptatem",
                                "iusto nobis voluptate rerum ut et",
                                2,
                                "aperiam",
                            [new RelatedRecordsInfoFieldOrder("similique",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("quia",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("maxime",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("nemo",
                                OrderBy.Desc)],
                                6),
                        new FieldsPopupContent([new FieldInfo("createdAt",
                                    "et",
                                    "eligendi",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("group",
                                    "non",
                                    "possimus",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("category",
                                    "assumenda",
                                    "sint",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("status",
                                    "corrupti",
                                    "facere",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "iste incidunt et aut asperiores tenetur dolores",
                                "accusamus reiciendis quisquam")],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "status",
                                "maiores possimus consequatur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptatem aperiam ea",
                                "8ffdfd54-de99-28bf-9454-efb3e33b98cb",
                                () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "commodi"),
                        new ActionButton("dolorem libero consequatur",
                                "https://picsum.photos/640/480/?image=1006",
                                "212afb0d-f95e-c905-feec-6981eb88e82f",
                                () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "est"),
                        new ActionToggle("eos perspiciatis voluptatem",
                                "ff581815-cc7e-aa7f-3d44-b46827f916ff",
                                () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "quas"),
                        new ActionButton("iure rerum eligendi",
                                "https://picsum.photos/640/480/?image=899",
                                "f3f4db11-f98d-ded9-9279-be656a7a16b6",
                                () => { Console.WriteLine("hic"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "est")]),
                        new AttributesDictionary(),
                        true,
                        "perspiciatis",
                        "dolores",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quas",
                            4))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([9,
                    4,
                    8],
                    true,
                    499.2512,
                    49.8148,
                    "9.2.3.8",
                new Polygon([new MapPath([new MapPoint([397.1738,
                            885.5432]),
                        new MapPoint([7.7989,
                            868.9653,
                            846.6809]),
                        new MapPoint([48.4762,
                            852.1317,
                            126.8368,
                            515.4598])])],
                    new SpatialReference(7,
                            "dolorem",
                            "nemo",
                            "vero"),
                    new Point(-72.8372,
                            24.8840,
                            -127.9710,
                            -30.3930,
                            362.3495,
                        new SpatialReference(8,
                                "odit",
                                "mollitia",
                                "ut"),
                            true,
                            true,
                            807.8728),
                        true,
                        true,
                        true),
                    1,
                    ["nesciunt",
                        "recusandae"],
                    "impedit",
                    new DateTime(2012, 9, 16, 10, 9, 30),
                    488.1710,
                    9,
                    "magnam",
                    2),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([8,
                    9,
                    1,
                    3],
                    true,
                    713.0109,
                    104.3424,
                    "7.1.7.1",
                new Extent(93.6656,
                        88.2079,
                        -34.9855,
                        -11.1072,
                        365.6414,
                        418.0096,
                        373.8531,
                        91.1099,
                    new SpatialReference(4,
                            "dolor",
                            "harum",
                            "ut"),
                        true,
                        true),
                    9,
                    ["numquam",
                        "accusamus",
                        "dolorum",
                        "ducimus"],
                    "beatae",
                    new DateTime(2007, 10, 2, 5, 32, 20),
                    677.8092,
                    6,
                    "voluptatem",
                    8),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([3,
                    4,
                    3,
                    2],
                    true,
                    715.2647,
                    200.4940,
                    "6.2.4.2",
                new Polygon([new MapPath([new MapPoint([321.6114,
                            442.3475,
                            462.1613,
                            208.3073]),
                        new MapPoint([344.4276,
                            334.7957,
                            88.5050,
                            53.7888])]),
                        new MapPath([new MapPoint([605.9276,
                                238.7203,
                                766.3648]),
                            new MapPoint([267.8405,
                                809.4164])])],
                    new SpatialReference(5,
                            "repudiandae",
                            "omnis",
                            "eaque"),
                    new Point(-115.3012,
                            38.9929,
                            106.9442,
                            72.0442,
                            36.9159,
                        new SpatialReference(5,
                                "optio",
                                "sint",
                                "molestias"),
                            true,
                            true,
                            907.0603),
                        true,
                        true,
                        true),
                    2,
                    ["voluptatum",
                        "asperiores"],
                    "amet",
                    new DateTime(2022, 5, 19, 1, 53, 2),
                    668.3670,
                    2,
                    "illum",
                    8),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([2,
                    6,
                    1],
                    true,
                    568.4546,
                    271.9565,
                    "9.6.0.9",
                new Polygon([new MapPath([new MapPoint([930.8580,
                            342.1989,
                            128.6462,
                            113.3646]),
                        new MapPoint([872.4075,
                            852.9259,
                            305.6709]),
                        new MapPoint([242.5199,
                            939.8308]),
                        new MapPoint([579.4083,
                            81.1307])]),
                        new MapPath([new MapPoint([260.3622,
                                803.5918,
                                811.7736,
                                187.4295]),
                            new MapPoint([939.0427,
                                314.2252]),
                            new MapPoint([420.5013,
                                675.0709,
                                675.6491,
                                464.4898])]),
                        new MapPath([new MapPoint([389.3799,
                                782.4584,
                                820.1803,
                                13.8995]),
                            new MapPoint([819.8378,
                                613.1823,
                                12.6847,
                                298.5621]),
                            new MapPoint([983.7293,
                                820.4934,
                                913.2198]),
                            new MapPoint([62.6100,
                                116.5291])]),
                        new MapPath([new MapPoint([725.5238,
                                183.9637,
                                283.6249]),
                            new MapPoint([85.7612,
                                430.3303]),
                            new MapPoint([993.5855,
                                877.6093,
                                946.4387,
                                0.1678]),
                            new MapPoint([960.6499,
                                981.8872,
                                714.0284])])],
                    new SpatialReference(1,
                            "sit",
                            "voluptatem",
                            "eum"),
                    new Point(-90.9307,
                            -27.1044,
                            178.7426,
                            -86.4990,
                            994.9324,
                        new SpatialReference(2,
                                "autem",
                                "aut",
                                "excepturi"),
                            true,
                            true,
                            93.9567),
                        true,
                        true,
                        true),
                    3,
                    ["odit",
                        "error",
                        "sint"],
                    "nisi",
                    new DateTime(2022, 1, 4, 21, 27, 53),
                    18.1249,
                    5,
                    "sit",
                    5),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Lighten;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "pariatur consequatur cupiditate"),
                ElevationInfoMode.RelativeToScene,
                    25.8011,
                ElevationUnit.NauticalMiles);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("nulla",
                    1473283.0861),
                    new Effect("repellat",
                        26129262.5044),
                    new Effect("excepturi",
                        15709468.1189),
                    new Effect("a",
                        17171797.4824)],
                    true,
                new FeatureFilter(526.2483,
                    new Polygon([new MapPath([new MapPoint([13.9709,
                                871.8687,
                                900.3452,
                                421.3289]),
                            new MapPoint([498.1604,
                                87.5234,
                                899.9363]),
                            new MapPoint([505.4131,
                                557.3575,
                                748.1569,
                                770.4438])]),
                            new MapPath([new MapPoint([543.3426,
                                    708.7850,
                                    177.2614,
                                    709.3193]),
                                new MapPoint([239.6309,
                                    3.9230,
                                    805.5379,
                                    761.5680])]),
                            new MapPath([new MapPoint([894.5906,
                                    510.7037]),
                                new MapPoint([289.7975,
                                    895.2411,
                                    246.6268]),
                                new MapPoint([450.6168,
                                    910.9843,
                                    448.0646,
                                    347.7904])]),
                            new MapPath([new MapPoint([33.4369,
                                    840.5522,
                                    80.4814,
                                    233.7755]),
                                new MapPoint([150.2089,
                                    668.5666,
                                    167.9654,
                                    967.3676])])],
                        new SpatialReference(7,
                                "quis",
                                "reiciendis",
                                "laboriosam"),
                        new Point(161.6619,
                                -57.0677,
                                174.8304,
                                -39.1449,
                                679.0754,
                            new SpatialReference(7,
                                    "voluptatum",
                                    "modi",
                                    "molestiae"),
                                true,
                                true,
                                183.7597),
                            true,
                            true,
                            true),
                        [9,
                            8],
                    SpatialRelationship.Intersects,
                    new TimeExtent(new DateTime(2003, 7, 2, 1, 31, 39),
                            new DateTime(2004, 1, 9, 3, 31, 18)),
                        QueryUnits.UsNauticalMiles,
                        "Province = 'Ontario'"),
                    [new Effect("excepturi",
                        14448349.9956),
                        new Effect("et",
                            2613537.7508),
                        new Effect("soluta",
                            30308378.0745)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "name",
                    "distinctio",
                    "et eos eum et",
                    9,
                    true,
                    true,
                    new { Value = "commodi" },
                FieldValueType.PercentageOrRatio,
                new InheritedDomain("title")),
            new Field(default,
                    "category",
                    "asperiores",
                    "quia aut incidunt eveniet optio aut recusandae",
                    4,
                    true,
                    true,
                    new { Value = "quas" },
                FieldValueType.NameOrTitle,
                new RangeDomain("omnis",
                        "quia",
                        "title")),
            new Field(default,
                    "phone",
                    "autem",
                    "aut odit reprehenderit consequuntur incidunt at rerum",
                    3,
                    true,
                    true,
                    new { Value = "occaecati" },
                FieldValueType.Measurement,
                new RangeDomain("laboriosam",
                        "nemo",
                        "name")),
            new Field(default,
                    "name",
                    "doloribus",
                    "qui atque laborum molestiae sunt earum",
                    4,
                    true,
                    true,
                    new { Value = "reiciendis" },
                FieldValueType.NameOrTitle,
                new RangeDomain("alias",
                        "blanditiis",
                        "status"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-6.1422,
                    177.2492,
                    -71.7814,
                    18.8728,
                    31.9802,
                    582.3618,
                    87.1275,
                    10.4070,
                new SpatialReference(3,
                        "maiores",
                        "quam",
                        "eius"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Multipoint;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterStart,
                    "iure",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    27943536.7204,
                    16212.4809,
                    true,
                    new Dimension(741.1165),
                new TextSymbol("voluptates ab quo",
                    new MapColor(13, 80, 234),
                    new MapColor(223, 6, 69),
                        new Dimension(658.4207),
                    new MapFont(new Dimension(950.3267),
                            "Palatino",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        954.3598,
                    new MapColor(203, 108, 133),
                    new MapColor(181, 238, 9),
                        643.8429,
                    HorizontalAlignment.Center,
                        true,
                        870.7870,
                        new Dimension(646.3441),
                        true),
                    true,
                    "Province = 'Ontario'"),
            new Label(LabelPlacement.BelowCenter,
                    "est",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Parallel,
                    12119467.6308,
                    35254.1094,
                    true,
                    new Dimension(41.1379),
                new TextSymbol("dolorum occaecati sunt",
                    new MapColor(157, 105, 166),
                    new MapColor(47, 131, 183),
                        new Dimension(656.3565),
                    new MapFont(new Dimension(943.1791),
                            "Helvetica",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.None),
                        346.4580,
                    new MapColor(234, 1, 105),
                    new MapColor(120, 197, 146),
                        910.1500,
                    HorizontalAlignment.Center,
                        true,
                        993.9843,
                        new Dimension(388.5837),
                        true),
                    true,
                    "ObjectID = 1"),
            new Label(LabelPlacement.BelowEnd,
                    "maiores",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    46149644.1888,
                    37673.7240,
                    true,
                    new Dimension(339.3162),
                new TextSymbol("et quaerat natus",
                    new MapColor(49, 162, 20),
                    new MapColor(94, 172, 132),
                        new Dimension(76.0188),
                    new MapFont(new Dimension(562.4998),
                            "Courier New",
                        MapFontStyle.Oblique,
                        FontWeight.Bolder,
                        TextDecoration.LineThrough),
                        480.5361,
                    new MapColor(84, 90, 172),
                    new MapColor(211, 83, 149),
                        4.1142,
                    HorizontalAlignment.Right,
                        true,
                        790.0472,
                        new Dimension(605.5499),
                        true),
                    true,
                    "Province = 'Ontario'"),
            new Label(LabelPlacement.AboveAfter,
                    "blanditiis",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    7875146.0421,
                    48331.5451,
                    true,
                    new Dimension(22.8679),
                new TextSymbol("quis voluptas tenetur",
                    new MapColor(236, 214, 183),
                    new MapColor(41, 252, 5),
                        new Dimension(254.8159),
                    new MapFont(new Dimension(481.1678),
                            "Verdana",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        847.5095,
                    new MapColor(175, 142, 54),
                    new MapColor(44, 83, 74),
                        523.3293,
                    HorizontalAlignment.Left,
                        true,
                        712.3483,
                        new Dimension(201.1848),
                        true),
                    true,
                    "1 = 1")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("delectus",
                SortOrder.Descending,
                    "nihil"),
            new OrderedLayerOrderBy("ut",
                SortOrder.Descending,
                    "fuga"),
            new OrderedLayerOrderBy("placeat",
                SortOrder.Ascending,
                    "inventore")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("voluptate qui id",
                    "et",
                    ["minus",
                        "veritatis",
                        "qui"],
                [new FieldInfo("updatedAt",
                        "et",
                        "debitis",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.LongMonthDayYearShortTime24),
                        true,
                        true,
                    StatisticType.Var),
                new FieldInfo("email",
                        "sunt",
                        "vel",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.LongMonthDayYearLongTime24),
                        true,
                        true,
                    StatisticType.Count),
                new FieldInfo("updatedAt",
                        "cum",
                        "maiores",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.LongMonthDayYearLongTime24),
                        true,
                        true,
                    StatisticType.Min)],
                [new AttachmentsPopupContent("corporis ut beatae",
                        "atque aliquam quo voluptates omnis fugiat",
                        AttachmentsPopupContentDisplayType.Auto),
                new TextPopupContent("corrupti vel veritatis"),
                new MediaPopupContent("est nam incidunt",
                        "est neque fugiat similique cumque",
                    [new LineChartMediaInfo("voluptas sed quas",
                            "perferendis",
                            "enim qui eum",
                        new ChartMediaInfoValue(["maxime",
                                "ab",
                                "molestiae"],
                                "saepe",
                                "debitis",
                            [new ChartMediaInfoValueSeries("email",
                                    "repellendus",
                                    409.7693),
                            new ChartMediaInfoValueSeries("name",
                                    "autem",
                                    990.4253),
                            new ChartMediaInfoValueSeries("token",
                                    "alias",
                                    782.7937),
                            new ChartMediaInfoValueSeries("comment",
                                    "ea",
                                    326.8935)],
                            [new MapColor(71, 193, 89),
                            new MapColor(130, 11, 43),
                            new MapColor(220, 117, 71),
                            new MapColor(211, 19, 13)])),
                    new BarChartMediaInfo("iusto sit et",
                            "consequuntur",
                            "quas magni accusamus",
                        new ChartMediaInfoValue(["et",
                                "et",
                                "nobis"],
                                "eligendi",
                                "ut",
                            [new ChartMediaInfoValueSeries("group",
                                    "commodi",
                                    505.8701),
                            new ChartMediaInfoValueSeries("id",
                                    "non",
                                    769.4811),
                            new ChartMediaInfoValueSeries("updatedAt",
                                    "et",
                                    511.3329),
                            new ChartMediaInfoValueSeries("status",
                                    "delectus",
                                    618.9527)],
                            [new MapColor(30, 59, 99),
                            new MapColor(88, 248, 220)])),
                    new BarChartMediaInfo("repellat dolorum ut",
                            "veritatis",
                            "asperiores provident culpa",
                        new ChartMediaInfoValue(["rerum",
                                "quo",
                                "veritatis",
                                "nisi"],
                                "quis",
                                "et",
                            [new ChartMediaInfoValueSeries("password",
                                    "eum",
                                    19.7432),
                            new ChartMediaInfoValueSeries("token",
                                    "ea",
                                    390.9927),
                            new ChartMediaInfoValueSeries("token",
                                    "qui",
                                    588.0961),
                            new ChartMediaInfoValueSeries("avatar",
                                    "dolorem",
                                    598.9671)],
                            [new MapColor(169, 75, 231),
                            new MapColor(109, 252, 97)]))],
                        8),
                new RelationshipPopupContent("dolore saepe dolor",
                        "quisquam veritatis libero animi aut dolor enim",
                        9,
                        "officia",
                    [new RelatedRecordsInfoFieldOrder("doloremque",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("voluptatem",
                        OrderBy.Asc)],
                        3)],
                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "id",
                        "quo eligendi et",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "avatar",
                        "repellat quod quibusdam",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("quidem saepe odio",
                        "e2046ab3-922b-05b1-e36d-c8ce311bc400",
                        () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "category",
                        "cupiditate"),
                new ActionToggle("qui soluta voluptatibus",
                        "d00c5b50-0260-8f75-dab7-ba512a13cf8d",
                        () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "title",
                        "voluptas"),
                new ActionButton("nemo sit ipsum",
                        "https://picsum.photos/640/480/?image=693",
                        "91501c76-e50d-9877-e606-0b7b2043112e",
                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                        "comment",
                        true,
                        true,
                        true,
                        "qui"),
                new ActionToggle("omnis eius et",
                        "9f38cd1b-1825-8457-11b7-182c4a703a48",
                        () => { Console.WriteLine("facere"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "title",
                        "fuga")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "quis",
                    "sunt",
                    317.0051,
                    ["nostrum",
                        "vitae"],
                    new DateTime(2009, 10, 27, 19, 2, 42),
                    "ex",
                    "ad maxime voluptatibus voluptatum sed numquam",
                new Extent(-178.4573,
                        123.6633,
                        -14.9249,
                        44.9988,
                        485.1924,
                        814.8728,
                        827.6632,
                        392.2596,
                    new SpatialReference(9,
                            "ex",
                            "eos",
                            "et"),
                        true,
                        true),
                    ["quam",
                        "voluptatem"],
                    "recusandae",
                    new DateTime(2002, 10, 10, 2, 45, 18),
                    "password",
                    217.5865);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.Quantile,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(142, 50, 23),
                            new MapColor(148, 86, 96)),
                        new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(106, 78, 237),
                            new MapColor(123, 49, 54)),
                        new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(120, 108, 102),
                            new MapColor(247, 85, 151))]),
                        885.4305,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(896.1163,
                                622.7433),
                        new AuthoringInfoField1ClassBreakInfos(465.1507,
                                129.7103),
                        new AuthoringInfoField1ClassBreakInfos(59.2787,
                                268.4399),
                        new AuthoringInfoField1ClassBreakInfos(160.9407,
                                820.9199)],
                            "iure",
                            "quos",
                            "consectetur"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(537.1829,
                                124.7794)],
                            "neque",
                            "et",
                            "neque"),
                        ["qui",
                            "maxime",
                            "sit",
                            "eligendi"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "dolores",
                        true,
                    LengthUnit.Decimeters,
                        578.1164,
                        529.1545,
                        340.4052,
                        309.4634),
                new PictureFillSymbol("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0",
                    new Dimension(448.7249),
                    new Dimension(566.6484),
                    new Dimension(464.9197),
                    new Dimension(499.3889),
                    -130.6337,
                    40.9935,
                    new Outline(new MapColor(36, 47, 134),
                        new Dimension(642.4726),
                        SimpleLineSymbolStyle.ShortDash,
                        Cap.Butt,
                        Join.Round,
                        new LineSymbolMarker(new MapColor(152, 138, 60),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Diamond),
                        27.9830),
                    new MapColor(14, 12, 83)),
                    "magni",
                    new DefaultSymbol(),
                    "dicta",
                    "eaque",
                    "aut",
                    "esse",
                new UniqueValueRendererLegendOptions("nam consequatur libero"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("quam",
                        new TextSymbol("ipsa omnis optio",
                            new MapColor(58, 195, 125),
                            new MapColor(253, 215, 227),
                                new Dimension(541.3257),
                            new MapFont(new Dimension(209.6671),
                                    "Georgia",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                65.7356,
                            new MapColor(242, 249, 176),
                            new MapColor(239, 10, 172),
                                859.6723,
                            HorizontalAlignment.Left,
                                true,
                                695.8678,
                                new Dimension(625.0857),
                                true),
                        [new UniqueValue("repellat",
                                "repellendus",
                                "enim"),
                        new UniqueValue("eligendi",
                                "veniam",
                                "quibusdam"),
                        new UniqueValue("repudiandae",
                                "expedita",
                                "magni")]),
                    new UniqueValueClass("ut",
                        new TextSymbol("placeat incidunt sed",
                            new MapColor(231, 14, 190),
                            new MapColor(191, 206, 105),
                                new Dimension(425.4037),
                            new MapFont(new Dimension(109.0472),
                                    "Bookman",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                807.7710,
                            new MapColor(17, 240, 127),
                            new MapColor(155, 222, 53),
                                638.3908,
                            HorizontalAlignment.Right,
                                true,
                                529.7898,
                                new Dimension(569.1337),
                                true),
                        [new UniqueValue("dolorem",
                                "odio",
                                "dolorem")])],
                        "quia")],
                [new UniqueValueInfo("quia",
                    new TextSymbol("eum aliquid eaque",
                        new MapColor(236, 254, 206),
                        new MapColor(24, 46, 147),
                            new Dimension(658.7062),
                        new MapFont(new Dimension(796.1513),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            402.7351,
                        new MapColor(164, 108, 80),
                        new MapColor(133, 189, 171),
                            1.6714,
                        HorizontalAlignment.Left,
                            true,
                            627.5098,
                            new Dimension(337.7652),
                            true),
                        "neque"),
                new UniqueValueInfo("in",
                    new TextSymbol("est vero earum",
                        new MapColor(21, 212, 203),
                        new MapColor(245, 43, 169),
                            new Dimension(412.3099),
                        new MapFont(new Dimension(532.5077),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            894.8486,
                        new MapColor(199, 226, 240),
                        new MapColor(140, 29, 140),
                            695.4091,
                        HorizontalAlignment.Left,
                            true,
                            52.2841,
                            new Dimension(388.6547),
                            true),
                        "quisquam"),
                new UniqueValueInfo("autem",
                    new TextSymbol("consequatur sint nam",
                        new MapColor(183, 179, 43),
                        new MapColor(179, 153, 131),
                            new Dimension(383.5811),
                        new MapFont(new Dimension(5.1324),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            677.3568,
                        new MapColor(194, 168, 45),
                        new MapColor(215, 240, 69),
                            860.5237,
                        HorizontalAlignment.Center,
                            true,
                            293.4145,
                            new Dimension(740.0636),
                            true),
                        "velit")],
                    "sunt",
                    "reiciendis quibusdam aliquid");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(2,
                    "magnam",
                    "occaecati",
                    "labore");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("iusto nesciunt dolore facere ut",
                DrawingTool.UpArrow,
                    "id",
                new Graphic(new Polygon([new MapPath([new MapPoint([504.3063,
                                723.0817,
                                108.9334]),
                            new MapPoint([624.4246,
                                650.1768]),
                            new MapPoint([166.3117,
                                985.2177]),
                            new MapPoint([463.3150,
                                174.1516,
                                130.7781])]),
                            new MapPath([new MapPoint([373.0114,
                                    392.6350,
                                    903.7795]),
                                new MapPoint([344.4518,
                                    546.2295,
                                    685.0768]),
                                new MapPoint([528.0989,
                                    952.0079])]),
                            new MapPath([new MapPoint([306.8278,
                                    88.6108,
                                    694.3213]),
                                new MapPoint([641.5553,
                                    977.8386]),
                                new MapPoint([130.8605,
                                    604.7508,
                                    377.2131])])],
                        new SpatialReference(1,
                                "sed",
                                "aperiam",
                                "laboriosam"),
                        new Point(1.3718,
                                32.2913,
                                -120.5353,
                                -14.8033,
                                134.3898,
                            new SpatialReference(6,
                                    "velit",
                                    "debitis",
                                    "velit"),
                                true,
                                true,
                                385.7375),
                            true,
                            true,
                            true),
                    new TextSymbol("delectus aut nemo",
                        new MapColor(222, 197, 228),
                        new MapColor(102, 11, 32),
                            new Dimension(401.7301),
                        new MapFont(new Dimension(279.2522),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            270.9795,
                        new MapColor(17, 247, 254),
                        new MapColor(221, 244, 197),
                            65.0400,
                        HorizontalAlignment.Right,
                            true,
                            257.3667,
                            new Dimension(812.0260),
                            true),
                    new PopupTemplate("accusamus saepe laboriosam",
                            "labore",
                            ["id",
                                "quidem"],
                        [new FieldInfo("updatedAt",
                                "ut",
                                "necessitatibus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("category",
                                "enim",
                                "fugiat",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("updatedAt",
                                "vero",
                                "dolores",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new TextPopupContent("quasi doloribus praesentium"),
                        new AttachmentsPopupContent("molestiae illum ipsam",
                                "aliquid temporibus aut nihil sit",
                                AttachmentsPopupContentDisplayType.Auto),
                        new MediaPopupContent("aliquid eum reiciendis",
                                "nulla rerum enim quas",
                            [new BarChartMediaInfo("facilis dolor autem",
                                    "iure",
                                    "quo iure velit",
                                new ChartMediaInfoValue(["officia",
                                        "natus"],
                                        "non",
                                        "sed",
                                    [new ChartMediaInfoValueSeries("createdAt",
                                            "laborum",
                                            593.3422),
                                    new ChartMediaInfoValueSeries("id",
                                            "saepe",
                                            827.8268),
                                    new ChartMediaInfoValueSeries("status",
                                            "non",
                                            305.5478)],
                                    [new MapColor(226, 243, 238),
                                    new MapColor(151, 94, 241),
                                    new MapColor(169, 133, 208)])),
                            new LineChartMediaInfo("vel ipsum debitis",
                                    "qui",
                                    "totam sit dicta",
                                new ChartMediaInfoValue(["non",
                                        "hic",
                                        "sit",
                                        "provident"],
                                        "itaque",
                                        "modi",
                                    [new ChartMediaInfoValueSeries("avatar",
                                            "vel",
                                            172.2130),
                                    new ChartMediaInfoValueSeries("password",
                                            "similique",
                                            131.9646),
                                    new ChartMediaInfoValueSeries("group",
                                            "laborum",
                                            804.2225)],
                                    [new MapColor(206, 122, 179),
                                    new MapColor(27, 236, 82),
                                    new MapColor(70, 238, 124),
                                    new MapColor(74, 104, 212)])),
                            new PieChartMediaInfo("quis quae quia",
                                    "tempora",
                                    "voluptates officia voluptate",
                                new ChartMediaInfoValue(["tempora",
                                        "perferendis",
                                        "quo"],
                                        "ut",
                                        "corporis",
                                    [new ChartMediaInfoValueSeries("avatar",
                                            "quia",
                                            63.6437)],
                                    [new MapColor(117, 204, 247),
                                    new MapColor(112, 214, 243)]))],
                                9)],
                        [new ExpressionInfo("return $feature.Name;",
                                "category",
                                "sed laboriosam esse",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "name",
                                "rem animi ab",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature['FieldName'];",
                                "comment",
                                "corporis error quis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("numquam recusandae laudantium",
                                "https://picsum.photos/640/480/?image=269",
                                "24ebd6d0-3d0d-4c40-ca48-8339f5c71115",
                                () => { Console.WriteLine("reiciendis"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "facilis"),
                        new ActionButton("in tempora deleniti",
                                "https://picsum.photos/640/480/?image=812",
                                "59a1de32-36e4-13ee-ed01-a10815c85acc",
                                () => { Console.WriteLine("quas"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "reprehenderit"),
                        new ActionButton("blanditiis consectetur deleniti",
                                "https://picsum.photos/640/480/?image=757",
                                "100fbbe5-093b-8533-e234-c228e7509e13",
                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "voluptatibus"),
                        new ActionButton("nesciunt culpa est",
                                "https://picsum.photos/640/480/?image=811",
                                "f50da9ef-5abf-6e0e-7459-180ff5012ebf",
                                () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "voluptatem")]),
                        new AttributesDictionary(),
                        true,
                        "ut",
                        "enim",
                        new GraphicOrigin(Guid.NewGuid(),
                            "eveniet",
                            3)),
                    new Thumbnail("nostrum",
                        "illo",
                        187.2277,
                        91.4894)),
            new FeatureTemplate("necessitatibus voluptas modi eaque ut voluptatum sed",
                DrawingTool.LeftArrow,
                    "email",
                new Graphic(new Polygon([new MapPath([new MapPoint([590.7259,
                                361.6775]),
                            new MapPoint([798.7871,
                                317.1214,
                                374.2207,
                                761.1148]),
                            new MapPoint([335.6515,
                                915.6788,
                                239.5845,
                                192.7774]),
                            new MapPoint([893.4472,
                                208.6160])]),
                            new MapPath([new MapPoint([854.1285,
                                    711.2228,
                                    15.8234,
                                    97.5324]),
                                new MapPoint([994.5466,
                                    850.5908,
                                    471.1780]),
                                new MapPoint([45.1104,
                                    294.1086,
                                    400.8247,
                                    789.6911]),
                                new MapPoint([699.5719,
                                    733.7754])])],
                        new SpatialReference(6,
                                "necessitatibus",
                                "quo",
                                "nihil"),
                        new Point(-101.4511,
                                -64.3903,
                                -68.2459,
                                -40.7163,
                                591.4309,
                            new SpatialReference(5,
                                    "vitae",
                                    "temporibus",
                                    "dignissimos"),
                                true,
                                true,
                                225.5653),
                            true,
                            true,
                            true),
                    new TextSymbol("adipisci laudantium et",
                        new MapColor(65, 248, 45),
                        new MapColor(84, 150, 130),
                            new Dimension(821.6306),
                        new MapFont(new Dimension(738.2673),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            430.5459,
                        new MapColor(31, 254, 139),
                        new MapColor(82, 205, 41),
                            976.8205,
                        HorizontalAlignment.Left,
                            true,
                            420.3293,
                            new Dimension(512.4732),
                            true),
                    new PopupTemplate("cum iste aut",
                            "cum",
                            ["amet",
                                "et",
                                "consequatur"],
                        [new FieldInfo("avatar",
                                "suscipit",
                                "rerum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new FieldsPopupContent([new FieldInfo("status",
                                    "ut",
                                    "qui",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("updatedAt",
                                    "delectus",
                                    "natus",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "tempora saepe est sit",
                                "corrupti debitis odio"),
                        new TextPopupContent("iure quis aut")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "token",
                                "veritatis aliquam est",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "comment",
                                "magni veritatis inventore",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "token",
                                "sit minima nihil",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptatem velit id",
                                "a3f2ebc4-c63e-aa17-501c-ba379bd8313c",
                                () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "quo"),
                        new ActionToggle("magnam ad eius",
                                "a7cc0183-a2c2-bc28-b29f-8a6f41dc4e84",
                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "dolorem")]),
                        new AttributesDictionary(),
                        true,
                        "sunt",
                        "autem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aspernatur",
                            4)),
                    new Thumbnail("culpa",
                        "enim",
                        219.2606,
                        148.3682)),
            new FeatureTemplate("laboriosam consequatur pariatur harum veritatis commodi",
                DrawingTool.Point,
                    "category",
                new Graphic(new Polyline([new MapPath([new MapPoint([666.1920,
                                146.6964,
                                489.7467]),
                            new MapPoint([532.1568,
                                285.6130,
                                352.4116])]),
                            new MapPath([new MapPoint([202.2519,
                                    527.7426,
                                    994.7166]),
                                new MapPoint([537.3034,
                                    584.3149,
                                    761.1780]),
                                new MapPoint([905.2643,
                                    85.0953,
                                    75.4008,
                                    470.4040]),
                                new MapPoint([208.8594,
                                    298.4583])])],
                        new SpatialReference(2,
                                "eos",
                                "deserunt",
                                "autem"),
                            true,
                            true),
                    new TextSymbol("voluptates cupiditate dolores",
                        new MapColor(49, 245, 112),
                        new MapColor(68, 33, 168),
                            new Dimension(488.5882),
                        new MapFont(new Dimension(584.9513),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            992.7050,
                        new MapColor(113, 69, 9),
                        new MapColor(116, 174, 101),
                            396.5405,
                        HorizontalAlignment.Center,
                            true,
                            297.5628,
                            new Dimension(351.8561),
                            true),
                    new PopupTemplate("minima quo tempora",
                            "ullam",
                            ["ab",
                                "illum",
                                "repellat",
                                "eaque"],
                        [new FieldInfo("title",
                                "deleniti",
                                "cupiditate",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new AttachmentsPopupContent("minima enim veritatis",
                                "quisquam dolorum id deserunt",
                                AttachmentsPopupContentDisplayType.Preview),
                        new MediaPopupContent("alias praesentium voluptatum",
                                "molestiae in quibusdam ipsam aut adipisci",
                            [new PieChartMediaInfo("repellat sit accusamus",
                                    "sunt",
                                    "sunt reiciendis amet",
                                new ChartMediaInfoValue(["fugit",
                                        "et"],
                                        "quidem",
                                        "optio",
                                    [new ChartMediaInfoValueSeries("token",
                                            "voluptas",
                                            679.7038),
                                    new ChartMediaInfoValueSeries("group",
                                            "nostrum",
                                            366.7401)],
                                    [new MapColor(31, 215, 95),
                                    new MapColor(230, 234, 66),
                                    new MapColor(237, 170, 188),
                                    new MapColor(220, 154, 246)])),
                            new LineChartMediaInfo("sed rerum quos",
                                    "suscipit",
                                    "quia harum explicabo",
                                new ChartMediaInfoValue(["mollitia",
                                        "eius",
                                        "recusandae"],
                                        "id",
                                        "numquam",
                                    [new ChartMediaInfoValueSeries("name",
                                            "non",
                                            562.3397),
                                    new ChartMediaInfoValueSeries("name",
                                            "illum",
                                            699.0591),
                                    new ChartMediaInfoValueSeries("title",
                                            "consequatur",
                                            15.6482)],
                                    [new MapColor(156, 213, 66),
                                    new MapColor(20, 60, 185),
                                    new MapColor(19, 46, 37)])),
                            new LineChartMediaInfo("est illo facere",
                                    "cum",
                                    "cumque nobis sapiente",
                                new ChartMediaInfoValue(["ex",
                                        "ipsam",
                                        "sapiente",
                                        "minima"],
                                        "aliquam",
                                        "in",
                                    [new ChartMediaInfoValueSeries("title",
                                            "labore",
                                            206.4034)],
                                    [new MapColor(204, 32, 134),
                                    new MapColor(244, 132, 173),
                                    new MapColor(126, 77, 115)]))],
                                2),
                        new FieldsPopupContent([new FieldInfo("group",
                                    "ullam",
                                    "occaecati",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("password",
                                    "voluptatem",
                                    "quidem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("name",
                                    "ut",
                                    "sed",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("phone",
                                    "aliquid",
                                    "qui",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "reprehenderit voluptate aspernatur sunt dolor deleniti doloribus",
                                "fugiat sed deleniti")],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "name",
                                "non dolor consequatur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("est fugit occaecati",
                                "5e920012-8d56-0b02-2e1d-37601670d324",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "fugiat"),
                        new ActionButton("minus natus praesentium",
                                "https://picsum.photos/640/480/?image=1010",
                                "f592d7a5-d0df-2f6a-189c-4372fa210bb4",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "temporibus"),
                        new ActionButton("omnis et ex",
                                "https://picsum.photos/640/480/?image=399",
                                "ac0c7c28-59f3-c3fb-cd3d-2a4984bf7178",
                                () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "voluptates")]),
                        new AttributesDictionary(),
                        true,
                        "sed",
                        "molestiae",
                        new GraphicOrigin(Guid.NewGuid(),
                            "consequatur",
                            1)),
                    new Thumbnail("tempora",
                        "dignissimos",
                        266.9390,
                        288.2224)),
            new FeatureTemplate("iste animi et sequi voluptas tempore rerum",
                DrawingTool.Rectangle,
                    "status",
                new Graphic(new Polyline([new MapPath([new MapPoint([542.5548,
                                252.7858,
                                120.2501,
                                235.1314]),
                            new MapPoint([995.6259,
                                748.3806,
                                926.0564]),
                            new MapPoint([812.4334,
                                85.8929,
                                369.1602,
                                914.3616])]),
                            new MapPath([new MapPoint([568.1843,
                                    987.3973,
                                    454.2546,
                                    244.0721]),
                                new MapPoint([94.6901,
                                    876.7732]),
                                new MapPoint([24.8598,
                                    126.1172])]),
                            new MapPath([new MapPoint([642.0689,
                                    408.7490,
                                    421.9579]),
                                new MapPoint([972.2974,
                                    134.4642,
                                    85.7816]),
                                new MapPoint([755.2363,
                                    697.7994,
                                    739.0049,
                                    316.0173]),
                                new MapPoint([260.0076,
                                    37.2752,
                                    431.0470,
                                    252.8888])]),
                            new MapPath([new MapPoint([24.3790,
                                    354.5625,
                                    643.4997]),
                                new MapPoint([52.9963,
                                    771.8109])])],
                        new SpatialReference(6,
                                "aspernatur",
                                "rerum",
                                "quas"),
                            true,
                            true),
                    new TextSymbol("corrupti laudantium consectetur",
                        new MapColor(121, 167, 158),
                        new MapColor(227, 61, 179),
                            new Dimension(400.1042),
                        new MapFont(new Dimension(75.1709),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            124.6839,
                        new MapColor(156, 237, 197),
                        new MapColor(183, 93, 126),
                            265.6346,
                        HorizontalAlignment.Right,
                            true,
                            941.1381,
                            new Dimension(787.2545),
                            true),
                    new PopupTemplate("sit corporis fugit",
                            "est",
                            ["eaque",
                                "voluptas",
                                "aut",
                                "aliquid"],
                        [new FieldInfo("category",
                                "maiores",
                                "sint",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("comment",
                                "est",
                                "in",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("aperiam velit ex",
                                "ea quaerat ullam et eum et",
                                7,
                                "veniam",
                            [new RelatedRecordsInfoFieldOrder("facere",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("dolorem",
                                OrderBy.Asc)],
                                5),
                        new RelationshipPopupContent("consequatur quo voluptatibus",
                                "quia suscipit sit aut",
                                3,
                                "officia",
                            [new RelatedRecordsInfoFieldOrder("inventore",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("quae",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("consequuntur",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("blanditiis",
                                OrderBy.Desc)],
                                9),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                    "iste",
                                    "quo et aspernatur"))],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "phone",
                                "exercitationem dolorem eum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "name",
                                "sunt ut et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "token",
                                "voluptate dolores deleniti",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("odit nam unde",
                                "https://picsum.photos/640/480/?image=884",
                                "0e80f7e7-f3c4-bb7d-05fd-ffa531de870f",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "in"),
                        new ActionButton("dolore ut quis",
                                "https://picsum.photos/640/480/?image=512",
                                "89373204-d7e7-b332-d1e7-452476f7dcef",
                                () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "quis"),
                        new ActionButton("pariatur voluptatem mollitia",
                                "https://picsum.photos/640/480/?image=114",
                                "603d83df-5621-7c09-7aaa-0f8dc3420091",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "soluta")]),
                        new AttributesDictionary(),
                        true,
                        "atque",
                        "corrupti",
                        new GraphicOrigin(Guid.NewGuid(),
                            "temporibus",
                            4)),
                    new Thumbnail("et",
                        "nostrum",
                        171.9404,
                        231.5219))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2010, 6, 14, 5, 53, 4),
                    new DateTime(2023, 7, 22, 4, 37, 30));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("possimus",
                    "maiores",
                new TimeExtent(new DateTime(2017, 5, 21, 12, 36, 10),
                        new DateTime(2012, 3, 20, 9, 2, 55)),
                new TimeInterval(TemporalTime.Decades,
                        231.3313),
                    [new DateTime(2021, 11, 23, 19, 22, 1),
                        new DateTime(2014, 11, 24, 2, 42, 44),
                        new DateTime(2006, 10, 6, 1, 28, 29),
                        new DateTime(2003, 8, 25, 4, 57, 18)],
                    "Europe/Belgrade",
                    "numquam");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Days,
                    168.9816);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2009, 8, 6, 15, 17, 58),
                    new DateTime(2018, 10, 23, 16, 8, 43));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
