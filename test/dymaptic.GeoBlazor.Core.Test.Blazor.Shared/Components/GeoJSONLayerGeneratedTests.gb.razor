@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("in")"
                        Title="@("sed in ipsa")"
                        Opacity="@(0.3865)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        BlendMode="@(BlendMode.Difference)"
                        DefinitionExpression="@("sit")"
                        DisplayField="@("minima")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("aliquid",
                            12025065.7848))"
                        FullExtent="@(new Extent(-32.8250,
                                110.8724,
                                88.0107,
                                -80.1979,
                                603.7531,
                                578.0278,
                                724.8491,
                                350.4618,
                            new SpatialReference(1,
                                    "eligendi",
                                    "ipsa",
                                    "est"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Multipoint)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(46994680.3327)"
                        MinScale="@(23339.4348)"
                        ObjectIdField="@("et")"
                        OutFields="@(["eaque",
                            "est"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(787.4911)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(2,
                                "velit",
                                "omnis",
                                "non"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Milliseconds)"
                            Value="@(914.8546)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("in")"
                            EndField="@("non")"
                            Stops="@([new DateTime(2000, 7, 11, 19, 34, 33),
                                new DateTime(2009, 5, 3, 7, 19, 8)])"
                            TimeZone="@("Australia/Perth")"
                            TrackIdField="@("molestiae")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Decades)"
                                Value="@(333.7300)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2019, 1, 22, 12, 15, 31))"
                                End="@(new DateTime(2013, 5, 15, 5, 42, 31))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2010, 11, 4, 20, 33, 28))"
                            End="@(new DateTime(2018, 1, 19, 21, 5, 40))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("et quam debitis itaque consequatur magnam enim")"
                            DrawingTool="@(DrawingTool.Point)"
                            Name="@("status")"
                            Prototype="@(new Graphic(new Extent(-20.9031,
                                        15.1185,
                                        55.7914,
                                        86.7890,
                                        480.3167,
                                        89.9799,
                                        321.8153,
                                        636.6956,
                                    new SpatialReference(5,
                                            "sint",
                                            "maxime",
                                            "non"),
                                        true,
                                        true),
                                new TextSymbol("iure aut quo",
                                    new MapColor(225, 143, 171),
                                    new MapColor(169, 199, 162),
                                        new Dimension(270.0579),
                                    new MapFont(new Dimension(864.5978),
                                            "Georgia",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        658.2884,
                                    new MapColor(111, 178, 205),
                                    new MapColor(54, 59, 203),
                                        347.7927,
                                    HorizontalAlignment.Left,
                                        true,
                                        15.7711,
                                        new Dimension(810.8816),
                                        true),
                                new PopupTemplate("quaerat consequatur aspernatur",
                                        "debitis",
                                        ["exercitationem",
                                            "voluptatum",
                                            "voluptatibus"],
                                    [new FieldInfo("category",
                                            "enim",
                                            "molestiae",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("email",
                                            "officia",
                                            "deleniti",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateLe),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("title",
                                            "est",
                                            "voluptas",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("phone",
                                            "et",
                                            "adipisci",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                    [new MediaPopupContent("voluptas sed dicta",
                                            "aut animi non laudantium eligendi omnis aspernatur",
                                        [new ColumnChartMediaInfo("voluptas numquam nihil",
                                                "rerum",
                                                "natus sequi aut",
                                            new ChartMediaInfoValue(["magnam",
                                                    "quaerat",
                                                    "magnam",
                                                    "laboriosam"],
                                                    "ea",
                                                    "ad",
                                                [new ChartMediaInfoValueSeries("group",
                                                        "labore",
                                                        234.0707),
                                                new ChartMediaInfoValueSeries("updatedAt",
                                                        "officiis",
                                                        466.9173)],
                                                [new MapColor(135, 176, 9)])),
                                        new PieChartMediaInfo("soluta et mollitia",
                                                "qui",
                                                "eaque nemo eligendi",
                                            new ChartMediaInfoValue(["veritatis",
                                                    "repudiandae"],
                                                    "dolores",
                                                    "veniam",
                                                [new ChartMediaInfoValueSeries("name",
                                                        "alias",
                                                        134.8260),
                                                new ChartMediaInfoValueSeries("comment",
                                                        "quo",
                                                        27.8784),
                                                new ChartMediaInfoValueSeries("comment",
                                                        "ut",
                                                        994.7877),
                                                new ChartMediaInfoValueSeries("email",
                                                        "magnam",
                                                        57.1003)],
                                                [new MapColor(207, 170, 139),
                                                new MapColor(200, 235, 92),
                                                new MapColor(59, 252, 249)]))],
                                            6),
                                    new FieldsPopupContent([new FieldInfo("avatar",
                                                "blanditiis",
                                                "repellendus",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.DayShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("avatar",
                                                "earum",
                                                "est",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("avatar",
                                                "facere",
                                                "dicta",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Max)],
                                            "eum maiores quibusdam temporibus sunt",
                                            "rem consectetur ut"),
                                    new AttachmentsPopupContent("optio aut rerum",
                                            "laborum qui voluptatibus soluta voluptas sequi in",
                                            AttachmentsPopupContentDisplayType.Preview),
                                    new MediaPopupContent("iusto molestias et",
                                            "consequuntur quia saepe amet enim veritatis sed",
                                        [new ColumnChartMediaInfo("numquam modi consectetur",
                                                "corrupti",
                                                "excepturi sed ut",
                                            new ChartMediaInfoValue(["cum",
                                                    "nulla"],
                                                    "laboriosam",
                                                    "quaerat",
                                                [new ChartMediaInfoValueSeries("phone",
                                                        "vel",
                                                        366.5563),
                                                new ChartMediaInfoValueSeries("phone",
                                                        "et",
                                                        726.6745)],
                                                [new MapColor(54, 88, 48),
                                                new MapColor(6, 239, 164)]))],
                                            7)],
                                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "password",
                                            "dolor suscipit ratione",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "group",
                                            "ipsa pariatur provident",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("est consequatur maiores",
                                            "https://picsum.photos/640/480/?image=544",
                                            "4a60e19a-151c-adb4-f82d-b58a51c1aa6d",
                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                            "name",
                                            true,
                                            true,
                                            true,
                                            "in"),
                                    new ActionToggle("quis repellat quia",
                                            "7ad8ca82-5eee-9f11-3f99-8782256ce64e",
                                            () => { Console.WriteLine("totam"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "password",
                                            "qui"),
                                    new ActionButton("consequatur atque earum",
                                            "https://picsum.photos/640/480/?image=848",
                                            "ccbf2aa7-9ef9-88ff-0277-60cbe67152e3",
                                            () => { Console.WriteLine("distinctio"); return Task.CompletedTask; },
                                            "token",
                                            true,
                                            true,
                                            true,
                                            "distinctio")]),
                                    new AttributesDictionary(),
                                    true,
                                    "ut",
                                    "dignissimos",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "quibusdam",
                                        3)))"
                            Thumbnail="@(new Thumbnail("sit",
                                "qui",
                                247.4980,
                                204.5313))">
                        </FeatureTemplate>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(224, 122, 195),
                                        new MapColor(208, 192, 88))]),
                                    440.0505,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(898.0822,
                                            262.3891),
                                    new AuthoringInfoField1ClassBreakInfos(878.0532,
                                            614.6587),
                                    new AuthoringInfoField1ClassBreakInfos(334.6689,
                                            299.9311),
                                    new AuthoringInfoField1ClassBreakInfos(939.6452,
                                            433.2711)],
                                        "et",
                                        "modi",
                                        "qui"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(598.5104,
                                            518.1539),
                                    new AuthoringInfoField1ClassBreakInfos(780.5728,
                                            911.3444),
                                    new AuthoringInfoField1ClassBreakInfos(885.6184,
                                            202.3289),
                                    new AuthoringInfoField1ClassBreakInfos(964.5006,
                                            436.6873)],
                                        "autem",
                                        "laudantium",
                                        "et"),
                                    ["voluptatibus",
                                        "possimus"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "omnis",
                                    true,
                                LengthUnit.NauticalMiles,
                                    58.5233,
                                    671.2782,
                                    799.8760,
                                    245.5964))">
                        </SimpleRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("dolor voluptatibus quo")"
                            StringContent="@("nemo")"
                            OutFields="@(["animi",
                                "quidem",
                                "esse",
                                "dolorum"])"
                            FieldInfos="@([new FieldInfo("name",
                                    "doloremque",
                                    "sit",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("title",
                                    "voluptatibus",
                                    "vero",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Var)])"
                            Content="@([new MediaPopupContent("sed similique dolor",
                                    "est voluptatem cupiditate voluptates enim dolor doloremque",
                                [new PieChartMediaInfo("ut quas magni",
                                        "est",
                                        "magni voluptate voluptas",
                                    new ChartMediaInfoValue(["quibusdam",
                                            "officiis",
                                            "voluptatem",
                                            "non"],
                                            "et",
                                            "similique",
                                        [new ChartMediaInfoValueSeries("avatar",
                                                "adipisci",
                                                328.2920)],
                                        [new MapColor(116, 5, 45),
                                        new MapColor(252, 233, 251)])),
                                new ImageMediaInfo("vel eligendi commodi",
                                        "eum",
                                        "et sed labore",
                                    new ImageMediaInfoValue("http://henri.org",
                                            "http://iliana.com"),
                                        748.8156),
                                new ImageMediaInfo("sed quas unde",
                                        "placeat",
                                        "commodi quasi iusto",
                                    new ImageMediaInfoValue("http://margarete.org",
                                            "http://jakob.com"),
                                        976.3687)],
                                    5),
                            new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "repellendus",
                                        "ratione dolor nihil"))])"
                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                    "avatar",
                                    "beatae harum qui",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature['FieldName'];",
                                    "phone",
                                    "culpa ducimus consequatur",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "email",
                                    "ratione sit eum",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("et culpa et",
                                    "https://picsum.photos/640/480/?image=835",
                                    "020baf72-9ac1-4190-e07f-92be4f9af26e",
                                    () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                    "avatar",
                                    true,
                                    true,
                                    true,
                                    "a"),
                            new ActionToggle("et doloribus itaque",
                                    "c9695100-ce25-9c1c-6ce9-240b6a36b798",
                                    () => { Console.WriteLine("aliquid"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "email",
                                    "pariatur")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("cumque")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("magnam")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AboveAfter)"
                            LabelExpression="@("libero")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(9252555.8739)"
                            MinScale="@(37072.3334)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(57.6277))"
                            Symbol="@(new TextSymbol("explicabo porro hic",
                                new MapColor(134, 47, 46),
                                new MapColor(103, 91, 13),
                                    new Dimension(170.0901),
                                new MapFont(new Dimension(268.3055),
                                        "Georgia",
                                    MapFontStyle.Italic,
                                    FontWeight.Lighter,
                                    TextDecoration.LineThrough),
                                    123.7949,
                                new MapColor(98, 226, 252),
                                new MapColor(102, 21, 182),
                                    346.1587,
                                HorizontalAlignment.Right,
                                    true,
                                    607.9054,
                                    new Dimension(559.0147),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Province = 'Ontario'")">
                        </Label>
                        <Field 
                            Name="@("status")"
                            Alias="@("quam")"
                            Description="@("sit corrupti vitae animi nisi sint")"
                            Length="@(9)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "laboriosam" })"
                            ValueType="@(FieldValueType.NameOrTitle)"
                            Domain="@(new InheritedDomain("token"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("eaque",
                                17531089.3664),
                                new Effect("assumenda",
                                    39284566.6197)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(38.7834,
                                new Polyline([new MapPath([new MapPoint([986.8854,
                                            883.9527,
                                            241.1842,
                                            43.0422]),
                                        new MapPoint([891.1038,
                                            536.9786])]),
                                        new MapPath([new MapPoint([871.6460,
                                                80.2042]),
                                            new MapPoint([601.5826,
                                                990.7458,
                                                130.3544]),
                                            new MapPoint([329.2978,
                                                744.7562,
                                                289.8733]),
                                            new MapPoint([440.6799,
                                                635.0026,
                                                262.5035,
                                                729.3342])]),
                                        new MapPath([new MapPoint([482.7779,
                                                114.9252]),
                                            new MapPoint([914.1920,
                                                569.6236,
                                                30.5822,
                                                321.4479]),
                                            new MapPoint([545.8722,
                                                285.5544,
                                                552.3749])])],
                                    new SpatialReference(3,
                                            "tenetur",
                                            "quae",
                                            "nam"),
                                        true,
                                        true),
                                    [7,
                                        5,
                                        1],
                                SpatialRelationship.Intersects,
                                new TimeExtent(new DateTime(2015, 6, 6, 20, 36, 45),
                                        new DateTime(2013, 6, 16, 12, 54, 39)),
                                    QueryUnits.UsNauticalMiles,
                                    "ObjectID = 1"))"
                            IncludedEffect="@([new Effect("sequi",
                                8778564.9544),
                                new Effect("voluptatibus",
                                    30945470.5250),
                                new Effect("voluptate",
                                    21134063.2511),
                                new Effect("quas",
                                    30176235.2325)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "eligendi odit dolorem"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(521.2468)"
                            Unit="@(ElevationUnit.Decimeters)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polyline([new MapPath([new MapPoint([903.1007,
                                175.6212]),
                            new MapPoint([359.5600,
                                517.7828,
                                307.0515]),
                            new MapPoint([638.8683,
                                68.2346,
                                450.7229,
                                242.5677]),
                            new MapPoint([948.9853,
                                774.3845])]),
                            new MapPath([new MapPoint([256.6735,
                                    233.8675,
                                    741.8102,
                                    749.1523]),
                                new MapPoint([750.4215,
                                    889.8874,
                                    382.9915,
                                    172.7244]),
                                new MapPoint([766.4482,
                                    177.4263,
                                    641.3336,
                                    277.6029])])],
                        new SpatialReference(6,
                                "vel",
                                "cum",
                                "ut"),
                            true,
                            true),
                    new TextSymbol("id modi adipisci",
                        new MapColor(38, 233, 188),
                        new MapColor(52, 38, 0),
                            new Dimension(324.0801),
                        new MapFont(new Dimension(940.5785),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            219.6000,
                        new MapColor(57, 96, 206),
                        new MapColor(127, 178, 215),
                            217.0183,
                        HorizontalAlignment.Center,
                            true,
                            608.6182,
                            new Dimension(986.0029),
                            true),
                    new PopupTemplate("rerum eaque omnis",
                            "sint",
                            ["ex",
                                "tempore"],
                        [new FieldInfo("id",
                                "officiis",
                                "accusamus",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("comment",
                                "debitis",
                                "beatae",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Min)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "dolor",
                                    "aut consectetur est")),
                        new TextPopupContent("repellat ipsum enim"),
                        new AttachmentsPopupContent("sit non facilis",
                                "cum et quam delectus dignissimos reprehenderit",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "createdAt",
                                "veritatis omnis asperiores",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "avatar",
                                "neque velit qui",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("ipsam labore quia",
                                "https://picsum.photos/640/480/?image=546",
                                "9f48ce2a-d39a-32c6-ab24-d98cc98496e6",
                                () => { Console.WriteLine("occaecati"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "quam"),
                        new ActionButton("sequi dolorem eaque",
                                "https://picsum.photos/640/480/?image=159",
                                "f7fa9357-d4e1-4854-bd6d-13217dff181e",
                                () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "quo"),
                        new ActionToggle("facere eligendi consequatur",
                                "0d19853c-1c70-79e8-388a-ea02fc6d27ec",
                                () => { Console.WriteLine("incidunt"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "maiores"),
                        new ActionButton("quia voluptatem illo",
                                "https://picsum.photos/640/480/?image=711",
                                "d544a796-d041-e81a-2382-121d3a375ab9",
                                () => { Console.WriteLine("totam"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "hic")]),
                        new AttributesDictionary(),
                        true,
                        "adipisci",
                        "non",
                        new GraphicOrigin(Guid.NewGuid(),
                            "mollitia",
                            4)),
                new Graphic(new Polyline([new MapPath([new MapPoint([494.4273,
                                839.6526,
                                435.5160,
                                689.2005]),
                            new MapPoint([515.6485,
                                939.8161,
                                525.0153])]),
                            new MapPath([new MapPoint([682.1644,
                                    349.5796]),
                                new MapPoint([315.5640,
                                    343.9132]),
                                new MapPoint([846.1004,
                                    672.4157]),
                                new MapPoint([766.5210,
                                    980.5867])]),
                            new MapPath([new MapPoint([11.7769,
                                    912.5548,
                                    794.2637]),
                                new MapPoint([436.4779,
                                    686.1794,
                                    250.1267]),
                                new MapPoint([119.8406,
                                    229.2061,
                                    512.6884])])],
                        new SpatialReference(5,
                                "molestiae",
                                "quo",
                                "laborum"),
                            true,
                            true),
                    new TextSymbol("voluptatum possimus nihil",
                        new MapColor(70, 217, 142),
                        new MapColor(20, 250, 175),
                            new Dimension(734.3617),
                        new MapFont(new Dimension(226.9127),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            455.4744,
                        new MapColor(55, 17, 10),
                        new MapColor(107, 118, 219),
                            791.4852,
                        HorizontalAlignment.Left,
                            true,
                            218.5090,
                            new Dimension(28.5459),
                            true),
                    new PopupTemplate("placeat reprehenderit dolores",
                            "ipsam",
                            ["velit",
                                "alias"],
                        [new FieldInfo("createdAt",
                                "voluptas",
                                "et",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("name",
                                "tenetur",
                                "fuga",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("title",
                                "vero",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new MediaPopupContent("labore maxime beatae",
                                "ipsum incidunt omnis voluptatem veniam voluptates",
                            [new BarChartMediaInfo("alias asperiores labore",
                                    "et",
                                    "nisi non reprehenderit",
                                new ChartMediaInfoValue(["est",
                                        "repudiandae",
                                        "deleniti"],
                                        "est",
                                        "sequi",
                                    [new ChartMediaInfoValueSeries("id",
                                            "placeat",
                                            438.0483),
                                    new ChartMediaInfoValueSeries("phone",
                                            "harum",
                                            653.3532)],
                                    [new MapColor(139, 76, 241),
                                    new MapColor(175, 51, 60)]))],
                                3),
                        new FieldsPopupContent([new FieldInfo("avatar",
                                    "suscipit",
                                    "aut",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("createdAt",
                                    "nostrum",
                                    "vel",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("createdAt",
                                    "eius",
                                    "blanditiis",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("password",
                                    "adipisci",
                                    "voluptate",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "non soluta ut praesentium",
                                "quis aut est"),
                        new RelationshipPopupContent("tempore sequi asperiores",
                                "sunt consectetur sapiente veniam cum",
                                4,
                                "vel",
                            [new RelatedRecordsInfoFieldOrder("incidunt",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("doloribus",
                                OrderBy.Desc)],
                                7)],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "email",
                                "quod et ut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "updatedAt",
                                "temporibus labore quasi",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("qui illo atque",
                                "https://picsum.photos/640/480/?image=778",
                                "dcbf74b8-78d5-d174-7a92-b1766393ff7e",
                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "quo"),
                        new ActionToggle("in eos fugit",
                                "f2aa1c37-1646-9067-c8d7-ef65f63684e0",
                                () => { Console.WriteLine("amet"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "eveniet"),
                        new ActionButton("sint ut et",
                                "https://picsum.photos/640/480/?image=963",
                                "6ea2dfe7-6ae6-6aa7-c849-3e8e46cfc210",
                                () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "sed"),
                        new ActionToggle("quidem non porro",
                                "1b70e3cf-0796-56ff-7fa3-8306093a92f5",
                                () => { Console.WriteLine("repellat"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "ea")]),
                        new AttributesDictionary(),
                        true,
                        "provident",
                        "dolore",
                        new GraphicOrigin(Guid.NewGuid(),
                            "incidunt",
                            3)),
                new Graphic(new Polygon([new MapPath([new MapPoint([194.2441,
                                228.1105]),
                            new MapPoint([748.8915,
                                521.9753,
                                432.3028,
                                57.2209])]),
                            new MapPath([new MapPoint([255.0476,
                                    563.4221,
                                    313.3659,
                                    89.8002]),
                                new MapPoint([172.9095,
                                    175.0279,
                                    847.8576,
                                    850.5600]),
                                new MapPoint([959.3807,
                                    405.5205])]),
                            new MapPath([new MapPoint([559.5985,
                                    561.4721,
                                    377.7372,
                                    717.8663]),
                                new MapPoint([191.7179,
                                    525.3326,
                                    526.7089])]),
                            new MapPath([new MapPoint([30.5810,
                                    780.5826,
                                    149.7658]),
                                new MapPoint([262.1024,
                                    914.7342,
                                    207.0168]),
                                new MapPoint([661.2059,
                                    800.4813,
                                    278.2196])])],
                        new SpatialReference(2,
                                "inventore",
                                "distinctio",
                                "rerum"),
                        new Point(-160.2473,
                                -14.3790,
                                134.5735,
                                50.9953,
                                221.8302,
                            new SpatialReference(9,
                                    "itaque",
                                    "distinctio",
                                    "vero"),
                                true,
                                true,
                                98.9233),
                            true,
                            true,
                            true),
                    new TextSymbol("qui et velit",
                        new MapColor(0, 125, 149),
                        new MapColor(218, 188, 65),
                            new Dimension(855.7004),
                        new MapFont(new Dimension(272.1533),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            327.4625,
                        new MapColor(60, 125, 62),
                        new MapColor(195, 150, 7),
                            52.7232,
                        HorizontalAlignment.Center,
                            true,
                            190.0267,
                            new Dimension(830.9460),
                            true),
                    new PopupTemplate("voluptatem iusto voluptates",
                            "aut",
                            ["magni",
                                "itaque"],
                        [new FieldInfo("title",
                                "voluptates",
                                "aut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("status",
                                "et",
                                "rerum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("group",
                                "soluta",
                                "aut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new AttachmentsPopupContent("repellat officia eum",
                                "rerum est et reiciendis in nisi",
                                AttachmentsPopupContentDisplayType.Auto),
                        new TextPopupContent("praesentium ad tempora")],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "phone",
                                "culpa consequatur magnam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "phone",
                                "eos aut consequatur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("similique ea et",
                                "04df9621-0103-7039-d2c2-0549f26d558d",
                                () => { Console.WriteLine("doloremque"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "quis"),
                        new ActionButton("dolorum rem incidunt",
                                "https://picsum.photos/640/480/?image=697",
                                "782c5a7a-d275-0916-0d22-7ea338381582",
                                () => { Console.WriteLine("quidem"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "libero"),
                        new ActionToggle("quam ut quod",
                                "004fd2ee-768b-73b1-4743-1551a420e66d",
                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "sed")]),
                        new AttributesDictionary(),
                        true,
                        "commodi",
                        "fugiat",
                        new GraphicOrigin(Guid.NewGuid(),
                            "laboriosam",
                            2)),
                new Graphic(new Polygon([new MapPath([new MapPoint([720.7462,
                                708.9035]),
                            new MapPoint([165.9398,
                                278.3284]),
                            new MapPoint([169.5121,
                                708.2337])]),
                            new MapPath([new MapPoint([102.3070,
                                    91.6277,
                                    4.6792,
                                    772.5955]),
                                new MapPoint([660.8648,
                                    574.2010])])],
                        new SpatialReference(8,
                                "qui",
                                "qui",
                                "explicabo"),
                        new Point(-99.9581,
                                -18.0499,
                                -137.8952,
                                -15.6742,
                                943.8895,
                            new SpatialReference(1,
                                    "sunt",
                                    "quisquam",
                                    "voluptatem"),
                                true,
                                true,
                                341.9636),
                            true,
                            true,
                            true),
                    new TextSymbol("omnis alias unde",
                        new MapColor(170, 14, 81),
                        new MapColor(200, 202, 213),
                            new Dimension(17.2338),
                        new MapFont(new Dimension(754.2954),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            752.3455,
                        new MapColor(146, 131, 245),
                        new MapColor(203, 3, 2),
                            283.5003,
                        HorizontalAlignment.Center,
                            true,
                            245.4970,
                            new Dimension(959.8557),
                            true),
                    new PopupTemplate("labore velit dolore",
                            "ut",
                            ["sed",
                                "voluptas",
                                "vero",
                                "illum"],
                        [new FieldInfo("avatar",
                                "possimus",
                                "quaerat",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("group",
                                "ut",
                                "maiores",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("comment",
                                "quo",
                                "adipisci",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "sed",
                                    "dolores non sequi")),
                        new MediaPopupContent("quas delectus animi",
                                "quasi sed in ex quisquam",
                            [new ColumnChartMediaInfo("iure ea deserunt",
                                    "molestiae",
                                    "ex numquam sit",
                                new ChartMediaInfoValue(["repudiandae",
                                        "consectetur",
                                        "sit",
                                        "sequi"],
                                        "sit",
                                        "delectus",
                                    [new ChartMediaInfoValueSeries("group",
                                            "accusamus",
                                            505.0717),
                                    new ChartMediaInfoValueSeries("status",
                                            "molestias",
                                            793.5668),
                                    new ChartMediaInfoValueSeries("email",
                                            "occaecati",
                                            484.8164)],
                                    [new MapColor(55, 9, 21),
                                    new MapColor(149, 197, 75),
                                    new MapColor(31, 82, 201)]))],
                                7)],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "title",
                                "voluptatem nihil consequuntur",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "avatar",
                                "accusantium quo autem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "group",
                                "non culpa illo",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("totam rerum vitae",
                                "a06f06ca-d38a-ae2e-2d8e-0f6e86d79c64",
                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "excepturi"),
                        new ActionButton("enim error minima",
                                "https://picsum.photos/640/480/?image=715",
                                "4ef269c8-4032-55b3-cf95-0892d4123c87",
                                () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "neque"),
                        new ActionToggle("accusamus placeat occaecati",
                                "a103ca0f-6e78-484a-1e28-97df450a1b45",
                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "tempora")]),
                        new AttributesDictionary(),
                        true,
                        "est",
                        "quos",
                        new GraphicOrigin(Guid.NewGuid(),
                            "provident",
                            5))],
                [new Graphic(new Polygon([new MapPath([new MapPoint([177.3956,
                                778.0149]),
                            new MapPoint([101.9457,
                                680.0086]),
                            new MapPoint([434.5727,
                                256.6869,
                                768.1188]),
                            new MapPoint([387.8309,
                                532.7469,
                                881.7907,
                                31.6241])]),
                            new MapPath([new MapPoint([989.6907,
                                    127.8623,
                                    396.9042,
                                    47.3904]),
                                new MapPoint([875.2496,
                                    348.4248,
                                    854.0587])]),
                            new MapPath([new MapPoint([380.1701,
                                    288.0718,
                                    687.5199,
                                    973.5768]),
                                new MapPoint([289.8517,
                                    713.7576,
                                    616.5070,
                                    440.1537]),
                                new MapPoint([327.7033,
                                    545.6701,
                                    659.8458,
                                    88.7042]),
                                new MapPoint([848.5405,
                                    198.7087,
                                    537.5340])])],
                        new SpatialReference(2,
                                "est",
                                "mollitia",
                                "laudantium"),
                        new Point(129.5107,
                                70.4463,
                                7.1280,
                                47.1536,
                                856.3189,
                            new SpatialReference(8,
                                    "perferendis",
                                    "occaecati",
                                    "rerum"),
                                true,
                                true,
                                630.1800),
                            true,
                            true,
                            true),
                    new TextSymbol("ipsam ullam ea",
                        new MapColor(218, 51, 18),
                        new MapColor(194, 27, 207),
                            new Dimension(853.7805),
                        new MapFont(new Dimension(573.3672),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            280.1418,
                        new MapColor(19, 218, 72),
                        new MapColor(238, 71, 150),
                            775.5232,
                        HorizontalAlignment.Right,
                            true,
                            769.8098,
                            new Dimension(360.4588),
                            true),
                    new PopupTemplate("sed non quis",
                            "numquam",
                            ["quos",
                                "et"],
                        [new FieldInfo("email",
                                "aliquid",
                                "eaque",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("comment",
                                "occaecati",
                                "ullam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new TextPopupContent("rerum quia quidem"),
                        new TextPopupContent("qui totam maxime")],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "phone",
                                "rerum voluptatem rerum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "comment",
                                "quis at quae",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("error numquam corrupti",
                                "https://picsum.photos/640/480/?image=475",
                                "592a2e80-e40e-af17-d421-2e1fd841417b",
                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "rerum"),
                        new ActionToggle("magni et deleniti",
                                "f9acbeb0-715c-1de6-e484-d9226aa2ad8f",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "eaque"),
                        new ActionToggle("impedit ratione harum",
                                "d5c56925-2338-d27d-95a4-ad7d4f5288d6",
                                () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "velit"),
                        new ActionButton("quidem illum velit",
                                "https://picsum.photos/640/480/?image=940",
                                "1feb2d5c-116f-bb04-2640-6a73c494aa1b",
                                () => { Console.WriteLine("laudantium"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "eius")]),
                        new AttributesDictionary(),
                        true,
                        "sed",
                        "quos",
                        new GraphicOrigin(Guid.NewGuid(),
                            "dolor",
                            1)),
                new Graphic(new Extent(6.2653,
                            173.0674,
                            27.3788,
                            10.3584,
                            418.8595,
                            484.0723,
                            714.2424,
                            485.7113,
                        new SpatialReference(3,
                                "ipsum",
                                "saepe",
                                "occaecati"),
                            true,
                            true),
                    new TextSymbol("vero non quo",
                        new MapColor(38, 155, 219),
                        new MapColor(0, 253, 4),
                            new Dimension(226.7685),
                        new MapFont(new Dimension(930.3757),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            493.6557,
                        new MapColor(139, 84, 39),
                        new MapColor(137, 228, 60),
                            519.4887,
                        HorizontalAlignment.Center,
                            true,
                            497.5753,
                            new Dimension(440.8282),
                            true),
                    new PopupTemplate("nesciunt eum dolore",
                            "aut",
                            ["reprehenderit",
                                "libero"],
                        [new FieldInfo("password",
                                "vitae",
                                "dolor",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("id",
                                "quae",
                                "saepe",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("email",
                                "et",
                                "incidunt",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("phone",
                                "maxime",
                                "dignissimos",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Var)],
                        [new RelationshipPopupContent("similique sint cum",
                                "dolorem iste nihil sed",
                                1,
                                "deserunt",
                            [new RelatedRecordsInfoFieldOrder("provident",
                                OrderBy.Asc)],
                                3),
                        new MediaPopupContent("tenetur voluptatem praesentium",
                                "aliquam totam repellendus quisquam praesentium",
                            [new BarChartMediaInfo("qui perferendis vitae",
                                    "praesentium",
                                    "itaque nam et",
                                new ChartMediaInfoValue(["laboriosam",
                                        "consequatur"],
                                        "in",
                                        "sint",
                                    [new ChartMediaInfoValueSeries("group",
                                            "cumque",
                                            359.6172),
                                    new ChartMediaInfoValueSeries("category",
                                            "voluptatem",
                                            741.3384),
                                    new ChartMediaInfoValueSeries("password",
                                            "beatae",
                                            531.4712)],
                                    [new MapColor(220, 42, 160),
                                    new MapColor(39, 129, 245)]))],
                                5),
                        new FieldsPopupContent([new FieldInfo("comment",
                                    "impedit",
                                    "eum",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLeShortTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("title",
                                    "atque",
                                    "eaque",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("group",
                                    "voluptatem",
                                    "eveniet",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("id",
                                    "repellat",
                                    "quia",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "est et ab mollitia dolores accusamus",
                                "fuga totam dolor")],
                        [new ExpressionInfo("return Date();",
                                "group",
                                "dolorum ab quis",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "avatar",
                                "earum eligendi ratione",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "group",
                                "autem ipsam ad",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("est soluta aliquid",
                                "https://picsum.photos/640/480/?image=764",
                                "9be0b873-4205-4859-fece-1d9857c5a5be",
                                () => { Console.WriteLine("consectetur"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "nesciunt"),
                        new ActionButton("quisquam et placeat",
                                "https://picsum.photos/640/480/?image=111",
                                "b00a1ee0-07db-b209-960f-bb70574e8443",
                                () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                "createdAt",
                                true,
                                true,
                                true,
                                "praesentium"),
                        new ActionButton("aspernatur nihil consequatur",
                                "https://picsum.photos/640/480/?image=943",
                                "f42ad1b2-bc79-0913-386c-e483d997ed19",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "corrupti"),
                        new ActionButton("unde blanditiis veniam",
                                "https://picsum.photos/640/480/?image=773",
                                "59cfbd86-f0df-699d-a41f-834970e666c0",
                                () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "omnis")]),
                        new AttributesDictionary(),
                        true,
                        "amet",
                        "in",
                        new GraphicOrigin(Guid.NewGuid(),
                            "id",
                            4)),
                new Graphic(new Point(172.4174,
                            59.8001,
                            -65.3068,
                            -33.0306,
                            562.1046,
                        new SpatialReference(4,
                                "aliquam",
                                "est",
                                "autem"),
                            true,
                            true,
                            943.8372),
                    new TextSymbol("ipsa consectetur optio",
                        new MapColor(121, 214, 242),
                        new MapColor(225, 175, 147),
                            new Dimension(135.1969),
                        new MapFont(new Dimension(679.1584),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            311.3827,
                        new MapColor(47, 113, 166),
                        new MapColor(208, 6, 163),
                            686.3953,
                        HorizontalAlignment.Left,
                            true,
                            301.6776,
                            new Dimension(574.5982),
                            true),
                    new PopupTemplate("voluptas et culpa",
                            "omnis",
                            ["minima",
                                "tempore",
                                "porro",
                                "autem"],
                        [new FieldInfo("createdAt",
                                "omnis",
                                "dolor",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new RelationshipPopupContent("ducimus et id",
                                "voluptatem quis distinctio voluptatibus",
                                4,
                                "totam",
                            [new RelatedRecordsInfoFieldOrder("occaecati",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("labore",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("tenetur",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("et",
                                OrderBy.Desc)],
                                8),
                        new MediaPopupContent("veritatis in temporibus",
                                "id fuga delectus nam sed",
                            [new LineChartMediaInfo("modi sit possimus",
                                    "officiis",
                                    "dignissimos eaque tempore",
                                new ChartMediaInfoValue(["ipsum",
                                        "in",
                                        "iure",
                                        "culpa"],
                                        "ea",
                                        "aliquid",
                                    [new ChartMediaInfoValueSeries("name",
                                            "praesentium",
                                            660.4150),
                                    new ChartMediaInfoValueSeries("password",
                                            "commodi",
                                            932.3973),
                                    new ChartMediaInfoValueSeries("comment",
                                            "ipsam",
                                            473.4096)],
                                    [new MapColor(13, 50, 171),
                                    new MapColor(232, 175, 235),
                                    new MapColor(40, 214, 221)])),
                            new ColumnChartMediaInfo("aut cupiditate voluptatem",
                                    "consectetur",
                                    "voluptatibus iusto quam",
                                new ChartMediaInfoValue(["quia",
                                        "et",
                                        "quia",
                                        "commodi"],
                                        "suscipit",
                                        "corporis",
                                    [new ChartMediaInfoValueSeries("status",
                                            "tempora",
                                            877.2944),
                                    new ChartMediaInfoValueSeries("name",
                                            "iusto",
                                            883.9971)],
                                    [new MapColor(127, 42, 52),
                                    new MapColor(93, 223, 17),
                                    new MapColor(114, 147, 20),
                                    new MapColor(103, 132, 226)])),
                            new ImageMediaInfo("nihil facilis velit",
                                    "sint",
                                    "fugit sunt reprehenderit",
                                new ImageMediaInfoValue("https://fannie.org",
                                        "https://carmela.info"),
                                    618.7912)],
                                9),
                        new TextPopupContent("sunt quisquam cum")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "createdAt",
                                "laborum aut labore",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "title",
                                "vero alias eos",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "title",
                                "et officiis veritatis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptas optio sint",
                                "a7f9ae80-c426-c60d-7250-da7d8962b739",
                                () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "illo"),
                        new ActionToggle("inventore quia alias",
                                "e9a573c7-381d-4c8e-2bc6-79ce28a73287",
                                () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "non"),
                        new ActionToggle("commodi modi reiciendis",
                                "981b13d0-f593-07b8-e5a3-82cf937c3662",
                                () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "et"),
                        new ActionButton("ea odio eveniet",
                                "https://picsum.photos/640/480/?image=381",
                                "a6a8170d-e326-c6f7-5905-2ad7ddb8a0d2",
                                () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                                "password",
                                true,
                                true,
                                true,
                                "incidunt")]),
                        new AttributesDictionary(),
                        true,
                        "quam",
                        "voluptas",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ut",
                            6))],
                    ["sunt",
                        "error",
                        "veritatis"],
                [new Graphic(new Point(-45.4298,
                            26.3681,
                            -167.0625,
                            55.3494,
                            36.9638,
                        new SpatialReference(5,
                                "sit",
                                "saepe",
                                "voluptatem"),
                            true,
                            true,
                            508.4510),
                    new TextSymbol("exercitationem sed voluptatem",
                        new MapColor(33, 201, 222),
                        new MapColor(49, 171, 213),
                            new Dimension(421.5707),
                        new MapFont(new Dimension(867.0082),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            588.6588,
                        new MapColor(80, 39, 247),
                        new MapColor(239, 1, 1),
                            653.1142,
                        HorizontalAlignment.Left,
                            true,
                            692.4045,
                            new Dimension(344.4734),
                            true),
                    new PopupTemplate("et praesentium voluptatibus",
                            "eaque",
                            ["quo",
                                "rerum",
                                "asperiores"],
                        [new FieldInfo("group",
                                "eum",
                                "at",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("phone",
                                "debitis",
                                "aspernatur",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("token",
                                "voluptas",
                                "quam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("id",
                                "ea",
                                "id",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new FieldsPopupContent([new FieldInfo("email",
                                    "quasi",
                                    "dolor",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("token",
                                    "dolorum",
                                    "impedit",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongDateLongTime),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "delectus sint quia omnis earum",
                                "repellendus sapiente minus"),
                        new FieldsPopupContent([new FieldInfo("name",
                                    "mollitia",
                                    "cupiditate",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("avatar",
                                    "at",
                                    "aut",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("avatar",
                                    "consequatur",
                                    "dolore",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "odit qui doloribus dolore commodi",
                                "atque pariatur libero"),
                        new TextPopupContent("officiis ad quod"),
                        new AttachmentsPopupContent("ipsam nesciunt autem",
                                "minima occaecati vitae asperiores aut delectus",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("return $feature.Name;",
                                "password",
                                "reiciendis sint et",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "category",
                                "cupiditate eum atque",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("consequatur ut dolorem",
                                "8d04cf62-d38a-21ce-84bb-40ce185c7f97",
                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "qui")]),
                        new AttributesDictionary(),
                        true,
                        "dolores",
                        "rerum",
                        new GraphicOrigin(Guid.NewGuid(),
                            "exercitationem",
                            8))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["commodi",
                    "vel",
                    "corrupti"],
                    ["token",
                        "updatedAt",
                        "group",
                        "updatedAt"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("createdAt");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("id",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Extent(-10.2495,
                            90.0234,
                            -83.2031,
                            15.3477,
                            620.4720,
                            259.2719,
                            363.7494,
                            854.3377,
                        new SpatialReference(9,
                                "aut",
                                "aliquam",
                                "id"),
                            true,
                            true),
                    new TextSymbol("totam maiores nihil",
                        new MapColor(113, 52, 57),
                        new MapColor(241, 143, 78),
                            new Dimension(313.3853),
                        new MapFont(new Dimension(569.8541),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            988.4461,
                        new MapColor(38, 245, 130),
                        new MapColor(25, 82, 115),
                            697.6156,
                        HorizontalAlignment.Center,
                            true,
                            651.0298,
                            new Dimension(857.3946),
                            true),
                    new PopupTemplate("nobis quis quia",
                            "architecto",
                            ["et",
                                "atque",
                                "rem",
                                "quo"],
                        [new FieldInfo("category",
                                "repellat",
                                "culpa",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("token",
                                "et",
                                "iure",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("phone",
                                "et",
                                "fuga",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new FieldsPopupContent([new FieldInfo("token",
                                    "quisquam",
                                    "ipsa",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("name",
                                    "neque",
                                    "molestiae",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("password",
                                    "fugiat",
                                    "earum",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "et qui ut illo",
                                "veritatis sequi aspernatur"),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "laborum",
                                    "quaerat possimus deserunt"))],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "email",
                                "aut voluptas rerum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "avatar",
                                "distinctio id et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("id quo quos",
                                "130e765a-b92b-f11a-cfe1-047ffe0e4218",
                                () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "sunt"),
                        new ActionToggle("error earum eaque",
                                "89284875-6484-b90b-5284-e628611e7a4c",
                                () => { Console.WriteLine("adipisci"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "aliquid"),
                        new ActionButton("accusamus sapiente quis",
                                "https://picsum.photos/640/480/?image=844",
                                "25fb4c0a-55cb-dbc4-9ec1-8cd2f8c304b3",
                                () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "perspiciatis"),
                        new ActionToggle("itaque quibusdam velit",
                                "f93b555c-3c1d-0595-d733-867b25023752",
                                () => { Console.WriteLine("nesciunt"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "eaque")]),
                        new AttributesDictionary(),
                        true,
                        "accusantium",
                        "dicta",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ipsam",
                            6))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([5,
                    8,
                    9,
                    8],
                    true,
                    188.0773,
                    253.5402,
                    "2.9.3.4",
                new Polygon([new MapPath([new MapPoint([290.2065,
                            291.4239,
                            973.9853]),
                        new MapPoint([818.7034,
                            281.8772,
                            671.1952,
                            361.6009]),
                        new MapPoint([591.5753,
                            965.4678]),
                        new MapPoint([640.1294,
                            42.5613,
                            70.6902,
                            563.4258])]),
                        new MapPath([new MapPoint([672.5901,
                                100.9957,
                                751.4569,
                                657.9071]),
                            new MapPoint([465.9213,
                                601.2686,
                                487.0939,
                                944.2227]),
                            new MapPoint([676.1195,
                                830.1054,
                                533.0894]),
                            new MapPoint([859.8188,
                                562.3978,
                                817.6446])])],
                    new SpatialReference(5,
                            "vel",
                            "repellat",
                            "quo"),
                    new Point(-124.1699,
                            27.0621,
                            -17.5790,
                            -36.4763,
                            277.8326,
                        new SpatialReference(6,
                                "minus",
                                "quaerat",
                                "sit"),
                            true,
                            true,
                            993.6242),
                        true,
                        true,
                        true),
                    4,
                    ["corporis",
                        "eum",
                        "recusandae"],
                    "ex",
                    new DateTime(2000, 1, 10, 22, 5, 7),
                    92.8953,
                    3,
                    "temporibus",
                    3),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([2,
                    4,
                    5,
                    5],
                    true,
                    22.8636,
                    215.1737,
                    "9.3.7.9",
                new Polygon([new MapPath([new MapPoint([117.1023,
                            255.9206,
                            480.0904]),
                        new MapPoint([631.7215,
                            914.6664,
                            486.0583])]),
                        new MapPath([new MapPoint([637.6148,
                                893.3856,
                                376.6990]),
                            new MapPoint([950.4309,
                                863.2380,
                                343.9519]),
                            new MapPoint([333.2472,
                                258.1782,
                                895.5078])]),
                        new MapPath([new MapPoint([308.5360,
                                600.5515,
                                113.2347,
                                959.7681]),
                            new MapPoint([832.2448,
                                329.7892,
                                869.3260]),
                            new MapPoint([277.8767,
                                108.9139,
                                562.0444])]),
                        new MapPath([new MapPoint([570.6553,
                                137.1061]),
                            new MapPoint([147.1398,
                                532.6550,
                                65.3252])])],
                    new SpatialReference(7,
                            "aspernatur",
                            "sint",
                            "id"),
                    new Point(-35.4499,
                            84.4702,
                            91.4802,
                            24.8866,
                            904.7580,
                        new SpatialReference(9,
                                "facilis",
                                "veniam",
                                "non"),
                            true,
                            true,
                            489.6246),
                        true,
                        true,
                        true),
                    1,
                    ["id",
                        "recusandae",
                        "officia"],
                    "perspiciatis",
                    new DateTime(2016, 9, 5, 15, 42, 57),
                    873.5439,
                    7,
                    "nisi",
                    4),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([2,
                    1,
                    7],
                    true,
                    399.4260,
                    940.5949,
                    "6.3.6.6",
                new Polygon([new MapPath([new MapPoint([714.0718,
                            562.1491,
                            595.1486]),
                        new MapPoint([219.4109,
                            593.4150,
                            331.3420]),
                        new MapPoint([813.1246,
                            569.4309,
                            988.3362]),
                        new MapPoint([740.4556,
                            425.7237,
                            939.3857])]),
                        new MapPath([new MapPoint([319.0956,
                                911.3385,
                                298.5522,
                                352.4980]),
                            new MapPoint([133.1985,
                                973.6941]),
                            new MapPoint([467.5212,
                                550.1399,
                                65.3725,
                                757.9551]),
                            new MapPoint([875.8873,
                                789.1704])]),
                        new MapPath([new MapPoint([626.9940,
                                183.5852,
                                170.4446,
                                398.8192]),
                            new MapPoint([607.7639,
                                36.4674,
                                685.6168,
                                90.2374]),
                            new MapPoint([939.5491,
                                491.3533])]),
                        new MapPath([new MapPoint([569.5395,
                                431.4729,
                                36.5396,
                                33.8701]),
                            new MapPoint([206.9096,
                                50.8364,
                                751.1661])])],
                    new SpatialReference(3,
                            "iure",
                            "eum",
                            "recusandae"),
                    new Point(50.8905,
                            30.6855,
                            -117.3879,
                            -29.1148,
                            34.3345,
                        new SpatialReference(1,
                                "ipsam",
                                "aut",
                                "totam"),
                            true,
                            true,
                            558.9130),
                        true,
                        true,
                        true),
                    6,
                    ["provident",
                        "voluptatum"],
                    "commodi",
                    new DateTime(2023, 7, 14, 17, 22, 5),
                    585.7757,
                    8,
                    "optio",
                    7),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([8,
                    2,
                    1,
                    4],
                    true,
                    342.5152,
                    54.6706,
                    "3.6.6.9",
                new Extent(-160.6591,
                        -17.4687,
                        -8.3273,
                        54.5694,
                        460.4096,
                        33.1392,
                        740.0859,
                        480.3804,
                    new SpatialReference(2,
                            "dolorum",
                            "optio",
                            "odio"),
                        true,
                        true),
                    7,
                    ["quia",
                        "maxime"],
                    "et",
                    new DateTime(2021, 9, 11, 10, 29, 11),
                    336.9723,
                    3,
                    "dolorem",
                    9),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.SoftLight;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature['FieldName'];",
                        "doloremque nam totam"),
                ElevationInfoMode.RelativeToGround,
                    684.1321,
                ElevationUnit.Kilometers);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("aliquid",
                    49503457.5873),
                    new Effect("architecto",
                        43212366.6299)],
                    true,
                new FeatureFilter(512.9144,
                    new Extent(-85.6379,
                            -123.4123,
                            -82.5211,
                            -58.1087,
                            432.6917,
                            479.8988,
                            613.7722,
                            5.9588,
                        new SpatialReference(1,
                                "et",
                                "minima",
                                "voluptatum"),
                            true,
                            true),
                        [9,
                            5,
                            8,
                            7],
                    SpatialRelationship.EnvelopeIntersects,
                    new TimeExtent(new DateTime(2023, 4, 21, 0, 41, 24),
                            new DateTime(2021, 11, 27, 10, 6, 21)),
                        QueryUnits.UsNauticalMiles,
                        "Street = '123 Main St.'"),
                    [new Effect("eius",
                        29029384.3202)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "phone",
                    "ut",
                    "quod exercitationem quasi aut",
                    2,
                    true,
                    true,
                    new { Value = "delectus" },
                FieldValueType.Binary,
                new InheritedDomain("category"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-171.3420,
                    -6.9923,
                    29.0520,
                    74.4826,
                    73.0529,
                    853.2927,
                    436.2564,
                    948.8096,
                new SpatialReference(4,
                        "et",
                        "dolor",
                        "voluptates"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polyline;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterCenter,
                    "unde",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    33816688.7325,
                    28837.3403,
                    true,
                    new Dimension(933.3471),
                new TextSymbol("velit autem aspernatur",
                    new MapColor(47, 174, 182),
                    new MapColor(94, 224, 14),
                        new Dimension(706.3445),
                    new MapFont(new Dimension(342.7761),
                            "Helvetica",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        710.1988,
                    new MapColor(14, 48, 80),
                    new MapColor(159, 83, 16),
                        393.5010,
                    HorizontalAlignment.Left,
                        true,
                        251.5179,
                        new Dimension(170.3793),
                        true),
                    true,
                    "Country = 'Canada'"),
            new Label(LabelPlacement.BelowAlong,
                    "qui",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    27675210.8807,
                    27773.5746,
                    true,
                    new Dimension(732.1974),
                new TextSymbol("soluta rerum quisquam",
                    new MapColor(167, 134, 56),
                    new MapColor(139, 197, 61),
                        new Dimension(553.5396),
                    new MapFont(new Dimension(391.6992),
                            "Times New Roman",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        734.2014,
                    new MapColor(93, 12, 188),
                    new MapColor(140, 10, 25),
                        824.4903,
                    HorizontalAlignment.Center,
                        true,
                        198.5648,
                        new Dimension(541.5373),
                        true),
                    true,
                    "Street = '123 Main St.'"),
            new Label(LabelPlacement.AboveEnd,
                    "sunt",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    28335107.3313,
                    46873.6016,
                    true,
                    new Dimension(751.3430),
                new TextSymbol("magnam harum magnam",
                    new MapColor(250, 159, 157),
                    new MapColor(177, 15, 252),
                        new Dimension(550.0851),
                    new MapFont(new Dimension(594.4054),
                            "Georgia",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        900.3519,
                    new MapColor(17, 111, 40),
                    new MapColor(160, 109, 146),
                        455.2644,
                    HorizontalAlignment.Center,
                        true,
                        164.9809,
                        new Dimension(582.0899),
                        true),
                    true,
                    "Country = 'Canada'")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("voluptatibus",
                SortOrder.Ascending,
                    "ea"),
            new OrderedLayerOrderBy("aut",
                SortOrder.Ascending,
                    "qui"),
            new OrderedLayerOrderBy("ut",
                SortOrder.Descending,
                    "sed")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("molestias eos ea",
                    "quae",
                    ["beatae",
                        "reiciendis",
                        "corporis",
                        "illum"],
                [new FieldInfo("status",
                        "assumenda",
                        "nulla",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(8,
                            true,
                        DateFormat.LongMonthDayYear),
                        true,
                        true,
                    StatisticType.Var),
                new FieldInfo("email",
                        "omnis",
                        "architecto",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(8,
                            true,
                        DateFormat.ShortDateLeShortTime),
                        true,
                        true,
                    StatisticType.Max)],
                [new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                            "explicabo",
                            "eaque blanditiis nihil")),
                new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                            "eveniet",
                            "voluptatibus corporis saepe"))],
                [new ExpressionInfo("return $feature.Name;",
                        "comment",
                        "similique ipsum eveniet",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("facere qui ipsa",
                        "https://picsum.photos/640/480/?image=22",
                        "3298fb3c-b6fb-e7e8-70e6-c65f659931ae",
                        () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                        "phone",
                        true,
                        true,
                        true,
                        "veritatis"),
                new ActionToggle("dolorem molestiae ut",
                        "ece492e8-6985-c1aa-8701-4fb8a1423e41",
                        () => { Console.WriteLine("non"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "phone",
                        "maxime"),
                new ActionButton("laboriosam consequatur magnam",
                        "https://picsum.photos/640/480/?image=72",
                        "12ee9901-d134-33c4-0f3c-a701d7ec386d",
                        () => { Console.WriteLine("totam"); return Task.CompletedTask; },
                        "password",
                        true,
                        true,
                        true,
                        "ut")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem();
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new SimpleRenderer(new TextSymbol("perspiciatis et unde",
                    new MapColor(201, 29, 186),
                    new MapColor(41, 233, 75),
                        new Dimension(433.0576),
                    new MapFont(new Dimension(433.4451),
                            "Times New Roman",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.None),
                        569.7450,
                    new MapColor(26, 110, 118),
                    new MapColor(166, 27, 119),
                        225.3105,
                    HorizontalAlignment.Right,
                        true,
                        456.5587,
                        new Dimension(166.9151),
                        true),
                    "esse",
                [new RotationVariable("doloremque",
                    Axis.Roll,
                    RotationType.Arithmetic,
                    new VisualVariableLegendOptions(true,
                            "assumenda veniam praesentium"),
                        "nemo",
                        "est illo voluptates")],
                new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                    new AlgorithmicColorRamp(Algorithm.Hsv,
                        new MapColor(110, 156, 60),
                        new MapColor(228, 92, 56)),
                        502.4965,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(45.6256,
                                613.4883)],
                            "repudiandae",
                            "molestiae",
                            "placeat"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(93.8450,
                                256.8651),
                        new AuthoringInfoField1ClassBreakInfos(86.8150,
                                40.4433)],
                            "molestiae",
                            "dolores",
                            "aliquam"),
                        ["est",
                            "qui",
                            "autem",
                            "quae"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "velit",
                        true,
                    LengthUnit.Centimeters,
                        937.4685,
                        205.5985,
                        826.0755,
                        68.3572));
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(8,
                    "iure",
                    "iure",
                    "itaque");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("nihil corrupti et accusantium natus",
                DrawingTool.RightArrow,
                    "updatedAt",
                new Graphic(new Extent(-64.7242,
                            -22.7976,
                            8.9833,
                            -81.2052,
                            872.1900,
                            522.9849,
                            377.2709,
                            217.1858,
                        new SpatialReference(5,
                                "distinctio",
                                "at",
                                "soluta"),
                            true,
                            true),
                    new TextSymbol("labore dolor eum",
                        new MapColor(122, 126, 20),
                        new MapColor(220, 91, 205),
                            new Dimension(642.5908),
                        new MapFont(new Dimension(428.4479),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            973.7383,
                        new MapColor(153, 36, 230),
                        new MapColor(138, 148, 164),
                            556.0036,
                        HorizontalAlignment.Right,
                            true,
                            701.2077,
                            new Dimension(424.4486),
                            true),
                    new PopupTemplate("ut esse qui",
                            "et",
                            ["laudantium",
                                "molestiae"],
                        [new FieldInfo("createdAt",
                                "dolor",
                                "quia",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Min)],
                        [new TextPopupContent("et unde nihil"),
                        new FieldsPopupContent([new FieldInfo("category",
                                    "voluptatibus",
                                    "blanditiis",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("phone",
                                    "eius",
                                    "quidem",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "voluptates suscipit qui adipisci",
                                "ut quasi molestiae"),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "qui",
                                    "minus reiciendis reprehenderit")),
                        new FieldsPopupContent([new FieldInfo("createdAt",
                                    "rerum",
                                    "recusandae",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("id",
                                    "nobis",
                                    "autem",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("password",
                                    "illum",
                                    "facere",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("token",
                                    "doloribus",
                                    "modi",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongMonthDayYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Avg)],
                                "autem quisquam nisi et velit",
                                "placeat dolor et")],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "phone",
                                "omnis rerum eum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("doloribus est ex",
                                "0e9cc262-44d6-f91d-52ca-168c4163ba4e",
                                () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "quam"),
                        new ActionToggle("eum consequatur aut",
                                "f114aae1-7bb4-f302-c2a8-9ef4e287045c",
                                () => { Console.WriteLine("exercitationem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "exercitationem")]),
                        new AttributesDictionary(),
                        true,
                        "perspiciatis",
                        "optio",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            5)),
                    new Thumbnail("et",
                        "error",
                        87.6050,
                        135.1209))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2008, 6, 19, 2, 21, 45),
                    new DateTime(2011, 6, 8, 22, 47, 42));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("voluptatem",
                    "recusandae",
                new TimeExtent(new DateTime(2014, 11, 24, 16, 4, 21),
                        new DateTime(2022, 11, 26, 0, 53, 47)),
                new TimeInterval(TemporalTime.Decades,
                        496.9454),
                    [new DateTime(2016, 8, 7, 5, 38, 46),
                        new DateTime(2021, 5, 21, 11, 8, 51),
                        new DateTime(2004, 1, 27, 6, 18, 36),
                        new DateTime(2023, 9, 13, 1, 43, 35)],
                    "Asia/Kamchatka",
                    "qui");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Years,
                    840.1930);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2021, 11, 6, 4, 30, 57),
                    new DateTime(2009, 9, 21, 4, 50, 40));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
