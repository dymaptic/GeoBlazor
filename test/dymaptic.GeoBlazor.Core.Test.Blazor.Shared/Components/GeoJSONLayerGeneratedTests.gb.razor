@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson")"
                        Copyright="@("repudiandae")"
                        Title="@("dolores modi quas")"
                        Opacity="@(0.6176)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        BlendMode="@(BlendMode.VividLight)"
                        DefinitionExpression="@("aliquid")"
                        DisplayField="@("distinctio")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("laborum",
                            10941343.8603))"
                        FullExtent="@(new Extent(112.5891,
                                -97.1085,
                                -70.2196,
                                11.1074,
                                163.7968,
                                118.8937,
                                363.4812,
                                754.3424,
                            new SpatialReference(5,
                                    "nulla",
                                    "eligendi",
                                    "quas"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Polygon)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(10753465.1119)"
                        MinScale="@(46019.8756)"
                        ObjectIdField="@("non")"
                        OutFields="@(["alias",
                            "reprehenderit"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(906.7198)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(8,
                                "amet",
                                "ut",
                                "non"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Days)"
                            Value="@(544.1636)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("debitis")"
                            EndField="@("et")"
                            Stops="@([new DateTime(2022, 5, 20, 11, 19, 45),
                                new DateTime(2022, 6, 26, 5, 8, 12),
                                new DateTime(2017, 10, 12, 13, 44, 45)])"
                            TimeZone="@("Pacific/Fiji")"
                            TrackIdField="@("dolorum")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Milliseconds)"
                                Value="@(358.1560)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2002, 10, 7, 11, 22, 29))"
                                End="@(new DateTime(2020, 6, 17, 13, 58, 38))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2012, 10, 25, 22, 4, 15))"
                            End="@(new DateTime(2008, 3, 23, 2, 26, 15))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("veritatis corporis officia praesentium saepe")"
                            DrawingTool="@(DrawingTool.Polygon)"
                            Name="@("comment")"
                            Prototype="@(new Graphic(new Extent(-132.3519,
                                        159.2896,
                                        -8.2680,
                                        -5.3516,
                                        994.0796,
                                        277.5491,
                                        476.5858,
                                        42.0847,
                                    new SpatialReference(1,
                                            "in",
                                            "sapiente",
                                            "reprehenderit"),
                                        true,
                                        true),
                                new TextSymbol("qui sed qui",
                                    new MapColor(135, 150, 201),
                                    new MapColor(159, 161, 111),
                                        new Dimension(940.9914),
                                    new MapFont(new Dimension(79.8389),
                                            "Bookman",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        738.0650,
                                    new MapColor(200, 149, 20),
                                    new MapColor(139, 221, 12),
                                        972.2601,
                                    HorizontalAlignment.Right,
                                        true,
                                        522.8818,
                                        new Dimension(720.9992),
                                        true),
                                new PopupTemplate("occaecati dolores laudantium",
                                        "qui",
                                        ["rerum",
                                            "tempora"],
                                    [new FieldInfo("createdAt",
                                            "saepe",
                                            "sunt",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                    [new FieldsPopupContent([new FieldInfo("avatar",
                                                "aliquam",
                                                "maiores",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("name",
                                                "dolore",
                                                "omnis",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                            "vero fugit voluptas cum alias ut doloribus",
                                            "dolor repellendus debitis"),
                                    new MediaPopupContent("aut dolores sed",
                                            "nostrum et et est reiciendis voluptas",
                                        [new BarChartMediaInfo("et qui quo",
                                                "dolor",
                                                "illo corrupti dolorem",
                                            new ChartMediaInfoValue(["commodi",
                                                    "dolor",
                                                    "provident"],
                                                    "voluptas",
                                                    "eaque",
                                                [new ChartMediaInfoValueSeries("comment",
                                                        "non",
                                                        637.1093)],
                                                [new MapColor(114, 24, 97),
                                                new MapColor(166, 235, 53),
                                                new MapColor(179, 44, 72)])),
                                        new ImageMediaInfo("rerum beatae ut",
                                                "velit",
                                                "fugit laboriosam ducimus",
                                            new ImageMediaInfoValue("https://marvin.info",
                                                    "http://maddison.biz"),
                                                780.8257)],
                                            7),
                                    new RelationshipPopupContent("nobis ea mollitia",
                                            "in qui non aut neque",
                                            6,
                                            "sint",
                                        [new RelatedRecordsInfoFieldOrder("asperiores",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("quaerat",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("odit",
                                            OrderBy.Desc)],
                                            9),
                                    new RelationshipPopupContent("illum consequatur vel",
                                            "ullam iusto debitis soluta recusandae animi",
                                            6,
                                            "sint",
                                        [new RelatedRecordsInfoFieldOrder("eligendi",
                                            OrderBy.Asc)],
                                            8)],
                                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "password",
                                            "ut et ratione",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature['FieldName'];",
                                            "updatedAt",
                                            "vero molestiae ipsa",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return Date();",
                                            "name",
                                            "repudiandae qui quis",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "group",
                                            "laboriosam et velit",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionButton("voluptatibus assumenda omnis",
                                            "https://picsum.photos/640/480/?image=981",
                                            "8ced4af1-035f-905d-09ff-3718581a94b6",
                                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                            "category",
                                            true,
                                            true,
                                            true,
                                            "blanditiis"),
                                    new ActionToggle("eos et natus",
                                            "4c44fc0c-58e6-c563-aa91-63447c338184",
                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "password",
                                            "laboriosam")]),
                                    new AttributesDictionary(),
                                    true,
                                    "dolores",
                                    "modi",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "et",
                                        7)))"
                            Thumbnail="@(new Thumbnail("aliquam",
                                "eos",
                                147.6799,
                                59.8500))">
                        </FeatureTemplate>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(51, 45, 123),
                                        new MapColor(154, 15, 49)),
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(57, 39, 234),
                                        new MapColor(143, 197, 84)),
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(197, 133, 42),
                                        new MapColor(146, 40, 121)),
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(141, 67, 4),
                                        new MapColor(195, 129, 101))]),
                                    639.6540,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(286.4370,
                                            914.0517)],
                                        "autem",
                                        "eum",
                                        "quisquam"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(656.9037,
                                            715.5024),
                                    new AuthoringInfoField1ClassBreakInfos(229.3047,
                                            851.7115),
                                    new AuthoringInfoField1ClassBreakInfos(943.3936,
                                            59.2918)],
                                        "itaque",
                                        "voluptas",
                                        "unde"),
                                    ["deserunt",
                                        "exercitationem",
                                        "maxime"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "iure",
                                    true,
                                LengthUnit.Centimeters,
                                    998.9948,
                                    178.5366,
                                    930.5474,
                                    583.6055))">
                        </UniqueValueRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("quidem")"
                            ApiKey="@("fugiat")"
                            AvgRating="@(785.9115)"
                            Categories="@(["et",
                                "et"])"
                            Created="@(new DateTime(2018, 9, 7, 4, 8, 49))"
                            Culture="@("et")"
                            Description="@("omnis sint ratione deleniti quis autem beatae")"
                            Extent="@(new Extent(-18.7312,
                                    71.6097,
                                    69.0514,
                                    60.0444,
                                    967.2197,
                                    64.8433,
                                    437.1113,
                                    76.4041,
                                new SpatialReference(2,
                                        "a",
                                        "nemo",
                                        "dolore"),
                                    true,
                                    true))"
                            GroupCategories="@(["aut",
                                "et",
                                "magnam"])"
                            LicenseInfo="@("autem")"
                            Modified="@(new DateTime(2002, 5, 25, 11, 37, 58))"
                            Name="@("password")"
                            NumComments="@(201.1357)"
                            NumRatings="@(578.8682)"
                            NumViews="@(848.9022)"
                            Owner="@("Elvie Turcotte")"
                            OwnerFolder="@("Lionel Trantow")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Immediate,
                                    ["deleniti",
                                        "molestiae",
                                        "ab"],
                                    "accusamus",
                                    "omnis",
                                    "sint",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("repellendus")"
                            Screenshots="@(["esse",
                                "est",
                                "ullam"])"
                            Size="@(7)"
                            Snippet="@("incidunt")"
                            Tags="@(["pariatur",
                                "consequatur"])"
                            Title="@("dolores et quas")"
                            TypeKeywords="@(["qui",
                                "et"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("facere et non")"
                            StringContent="@("iusto")"
                            OutFields="@(["nisi",
                                "dolor",
                                "dignissimos",
                                "asperiores"])"
                            FieldInfos="@([new FieldInfo("createdAt",
                                    "doloribus",
                                    "libero",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Count)])"
                            Content="@([new FieldsPopupContent([new FieldInfo("password",
                                        "iure",
                                        "veniam",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("id",
                                        "consequuntur",
                                        "odio",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("status",
                                        "vel",
                                        "quibusdam",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongMonthDayYear),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                    "aperiam odit eos et",
                                    "nostrum voluptatem qui")])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                    "createdAt",
                                    "et distinctio aut",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "title",
                                    "blanditiis quo harum",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("dignissimos voluptates eum",
                                    "7f8fa306-acc4-b542-d3ee-270b7ec880fa",
                                    () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "updatedAt",
                                    "dolor"),
                            new ActionButton("adipisci sequi dolorem",
                                    "https://picsum.photos/640/480/?image=551",
                                    "603bdf09-c37f-529f-ea86-a795a100af52",
                                    () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                    "password",
                                    true,
                                    true,
                                    true,
                                    "perferendis")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("voluptatibus")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("aut")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AboveRight)"
                            LabelExpression="@("nobis")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(14805461.4481)"
                            MinScale="@(21769.4106)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(355.8368))"
                            Symbol="@(new TextSymbol("itaque et eaque",
                                new MapColor(14, 75, 165),
                                new MapColor(235, 196, 42),
                                    new Dimension(458.7372),
                                new MapFont(new Dimension(921.9087),
                                        "Arial",
                                    MapFontStyle.Italic,
                                    FontWeight.Bold,
                                    TextDecoration.LineThrough),
                                    699.9742,
                                new MapColor(56, 101, 91),
                                new MapColor(61, 1, 116),
                                    843.7549,
                                HorizontalAlignment.Left,
                                    true,
                                    631.8640,
                                    new Dimension(726.4961),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Name = 'John Doe'")">
                        </Label>
                        <Field 
                            Name="@("name")"
                            Alias="@("temporibus")"
                            Description="@("voluptatem unde ea sed nihil aperiam")"
                            Length="@(1)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "molestiae" })"
                            ValueType="@(FieldValueType.CountOrAmount)"
                            Domain="@(new RangeDomain("quasi",
                                    "provident",
                                    "status"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("in",
                                21842592.4172),
                                new Effect("voluptatum",
                                    10926091.5465),
                                new Effect("ut",
                                    25140516.2479)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(873.8119,
                                new Polygon([new MapPath([new MapPoint([394.7338,
                                            904.8981,
                                            14.0683]),
                                        new MapPoint([949.9910,
                                            917.6644]),
                                        new MapPoint([996.1272,
                                            414.7543])]),
                                        new MapPath([new MapPoint([853.3500,
                                                862.1878,
                                                109.7577,
                                                404.2310]),
                                            new MapPoint([233.7007,
                                                713.4032]),
                                            new MapPoint([275.9182,
                                                393.1670])])],
                                    new SpatialReference(1,
                                            "eligendi",
                                            "earum",
                                            "vel"),
                                    new Point(-59.3384,
                                            -4.5339,
                                            116.0355,
                                            -69.9152,
                                            901.0957,
                                        new SpatialReference(2,
                                                "id",
                                                "eos",
                                                "soluta"),
                                            true,
                                            true,
                                            264.1810),
                                        true,
                                        true,
                                        true),
                                    [2,
                                        1],
                                SpatialRelationship.Relation,
                                new TimeExtent(new DateTime(2023, 9, 16, 15, 11, 1),
                                        new DateTime(2021, 2, 14, 8, 58, 33)),
                                    QueryUnits.Miles,
                                    "Street = '123 Main St.'"))"
                            IncludedEffect="@([new Effect("earum",
                                41217347.2967),
                                new Effect("eum",
                                    11464347.2075),
                                new Effect("quibusdam",
                                    17427091.5214),
                                new Effect("vel",
                                    39257158.0678)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "maxime iste alias"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(490.2838)"
                            Unit="@(ElevationUnit.Inches)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polygon([new MapPath([new MapPoint([872.8690,
                                870.4021,
                                548.9285]),
                            new MapPoint([748.8222,
                                597.7623,
                                827.5920]),
                            new MapPoint([252.4924,
                                510.4029,
                                57.3321,
                                641.2988])]),
                            new MapPath([new MapPoint([937.5386,
                                    294.4983,
                                    995.9780]),
                                new MapPoint([564.4843,
                                    865.7408,
                                    574.3777,
                                    678.4521])]),
                            new MapPath([new MapPoint([757.5555,
                                    424.4375]),
                                new MapPoint([960.8001,
                                    688.9253,
                                    656.7115]),
                                new MapPoint([66.6501,
                                    710.0820,
                                    320.9181]),
                                new MapPoint([552.0672,
                                    297.7692])])],
                        new SpatialReference(1,
                                "magni",
                                "aliquid",
                                "alias"),
                        new Point(-0.3866,
                                1.8393,
                                33.8111,
                                -3.0164,
                                336.8398,
                            new SpatialReference(5,
                                    "quas",
                                    "architecto",
                                    "minima"),
                                true,
                                true,
                                782.0364),
                            true,
                            true,
                            true),
                    new TextSymbol("quis vero et",
                        new MapColor(147, 158, 213),
                        new MapColor(224, 163, 190),
                            new Dimension(891.0558),
                        new MapFont(new Dimension(478.6929),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            542.8343,
                        new MapColor(113, 237, 86),
                        new MapColor(206, 44, 79),
                            715.4645,
                        HorizontalAlignment.Left,
                            true,
                            438.3513,
                            new Dimension(714.1866),
                            true),
                    new PopupTemplate("a facere dolores",
                            "ut",
                            ["velit",
                                "ut",
                                "mollitia"],
                        [new FieldInfo("updatedAt",
                                "praesentium",
                                "fuga",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("comment",
                                "impedit",
                                "nesciunt",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("qui corrupti dolores",
                                "non ipsa libero quisquam provident distinctio",
                                6,
                                "iure",
                            [new RelatedRecordsInfoFieldOrder("repudiandae",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("ab",
                                OrderBy.Desc)],
                                5),
                        new RelationshipPopupContent("neque qui quia",
                                "est et cumque sint temporibus",
                                4,
                                "necessitatibus",
                            [new RelatedRecordsInfoFieldOrder("unde",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("voluptatibus",
                                OrderBy.Desc)],
                                3),
                        new FieldsPopupContent([new FieldInfo("comment",
                                    "qui",
                                    "necessitatibus",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("name",
                                    "et",
                                    "inventore",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("password",
                                    "sequi",
                                    "magnam",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "amet veniam quia inventore consequatur repudiandae",
                                "hic id voluptatibus")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "title",
                                "quasi culpa recusandae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "id",
                                "dolores eos earum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "updatedAt",
                                "ut dolores nostrum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "updatedAt",
                                "qui soluta temporibus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("dolorem earum recusandae",
                                "https://picsum.photos/640/480/?image=271",
                                "f0406e74-7c57-3f8b-fd2e-6c8fb1bfa401",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "soluta")]),
                        new AttributesDictionary(),
                        true,
                        "sit",
                        "commodi",
                        new GraphicOrigin(Guid.NewGuid(),
                            "nesciunt",
                            8))],
                [new Graphic(new Polyline([new MapPath([new MapPoint([325.0073,
                                148.8435,
                                668.1937]),
                            new MapPoint([448.7727,
                                958.7753])]),
                            new MapPath([new MapPoint([260.4692,
                                    196.6590,
                                    40.3775]),
                                new MapPoint([568.5242,
                                    502.2060,
                                    728.5379,
                                    247.1103]),
                                new MapPoint([309.4597,
                                    281.9405])])],
                        new SpatialReference(8,
                                "autem",
                                "et",
                                "delectus"),
                            true,
                            true),
                    new TextSymbol("corrupti placeat sit",
                        new MapColor(202, 29, 184),
                        new MapColor(127, 24, 204),
                            new Dimension(655.0027),
                        new MapFont(new Dimension(282.7809),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            254.5696,
                        new MapColor(99, 243, 76),
                        new MapColor(162, 157, 60),
                            902.0103,
                        HorizontalAlignment.Right,
                            true,
                            889.1460,
                            new Dimension(607.4442),
                            true),
                    new PopupTemplate("aut sed vel",
                            "temporibus",
                            ["velit",
                                "pariatur"],
                        [new FieldInfo("title",
                                "sed",
                                "velit",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("updatedAt",
                                "aut",
                                "labore",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("phone",
                                "atque",
                                "consectetur",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("repellendus tempore eveniet",
                                "blanditiis accusantium tempora ex hic",
                                7,
                                "et",
                            [new RelatedRecordsInfoFieldOrder("voluptas",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("odit",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("accusamus",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("vero",
                                OrderBy.Asc)],
                                1),
                        new AttachmentsPopupContent("eos repellendus atque",
                                "laboriosam aut aliquam provident rerum",
                                AttachmentsPopupContentDisplayType.Auto)],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "avatar",
                                "quibusdam eos maxime",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "updatedAt",
                                "molestiae sunt mollitia",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "group",
                                "itaque ut ducimus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("dolor asperiores itaque",
                                "https://picsum.photos/640/480/?image=470",
                                "a075a89a-fc14-88d7-af15-cc53d1844638",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "earum")]),
                        new AttributesDictionary(),
                        true,
                        "ab",
                        "et",
                        new GraphicOrigin(Guid.NewGuid(),
                            "odit",
                            4)),
                new Graphic(new Point(-36.5830,
                            83.8125,
                            -112.7539,
                            -73.7416,
                            297.8451,
                        new SpatialReference(7,
                                "molestiae",
                                "est",
                                "omnis"),
                            true,
                            true,
                            601.6236),
                    new TextSymbol("corporis dolore harum",
                        new MapColor(62, 50, 167),
                        new MapColor(193, 85, 61),
                            new Dimension(88.2163),
                        new MapFont(new Dimension(86.1714),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            686.3104,
                        new MapColor(86, 11, 66),
                        new MapColor(14, 62, 169),
                            129.5853,
                        HorizontalAlignment.Right,
                            true,
                            574.5434,
                            new Dimension(439.9506),
                            true),
                    new PopupTemplate("provident ad magni",
                            "deserunt",
                            ["harum",
                                "officiis",
                                "vitae",
                                "consequuntur"],
                        [new FieldInfo("avatar",
                                "excepturi",
                                "maiores",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                        [new TextPopupContent("et perspiciatis consequatur")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "token",
                                "et vel voluptatem",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("quia delectus qui",
                                "https://picsum.photos/640/480/?image=285",
                                "89bc21b0-956c-1ebc-20f1-93243c64da7f",
                                () => { Console.WriteLine("odit"); return Task.CompletedTask; },
                                "name",
                                true,
                                true,
                                true,
                                "dignissimos"),
                        new ActionToggle("consectetur nobis molestiae",
                                "a57d80f4-e1f9-d3ea-82e9-70b2042d99a8",
                                () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "fugiat")]),
                        new AttributesDictionary(),
                        true,
                        "qui",
                        "nulla",
                        new GraphicOrigin(Guid.NewGuid(),
                            "a",
                            9))],
                    ["voluptatem",
                        "in",
                        "numquam"],
                [new Graphic(new Polygon([new MapPath([new MapPoint([199.3264,
                                296.2751,
                                428.8959,
                                663.8285]),
                            new MapPoint([109.3600,
                                610.6836,
                                310.8098]),
                            new MapPoint([929.4205,
                                522.9137,
                                397.8486]),
                            new MapPoint([70.3021,
                                512.4930,
                                993.2501])]),
                            new MapPath([new MapPoint([456.8582,
                                    760.9610,
                                    417.7182]),
                                new MapPoint([476.9902,
                                    445.0056,
                                    654.2206])])],
                        new SpatialReference(4,
                                "error",
                                "ducimus",
                                "atque"),
                        new Point(57.9346,
                                83.2779,
                                -0.4542,
                                -76.4109,
                                303.0932,
                            new SpatialReference(2,
                                    "officiis",
                                    "quam",
                                    "error"),
                                true,
                                true,
                                666.9247),
                            true,
                            true,
                            true),
                    new TextSymbol("molestiae doloribus quod",
                        new MapColor(12, 84, 141),
                        new MapColor(127, 169, 125),
                            new Dimension(958.8986),
                        new MapFont(new Dimension(224.2524),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            32.7405,
                        new MapColor(4, 18, 218),
                        new MapColor(154, 144, 83),
                            729.0104,
                        HorizontalAlignment.Right,
                            true,
                            315.1902,
                            new Dimension(470.3814),
                            true),
                    new PopupTemplate("aliquam sed doloremque",
                            "nam",
                            ["quam",
                                "rerum",
                                "harum",
                                "rerum"],
                        [new FieldInfo("title",
                                "asperiores",
                                "in",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Count)],
                        [new TextPopupContent("libero architecto delectus"),
                        new AttachmentsPopupContent("velit qui quaerat",
                                "consequatur labore et ut rerum consequatur",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "name",
                                "quibusdam ab fugit",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "sint provident consequatur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("voluptatem illum est",
                                "40c0ba9a-91aa-2a0c-adec-f171877c4774",
                                () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "est")]),
                        new AttributesDictionary(),
                        true,
                        "omnis",
                        "sit",
                        new GraphicOrigin(Guid.NewGuid(),
                            "quam",
                            6))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["aut",
                    "omnis"],
                    ["avatar",
                        "updatedAt"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("id");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("id",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polygon([new MapPath([new MapPoint([82.4561,
                                884.4277,
                                214.8642,
                                120.3213]),
                            new MapPoint([173.5352,
                                659.5252,
                                491.9497,
                                413.1455]),
                            new MapPoint([849.2313,
                                135.6247])])],
                        new SpatialReference(3,
                                "aut",
                                "deleniti",
                                "unde"),
                        new Point(171.6259,
                                -85.3031,
                                62.2126,
                                15.4593,
                                4.5480,
                            new SpatialReference(8,
                                    "enim",
                                    "et",
                                    "odit"),
                                true,
                                true,
                                964.3081),
                            true,
                            true,
                            true),
                    new TextSymbol("corrupti cupiditate quia",
                        new MapColor(163, 238, 165),
                        new MapColor(41, 203, 49),
                            new Dimension(562.5393),
                        new MapFont(new Dimension(167.2916),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            329.0083,
                        new MapColor(94, 104, 40),
                        new MapColor(134, 200, 63),
                            615.1569,
                        HorizontalAlignment.Left,
                            true,
                            357.1152,
                            new Dimension(733.4790),
                            true),
                    new PopupTemplate("molestias ut necessitatibus",
                            "nobis",
                            ["aut",
                                "repudiandae"],
                        [new FieldInfo("token",
                                "quae",
                                "consequatur",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("title",
                                "ut",
                                "quidem",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("name",
                                "nemo",
                                "eum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Count)],
                        [new RelationshipPopupContent("sit molestiae quia",
                                "rerum vel nihil rem qui",
                                2,
                                "nobis",
                            [new RelatedRecordsInfoFieldOrder("molestiae",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("reprehenderit",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("quod",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("sit",
                                OrderBy.Asc)],
                                9),
                        new MediaPopupContent("sint et et",
                                "odit et deserunt tempora facere",
                            [new ColumnChartMediaInfo("est quidem sequi",
                                    "ut",
                                    "ut corrupti qui",
                                new ChartMediaInfoValue(["qui",
                                        "cupiditate",
                                        "nihil",
                                        "sint"],
                                        "aperiam",
                                        "iure",
                                    [new ChartMediaInfoValueSeries("updatedAt",
                                            "sequi",
                                            206.3842),
                                    new ChartMediaInfoValueSeries("phone",
                                            "porro",
                                            73.6769),
                                    new ChartMediaInfoValueSeries("group",
                                            "rerum",
                                            194.0194),
                                    new ChartMediaInfoValueSeries("title",
                                            "quae",
                                            44.2214)],
                                    [new MapColor(108, 116, 127),
                                    new MapColor(151, 40, 141),
                                    new MapColor(4, 202, 4),
                                    new MapColor(11, 190, 161)])),
                            new LineChartMediaInfo("quo similique aut",
                                    "est",
                                    "quod ipsa minus",
                                new ChartMediaInfoValue(["repudiandae",
                                        "ut",
                                        "ad",
                                        "deleniti"],
                                        "tempore",
                                        "aliquam",
                                    [new ChartMediaInfoValueSeries("group",
                                            "repudiandae",
                                            510.3608),
                                    new ChartMediaInfoValueSeries("category",
                                            "et",
                                            630.0688),
                                    new ChartMediaInfoValueSeries("id",
                                            "odit",
                                            356.1102)],
                                    [new MapColor(46, 125, 153),
                                    new MapColor(219, 106, 118)]))],
                                5),
                        new MediaPopupContent("autem ad omnis",
                                "est repellat corrupti ut",
                            [new LineChartMediaInfo("ut quo velit",
                                    "dolor",
                                    "vel ex qui",
                                new ChartMediaInfoValue(["doloremque",
                                        "saepe"],
                                        "vel",
                                        "consequatur",
                                    [new ChartMediaInfoValueSeries("id",
                                            "quia",
                                            534.9043),
                                    new ChartMediaInfoValueSeries("comment",
                                            "ipsam",
                                            610.8615),
                                    new ChartMediaInfoValueSeries("category",
                                            "ipsa",
                                            285.2810),
                                    new ChartMediaInfoValueSeries("group",
                                            "et",
                                            963.9031)],
                                    [new MapColor(237, 83, 54),
                                    new MapColor(59, 44, 113),
                                    new MapColor(134, 199, 158),
                                    new MapColor(13, 19, 99)]))],
                                8)],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "token",
                                "et voluptatibus nostrum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("molestias quia et",
                                "https://picsum.photos/640/480/?image=822",
                                "e1713765-0e56-2a97-e32e-9e98d41ad285",
                                () => { Console.WriteLine("at"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "quasi"),
                        new ActionToggle("doloremque consequatur aut",
                                "3ec6546c-503d-a3e0-4a26-6f2e50cdcbda",
                                () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "enim"),
                        new ActionToggle("nulla numquam amet",
                                "1156ab70-a5f1-df3d-354a-400cf7be0ea3",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "officia")]),
                        new AttributesDictionary(),
                        true,
                        "id",
                        "ab",
                        new GraphicOrigin(Guid.NewGuid(),
                            "deleniti",
                            2))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([2,
                    3],
                    true,
                    387.4298,
                    71.9030,
                    "2.4.8.8",
                new Point(2.6569,
                        25.4939,
                        -109.8688,
                        31.0553,
                        245.5050,
                    new SpatialReference(7,
                            "facilis",
                            "animi",
                            "voluptatem"),
                        true,
                        true,
                        648.2057),
                    1,
                    ["incidunt",
                        "et"],
                    "ex",
                    new DateTime(2015, 6, 23, 18, 53, 56),
                    217.0538,
                    5,
                    "id",
                    8),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([1,
                    7,
                    1],
                    true,
                    96.9184,
                    871.4985,
                    "5.2.9.5",
                new Polygon([new MapPath([new MapPoint([493.3559,
                            465.1430,
                            656.3760,
                            738.0689]),
                        new MapPoint([953.0849,
                            745.4798,
                            954.5374])])],
                    new SpatialReference(8,
                            "non",
                            "dignissimos",
                            "ipsam"),
                    new Point(-149.8769,
                            -21.7466,
                            -48.7177,
                            68.9861,
                            362.0046,
                        new SpatialReference(4,
                                "odio",
                                "quasi",
                                "exercitationem"),
                            true,
                            true,
                            604.7195),
                        true,
                        true,
                        true),
                    7,
                    ["facilis",
                        "eaque",
                        "quaerat",
                        "commodi"],
                    "ut",
                    new DateTime(2000, 3, 4, 5, 58, 41),
                    5.4260,
                    7,
                    "eos",
                    8),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([1,
                    8],
                    true,
                    392.4446,
                    802.6410,
                    "1.4.8.6",
                new Point(88.9873,
                        1.4029,
                        -146.6061,
                        7.4907,
                        611.0580,
                    new SpatialReference(3,
                            "dolorem",
                            "adipisci",
                            "magnam"),
                        true,
                        true,
                        357.9430),
                    8,
                    ["pariatur",
                        "exercitationem"],
                    "quia",
                    new DateTime(2006, 5, 1, 0, 10, 24),
                    620.4408,
                    6,
                    "et",
                    1),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([6,
                    7,
                    5,
                    7],
                    true,
                    863.0230,
                    761.5402,
                    "9.7.3.8",
                new Extent(32.0307,
                        -78.5470,
                        -2.4974,
                        12.4851,
                        10.7399,
                        200.5923,
                        978.7683,
                        114.7428,
                    new SpatialReference(1,
                            "rem",
                            "molestias",
                            "quae"),
                        true,
                        true),
                    9,
                    ["vel",
                        "et",
                        "et",
                        "tenetur"],
                    "optio",
                    new DateTime(2011, 3, 21, 1, 1, 54),
                    852.3318,
                    9,
                    "et",
                    6),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.SourceAtop;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "fugit explicabo molestiae"),
                ElevationInfoMode.RelativeToScene,
                    306.5865,
                ElevationUnit.Inches);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("eos",
                    49400744.2394),
                    new Effect("blanditiis",
                        2287940.4981),
                    new Effect("enim",
                        22445122.6387)],
                    true,
                new FeatureFilter(221.4105,
                    new Polygon([new MapPath([new MapPoint([488.8589,
                                716.8565]),
                            new MapPoint([4.4842,
                                417.3185,
                                378.9167,
                                349.7646])]),
                            new MapPath([new MapPoint([336.0259,
                                    517.3085,
                                    631.1372,
                                    810.9775]),
                                new MapPoint([405.3675,
                                    585.4940,
                                    758.3924,
                                    817.6173])])],
                        new SpatialReference(7,
                                "voluptatem",
                                "eum",
                                "adipisci"),
                        new Point(-9.8729,
                                14.7962,
                                -11.1037,
                                55.7448,
                                533.5361,
                            new SpatialReference(2,
                                    "corrupti",
                                    "non",
                                    "quia"),
                                true,
                                true,
                                482.3941),
                            true,
                            true,
                            true),
                        [2,
                            3],
                    SpatialRelationship.EnvelopeIntersects,
                    new TimeExtent(new DateTime(2013, 10, 23, 19, 48, 13),
                            new DateTime(2012, 9, 4, 14, 42, 5)),
                        QueryUnits.Feet,
                        "Street = '123 Main St.'"),
                    [new Effect("laudantium",
                        11047257.1980)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "password",
                    "voluptas",
                    "et ea libero aliquam non animi a",
                    2,
                    true,
                    true,
                    new { Value = "omnis" },
                FieldValueType.Binary,
                new InheritedDomain("token"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(35.2429,
                    127.5416,
                    -48.0999,
                    79.4712,
                    864.9072,
                    861.6496,
                    997.9912,
                    155.1176,
                new SpatialReference(5,
                        "quod",
                        "sequi",
                        "veritatis"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Multipoint;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveAfter,
                    "est",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    18044462.8484,
                    13936.2566,
                    true,
                    new Dimension(273.6861),
                new TextSymbol("culpa quis sunt",
                    new MapColor(106, 173, 78),
                    new MapColor(71, 142, 103),
                        new Dimension(355.6000),
                    new MapFont(new Dimension(74.6846),
                            "Times New Roman",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        775.9693,
                    new MapColor(160, 157, 188),
                    new MapColor(153, 7, 152),
                        523.7579,
                    HorizontalAlignment.Left,
                        true,
                        741.7596,
                        new Dimension(828.6869),
                        true),
                    true,
                    "Age > 21"),
            new Label(LabelPlacement.CenterLeft,
                    "veritatis",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    16883576.5215,
                    8258.3377,
                    true,
                    new Dimension(703.2707),
                new TextSymbol("deleniti fugit consectetur",
                    new MapColor(190, 33, 145),
                    new MapColor(163, 186, 113),
                        new Dimension(505.1714),
                    new MapFont(new Dimension(430.4918),
                            "Courier New",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        755.4286,
                    new MapColor(84, 249, 79),
                    new MapColor(34, 26, 77),
                        404.3483,
                    HorizontalAlignment.Left,
                        true,
                        888.4391,
                        new Dimension(469.2463),
                        true),
                    true,
                    "ObjectID = 1")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("cupiditate",
                SortOrder.Ascending,
                    "non"),
            new OrderedLayerOrderBy("in",
                SortOrder.Descending,
                    "natus")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("rem dolorem optio",
                    "qui",
                    ["odit",
                        "rem"],
                [new FieldInfo("updatedAt",
                        "voluptatem",
                        "consequatur",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(6,
                            true,
                        DateFormat.DayShortMonthYearLongTime),
                        true,
                        true,
                    StatisticType.Stddev),
                new FieldInfo("id",
                        "necessitatibus",
                        "ipsam",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.ShortDateLeLongTime),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("id",
                        "quia",
                        "consequatur",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(9,
                            true,
                        DateFormat.ShortDateLeShortTime),
                        true,
                        true,
                    StatisticType.Sum)],
                [new AttachmentsPopupContent("quibusdam iure dolorum",
                        "non omnis illo voluptatibus velit et",
                        AttachmentsPopupContentDisplayType.Auto),
                new RelationshipPopupContent("aut sed nobis",
                        "eius ipsum perferendis tempora",
                        3,
                        "aut",
                    [new RelatedRecordsInfoFieldOrder("occaecati",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("minus",
                        OrderBy.Desc)],
                        7)],
                [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "updatedAt",
                        "et quasi velit",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("aut non nesciunt",
                        "671051d0-3295-ed26-7dec-57ad0db740d3",
                        () => { Console.WriteLine("nesciunt"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "title",
                        "eius"),
                new ActionToggle("magni aut est",
                        "42064409-1d39-f8ad-bc5d-4e8cf85de073",
                        () => { Console.WriteLine("eligendi"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "password",
                        "consequatur"),
                new ActionToggle("doloribus et laboriosam",
                        "309401d2-3ba6-2ff4-2c82-840af60d7816",
                        () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "group",
                        "provident"),
                new ActionButton("asperiores quia distinctio",
                        "https://picsum.photos/640/480/?image=526",
                        "fcf72750-8d4e-0f73-6455-bbcd1143b7d4",
                        () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                        "status",
                        true,
                        true,
                        true,
                        "velit")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "iure",
                    "ullam",
                    714.1138,
                    ["non",
                        "id"],
                    new DateTime(2008, 6, 18, 7, 7, 56),
                    "est",
                    "sapiente ipsam aut sint maiores",
                new Extent(-50.8736,
                        37.2379,
                        2.2345,
                        23.9188,
                        748.8076,
                        121.3833,
                        519.0926,
                        357.6685,
                    new SpatialReference(6,
                            "qui",
                            "et",
                            "minus"),
                        true,
                        true),
                    ["reprehenderit",
                        "commodi",
                        "explicabo"],
                    "ex",
                    new DateTime(2004, 4, 4, 21, 5, 54),
                    "id",
                    969.4783);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.EqualInterval,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                            new MapColor(80, 112, 231),
                            new MapColor(169, 212, 138))]),
                        942.2512,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(525.1105,
                                319.3329)],
                            "ipsa",
                            "dignissimos",
                            "inventore"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(147.0217,
                                909.7656),
                        new AuthoringInfoField1ClassBreakInfos(662.2556,
                                790.3879),
                        new AuthoringInfoField1ClassBreakInfos(225.9577,
                                27.6572),
                        new AuthoringInfoField1ClassBreakInfos(90.7088,
                                701.8603)],
                            "quos",
                            "illum",
                            "sint"),
                        ["aut",
                            "et",
                            "velit"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "veritatis",
                        true,
                    LengthUnit.Decimeters,
                        14.0853,
                        96.9375,
                        61.2277,
                        106.8306),
                new PictureFillSymbol("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0",
                    new Dimension(100.3121),
                    new Dimension(389.6340),
                    new Dimension(846.7647),
                    new Dimension(842.1913),
                    92.1819,
                    -75.5362,
                    new Outline(new MapColor(195, 118, 241),
                        new Dimension(12.7720),
                        SimpleLineSymbolStyle.None,
                        Cap.Round,
                        Join.Round,
                        new LineSymbolMarker(new MapColor(175, 128, 32),
                            LinePlacement.Begin,
                            LineSymbolMarkerStyle.Arrow),
                        769.5979),
                    new MapColor(94, 248, 18)),
                    "optio",
                    new DefaultSymbol(),
                    "eum",
                    "nostrum",
                    "corporis",
                    "quo",
                new UniqueValueRendererLegendOptions("voluptas et voluptatem"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("laborum",
                        new TextSymbol("et quo aut",
                            new MapColor(31, 0, 11),
                            new MapColor(38, 214, 238),
                                new Dimension(149.3157),
                            new MapFont(new Dimension(176.6212),
                                    "Courier New",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                942.2790,
                            new MapColor(30, 102, 63),
                            new MapColor(135, 181, 167),
                                737.1873,
                            HorizontalAlignment.Right,
                                true,
                                787.9011,
                                new Dimension(469.7050),
                                true),
                        [new UniqueValue("nobis",
                                "rem",
                                "ratione")])],
                        "et")],
                [new UniqueValueInfo("odio",
                    new TextSymbol("eligendi voluptas saepe",
                        new MapColor(148, 204, 120),
                        new MapColor(247, 35, 139),
                            new Dimension(323.6766),
                        new MapFont(new Dimension(746.6978),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            427.0448,
                        new MapColor(193, 61, 105),
                        new MapColor(250, 157, 118),
                            672.9248,
                        HorizontalAlignment.Right,
                            true,
                            353.3375,
                            new Dimension(846.5018),
                            true),
                        "veniam"),
                new UniqueValueInfo("non",
                    new TextSymbol("labore cum doloremque",
                        new MapColor(61, 104, 30),
                        new MapColor(113, 192, 120),
                            new Dimension(876.0256),
                        new MapFont(new Dimension(868.0265),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            868.5830,
                        new MapColor(252, 81, 140),
                        new MapColor(236, 31, 68),
                            183.0406,
                        HorizontalAlignment.Center,
                            true,
                            4.3212,
                            new Dimension(141.4903),
                            true),
                        "ea")],
                    "maiores",
                    "non maxime sed");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(2,
                    "voluptas",
                    "voluptatem",
                    "et");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("est quam provident earum velit similique qui",
                DrawingTool.Point,
                    "status",
                new Graphic(new Polygon([new MapPath([new MapPoint([398.2782,
                                792.3777]),
                            new MapPoint([381.4620,
                                893.9788,
                                897.2617,
                                917.6632])]),
                            new MapPath([new MapPoint([666.5337,
                                    771.6151]),
                                new MapPoint([110.9669,
                                    204.7591,
                                    31.9871,
                                    911.1461]),
                                new MapPoint([22.5828,
                                    407.0056])]),
                            new MapPath([new MapPoint([242.5227,
                                    827.0045]),
                                new MapPoint([125.9800,
                                    312.5089,
                                    695.6797]),
                                new MapPoint([957.2413,
                                    522.6390,
                                    177.0861])])],
                        new SpatialReference(5,
                                "et",
                                "molestiae",
                                "asperiores"),
                        new Point(74.7643,
                                -37.6991,
                                135.2377,
                                57.3982,
                                629.7377,
                            new SpatialReference(1,
                                    "neque",
                                    "rerum",
                                    "recusandae"),
                                true,
                                true,
                                489.9741),
                            true,
                            true,
                            true),
                    new TextSymbol("illum architecto libero",
                        new MapColor(91, 119, 111),
                        new MapColor(98, 156, 7),
                            new Dimension(450.4129),
                        new MapFont(new Dimension(90.7746),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            142.9739,
                        new MapColor(158, 228, 217),
                        new MapColor(74, 82, 217),
                            41.7233,
                        HorizontalAlignment.Center,
                            true,
                            757.4773,
                            new Dimension(796.0764),
                            true),
                    new PopupTemplate("est dolores est",
                            "nemo",
                            ["harum",
                                "consequatur",
                                "quisquam",
                                "possimus"],
                        [new FieldInfo("updatedAt",
                                "ut",
                                "quia",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("createdAt",
                                "ad",
                                "distinctio",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new AttachmentsPopupContent("fugiat repellat accusamus",
                                "enim dolore consectetur tenetur laborum a harum",
                                AttachmentsPopupContentDisplayType.Auto),
                        new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "ratione",
                                    "doloremque aut impedit"))],
                        [new ExpressionInfo("return $feature.Name;",
                                "title",
                                "quasi et molestiae",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("aperiam qui voluptatibus",
                                "4b183afd-08d0-097d-57f3-acd8beeba13c",
                                () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "est"),
                        new ActionToggle("atque sit magni",
                                "862021db-42f6-7012-4b0f-8c48d8665569",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "group",
                                "inventore")]),
                        new AttributesDictionary(),
                        true,
                        "et",
                        "est",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aut",
                            6)),
                    new Thumbnail("in",
                        "magni",
                        279.9808,
                        215.1195)),
            new FeatureTemplate("ratione laudantium vel vero",
                DrawingTool.UpArrow,
                    "name",
                new Graphic(new Point(16.8683,
                            -64.4357,
                            47.6088,
                            -12.9459,
                            832.3571,
                        new SpatialReference(1,
                                "a",
                                "architecto",
                                "explicabo"),
                            true,
                            true,
                            925.2492),
                    new TextSymbol("unde id ea",
                        new MapColor(233, 218, 197),
                        new MapColor(101, 52, 80),
                            new Dimension(180.8762),
                        new MapFont(new Dimension(302.3109),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            697.9988,
                        new MapColor(82, 48, 223),
                        new MapColor(12, 1, 63),
                            129.9261,
                        HorizontalAlignment.Right,
                            true,
                            182.6429,
                            new Dimension(103.0046),
                            true),
                    new PopupTemplate("quis qui numquam",
                            "inventore",
                            ["necessitatibus",
                                "perspiciatis",
                                "quisquam",
                                "aut"],
                        [new FieldInfo("name",
                                "aut",
                                "est",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Min)],
                        [new AttachmentsPopupContent("corporis quis velit",
                                "corrupti molestias et minus voluptatem",
                                AttachmentsPopupContentDisplayType.Auto),
                        new TextPopupContent("non libero sit")],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "password",
                                "sint quis voluptatem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "title",
                                "eos quo voluptates",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "status",
                                "voluptatibus tenetur consequatur",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "comment",
                                "ipsum doloribus rerum",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("sint quia soluta",
                                "https://picsum.photos/640/480/?image=343",
                                "f39afe78-e0e3-4c69-922f-a1f66842fb71",
                                () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "nobis")]),
                        new AttributesDictionary(),
                        true,
                        "facere",
                        "aspernatur",
                        new GraphicOrigin(Guid.NewGuid(),
                            "enim",
                            3)),
                    new Thumbnail("mollitia",
                        "blanditiis",
                        116.5223,
                        27.6985)),
            new FeatureTemplate("in qui omnis non est",
                DrawingTool.Point,
                    "comment",
                new Graphic(new Polyline([new MapPath([new MapPoint([348.4897,
                                594.2275,
                                459.6464,
                                252.8614]),
                            new MapPoint([200.8893,
                                719.3875,
                                172.4046]),
                            new MapPoint([19.1136,
                                10.9843,
                                214.2473])]),
                            new MapPath([new MapPoint([951.9510,
                                    804.3660,
                                    856.4141,
                                    365.8289]),
                                new MapPoint([732.9650,
                                    236.8624,
                                    724.5444,
                                    946.7507])]),
                            new MapPath([new MapPoint([113.0286,
                                    547.4344,
                                    544.0240,
                                    581.9206]),
                                new MapPoint([645.4710,
                                    759.7031,
                                    54.5214]),
                                new MapPoint([224.6106,
                                    248.5034])])],
                        new SpatialReference(6,
                                "vel",
                                "natus",
                                "quis"),
                            true,
                            true),
                    new TextSymbol("alias voluptate dolorum",
                        new MapColor(81, 152, 48),
                        new MapColor(13, 138, 143),
                            new Dimension(622.7208),
                        new MapFont(new Dimension(446.3677),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            572.1334,
                        new MapColor(0, 52, 213),
                        new MapColor(139, 145, 116),
                            289.8034,
                        HorizontalAlignment.Right,
                            true,
                            102.1676,
                            new Dimension(575.8522),
                            true),
                    new PopupTemplate("explicabo dignissimos praesentium",
                            "illo",
                            ["ut",
                                "qui",
                                "qui",
                                "itaque"],
                        [new FieldInfo("password",
                                "et",
                                "quos",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("comment",
                                "vel",
                                "reprehenderit",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Min)],
                        [new MediaPopupContent("rerum nesciunt minus",
                                "commodi ullam illum nulla",
                            [new BarChartMediaInfo("consequatur reprehenderit quas",
                                    "voluptatum",
                                    "id accusamus occaecati",
                                new ChartMediaInfoValue(["veritatis",
                                        "ullam"],
                                        "consequatur",
                                        "qui",
                                    [new ChartMediaInfoValueSeries("id",
                                            "totam",
                                            716.8131),
                                    new ChartMediaInfoValueSeries("category",
                                            "aut",
                                            567.2654),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "optio",
                                            261.4813)],
                                    [new MapColor(20, 7, 30)]))],
                                5),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "ut",
                                    "ut nobis repellendus"))],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "createdAt",
                                "aut fuga quisquam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("eum dolores in",
                                "ac2d0a64-be83-5f9e-9917-f5c086dfb914",
                                () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "iure"),
                        new ActionButton("repellat totam et",
                                "https://picsum.photos/640/480/?image=918",
                                "1d839789-8de8-c8f8-db74-8f66b60b6d84",
                                () => { Console.WriteLine("soluta"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "ut"),
                        new ActionToggle("quod accusantium consequatur",
                                "d90785ef-5d55-36df-22bd-4512a20d093e",
                                () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "veniam"),
                        new ActionButton("nam cupiditate laborum",
                                "https://picsum.photos/640/480/?image=667",
                                "7a1c8e1d-9444-c77f-da9c-368def7f69c3",
                                () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "dolor")]),
                        new AttributesDictionary(),
                        true,
                        "nemo",
                        "dolores",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            9)),
                    new Thumbnail("tempore",
                        "est",
                        191.8896,
                        58.8207)),
            new FeatureTemplate("corrupti mollitia architecto distinctio illum placeat",
                DrawingTool.Arrow,
                    "group",
                new Graphic(new Polyline([new MapPath([new MapPoint([471.8150,
                                169.2622,
                                298.9456]),
                            new MapPoint([880.4377,
                                373.0806,
                                33.7137,
                                611.7344]),
                            new MapPoint([894.1023,
                                754.6118])]),
                            new MapPath([new MapPoint([852.8688,
                                    285.1221,
                                    53.0283,
                                    349.2099]),
                                new MapPoint([387.5880,
                                    541.5584])]),
                            new MapPath([new MapPoint([424.8063,
                                    339.7415,
                                    859.5771,
                                    719.5370]),
                                new MapPoint([189.9509,
                                    180.0679,
                                    611.0968])])],
                        new SpatialReference(2,
                                "perspiciatis",
                                "est",
                                "voluptatem"),
                            true,
                            true),
                    new TextSymbol("accusantium delectus doloremque",
                        new MapColor(245, 171, 94),
                        new MapColor(192, 191, 20),
                            new Dimension(964.9879),
                        new MapFont(new Dimension(413.6516),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            31.0624,
                        new MapColor(135, 43, 64),
                        new MapColor(38, 160, 51),
                            570.6125,
                        HorizontalAlignment.Left,
                            true,
                            355.9572,
                            new Dimension(936.6755),
                            true),
                    new PopupTemplate("eos fugiat illum",
                            "aut",
                            ["ullam",
                                "eveniet",
                                "quidem"],
                        [new FieldInfo("email",
                                "minima",
                                "natus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("title",
                                "eligendi",
                                "expedita",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("phone",
                                "et",
                                "magni",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("token",
                                "architecto",
                                "aut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Var)],
                        [new RelationshipPopupContent("velit itaque voluptatum",
                                "eos odio modi minus tenetur in expedita",
                                2,
                                "modi",
                            [new RelatedRecordsInfoFieldOrder("consequuntur",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("placeat",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("et",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("mollitia",
                                OrderBy.Asc)],
                                6),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "molestias",
                                    "illum voluptas ut")),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                    "consequatur",
                                    "tempora quas sed"))],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "phone",
                                "rerum dolores ab",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "voluptatem at aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "title",
                                "cum doloremque exercitationem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "comment",
                                "ipsum quaerat et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("quaerat a inventore",
                                "https://picsum.photos/640/480/?image=928",
                                "8b54d95c-0026-17f8-7e5b-1245641736a0",
                                () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                                "avatar",
                                true,
                                true,
                                true,
                                "expedita"),
                        new ActionButton("ipsum et ut",
                                "https://picsum.photos/640/480/?image=733",
                                "ecb0be46-3f17-e9a0-36d4-0ba2a3656b3d",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "sit"),
                        new ActionToggle("ab deserunt tempore",
                                "b4f5b889-ab18-dc5c-20e5-f6f27e2f28a5",
                                () => { Console.WriteLine("cumque"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "ullam"),
                        new ActionButton("ut tempore neque",
                                "https://picsum.photos/640/480/?image=960",
                                "cc5dded7-9cb0-df54-c758-116c8f6c40bc",
                                () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "sequi")]),
                        new AttributesDictionary(),
                        true,
                        "dolor",
                        "aut",
                        new GraphicOrigin(Guid.NewGuid(),
                            "eligendi",
                            5)),
                    new Thumbnail("eum",
                        "ipsum",
                        101.3175,
                        29.9556))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2005, 9, 11, 18, 4, 58),
                    new DateTime(2008, 5, 24, 16, 31, 50));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("ipsam",
                    "veritatis",
                new TimeExtent(new DateTime(2001, 5, 13, 15, 26, 44),
                        new DateTime(2007, 6, 6, 16, 56, 3)),
                new TimeInterval(TemporalTime.Seconds,
                        691.3371),
                    [new DateTime(2019, 6, 7, 20, 50, 20),
                        new DateTime(2010, 9, 21, 11, 56, 41),
                        new DateTime(2018, 5, 21, 5, 51, 28)],
                    "Asia/Kolkata",
                    "rem");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Decades,
                    732.6783);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2018, 11, 2, 5, 41, 9),
                    new DateTime(2013, 2, 20, 11, 30, 24));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
