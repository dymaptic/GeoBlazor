@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson")"
                        Copyright="@("est")"
                        Title="@("itaque temporibus quia")"
                        Opacity="@(0.2342)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        BlendMode="@(BlendMode.Multiply)"
                        DefinitionExpression="@("consequatur")"
                        DisplayField="@("dolores")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("hic",
                            19663068.3364))"
                        FullExtent="@(new Extent(-6.4501,
                                47.1681,
                                -58.2663,
                                45.3471,
                                980.2793,
                                717.5622,
                                466.5322,
                                469.2822,
                            new SpatialReference(6,
                                    "magnam",
                                    "eveniet",
                                    "at"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Polyline)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(18388109.6438)"
                        MinScale="@(47891.2756)"
                        ObjectIdField="@("esse")"
                        OutFields="@(["quia",
                            "id"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(645.5458)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(7,
                                "officiis",
                                "quaerat",
                                "sed"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(701.2607)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("aut")"
                            EndField="@("quis")"
                            Stops="@([new DateTime(2006, 5, 21, 16, 33, 51),
                                new DateTime(2021, 7, 12, 17, 46, 8),
                                new DateTime(2006, 5, 15, 18, 49, 4),
                                new DateTime(2003, 3, 11, 17, 27, 39)])"
                            TimeZone="@("America/Lima")"
                            TrackIdField="@("quia")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Minutes)"
                                Value="@(731.7829)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2019, 11, 11, 21, 53, 52))"
                                End="@(new DateTime(2004, 1, 14, 2, 28, 40))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2013, 4, 5, 22, 12, 3))"
                            End="@(new DateTime(2006, 7, 20, 5, 54, 13))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("eaque ullam voluptatem tempora minima vel")"
                            DrawingTool="@(DrawingTool.None)"
                            Name="@("title")"
                            Prototype="@(new Graphic(new Polygon([new MapPath([new MapPoint([687.9121,
                                            597.0059]),
                                        new MapPoint([149.6476,
                                            795.9411])])],
                                    new SpatialReference(3,
                                            "voluptas",
                                            "nam",
                                            "eum"),
                                    new Point(-14.2772,
                                            21.5842,
                                            130.0444,
                                            -14.7011,
                                            276.6325,
                                        new SpatialReference(6,
                                                "rerum",
                                                "ipsam",
                                                "eum"),
                                            true,
                                            true,
                                            126.2538),
                                        true,
                                        true,
                                        true),
                                new TextSymbol("beatae quam eius",
                                    new MapColor(108, 197, 4),
                                    new MapColor(177, 152, 137),
                                        new Dimension(4.1024),
                                    new MapFont(new Dimension(652.3350),
                                            "Georgia",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.Underline),
                                        195.9624,
                                    new MapColor(66, 170, 69),
                                    new MapColor(111, 17, 33),
                                        452.0696,
                                    HorizontalAlignment.Right,
                                        true,
                                        128.5926,
                                        new Dimension(864.8250),
                                        true),
                                new PopupTemplate("vero magni corporis",
                                        "voluptatibus",
                                        ["et",
                                            "eum",
                                            "nam"],
                                    [new FieldInfo("avatar",
                                            "nostrum",
                                            "tempora",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDate),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("name",
                                            "sequi",
                                            "cum",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var)],
                                    [new RelationshipPopupContent("voluptas quos animi",
                                            "accusamus qui aliquid dolor sunt explicabo a",
                                            5,
                                            "quod",
                                        [new RelatedRecordsInfoFieldOrder("non",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("minus",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("quia",
                                            OrderBy.Asc)],
                                            1),
                                    new RelationshipPopupContent("eos omnis accusamus",
                                            "autem necessitatibus reprehenderit molestiae tempora quod",
                                            9,
                                            "sed",
                                        [new RelatedRecordsInfoFieldOrder("non",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("iure",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("adipisci",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("sed",
                                            OrderBy.Asc)],
                                            8),
                                    new TextPopupContent("rerum et aliquid"),
                                    new AttachmentsPopupContent("sed omnis rerum",
                                            "voluptatum autem at voluptatem",
                                            AttachmentsPopupContentDisplayType.Preview)],
                                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "password",
                                            "in fugiat ab",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "phone",
                                            "ut quas sed",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("nisi ullam sunt",
                                            "c679ec1a-150e-7554-89af-81e9727f0ea7",
                                            () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "title",
                                            "voluptas"),
                                    new ActionButton("maxime sed harum",
                                            "https://picsum.photos/640/480/?image=103",
                                            "ed70bd8a-36d1-d405-3544-69b734a9d7f8",
                                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                            "phone",
                                            true,
                                            true,
                                            true,
                                            "laboriosam"),
                                    new ActionButton("ut qui ut",
                                            "https://picsum.photos/640/480/?image=248",
                                            "b7401eb4-3f18-db31-55ea-d1090bbfeaa6",
                                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                            "createdAt",
                                            true,
                                            true,
                                            true,
                                            "placeat")]),
                                    new AttributesDictionary(),
                                    true,
                                    "quo",
                                    "qui",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "maiores",
                                        2)))"
                            Thumbnail="@(new Thumbnail("similique",
                                "ut",
                                232.7033,
                                123.4436))">
                        </FeatureTemplate>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                    new MapColor(115, 135, 33),
                                    new MapColor(56, 179, 66)),
                                    783.3935,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(295.3493,
                                            351.4449),
                                    new AuthoringInfoField1ClassBreakInfos(478.0126,
                                            934.8567)],
                                        "vel",
                                        "ut",
                                        "enim"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(402.6751,
                                            258.3090),
                                    new AuthoringInfoField1ClassBreakInfos(743.3446,
                                            737.1237)],
                                        "sint",
                                        "minus",
                                        "veritatis"),
                                    ["fuga",
                                        "est",
                                        "est",
                                        "voluptatibus"],
                                AuthoringInfoFlowTheme.WaveFront,
                                    "velit",
                                    true,
                                LengthUnit.UsFeet,
                                    135.5956,
                                    748.4832,
                                    791.1944,
                                    410.1754))">
                        </UniqueValueRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Public)"
                            AccessInformation="@("ut")"
                            ApiKey="@("id")"
                            AvgRating="@(156.4704)"
                            Categories="@(["et",
                                "in"])"
                            Created="@(new DateTime(2020, 11, 16, 16, 35, 43))"
                            Culture="@("numquam")"
                            Description="@("consequatur earum ut sint asperiores nihil qui")"
                            Extent="@(new Extent(40.2020,
                                    -165.2551,
                                    71.7940,
                                    40.5106,
                                    739.1321,
                                    626.0680,
                                    458.2662,
                                    92.1733,
                                new SpatialReference(5,
                                        "modi",
                                        "consequatur",
                                        "ut"),
                                    true,
                                    true))"
                            GroupCategories="@(["eos",
                                "illum"])"
                            LicenseInfo="@("ea")"
                            Modified="@(new DateTime(2021, 3, 13, 1, 19, 21))"
                            Name="@("title")"
                            NumComments="@(687.0248)"
                            NumRatings="@(733.7194)"
                            NumViews="@(913.7955)"
                            Owner="@("Webster Leuschke")"
                            OwnerFolder="@("Lane Gutkowski")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.Immediate,
                                    ["minima",
                                        "tempore",
                                        "soluta"],
                                    "totam",
                                    "in",
                                    "vitae",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("laborum")"
                            Screenshots="@(["sint",
                                "impedit"])"
                            Size="@(3)"
                            Snippet="@("voluptatem")"
                            Tags="@(["commodi",
                                "velit",
                                "tenetur",
                                "sed"])"
                            Title="@("fugit amet quia")"
                            TypeKeywords="@(["est",
                                "sit",
                                "tempora",
                                "rerum"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("sed accusantium et")"
                            StringContent="@("voluptate")"
                            OutFields="@(["nemo",
                                "adipisci"])"
                            FieldInfos="@([new FieldInfo("phone",
                                    "qui",
                                    "et",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateShortTime),
                                    true,
                                    true,
                                StatisticType.Sum)])"
                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "et",
                                        "iusto eos sed")),
                            new RelationshipPopupContent("unde occaecati architecto",
                                    "sit omnis voluptatem aut laborum voluptatem",
                                    6,
                                    "nobis",
                                [new RelatedRecordsInfoFieldOrder("asperiores",
                                    OrderBy.Asc)],
                                    5)])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                    "createdAt",
                                    "ut hic in",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Name;",
                                    "name",
                                    "asperiores possimus laboriosam",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "id",
                                    "sit cum suscipit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "password",
                                    "reprehenderit distinctio perferendis",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionToggle("quas dicta et",
                                    "b3e37bd9-07b2-fca6-eade-442fcff74624",
                                    () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "comment",
                                    "quo")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("occaecati")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("nisi")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowEnd)"
                            LabelExpression="@("aut")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                            LabelPosition="@(LabelPosition.Curved)"
                            MaxScale="@(3913783.8218)"
                            MinScale="@(3247.6991)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(590.1639))"
                            Symbol="@(new TextSymbol("deserunt quo quia",
                                new MapColor(240, 85, 214),
                                new MapColor(55, 8, 110),
                                    new Dimension(964.0862),
                                new MapFont(new Dimension(407.8785),
                                        "Garamond",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bold,
                                    TextDecoration.None),
                                    556.2819,
                                new MapColor(126, 48, 48),
                                new MapColor(12, 83, 198),
                                    493.9386,
                                HorizontalAlignment.Right,
                                    true,
                                    609.1656,
                                    new Dimension(393.3434),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("ObjectID = 1")">
                        </Label>
                        <Field 
                            Name="@("password")"
                            Alias="@("eveniet")"
                            Description="@("ratione repellendus deserunt ea consectetur")"
                            Length="@(9)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "sed" })"
                            ValueType="@(FieldValueType.TypeOrCategory)"
                            Domain="@(new RangeDomain("quia",
                                    "dolores",
                                    "name"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("dolorem",
                                20145306.5055),
                                new Effect("est",
                                    17226155.7152)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(605.1068,
                                new Polygon([new MapPath([new MapPoint([449.5442,
                                            955.7791,
                                            440.2048]),
                                        new MapPoint([458.0876,
                                            630.2345,
                                            732.9878,
                                            880.6950]),
                                        new MapPoint([17.4515,
                                            342.1384,
                                            550.7632,
                                            528.0498]),
                                        new MapPoint([986.9565,
                                            931.6628,
                                            25.6001,
                                            938.3865])])],
                                    new SpatialReference(7,
                                            "molestias",
                                            "consectetur",
                                            "porro"),
                                    new Point(-164.2469,
                                            -49.4662,
                                            88.8334,
                                            34.7292,
                                            686.5051,
                                        new SpatialReference(2,
                                                "et",
                                                "porro",
                                                "unde"),
                                            true,
                                            true,
                                            750.7857),
                                        true,
                                        true,
                                        true),
                                    [2,
                                        7,
                                        1,
                                        9],
                                SpatialRelationship.Touches,
                                new TimeExtent(new DateTime(2004, 5, 22, 15, 13, 22),
                                        new DateTime(2020, 7, 25, 22, 19, 56)),
                                    QueryUnits.Meters,
                                    "Name = 'John Doe'"))"
                            IncludedEffect="@([new Effect("fugit",
                                31433724.9194),
                                new Effect("quidem",
                                    45863123.0462),
                                new Effect("velit",
                                    31141849.2636),
                                new Effect("quae",
                                    3778495.7896)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "consequuntur sequi perspiciatis"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(79.3887)"
                            Unit="@(ElevationUnit.Kilometers)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Extent(-24.9666,
                            -162.1120,
                            -84.6722,
                            28.4144,
                            393.4421,
                            479.3439,
                            749.6792,
                            600.6258,
                        new SpatialReference(5,
                                "tenetur",
                                "sit",
                                "aliquid"),
                            true,
                            true),
                    new TextSymbol("molestias veritatis consequatur",
                        new MapColor(231, 126, 82),
                        new MapColor(12, 178, 39),
                            new Dimension(408.9041),
                        new MapFont(new Dimension(532.2375),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            332.6788,
                        new MapColor(246, 37, 245),
                        new MapColor(110, 82, 234),
                            797.0526,
                        HorizontalAlignment.Right,
                            true,
                            244.2281,
                            new Dimension(247.2890),
                            true),
                    new PopupTemplate("veritatis optio at",
                            "autem",
                            ["modi",
                                "non"],
                        [new FieldInfo("id",
                                "aut",
                                "dolorem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("createdAt",
                                "libero",
                                "dolor",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("name",
                                "quam",
                                "modi",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("group",
                                "id",
                                "enim",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new RelationshipPopupContent("voluptate dolorum optio",
                                "blanditiis quisquam dolorum maiores amet",
                                3,
                                "aliquam",
                            [new RelatedRecordsInfoFieldOrder("quo",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("et",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("fugiat",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("distinctio",
                                OrderBy.Desc)],
                                7),
                        new TextPopupContent("velit at illo")],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "phone",
                                "porro facere delectus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "status",
                                "qui aut itaque",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "updatedAt",
                                "et et aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "email",
                                "aut natus ea",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("laudantium eveniet voluptate",
                                "https://picsum.photos/640/480/?image=681",
                                "34b7773c-d6af-a7de-883c-063ed67be85d",
                                () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "quia")]),
                        new AttributesDictionary(),
                        true,
                        "voluptates",
                        "assumenda",
                        new GraphicOrigin(Guid.NewGuid(),
                            "aut",
                            5)),
                new Graphic(new Polygon([new MapPath([new MapPoint([602.7252,
                                73.5830]),
                            new MapPoint([196.3686,
                                329.5871,
                                532.8314]),
                            new MapPoint([762.7671,
                                750.9972])])],
                        new SpatialReference(1,
                                "minus",
                                "neque",
                                "non"),
                        new Point(130.0479,
                                75.9784,
                                -88.9052,
                                31.3341,
                                261.9971,
                            new SpatialReference(8,
                                    "consequatur",
                                    "qui",
                                    "ex"),
                                true,
                                true,
                                774.2134),
                            true,
                            true,
                            true),
                    new TextSymbol("magni tempore totam",
                        new MapColor(119, 84, 233),
                        new MapColor(106, 249, 17),
                            new Dimension(148.8170),
                        new MapFont(new Dimension(690.1399),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            190.5178,
                        new MapColor(115, 152, 88),
                        new MapColor(70, 47, 27),
                            568.2863,
                        HorizontalAlignment.Right,
                            true,
                            102.6819,
                            new Dimension(472.8103),
                            true),
                    new PopupTemplate("veritatis ea fuga",
                            "voluptas",
                            ["necessitatibus",
                                "magni",
                                "minus",
                                "laudantium"],
                        [new FieldInfo("group",
                                "pariatur",
                                "unde",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("group",
                                "facilis",
                                "officia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("comment",
                                "cumque",
                                "ea",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("password",
                                "neque",
                                "inventore",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new AttachmentsPopupContent("soluta voluptatem excepturi",
                                "sapiente accusamus qui soluta",
                                AttachmentsPopupContentDisplayType.Preview)],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "category",
                                "aut a qui",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "avatar",
                                "minima quibusdam nam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "title",
                                "enim vel itaque",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "category",
                                "nam eum eos",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("eius suscipit rem",
                                "d5b0b9f4-a43b-e6a2-9a29-6d02d902088f",
                                () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "rerum"),
                        new ActionToggle("qui et rerum",
                                "4882cc1d-2e23-e9aa-6ade-3335947cdc01",
                                () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "tenetur")]),
                        new AttributesDictionary(),
                        true,
                        "ducimus",
                        "voluptatem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "qui",
                            5)),
                new Graphic(new Polygon([new MapPath([new MapPoint([427.9599,
                                737.8399,
                                377.7071,
                                781.5361]),
                            new MapPoint([10.2333,
                                621.3591])]),
                            new MapPath([new MapPoint([144.8952,
                                    302.5524,
                                    614.9751]),
                                new MapPoint([956.9369,
                                    654.4435,
                                    197.0442]),
                                new MapPoint([224.7132,
                                    335.0670,
                                    706.8626,
                                    392.9631])])],
                        new SpatialReference(5,
                                "sapiente",
                                "rem",
                                "quas"),
                        new Point(-35.9585,
                                -68.5888,
                                -56.3875,
                                -56.7776,
                                71.7428,
                            new SpatialReference(6,
                                    "eos",
                                    "blanditiis",
                                    "porro"),
                                true,
                                true,
                                34.6484),
                            true,
                            true,
                            true),
                    new TextSymbol("quibusdam architecto facilis",
                        new MapColor(123, 137, 132),
                        new MapColor(189, 11, 177),
                            new Dimension(639.5812),
                        new MapFont(new Dimension(129.4368),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            454.9517,
                        new MapColor(209, 171, 58),
                        new MapColor(196, 223, 114),
                            677.6297,
                        HorizontalAlignment.Right,
                            true,
                            43.2118,
                            new Dimension(369.2695),
                            true),
                    new PopupTemplate("earum numquam ab",
                            "similique",
                            ["sapiente",
                                "et",
                                "debitis",
                                "incidunt"],
                        [new FieldInfo("comment",
                                "id",
                                "enim",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("avatar",
                                "molestiae",
                                "nisi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new TextPopupContent("et possimus alias"),
                        new RelationshipPopupContent("ut cupiditate qui",
                                "cumque eveniet veniam exercitationem qui",
                                4,
                                "eum",
                            [new RelatedRecordsInfoFieldOrder("expedita",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("voluptas",
                                OrderBy.Desc)],
                                8),
                        new TextPopupContent("mollitia quia odit")],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "category",
                                "quo quae tenetur",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("id omnis commodi",
                                "6c54092e-5b54-e4c9-c6c6-78dfa89d183d",
                                () => { Console.WriteLine("maxime"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "quia"),
                        new ActionToggle("mollitia est esse",
                                "63b3324a-9a12-4917-043b-3d748e53e0a2",
                                () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "voluptatem"),
                        new ActionButton("dignissimos earum aut",
                                "https://picsum.photos/640/480/?image=920",
                                "23eef2e6-d55d-d45c-7fd4-963454569c77",
                                () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "consequuntur"),
                        new ActionButton("ipsum qui eius",
                                "https://picsum.photos/640/480/?image=862",
                                "c95e7df6-5ae3-9d96-eccb-36b6261163f1",
                                () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "aliquam")]),
                        new AttributesDictionary(),
                        true,
                        "eum",
                        "dignissimos",
                        new GraphicOrigin(Guid.NewGuid(),
                            "qui",
                            4))],
                [new Graphic(new Point(-157.3642,
                            -50.5998,
                            -148.1711,
                            -21.0676,
                            552.8380,
                        new SpatialReference(6,
                                "itaque",
                                "minus",
                                "quas"),
                            true,
                            true,
                            27.7433),
                    new TextSymbol("modi tenetur ab",
                        new MapColor(2, 107, 244),
                        new MapColor(190, 237, 29),
                            new Dimension(743.9644),
                        new MapFont(new Dimension(790.6631),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            613.4922,
                        new MapColor(36, 107, 172),
                        new MapColor(180, 107, 5),
                            494.1840,
                        HorizontalAlignment.Right,
                            true,
                            211.2467,
                            new Dimension(675.0589),
                            true),
                    new PopupTemplate("culpa recusandae corrupti",
                            "rerum",
                            ["id",
                                "rerum",
                                "rerum"],
                        [new FieldInfo("name",
                                "aut",
                                "omnis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("sint molestias voluptates",
                                "reiciendis vitae nesciunt veritatis est dolorum",
                                1,
                                "dolores",
                            [new RelatedRecordsInfoFieldOrder("ex",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("aut",
                                OrderBy.Asc)],
                                7),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "voluptatum",
                                    "iusto magni in"))],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "title",
                                "itaque ab temporibus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "group",
                                "amet blanditiis laborum",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "group",
                                "placeat quia fugiat",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("magni fugiat sapiente",
                                "92cbfee7-5ae8-c310-fef8-084ed9a971d1",
                                () => { Console.WriteLine("fugit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "avatar",
                                "ea")]),
                        new AttributesDictionary(),
                        true,
                        "et",
                        "id",
                        new GraphicOrigin(Guid.NewGuid(),
                            "temporibus",
                            2)),
                new Graphic(new Polyline([new MapPath([new MapPoint([954.4659,
                                14.5258,
                                277.4099,
                                442.8873]),
                            new MapPoint([841.4628,
                                87.5922,
                                645.7214]),
                            new MapPoint([306.7425,
                                288.6567,
                                892.2487,
                                325.1049]),
                            new MapPoint([297.9125,
                                763.8138])])],
                        new SpatialReference(4,
                                "ut",
                                "et",
                                "qui"),
                            true,
                            true),
                    new TextSymbol("minus qui omnis",
                        new MapColor(224, 90, 84),
                        new MapColor(92, 202, 163),
                            new Dimension(979.8996),
                        new MapFont(new Dimension(613.8619),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            263.1143,
                        new MapColor(45, 247, 61),
                        new MapColor(97, 223, 183),
                            106.8696,
                        HorizontalAlignment.Center,
                            true,
                            678.4991,
                            new Dimension(882.7969),
                            true),
                    new PopupTemplate("illum est numquam",
                            "animi",
                            ["ut",
                                "laboriosam",
                                "cum"],
                        [new FieldInfo("token",
                                "sequi",
                                "est",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new FieldsPopupContent([new FieldInfo("avatar",
                                    "dolor",
                                    "corporis",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Stddev)],
                                "rerum nihil culpa consequatur",
                                "et temporibus nihil"),
                        new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "illo",
                                    "ut ea in")),
                        new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "error",
                                    "aut nesciunt modi"))],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "password",
                                "sapiente fugit iste",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "updatedAt",
                                "rem fuga sed",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "id",
                                "sunt molestias sed",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "phone",
                                "qui voluptatem eveniet",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("dolor vero omnis",
                                "59943066-28c5-4faa-6167-cb03144c45bf",
                                () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "eius")]),
                        new AttributesDictionary(),
                        true,
                        "voluptas",
                        "exercitationem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "perspiciatis",
                            1))],
                    ["voluptatem",
                        "labore",
                        "qui",
                        "natus"],
                [new Graphic(new Point(-147.0042,
                            -22.6435,
                            82.6947,
                            85.6971,
                            508.9544,
                        new SpatialReference(9,
                                "error",
                                "officia",
                                "est"),
                            true,
                            true,
                            829.5238),
                    new TextSymbol("qui aperiam omnis",
                        new MapColor(231, 35, 225),
                        new MapColor(222, 232, 129),
                            new Dimension(929.8872),
                        new MapFont(new Dimension(517.5525),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            335.3796,
                        new MapColor(81, 217, 236),
                        new MapColor(248, 181, 99),
                            134.2559,
                        HorizontalAlignment.Center,
                            true,
                            84.8714,
                            new Dimension(395.8484),
                            true),
                    new PopupTemplate("nulla nostrum aperiam",
                            "at",
                            ["sit",
                                "quaerat",
                                "ut",
                                "ipsa"],
                        [new FieldInfo("status",
                                "corrupti",
                                "dolorem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("group",
                                "est",
                                "accusamus",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("token",
                                "repellat",
                                "hic",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new FieldsPopupContent([new FieldInfo("token",
                                    "reprehenderit",
                                    "assumenda",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("comment",
                                    "eius",
                                    "corporis",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthDayYear),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("group",
                                    "in",
                                    "rerum",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.DayShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "qui ipsum rerum necessitatibus",
                                "odio sed minus"),
                        new RelationshipPopupContent("laborum illum eum",
                                "hic laboriosam quia dolorem",
                                1,
                                "veritatis",
                            [new RelatedRecordsInfoFieldOrder("id",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("nisi",
                                OrderBy.Asc)],
                                4)],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "name",
                                "molestiae velit sapiente",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "createdAt",
                                "nemo aut consequatur",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "title",
                                "tenetur in ullam",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("qui dolorem explicabo",
                                "eff64fe4-4a63-1d3a-6054-f18b1c5315ab",
                                () => { Console.WriteLine("beatae"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "molestias"),
                        new ActionButton("inventore sunt itaque",
                                "https://picsum.photos/640/480/?image=604",
                                "1a69e739-1fbd-1f19-3bb4-c934d0de833b",
                                () => { Console.WriteLine("eveniet"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "occaecati"),
                        new ActionButton("dolorem id ea",
                                "https://picsum.photos/640/480/?image=409",
                                "a585d7a6-41e7-6592-691f-57f5e7ef177f",
                                () => { Console.WriteLine("debitis"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "cumque"),
                        new ActionButton("ut saepe nisi",
                                "https://picsum.photos/640/480/?image=392",
                                "455df504-fc92-9abd-49af-3d8ae41d5974",
                                () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "commodi")]),
                        new AttributesDictionary(),
                        true,
                        "est",
                        "possimus",
                        new GraphicOrigin(Guid.NewGuid(),
                            "enim",
                            3))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["ab",
                    "temporibus"],
                    ["token",
                        "phone",
                        "title",
                        "token"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("group");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("category",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polygon([new MapPath([new MapPoint([162.9168,
                                563.3643,
                                323.1897,
                                171.9796]),
                            new MapPoint([378.6720,
                                120.3360,
                                937.8212,
                                631.5662]),
                            new MapPoint([160.5846,
                                976.5823,
                                142.6060,
                                229.7425])]),
                            new MapPath([new MapPoint([8.9190,
                                    548.2041,
                                    464.6513,
                                    903.4673]),
                                new MapPoint([228.1697,
                                    878.3472,
                                    775.2459]),
                                new MapPoint([70.6913,
                                    993.7040,
                                    340.7636,
                                    498.2174]),
                                new MapPoint([380.8003,
                                    192.8916])])],
                        new SpatialReference(7,
                                "labore",
                                "voluptatem",
                                "aperiam"),
                        new Point(-23.6044,
                                87.5636,
                                -90.2525,
                                -55.5636,
                                785.6380,
                            new SpatialReference(4,
                                    "iure",
                                    "sit",
                                    "eos"),
                                true,
                                true,
                                214.6692),
                            true,
                            true,
                            true),
                    new TextSymbol("deleniti quia modi",
                        new MapColor(23, 185, 6),
                        new MapColor(60, 214, 38),
                            new Dimension(813.9880),
                        new MapFont(new Dimension(781.7374),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            693.4872,
                        new MapColor(197, 47, 78),
                        new MapColor(101, 240, 88),
                            103.7473,
                        HorizontalAlignment.Left,
                            true,
                            687.1316,
                            new Dimension(844.0571),
                            true),
                    new PopupTemplate("amet libero aut",
                            "temporibus",
                            ["quia",
                                "quia",
                                "expedita"],
                        [new FieldInfo("password",
                                "fugit",
                                "aut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("avatar",
                                "necessitatibus",
                                "voluptatem",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("group",
                                "corrupti",
                                "cumque",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("magni ea eum",
                                "ipsum delectus non dicta ea sunt",
                                5,
                                "molestiae",
                            [new RelatedRecordsInfoFieldOrder("omnis",
                                OrderBy.Desc),
                            new RelatedRecordsInfoFieldOrder("praesentium",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("consectetur",
                                OrderBy.Desc)],
                                2),
                        new TextPopupContent("odit fugiat voluptas"),
                        new AttachmentsPopupContent("itaque voluptatem vitae",
                                "iste aut cupiditate esse amet",
                                AttachmentsPopupContentDisplayType.Preview),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "rerum",
                                    "ullam iste omnis"))],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "group",
                                "sint impedit aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "avatar",
                                "voluptas consequuntur animi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "minus reprehenderit officiis",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "token",
                                "asperiores et velit",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("qui nesciunt eligendi",
                                "f5459f93-a20c-485e-e112-91a9d3a2c634",
                                () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "aliquam")]),
                        new AttributesDictionary(),
                        true,
                        "saepe",
                        "suscipit",
                        new GraphicOrigin(Guid.NewGuid(),
                            "unde",
                            7))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([3,
                    4,
                    6],
                    true,
                    173.3193,
                    126.3517,
                    "3.4.2.8",
                new Point(92.6757,
                        54.5862,
                        98.1016,
                        -64.4834,
                        389.1738,
                    new SpatialReference(7,
                            "similique",
                            "est",
                            "quia"),
                        true,
                        true,
                        909.4995),
                    5,
                    ["est",
                        "culpa",
                        "est",
                        "sed"],
                    "dolore",
                    new DateTime(2022, 1, 22, 7, 57, 11),
                    775.6086,
                    1,
                    "voluptatum",
                    8),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([6,
                    7],
                    true,
                    946.9196,
                    467.6155,
                    "0.9.7.3",
                new Point(29.2307,
                        7.0029,
                        -32.5306,
                        -39.8725,
                        300.7692,
                    new SpatialReference(9,
                            "vitae",
                            "ex",
                            "repellendus"),
                        true,
                        true,
                        877.9970),
                    1,
                    ["velit",
                        "rerum"],
                    "cumque",
                    new DateTime(2021, 7, 24, 21, 20, 4),
                    121.3729,
                    3,
                    "architecto",
                    3),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([9,
                    9],
                    true,
                    337.4503,
                    961.5453,
                    "1.3.7.3",
                new Point(-167.9129,
                        43.8648,
                        -14.3691,
                        -37.8925,
                        287.0899,
                    new SpatialReference(5,
                            "recusandae",
                            "unde",
                            "in"),
                        true,
                        true,
                        697.6896),
                    2,
                    ["blanditiis",
                        "quae"],
                    "voluptas",
                    new DateTime(2011, 5, 22, 8, 52, 17),
                    246.8191,
                    9,
                    "qui",
                    1),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([5,
                    2,
                    2],
                    true,
                    308.2422,
                    973.4594,
                    "0.9.3.6",
                new Extent(46.9536,
                        169.7807,
                        -75.6270,
                        25.3720,
                        204.1496,
                        74.5421,
                        907.9020,
                        776.0794,
                    new SpatialReference(3,
                            "quia",
                            "modi",
                            "optio"),
                        true,
                        true),
                    5,
                    ["sint",
                        "fugit"],
                    "consectetur",
                    new DateTime(2020, 4, 15, 20, 8, 34),
                    424.9555,
                    7,
                    "est",
                    2),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.DestinationOver;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "et dicta quia"),
                ElevationInfoMode.OnTheGround,
                    750.8328,
                ElevationUnit.Inches);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("nostrum",
                    28041360.7281),
                    new Effect("vel",
                        48029640.6441),
                    new Effect("rerum",
                        28515966.0971),
                    new Effect("suscipit",
                        43975062.1617)],
                    true,
                new FeatureFilter(413.5791,
                    new Polygon([new MapPath([new MapPoint([285.7281,
                                140.5054,
                                383.7393,
                                250.9181]),
                            new MapPoint([175.1657,
                                204.0600,
                                682.7284]),
                            new MapPoint([721.9721,
                                59.5953,
                                238.4860,
                                850.1974])]),
                            new MapPath([new MapPoint([38.5353,
                                    159.7119,
                                    20.1295,
                                    835.1247]),
                                new MapPoint([510.6775,
                                    225.3558])]),
                            new MapPath([new MapPoint([674.1933,
                                    519.2043,
                                    302.5502,
                                    844.5858]),
                                new MapPoint([932.6347,
                                    966.8397,
                                    215.4657])]),
                            new MapPath([new MapPoint([352.8449,
                                    733.6932]),
                                new MapPoint([697.2755,
                                    775.9883,
                                    968.8905])])],
                        new SpatialReference(9,
                                "cum",
                                "ea",
                                "nostrum"),
                        new Point(-39.9504,
                                19.7428,
                                13.0576,
                                3.1362,
                                63.7870,
                            new SpatialReference(7,
                                    "sunt",
                                    "tenetur",
                                    "unde"),
                                true,
                                true,
                                693.3617),
                            true,
                            true,
                            true),
                        [7,
                            7],
                    SpatialRelationship.Overlaps,
                    new TimeExtent(new DateTime(2002, 6, 4, 16, 49, 45),
                            new DateTime(2018, 9, 17, 16, 37, 43)),
                        QueryUnits.NauticalMiles,
                        "Country = 'Canada'"),
                    [new Effect("rerum",
                        17669354.0166)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "group",
                    "nostrum",
                    "et iusto aut commodi amet quisquam est",
                    2,
                    true,
                    true,
                    new { Value = "fuga" },
                FieldValueType.NameOrTitle,
                new RangeDomain("labore",
                        "vero",
                        "name")),
            new Field(default,
                    "group",
                    "pariatur",
                    "molestiae amet minima qui corporis",
                    1,
                    true,
                    true,
                    new { Value = "laborum" },
                FieldValueType.NameOrTitle,
                new InheritedDomain("password")),
            new Field(default,
                    "email",
                    "recusandae",
                    "id voluptas enim rerum commodi omnis alias",
                    9,
                    true,
                    true,
                    new { Value = "sapiente" },
                FieldValueType.None,
                new InheritedDomain("phone"))];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(110.0866,
                    -21.4442,
                    -67.7649,
                    17.4541,
                    923.3781,
                    692.8838,
                    94.9148,
                    632.6375,
                new SpatialReference(8,
                        "labore",
                        "ullam",
                        "ut"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Polyline;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveStart,
                    "et",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    40304258.4953,
                    46740.2036,
                    true,
                    new Dimension(275.1252),
                new TextSymbol("rerum commodi mollitia",
                    new MapColor(214, 174, 10),
                    new MapColor(81, 249, 57),
                        new Dimension(784.3707),
                    new MapFont(new Dimension(562.5721),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        658.9704,
                    new MapColor(42, 234, 17),
                    new MapColor(36, 14, 96),
                        525.1589,
                    HorizontalAlignment.Right,
                        true,
                        589.6492,
                        new Dimension(946.6371),
                        true),
                    true,
                    "PostalCode = 'M5V 1J9'"),
            new Label(LabelPlacement.BelowBefore,
                    "enim",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    11761551.3897,
                    24467.5624,
                    true,
                    new Dimension(139.2595),
                new TextSymbol("aliquid ut autem",
                    new MapColor(185, 186, 30),
                    new MapColor(14, 106, 151),
                        new Dimension(560.9127),
                    new MapFont(new Dimension(318.5195),
                            "Arial",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        190.4789,
                    new MapColor(234, 194, 30),
                    new MapColor(198, 213, 141),
                        115.5788,
                    HorizontalAlignment.Center,
                        true,
                        822.1249,
                        new Dimension(352.7265),
                        true),
                    true,
                    "Province = 'Ontario'"),
            new Label(LabelPlacement.BelowRight,
                    "itaque",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    464819.1309,
                    18521.1536,
                    true,
                    new Dimension(493.4321),
                new TextSymbol("a ut possimus",
                    new MapColor(251, 179, 229),
                    new MapColor(249, 249, 163),
                        new Dimension(232.9469),
                    new MapFont(new Dimension(815.1179),
                            "Arial",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        127.2146,
                    new MapColor(219, 80, 181),
                    new MapColor(132, 108, 172),
                        459.5655,
                    HorizontalAlignment.Right,
                        true,
                        237.6291,
                        new Dimension(842.1207),
                        true),
                    true,
                    "ObjectID = 1")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("possimus",
                SortOrder.Ascending,
                    "aut"),
            new OrderedLayerOrderBy("nobis",
                SortOrder.Ascending,
                    "dolor"),
            new OrderedLayerOrderBy("voluptates",
                SortOrder.Descending,
                    "maiores")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("praesentium maxime facere",
                    "eos",
                    ["animi",
                        "cupiditate",
                        "perferendis",
                        "sunt"],
                [new FieldInfo("createdAt",
                        "commodi",
                        "sunt",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.Year),
                        true,
                        true,
                    StatisticType.Avg),
                new FieldInfo("title",
                        "earum",
                        "quas",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(6,
                            true,
                        DateFormat.LongMonthDayYearLongTime24),
                        true,
                        true,
                    StatisticType.Max),
                new FieldInfo("title",
                        "qui",
                        "nobis",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(8,
                            true,
                        DateFormat.ShortDateLeShortTime24),
                        true,
                        true,
                    StatisticType.Min),
                new FieldInfo("createdAt",
                        "voluptates",
                        "et",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(3,
                            true,
                        DateFormat.LongMonthYear),
                        true,
                        true,
                    StatisticType.Stddev)],
                [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "voluptatem",
                            "est expedita alias"))],
                [new ExpressionInfo("return Date();",
                        "password",
                        "culpa cumque harum",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "phone",
                        "qui totam ut",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("nemo fugit commodi",
                        "d41aed54-c5d7-ae84-26a0-017f21676d08",
                        () => { Console.WriteLine("reprehenderit"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "email",
                        "dolores"),
                new ActionButton("repellendus et qui",
                        "https://picsum.photos/640/480/?image=360",
                        "a6f32c5b-4309-e015-98e9-d75382782131",
                        () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                        "createdAt",
                        true,
                        true,
                        true,
                        "pariatur"),
                new ActionToggle("quos eos nihil",
                        "038d425c-dbd3-31d8-38df-8ffe6bbadbca",
                        () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "comment",
                        "magni")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "quo",
                    "odit",
                    598.5811,
                    ["odit",
                        "culpa",
                        "suscipit",
                        "molestiae"],
                    new DateTime(2005, 2, 21, 21, 7, 21),
                    "sapiente",
                    "omnis facilis quod ratione voluptas rerum quia",
                new Extent(6.9577,
                        3.5291,
                        -77.5288,
                        -64.6491,
                        924.9394,
                        789.4707,
                        674.8401,
                        429.9087,
                    new SpatialReference(6,
                            "enim",
                            "et",
                            "est"),
                        true,
                        true),
                    ["recusandae",
                        "suscipit",
                        "ab"],
                    "tempora",
                    new DateTime(2004, 1, 8, 10, 2, 23),
                    "category",
                    630.5629);
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.EqualInterval,
                    new AlgorithmicColorRamp(Algorithm.Hsv,
                        new MapColor(83, 67, 91),
                        new MapColor(233, 70, 183)),
                        874.3968,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(810.7943,
                                11.0341),
                        new AuthoringInfoField1ClassBreakInfos(214.3234,
                                787.4225)],
                            "facilis",
                            "id",
                            "facilis"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(200.1845,
                                815.9995)],
                            "sed",
                            "iusto",
                            "et"),
                        ["fuga",
                            "ut",
                            "iste"],
                    AuthoringInfoFlowTheme.FlowLine,
                        "quaerat",
                        true,
                    LengthUnit.Meters,
                        901.9136,
                        548.4695,
                        622.1903,
                        137.5556),
                new PictureFillSymbol("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0",
                    new Dimension(436.0059),
                    new Dimension(581.2240),
                    new Dimension(862.7836),
                    new Dimension(753.6522),
                    54.0050,
                    -13.6692,
                    new Outline(new MapColor(104, 117, 37),
                        new Dimension(120.4561),
                        SimpleLineSymbolStyle.ShortDash,
                        Cap.Round,
                        Join.Round,
                        new LineSymbolMarker(new MapColor(104, 88, 202),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Circle),
                        970.6341),
                    new MapColor(33, 180, 245)),
                    "nam",
                    new DefaultSymbol(),
                    "autem",
                    "et",
                    "distinctio",
                    "culpa",
                new UniqueValueRendererLegendOptions("fugit eos impedit"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("corporis",
                        new TextSymbol("et qui est",
                            new MapColor(34, 187, 188),
                            new MapColor(95, 47, 124),
                                new Dimension(553.2159),
                            new MapFont(new Dimension(122.7513),
                                    "Arial",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.LineThrough),
                                400.5075,
                            new MapColor(158, 231, 95),
                            new MapColor(2, 107, 220),
                                781.3826,
                            HorizontalAlignment.Center,
                                true,
                                24.0044,
                                new Dimension(260.0534),
                                true),
                        [new UniqueValue("nulla",
                                "facilis",
                                "dignissimos"),
                        new UniqueValue("voluptatum",
                                "quia",
                                "autem"),
                        new UniqueValue("dolores",
                                "ad",
                                "quia"),
                        new UniqueValue("dolor",
                                "illum",
                                "culpa")])],
                        "fugit"),
                new UniqueValueGroup([new UniqueValueClass("enim",
                        new TextSymbol("ut omnis ullam",
                            new MapColor(248, 148, 34),
                            new MapColor(62, 139, 213),
                                new Dimension(523.7321),
                            new MapFont(new Dimension(996.7332),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.None),
                                426.4405,
                            new MapColor(98, 94, 126),
                            new MapColor(57, 109, 8),
                                737.9829,
                            HorizontalAlignment.Right,
                                true,
                                855.6316,
                                new Dimension(407.3848),
                                true),
                        [new UniqueValue("rerum",
                                "occaecati",
                                "impedit"),
                        new UniqueValue("quo",
                                "iusto",
                                "error"),
                        new UniqueValue("nam",
                                "illo",
                                "autem"),
                        new UniqueValue("explicabo",
                                "minus",
                                "omnis")]),
                    new UniqueValueClass("sapiente",
                        new TextSymbol("mollitia consequatur illum",
                            new MapColor(135, 225, 203),
                            new MapColor(218, 70, 100),
                                new Dimension(462.3779),
                            new MapFont(new Dimension(328.3140),
                                    "Georgia",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                404.7327,
                            new MapColor(54, 106, 167),
                            new MapColor(132, 233, 164),
                                589.8920,
                            HorizontalAlignment.Center,
                                true,
                                379.7915,
                                new Dimension(423.7161),
                                true),
                        [new UniqueValue("id",
                                "ad",
                                "nisi"),
                        new UniqueValue("necessitatibus",
                                "ut",
                                "sit"),
                        new UniqueValue("voluptas",
                                "dolorem",
                                "ut")]),
                    new UniqueValueClass("consequatur",
                        new TextSymbol("ullam vero aut",
                            new MapColor(85, 233, 86),
                            new MapColor(142, 250, 102),
                                new Dimension(357.1101),
                            new MapFont(new Dimension(198.7333),
                                    "Georgia",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                414.4072,
                            new MapColor(78, 130, 218),
                            new MapColor(64, 40, 200),
                                134.7551,
                            HorizontalAlignment.Left,
                                true,
                                519.6656,
                                new Dimension(20.5933),
                                true),
                        [new UniqueValue("qui",
                                "animi",
                                "nisi")]),
                    new UniqueValueClass("dignissimos",
                        new TextSymbol("consequatur ut saepe",
                            new MapColor(173, 229, 16),
                            new MapColor(131, 240, 151),
                                new Dimension(721.3642),
                            new MapFont(new Dimension(380.5795),
                                    "Verdana",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.Underline),
                                640.9051,
                            new MapColor(122, 106, 216),
                            new MapColor(126, 62, 28),
                                881.7515,
                            HorizontalAlignment.Left,
                                true,
                                461.6368,
                                new Dimension(605.1980),
                                true),
                        [new UniqueValue("ducimus",
                                "qui",
                                "tempore"),
                        new UniqueValue("enim",
                                "perspiciatis",
                                "aliquid"),
                        new UniqueValue("similique",
                                "esse",
                                "non")])],
                        "eius"),
                new UniqueValueGroup([new UniqueValueClass("quia",
                        new TextSymbol("quibusdam distinctio rerum",
                            new MapColor(55, 24, 6),
                            new MapColor(18, 225, 164),
                                new Dimension(873.5430),
                            new MapFont(new Dimension(278.7622),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.Underline),
                                865.1440,
                            new MapColor(54, 180, 4),
                            new MapColor(85, 91, 116),
                                437.7328,
                            HorizontalAlignment.Center,
                                true,
                                442.4514,
                                new Dimension(158.0292),
                                true),
                        [new UniqueValue("porro",
                                "non",
                                "quo"),
                        new UniqueValue("ipsam",
                                "laboriosam",
                                "animi")])],
                        "cupiditate"),
                new UniqueValueGroup([new UniqueValueClass("nesciunt",
                        new TextSymbol("enim qui inventore",
                            new MapColor(123, 123, 100),
                            new MapColor(174, 196, 102),
                                new Dimension(151.6887),
                            new MapFont(new Dimension(620.4258),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.Underline),
                                609.2528,
                            new MapColor(59, 227, 110),
                            new MapColor(217, 120, 168),
                                979.2608,
                            HorizontalAlignment.Left,
                                true,
                                657.6750,
                                new Dimension(410.3829),
                                true),
                        [new UniqueValue("aut",
                                "quae",
                                "sed")]),
                    new UniqueValueClass("aspernatur",
                        new TextSymbol("similique reprehenderit quia",
                            new MapColor(136, 127, 196),
                            new MapColor(144, 32, 174),
                                new Dimension(724.4209),
                            new MapFont(new Dimension(671.7939),
                                    "Courier New",
                                MapFontStyle.Normal,
                                FontWeight.Normal,
                                TextDecoration.None),
                                200.7275,
                            new MapColor(89, 82, 54),
                            new MapColor(150, 192, 171),
                                643.6286,
                            HorizontalAlignment.Center,
                                true,
                                136.0296,
                                new Dimension(270.0213),
                                true),
                        [new UniqueValue("non",
                                "ut",
                                "voluptas")]),
                    new UniqueValueClass("velit",
                        new TextSymbol("est aut ea",
                            new MapColor(152, 133, 151),
                            new MapColor(222, 191, 131),
                                new Dimension(717.5987),
                            new MapFont(new Dimension(593.4798),
                                    "Times New Roman",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                693.3704,
                            new MapColor(37, 96, 83),
                            new MapColor(200, 196, 70),
                                758.7764,
                            HorizontalAlignment.Right,
                                true,
                                472.5722,
                                new Dimension(622.5174),
                                true),
                        [new UniqueValue("iste",
                                "libero",
                                "numquam"),
                        new UniqueValue("quasi",
                                "ex",
                                "commodi"),
                        new UniqueValue("et",
                                "officia",
                                "voluptatem")])],
                        "est")],
                [new UniqueValueInfo("maiores",
                    new TextSymbol("sed dolore quaerat",
                        new MapColor(35, 141, 1),
                        new MapColor(150, 142, 23),
                            new Dimension(437.2212),
                        new MapFont(new Dimension(582.1251),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            400.7583,
                        new MapColor(109, 70, 15),
                        new MapColor(185, 134, 120),
                            509.9453,
                        HorizontalAlignment.Left,
                            true,
                            690.9601,
                            new Dimension(450.0080),
                            true),
                        "pariatur"),
                new UniqueValueInfo("aut",
                    new TextSymbol("sit porro modi",
                        new MapColor(186, 96, 223),
                        new MapColor(37, 18, 8),
                            new Dimension(171.1352),
                        new MapFont(new Dimension(948.3294),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            212.7926,
                        new MapColor(46, 167, 124),
                        new MapColor(163, 231, 50),
                            205.8888,
                        HorizontalAlignment.Right,
                            true,
                            235.9787,
                            new Dimension(491.2440),
                            true),
                        "officia"),
                new UniqueValueInfo("omnis",
                    new TextSymbol("et quibusdam ea",
                        new MapColor(159, 156, 91),
                        new MapColor(159, 164, 33),
                            new Dimension(549.1843),
                        new MapFont(new Dimension(52.8981),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            295.2949,
                        new MapColor(230, 248, 244),
                        new MapColor(62, 178, 57),
                            80.6026,
                        HorizontalAlignment.Left,
                            true,
                            920.2666,
                            new Dimension(222.2238),
                            true),
                        "magnam"),
                new UniqueValueInfo("quidem",
                    new TextSymbol("vel consequatur fuga",
                        new MapColor(63, 24, 44),
                        new MapColor(1, 248, 249),
                            new Dimension(725.1150),
                        new MapFont(new Dimension(646.7941),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            3.8523,
                        new MapColor(178, 231, 211),
                        new MapColor(18, 180, 140),
                            947.7444,
                        HorizontalAlignment.Left,
                            true,
                            205.0026,
                            new Dimension(317.7839),
                            true),
                        "fuga")],
                    "quisquam",
                    "unde aperiam soluta");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(8,
                    "sed",
                    "consequatur",
                    "maxime");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("eum repudiandae incidunt dolorem molestiae quod qui",
                DrawingTool.Rectangle,
                    "avatar",
                new Graphic(new Polygon([new MapPath([new MapPoint([560.8298,
                                555.3111,
                                402.5310]),
                            new MapPoint([331.1536,
                                77.7899]),
                            new MapPoint([38.4624,
                                161.6499])]),
                            new MapPath([new MapPoint([21.8838,
                                    883.5046,
                                    265.8374]),
                                new MapPoint([802.6654,
                                    916.6656,
                                    158.5870]),
                                new MapPoint([738.3331,
                                    154.4085,
                                    316.9309])]),
                            new MapPath([new MapPoint([568.1240,
                                    412.7367,
                                    772.2932,
                                    887.5309]),
                                new MapPoint([319.0610,
                                    402.1521]),
                                new MapPoint([714.4429,
                                    448.0101])])],
                        new SpatialReference(8,
                                "assumenda",
                                "vitae",
                                "saepe"),
                        new Point(168.2078,
                                -11.5311,
                                47.8819,
                                -22.2799,
                                109.6738,
                            new SpatialReference(9,
                                    "odit",
                                    "est",
                                    "cumque"),
                                true,
                                true,
                                114.2994),
                            true,
                            true,
                            true),
                    new TextSymbol("iusto recusandae ut",
                        new MapColor(131, 233, 20),
                        new MapColor(47, 20, 48),
                            new Dimension(383.6350),
                        new MapFont(new Dimension(486.6917),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            117.7892,
                        new MapColor(125, 121, 5),
                        new MapColor(54, 91, 157),
                            234.3998,
                        HorizontalAlignment.Right,
                            true,
                            985.8836,
                            new Dimension(609.7211),
                            true),
                    new PopupTemplate("provident est aut",
                            "tempore",
                            ["odio",
                                "exercitationem",
                                "itaque"],
                        [new FieldInfo("phone",
                                "incidunt",
                                "fugit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("name",
                                "sit",
                                "dicta",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("group",
                                "eligendi",
                                "non",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("email",
                                "unde",
                                "id",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Max)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                    "quo",
                                    "neque ab exercitationem"))],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "comment",
                                "ut omnis recusandae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "phone",
                                "magnam quisquam unde",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "email",
                                "itaque ea voluptas",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("corporis porro maxime",
                                "https://picsum.photos/640/480/?image=321",
                                "fe32a0ce-f11a-f14e-0d67-7a6f07738b2d",
                                () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                "id",
                                true,
                                true,
                                true,
                                "nulla")]),
                        new AttributesDictionary(),
                        true,
                        "fugit",
                        "officia",
                        new GraphicOrigin(Guid.NewGuid(),
                            "deserunt",
                            9)),
                    new Thumbnail("enim",
                        "deleniti",
                        145.1617,
                        80.1919)),
            new FeatureTemplate("sed sint rerum inventore modi",
                DrawingTool.Circle,
                    "comment",
                new Graphic(new Polygon([new MapPath([new MapPoint([381.5158,
                                5.7674,
                                308.4859,
                                676.2243]),
                            new MapPoint([343.9349,
                                557.9642,
                                187.5466,
                                533.7158])]),
                            new MapPath([new MapPoint([211.0949,
                                    614.4675,
                                    263.7216]),
                                new MapPoint([724.7966,
                                    214.4203,
                                    762.2152,
                                    60.1038])]),
                            new MapPath([new MapPoint([958.6565,
                                    712.3438]),
                                new MapPoint([869.8721,
                                    466.6006,
                                    750.3148,
                                    330.1861])])],
                        new SpatialReference(1,
                                "et",
                                "voluptas",
                                "ea"),
                        new Point(-106.2166,
                                -13.1223,
                                -57.5037,
                                -4.0638,
                                587.5260,
                            new SpatialReference(9,
                                    "quo",
                                    "architecto",
                                    "vel"),
                                true,
                                true,
                                452.9057),
                            true,
                            true,
                            true),
                    new TextSymbol("ut fuga nemo",
                        new MapColor(45, 46, 251),
                        new MapColor(116, 15, 195),
                            new Dimension(793.4694),
                        new MapFont(new Dimension(708.2583),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            821.0988,
                        new MapColor(183, 253, 79),
                        new MapColor(237, 82, 155),
                            271.7454,
                        HorizontalAlignment.Left,
                            true,
                            541.9812,
                            new Dimension(821.2395),
                            true),
                    new PopupTemplate("aut quia odit",
                            "nostrum",
                            ["molestiae",
                                "quia"],
                        [new FieldInfo("status",
                                "ut",
                                "nesciunt",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("id",
                                "omnis",
                                "eveniet",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new RelationshipPopupContent("quae blanditiis iusto",
                                "et quam voluptate iure ad dolor dolor",
                                6,
                                "iste",
                            [new RelatedRecordsInfoFieldOrder("possimus",
                                OrderBy.Asc)],
                                8),
                        new MediaPopupContent("tenetur suscipit magni",
                                "voluptatem quia cumque voluptas iste commodi",
                            [new ColumnChartMediaInfo("nihil est sint",
                                    "rerum",
                                    "fuga totam voluptatibus",
                                new ChartMediaInfoValue(["fuga",
                                        "animi",
                                        "enim"],
                                        "repellendus",
                                        "quisquam",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "enim",
                                            188.6605),
                                    new ChartMediaInfoValueSeries("group",
                                            "expedita",
                                            114.6973)],
                                    [new MapColor(247, 57, 9),
                                    new MapColor(124, 234, 246),
                                    new MapColor(248, 72, 93)]))],
                                9),
                        new MediaPopupContent("omnis rerum ipsam",
                                "iure dolor sunt aperiam",
                            [new LineChartMediaInfo("vel repudiandae expedita",
                                    "asperiores",
                                    "hic nihil optio",
                                new ChartMediaInfoValue(["ullam",
                                        "et",
                                        "aut"],
                                        "explicabo",
                                        "incidunt",
                                    [new ChartMediaInfoValueSeries("group",
                                            "quia",
                                            600.1074),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "quisquam",
                                            472.2554),
                                    new ChartMediaInfoValueSeries("phone",
                                            "animi",
                                            452.9501),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "rerum",
                                            856.4608)],
                                    [new MapColor(219, 191, 114),
                                    new MapColor(47, 176, 70)])),
                            new PieChartMediaInfo("quisquam officia asperiores",
                                    "enim",
                                    "maxime temporibus enim",
                                new ChartMediaInfoValue(["est",
                                        "enim",
                                        "ea",
                                        "est"],
                                        "omnis",
                                        "iusto",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "laboriosam",
                                            127.7708),
                                    new ChartMediaInfoValueSeries("id",
                                            "doloremque",
                                            198.0234),
                                    new ChartMediaInfoValueSeries("comment",
                                            "voluptatum",
                                            694.7578)],
                                    [new MapColor(156, 8, 195),
                                    new MapColor(209, 233, 98)])),
                            new BarChartMediaInfo("omnis ex saepe",
                                    "amet",
                                    "qui laboriosam blanditiis",
                                new ChartMediaInfoValue(["in",
                                        "et"],
                                        "quisquam",
                                        "corporis",
                                    [new ChartMediaInfoValueSeries("title",
                                            "qui",
                                            903.2691),
                                    new ChartMediaInfoValueSeries("category",
                                            "voluptate",
                                            221.9622),
                                    new ChartMediaInfoValueSeries("createdAt",
                                            "quae",
                                            584.8835),
                                    new ChartMediaInfoValueSeries("name",
                                            "est",
                                            560.2436)],
                                    [new MapColor(19, 244, 234),
                                    new MapColor(230, 240, 229)]))],
                                7)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "email",
                                "et similique aut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "name",
                                "et quae incidunt",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "updatedAt",
                                "ex provident voluptas",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "createdAt",
                                "eos accusamus excepturi",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("et sed sint",
                                "24984a39-fcfe-c2e6-0175-acf170109b3d",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "omnis"),
                        new ActionToggle("dolore quia deserunt",
                                "21273c33-9886-7a45-a176-24aa0822275c",
                                () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "sint"),
                        new ActionToggle("recusandae corporis placeat",
                                "ca39a2ff-aab2-d069-39ed-d3f1ebf4ddb1",
                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "createdAt",
                                "dolores"),
                        new ActionToggle("tempora voluptatem id",
                                "7b91b270-6a3f-1407-f9ab-2976cc18e27e",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "non")]),
                        new AttributesDictionary(),
                        true,
                        "voluptatum",
                        "suscipit",
                        new GraphicOrigin(Guid.NewGuid(),
                            "voluptatem",
                            3)),
                    new Thumbnail("perspiciatis",
                        "ut",
                        98.3438,
                        23.4659)),
            new FeatureTemplate("illum vitae inventore similique",
                DrawingTool.Line,
                    "title",
                new Graphic(new Polyline([new MapPath([new MapPoint([108.6020,
                                178.4479]),
                            new MapPoint([627.2815,
                                628.8951,
                                539.2737,
                                179.1838]),
                            new MapPoint([275.6234,
                                716.7881,
                                571.6003]),
                            new MapPoint([459.1646,
                                504.6728])])],
                        new SpatialReference(2,
                                "porro",
                                "aliquam",
                                "blanditiis"),
                            true,
                            true),
                    new TextSymbol("est repudiandae blanditiis",
                        new MapColor(134, 39, 224),
                        new MapColor(68, 152, 149),
                            new Dimension(33.1192),
                        new MapFont(new Dimension(757.8310),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            947.5307,
                        new MapColor(207, 65, 199),
                        new MapColor(232, 209, 210),
                            708.4895,
                        HorizontalAlignment.Left,
                            true,
                            471.0288,
                            new Dimension(952.9265),
                            true),
                    new PopupTemplate("veniam totam autem",
                            "sunt",
                            ["non",
                                "perferendis",
                                "ipsam",
                                "atque"],
                        [new FieldInfo("title",
                                "quam",
                                "est",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("password",
                                "ut",
                                "molestiae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("group",
                                "ullam",
                                "hic",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new RelationshipPopupContent("sunt rerum ad",
                                "fuga provident sequi distinctio quos sequi",
                                8,
                                "cupiditate",
                            [new RelatedRecordsInfoFieldOrder("iusto",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("voluptatem",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("tempore",
                                OrderBy.Asc)],
                                4),
                        new MediaPopupContent("illo totam nihil",
                                "nesciunt itaque qui rerum earum enim ea",
                            [new LineChartMediaInfo("quis et vitae",
                                    "vitae",
                                    "unde molestias maiores",
                                new ChartMediaInfoValue(["cumque",
                                        "fugit",
                                        "velit",
                                        "quos"],
                                        "harum",
                                        "illum",
                                    [new ChartMediaInfoValueSeries("phone",
                                            "dolores",
                                            70.6006)],
                                    [new MapColor(130, 30, 122),
                                    new MapColor(124, 47, 157),
                                    new MapColor(26, 195, 29)])),
                            new ColumnChartMediaInfo("quam dolorem dolor",
                                    "fuga",
                                    "repellat quis sunt",
                                new ChartMediaInfoValue(["sed",
                                        "voluptatem",
                                        "quibusdam",
                                        "quibusdam"],
                                        "error",
                                        "in",
                                    [new ChartMediaInfoValueSeries("phone",
                                            "ut",
                                            71.2509),
                                    new ChartMediaInfoValueSeries("token",
                                            "impedit",
                                            542.4816),
                                    new ChartMediaInfoValueSeries("status",
                                            "facilis",
                                            983.6807),
                                    new ChartMediaInfoValueSeries("password",
                                            "sint",
                                            894.3938)],
                                    [new MapColor(85, 182, 21),
                                    new MapColor(82, 244, 163)]))],
                                2)],
                        [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "updatedAt",
                                "dolores sequi eveniet",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "phone",
                                "et vitae sunt",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("reiciendis sit exercitationem",
                                "08640681-3077-b55d-3741-6257def73e43",
                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "email",
                                "natus"),
                        new ActionToggle("ipsum tempora eveniet",
                                "14894662-50ef-88cf-f50c-3e209678b617",
                                () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "est"),
                        new ActionToggle("praesentium rerum dolores",
                                "bef52805-c27d-7b10-8e9f-6d809e727163",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "velit",
                        "quod",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            2)),
                    new Thumbnail("beatae",
                        "omnis",
                        131.9577,
                        105.1298))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2011, 2, 22, 12, 53, 5),
                    new DateTime(2004, 1, 13, 13, 53, 40));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("molestiae",
                    "ea",
                new TimeExtent(new DateTime(2008, 9, 22, 7, 33, 48),
                        new DateTime(2011, 2, 26, 15, 54, 26)),
                new TimeInterval(TemporalTime.Years,
                        993.4800),
                    [new DateTime(2003, 11, 27, 5, 3, 39),
                        new DateTime(2002, 8, 24, 2, 29, 3)],
                    "America/New_York",
                    "dolorem");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    790.0686);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2014, 6, 10, 17, 37, 7),
                    new DateTime(2012, 5, 5, 15, 52, 41));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
