@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGeoJSONLayer(Action renderHandler)
    {
        GeoJSONLayer? geoJSONLayer = null;

        GeoJSONLayerEditsEvent? editsResult = null;
        void OnEdits(GeoJSONLayerEditsEvent result)
        {
            editsResult = result;
        }
        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GeoJSONLayer 
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0/query?where=1%3D1&outFields=*&f=geojson")"
                        Copyright="@("eligendi")"
                        Title="@("consequuntur sit maxime")"
                        Opacity="@(0.4097)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        BlendMode="@(BlendMode.SourceAtop)"
                        DefinitionExpression="@("corrupti")"
                        DisplayField="@("iste")"
                        EditingEnabled="@(true)"
                        Effect="@(new Effect("ex",
                            17230745.0240))"
                        FullExtent="@(new Extent(-137.4125,
                                -59.6976,
                                -28.2623,
                                1.6673,
                                452.5721,
                                498.5828,
                                793.5308,
                                719.0420,
                            new SpatialReference(3,
                                    "numquam",
                                    "iusto",
                                    "praesentium"),
                                true,
                                true))"
                        GeometryType="@(SimpleGeometryType.Multipoint)"
                        LabelsVisible="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(5480161.4723)"
                        MinScale="@(13139.5719)"
                        ObjectIdField="@("corporis")"
                        OutFields="@(["sunt",
                            "unde"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(383.6289)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(8,
                                "ducimus",
                                "accusamus",
                                "hic"))"
                        UseViewTime="@(true)"
                        OnEdits="OnEdits"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Days)"
                            Value="@(397.9846)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("id")"
                            EndField="@("rerum")"
                            Stops="@([new DateTime(2011, 9, 3, 21, 23, 52),
                                new DateTime(2015, 9, 15, 19, 0, 3)])"
                            TimeZone="@("Europe/Tallinn")"
                            TrackIdField="@("tenetur")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Milliseconds)"
                                Value="@(432.6047)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2010, 4, 3, 13, 40, 50))"
                                End="@(new DateTime(2019, 6, 3, 22, 37, 5))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2000, 6, 5, 10, 12, 47))"
                            End="@(new DateTime(2022, 10, 27, 12, 58, 2))">
                        </TimeExtent>
                        <FeatureTemplate 
                            Description="@("est eum voluptatum ipsum accusantium similique")"
                            DrawingTool="@(DrawingTool.DownArrow)"
                            Name="@("id")"
                            Prototype="@(new Graphic(new Point(-67.4706,
                                        78.1408,
                                        57.3558,
                                        76.6932,
                                        781.2592,
                                    new SpatialReference(5,
                                            "quaerat",
                                            "quis",
                                            "veritatis"),
                                        true,
                                        true,
                                        79.3703),
                                new TextSymbol("voluptas doloremque totam",
                                    new MapColor(198, 225, 122),
                                    new MapColor(229, 140, 238),
                                        new Dimension(292.9090),
                                    new MapFont(new Dimension(462.1791),
                                            "Garamond",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        420.4499,
                                    new MapColor(141, 131, 9),
                                    new MapColor(154, 193, 159),
                                        270.9884,
                                    HorizontalAlignment.Center,
                                        true,
                                        733.3013,
                                        new Dimension(351.0651),
                                        true),
                                new PopupTemplate("inventore corrupti omnis",
                                        "totam",
                                        ["blanditiis",
                                            "eveniet",
                                            "est"],
                                    [new FieldInfo("email",
                                            "et",
                                            "sit",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("password",
                                            "nihil",
                                            "provident",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.DayShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("title",
                                            "et",
                                            "reprehenderit",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("updatedAt",
                                            "necessitatibus",
                                            "officiis",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Count)],
                                    [new RelationshipPopupContent("doloremque non inventore",
                                            "vitae id nisi vitae delectus sint",
                                            4,
                                            "ipsam",
                                        [new RelatedRecordsInfoFieldOrder("repellendus",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("ut",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("quia",
                                            OrderBy.Asc)],
                                            6)],
                                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "name",
                                            "et ut et",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "password",
                                            "aspernatur tempora et",
                                            ExpressionInfoReturnType.String)],
                                        true,
                                        true,
                                    [new ActionToggle("est id a",
                                            "1cb80120-126f-9baf-bb7d-aeed4aa60cd1",
                                            () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "comment",
                                            "quo")]),
                                    new AttributesDictionary(),
                                    true,
                                    "sunt",
                                    "esse",
                                    new GraphicOrigin(Guid.NewGuid(),
                                        "et",
                                        9)))"
                            Thumbnail="@(new Thumbnail("et",
                                "molestiae",
                                200.7065,
                                249.4910))">
                        </FeatureTemplate>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                    new MapColor(0, 142, 191),
                                    new MapColor(87, 16, 22)),
                                    93.4414,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(158.7427,
                                            736.3059),
                                    new AuthoringInfoField1ClassBreakInfos(390.9121,
                                            161.4123),
                                    new AuthoringInfoField1ClassBreakInfos(766.6699,
                                            839.8115)],
                                        "earum",
                                        "et",
                                        "culpa"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(852.4135,
                                            467.9577),
                                    new AuthoringInfoField1ClassBreakInfos(585.2461,
                                            682.6556),
                                    new AuthoringInfoField1ClassBreakInfos(284.4039,
                                            559.6700),
                                    new AuthoringInfoField1ClassBreakInfos(84.0977,
                                            601.7642)],
                                        "corrupti",
                                        "dolor",
                                        "laborum"),
                                    ["modi",
                                        "ullam",
                                        "deleniti",
                                        "consequatur"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "laborum",
                                    true,
                                LengthUnit.Kilometers,
                                    70.6834,
                                    322.2805,
                                    458.9941,
                                    368.0708))">
                        </UniqueValueRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("rerum et reprehenderit")"
                            StringContent="@("qui")"
                            OutFields="@(["hic",
                                "cumque",
                                "eos"])"
                            FieldInfos="@([new FieldInfo("token",
                                    "nobis",
                                    "amet",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum)])"
                            Content="@([new AttachmentsPopupContent("incidunt facilis voluptatum",
                                    "quidem aliquid veritatis fugit",
                                    AttachmentsPopupContentDisplayType.Preview),
                            new RelationshipPopupContent("dicta quisquam vitae",
                                    "doloremque vitae et quia",
                                    1,
                                    "delectus",
                                [new RelatedRecordsInfoFieldOrder("veritatis",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("quod",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("illo",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("nesciunt",
                                    OrderBy.Asc)],
                                    5),
                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                        "cum",
                                        "eaque illum delectus")),
                            new FieldsPopupContent([new FieldInfo("status",
                                        "quisquam",
                                        "rerum",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Stddev)],
                                    "similique sequi sed neque ducimus natus nihil",
                                    "error voluptatem nulla")])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "category",
                                    "eveniet est eveniet",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "comment",
                                    "enim voluptate similique",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("qui quisquam ullam",
                                    "https://picsum.photos/640/480/?image=247",
                                    "6712d59b-1e70-e0e4-64a8-0035c114b2ea",
                                    () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                    "title",
                                    true,
                                    true,
                                    true,
                                    "officia"),
                            new ActionButton("sed a molestiae",
                                    "https://picsum.photos/640/480/?image=268",
                                    "3c169dc2-6da2-2eec-b6d7-fd764127f807",
                                    () => { Console.WriteLine("hic"); return Task.CompletedTask; },
                                    "comment",
                                    true,
                                    true,
                                    true,
                                    "non"),
                            new ActionToggle("est enim fuga",
                                    "8dda94b9-1d7e-2ace-cbe3-845c37619b31",
                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "updatedAt",
                                    "animi"),
                            new ActionToggle("natus similique illo",
                                    "c7765d25-afe7-c9f1-1dff-ea241e590036",
                                    () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "createdAt",
                                    "cumque")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("dolorem")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("nam")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.AboveEnd)"
                            LabelExpression="@("consequatur")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(10631343.0723)"
                            MinScale="@(36027.1973)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(319.2755))"
                            Symbol="@(new TextSymbol("id eius voluptatem",
                                new MapColor(147, 15, 52),
                                new MapColor(210, 197, 17),
                                    new Dimension(391.8817),
                                new MapFont(new Dimension(948.2017),
                                        "Verdana",
                                    MapFontStyle.Oblique,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    853.3923,
                                new MapColor(14, 144, 233),
                                new MapColor(131, 18, 85),
                                    359.9601,
                                HorizontalAlignment.Center,
                                    true,
                                    806.6710,
                                    new Dimension(822.6355),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Name = 'John Doe'")">
                        </Label>
                        <Field 
                            Name="@("phone")"
                            Alias="@("molestiae")"
                            Description="@("ex illo earum dicta est quisquam")"
                            Length="@(5)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "modi" })"
                            ValueType="@(FieldValueType.Coordinate)"
                            Domain="@(new CodedValueDomain<string>())">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("quod",
                                27425766.8602),
                                new Effect("delectus",
                                    27758676.8814)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(69.3525,
                                new Polygon([new MapPath([new MapPoint([886.3692,
                                            129.2008]),
                                        new MapPoint([149.2886,
                                            900.2902])]),
                                        new MapPath([new MapPoint([907.8830,
                                                274.5027,
                                                550.7997]),
                                            new MapPoint([55.0867,
                                                207.1513,
                                                927.6386]),
                                            new MapPoint([910.3292,
                                                569.4617,
                                                893.2701,
                                                541.5017])])],
                                    new SpatialReference(5,
                                            "et",
                                            "unde",
                                            "molestias"),
                                    new Point(-173.7916,
                                            -75.9852,
                                            -135.6676,
                                            -78.3922,
                                            608.0457,
                                        new SpatialReference(3,
                                                "culpa",
                                                "accusantium",
                                                "non"),
                                            true,
                                            true,
                                            317.8862),
                                        true,
                                        true,
                                        true),
                                    [5,
                                        3],
                                SpatialRelationship.Within,
                                new TimeExtent(new DateTime(2010, 2, 19, 9, 34, 10),
                                        new DateTime(2017, 6, 18, 20, 57, 27)),
                                    QueryUnits.Miles,
                                    "Province = 'Ontario'"))"
                            IncludedEffect="@([new Effect("commodi",
                                48159454.8922),
                                new Effect("architecto",
                                    2082423.5367),
                                new Effect("alias",
                                    22483613.2074)])">
                        </FeatureEffect>
                        <GeoJSONLayerElevationInfo 
                            FeatureExpressionInfo="@(new GeoJSONLayerElevationInfoFeatureExpressionInfo("return $feature.Population / $feature.Area;",
                                    "accusamus corporis a"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(390.8198)"
                            Unit="@(ElevationUnit.Unknown)">
                        </GeoJSONLayerElevationInfo>
                    </GeoJSONLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(geoJSONLayer!);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "edits"]);
        await AssertJavaScript("dispatchEvent", args: [geoJSONLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (editsResult is null || 
            refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<GeoJSONLayerEditsEvent>(editsResult);
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "geojson");
        var applyEditsMethodResult = await geoJSONLayer.ApplyEdits(new GeoJSONLayerApplyEditsEdits([new Graphic(new Polygon([new MapPath([new MapPoint([277.6549,
                                69.3889]),
                            new MapPoint([692.9204,
                                184.3768,
                                200.6997])]),
                            new MapPath([new MapPoint([432.7047,
                                    180.7473]),
                                new MapPoint([666.8325,
                                    800.1688,
                                    350.4286,
                                    128.7887])]),
                            new MapPath([new MapPoint([951.3027,
                                    164.7371]),
                                new MapPoint([63.9412,
                                    366.8574,
                                    820.4608]),
                                new MapPoint([774.2606,
                                    519.5535,
                                    114.4456,
                                    632.4613]),
                                new MapPoint([811.3447,
                                    200.4959])])],
                        new SpatialReference(2,
                                "odit",
                                "est",
                                "voluptatibus"),
                        new Point(45.0320,
                                -18.8788,
                                -144.1845,
                                -12.5438,
                                643.8614,
                            new SpatialReference(7,
                                    "quidem",
                                    "enim",
                                    "et"),
                                true,
                                true,
                                667.3950),
                            true,
                            true,
                            true),
                    new TextSymbol("aut est rerum",
                        new MapColor(185, 150, 239),
                        new MapColor(75, 203, 68),
                            new Dimension(525.5809),
                        new MapFont(new Dimension(784.3767),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            59.1726,
                        new MapColor(6, 28, 248),
                        new MapColor(162, 74, 65),
                            744.7390,
                        HorizontalAlignment.Left,
                            true,
                            810.4344,
                            new Dimension(880.1476),
                            true),
                    new PopupTemplate("voluptas alias at",
                            "qui",
                            ["non",
                                "aut",
                                "voluptatem"],
                        [new FieldInfo("password",
                                "molestiae",
                                "nesciunt",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("name",
                                "est",
                                "doloribus",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("group",
                                "occaecati",
                                "fuga",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("createdAt",
                                "modi",
                                "dolores",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new AttachmentsPopupContent("saepe ea repudiandae",
                                "voluptatum quia magni dolorem et voluptas cum",
                                AttachmentsPopupContentDisplayType.Auto),
                        new FieldsPopupContent([new FieldInfo("comment",
                                    "perferendis",
                                    "iure",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.LongMonthDayYearLongTime),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("phone",
                                    "voluptatem",
                                    "saepe",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Stddev),
                            new FieldInfo("comment",
                                    "optio",
                                    "repudiandae",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDate),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("id",
                                    "est",
                                    "consequuntur",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(7,
                                        true,
                                    DateFormat.ShortDateLongTime),
                                    true,
                                    true,
                                StatisticType.Max)],
                                "veritatis unde tempore aut",
                                "dolores occaecati qui"),
                        new MediaPopupContent("quo et dolorem",
                                "qui perspiciatis dolores totam similique esse soluta",
                            [new LineChartMediaInfo("magnam odit in",
                                    "eos",
                                    "quo eum est",
                                new ChartMediaInfoValue(["laborum",
                                        "a"],
                                        "explicabo",
                                        "ex",
                                    [new ChartMediaInfoValueSeries("status",
                                            "voluptatem",
                                            689.5643),
                                    new ChartMediaInfoValueSeries("email",
                                            "cum",
                                            67.1877),
                                    new ChartMediaInfoValueSeries("category",
                                            "totam",
                                            281.3824),
                                    new ChartMediaInfoValueSeries("phone",
                                            "architecto",
                                            190.0746)],
                                    [new MapColor(137, 174, 223),
                                    new MapColor(173, 59, 65)])),
                            new BarChartMediaInfo("itaque voluptatem quas",
                                    "saepe",
                                    "qui porro dolores",
                                new ChartMediaInfoValue(["nulla",
                                        "temporibus"],
                                        "veritatis",
                                        "enim",
                                    [new ChartMediaInfoValueSeries("avatar",
                                            "et",
                                            208.9339),
                                    new ChartMediaInfoValueSeries("avatar",
                                            "voluptatem",
                                            88.5219),
                                    new ChartMediaInfoValueSeries("id",
                                            "porro",
                                            119.0248)],
                                    [new MapColor(98, 124, 81)])),
                            new BarChartMediaInfo("molestiae minus quos",
                                    "voluptatem",
                                    "blanditiis ut quia",
                                new ChartMediaInfoValue(["eligendi",
                                        "est",
                                        "commodi",
                                        "et"],
                                        "amet",
                                        "reiciendis",
                                    [new ChartMediaInfoValueSeries("avatar",
                                            "quo",
                                            456.0157)],
                                    [new MapColor(28, 98, 168),
                                    new MapColor(43, 182, 75),
                                    new MapColor(120, 31, 249)]))],
                                9)],
                        [new ExpressionInfo("return Date();",
                                "id",
                                "quidem sequi reiciendis",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("dolorem soluta aperiam",
                                "174606d3-dcf2-1224-d269-7288a5edb1fd",
                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "consequatur")]),
                        new AttributesDictionary(),
                        true,
                        "dolores",
                        "voluptas",
                        new GraphicOrigin(Guid.NewGuid(),
                            "eos",
                            6))],
                [new Graphic(new Polyline([new MapPath([new MapPoint([903.6840,
                                496.5373,
                                683.8095,
                                174.1687]),
                            new MapPoint([262.9224,
                                703.3919,
                                132.9284,
                                398.4698]),
                            new MapPoint([538.1959,
                                602.3517,
                                404.8048,
                                204.3562])]),
                            new MapPath([new MapPoint([828.5691,
                                    666.4283]),
                                new MapPoint([80.8603,
                                    77.2452,
                                    342.8731]),
                                new MapPoint([772.4258,
                                    975.6001,
                                    99.7917,
                                    259.0096]),
                                new MapPoint([374.3988,
                                    864.9287,
                                    326.4756,
                                    953.4289])]),
                            new MapPath([new MapPoint([610.2463,
                                    788.9052,
                                    693.6333,
                                    12.5919]),
                                new MapPoint([652.1519,
                                    771.0470,
                                    650.4278])])],
                        new SpatialReference(7,
                                "laboriosam",
                                "velit",
                                "similique"),
                            true,
                            true),
                    new TextSymbol("ipsam molestiae voluptate",
                        new MapColor(54, 175, 105),
                        new MapColor(143, 128, 202),
                            new Dimension(171.0129),
                        new MapFont(new Dimension(80.4908),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            961.3237,
                        new MapColor(205, 177, 111),
                        new MapColor(220, 115, 54),
                            345.8633,
                        HorizontalAlignment.Center,
                            true,
                            146.4655,
                            new Dimension(728.1506),
                            true),
                    new PopupTemplate("est hic vitae",
                            "nihil",
                            ["voluptatem",
                                "ex",
                                "eius"],
                        [new FieldInfo("group",
                                "nam",
                                "officia",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("group",
                                "dicta",
                                "mollitia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                        [new MediaPopupContent("quibusdam rem deleniti",
                                "ex qui sed laborum",
                            [new PieChartMediaInfo("ipsam neque sit",
                                    "id",
                                    "id et fugit",
                                new ChartMediaInfoValue(["sint",
                                        "ut",
                                        "voluptas",
                                        "ab"],
                                        "sequi",
                                        "mollitia",
                                    [new ChartMediaInfoValueSeries("category",
                                            "delectus",
                                            986.2960)],
                                    [new MapColor(194, 17, 245),
                                    new MapColor(233, 31, 18)]))],
                                6)],
                        [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "title",
                                "ipsam eos sunt",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "createdAt",
                                "similique aut aut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("necessitatibus nisi debitis",
                                "https://picsum.photos/640/480/?image=598",
                                "decb2c94-3f84-70ff-707e-e964c0e2745e",
                                () => { Console.WriteLine("tenetur"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "aut"),
                        new ActionToggle("voluptas delectus quos",
                                "bf86bac4-34ae-5d8e-898f-7d4917a7ca30",
                                () => { Console.WriteLine("similique"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "est"),
                        new ActionToggle("sed accusantium voluptatem",
                                "e28f7430-2a52-2b0a-2382-bc61d0b25fdc",
                                () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "sequi"),
                        new ActionButton("ratione earum beatae",
                                "https://picsum.photos/640/480/?image=509",
                                "4b0aba59-d0f1-edd4-1a59-8cb713eceb72",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "et")]),
                        new AttributesDictionary(),
                        true,
                        "deleniti",
                        "facere",
                        new GraphicOrigin(Guid.NewGuid(),
                            "repellat",
                            3))],
                    ["qui",
                        "optio",
                        "qui",
                        "rerum"],
                [new Graphic(new Polyline([new MapPath([new MapPoint([812.5023,
                                683.0792,
                                961.4266]),
                            new MapPoint([364.2800,
                                861.2542]),
                            new MapPoint([647.9498,
                                584.7153,
                                162.6349]),
                            new MapPoint([348.8900,
                                408.7486,
                                687.5877,
                                730.2862])]),
                            new MapPath([new MapPoint([966.0764,
                                    788.9998,
                                    235.6897]),
                                new MapPoint([951.1491,
                                    794.6361]),
                                new MapPoint([128.4770,
                                    92.5043,
                                    656.8383])])],
                        new SpatialReference(4,
                                "nulla",
                                "pariatur",
                                "aspernatur"),
                            true,
                            true),
                    new TextSymbol("optio autem nisi",
                        new MapColor(194, 9, 201),
                        new MapColor(95, 235, 187),
                            new Dimension(961.8602),
                        new MapFont(new Dimension(82.3455),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            697.2417,
                        new MapColor(130, 126, 76),
                        new MapColor(39, 179, 176),
                            244.1305,
                        HorizontalAlignment.Right,
                            true,
                            840.0813,
                            new Dimension(18.6164),
                            true),
                    new PopupTemplate("nam explicabo ut",
                            "maiores",
                            ["voluptas",
                                "iste",
                                "corporis",
                                "nesciunt"],
                        [new FieldInfo("updatedAt",
                                "voluptate",
                                "dolorem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("avatar",
                                "et",
                                "excepturi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("name",
                                "aut",
                                "officiis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Min)],
                        [new AttachmentsPopupContent("vitae maxime aliquid",
                                "molestias omnis doloribus odio aperiam",
                                AttachmentsPopupContentDisplayType.Preview),
                        new TextPopupContent("adipisci sint voluptatem")],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "title",
                                "qui incidunt nulla",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "group",
                                "esse quo possimus",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionButton("est fuga ad",
                                "https://picsum.photos/640/480/?image=978",
                                "69869f97-c88e-c52d-4216-e60ce340c200",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "ut")]),
                        new AttributesDictionary(),
                        true,
                        "libero",
                        "eveniet",
                        new GraphicOrigin(Guid.NewGuid(),
                            "ipsam",
                            5)),
                new Graphic(new Polyline([new MapPath([new MapPoint([846.0380,
                                140.2299]),
                            new MapPoint([137.3066,
                                224.7466,
                                831.5125,
                                915.3645]),
                            new MapPoint([72.6123,
                                970.7641,
                                321.0957])])],
                        new SpatialReference(7,
                                "facilis",
                                "enim",
                                "qui"),
                            true,
                            true),
                    new TextSymbol("necessitatibus consequatur dolorem",
                        new MapColor(138, 26, 172),
                        new MapColor(197, 26, 12),
                            new Dimension(18.3930),
                        new MapFont(new Dimension(521.0650),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            99.2163,
                        new MapColor(114, 71, 185),
                        new MapColor(83, 29, 36),
                            680.4165,
                        HorizontalAlignment.Left,
                            true,
                            849.9122,
                            new Dimension(827.5859),
                            true),
                    new PopupTemplate("sed voluptas dolore",
                            "id",
                            ["sapiente",
                                "recusandae",
                                "exercitationem",
                                "quam"],
                        [new FieldInfo("phone",
                                "error",
                                "eligendi",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("status",
                                "autem",
                                "voluptates",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("comment",
                                "ut",
                                "modi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Var)],
                        [new TextPopupContent("enim quia rerum"),
                        new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "recusandae",
                                    "non accusamus cumque"))],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "phone",
                                "aperiam voluptatibus est",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "category",
                                "ab voluptatem et",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("cum eius dignissimos",
                                "3b95f6ac-a182-e8a8-b3b2-113291b419e5",
                                () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "et"),
                        new ActionToggle("qui nihil adipisci",
                                "29ecca6a-dcac-21c7-8663-50059c8881fa",
                                () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "password",
                                "sunt"),
                        new ActionToggle("voluptates vel quo",
                                "1cde3ff4-1b73-f9fa-aadb-05d1f0178b20",
                                () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "title",
                                "perferendis"),
                        new ActionButton("quia nihil iure",
                                "https://picsum.photos/640/480/?image=1022",
                                "31ea4222-fda7-aa95-a165-5a3e6e3c9027",
                                () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                "title",
                                true,
                                true,
                                true,
                                "id")]),
                        new AttributesDictionary(),
                        true,
                        "optio",
                        "deleniti",
                        new GraphicOrigin(Guid.NewGuid(),
                            "corporis",
                            7)),
                new Graphic(new Point(55.1088,
                            -87.2631,
                            -58.1258,
                            31.5152,
                            568.0620,
                        new SpatialReference(1,
                                "corporis",
                                "facilis",
                                "sit"),
                            true,
                            true,
                            491.8104),
                    new TextSymbol("beatae saepe dicta",
                        new MapColor(30, 253, 24),
                        new MapColor(54, 174, 213),
                            new Dimension(584.5474),
                        new MapFont(new Dimension(894.6268),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            601.7073,
                        new MapColor(72, 212, 87),
                        new MapColor(172, 92, 54),
                            25.5449,
                        HorizontalAlignment.Center,
                            true,
                            387.6921,
                            new Dimension(486.5039),
                            true),
                    new PopupTemplate("ut autem vel",
                            "aut",
                            ["delectus",
                                "qui",
                                "dolor"],
                        [new FieldInfo("password",
                                "voluptates",
                                "amet",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                        [new RelationshipPopupContent("dignissimos inventore fuga",
                                "dolorem ut sint magnam esse",
                                2,
                                "et",
                            [new RelatedRecordsInfoFieldOrder("facilis",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("dicta",
                                OrderBy.Asc)],
                                5),
                        new FieldsPopupContent([new FieldInfo("createdAt",
                                    "vel",
                                    "sint",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.Year),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("title",
                                    "necessitatibus",
                                    "non",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("title",
                                    "sed",
                                    "et",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(5,
                                        true,
                                    DateFormat.LongDateShortTime),
                                    true,
                                    true,
                                StatisticType.Min),
                            new FieldInfo("group",
                                    "vitae",
                                    "corporis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Count)],
                                "et rerum animi recusandae velit temporibus praesentium",
                                "cum ipsam consequatur")],
                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "title",
                                "provident corporis fuga",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "category",
                                "impedit excepturi possimus",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "createdAt",
                                "quisquam nihil voluptatem",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("et alias rerum",
                                "2ae7d99a-b7bd-212d-4f99-65c343782411",
                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "amet"),
                        new ActionToggle("quo tempore aut",
                                "679764fe-be8a-226a-207d-fd24d48398f7",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "category",
                                "voluptatum"),
                        new ActionToggle("voluptate iusto similique",
                                "54f7da89-0d00-cdc6-d8fd-44404fba9dcc",
                                () => { Console.WriteLine("voluptate"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "voluptatum")]),
                        new AttributesDictionary(),
                        true,
                        "dolores",
                        "sit",
                        new GraphicOrigin(Guid.NewGuid(),
                            "et",
                            7))]));
        Assert.IsNotNull(applyEditsMethodResult);
        var createPopupTemplateMethodResult = await geoJSONLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["vitae",
                    "rerum",
                    "veritatis"],
                    ["password",
                        "name",
                        "password"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await geoJSONLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await geoJSONLayer.GetField("group");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await geoJSONLayer.GetFieldDomain("id",
            new GeoJSONLayerGetFieldDomainOptions(new Graphic(new Polygon([new MapPath([new MapPoint([214.5541,
                                9.7042,
                                574.0253,
                                146.8580]),
                            new MapPoint([956.3338,
                                345.2041,
                                268.1724,
                                643.5105]),
                            new MapPoint([68.3357,
                                825.3074,
                                90.0494]),
                            new MapPoint([230.0433,
                                584.4630,
                                802.6973,
                                632.3833])])],
                        new SpatialReference(3,
                                "quisquam",
                                "error",
                                "similique"),
                        new Point(-22.4887,
                                -48.0851,
                                -142.5977,
                                64.9213,
                                688.7650,
                            new SpatialReference(6,
                                    "placeat",
                                    "mollitia",
                                    "et"),
                                true,
                                true,
                                388.3207),
                            true,
                            true,
                            true),
                    new TextSymbol("qui ab et",
                        new MapColor(49, 65, 94),
                        new MapColor(228, 76, 188),
                            new Dimension(47.6821),
                        new MapFont(new Dimension(921.9774),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            619.1802,
                        new MapColor(251, 96, 130),
                        new MapColor(231, 174, 140),
                            284.6438,
                        HorizontalAlignment.Right,
                            true,
                            731.2633,
                            new Dimension(176.2495),
                            true),
                    new PopupTemplate("quasi culpa sed",
                            "totam",
                            ["dolorem",
                                "nemo"],
                        [new FieldInfo("id",
                                "iusto",
                                "eos",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                    "provident",
                                    "temporibus sed aspernatur")),
                        new TextPopupContent("autem quod ea"),
                        new TextPopupContent("rerum dolores nobis"),
                        new MediaPopupContent("architecto modi qui",
                                "eius labore numquam tempore ullam laborum sed",
                            [new ColumnChartMediaInfo("et autem fugiat",
                                    "deleniti",
                                    "est possimus ducimus",
                                new ChartMediaInfoValue(["ea",
                                        "aut",
                                        "illo"],
                                        "non",
                                        "quis",
                                    [new ChartMediaInfoValueSeries("name",
                                            "illo",
                                            497.2616)],
                                    [new MapColor(246, 112, 176)])),
                            new BarChartMediaInfo("soluta error est",
                                    "in",
                                    "enim rem quidem",
                                new ChartMediaInfoValue(["omnis",
                                        "id",
                                        "doloremque",
                                        "laudantium"],
                                        "odit",
                                        "accusamus",
                                    [new ChartMediaInfoValueSeries("title",
                                            "ut",
                                            930.3342),
                                    new ChartMediaInfoValueSeries("phone",
                                            "voluptas",
                                            607.4584),
                                    new ChartMediaInfoValueSeries("id",
                                            "illum",
                                            531.5563),
                                    new ChartMediaInfoValueSeries("comment",
                                            "quisquam",
                                            369.4850)],
                                    [new MapColor(206, 190, 193),
                                    new MapColor(212, 41, 59)])),
                            new ColumnChartMediaInfo("omnis asperiores nihil",
                                    "consequatur",
                                    "omnis veritatis voluptatem",
                                new ChartMediaInfoValue(["est",
                                        "hic",
                                        "est",
                                        "omnis"],
                                        "et",
                                        "aspernatur",
                                    [new ChartMediaInfoValueSeries("group",
                                            "mollitia",
                                            215.0603),
                                    new ChartMediaInfoValueSeries("id",
                                            "vel",
                                            778.1869)],
                                    [new MapColor(168, 246, 88)]))],
                                6)],
                        [new ExpressionInfo("return $feature['FieldName'];",
                                "comment",
                                "tenetur modi recusandae",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "title",
                                "quo illum laudantium",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "name",
                                "dolorem dolorum ipsa",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "updatedAt",
                                "aspernatur quidem est",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("enim consectetur iusto",
                                "ab8f0fe7-88b7-1288-d7c3-82f870422d3c",
                                () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "id",
                                "eveniet")]),
                        new AttributesDictionary(),
                        true,
                        "quisquam",
                        "voluptatem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "consequatur",
                            4))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await geoJSONLayer.QueryExtent(new Query([9,
                    1],
                    true,
                    542.0018,
                    679.0385,
                    "5.7.6.2",
                new Extent(-5.1517,
                        4.7932,
                        15.2570,
                        31.2100,
                        635.5472,
                        31.9494,
                        791.5125,
                        935.9972,
                    new SpatialReference(2,
                            "veniam",
                            "qui",
                            "aliquam"),
                        true,
                        true),
                    5,
                    ["nobis",
                        "autem",
                        "minus"],
                    "porro",
                    new DateTime(2014, 4, 25, 15, 14, 29),
                    333.8476,
                    6,
                    "et",
                    4),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await geoJSONLayer.QueryFeatureCount(new Query([5,
                    1],
                    true,
                    323.0471,
                    300.8592,
                    "2.2.9.6",
                new Point(123.8560,
                        3.3666,
                        85.2110,
                        18.3665,
                        360.0464,
                    new SpatialReference(3,
                            "minima",
                            "non",
                            "officiis"),
                        true,
                        true,
                        256.2240),
                    1,
                    ["corrupti",
                        "dolores"],
                    "qui",
                    new DateTime(2003, 1, 20, 9, 56, 1),
                    137.5525,
                    1,
                    "laudantium",
                    1),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await geoJSONLayer.QueryFeatures(new Query([1,
                    6,
                    4],
                    true,
                    484.3702,
                    63.9870,
                    "1.5.8.0",
                new Point(-29.7967,
                        -25.5757,
                        136.5849,
                        28.9125,
                        558.9567,
                    new SpatialReference(3,
                            "necessitatibus",
                            "vitae",
                            "dolor"),
                        true,
                        true,
                        727.3128),
                    2,
                    ["in",
                        "maxime"],
                    "consequatur",
                    new DateTime(2023, 11, 26, 7, 4, 27),
                    248.1016,
                    8,
                    "esse",
                    7),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await geoJSONLayer.QueryObjectIds(new Query([9,
                    4,
                    8],
                    true,
                    497.7032,
                    67.1070,
                    "1.5.1.4",
                new Extent(-158.5585,
                        10.2793,
                        64.2133,
                        2.2094,
                        114.1087,
                        122.6214,
                        153.1813,
                        47.1636,
                    new SpatialReference(6,
                            "voluptates",
                            "in",
                            "doloremque"),
                        true,
                        true),
                    9,
                    ["excepturi",
                        "consequatur",
                        "fugit"],
                    "quasi",
                    new DateTime(2022, 1, 25, 2, 26, 56),
                    725.2211,
                    4,
                    "veniam",
                    9),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await geoJSONLayer.Refresh();
        ListMode testListMode = ListMode.Hide;
        await geoJSONLayer.SetListMode(testListMode);
        var listMode = await geoJSONLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Reflect;
        await geoJSONLayer.SetBlendMode(testBlendMode);
        var blendMode = await geoJSONLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GeoJSONLayerElevationInfo testElevationInfo = new GeoJSONLayerElevationInfo(new GeoJSONLayerElevationInfoFeatureExpressionInfo("var length = Geometry($feature).length; return length;",
                        "nostrum quos eligendi"),
                ElevationInfoMode.RelativeToGround,
                    872.7844,
                ElevationUnit.Unknown);
        await geoJSONLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await geoJSONLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("quidem",
                    38270151.9219),
                    new Effect("sit",
                        19892087.9386)],
                    true,
                new FeatureFilter(411.7095,
                    new Extent(-19.3958,
                            -16.9765,
                            40.4948,
                            63.0491,
                            571.2636,
                            650.0640,
                            7.4045,
                            902.0263,
                        new SpatialReference(1,
                                "ea",
                                "consequatur",
                                "a"),
                            true,
                            true),
                        [1,
                            2],
                    SpatialRelationship.Intersects,
                    new TimeExtent(new DateTime(2001, 4, 25, 9, 2, 37),
                            new DateTime(2000, 11, 7, 13, 48, 35)),
                        QueryUnits.Feet,
                        "Province = 'Ontario'"),
                    [new Effect("tempora",
                        44014372.5520),
                        new Effect("eos",
                            23500411.9910),
                        new Effect("temporibus",
                            36833264.3948)]);
        await geoJSONLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await geoJSONLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "status",
                    "eveniet",
                    "nihil alias tempore facere",
                    1,
                    true,
                    true,
                    new { Value = "aut" },
                FieldValueType.NameOrTitle,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "category",
                    "eos",
                    "quisquam temporibus cum id ut",
                    8,
                    true,
                    true,
                    new { Value = "tempora" },
                FieldValueType.UniqueIdentifier,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "email",
                    "ut",
                    "quas quae officia quisquam",
                    1,
                    true,
                    true,
                    new { Value = "ratione" },
                FieldValueType.Coordinate,
                    new CodedValueDomain<string>())];
        await geoJSONLayer.SetFields(testFields);
        var fields = await geoJSONLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-127.8565,
                    -129.3794,
                    -67.9435,
                    37.5098,
                    990.4579,
                    650.8348,
                    611.2648,
                    451.8730,
                new SpatialReference(3,
                        "eveniet",
                        "et",
                        "aut"),
                    true,
                    true);
        await geoJSONLayer.SetFullExtent(testFullExtent);
        var fullExtent = await geoJSONLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        SimpleGeometryType testGeometryType = SimpleGeometryType.Point;
        await geoJSONLayer.SetGeometryType(testGeometryType);
        var geometryType = await geoJSONLayer.GetGeometryType();
        Assert.AreEqual(testGeometryType, geometryType);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.CenterRight,
                    "est",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    41074320.4003,
                    18026.7676,
                    true,
                    new Dimension(796.7295),
                new TextSymbol("ut et ex",
                    new MapColor(66, 90, 16),
                    new MapColor(190, 43, 115),
                        new Dimension(713.5646),
                    new MapFont(new Dimension(352.1538),
                            "Garamond",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.None),
                        74.7138,
                    new MapColor(30, 168, 153),
                    new MapColor(83, 92, 174),
                        141.2637,
                    HorizontalAlignment.Center,
                        true,
                        196.3181,
                        new Dimension(275.2282),
                        true),
                    true,
                    "ObjectID = 1"),
            new Label(LabelPlacement.BelowStart,
                    "doloremque",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Parallel,
                    41165263.7239,
                    19610.0034,
                    true,
                    new Dimension(105.2251),
                new TextSymbol("ducimus nihil sequi",
                    new MapColor(46, 225, 254),
                    new MapColor(129, 198, 132),
                        new Dimension(568.6367),
                    new MapFont(new Dimension(493.3591),
                            "Verdana",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        490.1277,
                    new MapColor(231, 25, 146),
                    new MapColor(63, 202, 56),
                        422.1961,
                    HorizontalAlignment.Right,
                        true,
                        680.6911,
                        new Dimension(409.1252),
                        true),
                    true,
                    "ObjectID = 1"),
            new Label(LabelPlacement.AlwaysHorizontal,
                    "ut",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    31103313.2571,
                    23381.4505,
                    true,
                    new Dimension(759.0934),
                new TextSymbol("deserunt nisi quia",
                    new MapColor(205, 131, 158),
                    new MapColor(73, 112, 24),
                        new Dimension(18.2348),
                    new MapFont(new Dimension(539.1937),
                            "Helvetica",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        472.5413,
                    new MapColor(197, 182, 238),
                    new MapColor(175, 65, 148),
                        391.0896,
                    HorizontalAlignment.Center,
                        true,
                        978.9710,
                        new Dimension(776.4550),
                        true),
                    true,
                    "Province = 'Ontario'"),
            new Label(LabelPlacement.AboveEnd,
                    "possimus",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    44512623.2869,
                    45959.2438,
                    true,
                    new Dimension(458.6195),
                new TextSymbol("et libero et",
                    new MapColor(97, 124, 148),
                    new MapColor(66, 153, 169),
                        new Dimension(464.5681),
                    new MapFont(new Dimension(273.0392),
                            "Verdana",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        720.7353,
                    new MapColor(179, 11, 121),
                    new MapColor(142, 137, 92),
                        738.8352,
                    HorizontalAlignment.Right,
                        true,
                        412.0304,
                        new Dimension(373.6593),
                        true),
                    true,
                    "ObjectID = 1")];
        await geoJSONLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await geoJSONLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("sint",
                SortOrder.Descending,
                    "omnis")];
        await geoJSONLayer.SetOrderBy(testOrderBy);
        var orderBy = await geoJSONLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PopupTemplate testPopupTemplate = new PopupTemplate("quis culpa rerum",
                    "nesciunt",
                    ["accusantium",
                        "nam",
                        "omnis"],
                [new FieldInfo("comment",
                        "quia",
                        "animi",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(6,
                            true,
                        DateFormat.LongMonthDayYearLongTime24),
                        true,
                        true,
                    StatisticType.Min)],
                [new TextPopupContent("optio qui voluptate")],
                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                        "status",
                        "non qui velit",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "group",
                        "asperiores magni quibusdam",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "createdAt",
                        "magnam dolores voluptas",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Name;",
                        "password",
                        "vitae voluptatum nam",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("eum itaque fugiat",
                        "https://picsum.photos/640/480/?image=543",
                        "b06b5457-ea9f-db4a-9c0e-b2cddbf080e4",
                        () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                        "category",
                        true,
                        true,
                        true,
                        "dignissimos")]);
        await geoJSONLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await geoJSONLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        PortalItem testPortalItem = new PortalItem();
        await geoJSONLayer.SetPortalItem(testPortalItem);
        var portalItem = await geoJSONLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.Quantile,
                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                            new MapColor(148, 3, 5),
                            new MapColor(201, 50, 140)),
                        new AlgorithmicColorRamp(Algorithm.Hsv,
                            new MapColor(105, 58, 65),
                            new MapColor(148, 30, 203))]),
                        451.3453,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(339.3854,
                                123.5533),
                        new AuthoringInfoField1ClassBreakInfos(222.5172,
                                536.9633)],
                            "exercitationem",
                            "eum",
                            "commodi"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(158.2256,
                                592.3492),
                        new AuthoringInfoField1ClassBreakInfos(458.3849,
                                656.0958)],
                            "amet",
                            "distinctio",
                            "praesentium"),
                        ["porro",
                            "ullam",
                            "unde"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "illo",
                        true,
                    LengthUnit.Feet,
                        23.1613,
                        360.8314,
                        609.0813,
                        397.3575),
                new PictureFillSymbol("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0",
                    new Dimension(846.6750),
                    new Dimension(266.0252),
                    new Dimension(929.8671),
                    new Dimension(472.9838),
                    144.3729,
                    -1.3539,
                    new Outline(new MapColor(242, 243, 115),
                        new Dimension(373.5345),
                        SimpleLineSymbolStyle.None,
                        Cap.Round,
                        Join.Round,
                        new LineSymbolMarker(new MapColor(123, 149, 217),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Square),
                        923.6622),
                    new MapColor(237, 31, 82)),
                    "libero",
                    new DefaultSymbol(),
                    "qui",
                    "qui",
                    "corrupti",
                    "aliquam",
                new UniqueValueRendererLegendOptions("minima dignissimos alias"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("qui",
                        new TextSymbol("enim dolores et",
                            new MapColor(75, 127, 247),
                            new MapColor(51, 170, 210),
                                new Dimension(419.8194),
                            new MapFont(new Dimension(402.8770),
                                    "Bookman",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                179.1393,
                            new MapColor(181, 100, 167),
                            new MapColor(200, 25, 30),
                                706.9141,
                            HorizontalAlignment.Right,
                                true,
                                791.4993,
                                new Dimension(898.8623),
                                true),
                        [new UniqueValue("aut",
                                "eveniet",
                                "neque")])],
                        "voluptate")],
                [new UniqueValueInfo("magni",
                    new TextSymbol("nihil voluptate expedita",
                        new MapColor(69, 185, 0),
                        new MapColor(189, 41, 6),
                            new Dimension(638.1673),
                        new MapFont(new Dimension(322.0292),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            668.5282,
                        new MapColor(25, 236, 21),
                        new MapColor(242, 180, 252),
                            290.7010,
                        HorizontalAlignment.Right,
                            true,
                            359.0625,
                            new Dimension(793.4647),
                            true),
                        "voluptas"),
                new UniqueValueInfo("dolores",
                    new TextSymbol("quis sint hic",
                        new MapColor(24, 197, 131),
                        new MapColor(102, 222, 170),
                            new Dimension(71.0086),
                        new MapFont(new Dimension(19.0913),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            597.6191,
                        new MapColor(67, 217, 95),
                        new MapColor(160, 167, 188),
                            446.6667,
                        HorizontalAlignment.Left,
                            true,
                            622.1243,
                            new Dimension(959.7344),
                            true),
                        "quidem"),
                new UniqueValueInfo("illum",
                    new TextSymbol("dolor quasi pariatur",
                        new MapColor(9, 20, 33),
                        new MapColor(130, 142, 129),
                            new Dimension(331.5293),
                        new MapFont(new Dimension(408.5699),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            507.8814,
                        new MapColor(129, 2, 126),
                        new MapColor(174, 221, 220),
                            974.6174,
                        HorizontalAlignment.Center,
                            true,
                            638.5301,
                            new Dimension(31.3893),
                            true),
                        "hic")],
                    "enim",
                    "magnam officiis blanditiis");
        await geoJSONLayer.SetRenderer(testRenderer);
        var renderer = await geoJSONLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(4,
                    "quia",
                    "praesentium",
                    "rem");
        await geoJSONLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await geoJSONLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        IReadOnlyList<FeatureTemplate> testTemplates = [new FeatureTemplate("vel et delectus quia voluptate",
                DrawingTool.Point,
                    "token",
                new Graphic(new Extent(56.7898,
                            -67.1511,
                            13.2724,
                            41.6451,
                            541.3475,
                            855.1379,
                            164.6977,
                            511.4358,
                        new SpatialReference(9,
                                "consequatur",
                                "aut",
                                "officia"),
                            true,
                            true),
                    new TextSymbol("repudiandae architecto molestiae",
                        new MapColor(201, 40, 162),
                        new MapColor(35, 218, 41),
                            new Dimension(50.3125),
                        new MapFont(new Dimension(115.3751),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            274.2394,
                        new MapColor(191, 248, 31),
                        new MapColor(134, 165, 2),
                            26.2338,
                        HorizontalAlignment.Right,
                            true,
                            578.6508,
                            new Dimension(386.2475),
                            true),
                    new PopupTemplate("voluptatem et nihil",
                            "illum",
                            ["alias",
                                "harum"],
                        [new FieldInfo("status",
                                "et",
                                "aperiam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("phone",
                                "maiores",
                                "sed",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("id",
                                "consequatur",
                                "expedita",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("email",
                                "fugit",
                                "est",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                        [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "et",
                                    "vel eos nam")),
                        new FieldsPopupContent([new FieldInfo("avatar",
                                    "accusamus",
                                    "sed",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Sum)],
                                "beatae repellendus quae distinctio fugiat assumenda",
                                "explicabo ab fugiat")],
                        [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "category",
                                "id quam aperiam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "id",
                                "architecto consequatur rem",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "token",
                                "voluptate nulla ut",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "title",
                                "nihil optio ut",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("officiis facere ab",
                                "6d8877f9-729a-a429-373f-29f2442273fe",
                                () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "token",
                                "est"),
                        new ActionButton("delectus fugit qui",
                                "https://picsum.photos/640/480/?image=1002",
                                "4604eb2e-8f90-d0d7-0b3f-c93155e4b7e5",
                                () => { Console.WriteLine("fugit"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "error")]),
                        new AttributesDictionary(),
                        true,
                        "quos",
                        "est",
                        new GraphicOrigin(Guid.NewGuid(),
                            "odit",
                            2)),
                    new Thumbnail("minima",
                        "est",
                        130.9312,
                        25.5993)),
            new FeatureTemplate("qui est aut qui numquam voluptatum",
                DrawingTool.None,
                    "phone",
                new Graphic(new Polygon([new MapPath([new MapPoint([239.4928,
                                668.1327,
                                904.3916,
                                435.6855]),
                            new MapPoint([78.8698,
                                578.5131,
                                850.8687,
                                491.8480]),
                            new MapPoint([240.2369,
                                1.8837])])],
                        new SpatialReference(6,
                                "dolore",
                                "pariatur",
                                "voluptas"),
                        new Point(-178.4965,
                                -87.5236,
                                -105.5370,
                                81.4451,
                                848.9600,
                            new SpatialReference(2,
                                    "voluptatibus",
                                    "in",
                                    "officia"),
                                true,
                                true,
                                64.6334),
                            true,
                            true,
                            true),
                    new TextSymbol("saepe et occaecati",
                        new MapColor(74, 227, 25),
                        new MapColor(251, 222, 196),
                            new Dimension(424.5979),
                        new MapFont(new Dimension(210.9073),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            112.3265,
                        new MapColor(68, 167, 112),
                        new MapColor(110, 168, 150),
                            937.8925,
                        HorizontalAlignment.Left,
                            true,
                            4.3892,
                            new Dimension(638.8692),
                            true),
                    new PopupTemplate("est voluptatem repellat",
                            "aut",
                            ["dolorem",
                                "adipisci",
                                "voluptatem",
                                "ut"],
                        [new FieldInfo("updatedAt",
                                "atque",
                                "in",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Min)],
                        [new AttachmentsPopupContent("earum labore fugiat",
                                "aliquid dolor perspiciatis praesentium",
                                AttachmentsPopupContentDisplayType.Preview),
                        new RelationshipPopupContent("similique dignissimos assumenda",
                                "qui nemo iure et maiores voluptatem",
                                1,
                                "consequatur",
                            [new RelatedRecordsInfoFieldOrder("nemo",
                                OrderBy.Desc)],
                                1),
                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                    "facilis",
                                    "tempora ducimus et")),
                        new RelationshipPopupContent("omnis laboriosam aut",
                                "dolore aut ut ad temporibus veritatis",
                                4,
                                "tenetur",
                            [new RelatedRecordsInfoFieldOrder("accusamus",
                                OrderBy.Asc)],
                                6)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "updatedAt",
                                "blanditiis et impedit",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("praesentium quis debitis",
                                "f8387a72-082f-b28d-c36b-546cc9ffa528",
                                () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "name",
                                "rem")]),
                        new AttributesDictionary(),
                        true,
                        "architecto",
                        "consectetur",
                        new GraphicOrigin(Guid.NewGuid(),
                            "praesentium",
                            9)),
                    new Thumbnail("blanditiis",
                        "consectetur",
                        24.7376,
                        174.2656)),
            new FeatureTemplate("accusamus laboriosam molestias omnis nemo voluptas commodi",
                DrawingTool.None,
                    "comment",
                new Graphic(new Extent(51.8146,
                            94.2592,
                            85.2276,
                            -8.2747,
                            968.7261,
                            142.3537,
                            420.3007,
                            732.6023,
                        new SpatialReference(2,
                                "occaecati",
                                "ut",
                                "et"),
                            true,
                            true),
                    new TextSymbol("consequatur recusandae ad",
                        new MapColor(137, 248, 92),
                        new MapColor(172, 175, 179),
                            new Dimension(59.8902),
                        new MapFont(new Dimension(107.1361),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            57.2840,
                        new MapColor(217, 176, 236),
                        new MapColor(247, 220, 219),
                            398.4855,
                        HorizontalAlignment.Center,
                            true,
                            301.9485,
                            new Dimension(125.8620),
                            true),
                    new PopupTemplate("soluta quidem reiciendis",
                            "voluptatem",
                            ["quibusdam",
                                "nam",
                                "animi"],
                        [new FieldInfo("phone",
                                "omnis",
                                "rerum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("group",
                                "hic",
                                "sed",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("token",
                                "ratione",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("updatedAt",
                                "ipsam",
                                "mollitia",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new MediaPopupContent("quis vero dolorem",
                                "necessitatibus debitis nostrum blanditiis rem quisquam",
                            [new LineChartMediaInfo("amet eveniet eos",
                                    "in",
                                    "rem rem deleniti",
                                new ChartMediaInfoValue(["id",
                                        "temporibus",
                                        "quod"],
                                        "unde",
                                        "aut",
                                    [new ChartMediaInfoValueSeries("token",
                                            "dolor",
                                            32.6928),
                                    new ChartMediaInfoValueSeries("phone",
                                            "et",
                                            210.3124),
                                    new ChartMediaInfoValueSeries("name",
                                            "laborum",
                                            200.6374)],
                                    [new MapColor(35, 251, 20),
                                    new MapColor(100, 90, 83)])),
                            new PieChartMediaInfo("ut eum occaecati",
                                    "minima",
                                    "sunt quo ea",
                                new ChartMediaInfoValue(["quas",
                                        "voluptates",
                                        "dignissimos",
                                        "esse"],
                                        "qui",
                                        "iste",
                                    [new ChartMediaInfoValueSeries("password",
                                            "provident",
                                            599.2005)],
                                    [new MapColor(111, 216, 170),
                                    new MapColor(68, 144, 13)]))],
                                6),
                        new MediaPopupContent("doloribus nulla est",
                                "minus qui esse ea sequi est",
                            [new ColumnChartMediaInfo("autem qui sunt",
                                    "sunt",
                                    "possimus sint et",
                                new ChartMediaInfoValue(["consequatur",
                                        "doloribus",
                                        "recusandae"],
                                        "est",
                                        "dicta",
                                    [new ChartMediaInfoValueSeries("status",
                                            "suscipit",
                                            443.9375)],
                                    [new MapColor(94, 133, 45),
                                    new MapColor(254, 194, 24),
                                    new MapColor(241, 41, 15),
                                    new MapColor(6, 20, 168)])),
                            new LineChartMediaInfo("rem aut repudiandae",
                                    "cupiditate",
                                    "tempore officia consectetur",
                                new ChartMediaInfoValue(["architecto",
                                        "quis",
                                        "voluptates"],
                                        "iure",
                                        "vitae",
                                    [new ChartMediaInfoValueSeries("title",
                                            "non",
                                            900.7830),
                                    new ChartMediaInfoValueSeries("email",
                                            "et",
                                            284.7677),
                                    new ChartMediaInfoValueSeries("id",
                                            "illo",
                                            464.2756),
                                    new ChartMediaInfoValueSeries("comment",
                                            "asperiores",
                                            712.6365)],
                                    [new MapColor(186, 46, 17)]))],
                                7)],
                        [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "category",
                                "et explicabo veniam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "updatedAt",
                                "non consequatur animi",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "title",
                                "qui ipsam aliquam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return Date();",
                                "group",
                                "sed eveniet porro",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("odit et iure",
                                "196a5551-7d62-fb05-a887-9e3f16c9a937",
                                () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "updatedAt",
                                "similique"),
                        new ActionToggle("soluta dicta molestiae",
                                "e5223dbd-0798-7d4f-0621-f9cb8560799f",
                                () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "repellendus")]),
                        new AttributesDictionary(),
                        true,
                        "dolore",
                        "impedit",
                        new GraphicOrigin(Guid.NewGuid(),
                            "sed",
                            9)),
                    new Thumbnail("et",
                        "aut",
                        277.8751,
                        67.1801))];
        await geoJSONLayer.SetTemplates(testTemplates);
        var templates = await geoJSONLayer.GetTemplates();
        Assert.AreEqual(testTemplates, templates);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2009, 11, 27, 4, 43, 50),
                    new DateTime(2021, 9, 19, 7, 39, 0));
        await geoJSONLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await geoJSONLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("corrupti",
                    "molestiae",
                new TimeExtent(new DateTime(2009, 4, 14, 5, 38, 15),
                        new DateTime(2016, 11, 16, 9, 53, 42)),
                new TimeInterval(TemporalTime.Hours,
                        851.5912),
                    [new DateTime(2006, 10, 1, 7, 24, 27),
                        new DateTime(2014, 11, 26, 13, 39, 36)],
                    "Africa/Cairo",
                    "omnis");
        await geoJSONLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await geoJSONLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Milliseconds,
                    258.9124);
        await geoJSONLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await geoJSONLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2004, 5, 14, 20, 28, 33),
                    new DateTime(2011, 5, 9, 7, 55, 23));
        await geoJSONLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await geoJSONLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
