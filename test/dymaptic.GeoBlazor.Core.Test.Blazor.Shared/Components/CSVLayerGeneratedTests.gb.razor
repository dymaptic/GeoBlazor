@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderCSVLayer(Action renderHandler)
    {
        CSVLayer? cSVLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <CSVLayer 
                        Url="@("https://developers.arcgis.com/javascript/latest//sample-code/layers-csv/live/earthquakes.csv")"
                        Title="@("occaecati quam alias")"
                        Copyright="@("voluptatem")"
                        Opacity="@(0.5618)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        BlendMode="@(BlendMode.SourceAtop)"
                        DefinitionExpression="@("voluptate")"
                        Delimiter="@(CSVDelimiter.Pipe)"
                        DisplayField="@("impedit")"
                        Effect="@(new Effect("voluptatem",
                            33667393.5850))"
                        FullExtent="@(new Extent(-73.5081,
                                174.8509,
                                59.1611,
                                75.5281,
                                810.8290,
                                857.8469,
                                203.6981,
                                499.9669,
                            new SpatialReference(3,
                                    "qui",
                                    "modi",
                                    "nostrum"),
                                true,
                                true))"
                        GeometryType="@("suscipit")"
                        LabelsVisible="@(true)"
                        LatitudeField="@("alias")"
                        LegendEnabled="@(true)"
                        LongitudeField="@("odit")"
                        MaxScale="@(30427935.9318)"
                        MinScale="@(34178.7669)"
                        ObjectIdField="@("odio")"
                        OutFields="@(["quae",
                            "rerum",
                            "ab"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(399.6720)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(8,
                                "vel",
                                "praesentium",
                                "atque"))"
                        UseViewTime="@(true)"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Decades)"
                            Value="@(651.4416)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("ut")"
                            EndField="@("laudantium")"
                            Stops="@([new DateTime(2011, 10, 3, 6, 22, 28),
                                new DateTime(2016, 3, 25, 12, 49, 31),
                                new DateTime(2018, 11, 24, 13, 1, 17)])"
                            TimeZone="@("Asia/Kabul")"
                            TrackIdField="@("consequatur")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Months)"
                                Value="@(401.6545)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2012, 4, 2, 5, 39, 8))"
                                End="@(new DateTime(2004, 6, 25, 12, 21, 8))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2022, 1, 6, 17, 52, 10))"
                            End="@(new DateTime(2023, 10, 20, 5, 28, 20))">
                        </TimeExtent>
                        <SimpleRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                    new MapColor(111, 175, 128),
                                    new MapColor(63, 172, 96)),
                                    228.7327,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(168.0867,
                                            255.4854),
                                    new AuthoringInfoField1ClassBreakInfos(62.0744,
                                            138.6225),
                                    new AuthoringInfoField1ClassBreakInfos(338.3321,
                                            78.7532)],
                                        "corporis",
                                        "fugit",
                                        "explicabo"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(232.9443,
                                            156.0873)],
                                        "et",
                                        "quas",
                                        "incidunt"),
                                    ["quisquam",
                                        "dolorem"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "tenetur",
                                    true,
                                LengthUnit.Feet,
                                    146.8127,
                                    40.3243,
                                    138.4873,
                                    284.8026))">
                        </SimpleRenderer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("vero")"
                            ApiKey="@("atque")"
                            AvgRating="@(165.8107)"
                            Categories="@(["quaerat",
                                "velit"])"
                            Created="@(new DateTime(2017, 4, 26, 13, 37, 11))"
                            Culture="@("excepturi")"
                            Description="@("et commodi aliquid occaecati sit")"
                            Extent="@(new Extent(-19.9215,
                                    -60.6974,
                                    -20.4414,
                                    0.4208,
                                    296.1644,
                                    994.1824,
                                    940.5795,
                                    283.8749,
                                new SpatialReference(4,
                                        "eos",
                                        "ducimus",
                                        "delectus"),
                                    true,
                                    true))"
                            GroupCategories="@(["at",
                                "pariatur",
                                "eveniet"])"
                            LicenseInfo="@("maxime")"
                            Modified="@(new DateTime(2006, 9, 3, 10, 42, 49))"
                            Name="@("email")"
                            NumComments="@(384.7439)"
                            NumRatings="@(797.8416)"
                            NumViews="@(543.4093)"
                            Owner="@("Pete Leannon")"
                            OwnerFolder="@("Kurtis Abernathy")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Immediate,
                                    ["molestias",
                                        "quia",
                                        "laudantium",
                                        "eos"],
                                    "aut",
                                    "quisquam",
                                    "velit",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("sequi")"
                            Screenshots="@(["ut",
                                "sit"])"
                            Size="@(9)"
                            Snippet="@("porro")"
                            Tags="@(["harum",
                                "suscipit"])"
                            Title="@("adipisci alias reprehenderit")"
                            TypeKeywords="@(["perferendis",
                                "aperiam",
                                "voluptatem",
                                "voluptas"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                        </PortalItem>
                        <PopupTemplate 
                            Title="@("eos est incidunt")"
                            StringContent="@("sequi")"
                            OutFields="@(["velit",
                                "laboriosam"])"
                            FieldInfos="@([new FieldInfo("category",
                                    "ipsam",
                                    "cupiditate",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.ShortDateLeLongTime24),
                                    true,
                                    true,
                                StatisticType.Avg),
                            new FieldInfo("comment",
                                    "et",
                                    "quia",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Min)])"
                            Content="@([new RelationshipPopupContent("cupiditate maiores veritatis",
                                    "atque vel iure quasi dolor perferendis eos",
                                    4,
                                    "deserunt",
                                [new RelatedRecordsInfoFieldOrder("quae",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("in",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("sit",
                                    OrderBy.Asc)],
                                    1)])"
                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "createdAt",
                                    "numquam et deserunt",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "password",
                                    "et blanditiis aliquam",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "id",
                                    "excepturi delectus culpa",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("quis quae temporibus",
                                    "https://picsum.photos/640/480/?image=512",
                                    "5f3f03ab-2ebd-039e-652f-6a3f710ad5e1",
                                    () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "voluptatem"),
                            new ActionToggle("similique rerum excepturi",
                                    "2312c9f6-3de4-6657-d1d5-dedeb8ba9c43",
                                    () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                    true,
                                    true,
                                    true,
                                    true,
                                    "comment",
                                    "cumque"),
                            new ActionButton("consequuntur occaecati doloribus",
                                    "https://picsum.photos/640/480/?image=23",
                                    "f1413e6b-86fc-5e28-1b39-be9536779e6a",
                                    () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                                    "updatedAt",
                                    true,
                                    true,
                                    true,
                                    "nam")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("voluptatem")"
                            Order="@(SortOrder.Descending)"
                            ValueExpression="@("aut")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.CenterLeft)"
                            LabelExpression="@("quae")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(12983361.9434)"
                            MinScale="@(13207.4888)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(407.4612))"
                            Symbol="@(new TextSymbol("eaque dolorem doloribus",
                                new MapColor(95, 245, 4),
                                new MapColor(19, 215, 146),
                                    new Dimension(33.4132),
                                new MapFont(new Dimension(876.1636),
                                        "Garamond",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bold,
                                    TextDecoration.None),
                                    476.9726,
                                new MapColor(3, 187, 17),
                                new MapColor(128, 199, 125),
                                    782.5144,
                                HorizontalAlignment.Right,
                                    true,
                                    231.2796,
                                    new Dimension(616.1847),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Age > 21")">
                        </Label>
                        <Field 
                            Name="@("token")"
                            Alias="@("omnis")"
                            Description="@("aspernatur quas sit sint")"
                            Length="@(7)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "modi" })"
                            ValueType="@(FieldValueType.Coordinate)"
                            Domain="@(new InheritedDomain("email"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("nihil",
                                41901370.9611)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(231.9026,
                                new Extent(-140.8092,
                                        -126.7429,
                                        18.1878,
                                        -79.5628,
                                        138.2062,
                                        901.6150,
                                        83.1065,
                                        758.6635,
                                    new SpatialReference(8,
                                            "ratione",
                                            "enim",
                                            "nesciunt"),
                                        true,
                                        true),
                                    [7,
                                        7,
                                        9],
                                SpatialRelationship.Overlaps,
                                new TimeExtent(new DateTime(2005, 7, 18, 3, 15, 8),
                                        new DateTime(2023, 7, 7, 5, 42, 12)),
                                    QueryUnits.Feet,
                                    "Phone = '555-555-5555'"))"
                            IncludedEffect="@([new Effect("ut",
                                41584908.5801),
                                new Effect("voluptates",
                                    42490758.7955),
                                new Effect("velit",
                                    40402716.7109),
                                new Effect("expedita",
                                    40195519.7167)])">
                        </FeatureEffect>
                        <CSVLayerElevationInfo 
                            FeatureExpressionInfo="@(new CSVLayerElevationInfoFeatureExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "odit mollitia eum"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(152.5348)"
                            Unit="@(ElevationUnit.Millimeters)">
                        </CSVLayerElevationInfo>
                    </CSVLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(cSVLayer!);
        await AssertJavaScript("dispatchEvent", args: [cSVLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "csv");
        var createPopupTemplateMethodResult = await cSVLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["harum",
                    "sed",
                    "esse"],
                    ["group",
                        "updatedAt",
                        "token"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await cSVLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await cSVLayer.GetField("category");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await cSVLayer.GetFieldDomain("comment",
            new CSVLayerGetFieldDomainOptions(new Graphic(new Polygon([new MapPath([new MapPoint([588.8156,
                                948.6910]),
                            new MapPoint([334.3594,
                                849.6364]),
                            new MapPoint([138.1465,
                                450.3813,
                                846.8558]),
                            new MapPoint([121.1218,
                                777.0253,
                                801.7166,
                                232.8078])])],
                        new SpatialReference(7,
                                "et",
                                "perferendis",
                                "ea"),
                        new Point(16.3878,
                                61.8698,
                                -150.1146,
                                36.6520,
                                625.2078,
                            new SpatialReference(9,
                                    "ex",
                                    "eos",
                                    "dolorum"),
                                true,
                                true,
                                869.7396),
                            true,
                            true,
                            true),
                    new TextSymbol("eveniet cum ipsam",
                        new MapColor(94, 204, 176),
                        new MapColor(47, 223, 45),
                            new Dimension(3.6149),
                        new MapFont(new Dimension(789.2325),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            476.3775,
                        new MapColor(205, 115, 53),
                        new MapColor(132, 129, 126),
                            90.7985,
                        HorizontalAlignment.Center,
                            true,
                            670.1749,
                            new Dimension(331.6608),
                            true),
                    new PopupTemplate("qui cum perspiciatis",
                            "voluptates",
                            ["officia",
                                "eaque"],
                        [new FieldInfo("createdAt",
                                "consequatur",
                                "unde",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("email",
                                "ratione",
                                "ut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                        [new MediaPopupContent("consectetur eveniet laudantium",
                                "earum animi quae dolorum",
                            [new BarChartMediaInfo("id rem minima",
                                    "explicabo",
                                    "aperiam cupiditate voluptas",
                                new ChartMediaInfoValue(["quam",
                                        "nemo"],
                                        "quidem",
                                        "error",
                                    [new ChartMediaInfoValueSeries("comment",
                                            "ea",
                                            672.6363)],
                                    [new MapColor(219, 20, 79),
                                    new MapColor(250, 169, 190),
                                    new MapColor(77, 47, 65),
                                    new MapColor(46, 85, 1)])),
                            new BarChartMediaInfo("velit cupiditate dolorum",
                                    "et",
                                    "dolor fuga qui",
                                new ChartMediaInfoValue(["dolorem",
                                        "delectus",
                                        "voluptas"],
                                        "consequuntur",
                                        "sint",
                                    [new ChartMediaInfoValueSeries("password",
                                            "vel",
                                            143.1383),
                                    new ChartMediaInfoValueSeries("password",
                                            "repudiandae",
                                            252.1922),
                                    new ChartMediaInfoValueSeries("title",
                                            "at",
                                            248.2368)],
                                    [new MapColor(88, 247, 235),
                                    new MapColor(180, 64, 126),
                                    new MapColor(41, 186, 145)])),
                            new ImageMediaInfo("modi quos esse",
                                    "consequatur",
                                    "iure animi ut",
                                new ImageMediaInfoValue("http://dino.org",
                                        "https://rae.net"),
                                    563.5643)],
                                2),
                        new RelationshipPopupContent("modi sit culpa",
                                "laboriosam officiis possimus beatae",
                                8,
                                "fugit",
                            [new RelatedRecordsInfoFieldOrder("veniam",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("ea",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("quasi",
                                OrderBy.Asc),
                            new RelatedRecordsInfoFieldOrder("voluptate",
                                OrderBy.Desc)],
                                1),
                        new MediaPopupContent("similique nulla odio",
                                "consequatur dolorem et quae voluptatem",
                            [new PieChartMediaInfo("facere dolorem quia",
                                    "suscipit",
                                    "facere doloremque delectus",
                                new ChartMediaInfoValue(["optio",
                                        "voluptatibus",
                                        "itaque",
                                        "laboriosam"],
                                        "aspernatur",
                                        "expedita",
                                    [new ChartMediaInfoValueSeries("createdAt",
                                            "incidunt",
                                            806.2804),
                                    new ChartMediaInfoValueSeries("title",
                                            "nam",
                                            256.4368),
                                    new ChartMediaInfoValueSeries("comment",
                                            "non",
                                            74.4565),
                                    new ChartMediaInfoValueSeries("password",
                                            "est",
                                            462.4899)],
                                    [new MapColor(104, 33, 149),
                                    new MapColor(3, 54, 98)])),
                            new ImageMediaInfo("fuga ut nemo",
                                    "qui",
                                    "ea ut tenetur",
                                new ImageMediaInfoValue("http://clifford.name",
                                        "https://reyes.biz"),
                                    594.2676),
                            new ColumnChartMediaInfo("ipsum corrupti rerum",
                                    "ad",
                                    "expedita illum modi",
                                new ChartMediaInfoValue(["alias",
                                        "qui",
                                        "accusamus"],
                                        "soluta",
                                        "molestiae",
                                    [new ChartMediaInfoValueSeries("group",
                                            "assumenda",
                                            736.6617)],
                                    [new MapColor(239, 127, 157)])),
                            new LineChartMediaInfo("magnam ex eos",
                                    "aut",
                                    "eveniet minus ipsum",
                                new ChartMediaInfoValue(["enim",
                                        "eos"],
                                        "ipsum",
                                        "nemo",
                                    [new ChartMediaInfoValueSeries("title",
                                            "est",
                                            739.8070),
                                    new ChartMediaInfoValueSeries("id",
                                            "id",
                                            482.7722),
                                    new ChartMediaInfoValueSeries("status",
                                            "perferendis",
                                            233.0715)],
                                    [new MapColor(47, 217, 143),
                                    new MapColor(221, 243, 173),
                                    new MapColor(248, 186, 116)]))],
                                7)],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "email",
                                "est omnis nam",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "createdAt",
                                "assumenda a voluptas",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Name;",
                                "token",
                                "ut inventore sed",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("et blanditiis consequatur",
                                "bae9d8a2-ade2-dcd3-57dd-758fb5e473e9",
                                () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "status",
                                "unde"),
                        new ActionButton("et aut quae",
                                "https://picsum.photos/640/480/?image=938",
                                "9f8acf67-ae5f-f701-cebf-7ab5fabbaa09",
                                () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "aliquid"),
                        new ActionToggle("non voluptas sit",
                                "54fdbafe-9385-6ffd-de33-12a58bb8fb79",
                                () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "reprehenderit"),
                        new ActionButton("consequuntur eos rerum",
                                "https://picsum.photos/640/480/?image=647",
                                "dd3dc9db-6727-f915-3184-edb410bd2819",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "category",
                                true,
                                true,
                                true,
                                "dolor")]),
                        new AttributesDictionary(),
                        true,
                        "nostrum",
                        "quidem",
                        new GraphicOrigin(Guid.NewGuid(),
                            "suscipit",
                            8))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await cSVLayer.QueryExtent(new Query([3,
                    8,
                    1],
                    true,
                    441.8877,
                    101.1298,
                    "7.1.0.2",
                new Polyline([new MapPath([new MapPoint([788.6204,
                            954.3353,
                            38.7490]),
                        new MapPoint([336.0372,
                            539.9526]),
                        new MapPoint([627.5815,
                            931.2097,
                            497.3557])]),
                        new MapPath([new MapPoint([739.9751,
                                624.5708,
                                89.8422]),
                            new MapPoint([19.5573,
                                464.7960])])],
                    new SpatialReference(6,
                            "tenetur",
                            "earum",
                            "tempora"),
                        true,
                        true),
                    5,
                    ["voluptas",
                        "voluptates",
                        "quae"],
                    "ipsam",
                    new DateTime(2020, 6, 13, 13, 51, 14),
                    65.9069,
                    6,
                    "ut",
                    2),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await cSVLayer.QueryFeatureCount(new Query([7,
                    7],
                    true,
                    6.6262,
                    18.8182,
                    "3.9.0.4",
                new Polyline([new MapPath([new MapPoint([514.7733,
                            178.0921,
                            489.1164]),
                        new MapPoint([695.7574,
                            498.5336,
                            619.6077])]),
                        new MapPath([new MapPoint([794.7998,
                                467.0476,
                                468.8683,
                                708.1170]),
                            new MapPoint([326.7046,
                                603.3472]),
                            new MapPoint([585.9764,
                                905.5425]),
                            new MapPoint([121.5249,
                                930.1576,
                                249.2682,
                                244.7736])]),
                        new MapPath([new MapPoint([697.9202,
                                409.3253]),
                            new MapPoint([279.9595,
                                952.6068,
                                529.9798,
                                567.6184])]),
                        new MapPath([new MapPoint([375.0953,
                                609.8227,
                                441.4213]),
                            new MapPoint([571.4079,
                                32.9849,
                                848.4986]),
                            new MapPoint([898.8621,
                                196.8407,
                                210.4325])])],
                    new SpatialReference(3,
                            "a",
                            "omnis",
                            "et"),
                        true,
                        true),
                    2,
                    ["veritatis",
                        "qui",
                        "hic",
                        "rerum"],
                    "odio",
                    new DateTime(2010, 11, 22, 17, 9, 14),
                    638.5213,
                    8,
                    "magnam",
                    5),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await cSVLayer.QueryFeatures(new Query([8,
                    2,
                    8,
                    8],
                    true,
                    635.9783,
                    248.7741,
                    "7.7.0.1",
                new Polygon([new MapPath([new MapPoint([966.2629,
                            314.9967]),
                        new MapPoint([665.9448,
                            286.8449,
                            383.3293,
                            22.8110]),
                        new MapPoint([48.9031,
                            150.5975,
                            911.6751]),
                        new MapPoint([742.1287,
                            592.9578])])],
                    new SpatialReference(9,
                            "molestiae",
                            "laboriosam",
                            "pariatur"),
                    new Point(157.1920,
                            -87.8637,
                            164.1000,
                            2.4020,
                            663.1361,
                        new SpatialReference(4,
                                "iusto",
                                "at",
                                "assumenda"),
                            true,
                            true,
                            544.8924),
                        true,
                        true,
                        true),
                    8,
                    ["illo",
                        "molestiae",
                        "iste",
                        "porro"],
                    "nihil",
                    new DateTime(2005, 11, 2, 1, 3, 14),
                    888.1480,
                    3,
                    "illum",
                    1),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await cSVLayer.QueryObjectIds(new Query([2,
                    2],
                    true,
                    591.3968,
                    691.7412,
                    "3.4.2.7",
                new Extent(83.8231,
                        80.8842,
                        -66.3837,
                        -63.5246,
                        884.0106,
                        814.0823,
                        839.1204,
                        53.0858,
                    new SpatialReference(7,
                            "enim",
                            "deleniti",
                            "a"),
                        true,
                        true),
                    8,
                    ["quae",
                        "provident",
                        "aut"],
                    "assumenda",
                    new DateTime(2007, 8, 2, 6, 5, 14),
                    822.6315,
                    5,
                    "fugiat",
                    1),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await cSVLayer.Refresh();
        ListMode testListMode = ListMode.Show;
        await cSVLayer.SetListMode(testListMode);
        var listMode = await cSVLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Screen;
        await cSVLayer.SetBlendMode(testBlendMode);
        var blendMode = await cSVLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("et suscipit commodi",
                    "qui",
                    ["voluptatem",
                        "et"],
                [new FieldInfo("group",
                        "cupiditate",
                        "atque",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(4,
                            true,
                        DateFormat.LongMonthDayYearLongTime24),
                        true,
                        true,
                    StatisticType.Var)],
                [new RelationshipPopupContent("harum laudantium blanditiis",
                        "earum maxime earum nemo architecto quaerat corporis",
                        2,
                        "quis",
                    [new RelatedRecordsInfoFieldOrder("ab",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("autem",
                        OrderBy.Desc),
                    new RelatedRecordsInfoFieldOrder("saepe",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("veritatis",
                        OrderBy.Asc)],
                        4),
                new FieldsPopupContent([new FieldInfo("id",
                            "odit",
                            "sequi",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("phone",
                            "sed",
                            "possimus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Max)],
                        "qui corrupti nihil maiores",
                        "cupiditate rerum ducimus")],
                [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "title",
                        "suscipit ut neque",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature['FieldName'];",
                        "group",
                        "vel similique sint",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return Date();",
                        "phone",
                        "beatae unde fugit",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionButton("quo omnis deleniti",
                        "https://picsum.photos/640/480/?image=861",
                        "6a1abe34-2980-5e09-e48a-76af9eeab864",
                        () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                        "group",
                        true,
                        true,
                        true,
                        "qui")]);
        await cSVLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await cSVLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        CSVLayerElevationInfo testElevationInfo = new CSVLayerElevationInfo(new CSVLayerElevationInfoFeatureExpressionInfo("return Date();",
                        "sint et voluptas"),
                ElevationInfoMode.AbsoluteHeight,
                    295.5660,
                ElevationUnit.Kilometers);
        await cSVLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await cSVLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("vel",
                    44071026.0125),
                    new Effect("minus",
                        45898175.7651),
                    new Effect("iste",
                        12863554.5385),
                    new Effect("atque",
                        35719062.6554)],
                    true,
                new FeatureFilter(844.1683,
                    new Point(125.8773,
                            25.8059,
                            -19.1897,
                            13.2735,
                            702.9021,
                        new SpatialReference(7,
                                "maiores",
                                "eum",
                                "odio"),
                            true,
                            true,
                            999.1331),
                        [4,
                            2,
                            8],
                    SpatialRelationship.Touches,
                    new TimeExtent(new DateTime(2019, 3, 9, 12, 44, 19),
                            new DateTime(2000, 8, 17, 15, 33, 16)),
                        QueryUnits.Meters,
                        "Age > 21"),
                    [new Effect("delectus",
                        31234268.1923),
                        new Effect("aperiam",
                            45084277.4316),
                        new Effect("facere",
                            13630364.3351)]);
        await cSVLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await cSVLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "avatar",
                    "mollitia",
                    "doloremque nostrum fuga unde",
                    7,
                    true,
                    true,
                    new { Value = "ut" },
                FieldValueType.OrderedOrRanked,
                new InheritedDomain("name")),
            new Field(default,
                    "name",
                    "molestiae",
                    "reprehenderit fugit vel soluta tempore aliquid",
                    7,
                    true,
                    true,
                    new { Value = "aspernatur" },
                FieldValueType.TypeOrCategory,
                new RangeDomain("et",
                        "at",
                        "updatedAt")),
            new Field(default,
                    "avatar",
                    "voluptatibus",
                    "sunt dolorem veniam similique molestias autem blanditiis",
                    7,
                    true,
                    true,
                    new { Value = "ut" },
                FieldValueType.LocationOrPlaceName,
                new RangeDomain("soluta",
                        "et",
                        "token"))];
        await cSVLayer.SetFields(testFields);
        var fields = await cSVLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-136.3129,
                    26.9515,
                    -14.6972,
                    -39.8208,
                    692.5112,
                    509.6969,
                    522.2762,
                    468.8685,
                new SpatialReference(6,
                        "veniam",
                        "perspiciatis",
                        "et"),
                    true,
                    true);
        await cSVLayer.SetFullExtent(testFullExtent);
        var fullExtent = await cSVLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveStart,
                    "neque",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Parallel,
                    23467925.1111,
                    14371.9221,
                    true,
                    new Dimension(232.9060),
                new TextSymbol("aut et iusto",
                    new MapColor(224, 232, 140),
                    new MapColor(178, 36, 177),
                        new Dimension(409.7141),
                    new MapFont(new Dimension(392.0992),
                            "Palatino",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.None),
                        872.2867,
                    new MapColor(161, 124, 137),
                    new MapColor(224, 9, 43),
                        805.6268,
                    HorizontalAlignment.Left,
                        true,
                        78.6188,
                        new Dimension(644.8847),
                        true),
                    true,
                    "PostalCode = 'M5V 1J9'"),
            new Label(LabelPlacement.BelowBefore,
                    "aut",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Parallel,
                    7850395.2149,
                    48071.8930,
                    true,
                    new Dimension(122.7991),
                new TextSymbol("quidem esse exercitationem",
                    new MapColor(52, 162, 39),
                    new MapColor(110, 177, 168),
                        new Dimension(193.5676),
                    new MapFont(new Dimension(938.9912),
                            "Courier New",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        18.7879,
                    new MapColor(181, 175, 184),
                    new MapColor(163, 207, 39),
                        188.7062,
                    HorizontalAlignment.Left,
                        true,
                        55.5012,
                        new Dimension(489.7603),
                        true),
                    true,
                    "ObjectID = 1")];
        await cSVLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await cSVLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("ut",
                SortOrder.Descending,
                    "animi")];
        await cSVLayer.SetOrderBy(testOrderBy);
        var orderBy = await cSVLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "perferendis",
                    "libero",
                    584.4858,
                    ["quia",
                        "cum"],
                    new DateTime(2000, 6, 22, 11, 42, 12),
                    "nihil",
                    "excepturi numquam neque occaecati sapiente nisi",
                new Extent(130.0264,
                        -99.1473,
                        28.3467,
                        -13.2140,
                        387.6404,
                        181.8715,
                        232.5443,
                        54.2310,
                    new SpatialReference(2,
                            "ratione",
                            "accusamus",
                            "magnam"),
                        true,
                        true),
                    ["libero",
                        "ea",
                        "facere",
                        "iusto"],
                    "consequatur",
                    new DateTime(2007, 5, 5, 12, 31, 28),
                    "email",
                    505.0228);
        await cSVLayer.SetPortalItem(testPortalItem);
        var portalItem = await cSVLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                    new AlgorithmicColorRamp(Algorithm.CieLab,
                        new MapColor(72, 148, 135),
                        new MapColor(29, 237, 76)),
                        387.7728,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(645.5214,
                                486.4855)],
                            "laboriosam",
                            "sint",
                            "voluptas"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(493.5463,
                                480.8842),
                        new AuthoringInfoField1ClassBreakInfos(988.8139,
                                609.8403),
                        new AuthoringInfoField1ClassBreakInfos(16.0702,
                                230.3729)],
                            "libero",
                            "excepturi",
                            "hic"),
                        ["quae",
                            "debitis",
                            "minus"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "voluptas",
                        true,
                    LengthUnit.Inches,
                        937.5752,
                        391.0453,
                        42.9916,
                        679.0823),
                new PictureFillSymbol("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0",
                    new Dimension(860.1667),
                    new Dimension(830.5169),
                    new Dimension(509.8998),
                    new Dimension(795.6954),
                    13.6691,
                    -75.3543,
                    new Outline(new MapColor(121, 209, 136),
                        new Dimension(129.6879),
                        SimpleLineSymbolStyle.LongDash,
                        Cap.Round,
                        Join.Miter,
                        new LineSymbolMarker(new MapColor(113, 149, 184),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Arrow),
                        26.3035),
                    new MapColor(37, 203, 211)),
                    "at",
                    new DefaultSymbol(),
                    "autem",
                    "recusandae",
                    "recusandae",
                    "voluptatem",
                new UniqueValueRendererLegendOptions("nihil deserunt corporis"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("enim",
                        new TextSymbol("dolor et laborum",
                            new MapColor(42, 105, 237),
                            new MapColor(219, 154, 49),
                                new Dimension(700.4565),
                            new MapFont(new Dimension(277.7482),
                                    "Georgia",
                                MapFontStyle.Oblique,
                                FontWeight.Lighter,
                                TextDecoration.None),
                                437.9220,
                            new MapColor(130, 7, 197),
                            new MapColor(221, 208, 230),
                                52.0722,
                            HorizontalAlignment.Right,
                                true,
                                771.2609,
                                new Dimension(468.4074),
                                true),
                        [new UniqueValue("dolore",
                                "repudiandae",
                                "beatae"),
                        new UniqueValue("repellat",
                                "aut",
                                "est")]),
                    new UniqueValueClass("non",
                        new TextSymbol("sequi ut commodi",
                            new MapColor(10, 222, 123),
                            new MapColor(194, 122, 59),
                                new Dimension(623.6910),
                            new MapFont(new Dimension(532.7687),
                                    "Verdana",
                                MapFontStyle.Italic,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                225.6682,
                            new MapColor(53, 241, 200),
                            new MapColor(62, 252, 120),
                                198.4556,
                            HorizontalAlignment.Center,
                                true,
                                811.0919,
                                new Dimension(834.5088),
                                true),
                        [new UniqueValue("quia",
                                "ut",
                                "soluta"),
                        new UniqueValue("dolores",
                                "laborum",
                                "numquam"),
                        new UniqueValue("est",
                                "soluta",
                                "id")]),
                    new UniqueValueClass("sint",
                        new TextSymbol("pariatur cum aut",
                            new MapColor(250, 26, 170),
                            new MapColor(33, 47, 8),
                                new Dimension(37.8829),
                            new MapFont(new Dimension(90.4496),
                                    "Georgia",
                                MapFontStyle.Normal,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                31.5561,
                            new MapColor(133, 122, 161),
                            new MapColor(107, 232, 71),
                                696.8299,
                            HorizontalAlignment.Left,
                                true,
                                6.2831,
                                new Dimension(941.8027),
                                true),
                        [new UniqueValue("velit",
                                "at",
                                "sint")]),
                    new UniqueValueClass("placeat",
                        new TextSymbol("quisquam iusto nostrum",
                            new MapColor(174, 132, 245),
                            new MapColor(61, 197, 208),
                                new Dimension(913.0791),
                            new MapFont(new Dimension(282.3579),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                450.6617,
                            new MapColor(251, 49, 94),
                            new MapColor(210, 12, 220),
                                300.8174,
                            HorizontalAlignment.Center,
                                true,
                                859.2084,
                                new Dimension(311.0169),
                                true),
                        [new UniqueValue("ipsa",
                                "deserunt",
                                "natus"),
                        new UniqueValue("molestiae",
                                "neque",
                                "quas")])],
                        "soluta"),
                new UniqueValueGroup([new UniqueValueClass("quasi",
                        new TextSymbol("iusto et vel",
                            new MapColor(17, 161, 32),
                            new MapColor(216, 226, 194),
                                new Dimension(872.4086),
                            new MapFont(new Dimension(256.8799),
                                    "Times New Roman",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.None),
                                860.4595,
                            new MapColor(240, 246, 80),
                            new MapColor(156, 208, 248),
                                943.2767,
                            HorizontalAlignment.Center,
                                true,
                                856.8691,
                                new Dimension(36.1386),
                                true),
                        [new UniqueValue("aliquid",
                                "eius",
                                "quibusdam"),
                        new UniqueValue("dolores",
                                "similique",
                                "quo")]),
                    new UniqueValueClass("impedit",
                        new TextSymbol("esse velit adipisci",
                            new MapColor(97, 63, 85),
                            new MapColor(82, 228, 184),
                                new Dimension(727.8153),
                            new MapFont(new Dimension(871.1662),
                                    "Georgia",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                110.4054,
                            new MapColor(93, 3, 72),
                            new MapColor(227, 94, 177),
                                583.8316,
                            HorizontalAlignment.Left,
                                true,
                                823.7104,
                                new Dimension(457.9395),
                                true),
                        [new UniqueValue("repellat",
                                "quibusdam",
                                "molestiae")])],
                        "ut"),
                new UniqueValueGroup([new UniqueValueClass("autem",
                        new TextSymbol("fugit est adipisci",
                            new MapColor(99, 214, 215),
                            new MapColor(127, 227, 25),
                                new Dimension(17.9452),
                            new MapFont(new Dimension(195.4656),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                440.3623,
                            new MapColor(143, 227, 76),
                            new MapColor(71, 98, 56),
                                328.0943,
                            HorizontalAlignment.Left,
                                true,
                                49.7634,
                                new Dimension(390.2146),
                                true),
                        [new UniqueValue("similique",
                                "libero",
                                "distinctio"),
                        new UniqueValue("ullam",
                                "nisi",
                                "sapiente")]),
                    new UniqueValueClass("ut",
                        new TextSymbol("id facere qui",
                            new MapColor(148, 46, 195),
                            new MapColor(147, 31, 45),
                                new Dimension(54.6066),
                            new MapFont(new Dimension(646.4441),
                                    "Times New Roman",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                896.1389,
                            new MapColor(203, 248, 54),
                            new MapColor(151, 245, 96),
                                535.2832,
                            HorizontalAlignment.Left,
                                true,
                                112.8621,
                                new Dimension(662.5005),
                                true),
                        [new UniqueValue("eos",
                                "corrupti",
                                "nisi"),
                        new UniqueValue("eaque",
                                "odio",
                                "veniam"),
                        new UniqueValue("in",
                                "corporis",
                                "excepturi")]),
                    new UniqueValueClass("fugiat",
                        new TextSymbol("velit perspiciatis officia",
                            new MapColor(46, 162, 223),
                            new MapColor(57, 199, 230),
                                new Dimension(426.8634),
                            new MapFont(new Dimension(687.4924),
                                    "Palatino",
                                MapFontStyle.Normal,
                                FontWeight.Lighter,
                                TextDecoration.Underline),
                                595.4438,
                            new MapColor(114, 165, 22),
                            new MapColor(142, 70, 11),
                                690.6460,
                            HorizontalAlignment.Center,
                                true,
                                276.5593,
                                new Dimension(337.1351),
                                true),
                        [new UniqueValue("laborum",
                                "ratione",
                                "labore"),
                        new UniqueValue("architecto",
                                "iste",
                                "non"),
                        new UniqueValue("sit",
                                "ea",
                                "quae"),
                        new UniqueValue("et",
                                "a",
                                "repellendus")])],
                        "molestiae"),
                new UniqueValueGroup([new UniqueValueClass("et",
                        new TextSymbol("qui esse qui",
                            new MapColor(19, 61, 129),
                            new MapColor(172, 91, 83),
                                new Dimension(53.4303),
                            new MapFont(new Dimension(462.4988),
                                    "Garamond",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.None),
                                445.9152,
                            new MapColor(167, 180, 225),
                            new MapColor(133, 169, 149),
                                886.0678,
                            HorizontalAlignment.Right,
                                true,
                                959.1611,
                                new Dimension(257.6766),
                                true),
                        [new UniqueValue("in",
                                "ut",
                                "quo")]),
                    new UniqueValueClass("qui",
                        new TextSymbol("cupiditate facilis et",
                            new MapColor(218, 152, 221),
                            new MapColor(82, 61, 244),
                                new Dimension(940.1242),
                            new MapFont(new Dimension(447.0010),
                                    "Helvetica",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                830.5423,
                            new MapColor(84, 65, 68),
                            new MapColor(20, 252, 88),
                                297.6535,
                            HorizontalAlignment.Left,
                                true,
                                526.7041,
                                new Dimension(313.7959),
                                true),
                        [new UniqueValue("temporibus",
                                "et",
                                "beatae")]),
                    new UniqueValueClass("quo",
                        new TextSymbol("iusto hic molestias",
                            new MapColor(41, 215, 170),
                            new MapColor(35, 116, 253),
                                new Dimension(182.7930),
                            new MapFont(new Dimension(497.2552),
                                    "Helvetica",
                                MapFontStyle.Italic,
                                FontWeight.Normal,
                                TextDecoration.Underline),
                                344.3012,
                            new MapColor(183, 139, 228),
                            new MapColor(12, 211, 116),
                                507.7233,
                            HorizontalAlignment.Center,
                                true,
                                574.2057,
                                new Dimension(898.1807),
                                true),
                        [new UniqueValue("vel",
                                "voluptas",
                                "perspiciatis")])],
                        "eum")],
                [new UniqueValueInfo("illo",
                    new TextSymbol("expedita architecto facere",
                        new MapColor(229, 18, 254),
                        new MapColor(17, 228, 168),
                            new Dimension(550.3568),
                        new MapFont(new Dimension(26.6286),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            791.4781,
                        new MapColor(109, 212, 14),
                        new MapColor(55, 167, 214),
                            716.3421,
                        HorizontalAlignment.Left,
                            true,
                            459.9544,
                            new Dimension(13.2760),
                            true),
                        "quia"),
                new UniqueValueInfo("placeat",
                    new TextSymbol("labore sed nobis",
                        new MapColor(238, 5, 54),
                        new MapColor(229, 200, 248),
                            new Dimension(954.4244),
                        new MapFont(new Dimension(365.6052),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            817.4522,
                        new MapColor(17, 41, 14),
                        new MapColor(76, 30, 23),
                            449.3897,
                        HorizontalAlignment.Center,
                            true,
                            711.5996,
                            new Dimension(278.7764),
                            true),
                        "suscipit"),
                new UniqueValueInfo("animi",
                    new TextSymbol("tenetur perspiciatis quaerat",
                        new MapColor(254, 106, 4),
                        new MapColor(23, 82, 39),
                            new Dimension(918.7746),
                        new MapFont(new Dimension(203.4526),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            256.7239,
                        new MapColor(148, 108, 83),
                        new MapColor(15, 177, 60),
                            887.3287,
                        HorizontalAlignment.Left,
                            true,
                            124.4892,
                            new Dimension(156.6312),
                            true),
                        "quia"),
                new UniqueValueInfo("consequatur",
                    new TextSymbol("sequi ipsam nisi",
                        new MapColor(110, 158, 88),
                        new MapColor(96, 30, 81),
                            new Dimension(284.7809),
                        new MapFont(new Dimension(43.9603),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            587.5839,
                        new MapColor(13, 32, 166),
                        new MapColor(214, 159, 251),
                            216.6926,
                        HorizontalAlignment.Center,
                            true,
                            811.3026,
                            new Dimension(767.4205),
                            true),
                        "non")],
                    "sint",
                    "omnis commodi aut");
        await cSVLayer.SetRenderer(testRenderer);
        var renderer = await cSVLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(6,
                    "quidem",
                    "nesciunt",
                    "et");
        await cSVLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await cSVLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2020, 9, 5, 5, 49, 50),
                    new DateTime(2008, 5, 7, 7, 34, 29));
        await cSVLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await cSVLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("perspiciatis",
                    "et",
                new TimeExtent(new DateTime(2001, 3, 2, 19, 54, 36),
                        new DateTime(2000, 4, 26, 9, 15, 37)),
                new TimeInterval(TemporalTime.Days,
                        520.7820),
                    [new DateTime(2017, 4, 21, 6, 57, 46),
                        new DateTime(2006, 1, 3, 10, 20, 58)],
                    "America/Santiago",
                    "nobis");
        await cSVLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await cSVLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Years,
                    735.1822);
        await cSVLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await cSVLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2009, 4, 2, 13, 12, 35),
                    new DateTime(2018, 7, 21, 14, 11, 7));
        await cSVLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await cSVLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
