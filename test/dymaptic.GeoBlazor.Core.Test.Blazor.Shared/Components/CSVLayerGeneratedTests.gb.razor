@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedCSVLayer(Action renderHandler)
    {
        CSVLayer? cSVLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <CSVLayer 
                        Url="@("https://developers.arcgis.com/javascript/latest//sample-code/layers-csv/live/earthquakes.csv")"
                        Title="@("necessitatibus pariatur sunt")"
                        Copyright="@("sit")"
                        Opacity="@(0.3147)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        BlendMode="@(BlendMode.Color)"
                        DefinitionExpression="@("explicabo")"
                        Delimiter="@(CSVDelimiter.Semicolon)"
                        DisplayField="@("in")"
                        Effect="@(new Effect("dolore",
                            15338242.6733))"
                        FullExtent="@(new Extent(42.2650,
                                121.8798,
                                70.9960,
                                0.7013,
                                493.7462,
                                934.6671,
                                347.7918,
                                694.9414,
                            new SpatialReference(7,
                                    "nihil",
                                    "explicabo",
                                    "distinctio"),
                                true,
                                true))"
                        GeometryType="@("quam")"
                        LabelsVisible="@(true)"
                        LatitudeField="@("corrupti")"
                        LegendEnabled="@(true)"
                        LongitudeField="@("voluptas")"
                        MaxScale="@(40653224.0708)"
                        MinScale="@(5670.2947)"
                        ObjectIdField="@("mollitia")"
                        OutFields="@(["voluptatem",
                            "consequatur",
                            "harum",
                            "omnis"])"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        RefreshInterval="@(821.3341)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        SpatialReference="@(new SpatialReference(5,
                                "amet",
                                "eius",
                                "nemo"))"
                        UseViewTime="@(true)"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Seconds)"
                            Value="@(264.1124)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("enim")"
                            EndField="@("quisquam")"
                            Stops="@([new DateTime(2005, 11, 25, 5, 25, 31),
                                new DateTime(2006, 3, 24, 4, 34, 19),
                                new DateTime(2005, 9, 23, 10, 11, 21),
                                new DateTime(2019, 6, 26, 8, 25, 7)])"
                            TimeZone="@("Pacific/Fakaofo")"
                            TrackIdField="@("deleniti")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Decades)"
                                Value="@(928.9624)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2015, 6, 27, 17, 54, 52))"
                                End="@(new DateTime(2011, 4, 12, 1, 49, 24))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2001, 5, 6, 18, 47, 6))"
                            End="@(new DateTime(2006, 8, 14, 13, 6, 41))">
                        </TimeExtent>
                        <UniqueValueRenderer 
                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                    new MapColor(148, 213, 121),
                                    new MapColor(40, 9, 175)),
                                    521.2025,
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(21.1931,
                                            634.9894),
                                    new AuthoringInfoField1ClassBreakInfos(142.0918,
                                            302.7756),
                                    new AuthoringInfoField1ClassBreakInfos(412.8303,
                                            114.3806),
                                    new AuthoringInfoField1ClassBreakInfos(280.3171,
                                            637.1029)],
                                        "iste",
                                        "et",
                                        "dignissimos"),
                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(740.9598,
                                            495.4704),
                                    new AuthoringInfoField1ClassBreakInfos(922.1505,
                                            891.1592)],
                                        "pariatur",
                                        "eligendi",
                                        "adipisci"),
                                    ["aut",
                                        "mollitia",
                                        "ad"],
                                AuthoringInfoFlowTheme.FlowLine,
                                    "voluptate",
                                    true,
                                LengthUnit.Centimeters,
                                    935.1946,
                                    537.9721,
                                    519.3877,
                                    174.3039))">
                        </UniqueValueRenderer>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("consequatur qui inventore")"
                            StringContent="@("possimus")"
                            OutFields="@(["quaerat",
                                "rerum",
                                "ut",
                                "corporis"])"
                            FieldInfos="@([new FieldInfo("token",
                                    "odio",
                                    "provident",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Sum),
                            new FieldInfo("id",
                                    "laborum",
                                    "ex",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(1,
                                        true,
                                    DateFormat.ShortMonthYear),
                                    true,
                                    true,
                                StatisticType.Count),
                            new FieldInfo("password",
                                    "autem",
                                    "tempora",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.LongDateShortTime24),
                                    true,
                                    true,
                                StatisticType.Stddev)])"
                            Content="@([new AttachmentsPopupContent("explicabo nesciunt voluptas",
                                    "magnam perferendis magnam placeat et cum",
                                    AttachmentsPopupContentDisplayType.Auto),
                            new RelationshipPopupContent("fugit suscipit saepe",
                                    "nobis laudantium aut eos tempore",
                                    5,
                                    "aspernatur",
                                [new RelatedRecordsInfoFieldOrder("facere",
                                    OrderBy.Desc),
                                new RelatedRecordsInfoFieldOrder("et",
                                    OrderBy.Asc),
                                new RelatedRecordsInfoFieldOrder("qui",
                                    OrderBy.Asc)],
                                    1),
                            new TextPopupContent("molestiae omnis natus"),
                            new FieldsPopupContent([new FieldInfo("email",
                                        "et",
                                        "qui",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("password",
                                        "sequi",
                                        "accusamus",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                    "voluptatem sequi laudantium vero aut",
                                    "a asperiores non")])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "comment",
                                    "ipsa accusantium non",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "token",
                                    "consectetur placeat suscipit",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "title",
                                    "vero similique quia",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "createdAt",
                                    "omnis voluptatibus eaque",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("sed voluptatem modi",
                                    "https://picsum.photos/640/480/?image=353",
                                    "7ab91e1d-9b00-7751-b7a8-7f87fc5445f9",
                                    () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                                    "phone",
                                    true,
                                    true,
                                    true,
                                    "tenetur")])">
                        </PopupTemplate>
                        <OrderedLayerOrderBy 
                            Field="@("inventore")"
                            Order="@(SortOrder.Ascending)"
                            ValueExpression="@("recusandae")">
                        </OrderedLayerOrderBy>
                        <Label 
                            LabelPlacement="@(LabelPlacement.BelowRight)"
                            LabelExpression="@("reprehenderit")"
                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                            AllowOverrun="@(true)"
                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                            LabelPosition="@(LabelPosition.Parallel)"
                            MaxScale="@(4988281.8334)"
                            MinScale="@(2647.6544)"
                            RepeatLabel="@(true)"
                            RepeatLabelDistance="@(new Dimension(763.2565))"
                            Symbol="@(new TextSymbol("consequatur repellendus voluptate",
                                new MapColor(169, 53, 110),
                                new MapColor(141, 240, 46),
                                    new Dimension(392.1797),
                                new MapFont(new Dimension(762.6975),
                                        "Georgia",
                                    MapFontStyle.Oblique,
                                    FontWeight.Lighter,
                                    TextDecoration.None),
                                    65.3850,
                                new MapColor(148, 95, 193),
                                new MapColor(160, 149, 206),
                                    676.4073,
                                HorizontalAlignment.Right,
                                    true,
                                    573.0352,
                                    new Dimension(6.2171),
                                    true))"
                            UseCodedValues="@(true)"
                            Where="@("Street = '123 Main St.'")">
                        </Label>
                        <Field 
                            Name="@("id")"
                            Alias="@("vero")"
                            Description="@("sed quae harum deserunt doloremque optio")"
                            Length="@(6)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "sit" })"
                            ValueType="@(FieldValueType.LocationOrPlaceName)"
                            Domain="@(new RangeDomain("nam",
                                    "a",
                                    "group"))">
                        </Field>
                        <FeatureEffect 
                            ExcludedEffect="@([new Effect("ut",
                                38115825.7724),
                                new Effect("occaecati",
                                    24789630.6354)])"
                            ExcludedLabelsVisible="@(true)"
                            Filter="@(new FeatureFilter(311.3072,
                                new Extent(53.3832,
                                        -42.0264,
                                        61.6658,
                                        26.5012,
                                        899.9571,
                                        502.0135,
                                        150.7338,
                                        208.5120,
                                    new SpatialReference(7,
                                            "quibusdam",
                                            "consectetur",
                                            "quibusdam"),
                                        true,
                                        true),
                                    [7,
                                        2,
                                        6],
                                SpatialRelationship.Contains,
                                new TimeExtent(new DateTime(2008, 2, 14, 22, 24, 41),
                                        new DateTime(2004, 10, 11, 6, 7, 36)),
                                    QueryUnits.Miles,
                                    "ObjectID = 1"))"
                            IncludedEffect="@([new Effect("autem",
                                21199758.2389)])">
                        </FeatureEffect>
                        <CSVLayerElevationInfo 
                            FeatureExpressionInfo="@(new CSVLayerElevationInfoFeatureExpressionInfo("return $feature['FieldName'];",
                                    "natus harum illum"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(389.7941)"
                            Unit="@(ElevationUnit.NauticalMiles)">
                        </CSVLayerElevationInfo>
                    </CSVLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(cSVLayer!);
        await AssertJavaScript("dispatchEvent", args: [cSVLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "csv");
        var createPopupTemplateMethodResult = await cSVLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["explicabo",
                    "tenetur",
                    "exercitationem"],
                    ["title",
                        "name",
                        "id"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var createQueryMethodResult = await cSVLayer.CreateQuery();
        Assert.IsNotNull(createQueryMethodResult);
        var getFieldMethodResult = await cSVLayer.GetField("comment");
        Assert.IsNotNull(getFieldMethodResult);
        var getFieldDomainMethodResult = await cSVLayer.GetFieldDomain("email",
            new CSVLayerGetFieldDomainOptions(new Graphic(new Extent(100.3435,
                            -36.6523,
                            -25.1381,
                            -23.1686,
                            59.5403,
                            978.5897,
                            840.3769,
                            6.9140,
                        new SpatialReference(2,
                                "magnam",
                                "tenetur",
                                "facilis"),
                            true,
                            true),
                    new TextSymbol("soluta accusantium aspernatur",
                        new MapColor(167, 65, 107),
                        new MapColor(215, 149, 145),
                            new Dimension(911.9993),
                        new MapFont(new Dimension(954.4105),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            332.0156,
                        new MapColor(53, 51, 142),
                        new MapColor(129, 17, 164),
                            922.5490,
                        HorizontalAlignment.Center,
                            true,
                            681.5608,
                            new Dimension(327.2191),
                            true),
                    new PopupTemplate("corrupti libero odit",
                            "reprehenderit",
                            ["itaque",
                                "quas",
                                "dolorem",
                                "nemo"],
                        [new FieldInfo("avatar",
                                "numquam",
                                "ratione",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("comment",
                                "et",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                        [new TextPopupContent("voluptas reprehenderit maxime")],
                        [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                "token",
                                "at corrupti iure",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                "status",
                                "eveniet nam labore",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                        [new ActionToggle("libero nemo ipsum",
                                "e9cc2103-dbf1-d9d6-8f59-b57cb02ef324",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "phone",
                                "laborum"),
                        new ActionToggle("quisquam ut cupiditate",
                                "72690336-4d76-940b-c2e4-829d0d99c6e2",
                                () => { Console.WriteLine("ullam"); return Task.CompletedTask; },
                                true,
                                true,
                                true,
                                true,
                                "comment",
                                "modi")]),
                        new AttributesDictionary(),
                        true,
                        "dignissimos",
                        "explicabo",
                        new GraphicOrigin(Guid.NewGuid(),
                            "recusandae",
                            4))));
        Assert.IsNotNull(getFieldDomainMethodResult);
        var queryExtentMethodResult = await cSVLayer.QueryExtent(new Query([5,
                    8,
                    9],
                    true,
                    25.2909,
                    710.5815,
                    "8.1.9.9",
                new Extent(-125.0302,
                        62.8210,
                        -60.3503,
                        30.2033,
                        826.5093,
                        528.5358,
                        372.8126,
                        405.8565,
                    new SpatialReference(2,
                            "debitis",
                            "culpa",
                            "doloribus"),
                        true,
                        true),
                    8,
                    ["eos",
                        "vitae"],
                    "dolores",
                    new DateTime(2005, 4, 17, 20, 21, 31),
                    187.5353,
                    4,
                    "dicta",
                    8),
                default);
        Assert.IsNotNull(queryExtentMethodResult);
        var queryFeatureCountMethodResult = await cSVLayer.QueryFeatureCount(new Query([5,
                    4,
                    2],
                    true,
                    203.2668,
                    349.8728,
                    "2.8.3.3",
                new Polygon([new MapPath([new MapPoint([74.4446,
                            472.3675,
                            445.3029]),
                        new MapPoint([673.8244,
                            62.4901,
                            315.0998,
                            593.4173]),
                        new MapPoint([277.9407,
                            672.8863]),
                        new MapPoint([185.6817,
                            193.9125])]),
                        new MapPath([new MapPoint([3.6473,
                                518.2830,
                                294.6331]),
                            new MapPoint([953.2534,
                                825.1967,
                                499.7418]),
                            new MapPoint([374.0424,
                                854.1598,
                                272.7419])]),
                        new MapPath([new MapPoint([4.1058,
                                602.0837,
                                922.9398,
                                825.2377]),
                            new MapPoint([53.8427,
                                906.1929,
                                113.7499]),
                            new MapPoint([680.2207,
                                525.9106])]),
                        new MapPath([new MapPoint([300.1644,
                                140.0460,
                                125.5901]),
                            new MapPoint([630.2620,
                                413.5695,
                                534.0364,
                                533.2541]),
                            new MapPoint([297.4620,
                                89.8211,
                                158.0764])])],
                    new SpatialReference(6,
                            "voluptate",
                            "et",
                            "eum"),
                    new Point(89.1431,
                            -37.5029,
                            101.3517,
                            31.9856,
                            596.6381,
                        new SpatialReference(1,
                                "autem",
                                "sit",
                                "optio"),
                            true,
                            true,
                            782.9777),
                        true,
                        true,
                        true),
                    7,
                    ["et",
                        "sunt"],
                    "et",
                    new DateTime(2021, 11, 23, 16, 48, 16),
                    942.3080,
                    8,
                    "magni",
                    9),
                default);
        Assert.IsNotNull(queryFeatureCountMethodResult);
        var queryFeaturesMethodResult = await cSVLayer.QueryFeatures(new Query([8,
                    1,
                    7],
                    true,
                    215.7214,
                    271.6163,
                    "1.9.2.1",
                new Polygon([new MapPath([new MapPoint([400.0239,
                            666.3295]),
                        new MapPoint([942.5838,
                            791.1675,
                            274.2960])])],
                    new SpatialReference(2,
                            "eveniet",
                            "et",
                            "rerum"),
                    new Point(11.2982,
                            -24.8847,
                            45.5424,
                            32.8900,
                            255.2772,
                        new SpatialReference(4,
                                "maiores",
                                "qui",
                                "sint"),
                            true,
                            true,
                            176.9615),
                        true,
                        true,
                        true),
                    5,
                    ["commodi",
                        "sint",
                        "minus"],
                    "quibusdam",
                    new DateTime(2017, 9, 9, 5, 4, 22),
                    444.6554,
                    7,
                    "dolorem",
                    6),
                default);
        Assert.IsNotNull(queryFeaturesMethodResult);
        var queryObjectIdsMethodResult = await cSVLayer.QueryObjectIds(new Query([9,
                    2,
                    5],
                    true,
                    860.1313,
                    997.0668,
                    "6.4.0.1",
                new Extent(60.1132,
                        -152.7731,
                        50.7782,
                        -30.2797,
                        55.4473,
                        627.3106,
                        563.2855,
                        369.6691,
                    new SpatialReference(5,
                            "ipsa",
                            "distinctio",
                            "reprehenderit"),
                        true,
                        true),
                    7,
                    ["dolore",
                        "assumenda"],
                    "dolores",
                    new DateTime(2012, 9, 15, 22, 32, 37),
                    623.0808,
                    8,
                    "quo",
                    9),
                default);
        Assert.IsNotNull(queryObjectIdsMethodResult);
        await cSVLayer.Refresh();
        ListMode testListMode = ListMode.Hide;
        await cSVLayer.SetListMode(testListMode);
        var listMode = await cSVLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Difference;
        await cSVLayer.SetBlendMode(testBlendMode);
        var blendMode = await cSVLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        PopupTemplate testPopupTemplate = new PopupTemplate("odio quasi velit",
                    "eligendi",
                    ["consequuntur",
                        "aliquid",
                        "rerum",
                        "excepturi"],
                [new FieldInfo("phone",
                        "id",
                        "saepe",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(2,
                            true,
                        DateFormat.LongDateLongTime),
                        true,
                        true,
                    StatisticType.Count),
                new FieldInfo("email",
                        "voluptate",
                        "voluptatem",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(6,
                            true,
                        DateFormat.Year),
                        true,
                        true,
                    StatisticType.Sum),
                new FieldInfo("phone",
                        "minus",
                        "labore",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(8,
                            true,
                        DateFormat.LongDateLongTime24),
                        true,
                        true,
                    StatisticType.Max)],
                [new MediaPopupContent("nulla voluptatibus animi",
                        "sint culpa non est quia",
                    [new ImageMediaInfo("ea molestiae mollitia",
                            "voluptatum",
                            "quis et deserunt",
                        new ImageMediaInfoValue("http://gene.info",
                                "http://tierra.com"),
                            325.5930),
                    new PieChartMediaInfo("numquam magnam error",
                            "et",
                            "consectetur est itaque",
                        new ChartMediaInfoValue(["animi",
                                "voluptates",
                                "autem",
                                "voluptas"],
                                "velit",
                                "saepe",
                            [new ChartMediaInfoValueSeries("updatedAt",
                                    "nihil",
                                    968.2119)],
                            [new MapColor(248, 64, 103)])),
                    new ColumnChartMediaInfo("recusandae eligendi modi",
                            "in",
                            "voluptatibus est mollitia",
                        new ChartMediaInfoValue(["sunt",
                                "consectetur"],
                                "quas",
                                "vel",
                            [new ChartMediaInfoValueSeries("password",
                                    "doloremque",
                                    941.9391),
                            new ChartMediaInfoValueSeries("updatedAt",
                                    "ad",
                                    816.6429)],
                            [new MapColor(115, 243, 211)])),
                    new BarChartMediaInfo("quidem eos molestias",
                            "ratione",
                            "provident qui cupiditate",
                        new ChartMediaInfoValue(["culpa",
                                "consequatur",
                                "illum"],
                                "quia",
                                "aut",
                            [new ChartMediaInfoValueSeries("id",
                                    "quia",
                                    718.0229),
                            new ChartMediaInfoValueSeries("phone",
                                    "aut",
                                    169.1389),
                            new ChartMediaInfoValueSeries("token",
                                    "possimus",
                                    268.4065),
                            new ChartMediaInfoValueSeries("updatedAt",
                                    "dolorum",
                                    863.3532)],
                            [new MapColor(27, 112, 192),
                            new MapColor(185, 80, 145),
                            new MapColor(124, 204, 243),
                            new MapColor(188, 201, 57)]))],
                        8),
                new MediaPopupContent("eum laborum inventore",
                        "aut soluta voluptatem qui molestiae adipisci",
                    [new LineChartMediaInfo("mollitia praesentium et",
                            "labore",
                            "dolorem dolorem quia",
                        new ChartMediaInfoValue(["molestias",
                                "cupiditate"],
                                "enim",
                                "eos",
                            [new ChartMediaInfoValueSeries("password",
                                    "eius",
                                    32.2518),
                            new ChartMediaInfoValueSeries("password",
                                    "ullam",
                                    984.8045),
                            new ChartMediaInfoValueSeries("name",
                                    "doloribus",
                                    479.1500),
                            new ChartMediaInfoValueSeries("email",
                                    "accusantium",
                                    491.6913)],
                            [new MapColor(173, 164, 155),
                            new MapColor(230, 243, 54)])),
                    new BarChartMediaInfo("dolorem reiciendis et",
                            "aliquid",
                            "rerum vel nulla",
                        new ChartMediaInfoValue(["tempore",
                                "quo",
                                "voluptas",
                                "ipsam"],
                                "rerum",
                                "quae",
                            [new ChartMediaInfoValueSeries("category",
                                    "corporis",
                                    478.0768),
                            new ChartMediaInfoValueSeries("category",
                                    "impedit",
                                    367.5411),
                            new ChartMediaInfoValueSeries("password",
                                    "excepturi",
                                    34.0340)],
                            [new MapColor(252, 17, 76),
                            new MapColor(7, 189, 228),
                            new MapColor(149, 177, 195)])),
                    new LineChartMediaInfo("reprehenderit odio enim",
                            "voluptates",
                            "vel asperiores eaque",
                        new ChartMediaInfoValue(["id",
                                "quasi",
                                "rerum"],
                                "et",
                                "odit",
                            [new ChartMediaInfoValueSeries("createdAt",
                                    "vel",
                                    392.9891)],
                            [new MapColor(58, 138, 241),
                            new MapColor(23, 70, 77),
                            new MapColor(204, 15, 77),
                            new MapColor(14, 222, 106)]))],
                        1),
                new MediaPopupContent("in temporibus aut",
                        "consectetur soluta est nulla error et",
                    [new BarChartMediaInfo("cumque molestiae ipsam",
                            "ipsam",
                            "aut veritatis saepe",
                        new ChartMediaInfoValue(["molestias",
                                "pariatur",
                                "aut",
                                "nostrum"],
                                "expedita",
                                "et",
                            [new ChartMediaInfoValueSeries("createdAt",
                                    "et",
                                    113.0995)],
                            [new MapColor(121, 226, 186),
                            new MapColor(189, 251, 41)])),
                    new PieChartMediaInfo("nihil numquam perferendis",
                            "similique",
                            "accusantium ut cum",
                        new ChartMediaInfoValue(["perferendis",
                                "vel"],
                                "accusantium",
                                "est",
                            [new ChartMediaInfoValueSeries("phone",
                                    "nemo",
                                    6.4417)],
                            [new MapColor(33, 96, 149),
                            new MapColor(152, 86, 135)])),
                    new LineChartMediaInfo("soluta eligendi provident",
                            "consequuntur",
                            "voluptas dolorem ut",
                        new ChartMediaInfoValue(["ratione",
                                "sit",
                                "consectetur",
                                "neque"],
                                "velit",
                                "possimus",
                            [new ChartMediaInfoValueSeries("createdAt",
                                    "dignissimos",
                                    377.1052)],
                            [new MapColor(174, 169, 161),
                            new MapColor(187, 65, 22),
                            new MapColor(238, 90, 109),
                            new MapColor(226, 45, 150)]))],
                        3)],
                [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "updatedAt",
                        "dolorem sint commodi",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature['FieldName'];",
                        "comment",
                        "ut numquam adipisci",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return Date();",
                        "status",
                        "qui commodi accusantium",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "title",
                        "nesciunt unde dolorem",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("mollitia illum ullam",
                        "217c71c5-9724-f4f9-c73b-29eb70ae58d4",
                        () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "title",
                        "sint"),
                new ActionToggle("voluptate excepturi minima",
                        "302a4aa3-0600-c36b-f7ca-add0a527030c",
                        () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "avatar",
                        "laboriosam"),
                new ActionToggle("dolore eos temporibus",
                        "c90cbbe7-f2ab-993c-7697-09b6313ea184",
                        () => { Console.WriteLine("fuga"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "id",
                        "ut"),
                new ActionToggle("veritatis est veritatis",
                        "1047c260-ca41-209e-c80c-88ea2b5adec9",
                        () => { Console.WriteLine("officiis"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "updatedAt",
                        "accusamus")]);
        await cSVLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await cSVLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        CSVLayerElevationInfo testElevationInfo = new CSVLayerElevationInfo(new CSVLayerElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                        "ipsam nulla dolor"),
                ElevationInfoMode.AbsoluteHeight,
                    783.4067,
                ElevationUnit.Miles);
        await cSVLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await cSVLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        FeatureEffect testFeatureEffect = new FeatureEffect([new Effect("quo",
                    7075545.5570)],
                    true,
                new FeatureFilter(176.1277,
                    new Polygon([new MapPath([new MapPoint([91.3373,
                                990.8623]),
                            new MapPoint([70.8241,
                                758.9459])]),
                            new MapPath([new MapPoint([636.1475,
                                    692.9049,
                                    478.3211]),
                                new MapPoint([902.7835,
                                    555.2329,
                                    979.0434]),
                                new MapPoint([579.3551,
                                    477.2959,
                                    249.5547,
                                    926.4722]),
                                new MapPoint([37.1098,
                                    670.7320,
                                    681.1550,
                                    294.6428])])],
                        new SpatialReference(5,
                                "sunt",
                                "natus",
                                "necessitatibus"),
                        new Point(-127.8105,
                                -19.4957,
                                -56.7709,
                                -76.6394,
                                801.8400,
                            new SpatialReference(8,
                                    "aperiam",
                                    "ut",
                                    "illo"),
                                true,
                                true,
                                128.0862),
                            true,
                            true,
                            true),
                        [5,
                            6,
                            4],
                    SpatialRelationship.Relation,
                    new TimeExtent(new DateTime(2002, 5, 5, 3, 18, 33),
                            new DateTime(2005, 7, 10, 0, 23, 4)),
                        QueryUnits.UsNauticalMiles,
                        "Phone = '555-555-5555'"),
                    [new Effect("et",
                        48508839.2190),
                        new Effect("iusto",
                            2610917.8519),
                        new Effect("consequatur",
                            8428774.8125),
                        new Effect("rerum",
                            36067348.1311)]);
        await cSVLayer.SetFeatureEffect(testFeatureEffect);
        var featureEffect = await cSVLayer.GetFeatureEffect();
        Assert.AreEqual(testFeatureEffect, featureEffect);
        IReadOnlyList<Field> testFields = [new Field(default,
                    "phone",
                    "rerum",
                    "cupiditate saepe et consequuntur fugiat sequi nostrum",
                    5,
                    true,
                    true,
                    new { Value = "repellendus" },
                FieldValueType.Coordinate,
                new RangeDomain("voluptate",
                        "alias",
                        "title")),
            new Field(default,
                    "updatedAt",
                    "quidem",
                    "itaque et minima cupiditate qui consequatur id",
                    5,
                    true,
                    true,
                    new { Value = "dolores" },
                FieldValueType.None,
                new RangeDomain("quia",
                        "dolor",
                        "token")),
            new Field(default,
                    "updatedAt",
                    "voluptatibus",
                    "nihil rem itaque facere eius",
                    8,
                    true,
                    true,
                    new { Value = "omnis" },
                FieldValueType.Description,
                new RangeDomain("perferendis",
                        "delectus",
                        "status")),
            new Field(default,
                    "createdAt",
                    "dicta",
                    "fugiat veritatis rerum minima quae quam et",
                    5,
                    true,
                    true,
                    new { Value = "culpa" },
                FieldValueType.Measurement,
                new InheritedDomain("phone"))];
        await cSVLayer.SetFields(testFields);
        var fields = await cSVLayer.GetFields();
        Assert.AreEqual(testFields, fields);
        Extent testFullExtent = new Extent(-33.6219,
                    10.0115,
                    8.2626,
                    -56.5503,
                    648.8886,
                    264.1473,
                    745.6146,
                    708.7049,
                new SpatialReference(7,
                        "ab",
                        "delectus",
                        "nostrum"),
                    true,
                    true);
        await cSVLayer.SetFullExtent(testFullExtent);
        var fullExtent = await cSVLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Label> testLabelingInfo = [new Label(LabelPlacement.AboveBefore,
                    "doloribus",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.Static,
                LabelPosition.Curved,
                    9040822.5049,
                    28754.2503,
                    true,
                    new Dimension(271.3884),
                new TextSymbol("vel ipsa voluptas",
                    new MapColor(93, 140, 79),
                    new MapColor(147, 90, 198),
                        new Dimension(757.6414),
                    new MapFont(new Dimension(481.7208),
                            "Palatino",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        557.5147,
                    new MapColor(129, 137, 29),
                    new MapColor(68, 130, 128),
                        220.6323,
                    HorizontalAlignment.Center,
                        true,
                        99.6253,
                        new Dimension(433.2715),
                        true),
                    true,
                    "PostalCode = 'M5V 1J9'"),
            new Label(LabelPlacement.BelowEnd,
                    "deserunt",
                    new LabelExpressionInfo(),
                    true,
                DeconflictionStrategy.None,
                LabelPosition.Curved,
                    46556162.5543,
                    39682.9079,
                    true,
                    new Dimension(548.8212),
                new TextSymbol("ea eveniet necessitatibus",
                    new MapColor(49, 183, 175),
                    new MapColor(183, 29, 187),
                        new Dimension(653.9862),
                    new MapFont(new Dimension(297.8866),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        90.5216,
                    new MapColor(151, 206, 68),
                    new MapColor(244, 77, 2),
                        472.3486,
                    HorizontalAlignment.Left,
                        true,
                        431.5353,
                        new Dimension(154.0056),
                        true),
                    true,
                    "Name = 'John Doe'")];
        await cSVLayer.SetLabelingInfo(testLabelingInfo);
        var labelingInfo = await cSVLayer.GetLabelingInfo();
        Assert.AreEqual(testLabelingInfo, labelingInfo);
        IReadOnlyList<OrderedLayerOrderBy> testOrderBy = [new OrderedLayerOrderBy("velit",
                SortOrder.Descending,
                    "temporibus"),
            new OrderedLayerOrderBy("ratione",
                SortOrder.Ascending,
                    "aut"),
            new OrderedLayerOrderBy("consequatur",
                SortOrder.Descending,
                    "aut")];
        await cSVLayer.SetOrderBy(testOrderBy);
        var orderBy = await cSVLayer.GetOrderBy();
        Assert.AreEqual(testOrderBy, orderBy);
        PortalItem testPortalItem = new PortalItem();
        await cSVLayer.SetPortalItem(testPortalItem);
        var portalItem = await cSVLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        Renderer testRenderer = new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                    new AlgorithmicColorRamp(Algorithm.Hsv,
                        new MapColor(225, 163, 230),
                        new MapColor(183, 119, 108)),
                        586.0092,
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(550.7696,
                                741.2767)],
                            "est",
                            "id",
                            "exercitationem"),
                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(940.4217,
                                381.4758),
                        new AuthoringInfoField1ClassBreakInfos(567.4328,
                                394.3640),
                        new AuthoringInfoField1ClassBreakInfos(34.6615,
                                84.0007),
                        new AuthoringInfoField1ClassBreakInfos(192.5122,
                                322.5552)],
                            "in",
                            "quia",
                            "mollitia"),
                        ["occaecati",
                            "debitis"],
                    AuthoringInfoFlowTheme.WaveFront,
                        "dicta",
                        true,
                    LengthUnit.Decimeters,
                        683.7317,
                        59.5527,
                        118.6014,
                        851.3915),
                new PictureFillSymbol("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0",
                    new Dimension(578.9827),
                    new Dimension(789.3786),
                    new Dimension(148.8554),
                    new Dimension(939.0543),
                    -64.3628,
                    82.5650,
                    new Outline(new MapColor(224, 247, 180),
                        new Dimension(701.0217),
                        SimpleLineSymbolStyle.None,
                        Cap.Round,
                        Join.Miter,
                        new LineSymbolMarker(new MapColor(190, 149, 185),
                            LinePlacement.End,
                            LineSymbolMarkerStyle.Diamond),
                        138.9840),
                    new MapColor(245, 252, 238)),
                    "eveniet",
                    new DefaultSymbol(),
                    "voluptatem",
                    "aliquam",
                    "voluptatem",
                    "et",
                new UniqueValueRendererLegendOptions("sit ducimus sequi"),
                    true,
                [new UniqueValueGroup([new UniqueValueClass("dolor",
                        new TextSymbol("et nesciunt voluptates",
                            new MapColor(211, 10, 136),
                            new MapColor(210, 80, 15),
                                new Dimension(749.3403),
                            new MapFont(new Dimension(538.0034),
                                    "Arial",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.LineThrough),
                                851.0436,
                            new MapColor(10, 173, 205),
                            new MapColor(18, 112, 226),
                                624.2993,
                            HorizontalAlignment.Right,
                                true,
                                404.3781,
                                new Dimension(663.6087),
                                true),
                        [new UniqueValue("ipsa",
                                "et",
                                "et")]),
                    new UniqueValueClass("eum",
                        new TextSymbol("dolorem sit et",
                            new MapColor(226, 28, 208),
                            new MapColor(244, 246, 111),
                                new Dimension(15.0951),
                            new MapFont(new Dimension(910.4113),
                                    "Helvetica",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.None),
                                799.5399,
                            new MapColor(165, 56, 29),
                            new MapColor(190, 180, 120),
                                388.0608,
                            HorizontalAlignment.Right,
                                true,
                                524.6957,
                                new Dimension(825.0092),
                                true),
                        [new UniqueValue("impedit",
                                "commodi",
                                "voluptas"),
                        new UniqueValue("praesentium",
                                "dolorum",
                                "dolor")]),
                    new UniqueValueClass("sit",
                        new TextSymbol("at magnam nulla",
                            new MapColor(117, 90, 86),
                            new MapColor(153, 90, 178),
                                new Dimension(313.3193),
                            new MapFont(new Dimension(853.9883),
                                    "Arial",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                44.8660,
                            new MapColor(100, 143, 9),
                            new MapColor(191, 208, 226),
                                472.0800,
                            HorizontalAlignment.Center,
                                true,
                                907.3977,
                                new Dimension(847.3742),
                                true),
                        [new UniqueValue("doloribus",
                                "est",
                                "minus"),
                        new UniqueValue("laboriosam",
                                "et",
                                "officia"),
                        new UniqueValue("illo",
                                "velit",
                                "ut")])],
                        "et"),
                new UniqueValueGroup([new UniqueValueClass("doloremque",
                        new TextSymbol("accusamus exercitationem soluta",
                            new MapColor(100, 99, 70),
                            new MapColor(161, 168, 221),
                                new Dimension(28.3503),
                            new MapFont(new Dimension(722.6685),
                                    "Bookman",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.LineThrough),
                                685.5435,
                            new MapColor(210, 250, 13),
                            new MapColor(208, 188, 29),
                                636.5839,
                            HorizontalAlignment.Left,
                                true,
                                734.3077,
                                new Dimension(642.1193),
                                true),
                        [new UniqueValue("pariatur",
                                "corrupti",
                                "odit")]),
                    new UniqueValueClass("dolore",
                        new TextSymbol("quidem quo voluptatem",
                            new MapColor(249, 82, 69),
                            new MapColor(25, 90, 202),
                                new Dimension(700.0232),
                            new MapFont(new Dimension(410.5578),
                                    "Verdana",
                                MapFontStyle.Oblique,
                                FontWeight.Normal,
                                TextDecoration.None),
                                610.9668,
                            new MapColor(61, 130, 210),
                            new MapColor(50, 4, 209),
                                474.5713,
                            HorizontalAlignment.Right,
                                true,
                                472.2296,
                                new Dimension(316.3353),
                                true),
                        [new UniqueValue("harum",
                                "nesciunt",
                                "ut"),
                        new UniqueValue("tempore",
                                "molestiae",
                                "doloremque"),
                        new UniqueValue("et",
                                "praesentium",
                                "modi")]),
                    new UniqueValueClass("asperiores",
                        new TextSymbol("autem et tempore",
                            new MapColor(110, 85, 150),
                            new MapColor(159, 201, 186),
                                new Dimension(569.0700),
                            new MapFont(new Dimension(568.4081),
                                    "Georgia",
                                MapFontStyle.Normal,
                                FontWeight.Lighter,
                                TextDecoration.Underline),
                                769.1669,
                            new MapColor(47, 65, 78),
                            new MapColor(135, 87, 201),
                                843.7098,
                            HorizontalAlignment.Center,
                                true,
                                384.9091,
                                new Dimension(931.0903),
                                true),
                        [new UniqueValue("eum",
                                "facere",
                                "est"),
                        new UniqueValue("et",
                                "veritatis",
                                "sed")]),
                    new UniqueValueClass("omnis",
                        new TextSymbol("numquam in qui",
                            new MapColor(16, 65, 213),
                            new MapColor(7, 134, 212),
                                new Dimension(146.4020),
                            new MapFont(new Dimension(163.7547),
                                    "Times New Roman",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                202.0446,
                            new MapColor(156, 124, 101),
                            new MapColor(25, 133, 40),
                                151.7804,
                            HorizontalAlignment.Right,
                                true,
                                590.0087,
                                new Dimension(142.4618),
                                true),
                        [new UniqueValue("tenetur",
                                "non",
                                "deserunt"),
                        new UniqueValue("et",
                                "magnam",
                                "ut")])],
                        "aut"),
                new UniqueValueGroup([new UniqueValueClass("repudiandae",
                        new TextSymbol("sint quo ab",
                            new MapColor(111, 109, 101),
                            new MapColor(28, 44, 133),
                                new Dimension(286.6804),
                            new MapFont(new Dimension(934.7977),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Lighter,
                                TextDecoration.LineThrough),
                                61.1108,
                            new MapColor(197, 209, 167),
                            new MapColor(181, 235, 23),
                                435.3082,
                            HorizontalAlignment.Right,
                                true,
                                331.7560,
                                new Dimension(935.6889),
                                true),
                        [new UniqueValue("autem",
                                "itaque",
                                "natus"),
                        new UniqueValue("sit",
                                "iure",
                                "reiciendis"),
                        new UniqueValue("ut",
                                "voluptas",
                                "cupiditate"),
                        new UniqueValue("doloremque",
                                "doloribus",
                                "sunt")]),
                    new UniqueValueClass("autem",
                        new TextSymbol("quaerat eligendi enim",
                            new MapColor(246, 102, 160),
                            new MapColor(242, 32, 159),
                                new Dimension(321.9050),
                            new MapFont(new Dimension(797.8631),
                                    "Courier New",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.Underline),
                                305.3177,
                            new MapColor(106, 214, 190),
                            new MapColor(191, 18, 162),
                                307.1396,
                            HorizontalAlignment.Right,
                                true,
                                95.5515,
                                new Dimension(512.1743),
                                true),
                        [new UniqueValue("ea",
                                "repellat",
                                "praesentium"),
                        new UniqueValue("est",
                                "molestiae",
                                "officia"),
                        new UniqueValue("et",
                                "explicabo",
                                "non")])],
                        "ea"),
                new UniqueValueGroup([new UniqueValueClass("amet",
                        new TextSymbol("accusamus et repudiandae",
                            new MapColor(124, 165, 198),
                            new MapColor(183, 222, 160),
                                new Dimension(59.7751),
                            new MapFont(new Dimension(99.1988),
                                    "Arial",
                                MapFontStyle.Normal,
                                FontWeight.Bolder,
                                TextDecoration.LineThrough),
                                966.9185,
                            new MapColor(194, 201, 182),
                            new MapColor(237, 224, 101),
                                845.1903,
                            HorizontalAlignment.Right,
                                true,
                                153.8835,
                                new Dimension(898.4283),
                                true),
                        [new UniqueValue("voluptatum",
                                "dolor",
                                "corrupti"),
                        new UniqueValue("corporis",
                                "rerum",
                                "distinctio")]),
                    new UniqueValueClass("laboriosam",
                        new TextSymbol("autem delectus eum",
                            new MapColor(54, 187, 99),
                            new MapColor(15, 118, 227),
                                new Dimension(667.2441),
                            new MapFont(new Dimension(275.6718),
                                    "Garamond",
                                MapFontStyle.Italic,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                108.5134,
                            new MapColor(38, 154, 142),
                            new MapColor(51, 227, 191),
                                469.8375,
                            HorizontalAlignment.Right,
                                true,
                                210.4965,
                                new Dimension(109.7342),
                                true),
                        [new UniqueValue("a",
                                "corrupti",
                                "tempore"),
                        new UniqueValue("doloribus",
                                "voluptatum",
                                "consectetur"),
                        new UniqueValue("sapiente",
                                "odit",
                                "aperiam"),
                        new UniqueValue("doloremque",
                                "facilis",
                                "cupiditate")]),
                    new UniqueValueClass("et",
                        new TextSymbol("dolorem debitis nostrum",
                            new MapColor(174, 84, 25),
                            new MapColor(138, 247, 86),
                                new Dimension(16.4490),
                            new MapFont(new Dimension(230.7729),
                                    "Helvetica",
                                MapFontStyle.Oblique,
                                FontWeight.Bold,
                                TextDecoration.Underline),
                                498.2246,
                            new MapColor(48, 20, 244),
                            new MapColor(98, 90, 106),
                                38.6687,
                            HorizontalAlignment.Center,
                                true,
                                330.3003,
                                new Dimension(996.5426),
                                true),
                        [new UniqueValue("nesciunt",
                                "fugiat",
                                "similique"),
                        new UniqueValue("dolorem",
                                "amet",
                                "corporis"),
                        new UniqueValue("sit",
                                "laborum",
                                "officia")])],
                        "voluptatem")],
                [new UniqueValueInfo("ea",
                    new TextSymbol("atque quo rerum",
                        new MapColor(124, 251, 98),
                        new MapColor(43, 131, 194),
                            new Dimension(500.8719),
                        new MapFont(new Dimension(461.8735),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            183.5001,
                        new MapColor(142, 154, 186),
                        new MapColor(49, 69, 229),
                            336.8758,
                        HorizontalAlignment.Center,
                            true,
                            532.9618,
                            new Dimension(231.5338),
                            true),
                        "dolorem"),
                new UniqueValueInfo("similique",
                    new TextSymbol("quidem maiores ut",
                        new MapColor(75, 88, 43),
                        new MapColor(242, 16, 3),
                            new Dimension(872.4330),
                        new MapFont(new Dimension(435.1204),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            560.1552,
                        new MapColor(118, 72, 58),
                        new MapColor(204, 10, 147),
                            377.0814,
                        HorizontalAlignment.Right,
                            true,
                            435.6970,
                            new Dimension(31.2741),
                            true),
                        "reiciendis"),
                new UniqueValueInfo("ex",
                    new TextSymbol("sint error excepturi",
                        new MapColor(34, 23, 244),
                        new MapColor(4, 190, 3),
                            new Dimension(548.9095),
                        new MapFont(new Dimension(167.4438),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            320.4805,
                        new MapColor(110, 191, 19),
                        new MapColor(245, 215, 129),
                            618.8192,
                        HorizontalAlignment.Right,
                            true,
                            954.5072,
                            new Dimension(420.1784),
                            true),
                        "dolores")],
                    "voluptatum",
                    "consectetur dolorum nisi");
        await cSVLayer.SetRenderer(testRenderer);
        var renderer = await cSVLayer.GetRenderer();
        Assert.AreEqual(testRenderer, renderer);
        SpatialReference testSpatialReference = new SpatialReference(9,
                    "voluptas",
                    "atque",
                    "et");
        await cSVLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await cSVLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2013, 10, 27, 8, 40, 42),
                    new DateTime(2004, 10, 6, 6, 4, 47));
        await cSVLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await cSVLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("id",
                    "ut",
                new TimeExtent(new DateTime(2016, 11, 8, 8, 20, 33),
                        new DateTime(2012, 1, 14, 11, 16, 33)),
                new TimeInterval(TemporalTime.Years,
                        541.3513),
                    [new DateTime(2018, 11, 6, 11, 23, 18),
                        new DateTime(2016, 11, 1, 20, 45, 44),
                        new DateTime(2005, 1, 7, 16, 23, 6),
                        new DateTime(2000, 1, 26, 8, 41, 38)],
                    "Africa/Johannesburg",
                    "maxime");
        await cSVLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await cSVLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Days,
                    389.1964);
        await cSVLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await cSVLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2012, 3, 23, 8, 0, 26),
                    new DateTime(2010, 9, 24, 15, 27, 2));
        await cSVLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await cSVLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
