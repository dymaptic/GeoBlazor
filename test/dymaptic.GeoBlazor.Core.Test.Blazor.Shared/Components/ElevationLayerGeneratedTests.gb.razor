@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderElevationLayer(Action renderHandler)
    {
        ElevationLayer? elevationLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <ElevationLayer 
                        Copyright="@("eos")"
                        FullExtent="@(new Extent(-11.8004,
                                62.3384,
                                72.5591,
                                -29.2331,
                                813.9335,
                                389.5379,
                                359.2388,
                                121.1572,
                            new SpatialReference(1,
                                    "voluptas",
                                    "qui",
                                    "et"),
                                true,
                                true))"
                        ListMode="@(ListMode.Hide)"
                        Opacity="@(0.1448)"
                        PersistenceEnabled="@(true)"
                        Title="@("est doloribus facilis")"
                        Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                        <TimeExtent 
                            Start="@(new DateTime(2006, 9, 15, 12, 21, 57))"
                            End="@(new DateTime(2015, 8, 16, 9, 43, 33))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(340.0061)"
                            Format="@(TileInfoFormat.Png32)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(9,
                                    "velit",
                                    83.8510,
                                    8253938.5046)])"
                            Origin="@(new Point(107.8223,
                                    -9.1715,
                                    -156.4813,
                                    -3.8908,
                                    143.9224,
                                new SpatialReference(5,
                                        "ut",
                                        "laboriosam",
                                        "ullam"),
                                    true,
                                    true,
                                    825.0569))"
                            Size="@([2,
                                9,
                                8])"
                            SpatialReference="@(new SpatialReference(8,
                                    "rerum",
                                    "eos",
                                    "maxime"))">
                        </TileInfo>
                    </ElevationLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(elevationLayer!);
        await AssertJavaScript("assertLayerExists", args: "elevation");
        var createElevationSamplerMethodResult = await elevationLayer.CreateElevationSampler(new Extent(-84.1177,
                    4.8198,
                    29.9190,
                    -8.2622,
                    802.7844,
                    735.8196,
                    373.8492,
                    257.9315,
                new SpatialReference(9,
                        "neque",
                        "nihil",
                        "in"),
                    true,
                    true),
            new ElevationLayerCreateElevationSamplerOptions("possimus",
                    352.9100));
        Assert.IsNotNull(createElevationSamplerMethodResult);
        var fetchTileMethodResult = await elevationLayer.FetchTile(277.3837,
                476.4221,
                976.4691,
            new ElevationLayerFetchTileOptions(332.8437));
        Assert.IsNotNull(fetchTileMethodResult);
        var getTileUrlMethodResult = await elevationLayer.GetTileUrl(690.9481,
                534.4157,
                932.0870);
        Assert.IsNotNull(getTileUrlMethodResult);
        var queryElevationMethodResult = await elevationLayer.QueryElevation(new Polygon([new MapPath([new MapPoint([915.8445,
                        54.1733,
                        288.4559]),
                    new MapPoint([719.2420,
                        369.6883,
                        23.1546]),
                    new MapPoint([144.3906,
                        47.3880]),
                    new MapPoint([211.1229,
                        134.6980,
                        753.9246])]),
                    new MapPath([new MapPoint([270.2718,
                            890.7079,
                            799.6829,
                            307.9262]),
                        new MapPoint([285.2640,
                            619.3334,
                            884.6413,
                            323.9581])])],
                new SpatialReference(1,
                        "sit",
                        "aut",
                        "eum"),
                new Point(-94.0326,
                        -13.6107,
                        -78.6187,
                        77.4648,
                        139.4431,
                    new SpatialReference(5,
                            "eius",
                            "in",
                            "qui"),
                        true,
                        true,
                        200.5832),
                    true,
                    true,
                    true),
            new ElevationLayerQueryElevationOptions("dolor",
                    818.1911,
                    true));
        Assert.IsNotNull(queryElevationMethodResult);
        Extent testFullExtent = new Extent(-142.2187,
                    -146.4962,
                    -1.7507,
                    -72.8736,
                    967.1570,
                    906.9509,
                    729.0663,
                    411.6362,
                new SpatialReference(3,
                        "rerum",
                        "iusto",
                        "et"),
                    true,
                    true);
        await elevationLayer.SetFullExtent(testFullExtent);
        var fullExtent = await elevationLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await elevationLayer.SetListMode(testListMode);
        var listMode = await elevationLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "quas",
                    "cupiditate",
                    725.9275,
                    ["quis",
                        "perferendis",
                        "et",
                        "earum"],
                    new DateTime(2021, 4, 19, 8, 8, 3),
                    "et",
                    "ipsam distinctio repudiandae et fugit cupiditate explicabo",
                new Extent(0.5859,
                        134.0438,
                        83.3057,
                        -4.7193,
                        888.1714,
                        145.1374,
                        422.0471,
                        908.6926,
                    new SpatialReference(9,
                            "error",
                            "et",
                            "consequatur"),
                        true,
                        true),
                    ["aut",
                        "occaecati"],
                    "minima",
                    new DateTime(2000, 10, 3, 19, 23, 46),
                    "avatar",
                    26.5483);
        await elevationLayer.SetPortalItem(testPortalItem);
        var portalItem = await elevationLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        TileInfo testTileInfo = new TileInfo(224.9543,
                    TileInfoFormat.Tiff,
                    true,
                [new LOD(5,
                        "maxime",
                        34.4109,
                        16424691.4256)],
                new Point(-43.6852,
                        -80.5805,
                        156.7643,
                        -46.0964,
                        806.1926,
                    new SpatialReference(6,
                            "quo",
                            "dolores",
                            "nam"),
                        true,
                        true,
                        492.5731),
                    [1,
                        2,
                        1],
                new SpatialReference(8,
                        "voluptatum",
                        "aut",
                        "expedita"));
        await elevationLayer.SetTileInfo(testTileInfo);
        var tileInfo = await elevationLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2020, 10, 25, 19, 9, 26),
                    new DateTime(2001, 4, 9, 12, 49, 54));
        await elevationLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await elevationLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
