@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderElevationLayer(Action renderHandler)
    {
        ElevationLayer? elevationLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <ElevationLayer 
                        Copyright="@("corrupti")"
                        FullExtent="@(new Extent(-62.7295,
                                -124.0311,
                                -30.3684,
                                -42.2537,
                                486.5217,
                                188.2209,
                                80.9438,
                                639.0804,
                            new SpatialReference(4,
                                    "cupiditate",
                                    "aut",
                                    "sapiente"),
                                true,
                                true))"
                        ListMode="@(ListMode.Hide)"
                        Opacity="@(0.0104)"
                        PersistenceEnabled="@(true)"
                        Title="@("qui voluptatem aut")"
                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                        <TimeExtent 
                            Start="@(new DateTime(2000, 10, 16, 19, 21, 44))"
                            End="@(new DateTime(2004, 7, 3, 3, 10, 46))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(280.2998)"
                            Format="@(TileInfoFormat.Svgz)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(8,
                                    "id",
                                    5.3793,
                                    9252510.2916),
                            new LOD(8,
                                    "vitae",
                                    89.0683,
                                    9147830.7139),
                            new LOD(7,
                                    "consequatur",
                                    80.6424,
                                    2017561.6526),
                            new LOD(7,
                                    "facere",
                                    17.0710,
                                    30441653.6984)])"
                            Origin="@(new Point(9.6203,
                                    86.9666,
                                    -65.3296,
                                    3.6322,
                                    697.6571,
                                new SpatialReference(3,
                                        "provident",
                                        "aliquam",
                                        "minima"),
                                    true,
                                    true,
                                    339.2080))"
                            Size="@([2,
                                8,
                                6])"
                            SpatialReference="@(new SpatialReference(4,
                                    "placeat",
                                    "voluptas",
                                    "sapiente"))">
                        </TileInfo>
                    </ElevationLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(elevationLayer!);
        await AssertJavaScript("assertLayerExists", args: "elevation");
        var createElevationSamplerMethodResult = await elevationLayer.CreateElevationSampler(new Extent(-139.1963,
                    -36.7530,
                    80.0052,
                    -34.9777,
                    209.4277,
                    372.6443,
                    609.9296,
                    737.4744,
                new SpatialReference(5,
                        "id",
                        "minus",
                        "tempore"),
                    true,
                    true),
            new ElevationLayerCreateElevationSamplerOptions("occaecati",
                    721.1304));
        Assert.IsNotNull(createElevationSamplerMethodResult);
        var fetchTileMethodResult = await elevationLayer.FetchTile(792.7316,
                754.2713,
                868.0065,
            new ElevationLayerFetchTileOptions(574.3658));
        Assert.IsNotNull(fetchTileMethodResult);
        var getTileUrlMethodResult = await elevationLayer.GetTileUrl(890.8644,
                814.2710,
                17.9146);
        Assert.IsNotNull(getTileUrlMethodResult);
        var queryElevationMethodResult = await elevationLayer.QueryElevation(new Polyline([new MapPath([new MapPoint([464.4770,
                        340.4429,
                        381.1917]),
                    new MapPoint([390.6280,
                        198.4525,
                        974.1458,
                        327.3030])]),
                    new MapPath([new MapPoint([940.9312,
                            949.1252]),
                        new MapPoint([279.9741,
                            937.2186,
                            942.7433,
                            934.3794]),
                        new MapPoint([506.6011,
                            511.8317])])],
                new SpatialReference(6,
                        "ducimus",
                        "id",
                        "aliquid"),
                    true,
                    true),
            new ElevationLayerQueryElevationOptions("in",
                    267.6483,
                    true));
        Assert.IsNotNull(queryElevationMethodResult);
        Extent testFullExtent = new Extent(12.2865,
                    -176.7174,
                    35.8755,
                    -39.9406,
                    793.1617,
                    543.9678,
                    285.2519,
                    673.6968,
                new SpatialReference(1,
                        "et",
                        "voluptatem",
                        "ratione"),
                    true,
                    true);
        await elevationLayer.SetFullExtent(testFullExtent);
        var fullExtent = await elevationLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await elevationLayer.SetListMode(testListMode);
        var listMode = await elevationLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "ea",
                    "ut",
                    62.7976,
                    ["dolorum",
                        "tempora",
                        "soluta",
                        "nam"],
                    new DateTime(2007, 2, 26, 4, 14, 18),
                    "accusantium",
                    "perspiciatis eum laboriosam eaque qui reiciendis",
                new Extent(167.8188,
                        -26.5588,
                        7.5326,
                        69.0820,
                        484.2542,
                        829.5131,
                        826.2087,
                        286.7540,
                    new SpatialReference(4,
                            "error",
                            "quos",
                            "sint"),
                        true,
                        true),
                    ["quos",
                        "eos",
                        "illum",
                        "ipsam"],
                    "nobis",
                    new DateTime(2017, 10, 22, 3, 44, 15),
                    "email",
                    314.2456);
        await elevationLayer.SetPortalItem(testPortalItem);
        var portalItem = await elevationLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        TileInfo testTileInfo = new TileInfo(639.5007,
                    TileInfoFormat.Dib,
                    true,
                [new LOD(4,
                        "consectetur",
                        9.2595,
                        16126353.9349)],
                new Point(169.6752,
                        -86.5807,
                        -22.6189,
                        -51.8288,
                        843.6900,
                    new SpatialReference(8,
                            "sit",
                            "iste",
                            "perspiciatis"),
                        true,
                        true,
                        727.1667),
                    [8,
                        4,
                        7],
                new SpatialReference(3,
                        "deleniti",
                        "consequatur",
                        "culpa"));
        await elevationLayer.SetTileInfo(testTileInfo);
        var tileInfo = await elevationLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2011, 6, 22, 5, 27, 10),
                    new DateTime(2011, 9, 20, 2, 47, 31));
        await elevationLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await elevationLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
