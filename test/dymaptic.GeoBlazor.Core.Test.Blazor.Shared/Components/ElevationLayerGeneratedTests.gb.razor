@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderElevationLayer(Action renderHandler)
    {
        ElevationLayer? elevationLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <ElevationLayer 
                        Copyright="@("dolorem")"
                        FullExtent="@(new Extent(150.7955,
                                37.5483,
                                -52.7132,
                                -21.0495,
                                226.9294,
                                350.7510,
                                633.7827,
                                163.7770,
                            new SpatialReference(3,
                                    "ea",
                                    "ut",
                                    "accusantium"),
                                true,
                                true))"
                        ListMode="@(ListMode.Show)"
                        Opacity="@(0.9199)"
                        PersistenceEnabled="@(true)"
                        Title="@("dolor vel similique")"
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                        <TimeExtent 
                            Start="@(new DateTime(2022, 10, 25, 20, 26, 41))"
                            End="@(new DateTime(2008, 2, 26, 0, 44, 12))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(450.8693)"
                            Format="@(TileInfoFormat.Dib)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(2,
                                    "eveniet",
                                    69.1756,
                                    31167073.2274),
                            new LOD(3,
                                    "et",
                                    47.8234,
                                    38425800.5093),
                            new LOD(1,
                                    "iusto",
                                    77.4235,
                                    22734913.8379)])"
                            Origin="@(new Point(-112.2589,
                                    -34.5299,
                                    29.8943,
                                    37.2745,
                                    868.9574,
                                new SpatialReference(4,
                                        "culpa",
                                        "magni",
                                        "veniam"),
                                    true,
                                    true,
                                    249.0062))"
                            Size="@([7,
                                9,
                                5])"
                            SpatialReference="@(new SpatialReference(8,
                                    "voluptates",
                                    "et",
                                    "impedit"))">
                        </TileInfo>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("sint")"
                            ApiKey="@("non")"
                            AvgRating="@(46.3763)"
                            Categories="@(["aut",
                                "dolores"])"
                            Created="@(new DateTime(2002, 1, 4, 7, 16, 58))"
                            Culture="@("officiis")"
                            Description="@("nihil dignissimos accusamus eius et")"
                            Extent="@(new Extent(100.3958,
                                    -165.7074,
                                    -2.8947,
                                    -31.6226,
                                    863.4050,
                                    108.4494,
                                    688.0222,
                                    589.0166,
                                new SpatialReference(1,
                                        "modi",
                                        "mollitia",
                                        "aspernatur"),
                                    true,
                                    true))"
                            GroupCategories="@(["esse",
                                "recusandae"])"
                            LicenseInfo="@("harum")"
                            Modified="@(new DateTime(2016, 1, 9, 10, 27, 27))"
                            Name="@("updatedAt")"
                            NumComments="@(829.8270)"
                            NumRatings="@(58.4121)"
                            NumViews="@(188.9246)"
                            Owner="@("Casey Koepp")"
                            OwnerFolder="@("Abigail Kuhic")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Anonymous,
                                    ["minima",
                                        "unde",
                                        "non"],
                                    "alias",
                                    "placeat",
                                    "est",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("ducimus")"
                            Screenshots="@(["quia",
                                "quia",
                                "aut"])"
                            Size="@(4)"
                            Snippet="@("delectus")"
                            Tags="@(["voluptas",
                                "est",
                                "voluptas"])"
                            Title="@("temporibus quia maxime")"
                            TypeKeywords="@(["voluptates",
                                "molestiae"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                        </PortalItem>
                    </ElevationLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(elevationLayer!);
        await AssertJavaScript("assertLayerExists", args: "elevation");
        var createElevationSamplerMethodResult = await elevationLayer.CreateElevationSampler(new Extent(-97.3267,
                    178.7155,
                    35.4913,
                    11.1134,
                    594.3759,
                    965.8591,
                    363.0492,
                    423.0598,
                new SpatialReference(1,
                        "debitis",
                        "aut",
                        "id"),
                    true,
                    true),
            new ElevationLayerCreateElevationSamplerOptions("laboriosam",
                    611.5934));
        Assert.IsNotNull(createElevationSamplerMethodResult);
        var fetchTileMethodResult = await elevationLayer.FetchTile(731.6608,
                348.8673,
                260.6858,
            new ElevationLayerFetchTileOptions(356.5147));
        Assert.IsNotNull(fetchTileMethodResult);
        var getTileUrlMethodResult = await elevationLayer.GetTileUrl(378.1092,
                838.6333,
                576.3051);
        Assert.IsNotNull(getTileUrlMethodResult);
        var queryElevationMethodResult = await elevationLayer.QueryElevation(new Polygon([new MapPath([new MapPoint([97.1835,
                        364.7742,
                        203.0569,
                        69.6729]),
                    new MapPoint([577.4826,
                        643.7986,
                        89.6803,
                        575.3527]),
                    new MapPoint([333.2482,
                        283.6717,
                        446.0648]),
                    new MapPoint([940.8480,
                        356.9711,
                        831.4261,
                        254.8570])]),
                    new MapPath([new MapPoint([452.7145,
                            731.0924,
                            33.9491]),
                        new MapPoint([470.3004,
                            839.1498]),
                        new MapPoint([595.6933,
                            333.7717])]),
                    new MapPath([new MapPoint([867.4311,
                            867.3065,
                            304.4002,
                            11.2323]),
                        new MapPoint([849.2790,
                            884.4341])]),
                    new MapPath([new MapPoint([112.0776,
                            977.2487,
                            346.9093,
                            23.8960]),
                        new MapPoint([804.2939,
                            483.3170,
                            11.9804])])],
                new SpatialReference(6,
                        "placeat",
                        "non",
                        "quia"),
                new Point(-21.9377,
                        30.0150,
                        -116.7252,
                        -36.8592,
                        793.1161,
                    new SpatialReference(4,
                            "suscipit",
                            "numquam",
                            "enim"),
                        true,
                        true,
                        669.0492),
                    true,
                    true,
                    true),
            new ElevationLayerQueryElevationOptions("libero",
                    58.1990,
                    true));
        Assert.IsNotNull(queryElevationMethodResult);
        Extent testFullExtent = new Extent(-77.7378,
                    -3.1445,
                    -16.0487,
                    44.7086,
                    205.8464,
                    63.5213,
                    328.5881,
                    905.8493,
                new SpatialReference(9,
                        "nobis",
                        "ut",
                        "corrupti"),
                    true,
                    true);
        await elevationLayer.SetFullExtent(testFullExtent);
        var fullExtent = await elevationLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await elevationLayer.SetListMode(testListMode);
        var listMode = await elevationLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "autem",
                    "voluptatem",
                    752.4737,
                    ["consequatur",
                        "dicta",
                        "ut",
                        "ipsum"],
                    new DateTime(2011, 11, 9, 1, 32, 7),
                    "vel",
                    "ducimus accusantium dolorum optio",
                new Extent(-91.8020,
                        66.8147,
                        -87.8181,
                        0.7531,
                        876.3924,
                        743.2212,
                        554.2275,
                        795.1535,
                    new SpatialReference(1,
                            "explicabo",
                            "et",
                            "quis"),
                        true,
                        true),
                    ["eos",
                        "quos",
                        "excepturi"],
                    "numquam",
                    new DateTime(2019, 6, 20, 4, 33, 37),
                    "comment",
                    363.4217);
        await elevationLayer.SetPortalItem(testPortalItem);
        var portalItem = await elevationLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        TileInfo testTileInfo = new TileInfo(685.6110,
                    TileInfoFormat.Lerc,
                    true,
                [new LOD(4,
                        "quo",
                        42.9610,
                        3572988.6744),
                new LOD(9,
                        "est",
                        89.8857,
                        21039968.9609)],
                new Point(78.3412,
                        82.0585,
                        -137.3855,
                        6.1593,
                        90.6024,
                    new SpatialReference(7,
                            "qui",
                            "omnis",
                            "animi"),
                        true,
                        true,
                        473.3484),
                    [2,
                        7,
                        3,
                        8],
                new SpatialReference(5,
                        "dolores",
                        "aut",
                        "dolorem"));
        await elevationLayer.SetTileInfo(testTileInfo);
        var tileInfo = await elevationLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2002, 3, 23, 0, 43, 22),
                    new DateTime(2004, 4, 18, 0, 30, 58));
        await elevationLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await elevationLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
