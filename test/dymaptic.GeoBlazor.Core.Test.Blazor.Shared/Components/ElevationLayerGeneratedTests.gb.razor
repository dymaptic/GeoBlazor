@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedElevationLayer(Action renderHandler)
    {
        ElevationLayer? elevationLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <ElevationLayer 
                        Copyright="@("eum")"
                        FullExtent="@(new Extent(29.0265,
                                -53.8296,
                                26.3552,
                                22.3273,
                                957.4357,
                                276.2758,
                                181.6071,
                                53.3941,
                            new SpatialReference(6,
                                    "fugit",
                                    "facere",
                                    "minus"),
                                true,
                                true))"
                        ListMode="@(ListMode.Show)"
                        Opacity="@(0.7873)"
                        PersistenceEnabled="@(true)"
                        Title="@("tempore exercitationem doloremque")"
                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                        <TimeExtent 
                            Start="@(new DateTime(2004, 10, 2, 2, 13, 1))"
                            End="@(new DateTime(2000, 8, 9, 3, 50, 13))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(140.8552)"
                            Format="@(TileInfoFormat.Mixed)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(6,
                                    "porro",
                                    100.7663,
                                    33450598.2001),
                            new LOD(5,
                                    "corrupti",
                                    93.0136,
                                    15648453.6740),
                            new LOD(8,
                                    "placeat",
                                    84.0568,
                                    39822578.3304)])"
                            Origin="@(new Point(157.1795,
                                    -80.2367,
                                    91.2267,
                                    51.4745,
                                    519.8530,
                                new SpatialReference(6,
                                        "beatae",
                                        "voluptatem",
                                        "iste"),
                                    true,
                                    true,
                                    554.3863))"
                            Size="@([2,
                                9])"
                            SpatialReference="@(new SpatialReference(9,
                                    "sunt",
                                    "et",
                                    "ratione"))">
                        </TileInfo>
                        <PortalItem />
                    </ElevationLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(elevationLayer!);
        await AssertJavaScript("assertLayerExists", args: "elevation");
        var createElevationSamplerMethodResult = await elevationLayer.CreateElevationSampler(new Extent(24.0575,
                    134.0704,
                    2.0495,
                    -65.6269,
                    559.2791,
                    718.6473,
                    58.7504,
                    49.2783,
                new SpatialReference(6,
                        "voluptas",
                        "error",
                        "iure"),
                    true,
                    true),
            new ElevationLayerCreateElevationSamplerOptions("voluptas",
                    577.2778));
        Assert.IsNotNull(createElevationSamplerMethodResult);
        var fetchTileMethodResult = await elevationLayer.FetchTile(308.7128,
                836.4978,
                691.1098,
            new ElevationLayerFetchTileOptions(890.4760));
        Assert.IsNotNull(fetchTileMethodResult);
        var getTileUrlMethodResult = await elevationLayer.GetTileUrl(414.0565,
                683.1546,
                833.5556);
        Assert.IsNotNull(getTileUrlMethodResult);
        var queryElevationMethodResult = await elevationLayer.QueryElevation(new Extent(-61.7381,
                    29.4148,
                    83.8554,
                    -72.1681,
                    802.0628,
                    362.0091,
                    710.3549,
                    810.3012,
                new SpatialReference(1,
                        "laboriosam",
                        "iste",
                        "repudiandae"),
                    true,
                    true),
            new ElevationLayerQueryElevationOptions("aut",
                    493.2026,
                    true));
        Assert.IsNotNull(queryElevationMethodResult);
        Extent testFullExtent = new Extent(-84.4862,
                    92.1903,
                    12.0186,
                    -13.0909,
                    996.4492,
                    148.7436,
                    728.2269,
                    976.8048,
                new SpatialReference(1,
                        "consequuntur",
                        "quia",
                        "commodi"),
                    true,
                    true);
        await elevationLayer.SetFullExtent(testFullExtent);
        var fullExtent = await elevationLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await elevationLayer.SetListMode(testListMode);
        var listMode = await elevationLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await elevationLayer.SetPortalItem(testPortalItem);
        var portalItem = await elevationLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        TileInfo testTileInfo = new TileInfo(60.2364,
                    TileInfoFormat.Tiff,
                    true,
                [new LOD(7,
                        "aperiam",
                        99.7832,
                        7385817.1321)],
                new Point(89.9549,
                        49.7608,
                        -177.8777,
                        -27.6735,
                        190.7443,
                    new SpatialReference(8,
                            "saepe",
                            "et",
                            "adipisci"),
                        true,
                        true,
                        592.6610),
                    [3,
                        6],
                new SpatialReference(4,
                        "dicta",
                        "omnis",
                        "et"));
        await elevationLayer.SetTileInfo(testTileInfo);
        var tileInfo = await elevationLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2001, 5, 14, 20, 50, 45),
                    new DateTime(2001, 9, 22, 4, 29, 31));
        await elevationLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await elevationLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
