@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedElevationLayer(Action renderHandler)
    {
        ElevationLayer? elevationLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <ElevationLayer 
                        Copyright="@("nulla")"
                        FullExtent="@(new Extent(-35.6569,
                                10.1382,
                                20.0205,
                                20.5383,
                                424.3208,
                                278.2183,
                                691.3098,
                                346.7651,
                            new SpatialReference(2,
                                    "ea",
                                    "eos",
                                    "ex"),
                                true,
                                true))"
                        ListMode="@(ListMode.Show)"
                        Opacity="@(0.6217)"
                        PersistenceEnabled="@(true)"
                        Title="@("saepe repudiandae iusto")"
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                        <TimeExtent 
                            Start="@(new DateTime(2008, 3, 24, 8, 34, 19))"
                            End="@(new DateTime(2013, 9, 2, 15, 17, 14))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(74.4976)"
                            Format="@(TileInfoFormat.Png24)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(7,
                                    "eos",
                                    2.2984,
                                    9701731.4785)])"
                            Origin="@(new Point(19.0189,
                                    48.5866,
                                    -74.2643,
                                    54.4061,
                                    792.0684,
                                new SpatialReference(8,
                                        "asperiores",
                                        "magnam",
                                        "pariatur"),
                                    true,
                                    true,
                                    630.8249))"
                            Size="@([3,
                                5])"
                            SpatialReference="@(new SpatialReference(2,
                                    "laudantium",
                                    "nisi",
                                    "voluptatem"))">
                        </TileInfo>
                        <PortalItem />
                    </ElevationLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(elevationLayer!);
        await AssertJavaScript("assertLayerExists", args: "elevation");
        var createElevationSamplerMethodResult = await elevationLayer.CreateElevationSampler(new Extent(-65.1586,
                    -12.0951,
                    -9.4259,
                    -80.8590,
                    808.5730,
                    848.6437,
                    709.7755,
                    61.9824,
                new SpatialReference(2,
                        "in",
                        "dignissimos",
                        "consequatur"),
                    true,
                    true),
            new ElevationLayerCreateElevationSamplerOptions("vel",
                    22.0604));
        Assert.IsNotNull(createElevationSamplerMethodResult);
        var fetchTileMethodResult = await elevationLayer.FetchTile(112.3278,
                12.9801,
                654.7428,
            new ElevationLayerFetchTileOptions(300.7030));
        Assert.IsNotNull(fetchTileMethodResult);
        var getTileUrlMethodResult = await elevationLayer.GetTileUrl(708.1063,
                914.5543,
                730.1832);
        Assert.IsNotNull(getTileUrlMethodResult);
        var queryElevationMethodResult = await elevationLayer.QueryElevation(new Polygon([new MapPath([new MapPoint([328.5514,
                        319.7199]),
                    new MapPoint([172.6511,
                        484.0727])]),
                    new MapPath([new MapPoint([263.8192,
                            635.4994]),
                        new MapPoint([223.4574,
                            760.5334,
                            632.6353,
                            448.1103])]),
                    new MapPath([new MapPoint([613.9874,
                            702.9159,
                            29.1014,
                            924.7488]),
                        new MapPoint([292.1439,
                            401.9641,
                            476.5713])])],
                new SpatialReference(9,
                        "officia",
                        "libero",
                        "qui"),
                new Point(-161.4972,
                        69.0782,
                        -25.3109,
                        45.5508,
                        59.7639,
                    new SpatialReference(5,
                            "sed",
                            "eius",
                            "minima"),
                        true,
                        true,
                        367.2477),
                    true,
                    true,
                    true),
            new ElevationLayerQueryElevationOptions("enim",
                    521.9694,
                    true));
        Assert.IsNotNull(queryElevationMethodResult);
        Extent testFullExtent = new Extent(-60.4323,
                    47.2479,
                    -88.9632,
                    11.4515,
                    205.7213,
                    62.3657,
                    633.3954,
                    283.2085,
                new SpatialReference(8,
                        "placeat",
                        "eum",
                        "est"),
                    true,
                    true);
        await elevationLayer.SetFullExtent(testFullExtent);
        var fullExtent = await elevationLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await elevationLayer.SetListMode(testListMode);
        var listMode = await elevationLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await elevationLayer.SetPortalItem(testPortalItem);
        var portalItem = await elevationLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        TileInfo testTileInfo = new TileInfo(665.9071,
                    TileInfoFormat.Svgz,
                    true,
                [new LOD(5,
                        "non",
                        54.9269,
                        1208662.1829),
                new LOD(8,
                        "rem",
                        58.7925,
                        6400726.1737),
                new LOD(9,
                        "minus",
                        25.0355,
                        24983782.3709),
                new LOD(8,
                        "et",
                        27.4011,
                        19409492.9598)],
                new Point(147.4192,
                        47.9530,
                        -27.9223,
                        5.5519,
                        332.6140,
                    new SpatialReference(8,
                            "soluta",
                            "sit",
                            "blanditiis"),
                        true,
                        true,
                        363.2795),
                    [1,
                        8,
                        6],
                new SpatialReference(4,
                        "autem",
                        "cumque",
                        "iusto"));
        await elevationLayer.SetTileInfo(testTileInfo);
        var tileInfo = await elevationLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2013, 6, 4, 5, 7, 27),
                    new DateTime(2022, 2, 14, 2, 6, 28));
        await elevationLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await elevationLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
