@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderElevationLayer(Action renderHandler)
    {
        ElevationLayer? elevationLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <ElevationLayer 
                        Copyright="@("quisquam")"
                        FullExtent="@(new Extent(59.6815,
                                -3.1810,
                                59.8428,
                                -10.6697,
                                292.8382,
                                93.4581,
                                853.0711,
                                443.3955,
                            new SpatialReference(8,
                                    "ut",
                                    "ex",
                                    "reiciendis"),
                                true,
                                true))"
                        ListMode="@(ListMode.Show)"
                        Opacity="@(0.1437)"
                        PersistenceEnabled="@(true)"
                        Title="@("sed quam id")"
                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                        <TimeExtent 
                            Start="@(new DateTime(2020, 1, 20, 0, 37, 43))"
                            End="@(new DateTime(2000, 1, 1, 11, 52, 26))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(167.5360)"
                            Format="@(TileInfoFormat.Dib)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(9,
                                    "sit",
                                    45.3481,
                                    35676459.2443),
                            new LOD(8,
                                    "quae",
                                    81.5677,
                                    49318547.1586),
                            new LOD(5,
                                    "cupiditate",
                                    16.7826,
                                    23229450.5560)])"
                            Origin="@(new Point(-153.4044,
                                    53.2182,
                                    79.8972,
                                    6.7619,
                                    18.9532,
                                new SpatialReference(6,
                                        "aut",
                                        "qui",
                                        "quam"),
                                    true,
                                    true,
                                    508.1810))"
                            Size="@([6,
                                7])"
                            SpatialReference="@(new SpatialReference(4,
                                    "et",
                                    "quasi",
                                    "magnam"))">
                        </TileInfo>
                    </ElevationLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(elevationLayer!);
        await AssertJavaScript("assertLayerExists", args: "elevation");
        var createElevationSamplerMethodResult = await elevationLayer.CreateElevationSampler(new Extent(-34.6760,
                    -7.7505,
                    -73.6687,
                    -31.7158,
                    44.2168,
                    598.3631,
                    689.1920,
                    367.0636,
                new SpatialReference(6,
                        "cumque",
                        "exercitationem",
                        "deserunt"),
                    true,
                    true),
            new ElevationLayerCreateElevationSamplerOptions("laborum",
                    572.2065));
        Assert.IsNotNull(createElevationSamplerMethodResult);
        var fetchTileMethodResult = await elevationLayer.FetchTile(283.8463,
                612.7262,
                922.2717,
            new ElevationLayerFetchTileOptions(51.6706));
        Assert.IsNotNull(fetchTileMethodResult);
        var getTileUrlMethodResult = await elevationLayer.GetTileUrl(85.1609,
                588.5237,
                224.0680);
        Assert.IsNotNull(getTileUrlMethodResult);
        var queryElevationMethodResult = await elevationLayer.QueryElevation(new Extent(-48.3798,
                    -110.0556,
                    -87.2565,
                    -41.3647,
                    393.6771,
                    10.7054,
                    385.4509,
                    850.5122,
                new SpatialReference(4,
                        "perspiciatis",
                        "magni",
                        "soluta"),
                    true,
                    true),
            new ElevationLayerQueryElevationOptions("et",
                    180.5597,
                    true));
        Assert.IsNotNull(queryElevationMethodResult);
        Extent testFullExtent = new Extent(146.0466,
                    -60.1473,
                    22.2517,
                    1.2138,
                    701.1074,
                    28.1398,
                    116.9952,
                    952.9899,
                new SpatialReference(4,
                        "voluptas",
                        "ad",
                        "ab"),
                    true,
                    true);
        await elevationLayer.SetFullExtent(testFullExtent);
        var fullExtent = await elevationLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await elevationLayer.SetListMode(testListMode);
        var listMode = await elevationLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Public,
                    "dolore",
                    "aut",
                    531.2253,
                    ["recusandae",
                        "minus"],
                    new DateTime(2003, 1, 5, 19, 49, 49),
                    "itaque",
                    "cum autem magni expedita voluptas est eius",
                new Extent(62.6734,
                        53.1965,
                        -11.3485,
                        -84.2068,
                        382.0238,
                        693.2820,
                        379.1145,
                        565.8931,
                    new SpatialReference(7,
                            "eos",
                            "qui",
                            "exercitationem"),
                        true,
                        true),
                    ["qui",
                        "nobis",
                        "facere"],
                    "nostrum",
                    new DateTime(2004, 3, 17, 2, 8, 54),
                    "updatedAt",
                    906.6527);
        await elevationLayer.SetPortalItem(testPortalItem);
        var portalItem = await elevationLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        TileInfo testTileInfo = new TileInfo(247.2966,
                    TileInfoFormat.Ps,
                    true,
                [new LOD(7,
                        "rerum",
                        34.0435,
                        39040908.7022),
                new LOD(3,
                        "perspiciatis",
                        75.7182,
                        44620737.2948),
                new LOD(4,
                        "accusamus",
                        21.7004,
                        40595300.9329)],
                new Point(59.1286,
                        -66.7851,
                        9.8932,
                        7.1709,
                        168.0105,
                    new SpatialReference(6,
                            "minus",
                            "cupiditate",
                            "aut"),
                        true,
                        true,
                        336.8745),
                    [5,
                        6,
                        9,
                        5],
                new SpatialReference(8,
                        "modi",
                        "autem",
                        "reprehenderit"));
        await elevationLayer.SetTileInfo(testTileInfo);
        var tileInfo = await elevationLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2006, 8, 26, 19, 16, 9),
                    new DateTime(2002, 6, 17, 14, 1, 20));
        await elevationLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await elevationLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
