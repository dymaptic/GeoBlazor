@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedElevationLayer(Action renderHandler)
    {
        ElevationLayer? elevationLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <ElevationLayer 
                        Copyright="@("et")"
                        FullExtent="@(new Extent(28.7002,
                                128.9489,
                                37.8583,
                                46.7932,
                                927.2381,
                                543.3274,
                                300.2811,
                                251.1258,
                            new SpatialReference(3,
                                    "veritatis",
                                    "totam",
                                    "modi"),
                                true,
                                true))"
                        ListMode="@(ListMode.Hide)"
                        Opacity="@(0.9245)"
                        PersistenceEnabled="@(true)"
                        Title="@("ducimus et assumenda")"
                        Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                        <TimeExtent 
                            Start="@(new DateTime(2021, 1, 9, 17, 19, 5))"
                            End="@(new DateTime(2007, 2, 1, 10, 8, 53))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(609.5382)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(5,
                                    "qui",
                                    28.3726,
                                    22458607.5638),
                            new LOD(9,
                                    "consequatur",
                                    27.2830,
                                    2378181.3768)])"
                            Origin="@(new Point(71.6557,
                                    17.8990,
                                    44.1278,
                                    57.7489,
                                    223.9526,
                                new SpatialReference(9,
                                        "molestias",
                                        "ut",
                                        "nihil"),
                                    true,
                                    true,
                                    490.6582))"
                            Size="@([7,
                                4])"
                            SpatialReference="@(new SpatialReference(2,
                                    "et",
                                    "nobis",
                                    "maiores"))">
                        </TileInfo>
                        <PortalItem />
                    </ElevationLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(elevationLayer!);
        await AssertJavaScript("assertLayerExists", args: "elevation");
        var createElevationSamplerMethodResult = await elevationLayer.CreateElevationSampler(new Extent(100.0976,
                    -142.8795,
                    -11.7174,
                    -23.0465,
                    633.3290,
                    440.1034,
                    572.2682,
                    613.0487,
                new SpatialReference(8,
                        "incidunt",
                        "et",
                        "sit"),
                    true,
                    true),
            new ElevationLayerCreateElevationSamplerOptions("molestiae",
                    548.5074));
        Assert.IsNotNull(createElevationSamplerMethodResult);
        var fetchTileMethodResult = await elevationLayer.FetchTile(570.0644,
                402.8565,
                357.1049,
            new ElevationLayerFetchTileOptions(127.7732));
        Assert.IsNotNull(fetchTileMethodResult);
        var getTileUrlMethodResult = await elevationLayer.GetTileUrl(233.1854,
                393.7246,
                319.4328);
        Assert.IsNotNull(getTileUrlMethodResult);
        var queryElevationMethodResult = await elevationLayer.QueryElevation(new Extent(121.0459,
                    -140.2613,
                    42.0633,
                    -56.1288,
                    213.9903,
                    34.8731,
                    268.6110,
                    375.6050,
                new SpatialReference(3,
                        "architecto",
                        "nostrum",
                        "voluptatum"),
                    true,
                    true),
            new ElevationLayerQueryElevationOptions("ut",
                    885.0560,
                    true));
        Assert.IsNotNull(queryElevationMethodResult);
        Extent testFullExtent = new Extent(37.5745,
                    58.8727,
                    18.8725,
                    -64.9698,
                    814.5521,
                    638.1415,
                    418.6709,
                    509.6997,
                new SpatialReference(8,
                        "sed",
                        "fuga",
                        "debitis"),
                    true,
                    true);
        await elevationLayer.SetFullExtent(testFullExtent);
        var fullExtent = await elevationLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await elevationLayer.SetListMode(testListMode);
        var listMode = await elevationLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await elevationLayer.SetPortalItem(testPortalItem);
        var portalItem = await elevationLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        TileInfo testTileInfo = new TileInfo(394.9370,
                    default,
                    true,
                [new LOD(2,
                        "architecto",
                        72.7181,
                        18931506.4418)],
                new Point(-40.0523,
                        50.6362,
                        -74.7345,
                        -20.3920,
                        91.2822,
                    new SpatialReference(9,
                            "cum",
                            "modi",
                            "corrupti"),
                        true,
                        true,
                        779.6548),
                    [6,
                        2,
                        4,
                        1],
                new SpatialReference(5,
                        "sunt",
                        "aut",
                        "velit"));
        await elevationLayer.SetTileInfo(testTileInfo);
        var tileInfo = await elevationLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2001, 9, 11, 5, 55, 52),
                    new DateTime(2010, 2, 22, 10, 35, 51));
        await elevationLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await elevationLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
