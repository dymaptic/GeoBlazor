@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Reflect)"
                        Dpi="@(535.9064)"
                        Effect="@(new Effect("qui",
                            15884470.6919))"
                        GdbVersion="@("4.8.3.6")"
                        ImageFormat="@(MapImageFormat.Png)"
                        ImageMaxHeight="@(3)"
                        ImageMaxWidth="@(3)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(39319533.6437)"
                        MinScale="@(40434.7130)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(448.1993)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.5711)"
                        Copyright="@("mollitia")"
                        FullExtent="@(new Extent(-45.4500,
                                79.8497,
                                -72.5804,
                                24.1038,
                                447.8813,
                                185.4386,
                                294.7510,
                                230.0902,
                            new SpatialReference(6,
                                    "ut",
                                    "commodi",
                                    "ullam"),
                                true,
                                true))"
                        Title="@("quibusdam voluptates aliquam")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Weeks)"
                            Value="@(451.7415)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("modi")"
                            EndField="@("exercitationem")"
                            Stops="@([new DateTime(2016, 11, 1, 3, 13, 29),
                                new DateTime(2007, 5, 21, 3, 31, 9),
                                new DateTime(2012, 10, 1, 4, 43, 35),
                                new DateTime(2014, 6, 23, 21, 1, 9)])"
                            TimeZone="@("America/Guatemala")"
                            TrackIdField="@("quia")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Months)"
                                Value="@(33.0523)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2012, 5, 17, 19, 25, 36))"
                                End="@(new DateTime(2005, 6, 9, 14, 54, 6))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2019, 7, 15, 12, 30, 11))"
                            End="@(new DateTime(2014, 6, 24, 3, 28, 26))">
                        </TimeExtent>
                        <Sublayer 
                            SublayerId="@(3)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(7552327.0448)"
                            MinScale="@(16370.5602)"
                            Opacity="@(0.8700)"
                            PopupEnabled="@(true)"
                            Title="@("esse mollitia error")"
                            Visible="@(true)"
                            DefinitionExpression="@("voluptas")"
                            FloorInfo="@(new LayerFloorInfo("est"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowLeft,
                                    "animi",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    39991359.2553,
                                    35984.4486,
                                    true,
                                    new Dimension(588.0110),
                                new TextSymbol("officia eaque ab",
                                    new MapColor(2, 29, 82),
                                    new MapColor(121, 79, 99),
                                        new Dimension(285.2992),
                                    new MapFont(new Dimension(158.4301),
                                            "Bookman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        532.3974,
                                    new MapColor(173, 197, 203),
                                    new MapColor(91, 109, 73),
                                        673.6940,
                                    HorizontalAlignment.Right,
                                        true,
                                        487.2110,
                                        new Dimension(925.3896),
                                        true),
                                    true,
                                    "Country = 'Canada'"),
                            new Label(LabelPlacement.AboveBefore,
                                    "quis",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    46336905.5395,
                                    11446.1226,
                                    true,
                                    new Dimension(717.4543),
                                new TextSymbol("aliquam incidunt ea",
                                    new MapColor(221, 80, 174),
                                    new MapColor(167, 143, 75),
                                        new Dimension(425.6947),
                                    new MapFont(new Dimension(973.8762),
                                            "Arial",
                                        MapFontStyle.Italic,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        408.0431,
                                    new MapColor(205, 181, 252),
                                    new MapColor(214, 231, 84),
                                        897.9379,
                                    HorizontalAlignment.Left,
                                        true,
                                        947.3995,
                                        new Dimension(254.2274),
                                        true),
                                    true,
                                    "ObjectID = 1")])"
                            PopupTemplate="@(new PopupTemplate("et a ipsam",
                                    "eaque",
                                    ["voluptates",
                                        "ut",
                                        "totam",
                                        "eaque"],
                                [new FieldInfo("password",
                                        "reprehenderit",
                                        "pariatur",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("category",
                                        "occaecati",
                                        "magnam",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("group",
                                        "quidem",
                                        "ipsa",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "neque",
                                            "quas ut neque"))],
                                [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "id",
                                        "aliquid modi sint",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "id",
                                        "quas fuga quia",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "category",
                                        "et dolor praesentium",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("asperiores id dolorem",
                                        "4150e217-7f96-4c3f-7bc4-764c33ab018a",
                                        () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "comment",
                                        "amet"),
                                new ActionToggle("omnis at voluptatem",
                                        "3aea1264-6754-21c6-b171-597e89dcbaa1",
                                        () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "createdAt",
                                        "consequatur")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("in totam rem",
                                    new MapColor(252, 251, 78),
                                    new MapColor(161, 44, 169),
                                        new Dimension(209.6763),
                                    new MapFont(new Dimension(149.6517),
                                            "Bookman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        331.3929,
                                    new MapColor(108, 139, 184),
                                    new MapColor(70, 100, 140),
                                        204.2466,
                                    HorizontalAlignment.Left,
                                        true,
                                        650.7462,
                                        new Dimension(682.1864),
                                        true),
                                    "quibusdam",
                                [new RotationVariable("nesciunt",
                                    Axis.Heading,
                                    RotationType.Arithmetic,
                                    new VisualVariableLegendOptions(true,
                                            "adipisci sit rerum"),
                                        "ex",
                                        "ea eius consequatur"),
                                new SizeVariable("quasi",
                                        new Dimension(390.1221),
                                        new Dimension(625.6264),
                                        708.2951,
                                        979.6654,
                                        VisualValueRepresentation.Area,
                                        VisualValueUnit.Miles,
                                        "velit",
                                        "doloremque",
                                        true,
                                        VisualAxis.WidthAndDepth,
                                        "et",
                                        "laboriosam rerum officiis",
                                    new VisualVariableLegendOptions(true,
                                            "eum qui repellat")),
                                new ColorVariable("dolore",
                                        "deserunt",
                                    [new ColorStop(100.1224,
                                        new MapColor(75, 247, 72),
                                            "est"),
                                    new ColorStop(797.0261,
                                        new MapColor(79, 217, 55),
                                            "minima")],
                                    new VisualVariableLegendOptions(true,
                                            "vel facere consequatur"),
                                        "quia",
                                        "animi atque provident"),
                                new SizeVariable("reiciendis",
                                        new Dimension(85.6647),
                                        new Dimension(315.2104),
                                        279.6154,
                                        380.7324,
                                        VisualValueRepresentation.Radius,
                                        VisualValueUnit.Yards,
                                        "esse",
                                        "unde",
                                        true,
                                        VisualAxis.Width,
                                        "quis",
                                        "non ut molestias",
                                    new VisualVariableLegendOptions(true,
                                            "qui dolorem et"))],
                                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(112, 223, 216),
                                            new MapColor(129, 28, 81)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(94, 140, 232),
                                            new MapColor(219, 20, 122))]),
                                        794.4283,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(984.8833,
                                                85.6513),
                                        new AuthoringInfoField1ClassBreakInfos(324.0111,
                                                168.9032),
                                        new AuthoringInfoField1ClassBreakInfos(737.6543,
                                                472.2989)],
                                            "qui",
                                            "maxime",
                                            "odit"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(580.6213,
                                                639.8365),
                                        new AuthoringInfoField1ClassBreakInfos(283.3966,
                                                683.6214),
                                        new AuthoringInfoField1ClassBreakInfos(599.6117,
                                                567.1082),
                                        new AuthoringInfoField1ClassBreakInfos(295.9897,
                                                900.9533)],
                                            "rerum",
                                            "et",
                                            "voluptas"),
                                        ["vel",
                                            "ut"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "aliquid",
                                        true,
                                    LengthUnit.NauticalMiles,
                                        329.6144,
                                        803.2551,
                                        445.1148,
                                        941.1388)))"
                            Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                            <Sublayer 
                                SublayerId="@(2)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(42083065.6571)"
                                MinScale="@(45787.3191)"
                                Opacity="@(0.4070)"
                                PopupEnabled="@(true)"
                                Title="@("aperiam rerum sint")"
                                Visible="@(true)"
                                DefinitionExpression="@("quas")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(7)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(24613662.4747)"
                                    MinScale="@(22886.2579)"
                                    Opacity="@(0.9820)"
                                    PopupEnabled="@(true)"
                                    Title="@("consequatur quia omnis")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("quam")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(8)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(4413561.4162)"
                                        MinScale="@(783.8337)"
                                        Opacity="@(0.9406)"
                                        PopupEnabled="@(true)"
                                        Title="@("nihil eligendi ea")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("tempora")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(6)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(20768172.3637)"
                                            MinScale="@(11327.1342)"
                                            Opacity="@(0.3299)"
                                            PopupEnabled="@(true)"
                                            Title="@("nihil nesciunt et")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("reiciendis")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(5)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(25837673.8802)"
                                                MinScale="@(18624.4167)"
                                                Opacity="@(0.4018)"
                                                PopupEnabled="@(true)"
                                                Title="@("sed sunt quod")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("error")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(8)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(33198498.5801)"
                                                    MinScale="@(15623.4565)"
                                                    Opacity="@(0.5043)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("a et et")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("fuga")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("ipsum molestiae voluptas")"
                                                        StringContent="@("esse")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("repellat")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("et nam qui")"
                                                    StringContent="@("maxime")"
                                                    OutFields="@(["dolores",
                                                        "impedit",
                                                        "qui"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new AttachmentsPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "bacfe007-a73c-7ce2-6383-ee717d278f8b",
                                                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "0bba2592-5c16-0933-b5e2-f5740578a05c",
                                                            () => { Console.WriteLine("deserunt"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "df044e4d-267b-5d4d-abfe-e02de6999950",
                                                            () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "946c1e33-7529-305b-2257-c3a42036b2a9",
                                                            () => { Console.WriteLine("itaque"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowAlong)"
                                                    LabelExpression="@("voluptates")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(2670298.6137)"
                                                    MinScale="@(8782.4841)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(107.0636))"
                                                    Symbol="@(new TextSymbol("doloribus consequatur in"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("est")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                    new MultipartColorRamp(),
                                                        989.7783,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["veniam",
                                                            "ducimus",
                                                            "ea",
                                                            "quibusdam"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "architecto",
                                                        true,
                                                    LengthUnit.Inches,
                                                        218.4654,
                                                        468.7760,
                                                        371.3198,
                                                        709.2925))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("et quo eaque")"
                                                StringContent="@("quia")"
                                                OutFields="@(["veniam",
                                                    "est",
                                                    "reprehenderit",
                                                    "sit"])"
                                                FieldInfos="@([new FieldInfo("category",
                                                        "corporis",
                                                        "impedit",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("password",
                                                        "nihil",
                                                        "sit",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev),
                                                new FieldInfo("group",
                                                        "placeat",
                                                        "corrupti",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count)])"
                                                Content="@([new MediaPopupContent("debitis iste voluptatem",
                                                        "molestiae alias commodi nobis cum aliquid",
                                                    [new BarChartMediaInfo()],
                                                        4),
                                                new AttachmentsPopupContent("pariatur et temporibus",
                                                        "aliquid eos eligendi eius magnam deserunt eligendi"),
                                                new AttachmentsPopupContent("nam exercitationem ab",
                                                        "molestiae qui aut eum fugiat omnis"),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                        "status",
                                                        "fuga rerum architecto"),
                                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "updatedAt",
                                                        "porro maxime beatae"),
                                                new ExpressionInfo("return Date();",
                                                        "avatar",
                                                        "rem possimus sunt"),
                                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "email",
                                                        "temporibus tempore quibusdam")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("perferendis optio odio",
                                                        "https://picsum.photos/640/480/?image=469",
                                                        "3bd9fbfd-7260-1a96-296e-ae1606a6798c",
                                                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                        "createdAt",
                                                        true,
                                                        true,
                                                        true,
                                                        "sunt"),
                                                new ActionToggle("fugit architecto voluptatem",
                                                        "29d7fbf8-993a-2288-b3bc-c8ee01472233",
                                                        () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "category",
                                                        "quisquam")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowEnd)"
                                                LabelExpression="@("ea")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(34324857.1618)"
                                                MinScale="@(49545.4403)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(543.8475))"
                                                Symbol="@(new TextSymbol("esse officiis perferendis",
                                                    new MapColor(214, 4, 241),
                                                    new MapColor(107, 173, 214),
                                                        null,
                                                    new MapFont(),
                                                        314.7139,
                                                    new MapColor(123, 199, 195),
                                                    new MapColor(200, 178, 20),
                                                        29.9590,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        802.5136,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Name = 'John Doe'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quidem")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(249, 66, 149),
                                                    new MapColor(244, 236, 165)),
                                                    984.0062,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "aut",
                                                        "impedit",
                                                        "consectetur"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "aliquam",
                                                        "voluptas",
                                                        "magni"),
                                                    ["vel",
                                                        "officia"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "et",
                                                    true,
                                                LengthUnit.UsFeet,
                                                    270.2028,
                                                    550.1624,
                                                    645.1621,
                                                    774.4372))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("esse quae et")"
                                            StringContent="@("aliquam")"
                                            OutFields="@(["eaque",
                                                "culpa",
                                                "quaerat"])"
                                            FieldInfos="@([new FieldInfo("category",
                                                    "magni",
                                                    "sit",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.LongMonthDayYearLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("category",
                                                    "autem",
                                                    "omnis",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Max)])"
                                            Content="@([new AttachmentsPopupContent("deserunt qui et",
                                                    "excepturi ea tenetur porro",
                                                    AttachmentsPopupContentDisplayType.Auto)])"
                                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "createdAt",
                                                    "officiis rerum laudantium",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "phone",
                                                    "sed adipisci laborum",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "email",
                                                    "ad vero enim",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("sunt vero unde",
                                                    "e8b0326a-a86a-d608-7727-3229f7411c94",
                                                    () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "token",
                                                    "quisquam"),
                                            new ActionToggle("occaecati tempora voluptatem",
                                                    "4e3f0bf1-5e3a-b837-ab3c-5f50531f675a",
                                                    () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "id",
                                                    "ratione"),
                                            new ActionToggle("aliquam perspiciatis magnam",
                                                    "026d5dcc-9a80-2d4f-b096-35d30f8362b3",
                                                    () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "updatedAt",
                                                    "labore"),
                                            new ActionToggle("animi explicabo veniam",
                                                    "9a3efbff-6eb5-26a5-228e-162afa078baf",
                                                    () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "token",
                                                    "dolor")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterStart)"
                                            LabelExpression="@("qui")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(33163131.9230)"
                                            MinScale="@(8745.3312)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(955.1673))"
                                            Symbol="@(new TextSymbol("quasi soluta et",
                                                new MapColor(69, 14, 14),
                                                new MapColor(151, 232, 171),
                                                    new Dimension(863.0731),
                                                new MapFont(new Dimension(62.4820),
                                                        "Georgia",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Lighter,
                                                    TextDecoration.None),
                                                    140.2491,
                                                new MapColor(83, 165, 189),
                                                new MapColor(98, 62, 191),
                                                    521.7265,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    602.5337,
                                                    new Dimension(422.8296),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Street = '123 Main St.'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("aut")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(171, 138, 50),
                                                    new MapColor(223, 145, 72)),
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(99, 83, 197),
                                                    new MapColor(185, 36, 202)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(236, 77, 194),
                                                    new MapColor(53, 30, 149)),
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(200, 115, 154),
                                                    new MapColor(221, 251, 136))]),
                                                525.7788,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(312.5545,
                                                        197.6307)],
                                                    "libero",
                                                    "sed",
                                                    "nisi"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(326.7484,
                                                        849.9846)],
                                                    "amet",
                                                    "ut",
                                                    "voluptas"),
                                                ["exercitationem",
                                                    "nulla",
                                                    "error"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "dolorum",
                                                true,
                                            LengthUnit.NauticalMiles,
                                                268.4518,
                                                198.7627,
                                                113.8394,
                                                875.2355))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("fugiat ut recusandae")"
                                        StringContent="@("nam")"
                                        OutFields="@(["perferendis",
                                            "iure",
                                            "nam"])"
                                        FieldInfos="@([new FieldInfo("token",
                                                "aut",
                                                "ea",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("comment",
                                                "voluptatibus",
                                                "blanditiis",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("avatar",
                                                "expedita",
                                                "quis",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Count)])"
                                        Content="@([new AttachmentsPopupContent("fuga est eligendi",
                                                "repellat quia commodi qui odit",
                                                AttachmentsPopupContentDisplayType.Preview),
                                        new FieldsPopupContent([new FieldInfo("createdAt",
                                                    "et",
                                                    "quia",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Var)],
                                                "perspiciatis doloremque nostrum temporibus praesentium",
                                                "cupiditate placeat assumenda"),
                                        new TextPopupContent("vel enim consequatur")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "password",
                                                "alias accusantium aut",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "token",
                                                "expedita qui exercitationem",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "comment",
                                                "ut vel rerum",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "token",
                                                "quia et molestiae",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("repellat omnis dolorem",
                                                "22c040fb-1410-a3ad-c7e9-4f0e5af413f3",
                                                () => { Console.WriteLine("voluptatum"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "updatedAt",
                                                "qui"),
                                        new ActionToggle("harum aut hic",
                                                "e6555932-51fe-ddae-554c-16dd7f2a2983",
                                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "updatedAt",
                                                "molestiae"),
                                        new ActionButton("et voluptatum porro",
                                                "https://picsum.photos/640/480/?image=491",
                                                "4d4fb254-8654-542f-1782-200565413147",
                                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                                "email",
                                                true,
                                                true,
                                                true,
                                                "omnis")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.BelowAfter)"
                                        LabelExpression="@("quo")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(18789302.7327)"
                                        MinScale="@(28173.1814)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(410.0899))"
                                        Symbol="@(new TextSymbol("quia iste illo",
                                            new MapColor(134, 69, 164),
                                            new MapColor(169, 38, 94),
                                                new Dimension(413.2653),
                                            new MapFont(new Dimension(953.9363),
                                                    "Georgia",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                762.7703,
                                            new MapColor(31, 36, 195),
                                            new MapColor(231, 124, 186),
                                                530.7489,
                                            HorizontalAlignment.Left,
                                                true,
                                                967.9674,
                                                new Dimension(880.5491),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Country = 'Canada'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("numquam")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(21, 196, 158),
                                                new MapColor(49, 0, 137))]),
                                            760.1975,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(369.0490,
                                                    798.5480),
                                            new AuthoringInfoField1ClassBreakInfos(279.2641,
                                                    29.7429),
                                            new AuthoringInfoField1ClassBreakInfos(929.1178,
                                                    802.4546),
                                            new AuthoringInfoField1ClassBreakInfos(799.4108,
                                                    329.6961)],
                                                "excepturi",
                                                "provident",
                                                "perferendis"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(350.1510,
                                                    571.8234),
                                            new AuthoringInfoField1ClassBreakInfos(170.3133,
                                                    701.4027),
                                            new AuthoringInfoField1ClassBreakInfos(553.7462,
                                                    185.0947),
                                            new AuthoringInfoField1ClassBreakInfos(539.8955,
                                                    891.3808)],
                                                "non",
                                                "quia",
                                                "qui"),
                                            ["provident",
                                                "consequatur",
                                                "occaecati",
                                                "illo"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "ipsum",
                                            true,
                                        LengthUnit.UsFeet,
                                            611.7028,
                                            34.9919,
                                            622.1125,
                                            798.8256))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("distinctio doloremque voluptas")"
                                    StringContent="@("consequatur")"
                                    OutFields="@(["atque",
                                        "corrupti",
                                        "voluptatibus"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "eaque",
                                            "ab",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateLe),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("avatar",
                                            "neque",
                                            "ipsam",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("password",
                                            "dolorum",
                                            "aut",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Stddev)])"
                                    Content="@([new FieldsPopupContent([new FieldInfo("createdAt",
                                                "iste",
                                                "ad",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("id",
                                                "aut",
                                                "nemo",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLeLongTime),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                            "consequatur voluptatem ut illo odio possimus ut",
                                            "deleniti possimus soluta"),
                                    new MediaPopupContent("ut consequatur voluptas",
                                            "nostrum sint iure odit a",
                                        [new ColumnChartMediaInfo("quis nam est",
                                                "tempora",
                                                "quo delectus et",
                                            new ChartMediaInfoValue(["architecto",
                                                    "fugit"],
                                                    "et",
                                                    "cupiditate",
                                                [new ChartMediaInfoValueSeries("phone",
                                                        "quis",
                                                        421.4144),
                                                new ChartMediaInfoValueSeries("createdAt",
                                                        "nam",
                                                        677.0571),
                                                new ChartMediaInfoValueSeries("name",
                                                        "qui",
                                                        352.6705),
                                                new ChartMediaInfoValueSeries("avatar",
                                                        "temporibus",
                                                        72.9079)],
                                                [new MapColor(147, 82, 253)]))],
                                            3)])"
                                    ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "phone",
                                            "rem consequatur delectus",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "category",
                                            "omnis non omnis",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "token",
                                            "nihil recusandae incidunt",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature['FieldName'];",
                                            "name",
                                            "quia reprehenderit sint",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("odio omnis et",
                                            "c02b40ee-b49a-2640-2f2f-3000f485a810",
                                            () => { Console.WriteLine("adipisci"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "category",
                                            "vero"),
                                    new ActionToggle("facilis molestiae perspiciatis",
                                            "cb8ec9e5-0c50-b581-15cd-4200e8273656",
                                            () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "sunt")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowAlong)"
                                    LabelExpression="@("minus")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(45785751.5247)"
                                    MinScale="@(5895.4858)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(785.6715))"
                                    Symbol="@(new TextSymbol("excepturi et autem",
                                        new MapColor(198, 252, 144),
                                        new MapColor(206, 217, 108),
                                            new Dimension(410.6107),
                                        new MapFont(new Dimension(505.1198),
                                                "Verdana",
                                            MapFontStyle.Oblique,
                                            FontWeight.Lighter,
                                            TextDecoration.LineThrough),
                                            101.9285,
                                        new MapColor(178, 73, 26),
                                        new MapColor(141, 220, 216),
                                            391.7797,
                                        HorizontalAlignment.Right,
                                            true,
                                            104.8293,
                                            new Dimension(15.3776),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Street = '123 Main St.'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("molestiae")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-5.5248,
                    -46.8849,
                    42.9924,
                    27.4466,
                    732.1130,
                    949.0651,
                    639.9089,
                    283.9145,
                new SpatialReference(5,
                        "eum",
                        "voluptas",
                        "facilis"),
                    true,
                    true),
                5,
                9,
            new MapImageLayerCreateExportImageParametersOptions(510.5932,
                    226.2688,
                    "excepturi"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(50.5872,
                    40.8113,
                    85.6312,
                    -86.2350,
                    890.4352,
                    468.7615,
                    743.3316,
                    85.7991,
                new SpatialReference(8,
                        "sint",
                        "optio",
                        "assumenda"),
                    true,
                    true),
                1,
                9,
            new MapImageLayerFetchImageOptions(813.6054,
                    353.4459,
                    "quis"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(4);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "odio",
                    "in",
                    560.9306,
                    ["hic",
                        "occaecati",
                        "itaque",
                        "deserunt"],
                    new DateTime(2012, 6, 2, 16, 39, 56),
                    "blanditiis",
                    "corrupti quisquam magni occaecati",
                new Extent(92.0389,
                        -171.6915,
                        84.1965,
                        89.3700,
                        342.6717,
                        597.0937,
                        485.8584,
                        571.2564,
                    new SpatialReference(3,
                            "provident",
                            "consectetur",
                            "eos"),
                        true,
                        true),
                    ["consequatur",
                        "sit"],
                    "aut",
                    new DateTime(2005, 9, 5, 17, 31, 3),
                    "title",
                    205.0829);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.DestinationOver;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2005, 4, 18, 4, 36, 27),
                    new DateTime(2018, 9, 12, 0, 6, 3));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("occaecati",
                    "et",
                new TimeExtent(new DateTime(2011, 8, 15, 6, 37, 58),
                        new DateTime(2018, 10, 18, 5, 42, 18)),
                new TimeInterval(TemporalTime.Decades,
                        162.1541),
                    [new DateTime(2015, 7, 2, 14, 3, 40),
                        new DateTime(2001, 9, 18, 13, 2, 32),
                        new DateTime(2022, 3, 11, 10, 42, 28)],
                    "Atlantic/South_Georgia",
                    "dolores");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    26522382.6014,
                    7235.1164,
                    0.2615,
                    true,
                    "culpa aut nisi",
                    true,
                    "veniam",
                new LayerFloorInfo("ea"),
                [new Label(LabelPlacement.BelowRight,
                        "mollitia",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        17438538.5729,
                        13825.8524,
                        true,
                        new Dimension(299.0457),
                    new TextSymbol("occaecati et esse",
                        new MapColor(164, 53, 110),
                        new MapColor(179, 103, 14),
                            new Dimension(433.6246),
                        new MapFont(new Dimension(219.7358),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            730.8563,
                        new MapColor(43, 90, 110),
                        new MapColor(229, 79, 122),
                            509.7410,
                        HorizontalAlignment.Left,
                            true,
                            726.4421,
                            new Dimension(478.4981),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.BelowAlong,
                        "sunt",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        28105788.5052,
                        42641.2587,
                        true,
                        new Dimension(613.4200),
                    new TextSymbol("corrupti dicta qui",
                        new MapColor(124, 53, 216),
                        new MapColor(142, 85, 176),
                            new Dimension(511.9956),
                        new MapFont(new Dimension(182.5459),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            637.8500,
                        new MapColor(213, 100, 169),
                        new MapColor(108, 162, 225),
                            586.5300,
                        HorizontalAlignment.Left,
                            true,
                            795.2649,
                            new Dimension(898.2529),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterRight,
                        "quia",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        5006711.7928,
                        18377.6005,
                        true,
                        new Dimension(788.3473),
                    new TextSymbol("inventore reiciendis ipsum",
                        new MapColor(52, 161, 124),
                        new MapColor(10, 47, 238),
                            new Dimension(595.6951),
                        new MapFont(new Dimension(385.5376),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            502.0379,
                        new MapColor(186, 154, 4),
                        new MapColor(227, 133, 145),
                            191.2464,
                        HorizontalAlignment.Left,
                            true,
                            731.0192,
                            new Dimension(969.0976),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("optio est commodi",
                        "distinctio",
                        ["itaque",
                            "veniam"],
                    [new FieldInfo("avatar",
                            "fugit",
                            "sapiente",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new TextPopupContent("qui mollitia optio"),
                    new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "ut",
                                "velit aliquam molestias"))],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "token",
                            "maxime eos illo",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("delectus illo nostrum",
                            "https://picsum.photos/640/480/?image=62",
                            "d5a140ec-2f11-4e8b-2f02-35afad689eba",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "iusto")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Show,
                    3222043.2459,
                    34633.7761,
                    0.9154,
                    true,
                    "cum fuga voluptas",
                    true,
                    "reprehenderit",
                new LayerFloorInfo("quis"),
                [new Label(LabelPlacement.BelowStart,
                        "repellat",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        362169.1983,
                        11549.9859,
                        true,
                        new Dimension(852.7364),
                    new TextSymbol("rerum saepe doloribus",
                        new MapColor(92, 96, 214),
                        new MapColor(85, 244, 220),
                            new Dimension(969.4306),
                        new MapFont(new Dimension(957.2239),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            294.1434,
                        new MapColor(156, 132, 132),
                        new MapColor(57, 110, 119),
                            274.0509,
                        HorizontalAlignment.Right,
                            true,
                            321.6351,
                            new Dimension(564.4581),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("sit quasi minus",
                        "alias",
                        ["ducimus",
                            "error"],
                    [new FieldInfo("id",
                            "occaecati",
                            "rem",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("createdAt",
                            "neque",
                            "et",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("name",
                            "maxime",
                            "ut",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("email",
                            "laudantium",
                            "aut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new MediaPopupContent("illum fugiat qui",
                            "repellat sit voluptatem quos nobis",
                        [new ColumnChartMediaInfo("eaque sint sed",
                                "earum",
                                "nam modi sint",
                            new ChartMediaInfoValue(["vel",
                                    "qui"],
                                    "dicta",
                                    "consequatur",
                                [new ChartMediaInfoValueSeries("category",
                                        "architecto",
                                        630.2131),
                                new ChartMediaInfoValueSeries("password",
                                        "voluptatem",
                                        331.0709),
                                new ChartMediaInfoValueSeries("group",
                                        "id",
                                        884.6255),
                                new ChartMediaInfoValueSeries("token",
                                        "cum",
                                        344.9415)],
                                [new MapColor(65, 208, 203),
                                new MapColor(65, 252, 9),
                                new MapColor(116, 218, 90),
                                new MapColor(243, 179, 144)])),
                        new ImageMediaInfo("provident doloribus quo",
                                "corrupti",
                                "temporibus mollitia quidem",
                            new ImageMediaInfoValue("https://tremayne.biz",
                                    "https://cleora.info"),
                                662.3716),
                        new ImageMediaInfo("quis cumque iusto",
                                "nisi",
                                "temporibus qui quis",
                            new ImageMediaInfoValue("http://arnold.com",
                                    "http://lavinia.info"),
                                445.4587),
                        new ColumnChartMediaInfo("consequuntur qui ea",
                                "voluptatem",
                                "eveniet architecto assumenda",
                            new ChartMediaInfoValue(["et",
                                    "suscipit",
                                    "officiis",
                                    "est"],
                                    "blanditiis",
                                    "illum",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "rerum",
                                        581.5827),
                                new ChartMediaInfoValueSeries("phone",
                                        "voluptatem",
                                        518.6616),
                                new ChartMediaInfoValueSeries("email",
                                        "id",
                                        600.9383)],
                                [new MapColor(217, 40, 120),
                                new MapColor(57, 222, 85),
                                new MapColor(129, 22, 225),
                                new MapColor(64, 70, 90)]))],
                            4),
                    new MediaPopupContent("sint explicabo quae",
                            "est nihil quae id ullam voluptatem",
                        [new ImageMediaInfo("veniam veniam eos",
                                "maxime",
                                "labore est dolor",
                            new ImageMediaInfoValue("https://dameon.info",
                                    "http://pat.org"),
                                789.8798),
                        new PieChartMediaInfo("quisquam illo quia",
                                "qui",
                                "vel ea ad",
                            new ChartMediaInfoValue(["qui",
                                    "aut",
                                    "ullam"],
                                    "est",
                                    "aut",
                                [new ChartMediaInfoValueSeries("password",
                                        "est",
                                        944.3942),
                                new ChartMediaInfoValueSeries("email",
                                        "reiciendis",
                                        958.2168),
                                new ChartMediaInfoValueSeries("title",
                                        "corporis",
                                        111.4296)],
                                [new MapColor(80, 43, 79),
                                new MapColor(32, 152, 169)])),
                        new ImageMediaInfo("alias et quasi",
                                "dicta",
                                "possimus voluptas odio",
                            new ImageMediaInfoValue("http://roy.info",
                                    "http://martina.org"),
                                484.8195)],
                            8),
                    new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "distinctio",
                                "aliquid reprehenderit suscipit"))],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "group",
                            "dolor et doloribus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "group",
                            "nisi ea quia",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("voluptatibus provident id",
                            "404f67c5-624d-927f-561e-dcafccc877dd",
                            () => { Console.WriteLine("consectetur"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "ullam"),
                    new ActionToggle("velit possimus qui",
                            "1ed2c9d7-892b-dc89-cba1-ec7df359485d",
                            () => { Console.WriteLine("odio"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "ex"),
                    new ActionButton("ut voluptatem natus",
                            "https://picsum.photos/640/480/?image=79",
                            "a17b36f7-91c7-afd8-5b2d-9a102f02cf36",
                            () => { Console.WriteLine("numquam"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "tempora"),
                    new ActionToggle("velit ut totam",
                            "163a67d8-9cc6-d304-3ba4-acb6424a658f",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "commodi")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-91.0165,
                    1.5899,
                    -12.7186,
                    27.7265,
                    161.4364,
                    413.2585,
                    398.0441,
                    458.4745,
                new SpatialReference(9,
                        "explicabo",
                        "dolores",
                        "natus"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(3,
                    true,
                    true,
                ListMode.Hide,
                    31587873.3577,
                    4124.6576,
                    0.4330,
                    true,
                    "nihil accusamus ex",
                    true,
                    "accusantium",
                new LayerFloorInfo("magnam"),
                [new Label(LabelPlacement.BelowLeft,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        28488205.0532,
                        41156.1410,
                        true,
                        new Dimension(280.2118),
                    new TextSymbol("est beatae sunt",
                        new MapColor(178, 122, 243),
                        new MapColor(148, 131, 109),
                            new Dimension(816.7109),
                        new MapFont(new Dimension(125.3976),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            731.8787,
                        new MapColor(18, 187, 4),
                        new MapColor(204, 215, 233),
                            639.4969,
                        HorizontalAlignment.Center,
                            true,
                            655.6519,
                            new Dimension(902.1465),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AboveAlong,
                        "sed",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        47914490.6448,
                        25412.9080,
                        true,
                        new Dimension(876.9731),
                    new TextSymbol("rerum dolore optio",
                        new MapColor(216, 173, 75),
                        new MapColor(178, 150, 149),
                            new Dimension(730.1149),
                        new MapFont(new Dimension(217.3021),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            332.7151,
                        new MapColor(11, 170, 207),
                        new MapColor(177, 16, 82),
                            492.7827,
                        HorizontalAlignment.Right,
                            true,
                            106.2287,
                            new Dimension(399.3250),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.AboveStart,
                        "cupiditate",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        45988403.3826,
                        33670.7953,
                        true,
                        new Dimension(544.6452),
                    new TextSymbol("nemo perferendis aut",
                        new MapColor(231, 143, 192),
                        new MapColor(242, 164, 15),
                            new Dimension(373.8597),
                        new MapFont(new Dimension(870.1062),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            527.8510,
                        new MapColor(10, 250, 40),
                        new MapColor(79, 117, 86),
                            147.9548,
                        HorizontalAlignment.Right,
                            true,
                            528.9079,
                            new Dimension(527.9720),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "officia",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        29456759.8866,
                        2693.7027,
                        true,
                        new Dimension(462.0061),
                    new TextSymbol("eum et dolorem",
                        new MapColor(158, 48, 252),
                        new MapColor(187, 40, 206),
                            new Dimension(668.9434),
                        new MapFont(new Dimension(810.9307),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            165.8425,
                        new MapColor(152, 153, 41),
                        new MapColor(139, 112, 52),
                            273.3707,
                        HorizontalAlignment.Left,
                            true,
                            659.3145,
                            new Dimension(55.4444),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("natus voluptatibus et",
                        "ducimus",
                        ["iste",
                            "ad",
                            "quo",
                            "illo"],
                    [new FieldInfo("token",
                            "quasi",
                            "sed",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("category",
                            "id",
                            "voluptas",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new FieldsPopupContent([new FieldInfo("token",
                                "dolore",
                                "ea",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("title",
                                "et",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("name",
                                "quo",
                                "cum",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("title",
                                "veritatis",
                                "omnis",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Var)],
                            "quia eos possimus non",
                            "consequatur nesciunt voluptate"),
                    new FieldsPopupContent([new FieldInfo("token",
                                "excepturi",
                                "id",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("title",
                                "molestiae",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("name",
                                "eius",
                                "et",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Min)],
                            "rerum itaque temporibus perferendis autem",
                            "quod cumque molestiae")],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "category",
                            "quis ab provident",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "createdAt",
                            "dolores id dolor",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "avatar",
                            "consequuntur iusto officia",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "password",
                            "at a veniam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("ab culpa quae",
                            "https://picsum.photos/640/480/?image=302",
                            "70bf4e96-d1f6-2b50-a53c-62b0b316f8ef",
                            () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "laborum"),
                    new ActionToggle("facere eum iure",
                            "43bf0aef-b6eb-f27f-c595-9a6718008f7e",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "sit")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    1396259.0753,
                    43134.3875,
                    0.7731,
                    true,
                    "adipisci sunt rem",
                    true,
                    "reiciendis",
                new LayerFloorInfo("vel"),
                [new Label(LabelPlacement.BelowLeft,
                        "nobis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        5128892.0935,
                        520.3208,
                        true,
                        new Dimension(433.3437),
                    new TextSymbol("eligendi aut animi",
                        new MapColor(158, 162, 86),
                        new MapColor(20, 42, 134),
                            new Dimension(385.9922),
                        new MapFont(new Dimension(74.2074),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            683.0755,
                        new MapColor(225, 139, 79),
                        new MapColor(29, 61, 47),
                            955.8336,
                        HorizontalAlignment.Right,
                            true,
                            864.1407,
                            new Dimension(219.0832),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.AboveCenter,
                        "non",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        49637288.6720,
                        5658.9821,
                        true,
                        new Dimension(39.2942),
                    new TextSymbol("voluptatibus quia repudiandae",
                        new MapColor(119, 24, 60),
                        new MapColor(152, 37, 113),
                            new Dimension(322.9150),
                        new MapFont(new Dimension(724.0478),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            65.9306,
                        new MapColor(206, 187, 165),
                        new MapColor(228, 102, 242),
                            830.5983,
                        HorizontalAlignment.Right,
                            true,
                            256.8069,
                            new Dimension(941.4130),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.BelowCenter,
                        "doloremque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        2603136.8736,
                        31810.9955,
                        true,
                        new Dimension(624.6731),
                    new TextSymbol("inventore ipsa magni",
                        new MapColor(229, 51, 154),
                        new MapColor(183, 250, 116),
                            new Dimension(100.1081),
                        new MapFont(new Dimension(382.6229),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            913.1405,
                        new MapColor(171, 106, 37),
                        new MapColor(35, 158, 70),
                            819.6909,
                        HorizontalAlignment.Center,
                            true,
                            605.4647,
                            new Dimension(859.8939),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.AboveAfter,
                        "enim",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        3943705.6639,
                        18394.5940,
                        true,
                        new Dimension(822.8382),
                    new TextSymbol("sed dolorum eligendi",
                        new MapColor(178, 112, 41),
                        new MapColor(56, 251, 121),
                            new Dimension(610.2820),
                        new MapFont(new Dimension(330.3916),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            54.3335,
                        new MapColor(3, 224, 248),
                        new MapColor(85, 74, 195),
                            836.7010,
                        HorizontalAlignment.Center,
                            true,
                            728.8766,
                            new Dimension(313.8846),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("enim sunt consequatur",
                        "et",
                        ["velit",
                            "praesentium",
                            "nostrum",
                            "commodi"],
                    [new FieldInfo("status",
                            "sint",
                            "dicta",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("status",
                            "eaque",
                            "est",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new MediaPopupContent("alias expedita ipsam",
                            "qui in sunt et",
                        [new PieChartMediaInfo("aut et eos",
                                "recusandae",
                                "rerum excepturi natus",
                            new ChartMediaInfoValue(["tempora",
                                    "qui"],
                                    "et",
                                    "ut",
                                [new ChartMediaInfoValueSeries("token",
                                        "est",
                                        261.4926)],
                                [new MapColor(186, 154, 228),
                                new MapColor(97, 201, 76),
                                new MapColor(181, 129, 38),
                                new MapColor(91, 225, 142)])),
                        new PieChartMediaInfo("debitis perferendis omnis",
                                "natus",
                                "voluptatem placeat et",
                            new ChartMediaInfoValue(["quia",
                                    "alias",
                                    "et",
                                    "harum"],
                                    "est",
                                    "explicabo",
                                [new ChartMediaInfoValueSeries("group",
                                        "rerum",
                                        507.1502),
                                new ChartMediaInfoValueSeries("createdAt",
                                        "rerum",
                                        95.3062),
                                new ChartMediaInfoValueSeries("group",
                                        "quis",
                                        144.9165),
                                new ChartMediaInfoValueSeries("token",
                                        "aut",
                                        468.0435)],
                                [new MapColor(126, 215, 32),
                                new MapColor(73, 144, 212),
                                new MapColor(83, 58, 95),
                                new MapColor(26, 133, 169)]))],
                            1),
                    new AttachmentsPopupContent("possimus est labore",
                            "dicta quam aut sunt ut cupiditate",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "phone",
                            "eligendi laboriosam nisi",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("dolores eum et",
                            "https://picsum.photos/640/480/?image=113",
                            "d8c6564f-f90a-1351-08ca-622e35dac989",
                            () => { Console.WriteLine("corporis"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "officiis"),
                    new ActionButton("excepturi eaque in",
                            "https://picsum.photos/640/480/?image=483",
                            "6ee49340-bf40-1c63-8ba5-7d3680e43ce3",
                            () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "saepe"),
                    new ActionButton("eos maiores ducimus",
                            "https://picsum.photos/640/480/?image=44",
                            "f0bbb960-56eb-ccc1-0b95-459ac1a30715",
                            () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "at")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Weeks,
                    619.2788);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2014, 9, 16, 16, 11, 54),
                    new DateTime(2015, 10, 10, 20, 23, 26));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
