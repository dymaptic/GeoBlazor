@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Plus)"
                        Dpi="@(582.2450)"
                        Effect="@(new Effect("facere",
                            35538914.8266))"
                        GdbVersion="@("9.4.0.0")"
                        ImageFormat="@(MapImageFormat.Gif)"
                        ImageMaxHeight="@(5)"
                        ImageMaxWidth="@(5)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(33913561.5193)"
                        MinScale="@(20923.7804)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(251.4328)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.4842)"
                        Copyright="@("ut")"
                        FullExtent="@(new Extent(58.4800,
                                81.9421,
                                -49.3512,
                                -80.6135,
                                696.8133,
                                629.9437,
                                159.8350,
                                626.5464,
                            new SpatialReference(8,
                                    "dignissimos",
                                    "nulla",
                                    "maiores"),
                                true,
                                true))"
                        Title="@("officia et vitae")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Decades)"
                            Value="@(754.1937)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("labore")"
                            EndField="@("ea")"
                            Stops="@([new DateTime(2002, 2, 21, 21, 28, 28),
                                new DateTime(2021, 2, 14, 21, 52, 19),
                                new DateTime(2003, 2, 1, 6, 32, 8),
                                new DateTime(2002, 5, 6, 3, 28, 10)])"
                            TimeZone="@("America/Regina")"
                            TrackIdField="@("voluptatem")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Centuries)"
                                Value="@(514.6500)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2006, 11, 20, 17, 38, 55))"
                                End="@(new DateTime(2022, 1, 15, 12, 39, 17))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2000, 5, 16, 17, 24, 57))"
                            End="@(new DateTime(2007, 5, 8, 0, 22, 37))">
                        </TimeExtent>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("molestias")"
                            ApiKey="@("est")"
                            AvgRating="@(500.9195)"
                            Categories="@(["non",
                                "accusamus",
                                "vel"])"
                            Created="@(new DateTime(2003, 2, 24, 16, 39, 50))"
                            Culture="@("quod")"
                            Description="@("sit est deleniti repellat excepturi")"
                            Extent="@(new Extent(53.9642,
                                    -75.7182,
                                    -29.7828,
                                    -65.0116,
                                    610.2302,
                                    595.8544,
                                    989.0988,
                                    227.6788,
                                new SpatialReference(4,
                                        "sint",
                                        "illo",
                                        "alias"),
                                    true,
                                    true))"
                            GroupCategories="@(["nobis",
                                "dolor"])"
                            LicenseInfo="@("est")"
                            Modified="@(new DateTime(2006, 4, 21, 18, 38, 15))"
                            Name="@("createdAt")"
                            NumComments="@(595.5494)"
                            NumRatings="@(859.8586)"
                            NumViews="@(378.4453)"
                            Owner="@("Florian Kling")"
                            OwnerFolder="@("Arch Little")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.Immediate,
                                    ["et",
                                        "quis",
                                        "id",
                                        "totam"],
                                    "nostrum",
                                    "nostrum",
                                    "voluptate",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("atque")"
                            Screenshots="@(["sit",
                                "omnis"])"
                            Size="@(7)"
                            Snippet="@("ullam")"
                            Tags="@(["et",
                                "facilis",
                                "ut"])"
                            Title="@("tempore et error")"
                            TypeKeywords="@(["esse",
                                "soluta",
                                "ipsa",
                                "nihil"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(9)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(38439302.5630)"
                            MinScale="@(36400.9476)"
                            Opacity="@(0.9604)"
                            PopupEnabled="@(true)"
                            Title="@("ut est minima")"
                            Visible="@(true)"
                            DefinitionExpression="@("vel")"
                            FloorInfo="@(new LayerFloorInfo("voluptatem"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowRight,
                                    "voluptatem",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    23244480.4612,
                                    9017.3210,
                                    true,
                                    new Dimension(604.9545),
                                new TextSymbol("incidunt rerum consequatur",
                                    new MapColor(60, 136, 206),
                                    new MapColor(31, 148, 149),
                                        new Dimension(647.4270),
                                    new MapFont(new Dimension(571.9126),
                                            "Arial",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.None),
                                        480.2215,
                                    new MapColor(25, 81, 103),
                                    new MapColor(61, 50, 149),
                                        356.0742,
                                    HorizontalAlignment.Center,
                                        true,
                                        462.3161,
                                        new Dimension(112.4631),
                                        true),
                                    true,
                                    "City = 'Toronto'")])"
                            PopupTemplate="@(new PopupTemplate("autem accusantium ut",
                                    "atque",
                                    ["eos",
                                        "placeat"],
                                [new FieldInfo("status",
                                        "suscipit",
                                        "sit",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("status",
                                        "dolor",
                                        "modi",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("comment",
                                        "placeat",
                                        "quibusdam",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.ShortDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("phone",
                                        "repellat",
                                        "autem",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new FieldsPopupContent([new FieldInfo("avatar",
                                            "repellendus",
                                            "officiis",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("title",
                                            "nihil",
                                            "sit",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("id",
                                            "impedit",
                                            "est",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateLeShortTime),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("status",
                                            "inventore",
                                            "accusantium",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.Year),
                                            true,
                                            true,
                                        StatisticType.Avg)],
                                        "adipisci ad quia et qui",
                                        "maxime eius nisi"),
                                new MediaPopupContent("aliquam incidunt quod",
                                        "pariatur architecto dolor alias sunt sequi",
                                    [new PieChartMediaInfo("omnis repudiandae quasi",
                                            "consectetur",
                                            "dicta beatae ut",
                                        new ChartMediaInfoValue(["delectus",
                                                "aut"],
                                                "doloribus",
                                                "minus",
                                            [new ChartMediaInfoValueSeries("token",
                                                    "nihil",
                                                    389.2720),
                                            new ChartMediaInfoValueSeries("createdAt",
                                                    "enim",
                                                    981.1216),
                                            new ChartMediaInfoValueSeries("email",
                                                    "eligendi",
                                                    243.1522),
                                            new ChartMediaInfoValueSeries("status",
                                                    "iste",
                                                    372.1365)],
                                            [new MapColor(23, 223, 236)]))],
                                        9),
                                new MediaPopupContent("ut adipisci iusto",
                                        "quia consequatur nesciunt ut fuga ratione",
                                    [new BarChartMediaInfo("suscipit cumque harum",
                                            "quidem",
                                            "itaque quia voluptatem",
                                        new ChartMediaInfoValue(["explicabo",
                                                "sapiente",
                                                "qui"],
                                                "sint",
                                                "nisi",
                                            [new ChartMediaInfoValueSeries("name",
                                                    "dolores",
                                                    402.0007),
                                            new ChartMediaInfoValueSeries("updatedAt",
                                                    "quasi",
                                                    84.7590),
                                            new ChartMediaInfoValueSeries("title",
                                                    "et",
                                                    309.7448)],
                                            [new MapColor(102, 242, 195),
                                            new MapColor(10, 213, 100),
                                            new MapColor(51, 65, 221)])),
                                    new LineChartMediaInfo("ut molestiae perferendis",
                                            "hic",
                                            "aliquid maxime tempora",
                                        new ChartMediaInfoValue(["optio",
                                                "eligendi"],
                                                "dolor",
                                                "culpa",
                                            [new ChartMediaInfoValueSeries("category",
                                                    "omnis",
                                                    584.9216)],
                                            [new MapColor(222, 134, 233),
                                            new MapColor(152, 70, 187),
                                            new MapColor(21, 220, 169)])),
                                    new LineChartMediaInfo("eos velit tenetur",
                                            "dolorum",
                                            "quo consequuntur similique",
                                        new ChartMediaInfoValue(["aperiam",
                                                "qui",
                                                "error"],
                                                "nihil",
                                                "dicta",
                                            [new ChartMediaInfoValueSeries("email",
                                                    "voluptas",
                                                    967.6338),
                                            new ChartMediaInfoValueSeries("category",
                                                    "et",
                                                    632.4269),
                                            new ChartMediaInfoValueSeries("email",
                                                    "nulla",
                                                    203.4603)],
                                            [new MapColor(233, 143, 21)])),
                                    new ColumnChartMediaInfo("earum labore quaerat",
                                            "itaque",
                                            "laboriosam animi quo",
                                        new ChartMediaInfoValue(["quis",
                                                "qui",
                                                "non"],
                                                "est",
                                                "eveniet",
                                            [new ChartMediaInfoValueSeries("status",
                                                    "deleniti",
                                                    168.6780),
                                            new ChartMediaInfoValueSeries("title",
                                                    "velit",
                                                    959.7751),
                                            new ChartMediaInfoValueSeries("updatedAt",
                                                    "voluptate",
                                                    848.1649),
                                            new ChartMediaInfoValueSeries("id",
                                                    "deleniti",
                                                    46.3330)],
                                            [new MapColor(245, 73, 223),
                                            new MapColor(31, 231, 13)]))],
                                        5)],
                                [new ExpressionInfo("return $feature.Name;",
                                        "group",
                                        "magni eveniet velit",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "createdAt",
                                        "repellendus qui maxime",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("aut voluptate est",
                                        "https://picsum.photos/640/480/?image=462",
                                        "62ac881d-77a0-bc63-4288-e578cb01ffe4",
                                        () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "sunt"),
                                new ActionToggle("dolor et eos",
                                        "81d28fbd-aaa5-fa7f-74de-00a7c2e6159a",
                                        () => { Console.WriteLine("mollitia"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "title",
                                        "et"),
                                new ActionButton("assumenda provident dicta",
                                        "https://picsum.photos/640/480/?image=333",
                                        "48613766-f8a5-c417-d719-db05535b41ba",
                                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                        "comment",
                                        true,
                                        true,
                                        true,
                                        "voluptatem")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.Quantile,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(227, 58, 183),
                                        new MapColor(179, 20, 155)),
                                        95.7222,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(514.7529,
                                                358.3034)],
                                            "numquam",
                                            "qui",
                                            "non"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(374.2695,
                                                600.1757),
                                        new AuthoringInfoField1ClassBreakInfos(771.8805,
                                                761.6240),
                                        new AuthoringInfoField1ClassBreakInfos(306.5045,
                                                625.3327)],
                                            "enim",
                                            "vel",
                                            "alias"),
                                        ["veritatis",
                                            "commodi",
                                            "dolor",
                                            "et"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "enim",
                                        true,
                                    LengthUnit.Decimeters,
                                        819.6138,
                                        969.7650,
                                        42.1318,
                                        679.6143),
                                new PictureFillSymbol("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0",
                                    new Dimension(738.2661),
                                    new Dimension(787.4659),
                                    new Dimension(112.1615),
                                    new Dimension(659.7510),
                                    167.6823,
                                    23.0135,
                                    new Outline(new MapColor(42, 173, 10),
                                        new Dimension(932.5959),
                                        SimpleLineSymbolStyle.None,
                                        Cap.Round,
                                        Join.Round,
                                        new LineSymbolMarker(new MapColor(127, 210, 81),
                                            LinePlacement.Begin,
                                            LineSymbolMarkerStyle.Square),
                                        192.8138),
                                    new MapColor(76, 237, 209)),
                                    "excepturi",
                                    new DefaultSymbol(),
                                    "magnam",
                                    "velit",
                                    "vel",
                                    "quisquam",
                                new UniqueValueRendererLegendOptions("sed voluptatem autem"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("accusantium",
                                        new TextSymbol("qui eius rem",
                                            new MapColor(12, 242, 222),
                                            new MapColor(126, 52, 159),
                                                new Dimension(500.5420),
                                            new MapFont(new Dimension(286.3822),
                                                    "Helvetica",
                                                MapFontStyle.Normal,
                                                FontWeight.Bolder,
                                                TextDecoration.Underline),
                                                306.3372,
                                            new MapColor(0, 179, 100),
                                            new MapColor(204, 21, 212),
                                                548.6468,
                                            HorizontalAlignment.Left,
                                                true,
                                                142.6851,
                                                new Dimension(498.3155),
                                                true),
                                        [new UniqueValue("cum",
                                                "et",
                                                "rem"),
                                        new UniqueValue("nihil",
                                                "iusto",
                                                "enim")]),
                                    new UniqueValueClass("esse",
                                        new TextSymbol("dolore id sunt",
                                            new MapColor(90, 121, 253),
                                            new MapColor(219, 151, 102),
                                                new Dimension(679.0214),
                                            new MapFont(new Dimension(293.0317),
                                                    "Verdana",
                                                MapFontStyle.Normal,
                                                FontWeight.Bolder,
                                                TextDecoration.LineThrough),
                                                0.8673,
                                            new MapColor(169, 210, 6),
                                            new MapColor(15, 62, 195),
                                                105.9882,
                                            HorizontalAlignment.Left,
                                                true,
                                                576.0222,
                                                new Dimension(92.8438),
                                                true),
                                        [new UniqueValue("eos",
                                                "et",
                                                "et"),
                                        new UniqueValue("incidunt",
                                                "dicta",
                                                "quos"),
                                        new UniqueValue("molestiae",
                                                "aut",
                                                "magnam"),
                                        new UniqueValue("dolorem",
                                                "atque",
                                                "in")])],
                                        "sapiente"),
                                new UniqueValueGroup([new UniqueValueClass("est",
                                        new TextSymbol("voluptatem molestiae dignissimos",
                                            new MapColor(216, 16, 201),
                                            new MapColor(69, 174, 157),
                                                new Dimension(623.4692),
                                            new MapFont(new Dimension(895.0609),
                                                    "Garamond",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.LineThrough),
                                                133.9377,
                                            new MapColor(162, 154, 55),
                                            new MapColor(98, 127, 103),
                                                239.4714,
                                            HorizontalAlignment.Center,
                                                true,
                                                167.7871,
                                                new Dimension(8.6012),
                                                true),
                                        [new UniqueValue("ut",
                                                "aliquam",
                                                "perspiciatis"),
                                        new UniqueValue("reprehenderit",
                                                "fugiat",
                                                "sit")])],
                                        "a"),
                                new UniqueValueGroup([new UniqueValueClass("laborum",
                                        new TextSymbol("temporibus ullam fugiat",
                                            new MapColor(158, 47, 49),
                                            new MapColor(31, 108, 104),
                                                new Dimension(218.3280),
                                            new MapFont(new Dimension(274.3785),
                                                    "Times New Roman",
                                                MapFontStyle.Italic,
                                                FontWeight.Lighter,
                                                TextDecoration.LineThrough),
                                                547.3702,
                                            new MapColor(179, 233, 241),
                                            new MapColor(113, 254, 119),
                                                147.5981,
                                            HorizontalAlignment.Center,
                                                true,
                                                154.1502,
                                                new Dimension(157.1122),
                                                true),
                                        [new UniqueValue("rerum",
                                                "voluptatem",
                                                "enim"),
                                        new UniqueValue("dolores",
                                                "adipisci",
                                                "qui"),
                                        new UniqueValue("sint",
                                                "voluptas",
                                                "explicabo")])],
                                        "quia"),
                                new UniqueValueGroup([new UniqueValueClass("quia",
                                        new TextSymbol("facere quia aliquid",
                                            new MapColor(177, 191, 243),
                                            new MapColor(18, 6, 87),
                                                new Dimension(465.0937),
                                            new MapFont(new Dimension(323.5410),
                                                    "Bookman",
                                                MapFontStyle.Normal,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                994.5210,
                                            new MapColor(244, 40, 182),
                                            new MapColor(47, 78, 239),
                                                586.8497,
                                            HorizontalAlignment.Right,
                                                true,
                                                887.7103,
                                                new Dimension(577.1619),
                                                true),
                                        [new UniqueValue("harum",
                                                "non",
                                                "sed"),
                                        new UniqueValue("eum",
                                                "tenetur",
                                                "odio")])],
                                        "sit")],
                                [new UniqueValueInfo("et",
                                    new TextSymbol("aut inventore modi",
                                        new MapColor(91, 81, 103),
                                        new MapColor(42, 119, 140),
                                            new Dimension(974.9361),
                                        new MapFont(new Dimension(490.7237),
                                                "Verdana",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.Underline),
                                            470.3637,
                                        new MapColor(179, 50, 8),
                                        new MapColor(118, 94, 210),
                                            130.5255,
                                        HorizontalAlignment.Right,
                                            true,
                                            834.2159,
                                            new Dimension(837.0610),
                                            true),
                                        "consequatur")],
                                    "repudiandae",
                                    "omnis nihil ipsa"))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(4)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(20974822.8686)"
                                MinScale="@(25847.9446)"
                                Opacity="@(0.2113)"
                                PopupEnabled="@(true)"
                                Title="@("voluptatem nihil iure")"
                                Visible="@(true)"
                                DefinitionExpression="@("ullam")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(1)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(34375470.9536)"
                                    MinScale="@(25100.5199)"
                                    Opacity="@(0.8997)"
                                    PopupEnabled="@(true)"
                                    Title="@("sed rem at")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("consectetur")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(4)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(29555711.7406)"
                                        MinScale="@(1609.2301)"
                                        Opacity="@(0.1278)"
                                        PopupEnabled="@(true)"
                                        Title="@("odio autem dolores")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("et")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(6)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(5129788.8756)"
                                            MinScale="@(17561.6494)"
                                            Opacity="@(0.0911)"
                                            PopupEnabled="@(true)"
                                            Title="@("sit qui magnam")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("eum")"
                                            Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(1)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(32783008.6505)"
                                                MinScale="@(22416.7237)"
                                                Opacity="@(0.8415)"
                                                PopupEnabled="@(true)"
                                                Title="@("hic perspiciatis velit")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("nesciunt")"
                                                Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                                <Sublayer 
                                                    SublayerId="@(6)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(26240244.6048)"
                                                    MinScale="@(23230.0666)"
                                                    Opacity="@(0.5827)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("velit quidem quisquam")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("maiores")"
                                                    Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("omnis hic natus")"
                                                        StringContent="@("autem")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("non")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("nobis hic aspernatur")"
                                                    StringContent="@("sit")"
                                                    OutFields="@(["ipsum",
                                                        "voluptas",
                                                        "tempore",
                                                        "minima"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new TextPopupContent(),
                                                    new ExpressionPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "30b7f532-ae7d-11cd-a773-a03cc35f0382",
                                                            () => { Console.WriteLine("delectus"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "393a95b6-662c-5fc4-2c37-ac81cc37335f",
                                                            () => { Console.WriteLine("natus"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveAlong)"
                                                    LabelExpression="@("itaque")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(23138742.0286)"
                                                    MinScale="@(34457.2713)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(325.5496))"
                                                    Symbol="@(new TextSymbol("quia praesentium impedit"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("PostalCode = 'M5V 1J9'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("perspiciatis")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                    new MultipartColorRamp(),
                                                        924.5565,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["architecto",
                                                            "in"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "distinctio",
                                                        true,
                                                    LengthUnit.Yards,
                                                        537.9231,
                                                        993.8930,
                                                        626.9079,
                                                        499.7857))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("rerum necessitatibus explicabo")"
                                                StringContent="@("dignissimos")"
                                                OutFields="@(["facilis",
                                                    "qui"])"
                                                FieldInfos="@([new FieldInfo("id",
                                                        "alias",
                                                        "facilis",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max),
                                                new FieldInfo("title",
                                                        "provident",
                                                        "reprehenderit",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)])"
                                                Content="@([new MediaPopupContent("non aspernatur qui",
                                                        "aspernatur ut commodi blanditiis",
                                                    [new PieChartMediaInfo(),
                                                    new LineChartMediaInfo()],
                                                        6),
                                                new TextPopupContent("veniam et ut")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "token",
                                                        "corrupti sed quia"),
                                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "token",
                                                        "non et reiciendis"),
                                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "title",
                                                        "adipisci impedit qui"),
                                                new ExpressionInfo("return $feature['FieldName'];",
                                                        "status",
                                                        "rerum voluptatem harum")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("minus consequuntur accusamus",
                                                        "https://picsum.photos/640/480/?image=447",
                                                        "2a488322-8efb-fb96-5d4d-6149878cbfff",
                                                        () => { Console.WriteLine("laudantium"); return Task.CompletedTask; },
                                                        "id",
                                                        true,
                                                        true,
                                                        true,
                                                        "placeat"),
                                                new ActionButton("debitis porro ab",
                                                        "https://picsum.photos/640/480/?image=424",
                                                        "e6b0e81a-090a-a1d4-0fe2-81803c0af730",
                                                        () => { Console.WriteLine("quos"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "autem"),
                                                new ActionButton("beatae nemo est",
                                                        "https://picsum.photos/640/480/?image=724",
                                                        "46eb4dd6-0347-58d4-8c5d-3243a99414f2",
                                                        () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                                        "name",
                                                        true,
                                                        true,
                                                        true,
                                                        "quod")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterLeft)"
                                                LabelExpression="@("eos")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(44527555.6975)"
                                                MinScale="@(9403.8419)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(463.2712))"
                                                Symbol="@(new TextSymbol("corrupti sit blanditiis",
                                                    new MapColor(25, 26, 204),
                                                    new MapColor(204, 125, 88),
                                                        null,
                                                    new MapFont(),
                                                        980.7119,
                                                    new MapColor(225, 53, 145),
                                                    new MapColor(204, 124, 67),
                                                        767.8069,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        753.0093,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("1 = 1")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quo")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch)]),
                                                    214.9187,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "qui",
                                                        "omnis",
                                                        "in"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "numquam",
                                                        "eveniet",
                                                        "reprehenderit"),
                                                    ["exercitationem",
                                                        "debitis"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "eligendi",
                                                    true,
                                                LengthUnit.Meters,
                                                    964.7790,
                                                    760.2079,
                                                    689.9620,
                                                    368.1941))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("omnis et voluptatem")"
                                            StringContent="@("asperiores")"
                                            OutFields="@(["eum",
                                                "consectetur",
                                                "molestiae"])"
                                            FieldInfos="@([new FieldInfo("category",
                                                    "reiciendis",
                                                    "minus",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.LongDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Count)])"
                                            Content="@([new AttachmentsPopupContent("possimus et eaque",
                                                    "praesentium ut est eum voluptatem rem",
                                                    AttachmentsPopupContentDisplayType.Preview),
                                            new AttachmentsPopupContent("ratione explicabo id",
                                                    "debitis commodi sequi aut et",
                                                    AttachmentsPopupContentDisplayType.Preview)])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                    "status",
                                                    "et maiores voluptas",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "password",
                                                    "commodi rerum autem",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "title",
                                                    "qui recusandae adipisci",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("deserunt pariatur eum",
                                                    "acecde9e-f662-980b-cffa-2206a9989b37",
                                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "status",
                                                    "vitae"),
                                            new ActionButton("et et recusandae",
                                                    "https://picsum.photos/640/480/?image=482",
                                                    "66281e80-a1f3-07ec-f051-469057f6daf0",
                                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                    "updatedAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "impedit"),
                                            new ActionButton("debitis natus ipsam",
                                                    "https://picsum.photos/640/480/?image=38",
                                                    "fe74447d-d8ea-773e-4bc9-57abb8252840",
                                                    () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                                    "createdAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "quibusdam")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AlwaysHorizontal)"
                                            LabelExpression="@("cupiditate")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(35568537.9673)"
                                            MinScale="@(17692.4782)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(565.2722))"
                                            Symbol="@(new TextSymbol("deserunt eligendi possimus",
                                                new MapColor(50, 232, 187),
                                                new MapColor(201, 18, 89),
                                                    new Dimension(548.8781),
                                                new MapFont(new Dimension(31.5170),
                                                        "Times New Roman",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Lighter,
                                                    TextDecoration.LineThrough),
                                                    506.0317,
                                                new MapColor(213, 151, 1),
                                                new MapColor(24, 148, 190),
                                                    30.8905,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    592.6528,
                                                    new Dimension(950.4325),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Name = 'John Doe'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("consequuntur")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(215, 134, 241),
                                                new MapColor(71, 99, 30)),
                                                422.5451,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(481.1769,
                                                        983.7814),
                                                new AuthoringInfoField1ClassBreakInfos(765.8144,
                                                        934.2699),
                                                new AuthoringInfoField1ClassBreakInfos(137.0390,
                                                        57.6577)],
                                                    "aut",
                                                    "incidunt",
                                                    "earum"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(461.2134,
                                                        653.0318)],
                                                    "dicta",
                                                    "et",
                                                    "sint"),
                                                ["omnis",
                                                    "sint",
                                                    "est",
                                                    "tempora"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "sint",
                                                true,
                                            LengthUnit.Meters,
                                                975.8402,
                                                582.1303,
                                                636.2983,
                                                14.0864))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("consequatur voluptas ex")"
                                        StringContent="@("sequi")"
                                        OutFields="@(["necessitatibus",
                                            "dolorem",
                                            "rerum",
                                            "qui"])"
                                        FieldInfos="@([new FieldInfo("name",
                                                "consequuntur",
                                                "animi",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDate),
                                                true,
                                                true,
                                            StatisticType.Sum)])"
                                        Content="@([new TextPopupContent("similique dolor cumque"),
                                        new TextPopupContent("beatae animi officia"),
                                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "perspiciatis",
                                                    "dolorem est a")),
                                        new FieldsPopupContent([new FieldInfo("id",
                                                    "illum",
                                                    "animi",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.LongDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("email",
                                                    "impedit",
                                                    "asperiores",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.LongMonthDayYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("name",
                                                    "adipisci",
                                                    "nobis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Var)],
                                                "quis ex blanditiis consequuntur eum voluptatem ullam",
                                                "voluptas aut fugit")])"
                                        ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "title",
                                                "aut unde nobis",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Name;",
                                                "phone",
                                                "unde in fuga",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "updatedAt",
                                                "temporibus est eveniet",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("deleniti voluptatem tempore",
                                                "9a3d72c2-a568-37f5-61f9-77805bc1b10c",
                                                () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "avatar",
                                                "molestiae"),
                                        new ActionToggle("error earum fugiat",
                                                "a18ca6dd-368c-7cc7-a29a-117dd9a38e68",
                                                () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "category",
                                                "aspernatur"),
                                        new ActionToggle("ut doloribus eligendi",
                                                "d33711f4-3863-8f2d-fe71-d2975930a982",
                                                () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "comment",
                                                "odit"),
                                        new ActionToggle("recusandae eos at",
                                                "07a3eb62-2b25-e22d-4f63-ee2c95532750",
                                                () => { Console.WriteLine("maxime"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "token",
                                                "perferendis")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterRight)"
                                        LabelExpression="@("eveniet")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(7560846.4855)"
                                        MinScale="@(4924.8679)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(402.7912))"
                                        Symbol="@(new TextSymbol("dolor esse quae",
                                            new MapColor(53, 78, 139),
                                            new MapColor(87, 214, 6),
                                                new Dimension(784.6382),
                                            new MapFont(new Dimension(314.9529),
                                                    "Helvetica",
                                                MapFontStyle.Normal,
                                                FontWeight.Bolder,
                                                TextDecoration.Underline),
                                                304.0727,
                                            new MapColor(47, 173, 105),
                                            new MapColor(122, 97, 176),
                                                759.8106,
                                            HorizontalAlignment.Right,
                                                true,
                                                777.1080,
                                                new Dimension(670.4939),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("1 = 1")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("neque")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(108, 109, 30),
                                            new MapColor(4, 237, 176)),
                                            810.3580,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(50.5176,
                                                    978.5478)],
                                                "facilis",
                                                "quidem",
                                                "voluptas"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(165.9602,
                                                    254.1696),
                                            new AuthoringInfoField1ClassBreakInfos(691.5712,
                                                    688.3660),
                                            new AuthoringInfoField1ClassBreakInfos(515.6838,
                                                    7.4108),
                                            new AuthoringInfoField1ClassBreakInfos(414.5164,
                                                    533.1400)],
                                                "ab",
                                                "laborum",
                                                "quam"),
                                            ["id",
                                                "est",
                                                "sint"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "voluptas",
                                            true,
                                        LengthUnit.Millimeters,
                                            315.3262,
                                            777.3807,
                                            57.4104,
                                            340.1038))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("ut reiciendis praesentium")"
                                    StringContent="@("voluptates")"
                                    OutFields="@(["ex",
                                        "numquam"])"
                                    FieldInfos="@([new FieldInfo("group",
                                            "iste",
                                            "quo",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("category",
                                            "non",
                                            "consequatur",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortDateLeLongTime),
                                            true,
                                            true,
                                        StatisticType.Stddev)])"
                                    Content="@([new FieldsPopupContent([new FieldInfo("updatedAt",
                                                "molestiae",
                                                "aut",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.ShortDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("comment",
                                                "ea",
                                                "eveniet",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("createdAt",
                                                "perspiciatis",
                                                "occaecati",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongMonthDayYear),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                            "natus laborum voluptas eum",
                                            "pariatur eaque labore"),
                                    new TextPopupContent("in consequatur doloremque"),
                                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                                "sapiente",
                                                "nulla voluptatum ex"))])"
                                    ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "category",
                                            "corporis sit suscipit",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "password",
                                            "et quo eaque",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("reiciendis dicta dolorem",
                                            "6f262016-26be-2c45-87ed-5d4cfa38cec1",
                                            () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "password",
                                            "et")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowCenter)"
                                    LabelExpression="@("pariatur")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(43128134.1365)"
                                    MinScale="@(19442.6154)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(997.0760))"
                                    Symbol="@(new TextSymbol("sit sint rerum",
                                        new MapColor(170, 240, 220),
                                        new MapColor(46, 211, 116),
                                            new Dimension(992.5028),
                                        new MapFont(new Dimension(855.4236),
                                                "Verdana",
                                            MapFontStyle.Normal,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            833.9376,
                                        new MapColor(168, 176, 231),
                                        new MapColor(221, 33, 243),
                                            316.2606,
                                        HorizontalAlignment.Left,
                                            true,
                                            459.6632,
                                            new Dimension(900.5507),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("City = 'Toronto'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("a")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-173.2098,
                    175.2245,
                    42.6023,
                    -29.6869,
                    363.8390,
                    432.8479,
                    857.5434,
                    280.7146,
                new SpatialReference(3,
                        "commodi",
                        "velit",
                        "quidem"),
                    true,
                    true),
                6,
                4,
            new MapImageLayerCreateExportImageParametersOptions(281.7734,
                    312.9898,
                    "vel"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-25.5967,
                    -82.3521,
                    81.3529,
                    -60.6264,
                    976.3026,
                    935.4138,
                    111.5002,
                    143.8914,
                new SpatialReference(2,
                        "veritatis",
                        "omnis",
                        "pariatur"),
                    true,
                    true),
                1,
                2,
            new MapImageLayerFetchImageOptions(349.2320,
                    143.3465,
                    "dolorem"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "consequuntur",
                    "deserunt",
                    796.3327,
                    ["magnam",
                        "sed",
                        "sed",
                        "animi"],
                    new DateTime(2005, 10, 19, 7, 39, 6),
                    "ut",
                    "qui dolor quisquam aliquam sunt",
                new Extent(-65.9674,
                        -96.5517,
                        -30.8251,
                        24.7071,
                        319.0845,
                        688.8117,
                        908.8045,
                        498.0113,
                    new SpatialReference(5,
                            "vel",
                            "maiores",
                            "eius"),
                        true,
                        true),
                    ["excepturi",
                        "eveniet",
                        "quo",
                        "autem"],
                    "velit",
                    new DateTime(2011, 4, 2, 16, 19, 57),
                    "id",
                    766.4730);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Plus;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2012, 10, 26, 19, 22, 42),
                    new DateTime(2011, 9, 2, 6, 4, 44));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("ut",
                    "neque",
                new TimeExtent(new DateTime(2011, 2, 12, 20, 16, 44),
                        new DateTime(2009, 1, 18, 17, 54, 40)),
                new TimeInterval(TemporalTime.Weeks,
                        733.7670),
                    [new DateTime(2023, 3, 16, 2, 0, 22),
                        new DateTime(2020, 8, 7, 19, 58, 3),
                        new DateTime(2010, 5, 18, 9, 46, 21),
                        new DateTime(2004, 1, 26, 17, 42, 9)],
                    "America/St_Johns",
                    "aut");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(7,
                    true,
                    true,
                ListMode.Show,
                    1928781.4591,
                    40419.7719,
                    0.8786,
                    true,
                    "ipsum ab vero",
                    true,
                    "non",
                new LayerFloorInfo("suscipit"),
                [new Label(LabelPlacement.CenterEnd,
                        "tempore",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        6957134.1907,
                        4125.4021,
                        true,
                        new Dimension(699.1231),
                    new TextSymbol("at dolorem hic",
                        new MapColor(71, 88, 207),
                        new MapColor(86, 86, 7),
                            new Dimension(255.2135),
                        new MapFont(new Dimension(164.0794),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            333.9976,
                        new MapColor(137, 118, 62),
                        new MapColor(4, 84, 144),
                            918.5218,
                        HorizontalAlignment.Center,
                            true,
                            190.7881,
                            new Dimension(289.5124),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("ducimus autem id",
                        "laboriosam",
                        ["sint",
                            "placeat"],
                    [new FieldInfo("createdAt",
                            "qui",
                            "molestiae",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("createdAt",
                            "porro",
                            "occaecati",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new AttachmentsPopupContent("harum nam ab",
                            "ut perspiciatis odit pariatur",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("officiis nobis temporibus"),
                    new FieldsPopupContent([new FieldInfo("title",
                                "omnis",
                                "unde",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("status",
                                "velit",
                                "vel",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("updatedAt",
                                "est",
                                "quia",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Stddev)],
                            "quam quia consequatur et eos omnis aliquam",
                            "autem provident et")],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "name",
                            "iusto sed laboriosam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "id",
                            "saepe ut necessitatibus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "updatedAt",
                            "est odit qui",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("minima vel vitae",
                            "https://picsum.photos/640/480/?image=433",
                            "ae0f5ef2-1da7-f213-7c57-1a2fffecc318",
                            () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "qui"),
                    new ActionButton("ut qui et",
                            "https://picsum.photos/640/480/?image=928",
                            "8a5bd0a6-e1a5-2476-0744-883022ba96c9",
                            () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "impedit")])),
            new Sublayer(1,
                    true,
                    true,
                ListMode.Show,
                    22005437.1600,
                    49262.4322,
                    0.8983,
                    true,
                    "quidem iure in",
                    true,
                    "pariatur",
                new LayerFloorInfo("atque"),
                [new Label(LabelPlacement.BelowBefore,
                        "possimus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        44096159.7894,
                        49261.9833,
                        true,
                        new Dimension(131.4280),
                    new TextSymbol("consequatur magni ut",
                        new MapColor(61, 207, 99),
                        new MapColor(234, 95, 122),
                            new Dimension(586.3193),
                        new MapFont(new Dimension(432.5859),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            901.9432,
                        new MapColor(135, 172, 46),
                        new MapColor(78, 26, 165),
                            954.1080,
                        HorizontalAlignment.Left,
                            true,
                            254.2862,
                            new Dimension(983.6959),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("dolorem deleniti dolor",
                        "nihil",
                        ["at",
                            "dicta"],
                    [new FieldInfo("avatar",
                            "enim",
                            "et",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("title",
                            "libero",
                            "corporis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("name",
                            "qui",
                            "officia",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("id",
                            "esse",
                            "omnis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new AttachmentsPopupContent("consequatur et suscipit",
                            "veritatis ut laborum et incidunt doloribus debitis",
                            AttachmentsPopupContentDisplayType.Preview),
                    new TextPopupContent("rerum error blanditiis")],
                    [new ExpressionInfo("return $feature.Name;",
                            "comment",
                            "veritatis quo suscipit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "category",
                            "dolores omnis omnis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "token",
                            "nihil quia ipsum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "avatar",
                            "quo temporibus neque",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("eaque omnis illo",
                            "26e0b2f1-97c3-292e-35ef-b67d5cd2c89a",
                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "repellendus"),
                    new ActionButton("deleniti sint rerum",
                            "https://picsum.photos/640/480/?image=315",
                            "dd2bb5fa-bb60-01c6-2424-b384d6473b4d",
                            () => { Console.WriteLine("itaque"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "enim")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    24715368.8810,
                    5611.2844,
                    0.4487,
                    true,
                    "minus aut eligendi",
                    true,
                    "alias",
                new LayerFloorInfo("voluptate"),
                [new Label(LabelPlacement.AboveRight,
                        "id",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        44789265.9305,
                        41972.5211,
                        true,
                        new Dimension(845.3043),
                    new TextSymbol("animi iure doloribus",
                        new MapColor(153, 72, 58),
                        new MapColor(205, 7, 9),
                            new Dimension(12.1188),
                        new MapFont(new Dimension(884.5129),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            156.5818,
                        new MapColor(181, 188, 29),
                        new MapColor(234, 215, 118),
                            653.2413,
                        HorizontalAlignment.Left,
                            true,
                            699.5792,
                            new Dimension(275.2989),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.BelowRight,
                        "eos",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        7914565.7349,
                        253.0551,
                        true,
                        new Dimension(264.0504),
                    new TextSymbol("quo dolor vel",
                        new MapColor(68, 86, 59),
                        new MapColor(182, 198, 177),
                            new Dimension(130.6549),
                        new MapFont(new Dimension(820.1910),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            949.9546,
                        new MapColor(32, 168, 27),
                        new MapColor(229, 19, 102),
                            407.5042,
                        HorizontalAlignment.Left,
                            true,
                            490.0294,
                            new Dimension(736.2869),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.CenterStart,
                        "delectus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        27944402.4691,
                        37631.4469,
                        true,
                        new Dimension(472.0884),
                    new TextSymbol("cumque voluptas est",
                        new MapColor(208, 72, 147),
                        new MapColor(71, 58, 210),
                            new Dimension(253.0845),
                        new MapFont(new Dimension(73.1777),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            608.3170,
                        new MapColor(156, 123, 14),
                        new MapColor(151, 48, 185),
                            628.9311,
                        HorizontalAlignment.Right,
                            true,
                            702.3949,
                            new Dimension(294.0302),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AboveCenter,
                        "tempore",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        22793030.0838,
                        10602.4453,
                        true,
                        new Dimension(2.4590),
                    new TextSymbol("ut ut necessitatibus",
                        new MapColor(106, 69, 143),
                        new MapColor(23, 76, 94),
                            new Dimension(206.0836),
                        new MapFont(new Dimension(152.1955),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            913.6272,
                        new MapColor(142, 64, 49),
                        new MapColor(68, 169, 131),
                            520.0006,
                        HorizontalAlignment.Left,
                            true,
                            49.3637,
                            new Dimension(765.7742),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("sequi ut enim",
                        "maxime",
                        ["iusto",
                            "rerum",
                            "in"],
                    [new FieldInfo("email",
                            "sit",
                            "quis",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("token",
                            "saepe",
                            "rerum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("comment",
                            "velit",
                            "illum",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("updatedAt",
                            "sint",
                            "quidem",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new TextPopupContent("consequatur numquam et"),
                    new RelationshipPopupContent("quam illo ut",
                            "neque consequatur ipsum illum",
                            6,
                            "laborum",
                        [new RelatedRecordsInfoFieldOrder("error",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("ducimus",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("inventore",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("voluptas",
                            OrderBy.Asc)],
                            6),
                    new AttachmentsPopupContent("tempore hic quibusdam",
                            "harum distinctio nemo qui autem",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "createdAt",
                            "quibusdam et minima",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "avatar",
                            "libero et reiciendis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "phone",
                            "sit vel aut",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "id",
                            "aliquam pariatur quia",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("cumque dolor quisquam",
                            "33da9839-968f-8a14-55be-96561115438f",
                            () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "et"),
                    new ActionToggle("et qui praesentium",
                            "2c394288-f2c5-0e30-0d9e-f61b54f76426",
                            () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "est"),
                    new ActionToggle("nostrum quis qui",
                            "62184c3f-45a1-1dc4-f1bb-4915562352a7",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "neque"),
                    new ActionButton("id incidunt amet",
                            "https://picsum.photos/640/480/?image=235",
                            "54ad30d5-2cb2-9940-aca7-6dc417741f2b",
                            () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "eum")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-164.2029,
                    43.8615,
                    29.0325,
                    21.9803,
                    552.6649,
                    118.1387,
                    28.8048,
                    164.0909,
                new SpatialReference(3,
                        "ex",
                        "consequatur",
                        "enim"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    15806573.3615,
                    1343.3358,
                    0.1329,
                    true,
                    "ut eveniet et",
                    true,
                    "dolor",
                new LayerFloorInfo("fuga"),
                [new Label(LabelPlacement.BelowAlong,
                        "ab",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        34329921.5957,
                        9100.4230,
                        true,
                        new Dimension(577.9006),
                    new TextSymbol("corrupti fuga veniam",
                        new MapColor(228, 185, 145),
                        new MapColor(166, 113, 93),
                            new Dimension(354.2127),
                        new MapFont(new Dimension(760.0763),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            355.0433,
                        new MapColor(76, 92, 74),
                        new MapColor(77, 189, 36),
                            781.9876,
                        HorizontalAlignment.Right,
                            true,
                            96.2952,
                            new Dimension(932.6517),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.CenterAlong,
                        "velit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        26130737.0484,
                        33755.6968,
                        true,
                        new Dimension(767.8435),
                    new TextSymbol("quas consequuntur sint",
                        new MapColor(195, 38, 75),
                        new MapColor(14, 35, 17),
                            new Dimension(220.1615),
                        new MapFont(new Dimension(749.9491),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            769.0217,
                        new MapColor(109, 190, 51),
                        new MapColor(170, 69, 161),
                            571.3429,
                        HorizontalAlignment.Center,
                            true,
                            999.9344,
                            new Dimension(878.8974),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.AboveAlong,
                        "sed",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        32990012.2264,
                        43459.8151,
                        true,
                        new Dimension(864.1771),
                    new TextSymbol("enim ratione qui",
                        new MapColor(244, 13, 249),
                        new MapColor(9, 168, 95),
                            new Dimension(945.4178),
                        new MapFont(new Dimension(644.1144),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            631.3730,
                        new MapColor(230, 186, 31),
                        new MapColor(176, 220, 171),
                            629.2682,
                        HorizontalAlignment.Left,
                            true,
                            876.7983,
                            new Dimension(847.0365),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("at quia quam",
                        "dolorum",
                        ["nihil",
                            "tenetur"],
                    [new FieldInfo("avatar",
                            "occaecati",
                            "ut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("id",
                            "et",
                            "aut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("category",
                            "voluptatibus",
                            "fugiat",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Max)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "mollitia",
                                "eaque natus non")),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                "aut",
                                "deserunt quo nemo")),
                    new AttachmentsPopupContent("dolor amet recusandae",
                            "quis magnam incidunt aliquam itaque",
                            AttachmentsPopupContentDisplayType.Auto),
                    new FieldsPopupContent([new FieldInfo("email",
                                "ut",
                                "dolor",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("name",
                                "id",
                                "modi",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                            "facilis tempora a molestiae sunt quisquam qui",
                            "totam illo voluptatum")],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "phone",
                            "dolore eos debitis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "updatedAt",
                            "quis magni dolores",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "group",
                            "eum ea dolore",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("non laboriosam odio",
                            "https://picsum.photos/640/480/?image=778",
                            "949d4f1f-bbc3-3459-531e-c1c07e4594d4",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "nam"),
                    new ActionToggle("odit enim quis",
                            "e3ef4839-4766-819c-2a7a-fb1065f4535e",
                            () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "et"),
                    new ActionButton("iure laborum voluptas",
                            "https://picsum.photos/640/480/?image=228",
                            "da4bf028-95ee-ba2f-4bfb-a7371ecc9a65",
                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "deserunt"),
                    new ActionToggle("et eaque molestias",
                            "d7aac24b-5688-03bb-696f-05ac7ab00340",
                            () => { Console.WriteLine("quaerat"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "ipsum")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    15345734.9828,
                    45816.8439,
                    0.5010,
                    true,
                    "corrupti doloribus recusandae",
                    true,
                    "nihil",
                new LayerFloorInfo("temporibus"),
                [new Label(LabelPlacement.AboveRight,
                        "delectus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        26037518.7630,
                        32633.5766,
                        true,
                        new Dimension(293.9028),
                    new TextSymbol("eveniet molestias qui",
                        new MapColor(165, 254, 166),
                        new MapColor(110, 156, 30),
                            new Dimension(344.6617),
                        new MapFont(new Dimension(507.1482),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            742.7022,
                        new MapColor(93, 4, 193),
                        new MapColor(252, 130, 30),
                            748.1188,
                        HorizontalAlignment.Right,
                            true,
                            460.9671,
                            new Dimension(208.1415),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "rerum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        30385527.3492,
                        21738.8005,
                        true,
                        new Dimension(815.8753),
                    new TextSymbol("quasi hic delectus",
                        new MapColor(129, 162, 115),
                        new MapColor(178, 253, 24),
                            new Dimension(551.0890),
                        new MapFont(new Dimension(462.1603),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            413.1265,
                        new MapColor(184, 200, 105),
                        new MapColor(69, 156, 176),
                            955.9835,
                        HorizontalAlignment.Right,
                            true,
                            211.8450,
                            new Dimension(308.2550),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.CenterLeft,
                        "optio",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        3536265.9843,
                        25986.3907,
                        true,
                        new Dimension(238.4079),
                    new TextSymbol("ut in numquam",
                        new MapColor(110, 16, 231),
                        new MapColor(181, 93, 151),
                            new Dimension(348.3870),
                        new MapFont(new Dimension(160.4076),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            810.5968,
                        new MapColor(184, 122, 26),
                        new MapColor(125, 111, 208),
                            237.2475,
                        HorizontalAlignment.Left,
                            true,
                            712.8331,
                            new Dimension(165.3971),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.CenterRight,
                        "magnam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        30593438.2879,
                        4628.3055,
                        true,
                        new Dimension(446.1252),
                    new TextSymbol("ad ratione aspernatur",
                        new MapColor(211, 76, 83),
                        new MapColor(234, 4, 238),
                            new Dimension(88.6719),
                        new MapFont(new Dimension(899.4347),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            975.9418,
                        new MapColor(62, 92, 28),
                        new MapColor(213, 60, 14),
                            644.6900,
                        HorizontalAlignment.Right,
                            true,
                            285.6293,
                            new Dimension(171.6263),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("perspiciatis assumenda amet",
                        "aperiam",
                        ["deserunt",
                            "voluptatem"],
                    [new FieldInfo("category",
                            "quia",
                            "et",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("email",
                            "earum",
                            "consequuntur",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("category",
                            "numquam",
                            "molestiae",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Var)],
                    [new FieldsPopupContent([new FieldInfo("avatar",
                                "unde",
                                "recusandae",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Var)],
                            "esse ratione aliquam corrupti sit debitis odit",
                            "eveniet voluptas et"),
                    new RelationshipPopupContent("quia inventore alias",
                            "hic fugiat nesciunt cum consequatur",
                            2,
                            "aut",
                        [new RelatedRecordsInfoFieldOrder("veritatis",
                            OrderBy.Desc)],
                            3)],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "id",
                            "ducimus omnis corporis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "token",
                            "voluptatem reiciendis illum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "avatar",
                            "aut qui illo",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("sapiente possimus est",
                            "https://picsum.photos/640/480/?image=888",
                            "dee2a4f5-3e96-04a0-e6ff-d30d0858fe86",
                            () => { Console.WriteLine("soluta"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "harum")])),
            new Sublayer(4,
                    true,
                    true,
                ListMode.Show,
                    35552859.1071,
                    35504.0932,
                    0.3642,
                    true,
                    "quia libero sed",
                    true,
                    "optio",
                new LayerFloorInfo("facilis"),
                [new Label(LabelPlacement.CenterStart,
                        "ratione",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        27159447.4321,
                        43363.8092,
                        true,
                        new Dimension(714.6003),
                    new TextSymbol("provident libero dignissimos",
                        new MapColor(197, 155, 86),
                        new MapColor(169, 58, 158),
                            new Dimension(73.2777),
                        new MapFont(new Dimension(763.5627),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            558.6401,
                        new MapColor(200, 61, 123),
                        new MapColor(93, 211, 223),
                            24.0849,
                        HorizontalAlignment.Left,
                            true,
                            451.6138,
                            new Dimension(408.8938),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("laudantium et ducimus",
                        "corrupti",
                        ["eos",
                            "maiores",
                            "est",
                            "dolor"],
                    [new FieldInfo("category",
                            "ut",
                            "vel",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("avatar",
                            "qui",
                            "ut",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("phone",
                            "maxime",
                            "recusandae",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("phone",
                            "velit",
                            "deleniti",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new FieldsPopupContent([new FieldInfo("title",
                                "quis",
                                "quia",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("category",
                                "magnam",
                                "maxime",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Min)],
                            "sit et repudiandae quidem aut",
                            "ut explicabo exercitationem")],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "avatar",
                            "soluta voluptas praesentium",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "title",
                            "voluptates provident sint",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("et atque sit",
                            "183fc728-34bf-61bb-000b-5e1dca7015db",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "fugit"),
                    new ActionToggle("consectetur saepe quo",
                            "eef67707-d39e-0bbe-02c6-1842278f8de1",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "incidunt"),
                    new ActionButton("quam eius ipsum",
                            "https://picsum.photos/640/480/?image=742",
                            "c9e3a7c8-61da-96be-c277-c53dc9c2e44e",
                            () => { Console.WriteLine("molestias"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "tempora")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    28294775.3767,
                    22991.5457,
                    0.0745,
                    true,
                    "voluptas iste molestiae",
                    true,
                    "nostrum",
                new LayerFloorInfo("ipsum"),
                [new Label(LabelPlacement.BelowLeft,
                        "suscipit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        33777544.9438,
                        21965.4223,
                        true,
                        new Dimension(855.8606),
                    new TextSymbol("quam consequatur molestiae",
                        new MapColor(180, 196, 43),
                        new MapColor(99, 90, 85),
                            new Dimension(662.0819),
                        new MapFont(new Dimension(141.6981),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            932.2966,
                        new MapColor(6, 74, 111),
                        new MapColor(225, 221, 180),
                            112.0633,
                        HorizontalAlignment.Right,
                            true,
                            379.7047,
                            new Dimension(260.8032),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("et doloremque aut",
                        "iusto",
                        ["tenetur",
                            "omnis"],
                    [new FieldInfo("group",
                            "est",
                            "eos",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("password",
                            "consequatur",
                            "omnis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("token",
                            "quasi",
                            "qui",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new AttachmentsPopupContent("nemo est aut",
                            "ut veritatis vitae unde dolor",
                            AttachmentsPopupContentDisplayType.Preview),
                    new MediaPopupContent("repellat libero inventore",
                            "veniam illum et soluta id",
                        [new LineChartMediaInfo("quia possimus architecto",
                                "numquam",
                                "maxime possimus ipsa",
                            new ChartMediaInfoValue(["nulla",
                                    "adipisci",
                                    "quis"],
                                    "ipsum",
                                    "dolorem",
                                [new ChartMediaInfoValueSeries("comment",
                                        "iusto",
                                        3.4595),
                                new ChartMediaInfoValueSeries("comment",
                                        "perspiciatis",
                                        183.8177),
                                new ChartMediaInfoValueSeries("email",
                                        "voluptatem",
                                        647.5544)],
                                [new MapColor(79, 9, 149),
                                new MapColor(89, 171, 133),
                                new MapColor(116, 153, 20)])),
                        new PieChartMediaInfo("repellendus est aut",
                                "et",
                                "a occaecati corrupti",
                            new ChartMediaInfoValue(["illum",
                                    "numquam",
                                    "id"],
                                    "excepturi",
                                    "officiis",
                                [new ChartMediaInfoValueSeries("token",
                                        "sint",
                                        133.0205),
                                new ChartMediaInfoValueSeries("id",
                                        "beatae",
                                        880.5214)],
                                [new MapColor(77, 239, 96),
                                new MapColor(216, 127, 198),
                                new MapColor(46, 250, 51),
                                new MapColor(126, 222, 219)])),
                        new BarChartMediaInfo("vitae aspernatur iure",
                                "incidunt",
                                "et tempora libero",
                            new ChartMediaInfoValue(["molestias",
                                    "perferendis",
                                    "dolorum",
                                    "qui"],
                                    "delectus",
                                    "aperiam",
                                [new ChartMediaInfoValueSeries("title",
                                        "qui",
                                        526.1547)],
                                [new MapColor(51, 212, 205),
                                new MapColor(20, 239, 130),
                                new MapColor(0, 136, 195),
                                new MapColor(195, 40, 207)])),
                        new LineChartMediaInfo("dolores maiores quo",
                                "ut",
                                "repudiandae aspernatur commodi",
                            new ChartMediaInfoValue(["aspernatur",
                                    "et"],
                                    "fugiat",
                                    "consectetur",
                                [new ChartMediaInfoValueSeries("comment",
                                        "voluptatem",
                                        852.0649)],
                                [new MapColor(165, 223, 63),
                                new MapColor(110, 32, 184)]))],
                            6),
                    new AttachmentsPopupContent("vel qui provident",
                            "deleniti architecto aperiam distinctio exercitationem vero",
                            AttachmentsPopupContentDisplayType.Preview),
                    new MediaPopupContent("asperiores dolorum qui",
                            "et sequi quam rerum",
                        [new PieChartMediaInfo("qui consequatur commodi",
                                "eius",
                                "ducimus aliquam ad",
                            new ChartMediaInfoValue(["velit",
                                    "delectus",
                                    "eligendi"],
                                    "architecto",
                                    "dignissimos",
                                [new ChartMediaInfoValueSeries("name",
                                        "illo",
                                        690.6114),
                                new ChartMediaInfoValueSeries("name",
                                        "quis",
                                        929.4792)],
                                [new MapColor(207, 181, 252)])),
                        new ColumnChartMediaInfo("fuga nulla corrupti",
                                "harum",
                                "accusantium qui fuga",
                            new ChartMediaInfoValue(["ut",
                                    "voluptas",
                                    "enim",
                                    "odio"],
                                    "qui",
                                    "nostrum",
                                [new ChartMediaInfoValueSeries("category",
                                        "autem",
                                        232.2379),
                                new ChartMediaInfoValueSeries("id",
                                        "alias",
                                        566.4407)],
                                [new MapColor(172, 35, 206),
                                new MapColor(100, 18, 85),
                                new MapColor(199, 34, 142)])),
                        new PieChartMediaInfo("libero alias nemo",
                                "et",
                                "voluptatibus aut perspiciatis",
                            new ChartMediaInfoValue(["ut",
                                    "corrupti",
                                    "impedit",
                                    "ducimus"],
                                    "aut",
                                    "alias",
                                [new ChartMediaInfoValueSeries("password",
                                        "totam",
                                        42.2100)],
                                [new MapColor(116, 195, 160),
                                new MapColor(45, 178, 87)]))],
                            1)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "name",
                            "porro temporibus magnam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("mollitia occaecati aut",
                            "e5214c7d-3147-98d7-57b9-51ac2fb8cb2a",
                            () => { Console.WriteLine("eveniet"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "sunt")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Hours,
                    140.4657);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2015, 7, 25, 3, 17, 15),
                    new DateTime(2005, 4, 23, 18, 37, 3));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
