@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.DestinationAtop)"
                        Dpi="@(170.9428)"
                        Effect="@(new Effect("nostrum",
                            42685464.6755))"
                        GdbVersion="@("9.2.6.5")"
                        ImageFormat="@(MapImageFormat.Png8)"
                        ImageMaxHeight="@(5)"
                        ImageMaxWidth="@(3)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(48178316.2965)"
                        MinScale="@(5699.4866)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(715.1405)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Hide)"
                        Visible="@(true)"
                        Opacity="@(0.2851)"
                        Copyright="@("esse")"
                        FullExtent="@(new Extent(164.1730,
                                -132.8309,
                                73.2883,
                                3.7481,
                                981.7147,
                                334.4104,
                                158.9543,
                                678.9708,
                            new SpatialReference(3,
                                    "ut",
                                    "sunt",
                                    "aliquid"),
                                true,
                                true))"
                        Title="@("dicta molestiae et")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Seconds)"
                            Value="@(542.8836)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("excepturi")"
                            EndField="@("dolores")"
                            Stops="@([new DateTime(2018, 9, 22, 16, 34, 54),
                                new DateTime(2009, 2, 2, 16, 20, 8),
                                new DateTime(2017, 3, 6, 22, 54, 10)])"
                            TimeZone="@("Europe/Madrid")"
                            TrackIdField="@("officiis")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Years)"
                                Value="@(798.0481)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2015, 7, 1, 10, 14, 53))"
                                End="@(new DateTime(2013, 7, 19, 15, 40, 38))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2003, 8, 6, 19, 56, 18))"
                            End="@(new DateTime(2018, 4, 24, 20, 30, 8))">
                        </TimeExtent>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("vitae")"
                            ApiKey="@("velit")"
                            AvgRating="@(491.2459)"
                            Categories="@(["accusantium",
                                "autem",
                                "animi",
                                "tempora"])"
                            Created="@(new DateTime(2005, 11, 26, 16, 21, 38))"
                            Culture="@("non")"
                            Description="@("ipsum quo omnis nobis consequatur temporibus")"
                            Extent="@(new Extent(-90.9225,
                                    -48.3156,
                                    8.7059,
                                    -11.0161,
                                    197.6280,
                                    979.9257,
                                    140.9996,
                                    234.5749,
                                new SpatialReference(6,
                                        "excepturi",
                                        "sequi",
                                        "sapiente"),
                                    true,
                                    true))"
                            GroupCategories="@(["ea",
                                "voluptatum",
                                "repudiandae"])"
                            LicenseInfo="@("placeat")"
                            Modified="@(new DateTime(2012, 1, 11, 19, 25, 41))"
                            Name="@("title")"
                            NumComments="@(293.0193)"
                            NumRatings="@(662.6414)"
                            NumViews="@(291.8384)"
                            Owner="@("Kaycee Quigley")"
                            OwnerFolder="@("Hayden Bradtke")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.NoPrompt,
                                    ["et",
                                        "dolores",
                                        "rerum"],
                                    "nobis",
                                    "beatae",
                                    "sed",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("quisquam")"
                            Screenshots="@(["dignissimos",
                                "molestiae",
                                "officiis",
                                "non"])"
                            Size="@(5)"
                            Snippet="@("at")"
                            Tags="@(["vero",
                                "odit",
                                "excepturi",
                                "qui"])"
                            Title="@("a consequatur ipsa")"
                            TypeKeywords="@(["sed",
                                "impedit",
                                "dolor",
                                "animi"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(5)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(5460698.7542)"
                            MinScale="@(21043.0008)"
                            Opacity="@(0.6143)"
                            PopupEnabled="@(true)"
                            Title="@("voluptas doloremque sit")"
                            Visible="@(true)"
                            DefinitionExpression="@("cum")"
                            FloorInfo="@(new LayerFloorInfo("quo"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveRight,
                                    "suscipit",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    8778114.7395,
                                    42973.3368,
                                    true,
                                    new Dimension(294.5585),
                                new TextSymbol("expedita et et",
                                    new MapColor(248, 155, 209),
                                    new MapColor(76, 68, 18),
                                        new Dimension(508.1424),
                                    new MapFont(new Dimension(269.8092),
                                            "Garamond",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        435.1442,
                                    new MapColor(126, 118, 250),
                                    new MapColor(62, 206, 190),
                                        527.2444,
                                    HorizontalAlignment.Center,
                                        true,
                                        475.3148,
                                        new Dimension(618.0408),
                                        true),
                                    true,
                                    "ObjectID = 1")])"
                            PopupTemplate="@(new PopupTemplate("deserunt aut in",
                                    "quos",
                                    ["ipsum",
                                        "nobis",
                                        "atque",
                                        "dicta"],
                                [new FieldInfo("id",
                                        "accusamus",
                                        "corporis",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("phone",
                                        "est",
                                        "quis",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.ShortDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev)],
                                [new FieldsPopupContent([new FieldInfo("comment",
                                            "aliquid",
                                            "ratione",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("id",
                                            "ratione",
                                            "et",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                        "sit veritatis maxime enim",
                                        "quam voluptates asperiores"),
                                new TextPopupContent("aperiam accusamus suscipit")],
                                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "title",
                                        "reiciendis deleniti molestias",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "password",
                                        "saepe reprehenderit quia",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "group",
                                        "aliquam laboriosam ea",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("recusandae sequi ipsa",
                                        "https://picsum.photos/640/480/?image=266",
                                        "35994e0e-7e1c-af5f-5b3b-a4e9660eceb5",
                                        () => { Console.WriteLine("assumenda"); return Task.CompletedTask; },
                                        "updatedAt",
                                        true,
                                        true,
                                        true,
                                        "cum"),
                                new ActionToggle("mollitia aut nostrum",
                                        "34640399-37b7-4fcc-b30d-0987cdc2f013",
                                        () => { Console.WriteLine("aliquam"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "id",
                                        "quam"),
                                new ActionButton("nostrum iste porro",
                                        "https://picsum.photos/640/480/?image=352",
                                        "072b68dc-2d6d-bc59-38ae-1f4116d14d50",
                                        () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "facere"),
                                new ActionToggle("harum sapiente itaque",
                                        "09495198-5c8d-8348-a57a-413717c069bc",
                                        () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "name",
                                        "culpa")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("atque sunt ut",
                                    new MapColor(68, 78, 95),
                                    new MapColor(77, 151, 167),
                                        new Dimension(803.4433),
                                    new MapFont(new Dimension(299.9563),
                                            "Helvetica",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.LineThrough),
                                        590.0626,
                                    new MapColor(33, 76, 68),
                                    new MapColor(1, 129, 159),
                                        723.2117,
                                    HorizontalAlignment.Center,
                                        true,
                                        67.0586,
                                        new Dimension(973.4070),
                                        true),
                                    "mollitia",
                                [new SizeVariable("fugiat",
                                        new Dimension(314.1609),
                                        new Dimension(613.6079),
                                        856.1790,
                                        701.4577,
                                        VisualValueRepresentation.Radius,
                                        VisualValueUnit.Kilometers,
                                        "et",
                                        "laudantium",
                                        true,
                                        VisualAxis.Height,
                                        "animi",
                                        "magnam ratione velit",
                                    new VisualVariableLegendOptions(true,
                                            "soluta expedita aut")),
                                new OpacityVariable("suscipit",
                                        "vitae",
                                    [new OpacityStop(998.4113,
                                            0.3128,
                                            "molestiae")],
                                    new VisualVariableLegendOptions(true,
                                            "quibusdam saepe assumenda"),
                                        "est",
                                        "pariatur ipsam sunt")],
                                new AuthoringInfo(ClassificationMethod.Manual,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(0, 94, 241),
                                            new MapColor(52, 204, 93)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(206, 201, 239),
                                            new MapColor(38, 247, 130)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(153, 88, 19),
                                            new MapColor(12, 219, 56)),
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(174, 90, 7),
                                            new MapColor(123, 21, 168))]),
                                        816.0255,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(90.1559,
                                                694.8029),
                                        new AuthoringInfoField1ClassBreakInfos(46.5888,
                                                923.1976),
                                        new AuthoringInfoField1ClassBreakInfos(989.8817,
                                                143.9475),
                                        new AuthoringInfoField1ClassBreakInfos(884.8511,
                                                481.8877)],
                                            "saepe",
                                            "provident",
                                            "ut"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(361.9320,
                                                939.5719),
                                        new AuthoringInfoField1ClassBreakInfos(559.5127,
                                                748.4704)],
                                            "qui",
                                            "dicta",
                                            "harum"),
                                        ["distinctio",
                                            "repellat",
                                            "temporibus"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "magni",
                                        true,
                                    LengthUnit.Millimeters,
                                        991.0961,
                                        904.2338,
                                        822.3275,
                                        994.4791)))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(8)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(15270339.2768)"
                                MinScale="@(14016.4204)"
                                Opacity="@(0.8211)"
                                PopupEnabled="@(true)"
                                Title="@("dolores et nihil")"
                                Visible="@(true)"
                                DefinitionExpression="@("sed")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(7)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(25681880.7558)"
                                    MinScale="@(16311.9348)"
                                    Opacity="@(0.0753)"
                                    PopupEnabled="@(true)"
                                    Title="@("non doloribus voluptate")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("magni")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(4)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(47584713.3154)"
                                        MinScale="@(41912.4656)"
                                        Opacity="@(0.7679)"
                                        PopupEnabled="@(true)"
                                        Title="@("dicta distinctio quidem")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("harum")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(5)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(9824823.0428)"
                                            MinScale="@(21611.9832)"
                                            Opacity="@(0.8370)"
                                            PopupEnabled="@(true)"
                                            Title="@("maiores rerum ut")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("aliquid")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(1)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(6666316.5051)"
                                                MinScale="@(47188.9231)"
                                                Opacity="@(0.3845)"
                                                PopupEnabled="@(true)"
                                                Title="@("omnis molestias quod")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("suscipit")"
                                                Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(9)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(25164927.5905)"
                                                    MinScale="@(35088.4751)"
                                                    Opacity="@(0.3165)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("eaque enim blanditiis")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("fugit")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("id labore ut")"
                                                        StringContent="@("dolore")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("adipisci")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("vel ut sit")"
                                                    StringContent="@("quia")"
                                                    OutFields="@(["commodi",
                                                        "explicabo",
                                                        "quisquam",
                                                        "quia"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new ExpressionPopupContent(),
                                                    new RelationshipPopupContent(),
                                                    new MediaPopupContent(),
                                                    new MediaPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "b17e8ab3-2373-4458-b6e2-3ea6fc0dc07c",
                                                            () => { Console.WriteLine("fugiat"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowAfter)"
                                                    LabelExpression="@("ab")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(17451036.5835)"
                                                    MinScale="@(26460.8947)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(276.7421))"
                                                    Symbol="@(new TextSymbol("animi aut repudiandae"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Age > 21")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("non")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                    new MultipartColorRamp(),
                                                        455.2409,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["cum",
                                                            "sint",
                                                            "voluptatem"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "autem",
                                                        true,
                                                    LengthUnit.Inches,
                                                        115.7826,
                                                        883.5218,
                                                        912.5127,
                                                        602.9965))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("sunt voluptatem iusto")"
                                                StringContent="@("aliquid")"
                                                OutFields="@(["nam",
                                                    "cumque",
                                                    "eius"])"
                                                FieldInfos="@([new FieldInfo("title",
                                                        "accusantium",
                                                        "nostrum",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max)])"
                                                Content="@([new TextPopupContent("nemo sed nihil")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "email",
                                                        "aperiam illo expedita")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("cumque voluptatum vero",
                                                        "fd7cf7a1-047b-f3c0-ca3c-1a76dcbaec7e",
                                                        () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "name",
                                                        "quidem"),
                                                new ActionButton("ut eos ex",
                                                        "https://picsum.photos/640/480/?image=286",
                                                        "d3fb0149-d868-5e99-0748-6cdeab35f095",
                                                        () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                                        "name",
                                                        true,
                                                        true,
                                                        true,
                                                        "et"),
                                                new ActionButton("qui deleniti est",
                                                        "https://picsum.photos/640/480/?image=318",
                                                        "9f8bec01-edba-9497-0eda-15e516fa8139",
                                                        () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                                                        "group",
                                                        true,
                                                        true,
                                                        true,
                                                        "libero")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterEnd)"
                                                LabelExpression="@("placeat")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(9185985.5312)"
                                                MinScale="@(23659.3924)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(29.7045))"
                                                Symbol="@(new TextSymbol("a saepe aperiam",
                                                    new MapColor(107, 36, 55),
                                                    new MapColor(42, 66, 88),
                                                        null,
                                                    new MapFont(),
                                                        85.0842,
                                                    new MapColor(162, 128, 98),
                                                    new MapColor(226, 158, 217),
                                                        918.1117,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        772.9033,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Phone = '555-555-5555'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quis")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch)]),
                                                    655.9738,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "in",
                                                        "et",
                                                        "quas"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "earum",
                                                        "necessitatibus",
                                                        "porro"),
                                                    ["id",
                                                        "omnis",
                                                        "voluptatem"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "iure",
                                                    true,
                                                LengthUnit.Yards,
                                                    429.0440,
                                                    307.0085,
                                                    393.7053,
                                                    455.0987))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("velit ad voluptatibus")"
                                            StringContent="@("et")"
                                            OutFields="@(["dolorem",
                                                "quasi",
                                                "est",
                                                "consequuntur"])"
                                            FieldInfos="@([new FieldInfo("group",
                                                    "aut",
                                                    "illo",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Sum)])"
                                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "molestiae",
                                                        "in unde numquam")),
                                            new FieldsPopupContent([new FieldInfo("createdAt",
                                                        "sed",
                                                        "eum",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev),
                                                new FieldInfo("group",
                                                        "ullam",
                                                        "alias",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("password",
                                                        "cupiditate",
                                                        "sunt",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("category",
                                                        "dolore",
                                                        "laudantium",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum)],
                                                    "esse repellat ut voluptatem",
                                                    "reiciendis id autem"),
                                            new TextPopupContent("suscipit eligendi id"),
                                            new AttachmentsPopupContent("omnis expedita eos",
                                                    "ut in ratione eos",
                                                    AttachmentsPopupContentDisplayType.Auto)])"
                                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "name",
                                                    "illum accusamus natus",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "category",
                                                    "suscipit aut quis",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("vero asperiores cupiditate",
                                                    "0e293209-c1a3-f87b-6f3b-f0a861e64ad6",
                                                    () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "createdAt",
                                                    "sunt")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowAfter)"
                                            LabelExpression="@("nam")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(45177451.2164)"
                                            MinScale="@(12419.3627)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(889.8783))"
                                            Symbol="@(new TextSymbol("nostrum voluptatem facere",
                                                new MapColor(45, 166, 43),
                                                new MapColor(83, 111, 38),
                                                    new Dimension(229.7162),
                                                new MapFont(new Dimension(77.0478),
                                                        "Courier New",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Bold,
                                                    TextDecoration.None),
                                                    792.1993,
                                                new MapColor(235, 42, 173),
                                                new MapColor(74, 16, 114),
                                                    441.0380,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    733.0397,
                                                    new Dimension(900.2999),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Street = '123 Main St.'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("vitae")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(151, 137, 14),
                                                new MapColor(205, 119, 46)),
                                                263.6179,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(526.6043,
                                                        876.1485),
                                                new AuthoringInfoField1ClassBreakInfos(232.1357,
                                                        889.9065),
                                                new AuthoringInfoField1ClassBreakInfos(679.0306,
                                                        307.6902),
                                                new AuthoringInfoField1ClassBreakInfos(924.9380,
                                                        862.3126)],
                                                    "officiis",
                                                    "unde",
                                                    "earum"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(829.6078,
                                                        398.8094)],
                                                    "inventore",
                                                    "est",
                                                    "quod"),
                                                ["animi",
                                                    "veniam",
                                                    "et",
                                                    "et"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "commodi",
                                                true,
                                            LengthUnit.Kilometers,
                                                938.8560,
                                                114.8422,
                                                100.8421,
                                                768.2934))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("perspiciatis voluptate ut")"
                                        StringContent="@("ut")"
                                        OutFields="@(["autem",
                                            "quibusdam",
                                            "enim",
                                            "accusantium"])"
                                        FieldInfos="@([new FieldInfo("phone",
                                                "reiciendis",
                                                "dicta",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Min)])"
                                        Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "similique",
                                                    "nostrum voluptatibus ea"))])"
                                        ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                "phone",
                                                "labore molestias reprehenderit",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "email",
                                                "ea aut ut",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "status",
                                                "laudantium dignissimos incidunt",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("saepe soluta ut",
                                                "9e598485-f9fc-dfa4-2273-1f1e7050f2dc",
                                                () => { Console.WriteLine("assumenda"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "title",
                                                "sit")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterRight)"
                                        LabelExpression="@("occaecati")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(25714945.8366)"
                                        MinScale="@(37317.4309)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(822.9887))"
                                        Symbol="@(new TextSymbol("et et nihil",
                                            new MapColor(190, 58, 24),
                                            new MapColor(25, 39, 184),
                                                new Dimension(620.3940),
                                            new MapFont(new Dimension(0.4091),
                                                    "Georgia",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                983.0517,
                                            new MapColor(124, 194, 141),
                                            new MapColor(4, 55, 43),
                                                717.3552,
                                            HorizontalAlignment.Left,
                                                true,
                                                912.5452,
                                                new Dimension(452.7621),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("ObjectID = 1")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("eius")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(38, 15, 139),
                                            new MapColor(219, 132, 188)),
                                            482.1108,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(74.8504,
                                                    219.8141),
                                            new AuthoringInfoField1ClassBreakInfos(844.5356,
                                                    890.5106)],
                                                "accusamus",
                                                "voluptatem",
                                                "rerum"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(192.5864,
                                                    729.9570)],
                                                "non",
                                                "eum",
                                                "neque"),
                                            ["voluptas",
                                                "ducimus"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "inventore",
                                            true,
                                        LengthUnit.Inches,
                                            577.8550,
                                            330.2476,
                                            295.3389,
                                            51.4698))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("facilis quia fugiat")"
                                    StringContent="@("totam")"
                                    OutFields="@(["voluptatem",
                                        "illo",
                                        "facilis",
                                        "consequuntur"])"
                                    FieldInfos="@([new FieldInfo("password",
                                            "reprehenderit",
                                            "perspiciatis",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("title",
                                            "sunt",
                                            "quia",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("status",
                                            "vel",
                                            "sed",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Count)])"
                                    Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "veniam",
                                                "aliquam maiores nulla")),
                                    new AttachmentsPopupContent("laudantium nihil eius",
                                            "quis ea quia doloribus itaque at",
                                            AttachmentsPopupContentDisplayType.Preview),
                                    new TextPopupContent("numquam quas et"),
                                    new RelationshipPopupContent("rerum in facilis",
                                            "reprehenderit laudantium sed quam ex laboriosam",
                                            2,
                                            "quis",
                                        [new RelatedRecordsInfoFieldOrder("suscipit",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("eum",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("molestiae",
                                            OrderBy.Desc)],
                                            6)])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                            "createdAt",
                                            "culpa vero velit",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "email",
                                            "consequuntur et ut",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature['FieldName'];",
                                            "avatar",
                                            "odit accusantium qui",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("quod doloremque repellat",
                                            "bfe3e490-8648-049c-261f-9ffa67809ad0",
                                            () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "comment",
                                            "aperiam"),
                                    new ActionButton("non neque id",
                                            "https://picsum.photos/640/480/?image=1063",
                                            "f3ed5c13-0f3d-284c-4e8e-9208fc0b421d",
                                            () => { Console.WriteLine("eius"); return Task.CompletedTask; },
                                            "password",
                                            true,
                                            true,
                                            true,
                                            "vel"),
                                    new ActionButton("aut inventore quis",
                                            "https://picsum.photos/640/480/?image=81",
                                            "61abe73a-adf8-324f-c337-270b6cfa231c",
                                            () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                                            "avatar",
                                            true,
                                            true,
                                            true,
                                            "nihil")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterAfter)"
                                    LabelExpression="@("labore")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(15823402.7670)"
                                    MinScale="@(5664.1448)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(552.7224))"
                                    Symbol="@(new TextSymbol("eum sint sed",
                                        new MapColor(192, 163, 82),
                                        new MapColor(195, 20, 6),
                                            new Dimension(175.4226),
                                        new MapFont(new Dimension(727.9630),
                                                "Helvetica",
                                            MapFontStyle.Normal,
                                            FontWeight.Bolder,
                                            TextDecoration.LineThrough),
                                            749.3048,
                                        new MapColor(140, 128, 133),
                                        new MapColor(114, 127, 253),
                                            313.8054,
                                        HorizontalAlignment.Center,
                                            true,
                                            973.5360,
                                            new Dimension(854.4187),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("City = 'Toronto'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("non")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-154.9744,
                    -151.9325,
                    -31.6244,
                    -17.9203,
                    278.9281,
                    104.4644,
                    19.3373,
                    458.9913,
                new SpatialReference(6,
                        "ab",
                        "nulla",
                        "voluptatum"),
                    true,
                    true),
                9,
                8,
            new MapImageLayerCreateExportImageParametersOptions(366.8687,
                    67.1825,
                    "deleniti"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-90.7486,
                    174.6119,
                    66.8909,
                    -63.2434,
                    15.7771,
                    809.4533,
                    351.0304,
                    650.6695,
                new SpatialReference(9,
                        "repudiandae",
                        "a",
                        "porro"),
                    true,
                    true),
                5,
                4,
            new MapImageLayerFetchImageOptions(123.9960,
                    294.9087,
                    "hic"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(3);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "quos",
                    "sed",
                    462.8891,
                    ["aut",
                        "animi"],
                    new DateTime(2016, 3, 9, 3, 31, 41),
                    "in",
                    "id cupiditate nobis quas",
                new Extent(-118.3073,
                        -88.5434,
                        -15.9563,
                        -20.2083,
                        210.0024,
                        310.0114,
                        531.5363,
                        148.2153,
                    new SpatialReference(5,
                            "mollitia",
                            "odio",
                            "voluptas"),
                        true,
                        true),
                    ["sit",
                        "consectetur"],
                    "amet",
                    new DateTime(2019, 5, 15, 14, 46, 4),
                    "avatar",
                    475.9505);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.ColorDodge;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2005, 3, 23, 2, 12, 7),
                    new DateTime(2003, 9, 12, 22, 38, 44));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("est",
                    "debitis",
                new TimeExtent(new DateTime(2008, 10, 20, 9, 17, 10),
                        new DateTime(2008, 7, 16, 6, 6, 27)),
                new TimeInterval(TemporalTime.Weeks,
                        551.9212),
                    [new DateTime(2009, 6, 10, 0, 4, 3),
                        new DateTime(2006, 1, 11, 6, 2, 13),
                        new DateTime(2001, 5, 18, 6, 30, 46),
                        new DateTime(2019, 3, 23, 9, 29, 41)],
                    "Africa/Casablanca",
                    "quo");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    5619222.8158,
                    46376.7015,
                    0.3406,
                    true,
                    "occaecati est rerum",
                    true,
                    "aut",
                new LayerFloorInfo("dolorum"),
                [new Label(LabelPlacement.CenterAfter,
                        "molestiae",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        7511812.6713,
                        37694.4542,
                        true,
                        new Dimension(948.3800),
                    new TextSymbol("eaque natus consectetur",
                        new MapColor(186, 13, 25),
                        new MapColor(66, 195, 111),
                            new Dimension(657.8653),
                        new MapFont(new Dimension(60.2616),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            785.7163,
                        new MapColor(72, 115, 214),
                        new MapColor(56, 11, 84),
                            152.0706,
                        HorizontalAlignment.Left,
                            true,
                            555.0002,
                            new Dimension(444.1186),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.BelowRight,
                        "non",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        17973010.0835,
                        28792.3319,
                        true,
                        new Dimension(100.0066),
                    new TextSymbol("cum doloribus fugit",
                        new MapColor(240, 142, 121),
                        new MapColor(184, 83, 246),
                            new Dimension(857.0248),
                        new MapFont(new Dimension(509.4540),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            219.3597,
                        new MapColor(142, 77, 218),
                        new MapColor(4, 15, 169),
                            892.0483,
                        HorizontalAlignment.Center,
                            true,
                            800.4628,
                            new Dimension(161.8952),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("nam unde ut",
                        "nemo",
                        ["expedita",
                            "officiis"],
                    [new FieldInfo("updatedAt",
                            "eaque",
                            "dolore",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("comment",
                            "voluptatem",
                            "itaque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("category",
                            "sed",
                            "aut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("createdAt",
                            "et",
                            "impedit",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Max)],
                    [new AttachmentsPopupContent("asperiores pariatur officia",
                            "commodi delectus non laborum",
                            AttachmentsPopupContentDisplayType.Preview),
                    new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                "dolores",
                                "laborum neque ipsam")),
                    new AttachmentsPopupContent("deserunt consequatur facere",
                            "officia atque amet est",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("vero quia sapiente")],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "createdAt",
                            "nam aliquam sed",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "avatar",
                            "dicta vel ad",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "comment",
                            "ipsum dicta aut",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "earum officiis et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("id ut dolore",
                            "27a7f41c-978b-568f-c168-b1627477cc11",
                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "doloribus"),
                    new ActionToggle("blanditiis vitae quisquam",
                            "990a1a1e-40f7-2e64-599c-e07bfc08d236",
                            () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "necessitatibus"),
                    new ActionButton("magnam perferendis libero",
                            "https://picsum.photos/640/480/?image=189",
                            "be1f82ea-5dc8-4927-5f61-83141304d479",
                            () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "aut")])),
            new Sublayer(3,
                    true,
                    true,
                ListMode.Hide,
                    42250249.8239,
                    10541.0365,
                    0.7788,
                    true,
                    "vel laudantium accusantium",
                    true,
                    "a",
                new LayerFloorInfo("dolorum"),
                [new Label(LabelPlacement.BelowEnd,
                        "molestias",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        3295223.8979,
                        16263.1236,
                        true,
                        new Dimension(304.9878),
                    new TextSymbol("labore omnis sed",
                        new MapColor(244, 61, 191),
                        new MapColor(214, 90, 132),
                            new Dimension(854.7196),
                        new MapFont(new Dimension(269.3335),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            682.3865,
                        new MapColor(215, 180, 85),
                        new MapColor(172, 60, 40),
                            676.4132,
                        HorizontalAlignment.Right,
                            true,
                            789.4459,
                            new Dimension(83.7854),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.BelowLeft,
                        "ratione",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        12059849.2734,
                        32694.2759,
                        true,
                        new Dimension(147.5965),
                    new TextSymbol("ut quia sit",
                        new MapColor(136, 117, 84),
                        new MapColor(227, 163, 79),
                            new Dimension(76.0540),
                        new MapFont(new Dimension(665.9852),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            323.2112,
                        new MapColor(190, 4, 136),
                        new MapColor(11, 226, 147),
                            975.4634,
                        HorizontalAlignment.Right,
                            true,
                            312.3129,
                            new Dimension(811.8004),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.CenterCenter,
                        "distinctio",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        39940440.5848,
                        20289.4937,
                        true,
                        new Dimension(251.4417),
                    new TextSymbol("earum totam velit",
                        new MapColor(254, 38, 126),
                        new MapColor(88, 184, 180),
                            new Dimension(380.8156),
                        new MapFont(new Dimension(898.4022),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            15.0302,
                        new MapColor(101, 104, 10),
                        new MapColor(248, 55, 142),
                            125.2664,
                        HorizontalAlignment.Left,
                            true,
                            206.0739,
                            new Dimension(27.1969),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.CenterStart,
                        "dolorem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        4687604.1143,
                        42307.2992,
                        true,
                        new Dimension(336.6564),
                    new TextSymbol("illo rerum sit",
                        new MapColor(3, 118, 197),
                        new MapColor(92, 7, 233),
                            new Dimension(401.8983),
                        new MapFont(new Dimension(151.2862),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            553.0812,
                        new MapColor(103, 130, 3),
                        new MapColor(112, 44, 83),
                            282.2345,
                        HorizontalAlignment.Right,
                            true,
                            11.3066,
                            new Dimension(145.4901),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("ea vel sunt",
                        "et",
                        ["molestiae",
                            "et"],
                    [new FieldInfo("group",
                            "qui",
                            "quae",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new MediaPopupContent("eum dolore molestiae",
                            "sint odit nemo dignissimos impedit delectus ex",
                        [new ColumnChartMediaInfo("quo dolor eum",
                                "et",
                                "vel quia quidem",
                            new ChartMediaInfoValue(["voluptatem",
                                    "atque",
                                    "hic"],
                                    "veritatis",
                                    "non",
                                [new ChartMediaInfoValueSeries("phone",
                                        "repudiandae",
                                        137.2243),
                                new ChartMediaInfoValueSeries("title",
                                        "voluptatem",
                                        905.2160),
                                new ChartMediaInfoValueSeries("title",
                                        "amet",
                                        588.4859),
                                new ChartMediaInfoValueSeries("comment",
                                        "ut",
                                        95.8760)],
                                [new MapColor(177, 96, 54),
                                new MapColor(204, 76, 235),
                                new MapColor(141, 11, 156)])),
                        new LineChartMediaInfo("reprehenderit ut excepturi",
                                "eaque",
                                "deserunt adipisci et",
                            new ChartMediaInfoValue(["sit",
                                    "nostrum",
                                    "ipsum"],
                                    "pariatur",
                                    "autem",
                                [new ChartMediaInfoValueSeries("phone",
                                        "vero",
                                        600.1439),
                                new ChartMediaInfoValueSeries("category",
                                        "molestiae",
                                        723.7563)],
                                [new MapColor(16, 209, 21),
                                new MapColor(170, 36, 110),
                                new MapColor(217, 105, 127),
                                new MapColor(254, 172, 61)])),
                        new ColumnChartMediaInfo("iste perspiciatis quae",
                                "rerum",
                                "molestiae dolorum distinctio",
                            new ChartMediaInfoValue(["ipsam",
                                    "nisi",
                                    "repellat",
                                    "minima"],
                                    "et",
                                    "aut",
                                [new ChartMediaInfoValueSeries("category",
                                        "vitae",
                                        437.7328),
                                new ChartMediaInfoValueSeries("comment",
                                        "nulla",
                                        29.8331),
                                new ChartMediaInfoValueSeries("group",
                                        "quis",
                                        34.1105),
                                new ChartMediaInfoValueSeries("id",
                                        "et",
                                        411.6764)],
                                [new MapColor(16, 249, 151),
                                new MapColor(154, 66, 15),
                                new MapColor(137, 25, 187),
                                new MapColor(0, 57, 76)])),
                        new BarChartMediaInfo("illo nihil eum",
                                "rerum",
                                "et accusantium est",
                            new ChartMediaInfoValue(["quasi",
                                    "accusamus",
                                    "omnis",
                                    "doloremque"],
                                    "omnis",
                                    "omnis",
                                [new ChartMediaInfoValueSeries("name",
                                        "asperiores",
                                        919.5289),
                                new ChartMediaInfoValueSeries("name",
                                        "ut",
                                        910.5222),
                                new ChartMediaInfoValueSeries("name",
                                        "nihil",
                                        330.5474)],
                                [new MapColor(253, 88, 40),
                                new MapColor(47, 243, 95)]))],
                            8),
                    new RelationshipPopupContent("voluptates soluta facere",
                            "omnis fugiat ea doloribus aut",
                            9,
                            "ut",
                        [new RelatedRecordsInfoFieldOrder("dolore",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("voluptatem",
                            OrderBy.Desc)],
                            1),
                    new TextPopupContent("debitis quod odit"),
                    new TextPopupContent("labore ut quo")],
                    [new ExpressionInfo("return Date();",
                            "email",
                            "tempora maiores non",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("quia quae quasi",
                            "https://picsum.photos/640/480/?image=85",
                            "d699ab89-7d9d-9099-5ba4-b0bd85414e6f",
                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "dolorem"),
                    new ActionButton("molestiae officiis ullam",
                            "https://picsum.photos/640/480/?image=71",
                            "ee4ca138-37b3-36dc-0827-351d8a6ab842",
                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "et"),
                    new ActionButton("eaque veniam laboriosam",
                            "https://picsum.photos/640/480/?image=422",
                            "97761eac-b03b-4122-cfa8-82896c4b1764",
                            () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "est"),
                    new ActionToggle("fugiat minus nostrum",
                            "a73bd66f-0c2b-f50b-12d2-6b916f60774c",
                            () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "ad")])),
            new Sublayer(7,
                    true,
                    true,
                ListMode.Show,
                    2565129.9857,
                    46214.2470,
                    0.5094,
                    true,
                    "quis eveniet expedita",
                    true,
                    "unde",
                new LayerFloorInfo("laudantium"),
                [new Label(LabelPlacement.CenterBefore,
                        "beatae",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        24195665.2375,
                        14542.9037,
                        true,
                        new Dimension(201.6014),
                    new TextSymbol("dolore quasi aut",
                        new MapColor(43, 174, 191),
                        new MapColor(56, 4, 59),
                            new Dimension(193.8372),
                        new MapFont(new Dimension(197.7339),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            753.2082,
                        new MapColor(96, 235, 75),
                        new MapColor(242, 99, 177),
                            914.6140,
                        HorizontalAlignment.Right,
                            true,
                            524.3733,
                            new Dimension(672.2689),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("doloribus illum ratione",
                        "sit",
                        ["molestiae",
                            "magni"],
                    [new FieldInfo("name",
                            "quis",
                            "et",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new FieldsPopupContent([new FieldInfo("token",
                                "qui",
                                "facilis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("createdAt",
                                "ipsa",
                                "unde",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                            "qui libero odit neque placeat in aut",
                            "magni vel tempora"),
                    new FieldsPopupContent([new FieldInfo("email",
                                "ducimus",
                                "iusto",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("comment",
                                "asperiores",
                                "distinctio",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Count)],
                            "iste dicta sed ut et eos cumque",
                            "quaerat ipsum architecto"),
                    new RelationshipPopupContent("sunt velit quia",
                            "ut officiis doloremque qui tempora",
                            4,
                            "molestiae",
                        [new RelatedRecordsInfoFieldOrder("fugit",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("ut",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("qui",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("autem",
                            OrderBy.Asc)],
                            5)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "token",
                            "et qui officiis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "phone",
                            "nostrum eos enim",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("beatae qui quod",
                            "https://picsum.photos/640/480/?image=251",
                            "dd71af23-55a0-8bd6-4d90-09b6869f6514",
                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "est"),
                    new ActionButton("porro ut dignissimos",
                            "https://picsum.photos/640/480/?image=875",
                            "3e7301ce-82e2-d718-2f37-3b7ba13b7438",
                            () => { Console.WriteLine("sapiente"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "sed")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-28.2188,
                    -67.4965,
                    -66.5508,
                    -63.2336,
                    836.1773,
                    860.8539,
                    89.9394,
                    736.9790,
                new SpatialReference(9,
                        "nisi",
                        "est",
                        "eos"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    34017531.4037,
                    29656.5154,
                    0.4274,
                    true,
                    "molestiae tempora similique",
                    true,
                    "perferendis",
                new LayerFloorInfo("dolor"),
                [new Label(LabelPlacement.CenterStart,
                        "aut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        35823510.2489,
                        17115.4479,
                        true,
                        new Dimension(747.3812),
                    new TextSymbol("accusantium quisquam consequatur",
                        new MapColor(132, 2, 93),
                        new MapColor(199, 28, 186),
                            new Dimension(69.1949),
                        new MapFont(new Dimension(413.7871),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            173.8921,
                        new MapColor(92, 234, 244),
                        new MapColor(230, 139, 79),
                            362.4233,
                        HorizontalAlignment.Left,
                            true,
                            109.4880,
                            new Dimension(606.7368),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("in omnis debitis",
                        "vitae",
                        ["ea",
                            "quod",
                            "expedita"],
                    [new FieldInfo("comment",
                            "quia",
                            "sit",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("title",
                            "illum",
                            "repudiandae",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new TextPopupContent("corrupti dicta amet"),
                    new FieldsPopupContent([new FieldInfo("phone",
                                "nisi",
                                "sit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("status",
                                "nemo",
                                "omnis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("phone",
                                "facere",
                                "consectetur",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Sum)],
                            "tempore et minus itaque velit",
                            "dolores ea quis"),
                    new FieldsPopupContent([new FieldInfo("createdAt",
                                "ipsam",
                                "non",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("status",
                                "dignissimos",
                                "consectetur",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("id",
                                "vel",
                                "molestiae",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("status",
                                "quas",
                                "porro",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Count)],
                            "sequi dignissimos quasi nisi quas",
                            "vitae voluptate neque"),
                    new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "consequatur",
                                "autem iste cumque"))],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "group",
                            "ipsum nulla asperiores",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "phone",
                            "in non sunt",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("odio deleniti laboriosam",
                            "b01d9bf0-adb0-adcb-02b6-a1adbbd6cd41",
                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "necessitatibus"),
                    new ActionToggle("eius voluptatum ipsam",
                            "b2466f91-111f-07d7-bb5c-d5e47a2b1cbf",
                            () => { Console.WriteLine("cumque"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "rem"),
                    new ActionButton("vel saepe a",
                            "https://picsum.photos/640/480/?image=799",
                            "f970b745-cc81-6258-e958-85d40c4588e5",
                            () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "sint")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    22161669.3922,
                    32514.9747,
                    0.8632,
                    true,
                    "excepturi aut sit",
                    true,
                    "debitis",
                new LayerFloorInfo("commodi"),
                [new Label(LabelPlacement.BelowRight,
                        "quam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        11129725.7005,
                        48239.2088,
                        true,
                        new Dimension(264.7917),
                    new TextSymbol("iste non voluptatem",
                        new MapColor(223, 109, 142),
                        new MapColor(112, 121, 88),
                            new Dimension(637.9713),
                        new MapFont(new Dimension(683.2693),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            129.3920,
                        new MapColor(183, 148, 115),
                        new MapColor(237, 29, 156),
                            453.9088,
                        HorizontalAlignment.Left,
                            true,
                            531.3472,
                            new Dimension(437.9888),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.CenterCenter,
                        "doloremque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        48582455.1043,
                        19307.2532,
                        true,
                        new Dimension(440.9452),
                    new TextSymbol("et ut cupiditate",
                        new MapColor(115, 233, 228),
                        new MapColor(93, 202, 53),
                            new Dimension(308.0515),
                        new MapFont(new Dimension(552.7620),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            884.8865,
                        new MapColor(107, 104, 206),
                        new MapColor(190, 143, 243),
                            628.4199,
                        HorizontalAlignment.Center,
                            true,
                            214.1358,
                            new Dimension(533.5503),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("veniam vitae sint",
                        "consequuntur",
                        ["nesciunt",
                            "qui",
                            "numquam"],
                    [new FieldInfo("phone",
                            "impedit",
                            "modi",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("title",
                            "est",
                            "nesciunt",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("status",
                            "ab",
                            "dolor",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new MediaPopupContent("corporis itaque vitae",
                            "et fuga placeat id",
                        [new BarChartMediaInfo("eum omnis accusamus",
                                "aut",
                                "quibusdam ea voluptas",
                            new ChartMediaInfoValue(["veritatis",
                                    "asperiores",
                                    "magni"],
                                    "corrupti",
                                    "repellendus",
                                [new ChartMediaInfoValueSeries("phone",
                                        "itaque",
                                        730.9684),
                                new ChartMediaInfoValueSeries("title",
                                        "natus",
                                        40.2207),
                                new ChartMediaInfoValueSeries("updatedAt",
                                        "autem",
                                        793.8126),
                                new ChartMediaInfoValueSeries("id",
                                        "quo",
                                        742.9946)],
                                [new MapColor(6, 189, 104)])),
                        new LineChartMediaInfo("non doloribus voluptatem",
                                "et",
                                "ullam dolores libero",
                            new ChartMediaInfoValue(["quibusdam",
                                    "ex"],
                                    "eum",
                                    "nihil",
                                [new ChartMediaInfoValueSeries("id",
                                        "repudiandae",
                                        906.5536),
                                new ChartMediaInfoValueSeries("group",
                                        "aliquid",
                                        910.0262),
                                new ChartMediaInfoValueSeries("title",
                                        "ex",
                                        883.9380)],
                                [new MapColor(196, 216, 151),
                                new MapColor(128, 120, 132),
                                new MapColor(122, 127, 56)])),
                        new PieChartMediaInfo("eum quis et",
                                "ad",
                                "qui nisi ratione",
                            new ChartMediaInfoValue(["aut",
                                    "reiciendis"],
                                    "et",
                                    "aut",
                                [new ChartMediaInfoValueSeries("title",
                                        "sequi",
                                        932.6962)],
                                [new MapColor(102, 90, 206),
                                new MapColor(55, 64, 183),
                                new MapColor(189, 198, 179)])),
                        new PieChartMediaInfo("ex et quis",
                                "commodi",
                                "qui dicta ad",
                            new ChartMediaInfoValue(["omnis",
                                    "aut"],
                                    "est",
                                    "repellat",
                                [new ChartMediaInfoValueSeries("token",
                                        "rerum",
                                        298.3915),
                                new ChartMediaInfoValueSeries("group",
                                        "eos",
                                        822.1314),
                                new ChartMediaInfoValueSeries("phone",
                                        "laudantium",
                                        716.9184)],
                                [new MapColor(120, 240, 64),
                                new MapColor(166, 13, 189),
                                new MapColor(200, 52, 202)]))],
                            2),
                    new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "laborum",
                                "sapiente et iusto")),
                    new TextPopupContent("officiis ut est"),
                    new MediaPopupContent("veritatis veritatis esse",
                            "mollitia suscipit voluptatem aut quis ullam aliquam",
                        [new LineChartMediaInfo("consequatur molestias ut",
                                "quo",
                                "qui occaecati vitae",
                            new ChartMediaInfoValue(["beatae",
                                    "fugiat"],
                                    "tenetur",
                                    "nulla",
                                [new ChartMediaInfoValueSeries("token",
                                        "tempora",
                                        381.9548),
                                new ChartMediaInfoValueSeries("group",
                                        "possimus",
                                        164.8068),
                                new ChartMediaInfoValueSeries("phone",
                                        "repudiandae",
                                        885.5270),
                                new ChartMediaInfoValueSeries("status",
                                        "consequatur",
                                        688.8291)],
                                [new MapColor(218, 179, 182),
                                new MapColor(186, 114, 80)]))],
                            4)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "email",
                            "quis voluptatibus voluptatem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "createdAt",
                            "fugit et dolor",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "comment",
                            "culpa excepturi dolores",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "token",
                            "et velit quisquam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("hic non minus",
                            "cc29f799-e13a-223d-2e30-3f99ba1a41cb",
                            () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "et"),
                    new ActionToggle("dolore incidunt aspernatur",
                            "77aba421-1f82-59de-5cd8-ab4f582c5236",
                            () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "occaecati"),
                    new ActionButton("rerum deserunt quibusdam",
                            "https://picsum.photos/640/480/?image=955",
                            "9816c930-6e17-bc59-d109-632cb234d92a",
                            () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "at"),
                    new ActionToggle("saepe enim dolor",
                            "736fd38a-6533-8bff-39de-cfed874c8231",
                            () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "beatae")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    13219136.6066,
                    786.2031,
                    0.8154,
                    true,
                    "quia ipsam voluptas",
                    true,
                    "non",
                new LayerFloorInfo("nihil"),
                [new Label(LabelPlacement.AboveStart,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        29094664.6151,
                        33366.8969,
                        true,
                        new Dimension(904.5050),
                    new TextSymbol("aut optio facere",
                        new MapColor(20, 218, 62),
                        new MapColor(238, 230, 123),
                            new Dimension(937.1388),
                        new MapFont(new Dimension(712.9836),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            228.7781,
                        new MapColor(100, 32, 205),
                        new MapColor(169, 56, 11),
                            711.7953,
                        HorizontalAlignment.Center,
                            true,
                            495.8438,
                            new Dimension(532.5050),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.AboveCenter,
                        "quisquam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        3077145.7692,
                        30495.3836,
                        true,
                        new Dimension(367.4125),
                    new TextSymbol("quia reprehenderit in",
                        new MapColor(58, 63, 214),
                        new MapColor(60, 254, 115),
                            new Dimension(85.3228),
                        new MapFont(new Dimension(402.5747),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            188.9181,
                        new MapColor(76, 226, 4),
                        new MapColor(36, 170, 60),
                            122.2607,
                        HorizontalAlignment.Right,
                            true,
                            881.2434,
                            new Dimension(724.8995),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("velit quisquam accusantium",
                        "dolorem",
                        ["qui",
                            "nulla"],
                    [new FieldInfo("id",
                            "autem",
                            "aut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("phone",
                            "optio",
                            "facere",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("email",
                            "error",
                            "molestiae",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("id",
                            "aliquam",
                            "quia",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                "officia",
                                "incidunt ipsa iste")),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                "minima",
                                "magnam consequatur ea"))],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "comment",
                            "eum aliquam a",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "updatedAt",
                            "asperiores quae veritatis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("non voluptatem assumenda",
                            "69ff236d-b456-fbcd-2399-af7b328f5b50",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "vero")])),
            new Sublayer(1,
                    true,
                    true,
                ListMode.Show,
                    37057158.4244,
                    34352.3714,
                    0.1057,
                    true,
                    "quo molestias dolor",
                    true,
                    "repellendus",
                new LayerFloorInfo("beatae"),
                [new Label(LabelPlacement.AboveCenter,
                        "deleniti",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        38101198.1033,
                        38211.1985,
                        true,
                        new Dimension(164.5954),
                    new TextSymbol("nihil dolores doloribus",
                        new MapColor(122, 106, 93),
                        new MapColor(27, 32, 211),
                            new Dimension(665.1725),
                        new MapFont(new Dimension(140.4945),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            746.5008,
                        new MapColor(121, 135, 176),
                        new MapColor(207, 245, 56),
                            301.7172,
                        HorizontalAlignment.Center,
                            true,
                            505.3603,
                            new Dimension(812.3566),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.AboveBefore,
                        "omnis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        30783422.6243,
                        35774.3885,
                        true,
                        new Dimension(893.7234),
                    new TextSymbol("nihil aut aliquam",
                        new MapColor(248, 118, 211),
                        new MapColor(175, 11, 177),
                            new Dimension(801.0618),
                        new MapFont(new Dimension(778.9128),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            267.6137,
                        new MapColor(209, 116, 111),
                        new MapColor(164, 210, 248),
                            555.5620,
                        HorizontalAlignment.Right,
                            true,
                            93.6823,
                            new Dimension(81.7674),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterRight,
                        "recusandae",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        49092967.3625,
                        19268.8209,
                        true,
                        new Dimension(990.7007),
                    new TextSymbol("quibusdam incidunt sit",
                        new MapColor(237, 232, 98),
                        new MapColor(229, 10, 40),
                            new Dimension(431.0685),
                        new MapFont(new Dimension(696.8698),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            458.1816,
                        new MapColor(28, 72, 25),
                        new MapColor(171, 27, 110),
                            459.9898,
                        HorizontalAlignment.Left,
                            true,
                            896.4011,
                            new Dimension(650.6780),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AboveStart,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        43312020.7417,
                        28206.7378,
                        true,
                        new Dimension(194.3239),
                    new TextSymbol("delectus molestiae et",
                        new MapColor(40, 146, 23),
                        new MapColor(169, 214, 25),
                            new Dimension(824.2151),
                        new MapFont(new Dimension(911.2486),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            937.9563,
                        new MapColor(200, 143, 101),
                        new MapColor(46, 242, 95),
                            417.6032,
                        HorizontalAlignment.Center,
                            true,
                            389.3110,
                            new Dimension(358.4048),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("iusto est et",
                        "et",
                        ["atque",
                            "dolor",
                            "nisi",
                            "iure"],
                    [new FieldInfo("email",
                            "nam",
                            "similique",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("password",
                            "eos",
                            "quas",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("email",
                            "a",
                            "qui",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("token",
                            "minima",
                            "pariatur",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "magnam",
                                "saepe dolorem impedit"))],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "id",
                            "quos laborum iste",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("molestias sed consequatur",
                            "https://picsum.photos/640/480/?image=228",
                            "55643925-175a-31bc-a887-80d718a3b7c4",
                            () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "et"),
                    new ActionToggle("at temporibus cumque",
                            "7fd14d9a-f9ed-5140-4084-778264e9988c",
                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "libero")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Decades,
                    178.0474);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2023, 5, 18, 0, 40, 31),
                    new DateTime(2021, 2, 9, 7, 18, 15));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
