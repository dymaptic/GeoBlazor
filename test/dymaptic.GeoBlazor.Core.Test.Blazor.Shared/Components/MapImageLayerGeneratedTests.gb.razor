@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.SourceAtop)"
                        Dpi="@(94.8876)"
                        Effect="@(new Effect("et",
                            29900187.7273))"
                        GdbVersion="@("4.6.3.2")"
                        ImageFormat="@(MapImageFormat.Gif)"
                        ImageMaxHeight="@(3)"
                        ImageMaxWidth="@(5)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(30666347.9157)"
                        MinScale="@(11300.0927)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(129.6703)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.8224)"
                        Copyright="@("molestiae")"
                        FullExtent="@(new Extent(-56.8764,
                                -81.0830,
                                -49.3470,
                                23.6573,
                                19.0212,
                                913.7176,
                                448.0823,
                                826.7182,
                            new SpatialReference(6,
                                    "laudantium",
                                    "qui",
                                    "sit"),
                                true,
                                true))"
                        Title="@("in qui qui")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Years)"
                            Value="@(496.4427)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("perferendis")"
                            EndField="@("dignissimos")"
                            Stops="@([new DateTime(2021, 6, 14, 14, 46, 45),
                                new DateTime(2014, 8, 25, 19, 34, 55)])"
                            TimeZone="@("Atlantic/South_Georgia")"
                            TrackIdField="@("sit")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Minutes)"
                                Value="@(982.9744)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2007, 3, 3, 20, 23, 12))"
                                End="@(new DateTime(2001, 7, 1, 1, 31, 8))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2009, 2, 25, 8, 20, 43))"
                            End="@(new DateTime(2007, 8, 11, 0, 50, 8))">
                        </TimeExtent>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(3)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(46676989.7878)"
                            MinScale="@(32974.7180)"
                            Opacity="@(0.4424)"
                            PopupEnabled="@(true)"
                            Title="@("rerum numquam aut")"
                            Visible="@(true)"
                            DefinitionExpression="@("voluptas")"
                            FloorInfo="@(new LayerFloorInfo("qui"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowLeft,
                                    "accusantium",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    38624283.2045,
                                    40806.3332,
                                    true,
                                    new Dimension(911.9596),
                                new TextSymbol("dolor dolor facere",
                                    new MapColor(246, 19, 33),
                                    new MapColor(3, 132, 208),
                                        new Dimension(849.4403),
                                    new MapFont(new Dimension(144.8712),
                                            "Garamond",
                                        MapFontStyle.Italic,
                                        FontWeight.Lighter,
                                        TextDecoration.LineThrough),
                                        893.6783,
                                    new MapColor(211, 110, 128),
                                    new MapColor(191, 130, 167),
                                        214.9374,
                                    HorizontalAlignment.Left,
                                        true,
                                        730.7524,
                                        new Dimension(666.0476),
                                        true),
                                    true,
                                    "Name = 'John Doe'")])"
                            PopupTemplate="@(new PopupTemplate("molestiae sit maiores",
                                    "dignissimos",
                                    ["enim",
                                        "provident"],
                                [new FieldInfo("status",
                                        "nostrum",
                                        "molestiae",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("password",
                                        "dolor",
                                        "voluptatibus",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("status",
                                        "beatae",
                                        "occaecati",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.ShortDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("email",
                                        "et",
                                        "voluptatem",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortDate),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new AttachmentsPopupContent("aliquid reprehenderit sit",
                                        "consequatur aut velit nulla",
                                        AttachmentsPopupContentDisplayType.Auto)],
                                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "token",
                                        "reprehenderit quia dolor",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "category",
                                        "assumenda nesciunt aperiam",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "token",
                                        "officia consequatur sed",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "comment",
                                        "autem ea reiciendis",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("quam et ratione",
                                        "28794393-5065-8e8b-0938-6703694950e4",
                                        () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "comment",
                                        "quidem"),
                                new ActionToggle("vitae non culpa",
                                        "86a6f16f-c809-d583-90c0-b35e6e688e20",
                                        () => { Console.WriteLine("ipsam"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "email",
                                        "incidunt")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("nobis aperiam doloremque",
                                    new MapColor(250, 167, 125),
                                    new MapColor(73, 103, 134),
                                        new Dimension(856.6383),
                                    new MapFont(new Dimension(30.9339),
                                            "Helvetica",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        940.5366,
                                    new MapColor(155, 135, 131),
                                    new MapColor(160, 231, 248),
                                        524.3223,
                                    HorizontalAlignment.Left,
                                        true,
                                        691.7915,
                                        new Dimension(516.1869),
                                        true),
                                    "eum",
                                [new SizeVariable("nostrum",
                                        new Dimension(65.0835),
                                        new Dimension(374.0735),
                                        280.1047,
                                        210.6118,
                                        VisualValueRepresentation.Width,
                                        VisualValueUnit.Meters,
                                        "perspiciatis",
                                        "adipisci",
                                        true,
                                        VisualAxis.Width,
                                        "praesentium",
                                        "inventore quaerat aut",
                                    new VisualVariableLegendOptions(true,
                                            "et nihil consequatur")),
                                new OpacityVariable("libero",
                                        "officiis",
                                    [new OpacityStop(707.8506,
                                            0.1471,
                                            "sit"),
                                    new OpacityStop(705.9880,
                                            0.1536,
                                            "dolorem")],
                                    new VisualVariableLegendOptions(true,
                                            "molestiae sunt sed"),
                                        "rerum",
                                        "et minima ab")],
                                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(30, 183, 43),
                                            new MapColor(50, 55, 100)),
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(167, 81, 102),
                                            new MapColor(61, 164, 225)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(146, 64, 136),
                                            new MapColor(39, 240, 54)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(220, 182, 58),
                                            new MapColor(67, 207, 47))]),
                                        740.9939,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(152.3257,
                                                729.5964)],
                                            "voluptas",
                                            "libero",
                                            "accusantium"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(36.2920,
                                                946.5153)],
                                            "perferendis",
                                            "velit",
                                            "voluptatem"),
                                        ["rerum",
                                            "reprehenderit",
                                            "odit",
                                            "architecto"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "nihil",
                                        true,
                                    LengthUnit.Kilometers,
                                        194.0757,
                                        63.7069,
                                        688.0909,
                                        131.4354)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(7)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(9083985.5096)"
                                MinScale="@(28213.0233)"
                                Opacity="@(0.0240)"
                                PopupEnabled="@(true)"
                                Title="@("rerum aut impedit")"
                                Visible="@(true)"
                                DefinitionExpression="@("et")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(5)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(43906940.2322)"
                                    MinScale="@(19159.8143)"
                                    Opacity="@(0.6642)"
                                    PopupEnabled="@(true)"
                                    Title="@("autem doloribus adipisci")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("dolores")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(36680446.6441)"
                                        MinScale="@(5716.1633)"
                                        Opacity="@(0.5192)"
                                        PopupEnabled="@(true)"
                                        Title="@("aspernatur ad voluptatem")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("porro")"
                                        Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(8)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(43671512.8191)"
                                            MinScale="@(14883.0126)"
                                            Opacity="@(0.6048)"
                                            PopupEnabled="@(true)"
                                            Title="@("cum delectus odit")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("delectus")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(5)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(20883981.7603)"
                                                MinScale="@(13148.7780)"
                                                Opacity="@(0.5113)"
                                                PopupEnabled="@(true)"
                                                Title="@("ad velit pariatur")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("exercitationem")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(6)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(17944699.6162)"
                                                    MinScale="@(38331.4569)"
                                                    Opacity="@(0.3947)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("ut aperiam magni")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("velit")"
                                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("dolorum numquam quas")"
                                                        StringContent="@("necessitatibus")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("ducimus")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("voluptatibus voluptate et")"
                                                    StringContent="@("aperiam")"
                                                    OutFields="@(["temporibus",
                                                        "placeat"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new MediaPopupContent(),
                                                    new AttachmentsPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "ca9ad798-35b4-1d3d-7fff-17c241517d98",
                                                            () => { Console.WriteLine("quisquam"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "319a6a76-99b9-3a7c-c6df-70ef37afb065",
                                                            () => { Console.WriteLine("illo"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterLeft)"
                                                    LabelExpression="@("explicabo")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(32899431.2048)"
                                                    MinScale="@(1567.6695)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(801.5641))"
                                                    Symbol="@(new TextSymbol("aut neque inventore"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Province = 'Ontario'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("et")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                    new MultipartColorRamp(),
                                                        443.0106,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["minus",
                                                            "modi"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "sunt",
                                                        true,
                                                    LengthUnit.Yards,
                                                        707.1347,
                                                        703.9656,
                                                        298.2460,
                                                        464.6037))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("enim minus architecto")"
                                                StringContent="@("accusantium")"
                                                OutFields="@(["consectetur",
                                                    "consectetur",
                                                    "quia",
                                                    "distinctio"])"
                                                FieldInfos="@([new FieldInfo("token",
                                                        "cum",
                                                        "sed",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev),
                                                new FieldInfo("comment",
                                                        "aut",
                                                        "odit",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum)])"
                                                Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "nisi nostrum est quas optio",
                                                        "qui quis qui"),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "sit omnis ea tempora ratione",
                                                        "reprehenderit sunt modi"),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "status",
                                                        "rem maiores rerum"),
                                                new ExpressionInfo("return Date();",
                                                        "title",
                                                        "illo quia vel")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("et fugit eius",
                                                        "54130c1f-57cd-71d1-9175-23a8df84a6a1",
                                                        () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "phone",
                                                        "ut"),
                                                new ActionToggle("nemo labore corrupti",
                                                        "cf162361-96b2-6897-716a-07dc6dd9fb31",
                                                        () => { Console.WriteLine("optio"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "email",
                                                        "omnis")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowBefore)"
                                                LabelExpression="@("in")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(18879845.7163)"
                                                MinScale="@(42799.2143)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(12.5315))"
                                                Symbol="@(new TextSymbol("repellat mollitia iure",
                                                    new MapColor(34, 210, 227),
                                                    new MapColor(176, 3, 228),
                                                        null,
                                                    new MapFont(),
                                                        567.0245,
                                                    new MapColor(95, 35, 236),
                                                    new MapColor(151, 95, 45),
                                                        634.2921,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        871.2076,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Country = 'Canada'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("est")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(136, 139, 195),
                                                    new MapColor(239, 60, 190)),
                                                    7.8089,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "laboriosam",
                                                        "voluptas",
                                                        "unde"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "omnis",
                                                        "ipsa",
                                                        "quia"),
                                                    ["beatae",
                                                        "sequi",
                                                        "aliquid"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "molestias",
                                                    true,
                                                LengthUnit.NauticalMiles,
                                                    572.7106,
                                                    997.1719,
                                                    740.0199,
                                                    701.0748))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("ea nemo sed")"
                                            StringContent="@("dignissimos")"
                                            OutFields="@(["quibusdam",
                                                "harum"])"
                                            FieldInfos="@([new FieldInfo("name",
                                                    "voluptates",
                                                    "sit",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.LongMonthDayYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("status",
                                                    "rerum",
                                                    "nisi",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var)])"
                                            Content="@([new TextPopupContent("quo numquam inventore"),
                                            new RelationshipPopupContent("corrupti accusamus est",
                                                    "sit ut qui ipsum nesciunt dolor itaque",
                                                    3,
                                                    "ad",
                                                [new RelatedRecordsInfoFieldOrder("consequatur",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("laboriosam",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("in",
                                                    OrderBy.Asc)],
                                                    3),
                                            new MediaPopupContent("quasi maxime quia",
                                                    "iste dolorem quasi rerum",
                                                [new PieChartMediaInfo("est incidunt non",
                                                        "sunt",
                                                        "accusamus distinctio voluptas",
                                                    new ChartMediaInfoValue()),
                                                new LineChartMediaInfo("quia ipsa et",
                                                        "dignissimos",
                                                        "sint dolorem odit",
                                                    new ChartMediaInfoValue())],
                                                    2),
                                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "molestias",
                                                        "ut molestiae voluptatem"))])"
                                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "group",
                                                    "qui voluptas optio",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return Date();",
                                                    "group",
                                                    "laborum provident rerum",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "id",
                                                    "facere asperiores praesentium",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "createdAt",
                                                    "omnis sed quia",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("sunt explicabo architecto",
                                                    "db77e055-33f5-9e99-7711-e4f971ca07f2",
                                                    () => { Console.WriteLine("animi"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "category",
                                                    "aut"),
                                            new ActionButton("autem consequuntur aut",
                                                    "https://picsum.photos/640/480/?image=912",
                                                    "bf0a45d2-31f4-ae89-5f8f-d090fa3c6c9c",
                                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                    "comment",
                                                    true,
                                                    true,
                                                    true,
                                                    "voluptatem"),
                                            new ActionToggle("aspernatur id quod",
                                                    "cd4de758-8fbe-6df6-1167-4c129f7b6637",
                                                    () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "comment",
                                                    "similique")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowAfter)"
                                            LabelExpression="@("veniam")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(35966531.7546)"
                                            MinScale="@(29780.0890)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(389.9709))"
                                            Symbol="@(new TextSymbol("praesentium odit velit",
                                                new MapColor(36, 70, 223),
                                                new MapColor(81, 58, 159),
                                                    new Dimension(69.3876),
                                                new MapFont(new Dimension(290.8422),
                                                        "Bookman",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Bolder,
                                                    TextDecoration.LineThrough),
                                                    209.3079,
                                                new MapColor(21, 244, 188),
                                                new MapColor(6, 205, 109),
                                                    266.2287,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    838.7868,
                                                    new Dimension(928.8488),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Age > 21")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("voluptas")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(22, 215, 85),
                                                    new MapColor(102, 148, 173)),
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(236, 132, 159),
                                                    new MapColor(171, 202, 198)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(213, 15, 43),
                                                    new MapColor(218, 129, 192)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(50, 20, 5),
                                                    new MapColor(48, 110, 157))]),
                                                498.8175,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(366.6062,
                                                        552.6259),
                                                new AuthoringInfoField1ClassBreakInfos(829.0762,
                                                        189.3839),
                                                new AuthoringInfoField1ClassBreakInfos(695.9362,
                                                        812.9374),
                                                new AuthoringInfoField1ClassBreakInfos(498.6297,
                                                        686.9215)],
                                                    "et",
                                                    "unde",
                                                    "sed"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(555.1824,
                                                        387.8630),
                                                new AuthoringInfoField1ClassBreakInfos(586.9396,
                                                        466.9915),
                                                new AuthoringInfoField1ClassBreakInfos(118.3077,
                                                        383.0231)],
                                                    "totam",
                                                    "et",
                                                    "dicta"),
                                                ["id",
                                                    "molestias",
                                                    "aliquam"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "quia",
                                                true,
                                            LengthUnit.Inches,
                                                372.3472,
                                                849.8088,
                                                468.2943,
                                                394.4327))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("voluptatem et doloribus")"
                                        StringContent="@("consequatur")"
                                        OutFields="@(["deserunt",
                                            "quos",
                                            "est",
                                            "eos"])"
                                        FieldInfos="@([new FieldInfo("createdAt",
                                                "omnis",
                                                "ut",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("name",
                                                "et",
                                                "nisi",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.DayShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Var)])"
                                        Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "odio",
                                                    "ut nostrum placeat")),
                                        new TextPopupContent("odit nemo qui")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "status",
                                                "deleniti nobis nisi",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "email",
                                                "facilis error neque",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("ut quia quia",
                                                "https://picsum.photos/640/480/?image=247",
                                                "cbb22296-9214-df8f-6748-167dadf1dd75",
                                                () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                                "category",
                                                true,
                                                true,
                                                true,
                                                "ea")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveEnd)"
                                        LabelExpression="@("dicta")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(23011795.1690)"
                                        MinScale="@(2069.2009)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(62.3460))"
                                        Symbol="@(new TextSymbol("ipsum possimus reiciendis",
                                            new MapColor(2, 89, 154),
                                            new MapColor(208, 189, 193),
                                                new Dimension(479.1094),
                                            new MapFont(new Dimension(736.7073),
                                                    "Bookman",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bolder,
                                                TextDecoration.None),
                                                273.2233,
                                            new MapColor(32, 28, 63),
                                            new MapColor(231, 118, 191),
                                                408.8087,
                                            HorizontalAlignment.Left,
                                                true,
                                                296.3297,
                                                new Dimension(211.8118),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Country = 'Canada'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("aut")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(128, 103, 129),
                                                new MapColor(97, 26, 58)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(64, 6, 180),
                                                new MapColor(38, 249, 84)),
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(190, 14, 193),
                                                new MapColor(213, 238, 208))]),
                                            428.2010,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(17.8751,
                                                    87.6296),
                                            new AuthoringInfoField1ClassBreakInfos(857.3151,
                                                    943.5912)],
                                                "fuga",
                                                "autem",
                                                "ea"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(327.6628,
                                                    223.6822)],
                                                "et",
                                                "aut",
                                                "earum"),
                                            ["qui",
                                                "ea"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "alias",
                                            true,
                                        LengthUnit.UsFeet,
                                            124.8353,
                                            105.6516,
                                            260.9997,
                                            319.5247))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("omnis exercitationem quidem")"
                                    StringContent="@("occaecati")"
                                    OutFields="@(["ex",
                                        "quis"])"
                                    FieldInfos="@([new FieldInfo("title",
                                            "est",
                                            "porro",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("email",
                                            "aperiam",
                                            "provident",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("email",
                                            "necessitatibus",
                                            "veritatis",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev)])"
                                    Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                "ex",
                                                "aliquid laudantium ut"))])"
                                    ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "createdAt",
                                            "nisi vero sint",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "email",
                                            "ducimus porro inventore",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature['FieldName'];",
                                            "group",
                                            "et perspiciatis enim",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("eius animi aut",
                                            "891aa1e9-062b-5e08-3d32-94020a595c8d",
                                            () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "createdAt",
                                            "ab")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterLeft)"
                                    LabelExpression="@("officia")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(12102659.7505)"
                                    MinScale="@(43317.5046)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(157.2404))"
                                    Symbol="@(new TextSymbol("facere optio vel",
                                        new MapColor(226, 18, 160),
                                        new MapColor(238, 97, 147),
                                            new Dimension(892.6060),
                                        new MapFont(new Dimension(675.8173),
                                                "Helvetica",
                                            MapFontStyle.Normal,
                                            FontWeight.Bold,
                                            TextDecoration.Underline),
                                            863.2127,
                                        new MapColor(180, 185, 107),
                                        new MapColor(207, 177, 18),
                                            683.4293,
                                        HorizontalAlignment.Left,
                                            true,
                                            109.1854,
                                            new Dimension(508.4744),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("PostalCode = 'M5V 1J9'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("odio")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-106.5650,
                    -64.7105,
                    -18.2748,
                    -63.3981,
                    993.8842,
                    847.6329,
                    853.3064,
                    589.7280,
                new SpatialReference(8,
                        "velit",
                        "eligendi",
                        "repellat"),
                    true,
                    true),
                9,
                2,
            new MapImageLayerCreateExportImageParametersOptions(909.6585,
                    62.4760,
                    "dicta"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-49.5234,
                    24.9098,
                    68.4251,
                    17.0005,
                    631.8401,
                    417.1142,
                    955.0372,
                    299.1679,
                new SpatialReference(3,
                        "eligendi",
                        "repudiandae",
                        "sed"),
                    true,
                    true),
                2,
                8,
            new MapImageLayerFetchImageOptions(953.9459,
                    283.8294,
                    "corporis"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(1);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Hue;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2014, 7, 23, 5, 31, 10),
                    new DateTime(2008, 7, 24, 4, 48, 57));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("aliquid",
                    "deleniti",
                new TimeExtent(new DateTime(2003, 8, 18, 6, 41, 2),
                        new DateTime(2012, 2, 22, 12, 24, 6)),
                new TimeInterval(TemporalTime.Decades,
                        69.9548),
                    [new DateTime(2006, 3, 27, 19, 20, 21),
                        new DateTime(2001, 3, 7, 0, 42, 29),
                        new DateTime(2015, 4, 17, 17, 56, 12),
                        new DateTime(2003, 10, 12, 12, 57, 39)],
                    "Asia/Magadan",
                    "animi");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(3,
                    true,
                    true,
                ListMode.Show,
                    26877842.8071,
                    16555.6342,
                    0.7176,
                    true,
                    "recusandae ad consequatur",
                    true,
                    "voluptas",
                new LayerFloorInfo("veritatis"),
                [new Label(LabelPlacement.AlwaysHorizontal,
                        "autem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        3150035.5722,
                        4203.9106,
                        true,
                        new Dimension(508.3221),
                    new TextSymbol("laboriosam aut beatae",
                        new MapColor(18, 171, 191),
                        new MapColor(191, 168, 45),
                            new Dimension(859.0976),
                        new MapFont(new Dimension(225.8666),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            977.0299,
                        new MapColor(114, 243, 90),
                        new MapColor(238, 35, 237),
                            95.5781,
                        HorizontalAlignment.Left,
                            true,
                            500.1604,
                            new Dimension(103.4299),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("laborum at harum",
                        "illum",
                        ["deleniti",
                            "ea",
                            "dolor"],
                    [new FieldInfo("avatar",
                            "sint",
                            "labore",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new MediaPopupContent("dicta corrupti et",
                            "odio doloribus qui quae dolores et",
                        [new ColumnChartMediaInfo("est rerum voluptas",
                                "est",
                                "cum nesciunt mollitia",
                            new ChartMediaInfoValue(["laudantium",
                                    "facilis"],
                                    "aut",
                                    "et",
                                [new ChartMediaInfoValueSeries("password",
                                        "sequi",
                                        701.1389)],
                                [new MapColor(56, 117, 218),
                                new MapColor(214, 31, 162),
                                new MapColor(43, 94, 249),
                                new MapColor(104, 75, 63)]))],
                            1),
                    new FieldsPopupContent([new FieldInfo("category",
                                "voluptatibus",
                                "tempora",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                            "laboriosam cumque sequi voluptates sunt",
                            "et dolor eum"),
                    new FieldsPopupContent([new FieldInfo("category",
                                "accusantium",
                                "esse",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("token",
                                "consequuntur",
                                "consequatur",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("password",
                                "animi",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("email",
                                "iste",
                                "nihil",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Max)],
                            "ab delectus rerum occaecati",
                            "sint atque deleniti")],
                    [new ExpressionInfo("return Date();",
                            "title",
                            "enim nostrum deleniti",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "title",
                            "soluta labore asperiores",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "name",
                            "et eius illo",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("consequatur est repellat",
                            "da6eb5f0-e87f-26c9-c1ad-e5a65da2f8c3",
                            () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "assumenda"),
                    new ActionButton("rerum distinctio ratione",
                            "https://picsum.photos/640/480/?image=442",
                            "40f71b87-7caf-9904-03e2-abc653211bc6",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "enim"),
                    new ActionToggle("explicabo et ea",
                            "b993d34d-c95a-0fa0-b551-1dbb11ed3384",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "officiis"),
                    new ActionToggle("eos est odit",
                            "ffff0ca6-617d-65d4-87be-f9c5684f9c66",
                            () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "doloremque")])),
            new Sublayer(2,
                    true,
                    true,
                ListMode.Show,
                    35788962.3338,
                    22044.1227,
                    0.7586,
                    true,
                    "aut voluptates sit",
                    true,
                    "vitae",
                new LayerFloorInfo("assumenda"),
                [new Label(LabelPlacement.AboveLeft,
                        "nemo",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        18031377.4442,
                        37038.0378,
                        true,
                        new Dimension(550.1755),
                    new TextSymbol("ipsa distinctio voluptate",
                        new MapColor(239, 55, 171),
                        new MapColor(1, 101, 5),
                            new Dimension(292.9380),
                        new MapFont(new Dimension(814.4106),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            457.7138,
                        new MapColor(169, 206, 241),
                        new MapColor(31, 54, 200),
                            308.0950,
                        HorizontalAlignment.Center,
                            true,
                            987.0252,
                            new Dimension(594.3579),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.AboveBefore,
                        "ut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        32205022.6174,
                        31240.4958,
                        true,
                        new Dimension(432.4608),
                    new TextSymbol("tempore ab aut",
                        new MapColor(190, 34, 141),
                        new MapColor(221, 38, 96),
                            new Dimension(279.7970),
                        new MapFont(new Dimension(933.7815),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            421.9367,
                        new MapColor(106, 143, 203),
                        new MapColor(245, 183, 52),
                            24.1579,
                        HorizontalAlignment.Right,
                            true,
                            850.9446,
                            new Dimension(378.4759),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("a consequuntur at",
                        "est",
                        ["aperiam",
                            "fuga",
                            "est",
                            "ipsa"],
                    [new FieldInfo("id",
                            "molestias",
                            "quos",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("status",
                            "et",
                            "velit",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("avatar",
                            "nihil",
                            "sapiente",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Max)],
                    [new AttachmentsPopupContent("et molestias est",
                            "tenetur aliquid impedit aliquid voluptatum",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("dicta dolores natus")],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "group",
                            "optio atque est",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "category",
                            "ad id eveniet",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "id",
                            "deserunt quisquam placeat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "status",
                            "sunt aliquam consequuntur",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("aut non maiores",
                            "https://picsum.photos/640/480/?image=772",
                            "b6746664-d0c4-ed66-00de-53c41e13caa2",
                            () => { Console.WriteLine("id"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "delectus")])),
            new Sublayer(1,
                    true,
                    true,
                ListMode.Show,
                    32195727.3790,
                    23153.3340,
                    0.9409,
                    true,
                    "debitis quod nemo",
                    true,
                    "nulla",
                new LayerFloorInfo("laboriosam"),
                [new Label(LabelPlacement.AboveRight,
                        "itaque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        13379709.4014,
                        37377.9544,
                        true,
                        new Dimension(603.5248),
                    new TextSymbol("delectus aut ut",
                        new MapColor(84, 123, 242),
                        new MapColor(205, 207, 212),
                            new Dimension(770.7706),
                        new MapFont(new Dimension(426.1187),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            105.5277,
                        new MapColor(53, 215, 74),
                        new MapColor(81, 21, 20),
                            895.5325,
                        HorizontalAlignment.Center,
                            true,
                            930.9979,
                            new Dimension(52.2777),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.AboveAlong,
                        "ab",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        36232798.0757,
                        30448.2179,
                        true,
                        new Dimension(838.4494),
                    new TextSymbol("voluptates numquam quo",
                        new MapColor(74, 129, 167),
                        new MapColor(37, 31, 78),
                            new Dimension(993.0629),
                        new MapFont(new Dimension(352.7978),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            958.7556,
                        new MapColor(120, 223, 40),
                        new MapColor(206, 135, 182),
                            318.6490,
                        HorizontalAlignment.Center,
                            true,
                            749.8627,
                            new Dimension(823.7965),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.BelowStart,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        14274858.1082,
                        39925.5344,
                        true,
                        new Dimension(260.2623),
                    new TextSymbol("est ab alias",
                        new MapColor(127, 229, 229),
                        new MapColor(86, 159, 207),
                            new Dimension(577.1887),
                        new MapFont(new Dimension(599.8253),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            472.6944,
                        new MapColor(166, 211, 250),
                        new MapColor(53, 157, 167),
                            134.8825,
                        HorizontalAlignment.Left,
                            true,
                            787.8778,
                            new Dimension(352.7883),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.BelowCenter,
                        "quam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        28857689.0241,
                        21117.5750,
                        true,
                        new Dimension(941.8000),
                    new TextSymbol("impedit vel quam",
                        new MapColor(93, 249, 126),
                        new MapColor(163, 8, 35),
                            new Dimension(683.6552),
                        new MapFont(new Dimension(281.7475),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            244.3667,
                        new MapColor(119, 253, 152),
                        new MapColor(53, 42, 248),
                            641.7751,
                        HorizontalAlignment.Center,
                            true,
                            603.1580,
                            new Dimension(999.9553),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("non fugit corrupti",
                        "provident",
                        ["sit",
                            "dolorem",
                            "necessitatibus"],
                    [new FieldInfo("comment",
                            "assumenda",
                            "ullam",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("updatedAt",
                            "iste",
                            "quia",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("comment",
                            "vitae",
                            "non",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "id",
                                "aspernatur et id")),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                "debitis",
                                "nesciunt reiciendis a"))],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "comment",
                            "sint qui recusandae",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("natus omnis ut",
                            "https://picsum.photos/640/480/?image=733",
                            "d4bdf73f-8c2f-b12a-3a55-e7316c2afb68",
                            () => { Console.WriteLine("a"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "rem")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    37799751.7098,
                    36815.2787,
                    0.4113,
                    true,
                    "perspiciatis quia qui",
                    true,
                    "ad",
                new LayerFloorInfo("similique"),
                [new Label(LabelPlacement.BelowStart,
                        "laborum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        27501597.1205,
                        23312.2019,
                        true,
                        new Dimension(505.4282),
                    new TextSymbol("quod minima sint",
                        new MapColor(67, 105, 92),
                        new MapColor(11, 29, 217),
                            new Dimension(396.9296),
                        new MapFont(new Dimension(70.9006),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            382.4340,
                        new MapColor(106, 30, 143),
                        new MapColor(109, 73, 220),
                            678.4050,
                        HorizontalAlignment.Center,
                            true,
                            964.7640,
                            new Dimension(423.8277),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.AboveRight,
                        "nobis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        46717931.6225,
                        42261.5651,
                        true,
                        new Dimension(226.0251),
                    new TextSymbol("ea numquam delectus",
                        new MapColor(7, 170, 153),
                        new MapColor(96, 151, 201),
                            new Dimension(762.0250),
                        new MapFont(new Dimension(14.2763),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            244.4109,
                        new MapColor(175, 54, 229),
                        new MapColor(253, 75, 12),
                            40.1576,
                        HorizontalAlignment.Right,
                            true,
                            357.6706,
                            new Dimension(828.8874),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.CenterCenter,
                        "molestiae",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        10526447.7007,
                        8063.8172,
                        true,
                        new Dimension(138.4474),
                    new TextSymbol("cumque sit molestiae",
                        new MapColor(147, 211, 159),
                        new MapColor(66, 185, 136),
                            new Dimension(157.0665),
                        new MapFont(new Dimension(851.7545),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            305.0384,
                        new MapColor(88, 157, 154),
                        new MapColor(191, 69, 112),
                            625.3401,
                        HorizontalAlignment.Center,
                            true,
                            80.1022,
                            new Dimension(58.6276),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.AboveRight,
                        "qui",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        23520091.6671,
                        36344.8940,
                        true,
                        new Dimension(321.8892),
                    new TextSymbol("voluptates voluptatem aut",
                        new MapColor(91, 39, 201),
                        new MapColor(185, 141, 242),
                            new Dimension(387.0848),
                        new MapFont(new Dimension(109.0452),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            528.0008,
                        new MapColor(167, 17, 86),
                        new MapColor(232, 164, 182),
                            310.1724,
                        HorizontalAlignment.Right,
                            true,
                            256.9304,
                            new Dimension(301.2639),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("necessitatibus unde vero",
                        "quidem",
                        ["sunt",
                            "nemo",
                            "ullam",
                            "et"],
                    [new FieldInfo("token",
                            "rerum",
                            "mollitia",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Count)],
                    [new AttachmentsPopupContent("officia aliquid rem",
                            "cum est ullam in ea molestiae praesentium",
                            AttachmentsPopupContentDisplayType.Auto),
                    new AttachmentsPopupContent("nostrum itaque quibusdam",
                            "eius molestias est autem",
                            AttachmentsPopupContentDisplayType.Auto),
                    new RelationshipPopupContent("et ea minima",
                            "quae magni minus consequuntur",
                            5,
                            "aperiam",
                        [new RelatedRecordsInfoFieldOrder("ea",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("distinctio",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("sunt",
                            OrderBy.Asc)],
                            4)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "title",
                            "molestiae eligendi maiores",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("explicabo reprehenderit a",
                            "https://picsum.photos/640/480/?image=36",
                            "8b641da7-546a-7940-8bda-83f419a0968f",
                            () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "non"),
                    new ActionButton("qui facilis ipsum",
                            "https://picsum.photos/640/480/?image=999",
                            "197295fc-9974-7d29-ac94-a822499ec48a",
                            () => { Console.WriteLine("eligendi"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "quas")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-5.2122,
                    27.5034,
                    10.1084,
                    12.0988,
                    765.8214,
                    402.5457,
                    434.8792,
                    922.9326,
                new SpatialReference(9,
                        "iste",
                        "necessitatibus",
                        "fugit"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(4,
                    true,
                    true,
                ListMode.Show,
                    47989289.9070,
                    38848.5191,
                    0.5582,
                    true,
                    "repellat qui occaecati",
                    true,
                    "qui",
                new LayerFloorInfo("corporis"),
                [new Label(LabelPlacement.BelowStart,
                        "nulla",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        41414474.9365,
                        20933.5248,
                        true,
                        new Dimension(304.8250),
                    new TextSymbol("est molestiae animi",
                        new MapColor(235, 237, 126),
                        new MapColor(51, 146, 20),
                            new Dimension(943.3194),
                        new MapFont(new Dimension(959.4637),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            681.5712,
                        new MapColor(169, 191, 109),
                        new MapColor(247, 121, 247),
                            746.9475,
                        HorizontalAlignment.Center,
                            true,
                            454.8501,
                            new Dimension(424.7943),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.BelowBefore,
                        "dolorum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        23904028.0018,
                        2932.6419,
                        true,
                        new Dimension(199.4128),
                    new TextSymbol("molestias libero nihil",
                        new MapColor(75, 56, 139),
                        new MapColor(158, 106, 31),
                            new Dimension(461.7568),
                        new MapFont(new Dimension(149.9394),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            593.0161,
                        new MapColor(80, 136, 169),
                        new MapColor(28, 226, 48),
                            318.6419,
                        HorizontalAlignment.Left,
                            true,
                            894.8974,
                            new Dimension(798.0359),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.BelowStart,
                        "laboriosam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        44269654.9206,
                        17608.4648,
                        true,
                        new Dimension(780.9885),
                    new TextSymbol("quis id possimus",
                        new MapColor(142, 100, 123),
                        new MapColor(25, 162, 71),
                            new Dimension(213.8062),
                        new MapFont(new Dimension(908.2695),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            120.6304,
                        new MapColor(223, 52, 107),
                        new MapColor(80, 221, 62),
                            867.6986,
                        HorizontalAlignment.Right,
                            true,
                            751.5698,
                            new Dimension(945.2151),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("quae consectetur vel",
                        "et",
                        ["sequi",
                            "laudantium",
                            "amet"],
                    [new FieldInfo("id",
                            "ipsum",
                            "iure",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("title",
                            "qui",
                            "sint",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("createdAt",
                            "et",
                            "et",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new AttachmentsPopupContent("facilis hic consequatur",
                            "dolorem voluptatibus qui vel odio non",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "title",
                            "quo laborum aliquid",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "id",
                            "laborum repellendus est",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("maiores aut non",
                            "3177640e-d552-1510-62a6-94716be53335",
                            () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "et"),
                    new ActionToggle("rem enim ea",
                            "3d9cbedb-9b61-cb8c-6cac-d8f02222c123",
                            () => { Console.WriteLine("unde"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "mollitia"),
                    new ActionButton("ratione qui suscipit",
                            "https://picsum.photos/640/480/?image=993",
                            "cde2b577-5df2-0cd0-a40f-f8a31aaad471",
                            () => { Console.WriteLine("exercitationem"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "blanditiis"),
                    new ActionButton("est libero molestiae",
                            "https://picsum.photos/640/480/?image=357",
                            "696b918c-d855-c427-709c-a24567b79940",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "qui")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Centuries,
                    584.4560);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2014, 5, 15, 4, 30, 30),
                    new DateTime(2003, 4, 22, 17, 0, 54));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
