@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.ColorBurn)"
                        Dpi="@(805.1257)"
                        Effect="@(new Effect("qui",
                            3731430.9014))"
                        GdbVersion="@("1.0.5.1")"
                        ImageFormat="@(MapImageFormat.Svg)"
                        ImageMaxHeight="@(7)"
                        ImageMaxWidth="@(4)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(48409008.5394)"
                        MinScale="@(6523.9285)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(927.2709)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.7463)"
                        Copyright="@("non")"
                        FullExtent="@(new Extent(173.7025,
                                94.3049,
                                -50.1154,
                                42.0072,
                                597.9506,
                                228.0268,
                                946.7486,
                                719.6315,
                            new SpatialReference(5,
                                    "nisi",
                                    "eligendi",
                                    "qui"),
                                true,
                                true))"
                        Title="@("corporis quis rem")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Minutes)"
                            Value="@(454.5271)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("eligendi")"
                            EndField="@("nulla")"
                            Stops="@([new DateTime(2007, 7, 13, 6, 28, 18),
                                new DateTime(2014, 11, 7, 22, 32, 30),
                                new DateTime(2002, 8, 20, 10, 50, 44),
                                new DateTime(2003, 3, 25, 22, 44, 1)])"
                            TimeZone="@("Australia/Hobart")"
                            TrackIdField="@("voluptas")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Weeks)"
                                Value="@(784.7221)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2022, 4, 13, 17, 2, 15))"
                                End="@(new DateTime(2021, 5, 18, 21, 56, 40))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2020, 8, 6, 3, 22, 14))"
                            End="@(new DateTime(2000, 3, 23, 9, 16, 24))">
                        </TimeExtent>
                        <Sublayer 
                            SublayerId="@(2)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(398820.0491)"
                            MinScale="@(28990.8571)"
                            Opacity="@(0.1239)"
                            PopupEnabled="@(true)"
                            Title="@("aut nesciunt minus")"
                            Visible="@(true)"
                            DefinitionExpression="@("rerum")"
                            FloorInfo="@(new LayerFloorInfo("aut"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowStart,
                                    "sed",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    8079958.4108,
                                    1653.3695,
                                    true,
                                    new Dimension(212.8345),
                                new TextSymbol("porro enim eos",
                                    new MapColor(11, 151, 158),
                                    new MapColor(35, 64, 137),
                                        new Dimension(419.3912),
                                    new MapFont(new Dimension(990.3609),
                                            "Palatino",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        373.1340,
                                    new MapColor(130, 203, 80),
                                    new MapColor(72, 35, 138),
                                        158.2345,
                                    HorizontalAlignment.Right,
                                        true,
                                        70.4479,
                                        new Dimension(698.8720),
                                        true),
                                    true,
                                    "Country = 'Canada'"),
                            new Label(LabelPlacement.AboveBefore,
                                    "voluptates",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    41163513.3764,
                                    45173.3132,
                                    true,
                                    new Dimension(503.4318),
                                new TextSymbol("nisi quaerat reiciendis",
                                    new MapColor(102, 242, 145),
                                    new MapColor(114, 81, 86),
                                        new Dimension(481.4291),
                                    new MapFont(new Dimension(965.9381),
                                            "Bookman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        80.9906,
                                    new MapColor(142, 206, 251),
                                    new MapColor(117, 3, 235),
                                        482.6128,
                                    HorizontalAlignment.Left,
                                        true,
                                        988.6961,
                                        new Dimension(843.0259),
                                        true),
                                    true,
                                    "ObjectID = 1"),
                            new Label(LabelPlacement.CenterBefore,
                                    "ratione",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    19075303.7960,
                                    43992.3619,
                                    true,
                                    new Dimension(470.4087),
                                new TextSymbol("hic maiores non",
                                    new MapColor(56, 124, 10),
                                    new MapColor(130, 10, 157),
                                        new Dimension(896.2117),
                                    new MapFont(new Dimension(918.7601),
                                            "Verdana",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        814.3520,
                                    new MapColor(87, 74, 134),
                                    new MapColor(169, 160, 203),
                                        803.2652,
                                    HorizontalAlignment.Left,
                                        true,
                                        153.1742,
                                        new Dimension(958.5428),
                                        true),
                                    true,
                                    "ObjectID = 1"),
                            new Label(LabelPlacement.CenterLeft,
                                    "ut",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    30736995.8317,
                                    2043.1379,
                                    true,
                                    new Dimension(387.8784),
                                new TextSymbol("perspiciatis qui molestiae",
                                    new MapColor(37, 124, 188),
                                    new MapColor(104, 5, 167),
                                        new Dimension(454.1135),
                                    new MapFont(new Dimension(825.6351),
                                            "Palatino",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        986.0430,
                                    new MapColor(153, 79, 25),
                                    new MapColor(156, 82, 84),
                                        440.8473,
                                    HorizontalAlignment.Center,
                                        true,
                                        457.4140,
                                        new Dimension(980.1370),
                                        true),
                                    true,
                                    "Country = 'Canada'")])"
                            PopupTemplate="@(new PopupTemplate("sint adipisci cum",
                                    "hic",
                                    ["enim",
                                        "molestiae",
                                        "error"],
                                [new FieldInfo("title",
                                        "et",
                                        "et",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateLe),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("avatar",
                                        "accusamus",
                                        "animi",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new RelationshipPopupContent("provident blanditiis hic",
                                        "sequi quia officiis sit deleniti dolores",
                                        2,
                                        "aut",
                                    [new RelatedRecordsInfoFieldOrder("possimus",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("est",
                                        OrderBy.Desc),
                                    new RelatedRecordsInfoFieldOrder("quam",
                                        OrderBy.Desc)],
                                        1),
                                new MediaPopupContent("ut fugiat excepturi",
                                        "dolor vel a pariatur nemo dolorem",
                                    [new ImageMediaInfo("reprehenderit quia enim",
                                            "aliquid",
                                            "non possimus totam",
                                        new ImageMediaInfoValue("http://emmalee.com",
                                                "http://ola.biz"),
                                            57.0281)],
                                        5)],
                                [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "email",
                                        "et amet non",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "status",
                                        "nihil voluptatibus id",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("repellendus dolor aut",
                                        "https://picsum.photos/640/480/?image=863",
                                        "b92b0d86-a490-b2b9-427d-4f7e046e710c",
                                        () => { Console.WriteLine("doloremque"); return Task.CompletedTask; },
                                        "title",
                                        true,
                                        true,
                                        true,
                                        "odit"),
                                new ActionButton("quisquam nihil non",
                                        "https://picsum.photos/640/480/?image=554",
                                        "0817c6f3-0751-b5ea-9168-18c380005e19",
                                        () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                                        "comment",
                                        true,
                                        true,
                                        true,
                                        "quia")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("ut voluptas voluptates",
                                    new MapColor(80, 208, 215),
                                    new MapColor(31, 4, 140),
                                        new Dimension(444.9915),
                                    new MapFont(new Dimension(162.6671),
                                            "Garamond",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        875.2851,
                                    new MapColor(62, 164, 24),
                                    new MapColor(144, 13, 5),
                                        22.0911,
                                    HorizontalAlignment.Left,
                                        true,
                                        718.0891,
                                        new Dimension(731.3248),
                                        true),
                                    "occaecati",
                                [new OpacityVariable("cumque",
                                        "deserunt",
                                    [new OpacityStop(508.4033,
                                            0.7796,
                                            "tempora"),
                                    new OpacityStop(252.3096,
                                            0.5597,
                                            "rem")],
                                    new VisualVariableLegendOptions(true,
                                            "minima quis iusto"),
                                        "eligendi",
                                        "dolores consectetur qui"),
                                new RotationVariable("aspernatur",
                                    Axis.Tilt,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "ab et placeat"),
                                        "temporibus",
                                        "autem qui nihil"),
                                new OpacityVariable("qui",
                                        "eum",
                                    [new OpacityStop(567.2978,
                                            0.0145,
                                            "aspernatur")],
                                    new VisualVariableLegendOptions(true,
                                            "doloribus ut totam"),
                                        "beatae",
                                        "earum saepe facilis"),
                                new SizeVariable("qui",
                                        new Dimension(29.9130),
                                        new Dimension(397.4913),
                                        975.2150,
                                        431.2457,
                                        VisualValueRepresentation.Diameter,
                                        VisualValueUnit.Miles,
                                        "in",
                                        "consequuntur",
                                        true,
                                        VisualAxis.Height,
                                        "eos",
                                        "ea consequatur id",
                                    new VisualVariableLegendOptions(true,
                                            "sed a qui"))],
                                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(230, 2, 183),
                                        new MapColor(169, 205, 201)),
                                        246.2594,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(286.6963,
                                                611.2922),
                                        new AuthoringInfoField1ClassBreakInfos(587.0687,
                                                505.6637),
                                        new AuthoringInfoField1ClassBreakInfos(11.1936,
                                                367.1135)],
                                            "dolorum",
                                            "rerum",
                                            "soluta"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(108.9932,
                                                450.7083),
                                        new AuthoringInfoField1ClassBreakInfos(748.9365,
                                                295.3487)],
                                            "necessitatibus",
                                            "dolor",
                                            "fuga"),
                                        ["officia",
                                            "reiciendis",
                                            "reiciendis"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "dicta",
                                        true,
                                    LengthUnit.Kilometers,
                                        127.9537,
                                        341.1444,
                                        874.1552,
                                        767.6988)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(3)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(42120832.0838)"
                                MinScale="@(30353.9956)"
                                Opacity="@(0.7671)"
                                PopupEnabled="@(true)"
                                Title="@("corporis impedit quia")"
                                Visible="@(true)"
                                DefinitionExpression="@("sed")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(9)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(43810807.3647)"
                                    MinScale="@(29776.7106)"
                                    Opacity="@(0.3131)"
                                    PopupEnabled="@(true)"
                                    Title="@("accusamus non quod")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("quia")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(46062269.8493)"
                                        MinScale="@(30482.9710)"
                                        Opacity="@(0.4730)"
                                        PopupEnabled="@(true)"
                                        Title="@("quisquam nihil hic")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("officia")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(8)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(11115841.8695)"
                                            MinScale="@(6260.0861)"
                                            Opacity="@(0.5343)"
                                            PopupEnabled="@(true)"
                                            Title="@("dicta aliquam assumenda")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("commodi")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(7)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(28016683.5020)"
                                                MinScale="@(21545.8184)"
                                                Opacity="@(0.8292)"
                                                PopupEnabled="@(true)"
                                                Title="@("dolorem totam quia")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("aut")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(5)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(26810601.6484)"
                                                    MinScale="@(38885.8704)"
                                                    Opacity="@(0.5392)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("qui eos maiores")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("consequuntur")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("facere vel quis")"
                                                        StringContent="@("et")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("ut")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("voluptates accusantium rem")"
                                                    StringContent="@("aspernatur")"
                                                    OutFields="@(["ipsa",
                                                        "fugiat",
                                                        "quos",
                                                        "quo"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new MediaPopupContent(),
                                                    new RelationshipPopupContent(),
                                                    new AttachmentsPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)])])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "7e1817b7-55e4-4cda-52a1-68182e92c6d2",
                                                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "023662ab-4bef-7dac-776f-753dbe6435b1",
                                                            () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "97113dbd-7762-e5c6-6614-1cbee11ca4f8",
                                                            () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AlwaysHorizontal)"
                                                    LabelExpression="@("a")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(18555166.0181)"
                                                    MinScale="@(43736.9371)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(500.8972))"
                                                    Symbol="@(new TextSymbol("tempora pariatur dolor"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Name = 'John Doe'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("inventore")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                        53.2576,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["esse",
                                                            "itaque"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "deleniti",
                                                        true,
                                                    LengthUnit.Inches,
                                                        973.3273,
                                                        631.6189,
                                                        642.0365,
                                                        436.0174))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("inventore unde perferendis")"
                                                StringContent="@("similique")"
                                                OutFields="@(["temporibus",
                                                    "nulla",
                                                    "ut"])"
                                                FieldInfos="@([new FieldInfo("status",
                                                        "eum",
                                                        "voluptas",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max)])"
                                                Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "ipsum aut qui dolorem sed",
                                                        "rerum non excepturi"),
                                                new RelationshipPopupContent("illo minima nihil",
                                                        "maiores sed sed aut",
                                                        1,
                                                        "saepe",
                                                    [new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder()],
                                                        6),
                                                new AttachmentsPopupContent("quia impedit eligendi",
                                                        "et exercitationem omnis tempore")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "avatar",
                                                        "in occaecati in"),
                                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "name",
                                                        "illo voluptatem aut")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("quia repellat autem",
                                                        "https://picsum.photos/640/480/?image=664",
                                                        "784a4d07-719e-973d-1012-8c21d56fa12c",
                                                        () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                                        "category",
                                                        true,
                                                        true,
                                                        true,
                                                        "dolor")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveEnd)"
                                                LabelExpression="@("corrupti")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(21469357.2995)"
                                                MinScale="@(20615.4400)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(883.4594))"
                                                Symbol="@(new TextSymbol("vitae aliquid dolores",
                                                    new MapColor(15, 192, 114),
                                                    new MapColor(62, 135, 243),
                                                        null,
                                                    new MapFont(),
                                                        537.1154,
                                                    new MapColor(135, 173, 233),
                                                    new MapColor(128, 33, 172),
                                                        308.0514,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        521.3414,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Phone = '555-555-5555'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("numquam")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv)]),
                                                    589.5573,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "modi",
                                                        "quis",
                                                        "non"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "asperiores",
                                                        "neque",
                                                        "eum"),
                                                    ["sit",
                                                        "nam"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "error",
                                                    true,
                                                LengthUnit.Millimeters,
                                                    480.9307,
                                                    898.4480,
                                                    361.2646,
                                                    531.9422))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("eos error nesciunt")"
                                            StringContent="@("iusto")"
                                            OutFields="@(["corporis",
                                                "non",
                                                "exercitationem"])"
                                            FieldInfos="@([new FieldInfo("category",
                                                    "minima",
                                                    "sint",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortDateLe),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("password",
                                                    "ipsa",
                                                    "quibusdam",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.ShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("token",
                                                    "ea",
                                                    "aut",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min)])"
                                            Content="@([new RelationshipPopupContent("et delectus dolorem",
                                                    "illum voluptas officia fuga molestiae optio",
                                                    3,
                                                    "nihil",
                                                [new RelatedRecordsInfoFieldOrder("magni",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("exercitationem",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("nostrum",
                                                    OrderBy.Desc)],
                                                    9),
                                            new MediaPopupContent("quas ducimus rerum",
                                                    "consectetur praesentium et ut excepturi magnam magnam",
                                                [new PieChartMediaInfo("distinctio libero quam",
                                                        "minus",
                                                        "et accusamus voluptas",
                                                    new ChartMediaInfoValue())],
                                                    8),
                                            new AttachmentsPopupContent("id nisi accusamus",
                                                    "ut atque dignissimos quam excepturi",
                                                    AttachmentsPopupContentDisplayType.Auto),
                                            new MediaPopupContent("consequatur aperiam ab",
                                                    "voluptas et vel est optio",
                                                [new ColumnChartMediaInfo("asperiores incidunt ut",
                                                        "qui",
                                                        "et est eos",
                                                    new ChartMediaInfoValue()),
                                                new ImageMediaInfo("deleniti doloremque error",
                                                        "saepe",
                                                        "quidem ipsam distinctio",
                                                    new ImageMediaInfoValue(),
                                                        925.8932)],
                                                    6)])"
                                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "token",
                                                    "veritatis optio labore",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature['FieldName'];",
                                                    "token",
                                                    "accusamus delectus vel",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("qui est at",
                                                    "https://picsum.photos/640/480/?image=504",
                                                    "775d512f-8f23-0b9f-fdfa-2652d5f698fc",
                                                    () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                                    "createdAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "iste"),
                                            new ActionToggle("alias quam ut",
                                                    "47a32203-bbb5-212b-aeca-ff6014bbf250",
                                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "avatar",
                                                    "autem"),
                                            new ActionButton("veritatis nisi nobis",
                                                    "https://picsum.photos/640/480/?image=272",
                                                    "997012ff-0583-b2b8-6721-4baed49c89fc",
                                                    () => { Console.WriteLine("natus"); return Task.CompletedTask; },
                                                    "title",
                                                    true,
                                                    true,
                                                    true,
                                                    "asperiores")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterAfter)"
                                            LabelExpression="@("quidem")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(1674175.9640)"
                                            MinScale="@(11729.6279)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(672.3797))"
                                            Symbol="@(new TextSymbol("ullam consequatur excepturi",
                                                new MapColor(9, 115, 132),
                                                new MapColor(164, 120, 125),
                                                    new Dimension(676.8223),
                                                new MapFont(new Dimension(783.9320),
                                                        "Arial",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Lighter,
                                                    TextDecoration.Underline),
                                                    241.2193,
                                                new MapColor(117, 92, 78),
                                                new MapColor(48, 210, 89),
                                                    888.8721,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    750.9406,
                                                    new Dimension(408.1901),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Street = '123 Main St.'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("unde")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(121, 167, 213),
                                                new MapColor(23, 81, 227)),
                                                573.6269,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(868.7090,
                                                        501.4925),
                                                new AuthoringInfoField1ClassBreakInfos(385.4646,
                                                        981.9407),
                                                new AuthoringInfoField1ClassBreakInfos(188.3660,
                                                        636.5948)],
                                                    "animi",
                                                    "fugit",
                                                    "ut"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(799.4177,
                                                        757.2414)],
                                                    "in",
                                                    "mollitia",
                                                    "molestias"),
                                                ["magni",
                                                    "iusto",
                                                    "eligendi",
                                                    "laborum"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "nam",
                                                true,
                                            LengthUnit.Yards,
                                                40.0897,
                                                133.9710,
                                                136.8811,
                                                292.4960))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("assumenda beatae exercitationem")"
                                        StringContent="@("numquam")"
                                        OutFields="@(["beatae",
                                            "porro",
                                            "enim"])"
                                        FieldInfos="@([new FieldInfo("title",
                                                "sunt",
                                                "exercitationem",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Sum)])"
                                        Content="@([new RelationshipPopupContent("optio minima vel",
                                                "aspernatur doloremque reiciendis minus id",
                                                2,
                                                "sit",
                                            [new RelatedRecordsInfoFieldOrder("et",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("provident",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("autem",
                                                OrderBy.Desc)],
                                                2)])"
                                        ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                "group",
                                                "dolore maxime in",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "password",
                                                "sit libero ad",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "phone",
                                                "nobis explicabo consequatur",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "title",
                                                "porro sit omnis",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("illo sequi velit",
                                                "https://picsum.photos/640/480/?image=37",
                                                "bc62d9ef-ccea-5649-d597-cb295e0f7fe3",
                                                () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "sequi"),
                                        new ActionButton("culpa a autem",
                                                "https://picsum.photos/640/480/?image=978",
                                                "0ac6750d-457d-d5fe-d87f-5f9bc9b90e62",
                                                () => { Console.WriteLine("cupiditate"); return Task.CompletedTask; },
                                                "avatar",
                                                true,
                                                true,
                                                true,
                                                "ex")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveAfter)"
                                        LabelExpression="@("et")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(6887570.8671)"
                                        MinScale="@(5807.7594)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(34.7461))"
                                        Symbol="@(new TextSymbol("totam natus ullam",
                                            new MapColor(46, 188, 196),
                                            new MapColor(50, 89, 173),
                                                new Dimension(402.8906),
                                            new MapFont(new Dimension(739.7950),
                                                    "Verdana",
                                                MapFontStyle.Italic,
                                                FontWeight.Normal,
                                                TextDecoration.None),
                                                593.4936,
                                            new MapColor(138, 120, 58),
                                            new MapColor(206, 29, 126),
                                                654.4823,
                                            HorizontalAlignment.Right,
                                                true,
                                                509.1676,
                                                new Dimension(566.9511),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Age > 21")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("voluptate")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(49, 241, 106),
                                                new MapColor(28, 44, 94))]),
                                            252.6035,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(843.2139,
                                                    149.1135),
                                            new AuthoringInfoField1ClassBreakInfos(21.5847,
                                                    981.1026),
                                            new AuthoringInfoField1ClassBreakInfos(132.6512,
                                                    949.3570),
                                            new AuthoringInfoField1ClassBreakInfos(977.4624,
                                                    777.7960)],
                                                "ut",
                                                "voluptate",
                                                "porro"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(619.7242,
                                                    369.8797)],
                                                "dicta",
                                                "assumenda",
                                                "aut"),
                                            ["officia",
                                                "est",
                                                "enim",
                                                "reiciendis"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "nesciunt",
                                            true,
                                        LengthUnit.NauticalMiles,
                                            209.7622,
                                            238.1068,
                                            880.0127,
                                            938.7830))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("velit dolores omnis")"
                                    StringContent="@("consequuntur")"
                                    OutFields="@(["debitis",
                                        "quia",
                                        "et"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "quo",
                                            "qui",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("avatar",
                                            "illo",
                                            "repellat",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("title",
                                            "enim",
                                            "quos",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateLeShortTime),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("createdAt",
                                            "voluptatibus",
                                            "dolor",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Sum)])"
                                    Content="@([new RelationshipPopupContent("voluptates qui quae",
                                            "sapiente neque facere voluptatem velit",
                                            2,
                                            "provident",
                                        [new RelatedRecordsInfoFieldOrder("iusto",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("voluptatum",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("voluptatibus",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("unde",
                                            OrderBy.Asc)],
                                            3),
                                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "et",
                                                "atque magnam molestiae"))])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                            "password",
                                            "id velit nostrum",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "avatar",
                                            "non earum sunt",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("rem veritatis iusto",
                                            "https://picsum.photos/640/480/?image=650",
                                            "fa2d49fc-db98-036f-b7b2-a00ae7a447dc",
                                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "aspernatur"),
                                    new ActionToggle("quam aliquam earum",
                                            "57e55df3-4fc2-3274-d993-51e82151b19a",
                                            () => { Console.WriteLine("placeat"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "group",
                                            "repellendus")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterAlong)"
                                    LabelExpression="@("rerum")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(35034368.9390)"
                                    MinScale="@(7521.1655)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(732.5203))"
                                    Symbol="@(new TextSymbol("eum non repudiandae",
                                        new MapColor(180, 53, 87),
                                        new MapColor(93, 92, 115),
                                            new Dimension(671.8641),
                                        new MapFont(new Dimension(276.8273),
                                                "Garamond",
                                            MapFontStyle.Italic,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            387.0605,
                                        new MapColor(53, 233, 97),
                                        new MapColor(174, 112, 55),
                                            452.8584,
                                        HorizontalAlignment.Center,
                                            true,
                                            581.4945,
                                            new Dimension(416.0051),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("ObjectID = 1")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("quasi")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-86.7360,
                    -101.7523,
                    -53.5965,
                    -18.1688,
                    942.8674,
                    314.0861,
                    18.7651,
                    659.4613,
                new SpatialReference(9,
                        "atque",
                        "nisi",
                        "minus"),
                    true,
                    true),
                9,
                9,
            new MapImageLayerCreateExportImageParametersOptions(161.6625,
                    322.8454,
                    "delectus"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(54.7972,
                    -12.1178,
                    6.9915,
                    57.8765,
                    824.9172,
                    342.5887,
                    628.6541,
                    860.2934,
                new SpatialReference(6,
                        "natus",
                        "amet",
                        "sed"),
                    true,
                    true),
                6,
                4,
            new MapImageLayerFetchImageOptions(574.8369,
                    345.2449,
                    "sed"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "nostrum",
                    "nisi",
                    197.8324,
                    ["modi",
                        "eum",
                        "voluptas",
                        "voluptatem"],
                    new DateTime(2006, 11, 14, 12, 26, 38),
                    "tenetur",
                    "sunt non facere nobis excepturi voluptatem occaecati",
                new Extent(-10.2599,
                        -133.0790,
                        54.1144,
                        62.9647,
                        302.0203,
                        896.6223,
                        872.9879,
                        22.2336,
                    new SpatialReference(2,
                            "sequi",
                            "accusamus",
                            "aut"),
                        true,
                        true),
                    ["ea",
                        "hic",
                        "tempora"],
                    "nihil",
                    new DateTime(2011, 10, 23, 20, 57, 7),
                    "id",
                    724.9497);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.VividLight;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2005, 8, 2, 20, 56, 57),
                    new DateTime(2010, 8, 17, 21, 43, 30));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("nihil",
                    "omnis",
                new TimeExtent(new DateTime(2003, 3, 21, 21, 7, 37),
                        new DateTime(2001, 10, 3, 12, 48, 16)),
                new TimeInterval(TemporalTime.Months,
                        458.7156),
                    [new DateTime(2007, 9, 23, 19, 24, 53),
                        new DateTime(2017, 3, 26, 15, 26, 21),
                        new DateTime(2009, 2, 6, 0, 34, 45),
                        new DateTime(2016, 3, 1, 20, 9, 7)],
                    "Asia/Vladivostok",
                    "nulla");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeInterval = new TimeInterval(TemporalTime.Months,
                    327.9283);
        await mapImageLayer.SetTimeInterval(testTimeInterval);
        var timeInterval = await mapImageLayer.GetTimeInterval();
        Assert.AreEqual(testTimeInterval, timeInterval);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    40110827.2986,
                    35521.9888,
                    0.0573,
                    true,
                    "aut tenetur eum",
                    true,
                    "sint",
                new LayerFloorInfo("et"),
                [new Label(LabelPlacement.AboveCenter,
                        "quo",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        41914763.0489,
                        1967.9301,
                        true,
                        new Dimension(593.7187),
                    new TextSymbol("iure voluptatem voluptas",
                        new MapColor(75, 174, 67),
                        new MapColor(212, 89, 149),
                            new Dimension(949.7685),
                        new MapFont(new Dimension(303.2986),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            16.4016,
                        new MapColor(244, 211, 19),
                        new MapColor(126, 142, 51),
                            234.7937,
                        HorizontalAlignment.Left,
                            true,
                            96.5506,
                            new Dimension(519.3983),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.CenterStart,
                        "voluptas",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        14827786.4588,
                        39417.9381,
                        true,
                        new Dimension(856.8388),
                    new TextSymbol("aperiam voluptas deleniti",
                        new MapColor(105, 162, 35),
                        new MapColor(106, 69, 115),
                            new Dimension(624.0270),
                        new MapFont(new Dimension(715.6650),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            591.8459,
                        new MapColor(202, 145, 232),
                        new MapColor(66, 157, 253),
                            992.9649,
                        HorizontalAlignment.Left,
                            true,
                            846.6696,
                            new Dimension(464.3049),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.CenterBefore,
                        "non",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        31859049.4380,
                        20301.2206,
                        true,
                        new Dimension(237.1586),
                    new TextSymbol("minus et velit",
                        new MapColor(73, 132, 96),
                        new MapColor(3, 105, 30),
                            new Dimension(355.1534),
                        new MapFont(new Dimension(851.9953),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            172.6553,
                        new MapColor(161, 173, 24),
                        new MapColor(214, 138, 135),
                            88.3958,
                        HorizontalAlignment.Center,
                            true,
                            621.5105,
                            new Dimension(142.6652),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.BelowLeft,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        8830131.5168,
                        2620.7311,
                        true,
                        new Dimension(810.2679),
                    new TextSymbol("occaecati est laudantium",
                        new MapColor(24, 85, 140),
                        new MapColor(99, 114, 53),
                            new Dimension(276.4464),
                        new MapFont(new Dimension(245.2591),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            106.5165,
                        new MapColor(44, 97, 213),
                        new MapColor(18, 187, 157),
                            588.0062,
                        HorizontalAlignment.Left,
                            true,
                            926.6070,
                            new Dimension(520.9484),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("qui est aut",
                        "corrupti",
                        ["iure",
                            "illum"],
                    [new FieldInfo("phone",
                            "eaque",
                            "sequi",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("password",
                            "quam",
                            "ut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "quasi",
                                "nihil voluptatem rerum")),
                    new AttachmentsPopupContent("deleniti facilis porro",
                            "possimus et sapiente nemo quia",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return Date();",
                            "category",
                            "odio modi quibusdam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "updatedAt",
                            "vero quo vitae",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "phone",
                            "qui perspiciatis ut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("libero aliquam sint",
                            "https://picsum.photos/640/480/?image=668",
                            "0837c9f4-aa2b-a852-3149-5119c725eea4",
                            () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "ea"),
                    new ActionButton("nihil voluptas deserunt",
                            "https://picsum.photos/640/480/?image=989",
                            "99b9e0c3-70f2-63fc-7b30-b09832718b6f",
                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "magnam"),
                    new ActionButton("quos est porro",
                            "https://picsum.photos/640/480/?image=824",
                            "f834c642-2db9-77a2-d66b-cad922d3b551",
                            () => { Console.WriteLine("nostrum"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "laudantium"),
                    new ActionButton("nemo consequatur assumenda",
                            "https://picsum.photos/640/480/?image=983",
                            "8c26b2b9-4bf3-2e9e-653d-54a8ee6993db",
                            () => { Console.WriteLine("cumque"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "enim")])),
            new Sublayer(8,
                    true,
                    true,
                ListMode.Hide,
                    16672788.6858,
                    5435.7993,
                    0.4013,
                    true,
                    "qui tenetur in",
                    true,
                    "dicta",
                new LayerFloorInfo("est"),
                [new Label(LabelPlacement.CenterCenter,
                        "soluta",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        40234603.8107,
                        19064.4537,
                        true,
                        new Dimension(895.9203),
                    new TextSymbol("consequatur doloribus asperiores",
                        new MapColor(137, 68, 25),
                        new MapColor(156, 178, 134),
                            new Dimension(903.8121),
                        new MapFont(new Dimension(965.6763),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            498.2836,
                        new MapColor(129, 77, 154),
                        new MapColor(194, 24, 48),
                            422.4841,
                        HorizontalAlignment.Left,
                            true,
                            462.0881,
                            new Dimension(86.9290),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("illo velit maiores",
                        "et",
                        ["similique",
                            "non",
                            "dolorem",
                            "sed"],
                    [new FieldInfo("updatedAt",
                            "vero",
                            "suscipit",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("token",
                            "voluptatem",
                            "possimus",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("group",
                            "quis",
                            "consectetur",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new TextPopupContent("repudiandae est voluptatem"),
                    new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "omnis",
                                "est deserunt magnam")),
                    new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "earum",
                                "ut ut rerum")),
                    new AttachmentsPopupContent("sint dolores similique",
                            "nobis esse ut sint quasi qui",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return Date();",
                            "token",
                            "enim exercitationem nostrum",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("modi necessitatibus sed",
                            "5ed00313-c177-83b4-5606-97590072a95b",
                            () => { Console.WriteLine("facere"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "sed"),
                    new ActionButton("occaecati praesentium magni",
                            "https://picsum.photos/640/480/?image=211",
                            "4fc084d9-3b7f-371c-8230-fc0a3d3d17e5",
                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "velit")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-30.9061,
                    -149.3419,
                    16.8981,
                    -33.8538,
                    239.6407,
                    632.9399,
                    711.8291,
                    132.9978,
                new SpatialReference(6,
                        "quis",
                        "consequatur",
                        "pariatur"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(2,
                    true,
                    true,
                ListMode.Show,
                    43952137.2628,
                    35049.9114,
                    0.9919,
                    true,
                    "aut consequatur ea",
                    true,
                    "sed",
                new LayerFloorInfo("dignissimos"),
                [new Label(LabelPlacement.CenterBefore,
                        "fuga",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        11370799.9507,
                        41202.7681,
                        true,
                        new Dimension(532.9019),
                    new TextSymbol("nulla amet excepturi",
                        new MapColor(155, 48, 0),
                        new MapColor(0, 144, 94),
                            new Dimension(643.1936),
                        new MapFont(new Dimension(939.6557),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            139.0407,
                        new MapColor(249, 199, 123),
                        new MapColor(80, 220, 95),
                            518.7586,
                        HorizontalAlignment.Center,
                            true,
                            659.7620,
                            new Dimension(358.2057),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.CenterStart,
                        "voluptates",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        35856607.9393,
                        9342.9828,
                        true,
                        new Dimension(519.6431),
                    new TextSymbol("culpa beatae tenetur",
                        new MapColor(51, 232, 160),
                        new MapColor(182, 96, 48),
                            new Dimension(250.5168),
                        new MapFont(new Dimension(824.8336),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            293.9972,
                        new MapColor(176, 115, 27),
                        new MapColor(45, 165, 235),
                            649.2198,
                        HorizontalAlignment.Center,
                            true,
                            967.2177,
                            new Dimension(213.4218),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.AboveBefore,
                        "rerum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        47026732.0996,
                        39061.1821,
                        true,
                        new Dimension(514.3820),
                    new TextSymbol("autem eum eveniet",
                        new MapColor(188, 219, 95),
                        new MapColor(252, 102, 150),
                            new Dimension(41.2045),
                        new MapFont(new Dimension(509.2370),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            576.2744,
                        new MapColor(252, 125, 174),
                        new MapColor(51, 236, 30),
                            965.0132,
                        HorizontalAlignment.Right,
                            true,
                            643.9912,
                            new Dimension(962.4163),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "ipsa",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        33636661.2921,
                        10870.4977,
                        true,
                        new Dimension(138.5693),
                    new TextSymbol("officia vitae sit",
                        new MapColor(105, 135, 9),
                        new MapColor(103, 123, 103),
                            new Dimension(722.8468),
                        new MapFont(new Dimension(396.3279),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            776.2708,
                        new MapColor(192, 12, 118),
                        new MapColor(186, 80, 34),
                            466.1871,
                        HorizontalAlignment.Center,
                            true,
                            773.4433,
                            new Dimension(899.6307),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("perspiciatis possimus tempora",
                        "amet",
                        ["esse",
                            "qui"],
                    [new FieldInfo("name",
                            "quia",
                            "atque",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("createdAt",
                            "numquam",
                            "vero",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new AttachmentsPopupContent("quos enim nesciunt",
                            "dolorem ut et sunt",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("repellendus neque ut")],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "avatar",
                            "hic voluptas non",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "id",
                            "porro voluptas voluptas",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "category",
                            "officiis maxime eos",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("distinctio reprehenderit temporibus",
                            "https://picsum.photos/640/480/?image=852",
                            "276b2e34-d945-1f1b-d779-1b18a09f7e02",
                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "possimus"),
                    new ActionButton("quam eos magni",
                            "https://picsum.photos/640/480/?image=178",
                            "9d537d59-90a3-6151-5210-7d8e5652ddb0",
                            () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "sed"),
                    new ActionToggle("et dicta perspiciatis",
                            "3c0a7aba-979f-5a49-1a7b-c4414c51130d",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "ut"),
                    new ActionButton("occaecati dolores totam",
                            "https://picsum.photos/640/480/?image=1023",
                            "c5f281f7-ba67-0361-e1aa-3c69b9b841c2",
                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "voluptates")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Years,
                    541.9486);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2000, 11, 25, 22, 39, 49),
                    new DateTime(2018, 1, 23, 7, 54, 31));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
