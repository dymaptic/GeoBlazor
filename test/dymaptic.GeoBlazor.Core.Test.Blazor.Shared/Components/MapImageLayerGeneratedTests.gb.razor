@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.SourceAtop)"
                        Dpi="@(262.9113)"
                        Effect="@(new Effect("vero",
                            22106153.0191))"
                        GdbVersion="@("9.9.7.4")"
                        ImageFormat="@(MapImageFormat.Svg)"
                        ImageMaxHeight="@(8)"
                        ImageMaxWidth="@(8)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(18196607.3040)"
                        MinScale="@(603.1966)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(187.5949)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Hide)"
                        Visible="@(true)"
                        Opacity="@(0.2751)"
                        Copyright="@("eum")"
                        Title="@("vel nostrum occaecati")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Milliseconds)"
                            Value="@(737.0454)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("quo")"
                            EndField="@("nihil")"
                            Stops="@([new DateTime(2016, 5, 3, 4, 26, 50)])"
                            TimeZone="@("Australia/Brisbane")"
                            TrackIdField="@("molestias")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Hours)"
                                Value="@(407.5847)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2009, 10, 23, 9, 51, 17))"
                                End="@(new DateTime(2005, 7, 12, 0, 1, 29))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2019, 10, 5, 15, 15, 25))"
                            End="@(new DateTime(2008, 8, 16, 4, 3, 25))">
                        </TimeExtent>
                        <PortalItem />
                        <Extent 
                            Xmax="@(2.4869)"
                            Xmin="@(132.5644)"
                            Ymax="@(39.6250)"
                            Ymin="@(20.3916)"
                            Zmax="@(18.0378)"
                            Zmin="@(454.0432)"
                            Mmax="@(76.2957)"
                            Mmin="@(533.1785)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(1)"
                                ImageCoordinateSystem="@("dolorem")"
                                Wkt="@("voluptatem")"
                                Wkt2="@("velit")">
                            </SpatialReference>
                        </Extent>
                        <Sublayer 
                            SublayerId="@(3)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(19427084.8752)"
                            MinScale="@(852.6829)"
                            Opacity="@(0.4261)"
                            PopupEnabled="@(true)"
                            Title="@("iste aut aliquid")"
                            Visible="@(true)"
                            DefinitionExpression="@("repellendus")"
                            FloorInfo="@(new LayerFloorInfo("et"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveEnd,
                                    "temporibus",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    41840099.0026,
                                    33748.8355,
                                    true,
                                    new Dimension(798.5328),
                                new TextSymbol("iste qui laboriosam",
                                    new MapColor(189, 224, 40),
                                    new MapColor(20, 146, 11),
                                        new Dimension(772.6745),
                                    new MapFont(new Dimension(213.0639),
                                            "Georgia",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        656.2770,
                                    new MapColor(128, 222, 156),
                                    new MapColor(36, 35, 103),
                                        166.2164,
                                    HorizontalAlignment.Center,
                                        true,
                                        943.3597,
                                        new Dimension(803.1541),
                                        true),
                                    true,
                                    "ObjectID = 1"),
                            new Label(LabelPlacement.AboveStart,
                                    "quasi",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    42543495.9854,
                                    32206.0738,
                                    true,
                                    new Dimension(691.5146),
                                new TextSymbol("qui laudantium porro",
                                    new MapColor(59, 132, 192),
                                    new MapColor(100, 134, 83),
                                        new Dimension(787.4936),
                                    new MapFont(new Dimension(850.5948),
                                            "Georgia",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        850.9627,
                                    new MapColor(22, 239, 20),
                                    new MapColor(114, 84, 19),
                                        380.2749,
                                    HorizontalAlignment.Center,
                                        true,
                                        644.0633,
                                        new Dimension(336.6836),
                                        true),
                                    true,
                                    "Name = 'John Doe'")])"
                            PopupTemplate="@(new PopupTemplate("tempora perferendis labore",
                                    "aut",
                                    ["porro"],
                                [new FieldInfo("category",
                                        "sed",
                                        "hic",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.DayShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("password",
                                        "dolorem",
                                        "iusto",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                [new FieldsPopupContent([new FieldInfo("id",
                                            "sed",
                                            "eligendi",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                        "quia neque nemo in",
                                        "sint tempore placeat"),
                                new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "veniam",
                                            "et numquam consequuntur"))],
                                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "updatedAt",
                                        "assumenda commodi veniam",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("temporibus provident tenetur",
                                        "https://picsum.photos/640/480/?image=756",
                                        "6581ffb6-a8a0-3aab-7734-36244b5b7f65",
                                        () => { Console.WriteLine("consectetur"); return Task.CompletedTask; },
                                        "email",
                                        true,
                                        true,
                                        true,
                                        "nulla")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(172, 2, 145),
                                            new MapColor(253, 127, 23))]),
                                        435.0236,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(485.8453,
                                                391.4889)],
                                            "quidem",
                                            "consequatur",
                                            "accusamus"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(608.6745,
                                                439.1887),
                                        new AuthoringInfoField1ClassBreakInfos(221.7711,
                                                242.8133)],
                                            "fuga",
                                            "nemo",
                                            "quasi"),
                                        ["hic",
                                            "sunt"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "numquam",
                                        true,
                                    LengthUnit.Feet,
                                        623.2488,
                                        885.9090,
                                        759.1646,
                                        978.7838),
                                new PictureFillSymbol("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0",
                                    new Dimension(29.7401),
                                    new Dimension(922.2584),
                                    new Dimension(578.2143),
                                    new Dimension(777.7202),
                                    -8.6591,
                                    51.2634,
                                    new Outline(new MapColor(59, 64, 6),
                                        new Dimension(296.5015),
                                        SimpleLineSymbolStyle.LongDashDotDot,
                                        Cap.Butt,
                                        Join.Round,
                                        new LineSymbolMarker(new MapColor(138, 28, 39),
                                            LinePlacement.Begin,
                                            LineSymbolMarkerStyle.Arrow),
                                        538.9475),
                                    new MapColor(56, 81, 8)),
                                    "non",
                                    new DefaultSymbol(),
                                    "voluptas",
                                    "laboriosam",
                                    "ipsum",
                                    "non",
                                new UniqueValueRendererLegendOptions("saepe ipsum est"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("neque",
                                        new TextSymbol("odit beatae non",
                                            new MapColor(87, 28, 176),
                                            new MapColor(230, 241, 182),
                                                new Dimension(337.7373),
                                            new MapFont(new Dimension(773.4927),
                                                    "Helvetica",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                453.0054,
                                            new MapColor(242, 86, 248),
                                            new MapColor(205, 156, 52),
                                                296.3047,
                                            HorizontalAlignment.Right,
                                                true,
                                                837.2556,
                                                new Dimension(754.7831),
                                                true),
                                        [new UniqueValue("dolores",
                                                "quis",
                                                "blanditiis"),
                                        new UniqueValue("aperiam",
                                                "iusto",
                                                "omnis")])],
                                        "est")],
                                [new UniqueValueInfo("blanditiis",
                                    new TextSymbol("voluptas qui et",
                                        new MapColor(45, 210, 30),
                                        new MapColor(23, 102, 91),
                                            new Dimension(848.8614),
                                        new MapFont(new Dimension(610.7135),
                                                "Verdana",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            681.2742,
                                        new MapColor(176, 78, 103),
                                        new MapColor(212, 128, 110),
                                            985.1936,
                                        HorizontalAlignment.Center,
                                            true,
                                            27.8611,
                                            new Dimension(573.4170),
                                            true),
                                        "maxime")],
                                    "vel",
                                    "aliquid tempore beatae"))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(9)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(6654564.2717)"
                                MinScale="@(616.4479)"
                                Opacity="@(0.2930)"
                                PopupEnabled="@(true)"
                                Title="@("dicta distinctio eveniet")"
                                Visible="@(true)"
                                DefinitionExpression="@("a")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(5)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(46795531.2103)"
                                    MinScale="@(16706.1616)"
                                    Opacity="@(0.0240)"
                                    PopupEnabled="@(true)"
                                    Title="@("ab assumenda quod")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("fugiat")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(21994509.6466)"
                                        MinScale="@(3327.7296)"
                                        Opacity="@(0.1632)"
                                        PopupEnabled="@(true)"
                                        Title="@("eveniet harum totam")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("quidem")"
                                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                        <Sublayer 
                                            SublayerId="@(6)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(16857886.9299)"
                                            MinScale="@(29645.3875)"
                                            Opacity="@(0.7618)"
                                            PopupEnabled="@(true)"
                                            Title="@("eligendi iusto distinctio")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("quia")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(4)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(49409124.1148)"
                                                MinScale="@(22477.6230)"
                                                Opacity="@(0.0671)"
                                                PopupEnabled="@(true)"
                                                Title="@("quis eum aut")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("est")"
                                                Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(8)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(12705216.3817)"
                                                    MinScale="@(22959.2224)"
                                                    Opacity="@(0.2485)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("dolorum sunt tenetur")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("molestiae")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("rem quod deserunt")"
                                                        StringContent="@("ad")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("culpa")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("dolore vitae recusandae")"
                                                    StringContent="@("est")"
                                                    OutFields="@(["quidem"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new ExpressionPopupContent(),
                                                    new RelationshipPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton("mollitia fugit dolor",
                                                        "https://picsum.photos/640/480/?image=234",
                                                        "78b67de7-c7df-a094-018b-1062bc6d0490",
                                                        () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                                        "comment",
                                                        true,
                                                        true,
                                                        true,
                                                        "est"),
                                                        null])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveRight)"
                                                    LabelExpression="@("qui")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(42845778.9191)"
                                                    MinScale="@(22307.4272)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(625.0569))"
                                                    Symbol="@(new TextSymbol("nesciunt ipsam a"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("City = 'Toronto'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("praesentium")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                        979.2143,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["et",
                                                            "doloribus"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "blanditiis",
                                                        true,
                                                    LengthUnit.UsFeet,
                                                        433.8584,
                                                        866.6334,
                                                        13.7562,
                                                        341.4072))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("tempore et quisquam")"
                                                StringContent="@("aut")"
                                                OutFields="@(["perferendis",
                                                    "pariatur"])"
                                                FieldInfos="@([new FieldInfo("password",
                                                        "ut",
                                                        "at",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var)])"
                                                Content="@([new AttachmentsPopupContent("placeat ea quos",
                                                        "non rerum qui impedit"),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "comment",
                                                        "facere dolor magni")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("ex voluptas quos",
                                                    "https://picsum.photos/640/480/?image=196",
                                                    "ca586415-852d-dd4a-8cb6-758c20c882c4",
                                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                    "category",
                                                    true,
                                                    true,
                                                    true,
                                                    "architecto"),
                                                    new ActionButton("qui ducimus itaque",
                                                        "https://picsum.photos/640/480/?image=852",
                                                        "1c3c5cf8-0a9c-475e-f934-938721a79a14",
                                                        () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "perspiciatis")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterAfter)"
                                                LabelExpression="@("dolorum")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(38955880.6020)"
                                                MinScale="@(17579.1506)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(967.5249))"
                                                Symbol="@(new TextSymbol("nisi ut dignissimos",
                                                    new MapColor(226, 60, 76),
                                                    new MapColor(79, 203, 146),
                                                        null,
                                                    new MapFont(),
                                                        90.0633,
                                                    new MapColor(231, 113, 79),
                                                    new MapColor(90, 170, 145),
                                                        101.5792,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        856.9220,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Age > 21")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("optio")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch)]),
                                                    81.8302,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "aut",
                                                        "voluptas",
                                                        "ad"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "unde",
                                                        "magni",
                                                        "amet"),
                                                    ["repellendus"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "hic",
                                                    true,
                                                LengthUnit.UsFeet,
                                                    892.0375,
                                                    494.0518,
                                                    65.9587,
                                                    370.7548))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("dolores nostrum labore")"
                                            StringContent="@("omnis")"
                                            OutFields="@(["consequatur"])"
                                            FieldInfos="@([new FieldInfo("comment",
                                                    "molestiae",
                                                    "consequuntur",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.LongDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("updatedAt",
                                                    "commodi",
                                                    "quia",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Avg)])"
                                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                                        "eum",
                                                        "rem quia velit")),
                                            new FieldsPopupContent([new FieldInfo("password",
                                                        "sapiente",
                                                        "dicta",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("token",
                                                        "dolore",
                                                        "tempore",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)],
                                                    "exercitationem qui",
                                                    "laborum et odit")])"
                                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "category",
                                                    "voluptatem nemo fugit",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "token",
                                                    "sunt sed reiciendis",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("cupiditate nulla in",
                                                "https://picsum.photos/640/480/?image=1001",
                                                "9f6ab176-4ac6-6b07-8888-b21fc43f0497",
                                                () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                                                "updatedAt",
                                                true,
                                                true,
                                                true,
                                                "sit"),
                                                new ActionButton("quae voluptas fuga",
                                                    "https://picsum.photos/640/480/?image=918",
                                                    "9a4f4573-9efc-20ff-cc71-3af2ba4e9348",
                                                    () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                                    "status",
                                                    true,
                                                    true,
                                                    true,
                                                    "quia")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowRight)"
                                            LabelExpression="@("eius")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(5683013.6543)"
                                            MinScale="@(30358.7471)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(141.5833))"
                                            Symbol="@(new TextSymbol("aut impedit quidem",
                                                new MapColor(124, 182, 197),
                                                new MapColor(206, 18, 164),
                                                    new Dimension(798.9672),
                                                new MapFont(new Dimension(801.3321),
                                                        "Bookman",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Bolder,
                                                    TextDecoration.LineThrough),
                                                    405.1523,
                                                new MapColor(223, 90, 29),
                                                new MapColor(93, 84, 234),
                                                    632.9489,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    319.6928,
                                                    new Dimension(987.2823),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Street = '123 Main St.'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("soluta")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(44, 177, 54),
                                                new MapColor(183, 239, 36)),
                                                342.5315,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(353.3608,
                                                        594.4355),
                                                new AuthoringInfoField1ClassBreakInfos(694.7643,
                                                        694.4079)],
                                                    "consequatur",
                                                    "rem",
                                                    "et"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(617.8668,
                                                        116.6910)],
                                                    "natus",
                                                    "tenetur",
                                                    "atque"),
                                                ["culpa"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "nulla",
                                                true,
                                            LengthUnit.Centimeters,
                                                110.9280,
                                                501.7430,
                                                575.0414,
                                                864.6831))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("ab illo explicabo")"
                                        StringContent="@("ut")"
                                        OutFields="@(["nulla"])"
                                        FieldInfos="@([new FieldInfo("updatedAt",
                                                "et",
                                                "facere",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Count)])"
                                        Content="@([new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "sunt",
                                                    "vero ullam distinctio"))])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                "comment",
                                                "sed dolore pariatur",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("qui minus et",
                                            "https://picsum.photos/640/480/?image=886",
                                            "7d913492-5c17-ba20-764b-93b1d44ba7c6",
                                            () => { Console.WriteLine("repudiandae"); return Task.CompletedTask; },
                                            "createdAt",
                                            true,
                                            true,
                                            true,
                                            "libero"),
                                            new ActionButton("quis accusantium dicta",
                                                "https://picsum.photos/640/480/?image=836",
                                                "ded41808-ba64-7073-31a7-46b63b7d5983",
                                                () => { Console.WriteLine("excepturi"); return Task.CompletedTask; },
                                                "status",
                                                true,
                                                true,
                                                true,
                                                "qui")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.BelowAfter)"
                                        LabelExpression="@("sapiente")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(24357953.1218)"
                                        MinScale="@(45818.0433)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(825.5329))"
                                        Symbol="@(new TextSymbol("corrupti veritatis delectus",
                                            new MapColor(197, 52, 86),
                                            new MapColor(89, 179, 118),
                                                new Dimension(871.7368),
                                            new MapFont(new Dimension(34.2709),
                                                    "Arial",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                824.8249,
                                            new MapColor(45, 90, 132),
                                            new MapColor(205, 247, 170),
                                                322.2595,
                                            HorizontalAlignment.Left,
                                                true,
                                                565.3784,
                                                new Dimension(875.9909),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Country = 'Canada'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("omnis")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(248, 116, 180),
                                            new MapColor(78, 160, 23)),
                                            342.9167,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(383.8213,
                                                    476.1321),
                                            new AuthoringInfoField1ClassBreakInfos(249.0146,
                                                    943.1896)],
                                                "quaerat",
                                                "quo",
                                                "adipisci"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(622.4323,
                                                    33.4186)],
                                                "nostrum",
                                                "accusamus",
                                                "aut"),
                                            ["et"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "inventore",
                                            true,
                                        LengthUnit.UsFeet,
                                            132.0634,
                                            262.1071,
                                            837.7401,
                                            792.0963))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("soluta deleniti ea")"
                                    StringContent="@("est")"
                                    OutFields="@(["sed"])"
                                    FieldInfos="@([new FieldInfo("title",
                                            "autem",
                                            "pariatur",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Min)])"
                                    Content="@([new RelationshipPopupContent("et voluptas ipsam",
                                            "distinctio eius a vero",
                                            4,
                                            "praesentium",
                                        [new RelatedRecordsInfoFieldOrder("ut",
                                            OrderBy.Asc)],
                                            1)])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "token",
                                            "voluptatem tempora nesciunt",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "comment",
                                            "non esse illum",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("sequi harum impedit",
                                        "https://picsum.photos/640/480/?image=1023",
                                        "0c1bf52a-39b3-f311-217a-9a4216800ff9",
                                        () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                        "status",
                                        true,
                                        true,
                                        true,
                                        "inventore")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowCenter)"
                                    LabelExpression="@("ex")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(24126426.3075)"
                                    MinScale="@(8971.0780)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(328.0543))"
                                    Symbol="@(new TextSymbol("non illum fuga",
                                        new MapColor(121, 140, 209),
                                        new MapColor(217, 110, 208),
                                            new Dimension(600.6355),
                                        new MapFont(new Dimension(312.0540),
                                                "Garamond",
                                            MapFontStyle.Normal,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            644.0535,
                                        new MapColor(84, 168, 171),
                                        new MapColor(148, 82, 159),
                                            387.0642,
                                        HorizontalAlignment.Center,
                                            true,
                                            217.3947,
                                            new Dimension(658.8354),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Country = 'Canada'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("earum")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(126.8281,
                    -91.1609,
                    81.3942,
                    -5.9264,
                    454.3437,
                    569.6566,
                    769.2025,
                    646.2621,
                new SpatialReference(2,
                        "doloremque",
                        "rerum",
                        "et"),
                    true,
                    true),
                1,
                4,
            new MapImageLayerCreateExportImageParametersOptions(539.9766,
                    111.7297,
                    "reiciendis"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-75.9363,
                    -71.1522,
                    -64.9610,
                    53.1537,
                    657.0247,
                    613.5918,
                    246.5513,
                    185.7156,
                new SpatialReference(1,
                        "aliquid",
                        "doloremque",
                        "qui"),
                    true,
                    true),
                6,
                2,
            new MapImageLayerFetchImageOptions(587.2874,
                    209.3812,
                    "vero"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        await mapImageLayer.Refresh();
        PortalItem testPortalItem = new PortalItem();
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Multiply;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2006, 7, 3, 6, 31, 2),
                    new DateTime(2007, 10, 26, 19, 50, 4));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("nihil",
                    "quia",
                new TimeExtent(new DateTime(2005, 8, 26, 5, 56, 27),
                        new DateTime(2016, 6, 25, 0, 32, 43)),
                new TimeInterval(TemporalTime.Days,
                        36.7570),
                    [new DateTime(2014, 3, 15, 7, 29, 44),
                        new DateTime(2018, 2, 27, 15, 51, 0)],
                    "Asia/Yakutsk",
                    "harum");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(3,
                    true,
                    true,
                ListMode.Show,
                    7677134.6316,
                    29493.1480,
                    0.6316,
                    true,
                    "consequuntur laboriosam voluptates",
                    true,
                    "cupiditate",
                new LayerFloorInfo("eos"),
                [new Label(LabelPlacement.AboveAlong,
                        "sequi",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        7598481.3331,
                        49073.0309,
                        true,
                        new Dimension(623.1588),
                    new TextSymbol("nulla praesentium earum",
                        new MapColor(45, 234, 195),
                        new MapColor(12, 21, 6),
                            new Dimension(265.7250),
                        new MapFont(new Dimension(791.5232),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            725.8812,
                        new MapColor(54, 53, 178),
                        new MapColor(183, 148, 18),
                            426.8660,
                        HorizontalAlignment.Right,
                            true,
                            664.7082,
                            new Dimension(514.4371),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("voluptate asperiores sed",
                        "deserunt",
                        ["quidem"],
                    [new FieldInfo("password",
                            "voluptas",
                            "quisquam",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("name",
                            "sed",
                            "nihil",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new AttachmentsPopupContent("qui ut sunt",
                            "asperiores molestias",
                            AttachmentsPopupContentDisplayType.Auto),
                    new RelationshipPopupContent("deserunt commodi aperiam",
                            "sunt quia corporis quam",
                            6,
                            "quisquam",
                        [new RelatedRecordsInfoFieldOrder("facere",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("ducimus",
                            OrderBy.Desc)],
                            4)],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "id",
                            "quibusdam incidunt ad",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("consequatur optio suscipit",
                            "https://picsum.photos/640/480/?image=880",
                            "889413c2-6b0e-cb30-2cb3-76767ae516db",
                            () => { Console.WriteLine("nesciunt"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "dolorem")])),
            new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    43529354.7761,
                    47572.2288,
                    0.1323,
                    true,
                    "deleniti odit molestias",
                    true,
                    "itaque",
                new LayerFloorInfo("dolore"),
                [new Label(LabelPlacement.BelowCenter,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        18031334.0137,
                        25628.0948,
                        true,
                        new Dimension(167.1176),
                    new TextSymbol("rem alias occaecati",
                        new MapColor(52, 147, 204),
                        new MapColor(1, 56, 146),
                            new Dimension(435.9347),
                        new MapFont(new Dimension(61.9486),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            142.3767,
                        new MapColor(182, 135, 179),
                        new MapColor(94, 188, 12),
                            844.1773,
                        HorizontalAlignment.Center,
                            true,
                            514.6543,
                            new Dimension(357.7257),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("officia aut impedit",
                        "quaerat",
                        ["ut",
                            "magni"],
                    [new FieldInfo("status",
                            "ullam",
                            "animi",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("title",
                            "ex",
                            "quaerat",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Count)],
                    [new RelationshipPopupContent("repellendus sequi et",
                            "rerum nostrum",
                            9,
                            "aut",
                        [new RelatedRecordsInfoFieldOrder("ducimus",
                            OrderBy.Desc)],
                            9)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "title",
                            "quos in cupiditate",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("blanditiis culpa officia",
                            "https://picsum.photos/640/480/?image=817",
                            "fc276c31-432c-cddf-79e2-379d44dbe7ae",
                            () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "aliquam")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(119.0120,
                    -138.3255,
                    23.8648,
                    49.1376,
                    239.2054,
                    766.8341,
                    170.9431,
                    126.8554,
                new SpatialReference(9,
                        "a",
                        "aut",
                        "voluptates"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(4,
                    true,
                    true,
                ListMode.Hide,
                    40597636.1591,
                    5380.6202,
                    0.5682,
                    true,
                    "sint fugit quidem",
                    true,
                    "sint",
                new LayerFloorInfo("est"),
                [new Label(LabelPlacement.BelowStart,
                        "maiores",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        30853170.6056,
                        27799.2126,
                        true,
                        new Dimension(752.6362),
                    new TextSymbol("illum expedita eaque",
                        new MapColor(176, 42, 181),
                        new MapColor(164, 141, 124),
                            new Dimension(264.1873),
                        new MapFont(new Dimension(39.4224),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            145.4570,
                        new MapColor(148, 169, 2),
                        new MapColor(192, 45, 128),
                            653.6093,
                        HorizontalAlignment.Left,
                            true,
                            105.9190,
                            new Dimension(132.7562),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("autem dolores natus",
                        "iusto",
                        ["qui"],
                    [new FieldInfo("updatedAt",
                            "debitis",
                            "voluptates",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("comment",
                            "rerum",
                            "omnis",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Count)],
                    [new FieldsPopupContent([new FieldInfo("status",
                                "suscipit",
                                "optio",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Count)],
                            "deleniti suscipit debitis",
                            "corrupti harum facilis")],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "et quo nesciunt",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("voluptatibus sit tempora",
                            "https://picsum.photos/640/480/?image=954",
                            "75787527-c388-53cb-bd43-cd5749b43489",
                            () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "debitis")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    28856712.6652,
                    35678.3481,
                    0.3040,
                    true,
                    "optio qui quis",
                    true,
                    "accusamus",
                new LayerFloorInfo("sed"),
                [new Label(LabelPlacement.AboveEnd,
                        "harum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        7214603.4185,
                        2334.6126,
                        true,
                        new Dimension(816.9105),
                    new TextSymbol("quae facere explicabo",
                        new MapColor(196, 116, 114),
                        new MapColor(102, 52, 98),
                            new Dimension(887.5493),
                        new MapFont(new Dimension(980.5892),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            368.8952,
                        new MapColor(151, 63, 90),
                        new MapColor(108, 129, 231),
                            561.8284,
                        HorizontalAlignment.Center,
                            true,
                            704.3180,
                            new Dimension(808.6110),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AboveEnd,
                        "est",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        20704584.6666,
                        19574.7017,
                        true,
                        new Dimension(441.9133),
                    new TextSymbol("nam vero aut",
                        new MapColor(119, 145, 12),
                        new MapColor(155, 59, 27),
                            new Dimension(875.1758),
                        new MapFont(new Dimension(540.8256),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            630.9238,
                        new MapColor(238, 112, 163),
                        new MapColor(89, 230, 69),
                            827.1028,
                        HorizontalAlignment.Center,
                            true,
                            579.4860,
                            new Dimension(336.6866),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("porro voluptatibus eum",
                        "aperiam",
                        ["velit"],
                    [new FieldInfo("category",
                            "eius",
                            "ut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Max)],
                    [new AttachmentsPopupContent("tempore voluptates corporis",
                            "dicta consequuntur molestiae necessitatibus",
                            AttachmentsPopupContentDisplayType.Preview),
                    new FieldsPopupContent([new FieldInfo("comment",
                                "quas",
                                "qui",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Var)],
                            "temporibus qui expedita modi",
                            "est cupiditate laboriosam")],
                    [new ExpressionInfo("return Date();",
                            "category",
                            "ea aspernatur ex",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("aut omnis quos",
                            "https://picsum.photos/640/480/?image=789",
                            "8a67df83-e24d-99c1-a04f-99eedd5c03d6",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "voluptas")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Decades,
                    687.1397);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2023, 10, 13, 0, 50, 30),
                    new DateTime(2021, 5, 24, 0, 24, 7));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
