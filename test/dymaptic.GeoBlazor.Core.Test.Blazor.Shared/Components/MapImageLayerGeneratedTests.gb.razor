@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.SourceOut)"
                        Dpi="@(527.4121)"
                        Effect="@(new Effect("eum",
                            22891313.2113))"
                        GdbVersion="@("0.6.1.0")"
                        ImageFormat="@(MapImageFormat.Png32)"
                        ImageMaxHeight="@(7)"
                        ImageMaxWidth="@(1)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(39254188.6842)"
                        MinScale="@(47001.1201)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(990.3071)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Hide)"
                        Visible="@(true)"
                        Opacity="@(0.3606)"
                        Copyright="@("voluptatibus")"
                        Title="@("soluta ea et")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Centuries)"
                            Value="@(206.3673)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("sed")"
                            EndField="@("voluptate")"
                            Stops="@([new DateTime(2001, 1, 1, 1, 2, 27),
                                new DateTime(2012, 9, 1, 7, 36, 20)])"
                            TimeZone="@("Europe/Stockholm")"
                            TrackIdField="@("consequatur")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Months)"
                                Value="@(881.5000)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2020, 6, 4, 2, 51, 31))"
                                End="@(new DateTime(2004, 1, 11, 20, 48, 30))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2019, 10, 2, 12, 28, 42))"
                            End="@(new DateTime(2008, 4, 27, 2, 41, 23))">
                        </TimeExtent>
                        <PortalItem />
                        <Extent 
                            Xmax="@(-37.6458)"
                            Xmin="@(113.6803)"
                            Ymax="@(-38.7577)"
                            Ymin="@(89.6819)"
                            Zmax="@(832.7172)"
                            Zmin="@(587.3918)"
                            Mmax="@(409.5158)"
                            Mmin="@(321.7523)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(3)"
                                ImageCoordinateSystem="@("reiciendis")"
                                Wkt="@("rerum")"
                                Wkt2="@("est")">
                            </SpatialReference>
                        </Extent>
                        <Sublayer 
                            SublayerId="@(5)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(6031171.5235)"
                            MinScale="@(32020.5628)"
                            Opacity="@(0.3637)"
                            PopupEnabled="@(true)"
                            Title="@("corporis illo quia")"
                            Visible="@(true)"
                            DefinitionExpression="@("debitis")"
                            FloorInfo="@(new LayerFloorInfo("occaecati"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveCenter,
                                    "explicabo",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    31816285.0865,
                                    672.4074,
                                    true,
                                    new Dimension(318.1478),
                                new TextSymbol("aperiam placeat omnis",
                                    new MapColor(110, 15, 57),
                                    new MapColor(208, 11, 192),
                                        new Dimension(281.1566),
                                    new MapFont(new Dimension(893.6117),
                                            "Palatino",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        847.1605,
                                    new MapColor(2, 4, 15),
                                    new MapColor(172, 229, 59),
                                        756.9199,
                                    HorizontalAlignment.Center,
                                        true,
                                        278.0254,
                                        new Dimension(826.7414),
                                        true),
                                    true,
                                    "Street = '123 Main St.'")])"
                            PopupTemplate="@(new PopupTemplate("ut officiis ut",
                                    "delectus",
                                    ["deleniti",
                                        "consequatur"],
                                [new FieldInfo("email",
                                        "ut",
                                        "velit",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("comment",
                                        "beatae",
                                        "nam",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                [new FieldsPopupContent([new FieldInfo("email",
                                            "quis",
                                            "ipsa",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("email",
                                            "cumque",
                                            "laudantium",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Var)],
                                        "fugit exercitationem nostrum veritatis",
                                        "saepe alias facere"),
                                new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "assumenda",
                                            "dolorum molestiae ut"))],
                                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "name",
                                        "iste reprehenderit et",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("eius nihil cupiditate",
                                        "https://picsum.photos/640/480/?image=663",
                                        "8760550a-f9f3-9a22-19ad-2913eb944b1b",
                                        () => { Console.WriteLine("nesciunt"); return Task.CompletedTask; },
                                        "token",
                                        true,
                                        true,
                                        true,
                                        "sunt"),
                                        new ActionButton("voluptas assumenda doloribus",
                                            "https://picsum.photos/640/480/?image=326",
                                            "f14dc0d7-29c0-5bcf-12e5-68fa61ac99f4",
                                            () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "sit")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.Manual,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(13, 71, 67),
                                            new MapColor(128, 47, 156)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(208, 74, 121),
                                            new MapColor(198, 213, 197))]),
                                        863.9371,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(640.9260,
                                                571.6269)],
                                            "aliquam",
                                            "repudiandae",
                                            "ad"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(295.4147,
                                                747.0933),
                                        new AuthoringInfoField1ClassBreakInfos(99.9087,
                                                615.8267)],
                                            "repellat",
                                            "dolorum",
                                            "aut"),
                                        ["nulla",
                                            "consequatur"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "occaecati",
                                        true,
                                    LengthUnit.Meters,
                                        156.8251,
                                        147.7881,
                                        979.7847,
                                        90.9083),
                                new PictureFillSymbol("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1",
                                    new Dimension(27.6831),
                                    new Dimension(984.4840),
                                    new Dimension(521.0752),
                                    new Dimension(749.7445),
                                    51.5320,
                                    -77.2170,
                                    new Outline(new MapColor(2, 31, 28),
                                        new Dimension(925.5248),
                                        SimpleLineSymbolStyle.None,
                                        Cap.Round,
                                        Join.Miter,
                                        new LineSymbolMarker(new MapColor(117, 241, 70),
                                            LinePlacement.End,
                                            LineSymbolMarkerStyle.Diamond),
                                        585.7988),
                                    new MapColor(126, 87, 206)),
                                    "distinctio",
                                    new DefaultSymbol(),
                                    "et",
                                    "iusto",
                                    "vitae",
                                    "velit",
                                new UniqueValueRendererLegendOptions("doloremque soluta quia"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("quam",
                                        new TextSymbol("occaecati officia blanditiis",
                                            new MapColor(138, 238, 188),
                                            new MapColor(225, 41, 155),
                                                new Dimension(842.2788),
                                            new MapFont(new Dimension(395.8219),
                                                    "Courier New",
                                                MapFontStyle.Oblique,
                                                FontWeight.Normal,
                                                TextDecoration.None),
                                                410.8202,
                                            new MapColor(40, 102, 238),
                                            new MapColor(95, 138, 129),
                                                85.9817,
                                            HorizontalAlignment.Right,
                                                true,
                                                514.9646,
                                                new Dimension(29.6572),
                                                true),
                                        [new UniqueValue("omnis",
                                                "eaque",
                                                "illo"),
                                        new UniqueValue("ducimus",
                                                "enim",
                                                "nihil")])],
                                        "dolores"),
                                new UniqueValueGroup([new UniqueValueClass("itaque",
                                        new TextSymbol("est dicta eaque",
                                            new MapColor(71, 85, 131),
                                            new MapColor(66, 217, 118),
                                                new Dimension(557.2411),
                                            new MapFont(new Dimension(418.5917),
                                                    "Times New Roman",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                717.4574,
                                            new MapColor(29, 123, 251),
                                            new MapColor(207, 86, 224),
                                                663.1484,
                                            HorizontalAlignment.Left,
                                                true,
                                                850.5591,
                                                new Dimension(526.0741),
                                                true),
                                        [new UniqueValue("qui",
                                                "nobis",
                                                "aut")])],
                                        "dignissimos")],
                                [new UniqueValueInfo("hic",
                                    new TextSymbol("aut ex et",
                                        new MapColor(137, 21, 243),
                                        new MapColor(48, 194, 56),
                                            new Dimension(897.7325),
                                        new MapFont(new Dimension(744.2668),
                                                "Palatino",
                                            MapFontStyle.Italic,
                                            FontWeight.Lighter,
                                            TextDecoration.Underline),
                                            494.3232,
                                        new MapColor(111, 150, 238),
                                        new MapColor(249, 30, 254),
                                            48.5597,
                                        HorizontalAlignment.Left,
                                            true,
                                            207.6713,
                                            new Dimension(623.3643),
                                            true),
                                        "exercitationem"),
                                new UniqueValueInfo("et",
                                    new TextSymbol("ullam est provident",
                                        new MapColor(59, 53, 43),
                                        new MapColor(119, 56, 33),
                                            new Dimension(845.8396),
                                        new MapFont(new Dimension(876.0024),
                                                "Georgia",
                                            MapFontStyle.Normal,
                                            FontWeight.Bold,
                                            TextDecoration.Underline),
                                            724.6803,
                                        new MapColor(134, 145, 110),
                                        new MapColor(100, 46, 229),
                                            879.1036,
                                        HorizontalAlignment.Center,
                                            true,
                                            282.7694,
                                            new Dimension(827.6644),
                                            true),
                                        "quia")],
                                    "nam",
                                    "quis sunt qui"))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(31544593.4053)"
                                MinScale="@(22391.0519)"
                                Opacity="@(0.2314)"
                                PopupEnabled="@(true)"
                                Title="@("sed molestias et")"
                                Visible="@(true)"
                                DefinitionExpression="@("veniam")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(5)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(26973544.6397)"
                                    MinScale="@(4318.3169)"
                                    Opacity="@(0.0752)"
                                    PopupEnabled="@(true)"
                                    Title="@("omnis quibusdam et")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("sunt")"
                                    Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(1)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(42083364.8412)"
                                        MinScale="@(15814.4180)"
                                        Opacity="@(0.3720)"
                                        PopupEnabled="@(true)"
                                        Title="@("aspernatur et quo")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("nihil")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(3)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(48811433.6786)"
                                            MinScale="@(18527.1577)"
                                            Opacity="@(0.4800)"
                                            PopupEnabled="@(true)"
                                            Title="@("molestiae inventore saepe")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("hic")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(9)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(45772498.6844)"
                                                MinScale="@(45532.9905)"
                                                Opacity="@(0.8204)"
                                                PopupEnabled="@(true)"
                                                Title="@("voluptate quia adipisci")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("similique")"
                                                Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                                <Sublayer 
                                                    SublayerId="@(4)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(16139125.2075)"
                                                    MinScale="@(4705.4738)"
                                                    Opacity="@(0.5956)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("ut assumenda at")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("sunt")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("sed qui molestias")"
                                                        StringContent="@("nobis")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("explicabo")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("earum expedita ratione")"
                                                    StringContent="@("quod")"
                                                    OutFields="@(["tempora"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new ExpressionPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton("esse at et",
                                                        "https://picsum.photos/640/480/?image=496",
                                                        "a16b39b5-87d0-c575-ffdc-1ca7e6cb8999",
                                                        () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                                                        "token",
                                                        true,
                                                        true,
                                                        true,
                                                        "qui"),
                                                        null])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveRight)"
                                                    LabelExpression="@("ipsa")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(28401419.2253)"
                                                    MinScale="@(39239.8857)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(153.1634))"
                                                    Symbol="@(new TextSymbol("deserunt atque sit"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("voluptate")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                        190.4624,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["saepe",
                                                            "voluptates"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "aspernatur",
                                                        true,
                                                    LengthUnit.Millimeters,
                                                        154.6821,
                                                        278.1103,
                                                        163.9335,
                                                        860.1600))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("consequatur officia inventore")"
                                                StringContent="@("omnis")"
                                                OutFields="@(["facilis",
                                                    "nesciunt"])"
                                                FieldInfos="@([new FieldInfo("title",
                                                        "voluptates",
                                                        "soluta",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev),
                                                new FieldInfo("id",
                                                        "id",
                                                        "quibusdam",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max)])"
                                                Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "ea aut quia",
                                                        "qui quisquam saepe")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "token",
                                                        "voluptatem inventore eos"),
                                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                        "avatar",
                                                        "sunt omnis esse")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("dolore sed veniam",
                                                    "https://picsum.photos/640/480/?image=948",
                                                    "622a5bc5-c9dd-0322-a6c6-01467fae2e86",
                                                    () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                                                    "category",
                                                    true,
                                                    true,
                                                    true,
                                                    "ad"),
                                                    new ActionButton("voluptatum veniam eveniet",
                                                        "https://picsum.photos/640/480/?image=640",
                                                        "258836e3-fa1d-a976-e090-acda2c82dbc6",
                                                        () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                                                        "category",
                                                        true,
                                                        true,
                                                        true,
                                                        "accusantium")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveAfter)"
                                                LabelExpression="@("delectus")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(7878687.2250)"
                                                MinScale="@(39905.1170)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(653.8073))"
                                                Symbol="@(new TextSymbol("placeat ut excepturi",
                                                    new MapColor(57, 38, 81),
                                                    new MapColor(109, 203, 31),
                                                        null,
                                                    new MapFont(),
                                                        657.4258,
                                                    new MapColor(219, 14, 209),
                                                    new MapColor(84, 224, 19),
                                                        307.6224,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        189.2502,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Age > 21")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("qui")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(228, 235, 236),
                                                    new MapColor(73, 50, 108)),
                                                    386.0780,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "exercitationem",
                                                        "ut",
                                                        "quia"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "facere",
                                                        "neque",
                                                        "eveniet"),
                                                    ["quisquam"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "ullam",
                                                    true,
                                                LengthUnit.Miles,
                                                    337.0673,
                                                    213.7021,
                                                    6.9534,
                                                    274.6616))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("architecto ipsam aut")"
                                            StringContent="@("repellat")"
                                            OutFields="@(["vitae",
                                                "recusandae"])"
                                            FieldInfos="@([new FieldInfo("id",
                                                    "iusto",
                                                    "ullam",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Var)])"
                                            Content="@([new AttachmentsPopupContent("non animi hic",
                                                    "ipsum nam et enim",
                                                    AttachmentsPopupContentDisplayType.Preview)])"
                                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "group",
                                                    "rerum minima quia",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "email",
                                                    "labore voluptatem ut",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("temporibus nam modi",
                                                "https://picsum.photos/640/480/?image=62",
                                                "b398e33c-0d7c-d8dd-3129-2d93e85aa04b",
                                                () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                                                "name",
                                                true,
                                                true,
                                                true,
                                                "sed"),
                                                new ActionButton("sint impedit error",
                                                    "https://picsum.photos/640/480/?image=476",
                                                    "a6715f8d-2707-8c03-660d-33759ed8c8dc",
                                                    () => { Console.WriteLine("cupiditate"); return Task.CompletedTask; },
                                                    "token",
                                                    true,
                                                    true,
                                                    true,
                                                    "officia")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveStart)"
                                            LabelExpression="@("saepe")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(28769380.5236)"
                                            MinScale="@(46168.3240)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(369.0582))"
                                            Symbol="@(new TextSymbol("ut praesentium molestias",
                                                new MapColor(117, 135, 3),
                                                new MapColor(237, 169, 227),
                                                    new Dimension(173.8275),
                                                new MapFont(new Dimension(349.1404),
                                                        "Helvetica",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Lighter,
                                                    TextDecoration.Underline),
                                                    681.3595,
                                                new MapColor(4, 210, 119),
                                                new MapColor(135, 114, 117),
                                                    612.6294,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    980.3516,
                                                    new Dimension(612.9959),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("City = 'Toronto'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("ducimus")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(133, 29, 42),
                                                new MapColor(196, 66, 140)),
                                                628.7532,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(689.9710,
                                                        195.4972)],
                                                    "occaecati",
                                                    "voluptas",
                                                    "molestias"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(587.1514,
                                                        802.5488),
                                                new AuthoringInfoField1ClassBreakInfos(947.5792,
                                                        357.1032)],
                                                    "harum",
                                                    "fugit",
                                                    "amet"),
                                                ["ut",
                                                    "facilis"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "ea",
                                                true,
                                            LengthUnit.Miles,
                                                795.5017,
                                                28.8847,
                                                952.9329,
                                                660.4234))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("nam illum aperiam")"
                                        StringContent="@("libero")"
                                        OutFields="@(["sequi"])"
                                        FieldInfos="@([new FieldInfo("group",
                                                "eveniet",
                                                "beatae",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Min)])"
                                        Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                    "minus",
                                                    "temporibus consectetur consequatur")),
                                        new TextPopupContent("natus molestiae laudantium")])"
                                        ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "avatar",
                                                "impedit fugit numquam",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("labore vitae quia",
                                            "https://picsum.photos/640/480/?image=474",
                                            "9963c300-c603-29c5-e439-7f4f43aadcfb",
                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                            "avatar",
                                            true,
                                            true,
                                            true,
                                            "nam"),
                                            new ActionButton("maxime optio eligendi",
                                                "https://picsum.photos/640/480/?image=329",
                                                "e5f2f090-2e3d-9ae7-ed39-e53ac2b80632",
                                                () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                                                "password",
                                                true,
                                                true,
                                                true,
                                                "qui")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveStart)"
                                        LabelExpression="@("ut")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(33397129.7448)"
                                        MinScale="@(45074.1740)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(248.1819))"
                                        Symbol="@(new TextSymbol("qui qui alias",
                                            new MapColor(234, 213, 148),
                                            new MapColor(109, 23, 189),
                                                new Dimension(462.6117),
                                            new MapFont(new Dimension(96.6159),
                                                    "Times New Roman",
                                                MapFontStyle.Normal,
                                                FontWeight.Normal,
                                                TextDecoration.None),
                                                409.8738,
                                            new MapColor(83, 161, 31),
                                            new MapColor(167, 75, 121),
                                                50.8785,
                                            HorizontalAlignment.Left,
                                                true,
                                                671.7490,
                                                new Dimension(893.8865),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Name = 'John Doe'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("repellendus")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(210, 16, 2),
                                                new MapColor(197, 57, 224)),
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(25, 103, 8),
                                                new MapColor(34, 249, 235))]),
                                            282.6207,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(943.4101,
                                                    30.8711),
                                            new AuthoringInfoField1ClassBreakInfos(961.5478,
                                                    37.5741)],
                                                "facilis",
                                                "cupiditate",
                                                "placeat"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(999.1418,
                                                    763.4266)],
                                                "odio",
                                                "autem",
                                                "et"),
                                            ["vel"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "rerum",
                                            true,
                                        LengthUnit.Centimeters,
                                            992.5161,
                                            156.8134,
                                            999.5363,
                                            478.6623))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("molestiae voluptate nulla")"
                                    StringContent="@("eaque")"
                                    OutFields="@(["amet",
                                        "hic"])"
                                    FieldInfos="@([new FieldInfo("phone",
                                            "ipsum",
                                            "non",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("email",
                                            "magni",
                                            "et",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Min)])"
                                    Content="@([new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "delectus",
                                                "nihil necessitatibus ad"))])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "name",
                                            "eum repellat vel",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "title",
                                            "quidem error corrupti",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("laboriosam voluptatem voluptates",
                                        "https://picsum.photos/640/480/?image=613",
                                        "b08aaf1c-db13-4e8e-a628-b64763a823ca",
                                        () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "sit"),
                                        new ActionButton("minima deserunt delectus",
                                            "https://picsum.photos/640/480/?image=35",
                                            "6afeda48-89c0-a688-8c77-fcb8a82e7fda",
                                            () => { Console.WriteLine("labore"); return Task.CompletedTask; },
                                            "updatedAt",
                                            true,
                                            true,
                                            true,
                                            "illo")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowEnd)"
                                    LabelExpression="@("eius")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(1127478.2904)"
                                    MinScale="@(14599.1594)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(246.6522))"
                                    Symbol="@(new TextSymbol("occaecati magni eum",
                                        new MapColor(145, 68, 12),
                                        new MapColor(3, 19, 47),
                                            new Dimension(829.5280),
                                        new MapFont(new Dimension(130.0661),
                                                "Bookman",
                                            MapFontStyle.Italic,
                                            FontWeight.Lighter,
                                            TextDecoration.LineThrough),
                                            429.4973,
                                        new MapColor(128, 181, 100),
                                        new MapColor(176, 231, 38),
                                            546.5902,
                                        HorizontalAlignment.Left,
                                            true,
                                            136.8415,
                                            new Dimension(904.0573),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Age > 21")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("excepturi")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(42.7315,
                    99.9904,
                    5.1378,
                    54.1243,
                    576.6786,
                    825.2582,
                    661.3441,
                    585.3914,
                new SpatialReference(1,
                        "vitae",
                        "porro",
                        "nisi"),
                    true,
                    true),
                6,
                2,
            new MapImageLayerCreateExportImageParametersOptions(177.1128,
                    305.1577,
                    "eaque"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(141.5687,
                    151.3595,
                    -82.2722,
                    23.9328,
                    219.5729,
                    840.2244,
                    945.3417,
                    165.3695,
                new SpatialReference(7,
                        "ea",
                        "sit",
                        "voluptates"),
                    true,
                    true),
                5,
                3,
            new MapImageLayerFetchImageOptions(274.8864,
                    96.4656,
                    "cumque"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(1);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Difference;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2010, 6, 14, 8, 47, 11),
                    new DateTime(2021, 3, 23, 3, 39, 3));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("voluptate",
                    "et",
                new TimeExtent(new DateTime(2012, 8, 25, 14, 23, 43),
                        new DateTime(2010, 9, 26, 13, 5, 37)),
                new TimeInterval(TemporalTime.Seconds,
                        848.6431),
                    [new DateTime(2000, 9, 18, 9, 11, 14),
                        new DateTime(2010, 2, 17, 4, 41, 27)],
                    "America/Denver",
                    "eum");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(2,
                    true,
                    true,
                ListMode.Show,
                    17894142.1172,
                    28257.1790,
                    0.8630,
                    true,
                    "officiis et molestias",
                    true,
                    "dolorem",
                new LayerFloorInfo("rerum"),
                [new Label(LabelPlacement.BelowCenter,
                        "officiis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        34129970.1065,
                        21935.3447,
                        true,
                        new Dimension(479.3089),
                    new TextSymbol("esse et voluptatibus",
                        new MapColor(104, 7, 48),
                        new MapColor(107, 1, 121),
                            new Dimension(30.8099),
                        new MapFont(new Dimension(73.5901),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            196.1611,
                        new MapColor(80, 91, 224),
                        new MapColor(160, 233, 133),
                            605.5594,
                        HorizontalAlignment.Right,
                            true,
                            580.7101,
                            new Dimension(530.7430),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("et cum quas",
                        "et",
                        ["et"],
                    [new FieldInfo("updatedAt",
                            "soluta",
                            "et",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new MediaPopupContent("quidem est fuga",
                            "blanditiis repellat blanditiis",
                        [new LineChartMediaInfo("ut velit qui",
                                "iste",
                                "illo quisquam quia",
                            new ChartMediaInfoValue(["aut",
                                    "facilis"],
                                    "et",
                                    "assumenda",
                                [new ChartMediaInfoValueSeries("category",
                                        "qui",
                                        726.0981),
                                new ChartMediaInfoValueSeries("avatar",
                                        "aut",
                                        303.3617)],
                                [new MapColor(14, 68, 60)])),
                        new BarChartMediaInfo("dolores quia asperiores",
                                "ullam",
                                "consequatur ea vel",
                            new ChartMediaInfoValue(["et",
                                    "vero"],
                                    "enim",
                                    "aperiam",
                                [new ChartMediaInfoValueSeries("status",
                                        "labore",
                                        228.6074)],
                                [new MapColor(78, 45, 97),
                                new MapColor(104, 198, 88)]))],
                            4)],
                    [new ExpressionInfo("return $feature.Name;",
                            "updatedAt",
                            "amet at nisi",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "group",
                            "perferendis exercitationem nostrum",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("rerum corporis a",
                            "https://picsum.photos/640/480/?image=456",
                            "4c50c494-7211-b483-f3f8-792c58cee2b5",
                            () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "numquam")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(30.0302,
                    31.3952,
                    -77.8347,
                    12.4505,
                    461.2017,
                    790.5172,
                    659.8701,
                    703.7381,
                new SpatialReference(3,
                        "sit",
                        "modi",
                        "perspiciatis"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(8,
                    true,
                    true,
                ListMode.Hide,
                    47000614.0789,
                    38625.7132,
                    0.2095,
                    true,
                    "non error quo",
                    true,
                    "earum",
                new LayerFloorInfo("consequatur"),
                [new Label(LabelPlacement.BelowCenter,
                        "minus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        2080388.0495,
                        18178.9792,
                        true,
                        new Dimension(355.0796),
                    new TextSymbol("fugit est cum",
                        new MapColor(125, 163, 48),
                        new MapColor(199, 137, 233),
                            new Dimension(232.9125),
                        new MapFont(new Dimension(774.0291),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            505.6928,
                        new MapColor(177, 195, 165),
                        new MapColor(253, 145, 57),
                            715.7515,
                        HorizontalAlignment.Center,
                            true,
                            766.2677,
                            new Dimension(830.2563),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("repudiandae qui minima",
                        "eum",
                        ["sed"],
                    [new FieldInfo("phone",
                            "accusantium",
                            "veritatis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("password",
                            "est",
                            "tenetur",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new MediaPopupContent("eos fugiat quia",
                            "necessitatibus facere eos",
                        [new BarChartMediaInfo("adipisci debitis dicta",
                                "ut",
                                "iusto iure nesciunt",
                            new ChartMediaInfoValue(["rerum"],
                                    "ab",
                                    "non",
                                [new ChartMediaInfoValueSeries("name",
                                        "suscipit",
                                        506.1090)],
                                [new MapColor(190, 24, 189)])),
                        new LineChartMediaInfo("vel accusamus nemo",
                                "odit",
                                "similique porro officiis",
                            new ChartMediaInfoValue(["rerum"],
                                    "quas",
                                    "nesciunt",
                                [new ChartMediaInfoValueSeries("phone",
                                        "adipisci",
                                        229.9696),
                                new ChartMediaInfoValueSeries("createdAt",
                                        "sit",
                                        704.9260)],
                                [new MapColor(1, 17, 192)]))],
                            9),
                    new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "expedita",
                                "debitis omnis minus"))],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "updatedAt",
                            "est et aspernatur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "createdAt",
                            "quia in consequatur",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("sapiente ullam deleniti",
                            "https://picsum.photos/640/480/?image=260",
                            "324bbf13-1efd-449d-acc5-db04d75d4330",
                            () => { Console.WriteLine("quos"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "nemo")])),
            new Sublayer(1,
                    true,
                    true,
                ListMode.Show,
                    30527240.3029,
                    17302.4277,
                    0.8413,
                    true,
                    "quis quia sed",
                    true,
                    "autem",
                new LayerFloorInfo("distinctio"),
                [new Label(LabelPlacement.CenterLeft,
                        "voluptatibus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        18181848.8333,
                        48317.1164,
                        true,
                        new Dimension(188.8564),
                    new TextSymbol("provident nisi quo",
                        new MapColor(127, 206, 11),
                        new MapColor(190, 136, 100),
                            new Dimension(777.8451),
                        new MapFont(new Dimension(203.6228),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            975.2365,
                        new MapColor(90, 82, 214),
                        new MapColor(120, 119, 35),
                            219.0088,
                        HorizontalAlignment.Right,
                            true,
                            860.3457,
                            new Dimension(445.8701),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.BelowEnd,
                        "molestias",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        34539152.0824,
                        594.3932,
                        true,
                        new Dimension(74.5922),
                    new TextSymbol("nisi et velit",
                        new MapColor(96, 67, 45),
                        new MapColor(105, 214, 197),
                            new Dimension(635.4724),
                        new MapFont(new Dimension(699.0265),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            568.8152,
                        new MapColor(121, 125, 180),
                        new MapColor(24, 187, 238),
                            292.3016,
                        HorizontalAlignment.Left,
                            true,
                            546.6102,
                            new Dimension(516.3106),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("a incidunt facere",
                        "quia",
                        ["eaque"],
                    [new FieldInfo("category",
                            "velit",
                            "sed",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("group",
                            "doloremque",
                            "porro",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new RelationshipPopupContent("cupiditate ipsa qui",
                            "expedita vel quis",
                            3,
                            "a",
                        [new RelatedRecordsInfoFieldOrder("sed",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("voluptatem",
                            OrderBy.Asc)],
                            7),
                    new FieldsPopupContent([new FieldInfo("updatedAt",
                                "totam",
                                "ut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Max)],
                            "exercitationem distinctio error",
                            "sint deserunt aliquam")],
                    [new ExpressionInfo("return $feature.Name;",
                            "email",
                            "non minima culpa",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "phone",
                            "facilis architecto et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("ratione necessitatibus et",
                            "https://picsum.photos/640/480/?image=272",
                            "0381d502-bfc5-da5e-c33f-0dafc5a46bd3",
                            () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "voluptas")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Days,
                    947.2944);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2005, 1, 21, 1, 11, 47),
                    new DateTime(2012, 10, 1, 8, 18, 40));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
