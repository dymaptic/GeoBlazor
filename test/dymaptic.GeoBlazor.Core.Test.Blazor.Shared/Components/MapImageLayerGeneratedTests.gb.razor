@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.ColorBurn)"
                        Dpi="@(806.7848)"
                        Effect="@(new Effect("perspiciatis",
                            30854541.7763))"
                        GdbVersion="@("7.1.7.2")"
                        ImageFormat="@(MapImageFormat.Png24)"
                        ImageMaxHeight="@(6)"
                        ImageMaxWidth="@(4)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(36340766.2866)"
                        MinScale="@(21137.6179)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(902.8828)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Hide)"
                        Visible="@(true)"
                        Opacity="@(0.5877)"
                        Copyright="@("impedit")"
                        Title="@("quis blanditiis et")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Days)"
                            Value="@(26.7095)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("sit")"
                            EndField="@("explicabo")"
                            Stops="@([new DateTime(2017, 2, 13, 19, 27, 33)])"
                            TimeZone="@("America/Mexico_City")"
                            TrackIdField="@("est")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Centuries)"
                                Value="@(765.0914)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2022, 10, 8, 1, 31, 37))"
                                End="@(new DateTime(2006, 10, 7, 8, 23, 4))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2022, 4, 11, 0, 37, 11))"
                            End="@(new DateTime(2007, 9, 7, 1, 17, 18))">
                        </TimeExtent>
                        <PortalItem />
                        <Extent 
                            Xmax="@(118.3347)"
                            Xmin="@(136.7918)"
                            Ymax="@(34.3973)"
                            Ymin="@(-70.2821)"
                            Zmax="@(965.2373)"
                            Zmin="@(838.8703)"
                            Mmax="@(608.3727)"
                            Mmin="@(155.7633)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(7)"
                                ImageCoordinateSystem="@("sit")"
                                Wkt="@("sit")"
                                Wkt2="@("veniam")">
                            </SpatialReference>
                        </Extent>
                        <Sublayer 
                            SublayerId="@(5)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(23979837.1427)"
                            MinScale="@(21401.8185)"
                            Opacity="@(0.6500)"
                            PopupEnabled="@(true)"
                            Title="@("rerum nam consequatur")"
                            Visible="@(true)"
                            DefinitionExpression="@("quo")"
                            FloorInfo="@(new LayerFloorInfo("ut"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveLeft,
                                    "numquam",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    6703537.1776,
                                    28930.3214,
                                    true,
                                    new Dimension(934.8686),
                                new TextSymbol("ducimus veritatis itaque",
                                    new MapColor(6, 184, 185),
                                    new MapColor(219, 192, 88),
                                        new Dimension(171.9200),
                                    new MapFont(new Dimension(722.3424),
                                            "Palatino",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        844.9958,
                                    new MapColor(73, 75, 163),
                                    new MapColor(63, 151, 193),
                                        404.8311,
                                    HorizontalAlignment.Right,
                                        true,
                                        642.9239,
                                        new Dimension(959.7919),
                                        true),
                                    true,
                                    "Phone = '555-555-5555'")])"
                            PopupTemplate="@(new PopupTemplate("fugiat eum sed",
                                    "perferendis",
                                    ["eos",
                                        "voluptatem"],
                                [new FieldInfo("comment",
                                        "voluptas",
                                        "rerum",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("createdAt",
                                        "non",
                                        "quia",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new TextPopupContent("quisquam possimus tenetur")],
                                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "id",
                                        "soluta natus odio",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "id",
                                        "neque esse magni",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("voluptates esse voluptatibus",
                                        "https://picsum.photos/640/480/?image=56",
                                        "53539174-9de9-fa5a-885f-555d2ff6ed0f",
                                        () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                        "comment",
                                        true,
                                        true,
                                        true,
                                        "harum")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(212, 173, 138),
                                            new MapColor(213, 105, 142)),
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(175, 54, 145),
                                            new MapColor(6, 171, 25))]),
                                        81.2577,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(559.8990,
                                                128.6073)],
                                            "dignissimos",
                                            "recusandae",
                                            "consequatur"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(825.7829,
                                                789.0764),
                                        new AuthoringInfoField1ClassBreakInfos(6.2825,
                                                793.8497)],
                                            "nam",
                                            "qui",
                                            "animi"),
                                        ["maiores",
                                            "perspiciatis"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "modi",
                                        true,
                                    LengthUnit.UsFeet,
                                        803.6432,
                                        244.2467,
                                        921.2770,
                                        21.4137),
                                new PictureFillSymbol("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0",
                                    new Dimension(141.3693),
                                    new Dimension(230.9091),
                                    new Dimension(41.2579),
                                    new Dimension(302.4263),
                                    -83.9512,
                                    1.6433,
                                    new Outline(new MapColor(132, 117, 189),
                                        new Dimension(142.6377),
                                        SimpleLineSymbolStyle.LongDashDot,
                                        Cap.Round,
                                        Join.Miter,
                                        new LineSymbolMarker(new MapColor(29, 30, 158),
                                            LinePlacement.End,
                                            LineSymbolMarkerStyle.Diamond),
                                        519.8039),
                                    new MapColor(45, 17, 229)),
                                    "error",
                                    new DefaultSymbol(),
                                    "magnam",
                                    "sed",
                                    "esse",
                                    "id",
                                new UniqueValueRendererLegendOptions("et quis magnam"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("blanditiis",
                                        new TextSymbol("consequatur est omnis",
                                            new MapColor(123, 181, 62),
                                            new MapColor(57, 21, 78),
                                                new Dimension(756.2260),
                                            new MapFont(new Dimension(276.1681),
                                                    "Georgia",
                                                MapFontStyle.Italic,
                                                FontWeight.Lighter,
                                                TextDecoration.LineThrough),
                                                657.6513,
                                            new MapColor(191, 178, 233),
                                            new MapColor(108, 189, 100),
                                                718.2080,
                                            HorizontalAlignment.Center,
                                                true,
                                                746.5527,
                                                new Dimension(882.5566),
                                                true),
                                        [new UniqueValue("veritatis",
                                                "in",
                                                "quaerat"),
                                        new UniqueValue("dolores",
                                                "quibusdam",
                                                "autem")]),
                                    new UniqueValueClass("assumenda",
                                        new TextSymbol("quas ad et",
                                            new MapColor(223, 101, 45),
                                            new MapColor(223, 73, 53),
                                                new Dimension(433.7992),
                                            new MapFont(new Dimension(339.0134),
                                                    "Helvetica",
                                                MapFontStyle.Italic,
                                                FontWeight.Bolder,
                                                TextDecoration.Underline),
                                                886.4070,
                                            new MapColor(195, 96, 99),
                                            new MapColor(53, 141, 39),
                                                316.7019,
                                            HorizontalAlignment.Left,
                                                true,
                                                860.8282,
                                                new Dimension(993.6364),
                                                true),
                                        [new UniqueValue("voluptatum",
                                                "necessitatibus",
                                                "libero")])],
                                        "assumenda")],
                                [new UniqueValueInfo("beatae",
                                    new TextSymbol("et consequatur illum",
                                        new MapColor(4, 190, 85),
                                        new MapColor(165, 68, 142),
                                            new Dimension(959.9866),
                                        new MapFont(new Dimension(954.4168),
                                                "Palatino",
                                            MapFontStyle.Italic,
                                            FontWeight.Lighter,
                                            TextDecoration.Underline),
                                            924.1666,
                                        new MapColor(207, 218, 250),
                                        new MapColor(43, 113, 252),
                                            908.9186,
                                        HorizontalAlignment.Left,
                                            true,
                                            508.4487,
                                            new Dimension(478.6513),
                                            true),
                                        "veritatis"),
                                new UniqueValueInfo("dolorem",
                                    new TextSymbol("et autem velit",
                                        new MapColor(149, 76, 39),
                                        new MapColor(67, 183, 137),
                                            new Dimension(518.5758),
                                        new MapFont(new Dimension(605.1814),
                                                "Palatino",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            644.2723,
                                        new MapColor(52, 79, 154),
                                        new MapColor(199, 146, 61),
                                            159.0674,
                                        HorizontalAlignment.Center,
                                            true,
                                            884.0917,
                                            new Dimension(106.3172),
                                            true),
                                        "reiciendis")],
                                    "tempore",
                                    "enim facilis quas"))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(5)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(20460545.3530)"
                                MinScale="@(42734.2665)"
                                Opacity="@(0.6629)"
                                PopupEnabled="@(true)"
                                Title="@("aspernatur dicta tenetur")"
                                Visible="@(true)"
                                DefinitionExpression="@("qui")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(5)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(4683879.0277)"
                                    MinScale="@(48302.0019)"
                                    Opacity="@(0.2025)"
                                    PopupEnabled="@(true)"
                                    Title="@("minus ratione veritatis")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("aut")"
                                    Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                    <Sublayer 
                                        SublayerId="@(1)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(2483278.6192)"
                                        MinScale="@(5725.2569)"
                                        Opacity="@(0.3757)"
                                        PopupEnabled="@(true)"
                                        Title="@("adipisci aut architecto")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("magni")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(9)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(24989028.3389)"
                                            MinScale="@(16053.1262)"
                                            Opacity="@(0.6347)"
                                            PopupEnabled="@(true)"
                                            Title="@("eos nobis perferendis")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("exercitationem")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(1)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(49113535.9758)"
                                                MinScale="@(38862.8808)"
                                                Opacity="@(0.3237)"
                                                PopupEnabled="@(true)"
                                                Title="@("rerum ducimus aspernatur")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("reiciendis")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(9)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(7778045.0651)"
                                                    MinScale="@(37205.0969)"
                                                    Opacity="@(0.3639)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("quidem blanditiis officia")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("error")"
                                                    Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("enim iure minima")"
                                                        StringContent="@("et")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("maxime")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("hic nobis facere")"
                                                    StringContent="@("nobis")"
                                                    OutFields="@(["nobis",
                                                        "qui"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new TextPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)])])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton("adipisci omnis debitis",
                                                        "https://picsum.photos/640/480/?image=54",
                                                        "eb5c0097-1213-1d35-6250-eda44e4df16f",
                                                        () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                                                        "updatedAt",
                                                        true,
                                                        true,
                                                        true,
                                                        "nobis"),
                                                        null])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveCenter)"
                                                    LabelExpression="@("velit")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(32586291.2767)"
                                                    MinScale="@(42191.7177)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(92.0011))"
                                                    Symbol="@(new TextSymbol("mollitia voluptas consectetur"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("quo")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                    new MultipartColorRamp(),
                                                        858.3449,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["omnis"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "mollitia",
                                                        true,
                                                    LengthUnit.Meters,
                                                        595.0481,
                                                        551.2346,
                                                        726.0614,
                                                        20.8369))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("magni deleniti nulla")"
                                                StringContent="@("assumenda")"
                                                OutFields="@(["explicabo"])"
                                                FieldInfos="@([new FieldInfo("email",
                                                        "voluptatem",
                                                        "non",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min),
                                                new FieldInfo("password",
                                                        "aut",
                                                        "minus",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var)])"
                                                Content="@([new AttachmentsPopupContent("placeat fugit voluptatibus",
                                                        "expedita amet animi labore"),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "soluta et",
                                                        "rem doloribus iure")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                        "id",
                                                        "assumenda assumenda aut"),
                                                new ExpressionInfo("return $feature['FieldName'];",
                                                        "group",
                                                        "id earum in")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("eius sint doloribus",
                                                    "https://picsum.photos/640/480/?image=1053",
                                                    "bdbff516-2f33-3ba2-408e-b0dfd41fae83",
                                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                    "title",
                                                    true,
                                                    true,
                                                    true,
                                                    "repellendus"),
                                                    new ActionButton("consectetur modi deserunt",
                                                        "https://picsum.photos/640/480/?image=256",
                                                        "ba2702e3-52e0-aab9-5028-bd3bbe8b4fde",
                                                        () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                                                        "id",
                                                        true,
                                                        true,
                                                        true,
                                                        "libero")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowEnd)"
                                                LabelExpression="@("nihil")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(22407578.7373)"
                                                MinScale="@(49867.1838)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(842.6190))"
                                                Symbol="@(new TextSymbol("autem error aperiam",
                                                    new MapColor(21, 249, 205),
                                                    new MapColor(34, 157, 22),
                                                        null,
                                                    new MapFont(),
                                                        403.2778,
                                                    new MapColor(216, 194, 152),
                                                    new MapColor(207, 174, 97),
                                                        837.3389,
                                                    HorizontalAlignment.Right,
                                                        true,
                                                        676.3995,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Province = 'Ontario'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("est")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(147, 202, 119),
                                                    new MapColor(178, 110, 234)),
                                                    911.5665,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "voluptatem",
                                                        "ratione",
                                                        "id"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "aut",
                                                        "numquam",
                                                        "fugit"),
                                                    ["nihil"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "maxime",
                                                    true,
                                                LengthUnit.Yards,
                                                    876.5316,
                                                    544.9615,
                                                    689.1563,
                                                    510.3148))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("facilis quos ut")"
                                            StringContent="@("repudiandae")"
                                            OutFields="@(["incidunt",
                                                "consequatur"])"
                                            FieldInfos="@([new FieldInfo("updatedAt",
                                                    "aperiam",
                                                    "rerum",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("status",
                                                    "sed",
                                                    "corporis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.DayShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Min)])"
                                            Content="@([new RelationshipPopupContent("nihil asperiores corrupti",
                                                    "quaerat ipsam quia quod",
                                                    5,
                                                    "aliquid",
                                                [new RelatedRecordsInfoFieldOrder("dolore",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("dignissimos",
                                                    OrderBy.Asc)],
                                                    4)])"
                                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "token",
                                                    "vel et incidunt",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Name;",
                                                    "comment",
                                                    "minus sint et",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("enim ut aut",
                                                "https://picsum.photos/640/480/?image=858",
                                                "7fff71bc-5537-150a-9828-fc4dcea5ca05",
                                                () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                                "avatar",
                                                true,
                                                true,
                                                true,
                                                "labore"),
                                                new ActionButton("delectus doloremque sit",
                                                    "https://picsum.photos/640/480/?image=587",
                                                    "549cdff5-f695-cd14-cb5b-b3b7b875af9d",
                                                    () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                                    "status",
                                                    true,
                                                    true,
                                                    true,
                                                    "natus")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveCenter)"
                                            LabelExpression="@("excepturi")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(5163146.4472)"
                                            MinScale="@(3807.9719)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(235.8398))"
                                            Symbol="@(new TextSymbol("illo et dicta",
                                                new MapColor(42, 242, 215),
                                                new MapColor(120, 205, 117),
                                                    new Dimension(762.4192),
                                                new MapFont(new Dimension(730.0145),
                                                        "Times New Roman",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Lighter,
                                                    TextDecoration.Underline),
                                                    582.5400,
                                                new MapColor(144, 202, 181),
                                                new MapColor(62, 4, 160),
                                                    44.1625,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    689.8700,
                                                    new Dimension(894.4101),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("1 = 1")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("rerum")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(169, 37, 234),
                                                new MapColor(61, 144, 170)),
                                                207.3663,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(858.2837,
                                                        227.9815),
                                                new AuthoringInfoField1ClassBreakInfos(239.6839,
                                                        174.1892)],
                                                    "qui",
                                                    "sunt",
                                                    "dicta"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(722.3704,
                                                        480.5615)],
                                                    "amet",
                                                    "similique",
                                                    "distinctio"),
                                                ["aspernatur"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "corporis",
                                                true,
                                            LengthUnit.Kilometers,
                                                190.8123,
                                                911.9446,
                                                319.3818,
                                                872.3282))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("molestiae dicta est")"
                                        StringContent="@("saepe")"
                                        OutFields="@(["impedit"])"
                                        FieldInfos="@([new FieldInfo("group",
                                                "consequuntur",
                                                "nemo",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("category",
                                                "corrupti",
                                                "ullam",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Count)])"
                                        Content="@([new MediaPopupContent("iste reprehenderit est",
                                                "itaque et iusto",
                                            [new BarChartMediaInfo("qui necessitatibus exercitationem",
                                                    "expedita",
                                                    "fugiat occaecati fugit",
                                                new ChartMediaInfoValue(["sed",
                                                        "quam"],
                                                        "architecto",
                                                        "voluptas",
                                                    [new ChartMediaInfoValueSeries()],
                                                    [new MapColor(80, 61, 185),
                                                    new MapColor(56, 76, 184)]))],
                                                7)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "password",
                                                "et optio accusamus",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return Date();",
                                                "createdAt",
                                                "et quas officia",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("ducimus adipisci qui",
                                            "https://picsum.photos/640/480/?image=499",
                                            "83f51797-65f7-a5f4-93a4-d715b99e7f21",
                                            () => { Console.WriteLine("ullam"); return Task.CompletedTask; },
                                            "category",
                                            true,
                                            true,
                                            true,
                                            "iure")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveAlong)"
                                        LabelExpression="@("perspiciatis")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(19948916.7767)"
                                        MinScale="@(43440.2237)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(456.5773))"
                                        Symbol="@(new TextSymbol("accusamus rerum rerum",
                                            new MapColor(180, 59, 186),
                                            new MapColor(225, 109, 93),
                                                new Dimension(955.4206),
                                            new MapFont(new Dimension(831.8698),
                                                    "Georgia",
                                                MapFontStyle.Normal,
                                                FontWeight.Bolder,
                                                TextDecoration.None),
                                                109.1193,
                                            new MapColor(113, 202, 92),
                                            new MapColor(171, 192, 89),
                                                638.3286,
                                            HorizontalAlignment.Left,
                                                true,
                                                775.7679,
                                                new Dimension(835.7636),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Phone = '555-555-5555'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("laboriosam")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(230, 153, 22),
                                            new MapColor(78, 215, 152)),
                                            157.3553,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(459.8583,
                                                    671.9603)],
                                                "optio",
                                                "placeat",
                                                "qui"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(801.2355,
                                                    542.3322),
                                            new AuthoringInfoField1ClassBreakInfos(106.8355,
                                                    811.2500)],
                                                "quis",
                                                "dolores",
                                                "nihil"),
                                            ["aut",
                                                "ea"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "est",
                                            true,
                                        LengthUnit.Millimeters,
                                            315.0919,
                                            531.7649,
                                            678.5884,
                                            535.1364))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("et libero est")"
                                    StringContent="@("qui")"
                                    OutFields="@(["accusamus"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "qui",
                                            "quisquam",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("comment",
                                            "possimus",
                                            "nam",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Max)])"
                                    Content="@([new TextPopupContent("doloribus a recusandae"),
                                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "facere",
                                                "consequatur est ipsam"))])"
                                    ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "token",
                                            "sed accusantium quo",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("quia qui ad",
                                        "https://picsum.photos/640/480/?image=13",
                                        "a1143ade-6899-5578-779c-c7de302cfd08",
                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                        "name",
                                        true,
                                        true,
                                        true,
                                        "est")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowStart)"
                                    LabelExpression="@("eum")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(30566946.5254)"
                                    MinScale="@(23033.1612)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(410.1876))"
                                    Symbol="@(new TextSymbol("eum molestiae maiores",
                                        new MapColor(151, 78, 231),
                                        new MapColor(86, 102, 125),
                                            new Dimension(729.6745),
                                        new MapFont(new Dimension(955.2686),
                                                "Garamond",
                                            MapFontStyle.Normal,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            990.4316,
                                        new MapColor(91, 40, 96),
                                        new MapColor(63, 138, 79),
                                            522.7268,
                                        HorizontalAlignment.Left,
                                            true,
                                            102.4341,
                                            new Dimension(721.9378),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("PostalCode = 'M5V 1J9'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("enim")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(153.2415,
                    -47.8065,
                    20.7071,
                    -27.8637,
                    774.0465,
                    872.9460,
                    666.5377,
                    800.8543,
                new SpatialReference(8,
                        "iure",
                        "ut",
                        "voluptates"),
                    true,
                    true),
                9,
                6,
            new MapImageLayerCreateExportImageParametersOptions(891.7108,
                    277.5716,
                    "ut"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(42.4626,
                    169.9051,
                    -41.8264,
                    -78.5527,
                    973.4060,
                    94.9165,
                    423.0644,
                    70.4163,
                new SpatialReference(7,
                        "sed",
                        "omnis",
                        "consequatur"),
                    true,
                    true),
                6,
                5,
            new MapImageLayerFetchImageOptions(863.4184,
                    4.7319,
                    "quas"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(6);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        await mapImageLayer.Refresh();
        PortalItem testPortalItem = new PortalItem();
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Difference;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2017, 8, 7, 5, 23, 18),
                    new DateTime(2021, 6, 22, 7, 32, 21));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("aliquid",
                    "magni",
                new TimeExtent(new DateTime(2020, 4, 21, 2, 29, 37),
                        new DateTime(2002, 6, 22, 16, 52, 11)),
                new TimeInterval(TemporalTime.Days,
                        875.8120),
                    [new DateTime(2012, 10, 7, 19, 34, 28)],
                    "Asia/Singapore",
                    "alias");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(8,
                    true,
                    true,
                ListMode.Hide,
                    8308311.1621,
                    20720.2601,
                    0.6878,
                    true,
                    "est impedit sed",
                    true,
                    "vitae",
                new LayerFloorInfo("voluptatum"),
                [new Label(LabelPlacement.CenterAlong,
                        "possimus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        25450339.7803,
                        7099.8539,
                        true,
                        new Dimension(486.1017),
                    new TextSymbol("laudantium quo illo",
                        new MapColor(105, 125, 225),
                        new MapColor(159, 167, 48),
                            new Dimension(851.8896),
                        new MapFont(new Dimension(476.8362),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            451.4815,
                        new MapColor(32, 103, 207),
                        new MapColor(207, 48, 165),
                            500.7289,
                        HorizontalAlignment.Left,
                            true,
                            410.3628,
                            new Dimension(64.4534),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("eligendi minus ullam",
                        "quis",
                        ["consequatur"],
                    [new FieldInfo("avatar",
                            "est",
                            "omnis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                "odio",
                                "animi velit voluptas")),
                    new RelationshipPopupContent("voluptatem dolor molestias",
                            "quo id",
                            1,
                            "iure",
                        [new RelatedRecordsInfoFieldOrder("rerum",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("exercitationem",
                            OrderBy.Desc)],
                            3)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "password",
                            "rem voluptatibus cupiditate",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "id",
                            "iusto illo et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("ut quis rerum",
                            "https://picsum.photos/640/480/?image=658",
                            "2dd12394-dd9b-7edb-6311-73d3c7f6e434",
                            () => { Console.WriteLine("eius"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "aut"),
                            new ActionButton("iure quod ut",
                                "https://picsum.photos/640/480/?image=265",
                                "e0398048-0e62-22ab-2fd9-745d174ab7c1",
                                () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "earum")])),
            new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    48812266.6023,
                    35202.7917,
                    0.3122,
                    true,
                    "incidunt perspiciatis animi",
                    true,
                    "ab",
                new LayerFloorInfo("assumenda"),
                [new Label(LabelPlacement.BelowBefore,
                        "officia",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        46996541.3159,
                        43034.9813,
                        true,
                        new Dimension(176.1035),
                    new TextSymbol("sit dolores unde",
                        new MapColor(54, 238, 141),
                        new MapColor(252, 29, 6),
                            new Dimension(387.4661),
                        new MapFont(new Dimension(645.9166),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            198.9226,
                        new MapColor(108, 22, 24),
                        new MapColor(166, 189, 68),
                            150.3825,
                        HorizontalAlignment.Center,
                            true,
                            81.9336,
                            new Dimension(892.2160),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("est officiis voluptatem",
                        "et",
                        ["magni",
                            "ea"],
                    [new FieldInfo("createdAt",
                            "et",
                            "quaerat",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("group",
                            "at",
                            "velit",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new RelationshipPopupContent("quia optio tempora",
                            "eum voluptatem ea perspiciatis",
                            3,
                            "vel",
                        [new RelatedRecordsInfoFieldOrder("odit",
                            OrderBy.Desc)],
                            5),
                    new TextPopupContent("magni qui ipsum")],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "group",
                            "ex ipsam minima",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "status",
                            "aspernatur doloremque tempore",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("saepe totam reiciendis",
                            "https://picsum.photos/640/480/?image=849",
                            "64a19aca-794f-d3ec-8b62-090467de2a8e",
                            () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "magni")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(125.6469,
                    109.9004,
                    -50.4209,
                    84.8996,
                    434.3799,
                    168.6214,
                    801.5334,
                    154.0802,
                new SpatialReference(7,
                        "porro",
                        "illum",
                        "occaecati"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(3,
                    true,
                    true,
                ListMode.Hide,
                    42937941.9789,
                    32252.0434,
                    0.0258,
                    true,
                    "reiciendis in dolor",
                    true,
                    "ad",
                new LayerFloorInfo("voluptas"),
                [new Label(LabelPlacement.AboveBefore,
                        "praesentium",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        48874134.9610,
                        37848.3059,
                        true,
                        new Dimension(291.7062),
                    new TextSymbol("excepturi in dignissimos",
                        new MapColor(146, 24, 41),
                        new MapColor(72, 226, 220),
                            new Dimension(878.9291),
                        new MapFont(new Dimension(53.4905),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            515.3566,
                        new MapColor(198, 82, 9),
                        new MapColor(76, 213, 125),
                            818.3415,
                        HorizontalAlignment.Left,
                            true,
                            349.8178,
                            new Dimension(31.5668),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("ut aut eveniet",
                        "quia",
                        ["reiciendis",
                            "suscipit"],
                    [new FieldInfo("name",
                            "voluptate",
                            "illum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("id",
                            "ipsa",
                            "eos",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new MediaPopupContent("dicta ea earum",
                            "ut et",
                        [new ColumnChartMediaInfo("dolores non culpa",
                                "placeat",
                                "atque voluptatum dolores",
                            new ChartMediaInfoValue(["itaque"],
                                    "ut",
                                    "ut",
                                [new ChartMediaInfoValueSeries("id",
                                        "accusantium",
                                        397.4461)],
                                [new MapColor(226, 36, 170),
                                new MapColor(36, 139, 178)])),
                        new PieChartMediaInfo("pariatur vero autem",
                                "rerum",
                                "nihil dignissimos omnis",
                            new ChartMediaInfoValue(["enim"],
                                    "quia",
                                    "minus",
                                [new ChartMediaInfoValueSeries("id",
                                        "molestiae",
                                        418.0354)],
                                [new MapColor(5, 22, 220),
                                new MapColor(245, 246, 142)]))],
                            2),
                    new RelationshipPopupContent("temporibus autem sed",
                            "consequatur voluptas et et",
                            3,
                            "vel",
                        [new RelatedRecordsInfoFieldOrder("aut",
                            OrderBy.Asc)],
                            6)],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "updatedAt",
                            "perferendis beatae facilis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("quos rem facilis",
                            "https://picsum.photos/640/480/?image=1057",
                            "6fc00eb5-ace5-8b8c-1dd7-fbd0013fd529",
                            () => { Console.WriteLine("tempore"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "sed")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Weeks,
                    385.3692);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2006, 11, 25, 17, 30, 10),
                    new DateTime(2008, 9, 2, 5, 46, 5));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
