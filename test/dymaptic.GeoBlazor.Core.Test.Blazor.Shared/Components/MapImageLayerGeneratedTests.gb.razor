@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Overlay)"
                        Dpi="@(499.3765)"
                        Effect="@(new Effect("quisquam",
                            44977944.1518))"
                        GdbVersion="@("0.8.6.4")"
                        ImageFormat="@(MapImageFormat.Png)"
                        ImageMaxHeight="@(1)"
                        ImageMaxWidth="@(4)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(38955688.2274)"
                        MinScale="@(45739.0286)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(790.8344)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Hide)"
                        Visible="@(true)"
                        Opacity="@(0.0340)"
                        Copyright="@("in")"
                        FullExtent="@(new Extent(-37.5331,
                                166.7040,
                                31.5665,
                                -82.2802,
                                541.3957,
                                235.0159,
                                351.1959,
                                558.3423,
                            new SpatialReference(4,
                                    "id",
                                    "maxime",
                                    "voluptatem"),
                                true,
                                true))"
                        Title="@("non corporis alias")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Centuries)"
                            Value="@(831.9785)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("reprehenderit")"
                            EndField="@("in")"
                            Stops="@([new DateTime(2021, 6, 8, 13, 11, 32),
                                new DateTime(2017, 6, 7, 21, 1, 44),
                                new DateTime(2022, 5, 12, 2, 2, 40)])"
                            TimeZone="@("Europe/Brussels")"
                            TrackIdField="@("fugiat")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Days)"
                                Value="@(979.6908)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2004, 1, 25, 4, 12, 58))"
                                End="@(new DateTime(2004, 2, 18, 8, 2, 15))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2013, 7, 15, 15, 55, 33))"
                            End="@(new DateTime(2001, 9, 21, 16, 36, 17))">
                        </TimeExtent>
                        <Sublayer 
                            SublayerId="@(2)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(32696228.9896)"
                            MinScale="@(40838.2682)"
                            Opacity="@(0.9937)"
                            PopupEnabled="@(true)"
                            Title="@("qui ullam amet")"
                            Visible="@(true)"
                            DefinitionExpression="@("ut")"
                            FloorInfo="@(new LayerFloorInfo("laudantium"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowBefore,
                                    "quia",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    31125482.8153,
                                    49017.8159,
                                    true,
                                    new Dimension(177.1882),
                                new TextSymbol("odit quidem sit",
                                    new MapColor(5, 215, 67),
                                    new MapColor(142, 82, 17),
                                        new Dimension(201.9115),
                                    new MapFont(new Dimension(886.3748),
                                            "Arial",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        757.9569,
                                    new MapColor(123, 203, 174),
                                    new MapColor(187, 90, 183),
                                        367.7746,
                                    HorizontalAlignment.Center,
                                        true,
                                        809.5637,
                                        new Dimension(337.7897),
                                        true),
                                    true,
                                    "Street = '123 Main St.'"),
                            new Label(LabelPlacement.CenterEnd,
                                    "eum",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    2056993.9458,
                                    13755.8191,
                                    true,
                                    new Dimension(685.4228),
                                new TextSymbol("exercitationem placeat quod",
                                    new MapColor(87, 131, 26),
                                    new MapColor(147, 18, 3),
                                        new Dimension(455.2053),
                                    new MapFont(new Dimension(867.0133),
                                            "Helvetica",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        471.0278,
                                    new MapColor(87, 187, 175),
                                    new MapColor(33, 224, 7),
                                        457.6006,
                                    HorizontalAlignment.Right,
                                        true,
                                        532.9654,
                                        new Dimension(284.0392),
                                        true),
                                    true,
                                    "City = 'Toronto'"),
                            new Label(LabelPlacement.CenterAfter,
                                    "voluptatibus",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    33757100.9988,
                                    30630.9911,
                                    true,
                                    new Dimension(805.5282),
                                new TextSymbol("placeat molestiae cum",
                                    new MapColor(9, 42, 11),
                                    new MapColor(44, 144, 152),
                                        new Dimension(485.5939),
                                    new MapFont(new Dimension(922.5814),
                                            "Georgia",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        149.8550,
                                    new MapColor(56, 172, 119),
                                    new MapColor(125, 163, 51),
                                        893.3204,
                                    HorizontalAlignment.Left,
                                        true,
                                        884.4317,
                                        new Dimension(660.1757),
                                        true),
                                    true,
                                    "Age > 21")])"
                            PopupTemplate="@(new PopupTemplate("autem modi est",
                                    "minima",
                                    ["similique",
                                        "itaque"],
                                [new FieldInfo("avatar",
                                        "nobis",
                                        "nisi",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.ShortDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("group",
                                        "beatae",
                                        "ratione",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("title",
                                        "sit",
                                        "aut",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.ShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("id",
                                        "iusto",
                                        "neque",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                [new RelationshipPopupContent("tenetur accusantium fuga",
                                        "consequuntur et hic et",
                                        4,
                                        "eum",
                                    [new RelatedRecordsInfoFieldOrder("dolorum",
                                        OrderBy.Desc)],
                                        5)],
                                [new ExpressionInfo("return $feature['FieldName'];",
                                        "avatar",
                                        "deserunt a ab",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "id",
                                        "aut ab debitis",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Name;",
                                        "name",
                                        "sed eaque architecto",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "avatar",
                                        "qui ullam ab",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("id eaque nihil",
                                        "9b2ae4b7-bd30-2766-a655-756a9f6a6cfd",
                                        () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "email",
                                        "esse"),
                                new ActionToggle("temporibus illum laboriosam",
                                        "ffafc8a9-1dec-b614-125e-6c8b943309f9",
                                        () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "id",
                                        "a"),
                                new ActionButton("quas esse consectetur",
                                        "https://picsum.photos/640/480/?image=220",
                                        "c19bff2e-6424-f6b8-6a3d-3c8d7af60c97",
                                        () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                        "avatar",
                                        true,
                                        true,
                                        true,
                                        "voluptate"),
                                new ActionToggle("facilis aut sint",
                                        "34feb508-ea03-5451-5137-b1e35230faed",
                                        () => { Console.WriteLine("itaque"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "avatar",
                                        "rerum")]))"
                            Renderer="@(new UniqueValueRenderer([new UniqueValueInfo("voluptatem",
                                    new TextSymbol("expedita vel illum",
                                        new MapColor(0, 150, 168),
                                        new MapColor(218, 235, 250),
                                            new Dimension(616.8427),
                                        new MapFont(new Dimension(406.7352),
                                                "Garamond",
                                            MapFontStyle.Italic,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            494.5429,
                                        new MapColor(224, 39, 19),
                                        new MapColor(14, 81, 23),
                                            546.4423,
                                        HorizontalAlignment.Right,
                                            true,
                                            543.4198,
                                            new Dimension(902.0840),
                                            true),
                                        "error"),
                                new UniqueValueInfo("odio",
                                    new TextSymbol("dolorem velit quis",
                                        new MapColor(139, 245, 162),
                                        new MapColor(210, 242, 148),
                                            new Dimension(640.8216),
                                        new MapFont(new Dimension(596.4065),
                                                "Georgia",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bolder,
                                            TextDecoration.None),
                                            358.8777,
                                        new MapColor(17, 167, 225),
                                        new MapColor(89, 212, 62),
                                            609.3613,
                                        HorizontalAlignment.Right,
                                            true,
                                            192.7528,
                                            new Dimension(605.1830),
                                            true),
                                        "voluptas"),
                                new UniqueValueInfo("aut",
                                    new TextSymbol("temporibus molestiae recusandae",
                                        new MapColor(100, 23, 153),
                                        new MapColor(108, 235, 151),
                                            new Dimension(29.7538),
                                        new MapFont(new Dimension(965.4765),
                                                "Georgia",
                                            MapFontStyle.Normal,
                                            FontWeight.Lighter,
                                            TextDecoration.LineThrough),
                                            949.9128,
                                        new MapColor(18, 45, 151),
                                        new MapColor(14, 201, 252),
                                            703.5484,
                                        HorizontalAlignment.Right,
                                            true,
                                            861.2682,
                                            new Dimension(187.6235),
                                            true),
                                        "et"),
                                new UniqueValueInfo("enim",
                                    new TextSymbol("excepturi officiis laborum",
                                        new MapColor(218, 14, 183),
                                        new MapColor(44, 91, 78),
                                            new Dimension(916.3578),
                                        new MapFont(new Dimension(795.2424),
                                                "Bookman",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            726.0966,
                                        new MapColor(4, 166, 163),
                                        new MapColor(110, 79, 209),
                                            654.2705,
                                        HorizontalAlignment.Center,
                                            true,
                                            237.3178,
                                            new Dimension(434.2493),
                                            true),
                                        "alias")],
                                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(87, 74, 119),
                                        new MapColor(182, 19, 39)),
                                        984.2572,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(476.2809,
                                                847.6603),
                                        new AuthoringInfoField1ClassBreakInfos(123.0014,
                                                451.0728),
                                        new AuthoringInfoField1ClassBreakInfos(499.9836,
                                                306.4281)],
                                            "id",
                                            "laborum",
                                            "quidem"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(680.3042,
                                                269.3337),
                                        new AuthoringInfoField1ClassBreakInfos(32.5160,
                                                898.1304)],
                                            "error",
                                            "minus",
                                            "modi"),
                                        ["ipsa",
                                            "ea",
                                            "omnis",
                                            "possimus"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "est",
                                        true,
                                    LengthUnit.Decimeters,
                                        70.4848,
                                        285.8062,
                                        236.7072,
                                        99.4072),
                                new PictureFillSymbol("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0",
                                    new Dimension(61.5973),
                                    new Dimension(140.0066),
                                    new Dimension(44.9398),
                                    new Dimension(545.9414),
                                    -109.2225,
                                    -18.1503,
                                    new Outline(new MapColor(194, 101, 201),
                                        new Dimension(112.0539),
                                        SimpleLineSymbolStyle.ShortDashDotDot,
                                        Cap.Round,
                                        Join.Round,
                                        new LineSymbolMarker(new MapColor(37, 190, 133),
                                            LinePlacement.End,
                                            LineSymbolMarkerStyle.Circle),
                                        400.1734),
                                    new MapColor(153, 36, 190)),
                                    "labore",
                                    new DefaultSymbol(),
                                    "tempore",
                                    "sit",
                                    "voluptatem",
                                    "aperiam",
                                new UniqueValueRendererLegendOptions("sint ab possimus"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("sint",
                                        new TextSymbol("aut voluptatibus nulla",
                                            new MapColor(162, 5, 139),
                                            new MapColor(95, 225, 146),
                                                new Dimension(184.0136),
                                            new MapFont(new Dimension(598.9508),
                                                    "Garamond",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bolder,
                                                TextDecoration.Underline),
                                                498.2330,
                                            new MapColor(131, 123, 37),
                                            new MapColor(66, 17, 136),
                                                20.4444,
                                            HorizontalAlignment.Left,
                                                true,
                                                544.4261,
                                                new Dimension(577.7573),
                                                true),
                                        [new UniqueValue("maxime",
                                                "qui",
                                                "omnis"),
                                        new UniqueValue("accusantium",
                                                "voluptatem",
                                                "corrupti"),
                                        new UniqueValue("ullam",
                                                "adipisci",
                                                "aperiam"),
                                        new UniqueValue("inventore",
                                                "atque",
                                                "distinctio")]),
                                    new UniqueValueClass("voluptatem",
                                        new TextSymbol("natus autem rem",
                                            new MapColor(120, 164, 203),
                                            new MapColor(55, 54, 73),
                                                new Dimension(279.6177),
                                            new MapFont(new Dimension(873.4683),
                                                    "Bookman",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                371.0819,
                                            new MapColor(182, 244, 140),
                                            new MapColor(40, 221, 106),
                                                635.3194,
                                            HorizontalAlignment.Right,
                                                true,
                                                294.3227,
                                                new Dimension(948.1362),
                                                true),
                                        [new UniqueValue("labore",
                                                "dicta",
                                                "qui")])],
                                        "qui"),
                                new UniqueValueGroup([new UniqueValueClass("quia",
                                        new TextSymbol("sit omnis saepe",
                                            new MapColor(163, 254, 61),
                                            new MapColor(91, 146, 219),
                                                new Dimension(129.6708),
                                            new MapFont(new Dimension(317.3001),
                                                    "Georgia",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                984.3469,
                                            new MapColor(52, 61, 18),
                                            new MapColor(239, 104, 71),
                                                739.2209,
                                            HorizontalAlignment.Center,
                                                true,
                                                10.5538,
                                                new Dimension(139.3989),
                                                true),
                                        [new UniqueValue("repudiandae",
                                                "reprehenderit",
                                                "veniam"),
                                        new UniqueValue("excepturi",
                                                "laboriosam",
                                                "at"),
                                        new UniqueValue("qui",
                                                "est",
                                                "est"),
                                        new UniqueValue("aut",
                                                "odit",
                                                "dolores")]),
                                    new UniqueValueClass("fugit",
                                        new TextSymbol("odit ipsam nihil",
                                            new MapColor(100, 227, 80),
                                            new MapColor(148, 57, 253),
                                                new Dimension(711.5173),
                                            new MapFont(new Dimension(830.8102),
                                                    "Bookman",
                                                MapFontStyle.Normal,
                                                FontWeight.Bolder,
                                                TextDecoration.LineThrough),
                                                145.0970,
                                            new MapColor(206, 202, 124),
                                            new MapColor(253, 152, 1),
                                                353.5622,
                                            HorizontalAlignment.Left,
                                                true,
                                                110.2119,
                                                new Dimension(309.0811),
                                                true),
                                        [new UniqueValue("quasi",
                                                "porro",
                                                "tempore")])],
                                        "magni"),
                                new UniqueValueGroup([new UniqueValueClass("quasi",
                                        new TextSymbol("voluptatum sit consequatur",
                                            new MapColor(120, 18, 239),
                                            new MapColor(195, 56, 139),
                                                new Dimension(618.4546),
                                            new MapFont(new Dimension(379.5673),
                                                    "Courier New",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.Underline),
                                                913.1867,
                                            new MapColor(251, 244, 155),
                                            new MapColor(85, 49, 117),
                                                562.2444,
                                            HorizontalAlignment.Center,
                                                true,
                                                452.6798,
                                                new Dimension(796.7276),
                                                true),
                                        [new UniqueValue("totam",
                                                "assumenda",
                                                "mollitia"),
                                        new UniqueValue("quia",
                                                "est",
                                                "dolor"),
                                        new UniqueValue("sed",
                                                "maxime",
                                                "cupiditate")]),
                                    new UniqueValueClass("praesentium",
                                        new TextSymbol("iure ullam minima",
                                            new MapColor(132, 240, 164),
                                            new MapColor(153, 113, 252),
                                                new Dimension(58.3948),
                                            new MapFont(new Dimension(100.1293),
                                                    "Courier New",
                                                MapFontStyle.Normal,
                                                FontWeight.Lighter,
                                                TextDecoration.Underline),
                                                435.4040,
                                            new MapColor(30, 212, 83),
                                            new MapColor(46, 31, 49),
                                                830.1152,
                                            HorizontalAlignment.Right,
                                                true,
                                                12.9223,
                                                new Dimension(373.4720),
                                                true),
                                        [new UniqueValue("et",
                                                "libero",
                                                "labore")]),
                                    new UniqueValueClass("nihil",
                                        new TextSymbol("consequatur animi rerum",
                                            new MapColor(5, 68, 125),
                                            new MapColor(186, 189, 129),
                                                new Dimension(2.6890),
                                            new MapFont(new Dimension(304.8653),
                                                    "Arial",
                                                MapFontStyle.Italic,
                                                FontWeight.Normal,
                                                TextDecoration.Underline),
                                                721.9853,
                                            new MapColor(223, 107, 14),
                                            new MapColor(35, 125, 56),
                                                783.2502,
                                            HorizontalAlignment.Right,
                                                true,
                                                208.7918,
                                                new Dimension(473.4447),
                                                true),
                                        [new UniqueValue("cumque",
                                                "vel",
                                                "esse"),
                                        new UniqueValue("maxime",
                                                "recusandae",
                                                "adipisci")])],
                                        "quia")],
                                    "architecto",
                                    "voluptatibus non eligendi"))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(5)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(41829159.8092)"
                                MinScale="@(20825.1658)"
                                Opacity="@(0.9157)"
                                PopupEnabled="@(true)"
                                Title="@("numquam aspernatur ut")"
                                Visible="@(true)"
                                DefinitionExpression="@("quo")"
                                Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(9)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(43230885.7130)"
                                    MinScale="@(33668.4725)"
                                    Opacity="@(0.2412)"
                                    PopupEnabled="@(true)"
                                    Title="@("molestias ullam illum")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("nihil")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(4)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(47841929.0339)"
                                        MinScale="@(11744.9325)"
                                        Opacity="@(0.5097)"
                                        PopupEnabled="@(true)"
                                        Title="@("debitis commodi quam")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("incidunt")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(6)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(6505568.4153)"
                                            MinScale="@(19167.0479)"
                                            Opacity="@(0.5625)"
                                            PopupEnabled="@(true)"
                                            Title="@("magni asperiores ea")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("non")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(4)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(21086580.7533)"
                                                MinScale="@(36374.6074)"
                                                Opacity="@(0.2074)"
                                                PopupEnabled="@(true)"
                                                Title="@("sed voluptatum nesciunt")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("repellendus")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(9)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(22710371.1913)"
                                                    MinScale="@(42188.3275)"
                                                    Opacity="@(0.0229)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("ab non et")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("quia")"
                                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("ipsum ratione fugiat")"
                                                        StringContent="@("asperiores")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("libero")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("sed quod enim")"
                                                    StringContent="@("eligendi")"
                                                    OutFields="@(["magnam",
                                                        "cupiditate",
                                                        "et",
                                                        "beatae"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)])])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "f70f856c-befc-0772-8173-cc62b4005710",
                                                            () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "c63b7784-d25d-fee5-ed5b-7637d4d0f70e",
                                                            () => { Console.WriteLine("assumenda"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "d7347037-620c-faf2-afdf-16609a0e25e5",
                                                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveBefore)"
                                                    LabelExpression="@("rerum")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(21976448.4406)"
                                                    MinScale="@(35463.9453)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(387.0530))"
                                                    Symbol="@(new TextSymbol("qui aut voluptates"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("distinctio")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                        110.9861,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["error",
                                                            "quibusdam",
                                                            "rerum",
                                                            "et"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "harum",
                                                        true,
                                                    LengthUnit.Meters,
                                                        737.2771,
                                                        191.5840,
                                                        117.2337,
                                                        513.3542))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("quidem perspiciatis qui")"
                                                StringContent="@("corporis")"
                                                OutFields="@(["mollitia",
                                                    "sit",
                                                    "eos",
                                                    "qui"])"
                                                FieldInfos="@([new FieldInfo("email",
                                                        "quos",
                                                        "qui",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("password",
                                                        "qui",
                                                        "quo",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("email",
                                                        "consequuntur",
                                                        "eligendi",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)])"
                                                Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "quia autem quae magni quis ab culpa",
                                                        "commodi perspiciatis ullam"),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "hic sit deserunt et",
                                                        "quia itaque quia")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                        "title",
                                                        "rerum tempora cumque"),
                                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                        "name",
                                                        "labore perspiciatis laudantium"),
                                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                        "group",
                                                        "optio autem corporis"),
                                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                        "group",
                                                        "eius vel eos")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("harum minima molestiae",
                                                        "https://picsum.photos/640/480/?image=553",
                                                        "1fdfd5cb-879b-dc8a-0510-f2e055ae98a4",
                                                        () => { Console.WriteLine("doloremque"); return Task.CompletedTask; },
                                                        "title",
                                                        true,
                                                        true,
                                                        true,
                                                        "maxime"),
                                                new ActionButton("necessitatibus quis iure",
                                                        "https://picsum.photos/640/480/?image=884",
                                                        "ebc1751e-8450-ed7c-ecc3-8bac343a358b",
                                                        () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "voluptatem")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AlwaysHorizontal)"
                                                LabelExpression="@("dolore")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(20400020.3229)"
                                                MinScale="@(46793.3575)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(121.4848))"
                                                Symbol="@(new TextSymbol("sed alias adipisci",
                                                    new MapColor(29, 51, 217),
                                                    new MapColor(176, 251, 46),
                                                        null,
                                                    new MapFont(),
                                                        342.8218,
                                                    new MapColor(156, 227, 219),
                                                    new MapColor(88, 209, 28),
                                                        280.4966,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        595.0964,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Age > 21")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("alias")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(228, 32, 55),
                                                    new MapColor(159, 14, 58)),
                                                    241.1191,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "consequatur",
                                                        "amet",
                                                        "laudantium"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "quidem",
                                                        "et",
                                                        "quis"),
                                                    ["pariatur",
                                                        "magnam"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "dolor",
                                                    true,
                                                LengthUnit.Centimeters,
                                                    160.3030,
                                                    111.2141,
                                                    442.3081,
                                                    888.6435))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("nulla doloribus quasi")"
                                            StringContent="@("qui")"
                                            OutFields="@(["culpa",
                                                "qui",
                                                "aperiam",
                                                "explicabo"])"
                                            FieldInfos="@([new FieldInfo("avatar",
                                                    "quia",
                                                    "temporibus",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.LongMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("email",
                                                    "qui",
                                                    "sit",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("name",
                                                    "corrupti",
                                                    "dolor",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.ShortDateLe),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("createdAt",
                                                    "ea",
                                                    "impedit",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Avg)])"
                                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                                        "perspiciatis",
                                                        "consequatur illo fugit")),
                                            new AttachmentsPopupContent("molestias ea animi",
                                                    "ut voluptatem distinctio voluptas delectus autem qui",
                                                    AttachmentsPopupContentDisplayType.Preview),
                                            new MediaPopupContent("placeat sunt dolore",
                                                    "enim voluptate aut minima minima eveniet",
                                                [new ColumnChartMediaInfo("consequuntur sunt fugit",
                                                        "deleniti",
                                                        "ut deleniti nulla",
                                                    new ChartMediaInfoValue())],
                                                    5)])"
                                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "token",
                                                    "nostrum aut laudantium",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Name;",
                                                    "phone",
                                                    "dolores labore rerum",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "phone",
                                                    "soluta consequatur maxime",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("aperiam sed dolor",
                                                    "59733f43-fa52-f563-d860-3ce1f58e846b",
                                                    () => { Console.WriteLine("ipsam"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "email",
                                                    "ducimus")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveAfter)"
                                            LabelExpression="@("voluptatum")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(4057732.2161)"
                                            MinScale="@(30520.1650)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(554.7176))"
                                            Symbol="@(new TextSymbol("sequi ut quasi",
                                                new MapColor(74, 7, 143),
                                                new MapColor(161, 180, 151),
                                                    new Dimension(206.5485),
                                                new MapFont(new Dimension(938.1490),
                                                        "Arial",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Normal,
                                                    TextDecoration.Underline),
                                                    552.0234,
                                                new MapColor(5, 33, 133),
                                                new MapColor(49, 155, 46),
                                                    761.8268,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    330.0173,
                                                    new Dimension(385.6546),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("PostalCode = 'M5V 1J9'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("occaecati")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(51, 95, 75),
                                                    new MapColor(72, 205, 118))]),
                                                955.5228,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(716.1976,
                                                        162.1900)],
                                                    "rerum",
                                                    "ut",
                                                    "est"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(769.2453,
                                                        190.0485),
                                                new AuthoringInfoField1ClassBreakInfos(327.1215,
                                                        148.7267),
                                                new AuthoringInfoField1ClassBreakInfos(179.8037,
                                                        914.0300)],
                                                    "enim",
                                                    "nobis",
                                                    "magnam"),
                                                ["voluptatem",
                                                    "eveniet",
                                                    "quod"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "inventore",
                                                true,
                                            LengthUnit.Decimeters,
                                                652.6543,
                                                659.7876,
                                                345.9566,
                                                583.2214))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("ullam perspiciatis sit")"
                                        StringContent="@("mollitia")"
                                        OutFields="@(["aut",
                                            "in"])"
                                        FieldInfos="@([new FieldInfo("status",
                                                "culpa",
                                                "aliquid",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("phone",
                                                "quia",
                                                "unde",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateLe),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("name",
                                                "optio",
                                                "nam",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("category",
                                                "quibusdam",
                                                "ullam",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Avg)])"
                                        Content="@([new MediaPopupContent("enim voluptatem delectus",
                                                "aut harum sed doloribus facere",
                                            [new PieChartMediaInfo("veniam est nihil",
                                                    "nulla",
                                                    "officiis iusto consectetur",
                                                new ChartMediaInfoValue(["magni",
                                                        "qui",
                                                        "adipisci",
                                                        "natus"],
                                                        "dolores",
                                                        "ipsa",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(10, 111, 128),
                                                    new MapColor(153, 200, 254),
                                                    new MapColor(234, 220, 175)])),
                                            new BarChartMediaInfo("mollitia repellat saepe",
                                                    "ex",
                                                    "consectetur beatae sint",
                                                new ChartMediaInfoValue(["eum",
                                                        "corporis"],
                                                        "ut",
                                                        "maiores",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(9, 80, 153),
                                                    new MapColor(157, 226, 67),
                                                    new MapColor(152, 66, 223)]))],
                                                7),
                                        new TextPopupContent("eum rem numquam")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                "password",
                                                "cumque non vel",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("et numquam et",
                                                "https://picsum.photos/640/480/?image=341",
                                                "9201bf32-649e-cf27-8b6b-7797035deb13",
                                                () => { Console.WriteLine("dignissimos"); return Task.CompletedTask; },
                                                "id",
                                                true,
                                                true,
                                                true,
                                                "eaque"),
                                        new ActionToggle("et non sit",
                                                "8b15a114-981a-d9c1-9b60-9a13b4c89974",
                                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "avatar",
                                                "itaque")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveBefore)"
                                        LabelExpression="@("velit")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(33020608.7963)"
                                        MinScale="@(37404.4007)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(32.0194))"
                                        Symbol="@(new TextSymbol("quod consequatur quia",
                                            new MapColor(32, 195, 5),
                                            new MapColor(2, 186, 132),
                                                new Dimension(921.0052),
                                            new MapFont(new Dimension(668.5433),
                                                    "Palatino",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bold,
                                                TextDecoration.Underline),
                                                208.9350,
                                            new MapColor(119, 253, 164),
                                            new MapColor(208, 172, 21),
                                                117.5462,
                                            HorizontalAlignment.Right,
                                                true,
                                                348.0573,
                                                new Dimension(917.9044),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Name = 'John Doe'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("aliquam")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(249, 232, 59),
                                                new MapColor(99, 225, 13))]),
                                            378.5838,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(4.6996,
                                                    568.4374),
                                            new AuthoringInfoField1ClassBreakInfos(476.1665,
                                                    583.8861)],
                                                "est",
                                                "eos",
                                                "facere"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(955.2039,
                                                    777.4113),
                                            new AuthoringInfoField1ClassBreakInfos(618.8794,
                                                    329.0338)],
                                                "et",
                                                "pariatur",
                                                "veniam"),
                                            ["quae",
                                                "et"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "voluptatem",
                                            true,
                                        LengthUnit.Centimeters,
                                            404.2786,
                                            284.2176,
                                            679.2196,
                                            434.3348))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("ex quasi dolore")"
                                    StringContent="@("adipisci")"
                                    OutFields="@(["numquam",
                                        "quia",
                                        "est",
                                        "ipsum"])"
                                    FieldInfos="@([new FieldInfo("phone",
                                            "reiciendis",
                                            "sit",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("password",
                                            "ex",
                                            "id",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("phone",
                                            "quisquam",
                                            "deserunt",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("title",
                                            "est",
                                            "occaecati",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.DayShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Min)])"
                                    Content="@([new RelationshipPopupContent("vero cumque quas",
                                            "deserunt et molestiae velit quas exercitationem",
                                            5,
                                            "quod",
                                        [new RelatedRecordsInfoFieldOrder("temporibus",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("ut",
                                            OrderBy.Desc)],
                                            2),
                                    new RelationshipPopupContent("libero nulla neque",
                                            "praesentium dolorem accusantium consequuntur necessitatibus",
                                            4,
                                            "magni",
                                        [new RelatedRecordsInfoFieldOrder("amet",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("qui",
                                            OrderBy.Desc)],
                                            3)])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "comment",
                                            "numquam laboriosam adipisci",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return Date();",
                                            "title",
                                            "rerum placeat consequatur",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "updatedAt",
                                            "culpa voluptatem id",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("impedit at saepe",
                                            "d565fad3-4857-0c7c-83b1-a69f1fc08c5f",
                                            () => { Console.WriteLine("at"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "title",
                                            "dolor"),
                                    new ActionToggle("necessitatibus est totam",
                                            "eef6388b-5b48-ae46-8580-f21a7994f407",
                                            () => { Console.WriteLine("facere"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "avatar",
                                            "iusto"),
                                    new ActionToggle("molestias aliquid omnis",
                                            "59a9327c-52d7-1322-a164-c9c24304f0a1",
                                            () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "deserunt")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveAlong)"
                                    LabelExpression="@("ab")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(15972193.4608)"
                                    MinScale="@(37583.2202)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(628.5129))"
                                    Symbol="@(new TextSymbol("sit eum architecto",
                                        new MapColor(217, 10, 56),
                                        new MapColor(203, 219, 146),
                                            new Dimension(689.0862),
                                        new MapFont(new Dimension(888.7889),
                                                "Courier New",
                                            MapFontStyle.Italic,
                                            FontWeight.Lighter,
                                            TextDecoration.None),
                                            341.7399,
                                        new MapColor(173, 27, 173),
                                        new MapColor(85, 214, 30),
                                            751.9849,
                                        HorizontalAlignment.Left,
                                            true,
                                            976.6618,
                                            new Dimension(283.8597),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("1 = 1")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("id")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-23.5512,
                    127.1073,
                    57.5985,
                    43.8101,
                    626.3643,
                    57.1668,
                    465.6659,
                    10.3751,
                new SpatialReference(5,
                        "in",
                        "repellat",
                        "in"),
                    true,
                    true),
                2,
                3,
            new MapImageLayerCreateExportImageParametersOptions(253.3081,
                    129.0202,
                    "voluptate"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-176.5750,
                    -88.2670,
                    -46.0004,
                    -1.5494,
                    592.0611,
                    113.5815,
                    51.1704,
                    798.2417,
                new SpatialReference(8,
                        "quisquam",
                        "dolorem",
                        "natus"),
                    true,
                    true),
                9,
                3,
            new MapImageLayerFetchImageOptions(603.1784,
                    203.3519,
                    "est"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(2);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "quia",
                    "voluptatem",
                    44.2940,
                    ["accusantium",
                        "commodi"],
                    new DateTime(2023, 7, 17, 4, 25, 47),
                    "et",
                    "aut accusantium et molestias",
                new Extent(-90.4617,
                        -38.8583,
                        36.7417,
                        24.3415,
                        516.1431,
                        740.2418,
                        416.9035,
                        924.8321,
                    new SpatialReference(5,
                            "voluptates",
                            "reprehenderit",
                            "officia"),
                        true,
                        true),
                    ["in",
                        "debitis",
                        "commodi",
                        "placeat"],
                    "incidunt",
                    new DateTime(2019, 9, 4, 9, 58, 43),
                    "group",
                    486.3156);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Difference;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2007, 9, 1, 10, 58, 28),
                    new DateTime(2004, 1, 24, 5, 52, 4));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("aliquid",
                    "soluta",
                new TimeExtent(new DateTime(2012, 2, 11, 7, 14, 16),
                        new DateTime(2019, 3, 19, 15, 15, 51)),
                new TimeInterval(TemporalTime.Hours,
                        32.3538),
                    [new DateTime(2018, 2, 13, 19, 49, 15),
                        new DateTime(2009, 2, 24, 17, 57, 7),
                        new DateTime(2017, 7, 11, 7, 48, 23)],
                    "Europe/Budapest",
                    "dolorem");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeInterval = new TimeInterval(TemporalTime.Years,
                    399.1009);
        await mapImageLayer.SetTimeInterval(testTimeInterval);
        var timeInterval = await mapImageLayer.GetTimeInterval();
        Assert.AreEqual(testTimeInterval, timeInterval);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    28694857.2325,
                    22815.3459,
                    0.2537,
                    true,
                    "assumenda sed et",
                    true,
                    "earum",
                new LayerFloorInfo("consequuntur"),
                [new Label(LabelPlacement.AboveAfter,
                        "dolores",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        1563111.0410,
                        36327.7571,
                        true,
                        new Dimension(718.2713),
                    new TextSymbol("aut libero omnis",
                        new MapColor(164, 117, 33),
                        new MapColor(39, 0, 152),
                            new Dimension(356.7844),
                        new MapFont(new Dimension(481.0515),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            878.4439,
                        new MapColor(96, 157, 206),
                        new MapColor(34, 39, 28),
                            456.4488,
                        HorizontalAlignment.Center,
                            true,
                            917.3924,
                            new Dimension(878.8191),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.AboveBefore,
                        "ut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        20697959.7292,
                        6552.3323,
                        true,
                        new Dimension(611.2080),
                    new TextSymbol("fuga eos reprehenderit",
                        new MapColor(240, 98, 111),
                        new MapColor(26, 211, 50),
                            new Dimension(754.4508),
                        new MapFont(new Dimension(131.9166),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            980.5225,
                        new MapColor(86, 174, 253),
                        new MapColor(45, 115, 50),
                            491.7477,
                        HorizontalAlignment.Left,
                            true,
                            757.1837,
                            new Dimension(663.3996),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("laboriosam ea suscipit",
                        "quidem",
                        ["necessitatibus",
                            "molestiae",
                            "officia"],
                    [new FieldInfo("password",
                            "dolor",
                            "optio",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("avatar",
                            "et",
                            "sed",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("avatar",
                            "totam",
                            "voluptas",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new MediaPopupContent("reiciendis recusandae dolores",
                            "molestiae molestias quidem doloribus",
                        [new ColumnChartMediaInfo("distinctio vitae animi",
                                "facere",
                                "suscipit nam praesentium",
                            new ChartMediaInfoValue(["est",
                                    "laborum"],
                                    "odio",
                                    "iste",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "illum",
                                        166.5652),
                                new ChartMediaInfoValueSeries("status",
                                        "eum",
                                        46.6385)],
                                [new MapColor(181, 230, 211)]))],
                            1),
                    new MediaPopupContent("soluta magni et",
                            "est earum quibusdam dolores vitae et",
                        [new BarChartMediaInfo("aspernatur neque ullam",
                                "vitae",
                                "et quo aut",
                            new ChartMediaInfoValue(["sit",
                                    "tempora"],
                                    "beatae",
                                    "dolores",
                                [new ChartMediaInfoValueSeries("token",
                                        "esse",
                                        573.0125),
                                new ChartMediaInfoValueSeries("password",
                                        "ullam",
                                        470.7332),
                                new ChartMediaInfoValueSeries("id",
                                        "nostrum",
                                        363.0841)],
                                [new MapColor(58, 193, 102)])),
                        new LineChartMediaInfo("facere voluptatem aspernatur",
                                "quia",
                                "perferendis accusantium enim",
                            new ChartMediaInfoValue(["aut",
                                    "nesciunt"],
                                    "tempore",
                                    "dolore",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "nihil",
                                        427.3578),
                                new ChartMediaInfoValueSeries("id",
                                        "optio",
                                        259.7191),
                                new ChartMediaInfoValueSeries("phone",
                                        "quam",
                                        997.6847)],
                                [new MapColor(17, 31, 30),
                                new MapColor(189, 142, 20),
                                new MapColor(109, 143, 12)])),
                        new PieChartMediaInfo("rerum qui rem",
                                "facilis",
                                "nulla libero sequi",
                            new ChartMediaInfoValue(["quae",
                                    "nulla"],
                                    "iure",
                                    "consequatur",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "expedita",
                                        648.5195)],
                                [new MapColor(90, 17, 112),
                                new MapColor(14, 101, 84),
                                new MapColor(116, 69, 142)])),
                        new ImageMediaInfo("enim deleniti voluptatem",
                                "sit",
                                "sed voluptate quod",
                            new ImageMediaInfoValue("http://shirley.net",
                                    "https://raphael.info"),
                                48.4023)],
                            4),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                "et",
                                "enim cumque suscipit")),
                    new RelationshipPopupContent("repellendus ut aut",
                            "qui et reiciendis eum",
                            4,
                            "iusto",
                        [new RelatedRecordsInfoFieldOrder("dolor",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("tempore",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("ipsa",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("excepturi",
                            OrderBy.Asc)],
                            8)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "id",
                            "commodi error sint",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "password",
                            "aut ea quibusdam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "createdAt",
                            "sunt dolor explicabo",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("repellat accusantium reiciendis",
                            "7a340bcd-9326-2834-4acf-c6741c5053d7",
                            () => { Console.WriteLine("quisquam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "nihil")])),
            new Sublayer(1,
                    true,
                    true,
                ListMode.Hide,
                    34996767.1787,
                    20432.5300,
                    0.0202,
                    true,
                    "tenetur sed impedit",
                    true,
                    "fuga",
                new LayerFloorInfo("fugiat"),
                [new Label(LabelPlacement.BelowAfter,
                        "magni",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        40486113.5070,
                        17124.4231,
                        true,
                        new Dimension(394.6715),
                    new TextSymbol("ut aut dicta",
                        new MapColor(82, 64, 44),
                        new MapColor(161, 40, 114),
                            new Dimension(511.8141),
                        new MapFont(new Dimension(847.1099),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            90.2520,
                        new MapColor(174, 188, 29),
                        new MapColor(218, 212, 3),
                            623.1195,
                        HorizontalAlignment.Center,
                            true,
                            933.0885,
                            new Dimension(904.7076),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("labore nesciunt atque",
                        "iste",
                        ["dolorem",
                            "voluptates"],
                    [new FieldInfo("category",
                            "eum",
                            "ut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new AttachmentsPopupContent("ab possimus dignissimos",
                            "rerum sapiente repellat et perferendis quia",
                            AttachmentsPopupContentDisplayType.Auto),
                    new FieldsPopupContent([new FieldInfo("token",
                                "dolor",
                                "distinctio",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("avatar",
                                "quidem",
                                "vel",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("name",
                                "perspiciatis",
                                "illum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("email",
                                "at",
                                "pariatur",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Max)],
                            "voluptate ut illum in",
                            "corrupti aut et")],
                    [new ExpressionInfo("return Date();",
                            "email",
                            "voluptatum molestiae illum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "title",
                            "praesentium ut et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("eligendi molestiae sunt",
                            "https://picsum.photos/640/480/?image=914",
                            "6fcf831d-9fc4-1435-f35c-2b53b5654f68",
                            () => { Console.WriteLine("repellat"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "vero"),
                    new ActionButton("odit quae dolores",
                            "https://picsum.photos/640/480/?image=273",
                            "b464f09a-9863-24ca-de54-6ae0ae54659a",
                            () => { Console.WriteLine("nesciunt"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "temporibus")])),
            new Sublayer(2,
                    true,
                    true,
                ListMode.Hide,
                    18551282.3463,
                    49808.1586,
                    0.4131,
                    true,
                    "eligendi a cumque",
                    true,
                    "et",
                new LayerFloorInfo("necessitatibus"),
                [new Label(LabelPlacement.BelowRight,
                        "dolores",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        35339540.8123,
                        48917.5872,
                        true,
                        new Dimension(411.5477),
                    new TextSymbol("omnis cupiditate qui",
                        new MapColor(8, 34, 151),
                        new MapColor(58, 185, 143),
                            new Dimension(483.6621),
                        new MapFont(new Dimension(662.6264),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            666.8852,
                        new MapColor(192, 124, 170),
                        new MapColor(104, 161, 94),
                            8.1586,
                        HorizontalAlignment.Left,
                            true,
                            202.0665,
                            new Dimension(311.2832),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.BelowCenter,
                        "blanditiis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        47280338.3614,
                        11931.0641,
                        true,
                        new Dimension(944.9228),
                    new TextSymbol("ut architecto illo",
                        new MapColor(234, 206, 20),
                        new MapColor(147, 222, 10),
                            new Dimension(813.6302),
                        new MapFont(new Dimension(566.8973),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            995.3347,
                        new MapColor(186, 101, 182),
                        new MapColor(33, 48, 248),
                            230.5761,
                        HorizontalAlignment.Right,
                            true,
                            904.9725,
                            new Dimension(176.1337),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "occaecati",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        587919.3992,
                        15841.5935,
                        true,
                        new Dimension(324.7650),
                    new TextSymbol("eum corporis non",
                        new MapColor(214, 200, 99),
                        new MapColor(254, 135, 143),
                            new Dimension(60.4277),
                        new MapFont(new Dimension(110.8783),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            748.6324,
                        new MapColor(247, 160, 121),
                        new MapColor(253, 198, 39),
                            253.4443,
                        HorizontalAlignment.Center,
                            true,
                            29.6512,
                            new Dimension(163.8387),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("enim rerum dicta",
                        "magni",
                        ["soluta",
                            "non",
                            "corporis"],
                    [new FieldInfo("token",
                            "aut",
                            "praesentium",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("name",
                            "recusandae",
                            "dolores",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("status",
                            "libero",
                            "voluptatibus",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new AttachmentsPopupContent("quos magnam nihil",
                            "quia necessitatibus impedit unde",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "avatar",
                            "rerum ab dolores",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "category",
                            "excepturi aut doloremque",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "createdAt",
                            "nisi qui voluptas",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("ea quam dolor",
                            "https://picsum.photos/640/480/?image=539",
                            "c35bf7da-e00f-b5f6-7e19-de0b5d8fa712",
                            () => { Console.WriteLine("tempore"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "aspernatur"),
                    new ActionToggle("consequatur commodi aut",
                            "c1826741-71c1-8c65-ee8a-ea99fac35c6a",
                            () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "distinctio")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Show,
                    48423028.7896,
                    26166.2569,
                    0.9376,
                    true,
                    "a consequuntur voluptatem",
                    true,
                    "qui",
                new LayerFloorInfo("deserunt"),
                [new Label(LabelPlacement.BelowAfter,
                        "vero",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        29906327.3891,
                        18978.9304,
                        true,
                        new Dimension(630.3521),
                    new TextSymbol("quis laborum officia",
                        new MapColor(195, 163, 24),
                        new MapColor(28, 182, 185),
                            new Dimension(336.7562),
                        new MapFont(new Dimension(666.2602),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            5.6573,
                        new MapColor(91, 123, 43),
                        new MapColor(146, 86, 141),
                            769.4625,
                        HorizontalAlignment.Center,
                            true,
                            845.8622,
                            new Dimension(57.1167),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("quasi excepturi fugit",
                        "culpa",
                        ["occaecati",
                            "reprehenderit",
                            "nesciunt",
                            "qui"],
                    [new FieldInfo("createdAt",
                            "enim",
                            "eveniet",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("title",
                            "expedita",
                            "iure",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "consectetur",
                                "saepe perferendis et")),
                    new TextPopupContent("quia dicta magnam"),
                    new AttachmentsPopupContent("itaque dolor libero",
                            "autem dolorum officia natus dolores quod voluptatem",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("rerum ut amet")],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "group",
                            "rerum neque dolor",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "token",
                            "est itaque nobis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("similique magnam magnam",
                            "https://picsum.photos/640/480/?image=553",
                            "65e69a25-b142-75ed-027f-b308f4a1b497",
                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "nulla"),
                    new ActionToggle("rem est nemo",
                            "3dabe4a2-b6f7-0eb7-7503-d23f3cf67586",
                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "impedit"),
                    new ActionButton("labore corrupti error",
                            "https://picsum.photos/640/480/?image=440",
                            "3b48e933-020a-63db-9e17-5deda54e14b7",
                            () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "corrupti")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-27.8165,
                    38.2531,
                    -14.7425,
                    -75.9745,
                    48.7321,
                    490.3150,
                    478.0549,
                    54.1920,
                new SpatialReference(6,
                        "suscipit",
                        "excepturi",
                        "magni"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(3,
                    true,
                    true,
                ListMode.Show,
                    36027712.8555,
                    27662.2108,
                    0.0547,
                    true,
                    "aut non dignissimos",
                    true,
                    "officia",
                new LayerFloorInfo("mollitia"),
                [new Label(LabelPlacement.AboveStart,
                        "autem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        12685596.3763,
                        45437.5967,
                        true,
                        new Dimension(287.7900),
                    new TextSymbol("a excepturi itaque",
                        new MapColor(246, 18, 69),
                        new MapColor(75, 163, 41),
                            new Dimension(437.3011),
                        new MapFont(new Dimension(540.9666),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            599.6980,
                        new MapColor(225, 42, 34),
                        new MapColor(237, 99, 128),
                            16.1575,
                        HorizontalAlignment.Center,
                            true,
                            568.4327,
                            new Dimension(498.7493),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.BelowEnd,
                        "cumque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        31037486.1789,
                        14994.6611,
                        true,
                        new Dimension(785.1691),
                    new TextSymbol("est consequatur itaque",
                        new MapColor(54, 20, 64),
                        new MapColor(60, 226, 108),
                            new Dimension(955.4079),
                        new MapFont(new Dimension(285.4426),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            659.6259,
                        new MapColor(7, 133, 95),
                        new MapColor(62, 66, 225),
                            212.1087,
                        HorizontalAlignment.Right,
                            true,
                            956.8261,
                            new Dimension(637.0727),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.CenterRight,
                        "accusantium",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        2967017.9764,
                        10450.4310,
                        true,
                        new Dimension(422.6944),
                    new TextSymbol("voluptatem ipsam ea",
                        new MapColor(254, 234, 7),
                        new MapColor(202, 111, 18),
                            new Dimension(263.2313),
                        new MapFont(new Dimension(770.1601),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            887.5129,
                        new MapColor(10, 30, 167),
                        new MapColor(86, 174, 165),
                            172.0403,
                        HorizontalAlignment.Center,
                            true,
                            471.7643,
                            new Dimension(812.7363),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("vel cumque maiores",
                        "nam",
                        ["non",
                            "impedit",
                            "cumque"],
                    [new FieldInfo("comment",
                            "sit",
                            "qui",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("password",
                            "illo",
                            "et",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("comment",
                            "voluptates",
                            "quibusdam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("comment",
                            "corrupti",
                            "illum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new MediaPopupContent("porro aut voluptatum",
                            "officiis et voluptatibus sed laudantium quos maiores",
                        [new ColumnChartMediaInfo("eos et tempora",
                                "quaerat",
                                "ut consequatur non",
                            new ChartMediaInfoValue(["explicabo",
                                    "quaerat",
                                    "facere",
                                    "laudantium"],
                                    "sint",
                                    "corporis",
                                [new ChartMediaInfoValueSeries("title",
                                        "quasi",
                                        689.4803),
                                new ChartMediaInfoValueSeries("password",
                                        "earum",
                                        560.8999),
                                new ChartMediaInfoValueSeries("token",
                                        "reprehenderit",
                                        469.1023)],
                                [new MapColor(250, 114, 100),
                                new MapColor(163, 13, 121),
                                new MapColor(58, 194, 87)])),
                        new PieChartMediaInfo("non illo esse",
                                "ab",
                                "magni vel sint",
                            new ChartMediaInfoValue(["molestiae",
                                    "esse",
                                    "fugit"],
                                    "porro",
                                    "tempora",
                                [new ChartMediaInfoValueSeries("comment",
                                        "nesciunt",
                                        51.2468)],
                                [new MapColor(115, 114, 121),
                                new MapColor(16, 3, 81)])),
                        new ImageMediaInfo("at minus cupiditate",
                                "laboriosam",
                                "pariatur quas nihil",
                            new ImageMediaInfoValue("http://laury.com",
                                    "https://yvonne.name"),
                                912.7077),
                        new ImageMediaInfo("provident repellat reiciendis",
                                "magni",
                                "tempora similique molestiae",
                            new ImageMediaInfoValue("https://felton.net",
                                    "http://kaylah.net"),
                                93.4113)],
                            5),
                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "eius",
                                "placeat corporis ratione")),
                    new RelationshipPopupContent("neque eum sapiente",
                            "aspernatur quo aspernatur libero ut",
                            2,
                            "rerum",
                        [new RelatedRecordsInfoFieldOrder("ex",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("animi",
                            OrderBy.Asc)],
                            4)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "title",
                            "ut quam beatae",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "createdAt",
                            "ea quod maiores",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "updatedAt",
                            "nisi et qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "group",
                            "exercitationem molestias et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("et officiis architecto",
                            "https://picsum.photos/640/480/?image=72",
                            "52f6811d-c23e-c804-a2c0-352846492993",
                            () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "unde"),
                    new ActionToggle("eum qui aut",
                            "00d3686a-529e-6881-fe97-8cf46e59f97c",
                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "exercitationem"),
                    new ActionToggle("et voluptatem consequuntur",
                            "0347f63d-cfab-189d-5876-a9e6d6d8ae29",
                            () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "consequuntur"),
                    new ActionToggle("et aperiam nobis",
                            "09825574-1188-efe5-4112-ec3b151ef56f",
                            () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "officiis")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Years,
                    979.6874);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2017, 11, 1, 18, 3, 40),
                    new DateTime(2016, 6, 6, 15, 5, 54));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
