@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.DestinationIn)"
                        Dpi="@(960.7829)"
                        Effect="@(new Effect("animi",
                            37008498.1518))"
                        GdbVersion="@("9.7.8.5")"
                        ImageFormat="@(MapImageFormat.Bmp)"
                        ImageMaxHeight="@(2)"
                        ImageMaxWidth="@(8)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(12909488.0148)"
                        MinScale="@(13274.8080)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(495.1733)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.7858)"
                        Copyright="@("facilis")"
                        FullExtent="@(new Extent(7.5825,
                                94.2637,
                                -23.1501,
                                -87.0708,
                                169.9578,
                                618.0250,
                                606.6387,
                                351.3414,
                            new SpatialReference(7,
                                    "et",
                                    "qui",
                                    "maxime"),
                                true,
                                true))"
                        Title="@("iste perspiciatis est")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Minutes)"
                            Value="@(410.1626)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("qui")"
                            EndField="@("hic")"
                            Stops="@([new DateTime(2015, 11, 20, 22, 56, 43),
                                new DateTime(2013, 5, 9, 3, 11, 19),
                                new DateTime(2014, 6, 7, 14, 15, 3)])"
                            TimeZone="@("Asia/Ulaanbaatar")"
                            TrackIdField="@("blanditiis")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Years)"
                                Value="@(523.8033)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2004, 1, 23, 20, 17, 24))"
                                End="@(new DateTime(2007, 7, 12, 15, 10, 22))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2020, 10, 25, 18, 20, 13))"
                            End="@(new DateTime(2020, 11, 14, 1, 31, 15))">
                        </TimeExtent>
                        <PortalItem 
                            Access="@(PortalItemAccess.Private)"
                            AccessInformation="@("eligendi")"
                            ApiKey="@("incidunt")"
                            AvgRating="@(574.2812)"
                            Categories="@(["et",
                                "aut",
                                "velit"])"
                            Created="@(new DateTime(2001, 7, 23, 2, 34, 27))"
                            Culture="@("velit")"
                            Description="@("delectus vel ipsum doloremque")"
                            Extent="@(new Extent(22.8673,
                                    115.9084,
                                    -24.6132,
                                    0.2172,
                                    352.6293,
                                    160.7611,
                                    790.8079,
                                    234.4021,
                                new SpatialReference(4,
                                        "officia",
                                        "vitae",
                                        "sint"),
                                    true,
                                    true))"
                            GroupCategories="@(["sit",
                                "laboriosam",
                                "molestiae",
                                "numquam"])"
                            LicenseInfo="@("quas")"
                            Modified="@(new DateTime(2000, 4, 2, 21, 21, 15))"
                            Name="@("email")"
                            NumComments="@(271.0239)"
                            NumRatings="@(150.1913)"
                            NumViews="@(60.5572)"
                            Owner="@("Madonna Bayer")"
                            OwnerFolder="@("Marcelina Schaefer")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.NoPrompt,
                                    ["in",
                                        "maxime",
                                        "quia",
                                        "nulla"],
                                    "repellendus",
                                    "ut",
                                    "qui",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("maxime")"
                            Screenshots="@(["ut",
                                "maxime"])"
                            Size="@(5)"
                            Snippet="@("ea")"
                            Tags="@(["totam",
                                "iure",
                                "sit"])"
                            Title="@("qui eum velit")"
                            TypeKeywords="@(["unde",
                                "consequatur",
                                "cumque",
                                "distinctio"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(5)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(26641054.6621)"
                            MinScale="@(37585.5324)"
                            Opacity="@(0.4814)"
                            PopupEnabled="@(true)"
                            Title="@("non deleniti magnam")"
                            Visible="@(true)"
                            DefinitionExpression="@("ratione")"
                            FloorInfo="@(new LayerFloorInfo("veniam"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveStart,
                                    "et",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    21204027.6137,
                                    3293.4990,
                                    true,
                                    new Dimension(501.6555),
                                new TextSymbol("neque enim quo",
                                    new MapColor(240, 236, 168),
                                    new MapColor(189, 50, 36),
                                        new Dimension(221.1262),
                                    new MapFont(new Dimension(593.0638),
                                            "Garamond",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        85.4997,
                                    new MapColor(184, 235, 202),
                                    new MapColor(115, 44, 19),
                                        870.0649,
                                    HorizontalAlignment.Right,
                                        true,
                                        58.8903,
                                        new Dimension(73.8648),
                                        true),
                                    true,
                                    "Province = 'Ontario'"),
                            new Label(LabelPlacement.BelowEnd,
                                    "quisquam",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    41545659.3172,
                                    29795.8080,
                                    true,
                                    new Dimension(236.2354),
                                new TextSymbol("ut et occaecati",
                                    new MapColor(198, 39, 42),
                                    new MapColor(33, 134, 194),
                                        new Dimension(932.3814),
                                    new MapFont(new Dimension(606.0287),
                                            "Verdana",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        398.9719,
                                    new MapColor(138, 184, 62),
                                    new MapColor(80, 21, 27),
                                        869.1337,
                                    HorizontalAlignment.Center,
                                        true,
                                        906.0045,
                                        new Dimension(775.0971),
                                        true),
                                    true,
                                    "PostalCode = 'M5V 1J9'"),
                            new Label(LabelPlacement.CenterCenter,
                                    "molestiae",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    38654873.6778,
                                    34315.9052,
                                    true,
                                    new Dimension(596.5090),
                                new TextSymbol("laudantium aut fugit",
                                    new MapColor(130, 22, 215),
                                    new MapColor(172, 221, 192),
                                        new Dimension(316.8669),
                                    new MapFont(new Dimension(945.4494),
                                            "Palatino",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        400.1964,
                                    new MapColor(18, 98, 176),
                                    new MapColor(15, 206, 99),
                                        353.0091,
                                    HorizontalAlignment.Left,
                                        true,
                                        955.9222,
                                        new Dimension(390.9522),
                                        true),
                                    true,
                                    "1 = 1")])"
                            PopupTemplate="@(new PopupTemplate("tempore voluptatem provident",
                                    "nostrum",
                                    ["voluptatibus",
                                        "voluptate",
                                        "illum"],
                                [new FieldInfo("updatedAt",
                                        "autem",
                                        "dolore",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("status",
                                        "facilis",
                                        "quia",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.ShortDateLeLongTime24),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("avatar",
                                        "repellendus",
                                        "dolores",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortDateLeShortTime),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                [new MediaPopupContent("deleniti similique dolor",
                                        "in nam eum officiis",
                                    [new ColumnChartMediaInfo("sint modi dolore",
                                            "incidunt",
                                            "doloremque sit autem",
                                        new ChartMediaInfoValue(["ut",
                                                "molestiae",
                                                "provident",
                                                "aut"],
                                                "corrupti",
                                                "iusto",
                                            [new ChartMediaInfoValueSeries("password",
                                                    "commodi",
                                                    872.0779),
                                            new ChartMediaInfoValueSeries("status",
                                                    "repellat",
                                                    594.3738)],
                                            [new MapColor(8, 233, 131),
                                            new MapColor(243, 248, 14),
                                            new MapColor(64, 130, 88),
                                            new MapColor(119, 36, 235)])),
                                    new LineChartMediaInfo("iste quod porro",
                                            "aut",
                                            "hic harum reprehenderit",
                                        new ChartMediaInfoValue(["qui",
                                                "modi",
                                                "qui"],
                                                "ullam",
                                                "eos",
                                            [new ChartMediaInfoValueSeries("avatar",
                                                    "facilis",
                                                    90.1744)],
                                            [new MapColor(144, 53, 106),
                                            new MapColor(61, 211, 167)])),
                                    new BarChartMediaInfo("asperiores culpa voluptatem",
                                            "aut",
                                            "rem quis perspiciatis",
                                        new ChartMediaInfoValue(["qui",
                                                "voluptatem",
                                                "et"],
                                                "laboriosam",
                                                "rerum",
                                            [new ChartMediaInfoValueSeries("password",
                                                    "sequi",
                                                    103.3533),
                                            new ChartMediaInfoValueSeries("name",
                                                    "ab",
                                                    241.2624),
                                            new ChartMediaInfoValueSeries("status",
                                                    "dolorem",
                                                    397.5735)],
                                            [new MapColor(168, 249, 118),
                                            new MapColor(38, 192, 248),
                                            new MapColor(149, 248, 191)])),
                                    new PieChartMediaInfo("soluta ut sed",
                                            "tempore",
                                            "nulla ad illum",
                                        new ChartMediaInfoValue(["ut",
                                                "ut",
                                                "laudantium"],
                                                "et",
                                                "quae",
                                            [new ChartMediaInfoValueSeries("avatar",
                                                    "culpa",
                                                    832.1035),
                                            new ChartMediaInfoValueSeries("group",
                                                    "occaecati",
                                                    456.2525),
                                            new ChartMediaInfoValueSeries("email",
                                                    "deleniti",
                                                    339.8888)],
                                            [new MapColor(122, 179, 123),
                                            new MapColor(102, 196, 45),
                                            new MapColor(64, 131, 8),
                                            new MapColor(150, 254, 65)]))],
                                        6),
                                new FieldsPopupContent([new FieldInfo("token",
                                            "minus",
                                            "neque",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("createdAt",
                                            "rerum",
                                            "sint",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                        "inventore expedita qui atque veritatis",
                                        "vel modi tenetur"),
                                new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "eligendi",
                                            "minus esse expedita")),
                                new RelationshipPopupContent("aut maiores reiciendis",
                                        "amet sed ut quaerat nostrum",
                                        1,
                                        "impedit",
                                    [new RelatedRecordsInfoFieldOrder("maiores",
                                        OrderBy.Desc)],
                                        2)],
                                [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "avatar",
                                        "qui pariatur a",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("architecto magni tenetur",
                                        "https://picsum.photos/640/480/?image=15",
                                        "ed2c9ade-6a7d-76e2-6c00-5e4ccf888abd",
                                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                        "title",
                                        true,
                                        true,
                                        true,
                                        "nihil"),
                                new ActionButton("porro at minima",
                                        "https://picsum.photos/640/480/?image=332",
                                        "902021e2-ab3b-3bfb-e5c2-25fe6afcd683",
                                        () => { Console.WriteLine("minus"); return Task.CompletedTask; },
                                        "email",
                                        true,
                                        true,
                                        true,
                                        "nisi")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(181, 212, 182),
                                        new MapColor(104, 147, 38)),
                                        136.3588,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(433.4988,
                                                471.0257),
                                        new AuthoringInfoField1ClassBreakInfos(841.2732,
                                                848.8192)],
                                            "laboriosam",
                                            "nobis",
                                            "cum"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(843.0711,
                                                776.9432)],
                                            "illum",
                                            "perferendis",
                                            "id"),
                                        ["sequi",
                                            "itaque"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "voluptas",
                                        true,
                                    LengthUnit.Centimeters,
                                        471.1863,
                                        355.7053,
                                        755.2232,
                                        261.2266),
                                new PictureFillSymbol("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0",
                                    new Dimension(728.1871),
                                    new Dimension(700.7556),
                                    new Dimension(925.3992),
                                    new Dimension(903.1499),
                                    -95.5954,
                                    18.0625,
                                    new Outline(new MapColor(30, 33, 79),
                                        new Dimension(225.3554),
                                        SimpleLineSymbolStyle.Dash,
                                        Cap.Butt,
                                        Join.Round,
                                        new LineSymbolMarker(new MapColor(250, 233, 201),
                                            LinePlacement.End,
                                            LineSymbolMarkerStyle.Diamond),
                                        24.9576),
                                    new MapColor(89, 241, 128)),
                                    "nihil",
                                    new DefaultSymbol(),
                                    "dolor",
                                    "quia",
                                    "molestias",
                                    "veniam",
                                new UniqueValueRendererLegendOptions("quae veniam expedita"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("vel",
                                        new TextSymbol("quia qui ut",
                                            new MapColor(56, 29, 57),
                                            new MapColor(224, 14, 120),
                                                new Dimension(176.9694),
                                            new MapFont(new Dimension(448.5425),
                                                    "Bookman",
                                                MapFontStyle.Italic,
                                                FontWeight.Lighter,
                                                TextDecoration.None),
                                                135.5345,
                                            new MapColor(98, 219, 10),
                                            new MapColor(168, 18, 234),
                                                18.4076,
                                            HorizontalAlignment.Center,
                                                true,
                                                611.4230,
                                                new Dimension(885.9221),
                                                true),
                                        [new UniqueValue("sit",
                                                "earum",
                                                "optio"),
                                        new UniqueValue("doloremque",
                                                "et",
                                                "illo"),
                                        new UniqueValue("similique",
                                                "accusamus",
                                                "recusandae")]),
                                    new UniqueValueClass("vel",
                                        new TextSymbol("et corporis facere",
                                            new MapColor(42, 7, 154),
                                            new MapColor(120, 159, 224),
                                                new Dimension(711.7518),
                                            new MapFont(new Dimension(710.8321),
                                                    "Georgia",
                                                MapFontStyle.Oblique,
                                                FontWeight.Lighter,
                                                TextDecoration.Underline),
                                                830.8617,
                                            new MapColor(198, 193, 106),
                                            new MapColor(95, 245, 180),
                                                990.9085,
                                            HorizontalAlignment.Right,
                                                true,
                                                996.3484,
                                                new Dimension(190.0942),
                                                true),
                                        [new UniqueValue("eos",
                                                "est",
                                                "repellendus")]),
                                    new UniqueValueClass("et",
                                        new TextSymbol("repellendus vel enim",
                                            new MapColor(240, 212, 141),
                                            new MapColor(23, 193, 159),
                                                new Dimension(498.2055),
                                            new MapFont(new Dimension(997.7104),
                                                    "Garamond",
                                                MapFontStyle.Normal,
                                                FontWeight.Normal,
                                                TextDecoration.LineThrough),
                                                405.6711,
                                            new MapColor(75, 56, 99),
                                            new MapColor(161, 103, 188),
                                                246.2746,
                                            HorizontalAlignment.Right,
                                                true,
                                                195.7610,
                                                new Dimension(977.7894),
                                                true),
                                        [new UniqueValue("alias",
                                                "illum",
                                                "nesciunt")])],
                                        "eum")],
                                [new UniqueValueInfo("reprehenderit",
                                    new TextSymbol("ipsam reprehenderit voluptatem",
                                        new MapColor(160, 249, 87),
                                        new MapColor(127, 20, 186),
                                            new Dimension(833.7585),
                                        new MapFont(new Dimension(536.5926),
                                                "Georgia",
                                            MapFontStyle.Normal,
                                            FontWeight.Bolder,
                                            TextDecoration.LineThrough),
                                            374.8780,
                                        new MapColor(233, 126, 86),
                                        new MapColor(133, 218, 249),
                                            480.5795,
                                        HorizontalAlignment.Right,
                                            true,
                                            848.0106,
                                            new Dimension(586.3711),
                                            true),
                                        "dolore"),
                                new UniqueValueInfo("sit",
                                    new TextSymbol("dolores ea et",
                                        new MapColor(8, 219, 143),
                                        new MapColor(136, 230, 102),
                                            new Dimension(917.1141),
                                        new MapFont(new Dimension(993.3124),
                                                "Garamond",
                                            MapFontStyle.Normal,
                                            FontWeight.Lighter,
                                            TextDecoration.Underline),
                                            875.5693,
                                        new MapColor(123, 132, 223),
                                        new MapColor(36, 111, 41),
                                            767.4556,
                                        HorizontalAlignment.Center,
                                            true,
                                            159.1531,
                                            new Dimension(763.4391),
                                            true),
                                        "et"),
                                new UniqueValueInfo("saepe",
                                    new TextSymbol("rem soluta tempore",
                                        new MapColor(104, 7, 221),
                                        new MapColor(188, 123, 196),
                                            new Dimension(887.5512),
                                        new MapFont(new Dimension(646.6409),
                                                "Verdana",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            924.6367,
                                        new MapColor(131, 10, 36),
                                        new MapColor(12, 4, 50),
                                            896.0832,
                                        HorizontalAlignment.Right,
                                            true,
                                            321.9174,
                                            new Dimension(270.9616),
                                            true),
                                        "omnis"),
                                new UniqueValueInfo("voluptate",
                                    new TextSymbol("saepe voluptate accusantium",
                                        new MapColor(37, 52, 93),
                                        new MapColor(34, 78, 23),
                                            new Dimension(598.7543),
                                        new MapFont(new Dimension(251.9815),
                                                "Bookman",
                                            MapFontStyle.Italic,
                                            FontWeight.Bold,
                                            TextDecoration.Underline),
                                            654.0004,
                                        new MapColor(208, 35, 77),
                                        new MapColor(212, 160, 58),
                                            582.6214,
                                        HorizontalAlignment.Center,
                                            true,
                                            734.3464,
                                            new Dimension(12.3175),
                                            true),
                                        "aut")],
                                    "consequuntur",
                                    "suscipit alias quaerat"))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(2)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(23754998.7555)"
                                MinScale="@(20319.1792)"
                                Opacity="@(0.0081)"
                                PopupEnabled="@(true)"
                                Title="@("qui omnis et")"
                                Visible="@(true)"
                                DefinitionExpression="@("dolores")"
                                Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                <Sublayer 
                                    SublayerId="@(4)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(20589912.2663)"
                                    MinScale="@(7350.6570)"
                                    Opacity="@(0.5760)"
                                    PopupEnabled="@(true)"
                                    Title="@("perferendis nemo numquam")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("quaerat")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(1)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(37127760.4362)"
                                        MinScale="@(22011.9963)"
                                        Opacity="@(0.0458)"
                                        PopupEnabled="@(true)"
                                        Title="@("aperiam ut architecto")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("voluptatem")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(6)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(37248799.5164)"
                                            MinScale="@(25968.2052)"
                                            Opacity="@(0.1861)"
                                            PopupEnabled="@(true)"
                                            Title="@("aperiam laborum deleniti")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("ut")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(8)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(25111301.0929)"
                                                MinScale="@(27409.2218)"
                                                Opacity="@(0.7153)"
                                                PopupEnabled="@(true)"
                                                Title="@("quisquam qui et")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("aut")"
                                                Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                                <Sublayer 
                                                    SublayerId="@(5)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(18717707.2073)"
                                                    MinScale="@(12311.5313)"
                                                    Opacity="@(0.1201)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("quae eius ut")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("qui")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("deleniti aut quaerat")"
                                                        StringContent="@("exercitationem")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("error")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("qui unde eligendi")"
                                                    StringContent="@("consequatur")"
                                                    OutFields="@(["itaque",
                                                        "quibusdam",
                                                        "aut"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new AttachmentsPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)])])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "086b8dde-f042-01b5-dcd9-aca48f521d6c",
                                                            () => { Console.WriteLine("illum"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "2511ba57-b657-0169-c92f-b3b60352f545",
                                                            () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "d09b4b20-9284-d6f2-5d29-57cdfb00b351",
                                                            () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveStart)"
                                                    LabelExpression="@("quia")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(19451491.9053)"
                                                    MinScale="@(12556.8200)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(35.5080))"
                                                    Symbol="@(new TextSymbol("ut voluptates harum"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("City = 'Toronto'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("provident")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                    new MultipartColorRamp(),
                                                        746.4753,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["quis",
                                                            "eos"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "corrupti",
                                                        true,
                                                    LengthUnit.Millimeters,
                                                        294.1226,
                                                        207.7555,
                                                        173.4896,
                                                        194.3354))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("quibusdam et soluta")"
                                                StringContent="@("ipsam")"
                                                OutFields="@(["modi",
                                                    "eum",
                                                    "eius",
                                                    "a"])"
                                                FieldInfos="@([new FieldInfo("comment",
                                                        "ullam",
                                                        "doloremque",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev),
                                                new FieldInfo("id",
                                                        "qui",
                                                        "ipsam",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("category",
                                                        "debitis",
                                                        "aut",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max)])"
                                                Content="@([new RelationshipPopupContent("libero similique eum",
                                                        "ut corporis explicabo optio",
                                                        9,
                                                        "et",
                                                    [new RelatedRecordsInfoFieldOrder()],
                                                        2),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "eum libero natus magni illum",
                                                        "odio dolorem eaque")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "id",
                                                        "distinctio iure pariatur"),
                                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                        "category",
                                                        "esse autem saepe"),
                                                new ExpressionInfo("return $feature.Name;",
                                                        "status",
                                                        "aut magni suscipit"),
                                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "comment",
                                                        "velit ut nobis")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("non qui dolorum",
                                                        "https://picsum.photos/640/480/?image=271",
                                                        "d4a573d6-d653-c80f-6408-d38d45b892a0",
                                                        () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                                        "avatar",
                                                        true,
                                                        true,
                                                        true,
                                                        "quo")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowStart)"
                                                LabelExpression="@("omnis")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(3130407.0034)"
                                                MinScale="@(37182.2824)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(323.4150))"
                                                Symbol="@(new TextSymbol("architecto recusandae cumque",
                                                    new MapColor(186, 50, 151),
                                                    new MapColor(56, 227, 173),
                                                        null,
                                                    new MapFont(),
                                                        279.6832,
                                                    new MapColor(130, 148, 85),
                                                    new MapColor(234, 102, 8),
                                                        734.6497,
                                                    HorizontalAlignment.Right,
                                                        true,
                                                        100.9568,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Street = '123 Main St.'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("ab")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(25, 184, 251),
                                                    new MapColor(215, 252, 143)),
                                                    439.0231,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "sapiente",
                                                        "laboriosam",
                                                        "dolore"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "rerum",
                                                        "aliquam",
                                                        "quaerat"),
                                                    ["qui",
                                                        "ut",
                                                        "odio",
                                                        "quia"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "molestiae",
                                                    true,
                                                LengthUnit.Yards,
                                                    885.0309,
                                                    553.6055,
                                                    429.4314,
                                                    32.7430))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("pariatur non ab")"
                                            StringContent="@("ipsa")"
                                            OutFields="@(["delectus",
                                                "dolor",
                                                "repudiandae",
                                                "fugit"])"
                                            FieldInfos="@([new FieldInfo("createdAt",
                                                    "et",
                                                    "voluptas",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("name",
                                                    "qui",
                                                    "nostrum",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.ShortDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum)])"
                                            Content="@([new MediaPopupContent("voluptatum officiis eaque",
                                                    "dolor amet praesentium est",
                                                [new ImageMediaInfo("et fuga explicabo",
                                                        "aut",
                                                        "amet quam et",
                                                    new ImageMediaInfoValue(),
                                                        83.1453),
                                                new BarChartMediaInfo("eum ex quaerat",
                                                        "et",
                                                        "quo labore voluptatibus",
                                                    new ChartMediaInfoValue()),
                                                new ImageMediaInfo("ut molestiae eveniet",
                                                        "deleniti",
                                                        "reprehenderit repellat voluptas",
                                                    new ImageMediaInfoValue(),
                                                        243.9832)],
                                                    2),
                                            new MediaPopupContent("qui nulla molestias",
                                                    "molestias hic alias modi",
                                                [new PieChartMediaInfo("unde omnis vel",
                                                        "accusamus",
                                                        "quo illo pariatur",
                                                    new ChartMediaInfoValue())],
                                                    9),
                                            new TextPopupContent("ab dolor quidem"),
                                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                                        "quia",
                                                        "ea corporis nemo"))])"
                                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "createdAt",
                                                    "quibusdam quia deleniti",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "group",
                                                    "quia molestias maxime",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("sequi quia est",
                                                    "https://picsum.photos/640/480/?image=240",
                                                    "828da89a-97f8-61f4-fa34-7de6e3a93512",
                                                    () => { Console.WriteLine("ullam"); return Task.CompletedTask; },
                                                    "phone",
                                                    true,
                                                    true,
                                                    true,
                                                    "veritatis")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterEnd)"
                                            LabelExpression="@("ea")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(25601834.1106)"
                                            MinScale="@(48175.7727)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(100.1101))"
                                            Symbol="@(new TextSymbol("ratione nihil explicabo",
                                                new MapColor(183, 252, 203),
                                                new MapColor(200, 181, 207),
                                                    new Dimension(931.0605),
                                                new MapFont(new Dimension(329.4689),
                                                        "Palatino",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Normal,
                                                    TextDecoration.None),
                                                    943.7375,
                                                new MapColor(189, 27, 178),
                                                new MapColor(104, 150, 228),
                                                    167.4791,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    176.4740,
                                                    new Dimension(762.4474),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Age > 21")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("quia")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(152, 165, 104),
                                                new MapColor(183, 217, 11)),
                                                465.7090,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(429.2290,
                                                        391.3861)],
                                                    "tempora",
                                                    "provident",
                                                    "magnam"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(796.8902,
                                                        347.1518),
                                                new AuthoringInfoField1ClassBreakInfos(824.1554,
                                                        599.4515),
                                                new AuthoringInfoField1ClassBreakInfos(378.0070,
                                                        883.4649),
                                                new AuthoringInfoField1ClassBreakInfos(349.6606,
                                                        663.9361)],
                                                    "fuga",
                                                    "ut",
                                                    "eos"),
                                                ["occaecati",
                                                    "ut",
                                                    "aut"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "totam",
                                                true,
                                            LengthUnit.Inches,
                                                893.3450,
                                                740.2749,
                                                172.8806,
                                                339.1240))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("quos omnis dolorem")"
                                        StringContent="@("et")"
                                        OutFields="@(["et",
                                            "odit",
                                            "doloribus"])"
                                        FieldInfos="@([new FieldInfo("avatar",
                                                "et",
                                                "maxime",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("email",
                                                "illum",
                                                "assumenda",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLe),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("id",
                                                "non",
                                                "maxime",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.ShortDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("avatar",
                                                "suscipit",
                                                "qui",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum)])"
                                        Content="@([new RelationshipPopupContent("repudiandae eligendi sunt",
                                                "eum consectetur sequi voluptatibus qui velit et",
                                                6,
                                                "reprehenderit",
                                            [new RelatedRecordsInfoFieldOrder("porro",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("sunt",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("ut",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("et",
                                                OrderBy.Desc)],
                                                7),
                                        new FieldsPopupContent([new FieldInfo("name",
                                                    "ipsum",
                                                    "id",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("group",
                                                    "et",
                                                    "animi",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.ShortDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Stddev)],
                                                "eius dolore itaque laborum",
                                                "veniam qui nostrum"),
                                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                                    "impedit",
                                                    "consequatur nemo et"))])"
                                        ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "phone",
                                                "rerum aut enim",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("aspernatur dolorem iure",
                                                "ad4d659a-42a7-4714-cfa2-edd69169bd82",
                                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "status",
                                                "fugit"),
                                        new ActionToggle("quia eos magni",
                                                "cf7a801b-c218-ae1a-d9fa-6382dc378088",
                                                () => { Console.WriteLine("neque"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "updatedAt",
                                                "et"),
                                        new ActionToggle("tenetur harum id",
                                                "41796d4d-8b9c-68dc-8702-97738ab75266",
                                                () => { Console.WriteLine("praesentium"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "status",
                                                "corrupti")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterRight)"
                                        LabelExpression="@("dolores")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(6781102.1791)"
                                        MinScale="@(37867.0633)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(70.7192))"
                                        Symbol="@(new TextSymbol("dignissimos eum illo",
                                            new MapColor(184, 76, 229),
                                            new MapColor(236, 28, 167),
                                                new Dimension(517.5241),
                                            new MapFont(new Dimension(392.8670),
                                                    "Arial",
                                                MapFontStyle.Italic,
                                                FontWeight.Normal,
                                                TextDecoration.LineThrough),
                                                804.1544,
                                            new MapColor(32, 67, 217),
                                            new MapColor(228, 220, 182),
                                                209.9345,
                                            HorizontalAlignment.Right,
                                                true,
                                                784.1645,
                                                new Dimension(694.6166),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Street = '123 Main St.'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("fugiat")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(5, 91, 229),
                                                new MapColor(75, 36, 173)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(117, 244, 105),
                                                new MapColor(121, 240, 19)),
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(187, 129, 171),
                                                new MapColor(187, 64, 50))]),
                                            921.4889,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(867.1681,
                                                    968.9346),
                                            new AuthoringInfoField1ClassBreakInfos(743.1146,
                                                    586.1169),
                                            new AuthoringInfoField1ClassBreakInfos(564.3717,
                                                    731.2639)],
                                                "est",
                                                "numquam",
                                                "quam"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(6.5468,
                                                    814.3935)],
                                                "et",
                                                "alias",
                                                "provident"),
                                            ["dolorum",
                                                "accusamus"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "libero",
                                            true,
                                        LengthUnit.Miles,
                                            978.7172,
                                            595.1432,
                                            441.4354,
                                            173.8063))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("fugit ratione est")"
                                    StringContent="@("natus")"
                                    OutFields="@(["facilis",
                                        "nostrum",
                                        "omnis"])"
                                    FieldInfos="@([new FieldInfo("category",
                                            "doloribus",
                                            "iste",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("name",
                                            "architecto",
                                            "et",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("group",
                                            "sed",
                                            "quia",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLeLongTime),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("group",
                                            "et",
                                            "harum",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Avg)])"
                                    Content="@([new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "sint",
                                                "quis odit labore")),
                                    new TextPopupContent("non doloremque quas"),
                                    new TextPopupContent("laborum quaerat nostrum")])"
                                    ExpressionInfos="@([new ExpressionInfo("return Date();",
                                            "createdAt",
                                            "quaerat illum similique",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return Date();",
                                            "id",
                                            "qui laudantium labore",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "updatedAt",
                                            "eligendi asperiores tenetur",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return Date();",
                                            "password",
                                            "adipisci neque dolorem",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("nihil qui neque",
                                            "9517b72f-ec88-9f7b-002a-577041720d2e",
                                            () => { Console.WriteLine("repudiandae"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "createdAt",
                                            "suscipit"),
                                    new ActionToggle("vero ut omnis",
                                            "94fddbd1-1449-d66e-46b0-170cd8ee4793",
                                            () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "rem"),
                                    new ActionButton("aliquid qui et",
                                            "https://picsum.photos/640/480/?image=746",
                                            "c3e71f8f-19ab-efb0-8f3d-4f71c3d9da38",
                                            () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                            "avatar",
                                            true,
                                            true,
                                            true,
                                            "beatae"),
                                    new ActionButton("eius repellendus magni",
                                            "https://picsum.photos/640/480/?image=1055",
                                            "9aaa3475-09ff-a169-7be8-0595136ae96f",
                                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                            "password",
                                            true,
                                            true,
                                            true,
                                            "voluptas")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterLeft)"
                                    LabelExpression="@("aliquam")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(15875518.1811)"
                                    MinScale="@(21340.8366)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(94.0474))"
                                    Symbol="@(new TextSymbol("quisquam ipsum autem",
                                        new MapColor(184, 38, 81),
                                        new MapColor(24, 194, 155),
                                            new Dimension(430.7007),
                                        new MapFont(new Dimension(107.9129),
                                                "Garamond",
                                            MapFontStyle.Normal,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            698.7281,
                                        new MapColor(241, 171, 189),
                                        new MapColor(62, 167, 183),
                                            489.4789,
                                        HorizontalAlignment.Left,
                                            true,
                                            654.3983,
                                            new Dimension(133.8854),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("PostalCode = 'M5V 1J9'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("quia")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(127.5971,
                    178.7589,
                    -68.2186,
                    -40.0747,
                    462.7531,
                    793.0863,
                    820.7455,
                    856.8076,
                new SpatialReference(4,
                        "autem",
                        "natus",
                        "autem"),
                    true,
                    true),
                3,
                2,
            new MapImageLayerCreateExportImageParametersOptions(332.5205,
                    37.8885,
                    "eius"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(143.8110,
                    8.3465,
                    -84.9608,
                    72.0379,
                    17.1857,
                    754.2808,
                    22.2899,
                    528.2020,
                new SpatialReference(6,
                        "sunt",
                        "voluptatem",
                        "et"),
                    true,
                    true),
                5,
                7,
            new MapImageLayerFetchImageOptions(696.2418,
                    257.8578,
                    "fuga"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "est",
                    "quos",
                    516.3727,
                    ["sint",
                        "expedita"],
                    new DateTime(2017, 3, 12, 6, 5, 11),
                    "soluta",
                    "temporibus tempore dolor dignissimos",
                new Extent(99.5090,
                        30.1394,
                        -76.2827,
                        18.1717,
                        504.8240,
                        339.2894,
                        459.8926,
                        540.9697,
                    new SpatialReference(7,
                            "veniam",
                            "facere",
                            "ipsam"),
                        true,
                        true),
                    ["exercitationem",
                        "id"],
                    "et",
                    new DateTime(2023, 7, 13, 0, 40, 14),
                    "category",
                    251.1960);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.SourceOut;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2000, 4, 20, 8, 15, 11),
                    new DateTime(2019, 10, 6, 20, 36, 44));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("aut",
                    "nisi",
                new TimeExtent(new DateTime(2008, 6, 16, 0, 56, 11),
                        new DateTime(2001, 7, 7, 12, 25, 39)),
                new TimeInterval(TemporalTime.Minutes,
                        508.1775),
                    [new DateTime(2009, 8, 20, 12, 23, 13),
                        new DateTime(2018, 4, 16, 16, 15, 57)],
                    "America/Mazatlan",
                    "blanditiis");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    5666056.1711,
                    39684.9810,
                    0.8691,
                    true,
                    "labore aut totam",
                    true,
                    "ut",
                new LayerFloorInfo("officia"),
                [new Label(LabelPlacement.BelowAfter,
                        "voluptas",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        26672130.4903,
                        24643.4550,
                        true,
                        new Dimension(774.1978),
                    new TextSymbol("ab non debitis",
                        new MapColor(102, 22, 185),
                        new MapColor(127, 130, 50),
                            new Dimension(633.5408),
                        new MapFont(new Dimension(603.9711),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            92.3273,
                        new MapColor(160, 104, 114),
                        new MapColor(107, 134, 173),
                            171.6569,
                        HorizontalAlignment.Right,
                            true,
                            164.1695,
                            new Dimension(290.2276),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.AboveRight,
                        "sit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        39211752.9746,
                        7294.8687,
                        true,
                        new Dimension(610.4334),
                    new TextSymbol("necessitatibus quam in",
                        new MapColor(216, 20, 10),
                        new MapColor(153, 167, 179),
                            new Dimension(527.5970),
                        new MapFont(new Dimension(657.2323),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            558.1379,
                        new MapColor(12, 48, 153),
                        new MapColor(50, 251, 106),
                            769.1691,
                        HorizontalAlignment.Center,
                            true,
                            876.1660,
                            new Dimension(661.1957),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterStart,
                        "inventore",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        19738502.9308,
                        220.7836,
                        true,
                        new Dimension(952.4802),
                    new TextSymbol("velit sapiente et",
                        new MapColor(198, 145, 139),
                        new MapColor(46, 144, 26),
                            new Dimension(89.0830),
                        new MapFont(new Dimension(78.5530),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            650.1935,
                        new MapColor(173, 196, 204),
                        new MapColor(194, 245, 123),
                            80.0483,
                        HorizontalAlignment.Right,
                            true,
                            977.3805,
                            new Dimension(343.7862),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AboveRight,
                        "eos",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        16404512.7872,
                        37221.5461,
                        true,
                        new Dimension(646.0354),
                    new TextSymbol("numquam voluptatem at",
                        new MapColor(170, 136, 181),
                        new MapColor(238, 47, 93),
                            new Dimension(553.0559),
                        new MapFont(new Dimension(436.6105),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            436.1858,
                        new MapColor(46, 114, 31),
                        new MapColor(62, 250, 120),
                            109.1457,
                        HorizontalAlignment.Left,
                            true,
                            836.2205,
                            new Dimension(81.9011),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("harum rerum ipsa",
                        "amet",
                        ["voluptatum",
                            "eligendi",
                            "aut"],
                    [new FieldInfo("phone",
                            "qui",
                            "quia",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new MediaPopupContent("modi vero omnis",
                            "est sunt nihil dolorum ipsum",
                        [new ColumnChartMediaInfo("quaerat et delectus",
                                "ut",
                                "voluptatem fuga pariatur",
                            new ChartMediaInfoValue(["dolores",
                                    "in",
                                    "eligendi"],
                                    "quos",
                                    "aut",
                                [new ChartMediaInfoValueSeries("token",
                                        "itaque",
                                        358.3148),
                                new ChartMediaInfoValueSeries("status",
                                        "aut",
                                        838.3841),
                                new ChartMediaInfoValueSeries("password",
                                        "voluptatum",
                                        235.6822),
                                new ChartMediaInfoValueSeries("password",
                                        "necessitatibus",
                                        577.3122)],
                                [new MapColor(115, 51, 178)])),
                        new ColumnChartMediaInfo("et culpa non",
                                "rerum",
                                "ut autem inventore",
                            new ChartMediaInfoValue(["ut",
                                    "eius",
                                    "velit"],
                                    "dicta",
                                    "beatae",
                                [new ChartMediaInfoValueSeries("title",
                                        "enim",
                                        226.1000)],
                                [new MapColor(0, 219, 139)])),
                        new ColumnChartMediaInfo("commodi labore at",
                                "id",
                                "officiis odio nihil",
                            new ChartMediaInfoValue(["commodi",
                                    "enim"],
                                    "voluptatum",
                                    "voluptates",
                                [new ChartMediaInfoValueSeries("category",
                                        "atque",
                                        752.5923),
                                new ChartMediaInfoValueSeries("email",
                                        "distinctio",
                                        711.7700),
                                new ChartMediaInfoValueSeries("status",
                                        "ab",
                                        297.7987),
                                new ChartMediaInfoValueSeries("avatar",
                                        "voluptatem",
                                        626.6878)],
                                [new MapColor(110, 252, 240),
                                new MapColor(73, 25, 155),
                                new MapColor(110, 48, 196)]))],
                            5),
                    new TextPopupContent("quia sed odio"),
                    new MediaPopupContent("pariatur blanditiis est",
                            "voluptate est deserunt est",
                        [new BarChartMediaInfo("cupiditate soluta possimus",
                                "consequatur",
                                "adipisci sit qui",
                            new ChartMediaInfoValue(["ipsa",
                                    "similique",
                                    "in",
                                    "odio"],
                                    "dolor",
                                    "voluptatum",
                                [new ChartMediaInfoValueSeries("phone",
                                        "consectetur",
                                        583.3784),
                                new ChartMediaInfoValueSeries("password",
                                        "harum",
                                        878.3112)],
                                [new MapColor(201, 83, 37)])),
                        new BarChartMediaInfo("optio magni dolores",
                                "sit",
                                "tenetur omnis et",
                            new ChartMediaInfoValue(["commodi",
                                    "consectetur",
                                    "error",
                                    "eos"],
                                    "sequi",
                                    "quos",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "illum",
                                        181.0018),
                                new ChartMediaInfoValueSeries("name",
                                        "aut",
                                        691.2132)],
                                [new MapColor(113, 113, 55)])),
                        new ImageMediaInfo("quaerat dolor necessitatibus",
                                "sit",
                                "aut voluptatem ipsum",
                            new ImageMediaInfoValue("http://jackie.com",
                                    "https://herminia.biz"),
                                827.2085)],
                            1),
                    new TextPopupContent("vel rerum qui")],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "quisquam eum tempore",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "createdAt",
                            "sit numquam rem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "group",
                            "illum qui nulla",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("sit ex facilis",
                            "aef8b9c5-aeb6-9caf-6226-42923fc4f9c3",
                            () => { Console.WriteLine("fugit"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "nulla"),
                    new ActionButton("quod temporibus dignissimos",
                            "https://picsum.photos/640/480/?image=739",
                            "4833007e-145b-8507-aa99-f21853204e9a",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "dolore"),
                    new ActionToggle("eum ab sunt",
                            "5c3e1931-725b-c283-21af-1fb4502a556f",
                            () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "quae")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-166.2263,
                    169.5088,
                    -5.9521,
                    15.6395,
                    559.2392,
                    396.0632,
                    957.0913,
                    769.0068,
                new SpatialReference(5,
                        "nisi",
                        "quibusdam",
                        "qui"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    17153710.9906,
                    46742.0694,
                    0.5899,
                    true,
                    "tempora illo dolorem",
                    true,
                    "consectetur",
                new LayerFloorInfo("rerum"),
                [new Label(LabelPlacement.AboveCenter,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        41452608.2634,
                        41697.1651,
                        true,
                        new Dimension(501.5339),
                    new TextSymbol("magnam quos voluptatem",
                        new MapColor(138, 45, 236),
                        new MapColor(194, 17, 250),
                            new Dimension(526.7071),
                        new MapFont(new Dimension(499.2668),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            881.6283,
                        new MapColor(122, 32, 130),
                        new MapColor(105, 26, 188),
                            375.2665,
                        HorizontalAlignment.Left,
                            true,
                            28.4876,
                            new Dimension(103.9189),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.BelowStart,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        20424140.8294,
                        6071.9751,
                        true,
                        new Dimension(535.1705),
                    new TextSymbol("optio soluta eum",
                        new MapColor(182, 38, 200),
                        new MapColor(222, 51, 14),
                            new Dimension(675.7183),
                        new MapFont(new Dimension(226.6304),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            969.1411,
                        new MapColor(166, 104, 143),
                        new MapColor(249, 2, 16),
                            270.2637,
                        HorizontalAlignment.Center,
                            true,
                            718.1031,
                            new Dimension(862.9851),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AboveCenter,
                        "ut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        7401275.3281,
                        21393.8596,
                        true,
                        new Dimension(59.0112),
                    new TextSymbol("eos sed ex",
                        new MapColor(145, 250, 35),
                        new MapColor(10, 114, 46),
                            new Dimension(168.5466),
                        new MapFont(new Dimension(349.7347),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            821.2046,
                        new MapColor(84, 175, 104),
                        new MapColor(79, 174, 10),
                            702.6054,
                        HorizontalAlignment.Right,
                            true,
                            711.2987,
                            new Dimension(749.8649),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("veritatis quo nobis",
                        "et",
                        ["deleniti",
                            "earum"],
                    [new FieldInfo("createdAt",
                            "molestiae",
                            "molestiae",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("token",
                            "qui",
                            "eaque",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("email",
                            "vel",
                            "qui",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("category",
                            "alias",
                            "esse",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new FieldsPopupContent([new FieldInfo("id",
                                "eaque",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("avatar",
                                "et",
                                "quam",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Max)],
                            "facere officia voluptatem ipsum iure non",
                            "ut nihil ea")],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "token",
                            "maxime ut ipsa",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "group",
                            "quis quia in",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("soluta est nihil",
                            "https://picsum.photos/640/480/?image=482",
                            "3b9ecfa4-0674-fab1-0113-93f0a0eb5e33",
                            () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "aut"),
                    new ActionToggle("consequatur voluptatem id",
                            "84787c10-69d3-e02e-53ab-1254ef446cc3",
                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "placeat"),
                    new ActionToggle("odit sit libero",
                            "3d8259aa-0aed-1b13-2af5-02b2c3f8f2fe",
                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "dicta")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Milliseconds,
                    564.0992);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2009, 10, 5, 9, 57, 4),
                    new DateTime(2017, 3, 17, 13, 8, 8));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
