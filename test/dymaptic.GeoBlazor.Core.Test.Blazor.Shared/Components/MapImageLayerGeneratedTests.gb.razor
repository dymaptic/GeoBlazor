@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.ColorBurn)"
                        Dpi="@(561.5184)"
                        Effect="@(new Effect("aut",
                            16791762.8935))"
                        GdbVersion="@("9.8.4.5")"
                        ImageFormat="@(MapImageFormat.Gif)"
                        ImageMaxHeight="@(1)"
                        ImageMaxWidth="@(7)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(25425651.1128)"
                        MinScale="@(31433.5210)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(156.0501)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Hide)"
                        Visible="@(true)"
                        Opacity="@(0.6217)"
                        Copyright="@("animi")"
                        FullExtent="@(new Extent(103.2225,
                                28.8765,
                                27.8472,
                                -9.2510,
                                678.6464,
                                212.8288,
                                994.8308,
                                674.9950,
                            new SpatialReference(4,
                                    "quia",
                                    "excepturi",
                                    "blanditiis"),
                                true,
                                true))"
                        Title="@("nam quasi voluptatem")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Years)"
                            Value="@(332.5865)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("sit")"
                            EndField="@("dignissimos")"
                            Stops="@([new DateTime(2001, 7, 2, 2, 19, 4),
                                new DateTime(2021, 4, 14, 16, 0, 42)])"
                            TimeZone="@("Europe/Warsaw")"
                            TrackIdField="@("unde")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Months)"
                                Value="@(918.8124)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2021, 7, 17, 22, 2, 57))"
                                End="@(new DateTime(2021, 1, 21, 4, 26, 30))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2016, 7, 23, 18, 49, 13))"
                            End="@(new DateTime(2011, 6, 22, 18, 5, 8))">
                        </TimeExtent>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(2)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(2813025.8353)"
                            MinScale="@(16125.8838)"
                            Opacity="@(0.4833)"
                            PopupEnabled="@(true)"
                            Title="@("sapiente laborum inventore")"
                            Visible="@(true)"
                            DefinitionExpression="@("totam")"
                            FloorInfo="@(new LayerFloorInfo("exercitationem"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterStart,
                                    "autem",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    30439399.8053,
                                    19597.7763,
                                    true,
                                    new Dimension(475.1905),
                                new TextSymbol("quo at ipsum",
                                    new MapColor(70, 178, 212),
                                    new MapColor(138, 219, 49),
                                        new Dimension(519.6365),
                                    new MapFont(new Dimension(808.6808),
                                            "Palatino",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        369.2219,
                                    new MapColor(245, 56, 191),
                                    new MapColor(90, 0, 123),
                                        353.0551,
                                    HorizontalAlignment.Right,
                                        true,
                                        265.4988,
                                        new Dimension(207.8113),
                                        true),
                                    true,
                                    "Phone = '555-555-5555'"),
                            new Label(LabelPlacement.CenterCenter,
                                    "beatae",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    7150243.5491,
                                    43904.7660,
                                    true,
                                    new Dimension(737.0350),
                                new TextSymbol("nesciunt qui modi",
                                    new MapColor(202, 158, 79),
                                    new MapColor(143, 103, 30),
                                        new Dimension(295.3507),
                                    new MapFont(new Dimension(334.8115),
                                            "Verdana",
                                        MapFontStyle.Oblique,
                                        FontWeight.Normal,
                                        TextDecoration.None),
                                        313.3546,
                                    new MapColor(116, 27, 87),
                                    new MapColor(168, 86, 114),
                                        351.0853,
                                    HorizontalAlignment.Right,
                                        true,
                                        78.7520,
                                        new Dimension(675.2153),
                                        true),
                                    true,
                                    "Street = '123 Main St.'")])"
                            PopupTemplate="@(new PopupTemplate("est quos cum",
                                    "voluptates",
                                    ["id",
                                        "sit",
                                        "sunt"],
                                [new FieldInfo("email",
                                        "tempora",
                                        "voluptatem",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("comment",
                                        "dolorem",
                                        "ex",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                [new MediaPopupContent("laudantium ut vero",
                                        "et recusandae quaerat voluptates aliquid repudiandae",
                                    [new LineChartMediaInfo("est animi est",
                                            "exercitationem",
                                            "et accusamus maiores",
                                        new ChartMediaInfoValue(["voluptas",
                                                "deleniti"],
                                                "quos",
                                                "vel",
                                            [new ChartMediaInfoValueSeries("password",
                                                    "sunt",
                                                    173.6735),
                                            new ChartMediaInfoValueSeries("comment",
                                                    "aspernatur",
                                                    601.8301),
                                            new ChartMediaInfoValueSeries("category",
                                                    "ratione",
                                                    190.6171),
                                            new ChartMediaInfoValueSeries("createdAt",
                                                    "ipsam",
                                                    125.5183)],
                                            [new MapColor(19, 68, 25)])),
                                    new BarChartMediaInfo("placeat voluptas dolores",
                                            "non",
                                            "fugit cumque aut",
                                        new ChartMediaInfoValue(["nihil",
                                                "consequatur"],
                                                "consequatur",
                                                "itaque",
                                            [new ChartMediaInfoValueSeries("status",
                                                    "adipisci",
                                                    8.3343),
                                            new ChartMediaInfoValueSeries("id",
                                                    "magni",
                                                    378.6136)],
                                            [new MapColor(239, 64, 132),
                                            new MapColor(155, 180, 182),
                                            new MapColor(37, 125, 82)])),
                                    new PieChartMediaInfo("ullam vitae quis",
                                            "debitis",
                                            "in amet reprehenderit",
                                        new ChartMediaInfoValue(["et",
                                                "veniam"],
                                                "aut",
                                                "quia",
                                            [new ChartMediaInfoValueSeries("category",
                                                    "repellat",
                                                    246.7058),
                                            new ChartMediaInfoValueSeries("id",
                                                    "rerum",
                                                    261.4983),
                                            new ChartMediaInfoValueSeries("avatar",
                                                    "ipsum",
                                                    654.4855)],
                                            [new MapColor(56, 188, 79),
                                            new MapColor(114, 12, 19),
                                            new MapColor(246, 194, 83),
                                            new MapColor(177, 84, 246)])),
                                    new LineChartMediaInfo("illum doloribus dolor",
                                            "maiores",
                                            "et at dolor",
                                        new ChartMediaInfoValue(["sit",
                                                "tempore"],
                                                "recusandae",
                                                "dolorem",
                                            [new ChartMediaInfoValueSeries("token",
                                                    "recusandae",
                                                    254.7273),
                                            new ChartMediaInfoValueSeries("id",
                                                    "ab",
                                                    251.2948)],
                                            [new MapColor(234, 93, 65),
                                            new MapColor(74, 25, 90)]))],
                                        4),
                                new FieldsPopupContent([new FieldInfo("id",
                                            "unde",
                                            "et",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.DayShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("status",
                                            "dolorem",
                                            "tempora",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.Year),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("title",
                                            "vel",
                                            "saepe",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateLe),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                        "omnis suscipit vel aspernatur autem eius et",
                                        "qui iste consequatur"),
                                new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "sint",
                                            "nam eius consectetur")),
                                new RelationshipPopupContent("quos dignissimos molestiae",
                                        "ipsum voluptas voluptas reprehenderit qui",
                                        7,
                                        "facere",
                                    [new RelatedRecordsInfoFieldOrder("eaque",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("et",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("ullam",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("officia",
                                        OrderBy.Asc)],
                                        8)],
                                [new ExpressionInfo("return Date();",
                                        "comment",
                                        "unde nulla molestias",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "email",
                                        "exercitationem sit laborum",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "id",
                                        "vel autem voluptas",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "updatedAt",
                                        "voluptate et est",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("quis facere vel",
                                        "bebacbb7-9369-0f81-d001-efa2bd4a7383",
                                        () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "group",
                                        "architecto"),
                                new ActionButton("tempore blanditiis veritatis",
                                        "https://picsum.photos/640/480/?image=71",
                                        "12569c8b-ff4b-f39f-ba53-37b3183aa28a",
                                        () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                                        "group",
                                        true,
                                        true,
                                        true,
                                        "et")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("tenetur aut incidunt",
                                    new MapColor(207, 103, 4),
                                    new MapColor(245, 41, 70),
                                        new Dimension(892.6932),
                                    new MapFont(new Dimension(919.3678),
                                            "Arial",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.LineThrough),
                                        328.7064,
                                    new MapColor(96, 118, 136),
                                    new MapColor(141, 242, 19),
                                        229.0507,
                                    HorizontalAlignment.Left,
                                        true,
                                        92.0538,
                                        new Dimension(281.9631),
                                        true),
                                    "minus",
                                [new RotationVariable("quisquam",
                                    Axis.Tilt,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "incidunt tempore vero"),
                                        "velit",
                                        "et ullam aut"),
                                new RotationVariable("non",
                                    Axis.Heading,
                                    RotationType.Arithmetic,
                                    new VisualVariableLegendOptions(true,
                                            "minima doloremque excepturi"),
                                        "perferendis",
                                        "nostrum sunt nisi"),
                                new SizeVariable("eveniet",
                                        new Dimension(643.2637),
                                        new Dimension(697.5320),
                                        775.9683,
                                        16.9457,
                                        VisualValueRepresentation.Width,
                                        VisualValueUnit.Centimeters,
                                        "iure",
                                        "libero",
                                        true,
                                        VisualAxis.WidthAndDepth,
                                        "ducimus",
                                        "dolor asperiores fugiat",
                                    new VisualVariableLegendOptions(true,
                                            "voluptatem et dolore")),
                                new RotationVariable("et",
                                    Axis.Roll,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "nemo quasi necessitatibus"),
                                        "unde",
                                        "rem debitis quo")],
                                new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(140, 165, 243),
                                        new MapColor(62, 101, 213)),
                                        201.4023,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(527.8591,
                                                365.6595),
                                        new AuthoringInfoField1ClassBreakInfos(616.7655,
                                                962.5607),
                                        new AuthoringInfoField1ClassBreakInfos(260.0669,
                                                438.4746)],
                                            "repudiandae",
                                            "ea",
                                            "est"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(140.2512,
                                                162.7660),
                                        new AuthoringInfoField1ClassBreakInfos(323.6214,
                                                279.0138),
                                        new AuthoringInfoField1ClassBreakInfos(193.5785,
                                                910.8341),
                                        new AuthoringInfoField1ClassBreakInfos(92.9873,
                                                478.1453)],
                                            "repudiandae",
                                            "aut",
                                            "labore"),
                                        ["blanditiis",
                                            "sint",
                                            "non"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "voluptatum",
                                        true,
                                    LengthUnit.Inches,
                                        874.1352,
                                        876.7256,
                                        302.2863,
                                        153.4789)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(5)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(16805236.7576)"
                                MinScale="@(1235.7038)"
                                Opacity="@(0.2732)"
                                PopupEnabled="@(true)"
                                Title="@("deleniti necessitatibus sint")"
                                Visible="@(true)"
                                DefinitionExpression="@("expedita")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(7)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(12273096.8491)"
                                    MinScale="@(19831.5950)"
                                    Opacity="@(0.0424)"
                                    PopupEnabled="@(true)"
                                    Title="@("enim sunt sapiente")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("dolor")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(6)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(34058309.5200)"
                                        MinScale="@(27514.3532)"
                                        Opacity="@(0.6443)"
                                        PopupEnabled="@(true)"
                                        Title="@("nam amet rerum")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("sed")"
                                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                        <Sublayer 
                                            SublayerId="@(7)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(3567179.9347)"
                                            MinScale="@(14100.6221)"
                                            Opacity="@(0.5404)"
                                            PopupEnabled="@(true)"
                                            Title="@("reiciendis omnis ut")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("dolorem")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(2)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(40332685.2277)"
                                                MinScale="@(410.8007)"
                                                Opacity="@(0.2290)"
                                                PopupEnabled="@(true)"
                                                Title="@("odit ut perspiciatis")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("minima")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(3)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(20265692.1638)"
                                                    MinScale="@(39368.2428)"
                                                    Opacity="@(0.0750)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("sapiente minima et")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("animi")"
                                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("eaque porro accusantium")"
                                                        StringContent="@("magnam")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("nobis")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("ut blanditiis voluptates")"
                                                    StringContent="@("repellendus")"
                                                    OutFields="@(["blanditiis",
                                                        "expedita"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new ExpressionPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)])])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "74bb795d-2635-62a7-7a02-1f5c04726f3d",
                                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "77123cdb-5f19-9b69-c69d-f5c5650aa04c",
                                                            () => { Console.WriteLine("nostrum"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "a5c19056-cae6-2f7a-8a71-80c58465bd5b",
                                                            () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "67648700-5433-60a9-2509-c8622b21434c",
                                                            () => { Console.WriteLine("quasi"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterAfter)"
                                                    LabelExpression="@("porro")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(9971670.3731)"
                                                    MinScale="@(8497.0115)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(982.6086))"
                                                    Symbol="@(new TextSymbol("eligendi culpa earum"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("PostalCode = 'M5V 1J9'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("possimus")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                    new MultipartColorRamp(),
                                                        248.9314,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["eum",
                                                            "quaerat",
                                                            "inventore"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "error",
                                                        true,
                                                    LengthUnit.Yards,
                                                        738.6896,
                                                        696.8346,
                                                        445.7330,
                                                        94.3891))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("molestiae quod autem")"
                                                StringContent="@("rerum")"
                                                OutFields="@(["quia",
                                                    "quasi",
                                                    "aperiam"])"
                                                FieldInfos="@([new FieldInfo("group",
                                                        "totam",
                                                        "amet",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var)])"
                                                Content="@([new ExpressionPopupContent(new ElementExpressionInfo()),
                                                new TextPopupContent("sed iste quia")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                        "category",
                                                        "quo voluptatibus minus"),
                                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "title",
                                                        "qui minima omnis"),
                                                new ExpressionInfo("return Date();",
                                                        "avatar",
                                                        "nesciunt quod distinctio")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("eos optio consequuntur",
                                                        "6aef7c1a-bec3-0d51-2bb1-fa72b6f22033",
                                                        () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "group",
                                                        "accusamus"),
                                                new ActionButton("et et aperiam",
                                                        "https://picsum.photos/640/480/?image=919",
                                                        "28de5c13-9b24-1774-a23f-dd55d1ea5104",
                                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                        "title",
                                                        true,
                                                        true,
                                                        true,
                                                        "perspiciatis"),
                                                new ActionToggle("ad ut suscipit",
                                                        "94255b7c-515a-4622-b3d7-bfcae0beed46",
                                                        () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "status",
                                                        "ea"),
                                                new ActionToggle("minus incidunt repellendus",
                                                        "dd6523cc-0612-1868-3b25-85d322f77349",
                                                        () => { Console.WriteLine("similique"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "group",
                                                        "voluptas")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterRight)"
                                                LabelExpression="@("ut")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(24011089.7099)"
                                                MinScale="@(11629.3264)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(605.0877))"
                                                Symbol="@(new TextSymbol("dolor qui et",
                                                    new MapColor(86, 39, 86),
                                                    new MapColor(203, 190, 36),
                                                        null,
                                                    new MapFont(),
                                                        7.2680,
                                                    new MapColor(221, 25, 135),
                                                    new MapColor(173, 134, 152),
                                                        719.5858,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        131.6387,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Name = 'John Doe'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quae")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(234, 81, 156),
                                                    new MapColor(223, 52, 75)),
                                                    393.8504,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "sint",
                                                        "consequatur",
                                                        "aperiam"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "et",
                                                        "quia",
                                                        "dicta"),
                                                    ["quod",
                                                        "veritatis",
                                                        "voluptas",
                                                        "aperiam"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "et",
                                                    true,
                                                LengthUnit.Millimeters,
                                                    531.8821,
                                                    88.0219,
                                                    145.7878,
                                                    91.9669))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("neque repellendus sit")"
                                            StringContent="@("corrupti")"
                                            OutFields="@(["sed",
                                                "quia",
                                                "dolor",
                                                "odio"])"
                                            FieldInfos="@([new FieldInfo("status",
                                                    "est",
                                                    "rerum",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.ShortDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("status",
                                                    "dignissimos",
                                                    "omnis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.LongMonthDayYearLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var)])"
                                            Content="@([new RelationshipPopupContent("itaque dicta in",
                                                    "facere quibusdam autem et",
                                                    3,
                                                    "dolore",
                                                [new RelatedRecordsInfoFieldOrder("quam",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("excepturi",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("adipisci",
                                                    OrderBy.Asc)],
                                                    7),
                                            new MediaPopupContent("ipsum modi architecto",
                                                    "eum dolor molestias nemo",
                                                [new LineChartMediaInfo("rem facilis suscipit",
                                                        "molestiae",
                                                        "similique asperiores ea",
                                                    new ChartMediaInfoValue()),
                                                new BarChartMediaInfo("ut quia quos",
                                                        "ut",
                                                        "sint ex recusandae",
                                                    new ChartMediaInfoValue())],
                                                    4)])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "email",
                                                    "perspiciatis id velit",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature['FieldName'];",
                                                    "updatedAt",
                                                    "unde praesentium perferendis",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("officia veniam tempora",
                                                    "03a32cd7-8956-a62a-3a92-4d4294450eee",
                                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "category",
                                                    "atque"),
                                            new ActionButton("doloribus qui dignissimos",
                                                    "https://picsum.photos/640/480/?image=122",
                                                    "00e39c24-fcd1-912a-427a-2e76bc71ad3e",
                                                    () => { Console.WriteLine("tenetur"); return Task.CompletedTask; },
                                                    "name",
                                                    true,
                                                    true,
                                                    true,
                                                    "ut")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AlwaysHorizontal)"
                                            LabelExpression="@("repellat")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(4294298.7949)"
                                            MinScale="@(11877.2696)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(442.3060))"
                                            Symbol="@(new TextSymbol("at mollitia possimus",
                                                new MapColor(60, 7, 85),
                                                new MapColor(51, 228, 28),
                                                    new Dimension(846.4476),
                                                new MapFont(new Dimension(905.6622),
                                                        "Palatino",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Bold,
                                                    TextDecoration.LineThrough),
                                                    166.9536,
                                                new MapColor(181, 90, 193),
                                                new MapColor(81, 172, 34),
                                                    597.6080,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    431.0586,
                                                    new Dimension(172.5343),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Name = 'John Doe'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("saepe")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(2, 15, 92),
                                                new MapColor(6, 56, 71)),
                                                742.8479,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(571.9908,
                                                        239.6223),
                                                new AuthoringInfoField1ClassBreakInfos(128.7354,
                                                        963.0015),
                                                new AuthoringInfoField1ClassBreakInfos(706.4715,
                                                        556.4396),
                                                new AuthoringInfoField1ClassBreakInfos(56.3859,
                                                        278.7323)],
                                                    "nihil",
                                                    "et",
                                                    "asperiores"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(19.5090,
                                                        928.4876),
                                                new AuthoringInfoField1ClassBreakInfos(321.3670,
                                                        334.5470),
                                                new AuthoringInfoField1ClassBreakInfos(495.6673,
                                                        197.6076),
                                                new AuthoringInfoField1ClassBreakInfos(128.8647,
                                                        433.9987)],
                                                    "asperiores",
                                                    "sapiente",
                                                    "ratione"),
                                                ["velit",
                                                    "vel",
                                                    "perferendis",
                                                    "enim"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "animi",
                                                true,
                                            LengthUnit.Kilometers,
                                                888.6715,
                                                810.7254,
                                                802.0545,
                                                414.7003))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("velit aliquam labore")"
                                        StringContent="@("dolorem")"
                                        OutFields="@(["ad",
                                            "et",
                                            "quo",
                                            "magnam"])"
                                        FieldInfos="@([new FieldInfo("id",
                                                "fugit",
                                                "blanditiis",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("updatedAt",
                                                "esse",
                                                "consequatur",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("password",
                                                "corporis",
                                                "facere",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongDate),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("email",
                                                "labore",
                                                "suscipit",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg)])"
                                        Content="@([new MediaPopupContent("ex sunt velit",
                                                "distinctio unde architecto sint vel",
                                            [new ColumnChartMediaInfo("aut quo quae",
                                                    "molestiae",
                                                    "enim quo ea",
                                                new ChartMediaInfoValue(["officia",
                                                        "rerum",
                                                        "aut",
                                                        "eum"],
                                                        "explicabo",
                                                        "qui",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(235, 82, 94),
                                                    new MapColor(151, 106, 74),
                                                    new MapColor(134, 229, 145)]))],
                                                2),
                                        new AttachmentsPopupContent("at sit et",
                                                "veritatis illum deserunt qui dolor quibusdam",
                                                AttachmentsPopupContentDisplayType.Preview),
                                        new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "magni",
                                                    "dolor vitae sed")),
                                        new AttachmentsPopupContent("eligendi deleniti nam",
                                                "explicabo ipsa itaque ut eum quam dolor",
                                                AttachmentsPopupContentDisplayType.Auto)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "status",
                                                "et fugiat velit",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("labore voluptate esse",
                                                "0169d707-2785-7c1d-8987-2c12f926e146",
                                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "name",
                                                "qui")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveCenter)"
                                        LabelExpression="@("sequi")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(35155493.7020)"
                                        MinScale="@(40011.8936)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(948.6396))"
                                        Symbol="@(new TextSymbol("voluptatum hic fuga",
                                            new MapColor(66, 222, 59),
                                            new MapColor(52, 155, 200),
                                                new Dimension(44.6436),
                                            new MapFont(new Dimension(842.0420),
                                                    "Helvetica",
                                                MapFontStyle.Normal,
                                                FontWeight.Bolder,
                                                TextDecoration.Underline),
                                                477.8171,
                                            new MapColor(82, 230, 152),
                                            new MapColor(33, 33, 76),
                                                54.2591,
                                            HorizontalAlignment.Left,
                                                true,
                                                175.4224,
                                                new Dimension(155.5777),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("ObjectID = 1")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("aut")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(44, 97, 219),
                                                new MapColor(32, 108, 45))]),
                                            803.3294,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(753.6162,
                                                    176.5954)],
                                                "reprehenderit",
                                                "rem",
                                                "id"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(77.1025,
                                                    864.9660),
                                            new AuthoringInfoField1ClassBreakInfos(642.7025,
                                                    283.7150),
                                            new AuthoringInfoField1ClassBreakInfos(427.9182,
                                                    59.3000),
                                            new AuthoringInfoField1ClassBreakInfos(105.0455,
                                                    821.2975)],
                                                "non",
                                                "iste",
                                                "et"),
                                            ["dicta",
                                                "consequatur"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "perferendis",
                                            true,
                                        LengthUnit.Feet,
                                            472.0493,
                                            127.5538,
                                            441.5999,
                                            354.5956))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("dolorum atque nam")"
                                    StringContent="@("dolorem")"
                                    OutFields="@(["consequatur",
                                        "ad"])"
                                    FieldInfos="@([new FieldInfo("phone",
                                            "ex",
                                            "laudantium",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("category",
                                            "et",
                                            "ratione",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.ShortDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("avatar",
                                            "vel",
                                            "aut",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Sum)])"
                                    Content="@([new RelationshipPopupContent("voluptatem sed atque",
                                            "non error praesentium sapiente et aliquam recusandae",
                                            7,
                                            "quis",
                                        [new RelatedRecordsInfoFieldOrder("numquam",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("voluptas",
                                            OrderBy.Asc)],
                                            2)])"
                                    ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "status",
                                            "quos voluptas et",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "avatar",
                                            "quod est occaecati",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "status",
                                            "est hic porro",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("et non porro",
                                            "https://picsum.photos/640/480/?image=326",
                                            "492722e3-f874-9f8b-bc90-454bf1fec457",
                                            () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                            "id",
                                            true,
                                            true,
                                            true,
                                            "aut"),
                                    new ActionToggle("fugit deleniti aliquid",
                                            "0da6fa8f-2c46-9221-83ac-7caa3628e6ba",
                                            () => { Console.WriteLine("officiis"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "category",
                                            "eos"),
                                    new ActionButton("illo sunt occaecati",
                                            "https://picsum.photos/640/480/?image=825",
                                            "2b39a90e-b1cb-8751-42c5-311e0458439e",
                                            () => { Console.WriteLine("commodi"); return Task.CompletedTask; },
                                            "status",
                                            true,
                                            true,
                                            true,
                                            "omnis"),
                                    new ActionToggle("laborum et architecto",
                                            "ba9da355-9da0-1352-4ef1-ffe6e442239b",
                                            () => { Console.WriteLine("voluptatibus"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "avatar",
                                            "ratione")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterCenter)"
                                    LabelExpression="@("fugiat")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(38942553.8500)"
                                    MinScale="@(31078.8540)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(648.4743))"
                                    Symbol="@(new TextSymbol("cupiditate quo omnis",
                                        new MapColor(92, 90, 229),
                                        new MapColor(5, 134, 205),
                                            new Dimension(597.1362),
                                        new MapFont(new Dimension(5.4340),
                                                "Courier New",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            847.6434,
                                        new MapColor(200, 58, 182),
                                        new MapColor(232, 14, 97),
                                            617.8057,
                                        HorizontalAlignment.Right,
                                            true,
                                            627.0335,
                                            new Dimension(272.3486),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("1 = 1")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("fuga")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(21.9821,
                    -107.4042,
                    -81.3765,
                    -79.3933,
                    264.5901,
                    133.1244,
                    651.5970,
                    346.2288,
                new SpatialReference(7,
                        "est",
                        "optio",
                        "et"),
                    true,
                    true),
                3,
                5,
            new MapImageLayerCreateExportImageParametersOptions(986.1721,
                    239.8179,
                    "sequi"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-136.2108,
                    -107.9629,
                    -83.3225,
                    85.5681,
                    27.1470,
                    71.4092,
                    741.8653,
                    28.3921,
                new SpatialReference(4,
                        "est",
                        "atque",
                        "soluta"),
                    true,
                    true),
                4,
                5,
            new MapImageLayerFetchImageOptions(803.1399,
                    284.5884,
                    "nesciunt"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.SourceAtop;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2018, 1, 9, 5, 23, 47),
                    new DateTime(2008, 2, 7, 6, 46, 11));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("eligendi",
                    "beatae",
                new TimeExtent(new DateTime(2010, 1, 25, 14, 27, 51),
                        new DateTime(2015, 11, 13, 13, 27, 28)),
                new TimeInterval(TemporalTime.Months,
                        153.7530),
                    [new DateTime(2008, 6, 10, 16, 5, 6),
                        new DateTime(2014, 7, 27, 9, 36, 9),
                        new DateTime(2019, 1, 3, 6, 33, 58),
                        new DateTime(2020, 11, 15, 5, 3, 30)],
                    "Asia/Bangkok",
                    "facere");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    11112776.5880,
                    35247.4006,
                    0.0823,
                    true,
                    "qui atque quisquam",
                    true,
                    "asperiores",
                new LayerFloorInfo("quis"),
                [new Label(LabelPlacement.AboveStart,
                        "totam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        26408132.8551,
                        6407.7486,
                        true,
                        new Dimension(21.3295),
                    new TextSymbol("dolorem quos voluptates",
                        new MapColor(171, 6, 76),
                        new MapColor(25, 48, 65),
                            new Dimension(795.4490),
                        new MapFont(new Dimension(10.5160),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            974.3530,
                        new MapColor(234, 142, 228),
                        new MapColor(148, 184, 178),
                            786.8232,
                        HorizontalAlignment.Right,
                            true,
                            198.4760,
                            new Dimension(66.3859),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("iure explicabo consequatur",
                        "voluptatem",
                        ["expedita",
                            "ut",
                            "quae"],
                    [new FieldInfo("createdAt",
                            "qui",
                            "quas",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("status",
                            "omnis",
                            "dolore",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("id",
                            "vel",
                            "totam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new AttachmentsPopupContent("sint necessitatibus ratione",
                            "occaecati ut placeat at delectus",
                            AttachmentsPopupContentDisplayType.Preview),
                    new FieldsPopupContent([new FieldInfo("createdAt",
                                "qui",
                                "vel",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Min)],
                            "vero vel rerum veritatis nihil sint",
                            "dolorum perspiciatis dolor"),
                    new FieldsPopupContent([new FieldInfo("group",
                                "perspiciatis",
                                "fugit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("password",
                                "quia",
                                "ullam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("token",
                                "beatae",
                                "in",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Max)],
                            "quo sit consequatur quis cum tempore doloribus",
                            "repellendus et deserunt"),
                    new AttachmentsPopupContent("molestiae dolor aut",
                            "ducimus alias possimus ut quae illo voluptatem",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return $feature.Name;",
                            "updatedAt",
                            "itaque quidem non",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "avatar",
                            "placeat placeat repellat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "category",
                            "enim tenetur repellat",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("quaerat consequatur quod",
                            "https://picsum.photos/640/480/?image=520",
                            "18ae3862-7665-2383-1974-5c4bdebb5f62",
                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "recusandae"),
                    new ActionButton("placeat ut non",
                            "https://picsum.photos/640/480/?image=1043",
                            "e9578426-11ea-cf11-d117-9e20a0b436bf",
                            () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "dolor")])),
            new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    38896410.0484,
                    44656.8772,
                    0.5294,
                    true,
                    "qui dolorem hic",
                    true,
                    "harum",
                new LayerFloorInfo("quia"),
                [new Label(LabelPlacement.BelowAfter,
                        "neque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        5238797.0965,
                        21847.4775,
                        true,
                        new Dimension(89.7639),
                    new TextSymbol("sapiente veritatis a",
                        new MapColor(20, 109, 150),
                        new MapColor(219, 207, 13),
                            new Dimension(462.0067),
                        new MapFont(new Dimension(646.7494),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            647.8183,
                        new MapColor(129, 118, 167),
                        new MapColor(14, 51, 81),
                            88.7433,
                        HorizontalAlignment.Left,
                            true,
                            235.2933,
                            new Dimension(892.5090),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.CenterAfter,
                        "labore",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        46413401.7514,
                        23543.0848,
                        true,
                        new Dimension(472.1544),
                    new TextSymbol("molestiae est incidunt",
                        new MapColor(181, 7, 134),
                        new MapColor(164, 244, 40),
                            new Dimension(20.2831),
                        new MapFont(new Dimension(768.5712),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            651.7941,
                        new MapColor(12, 95, 75),
                        new MapColor(245, 195, 169),
                            396.3429,
                        HorizontalAlignment.Right,
                            true,
                            104.6324,
                            new Dimension(841.4073),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("ut sint nesciunt",
                        "est",
                        ["modi",
                            "velit",
                            "nam",
                            "a"],
                    [new FieldInfo("phone",
                            "quasi",
                            "consequuntur",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("comment",
                            "et",
                            "eos",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("password",
                            "cumque",
                            "enim",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Var)],
                    [new FieldsPopupContent([new FieldInfo("email",
                                "repellendus",
                                "corrupti",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("title",
                                "rerum",
                                "ad",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                            "ut ut cumque sequi",
                            "sed sit minima"),
                    new AttachmentsPopupContent("reprehenderit eum tempora",
                            "id error quisquam consequuntur facere eum",
                            AttachmentsPopupContentDisplayType.Auto),
                    new FieldsPopupContent([new FieldInfo("status",
                                "veniam",
                                "laboriosam",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("createdAt",
                                "eos",
                                "atque",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("id",
                                "est",
                                "illum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Stddev)],
                            "repudiandae rerum amet similique",
                            "ipsam blanditiis et")],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "status",
                            "placeat ut voluptatibus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "group",
                            "incidunt sed laboriosam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "title",
                            "reiciendis ullam odit",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("consequatur natus excepturi",
                            "26856270-64be-509c-235f-8a31b22f0d4f",
                            () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "et"),
                    new ActionToggle("laborum corrupti sit",
                            "cbfb0128-0a11-bb2b-d1f6-7051100461f5",
                            () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "reiciendis"),
                    new ActionToggle("natus incidunt quia",
                            "5e7e549b-ba12-950a-8174-66b05a82879b",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "qui"),
                    new ActionButton("et dolorem voluptatem",
                            "https://picsum.photos/640/480/?image=299",
                            "08817303-08c7-bad1-3bc2-5d7f2aa83d28",
                            () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "voluptates")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-9.0063,
                    76.2040,
                    -18.0001,
                    -87.2995,
                    701.2253,
                    630.6438,
                    829.6561,
                    699.3798,
                new SpatialReference(9,
                        "natus",
                        "voluptates",
                        "nesciunt"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    3102821.2894,
                    24915.6537,
                    0.0223,
                    true,
                    "repellat numquam consequatur",
                    true,
                    "eos",
                new LayerFloorInfo("porro"),
                [new Label(LabelPlacement.CenterAfter,
                        "sed",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        24678587.6107,
                        4240.4796,
                        true,
                        new Dimension(794.7239),
                    new TextSymbol("a necessitatibus alias",
                        new MapColor(159, 58, 38),
                        new MapColor(38, 1, 0),
                            new Dimension(673.2958),
                        new MapFont(new Dimension(30.1080),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            70.4055,
                        new MapColor(87, 130, 242),
                        new MapColor(6, 242, 247),
                            761.4057,
                        HorizontalAlignment.Right,
                            true,
                            739.3906,
                            new Dimension(189.3986),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("laboriosam sequi quos",
                        "et",
                        ["illo",
                            "praesentium"],
                    [new FieldInfo("createdAt",
                            "velit",
                            "aut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new AttachmentsPopupContent("et dolores ut",
                            "minima ut neque aut",
                            AttachmentsPopupContentDisplayType.Auto),
                    new FieldsPopupContent([new FieldInfo("avatar",
                                "incidunt",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("group",
                                "eos",
                                "sint",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("id",
                                "et",
                                "nam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Min)],
                            "repellendus quibusdam dignissimos dolore magnam",
                            "repudiandae quia itaque"),
                    new RelationshipPopupContent("harum maiores iure",
                            "rem sequi nemo eveniet et harum dolorem",
                            6,
                            "quia",
                        [new RelatedRecordsInfoFieldOrder("laudantium",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("esse",
                            OrderBy.Desc)],
                            4),
                    new MediaPopupContent("et deleniti expedita",
                            "quas dicta numquam laboriosam optio",
                        [new BarChartMediaInfo("corporis impedit esse",
                                "est",
                                "illum consectetur minima",
                            new ChartMediaInfoValue(["possimus",
                                    "rerum",
                                    "dolor"],
                                    "omnis",
                                    "eveniet",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "similique",
                                        271.4753),
                                new ChartMediaInfoValueSeries("group",
                                        "quisquam",
                                        718.8949)],
                                [new MapColor(131, 65, 209),
                                new MapColor(50, 123, 37),
                                new MapColor(152, 142, 191)])),
                        new ImageMediaInfo("maiores a maiores",
                                "cupiditate",
                                "optio dolorum ratione",
                            new ImageMediaInfoValue("https://heather.name",
                                    "https://carmine.org"),
                                847.4864)],
                            8)],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "comment",
                            "hic qui assumenda",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "token",
                            "ducimus ab provident",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("est maiores quibusdam",
                            "https://picsum.photos/640/480/?image=633",
                            "22843b3d-21d4-87dc-e50d-7a0834d7df1c",
                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "enim"),
                    new ActionButton("est distinctio est",
                            "https://picsum.photos/640/480/?image=1036",
                            "b199143e-eafe-b24a-931d-587832d66316",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "et")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Years,
                    898.3663);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2023, 8, 3, 21, 18, 9),
                    new DateTime(2011, 6, 5, 19, 7, 22));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
