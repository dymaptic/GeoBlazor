@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Average)"
                        Dpi="@(677.6794)"
                        Effect="@(new Effect("placeat",
                            39124039.9720))"
                        GdbVersion="@("1.0.9.4")"
                        ImageFormat="@(MapImageFormat.Pdf)"
                        ImageMaxHeight="@(6)"
                        ImageMaxWidth="@(3)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(6776026.3694)"
                        MinScale="@(23407.1694)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(919.7026)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.0824)"
                        Copyright="@("facilis")"
                        FullExtent="@(new Extent(-59.6235,
                                20.8538,
                                24.6310,
                                32.8117,
                                552.0493,
                                613.6081,
                                590.3891,
                                70.5682,
                            new SpatialReference(8,
                                    "sint",
                                    "recusandae",
                                    "voluptatem"),
                                true,
                                true))"
                        Title="@("eligendi voluptatem culpa")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Minutes)"
                            Value="@(781.4998)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("qui")"
                            EndField="@("dicta")"
                            Stops="@([new DateTime(2015, 4, 6, 14, 18, 56),
                                new DateTime(2007, 9, 20, 20, 16, 11),
                                new DateTime(2020, 3, 1, 4, 28, 32),
                                new DateTime(2008, 6, 8, 7, 58, 56)])"
                            TimeZone="@("Europe/Vienna")"
                            TrackIdField="@("iusto")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Days)"
                                Value="@(220.6223)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2022, 9, 9, 17, 26, 47))"
                                End="@(new DateTime(2015, 5, 8, 8, 40, 30))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2002, 3, 14, 21, 19, 35))"
                            End="@(new DateTime(2002, 1, 17, 11, 17, 50))">
                        </TimeExtent>
                        <PortalItem 
                            Access="@(PortalItemAccess.Private)"
                            AccessInformation="@("voluptatem")"
                            ApiKey="@("hic")"
                            AvgRating="@(411.2259)"
                            Categories="@(["dolore",
                                "error",
                                "eum"])"
                            Created="@(new DateTime(2020, 11, 1, 18, 24, 11))"
                            Culture="@("eius")"
                            Description="@("optio ex est iusto sequi")"
                            Extent="@(new Extent(-72.3492,
                                    101.0508,
                                    -10.4559,
                                    89.3759,
                                    898.1660,
                                    901.7297,
                                    146.4411,
                                    84.1329,
                                new SpatialReference(6,
                                        "velit",
                                        "praesentium",
                                        "et"),
                                    true,
                                    true))"
                            GroupCategories="@(["voluptates",
                                "voluptate",
                                "voluptatum"])"
                            LicenseInfo="@("ea")"
                            Modified="@(new DateTime(2009, 8, 7, 10, 33, 50))"
                            Name="@("avatar")"
                            NumComments="@(297.6513)"
                            NumRatings="@(972.8724)"
                            NumViews="@(366.3341)"
                            Owner="@("Cody Herzog")"
                            OwnerFolder="@("Claire Kling")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.NoPrompt,
                                    ["alias",
                                        "dolore"],
                                    "incidunt",
                                    "molestias",
                                    "itaque",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("sit")"
                            Screenshots="@(["consectetur",
                                "quaerat",
                                "autem"])"
                            Size="@(4)"
                            Snippet="@("totam")"
                            Tags="@(["qui",
                                "nulla"])"
                            Title="@("asperiores et animi")"
                            TypeKeywords="@(["eum",
                                "in",
                                "laudantium"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(1)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(39130952.8052)"
                            MinScale="@(37673.4886)"
                            Opacity="@(0.0961)"
                            PopupEnabled="@(true)"
                            Title="@("cupiditate cum similique")"
                            Visible="@(true)"
                            DefinitionExpression="@("minima")"
                            FloorInfo="@(new LayerFloorInfo("voluptatibus"))"
                            LabelingInfo="@([new Label(LabelPlacement.AlwaysHorizontal,
                                    "est",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    27322483.8426,
                                    42576.0532,
                                    true,
                                    new Dimension(120.1755),
                                new TextSymbol("doloremque quaerat illum",
                                    new MapColor(18, 54, 238),
                                    new MapColor(135, 87, 182),
                                        new Dimension(38.9409),
                                    new MapFont(new Dimension(249.4096),
                                            "Verdana",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        447.3760,
                                    new MapColor(143, 249, 173),
                                    new MapColor(65, 104, 8),
                                        121.9016,
                                    HorizontalAlignment.Right,
                                        true,
                                        505.1781,
                                        new Dimension(964.7612),
                                        true),
                                    true,
                                    "Name = 'John Doe'"),
                            new Label(LabelPlacement.BelowLeft,
                                    "officia",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    47765794.5957,
                                    4144.4445,
                                    true,
                                    new Dimension(513.9883),
                                new TextSymbol("qui sit fugit",
                                    new MapColor(109, 239, 54),
                                    new MapColor(234, 14, 232),
                                        new Dimension(387.7375),
                                    new MapFont(new Dimension(336.4020),
                                            "Verdana",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        887.2657,
                                    new MapColor(239, 52, 82),
                                    new MapColor(45, 96, 198),
                                        781.7420,
                                    HorizontalAlignment.Left,
                                        true,
                                        911.2351,
                                        new Dimension(826.8569),
                                        true),
                                    true,
                                    "Street = '123 Main St.'")])"
                            PopupTemplate="@(new PopupTemplate("nemo est quae",
                                    "error",
                                    ["architecto",
                                        "iure",
                                        "possimus"],
                                [new FieldInfo("category",
                                        "labore",
                                        "tenetur",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("token",
                                        "quia",
                                        "eum",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("password",
                                        "exercitationem",
                                        "similique",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("avatar",
                                        "fuga",
                                        "nulla",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new FieldsPopupContent([new FieldInfo("id",
                                            "expedita",
                                            "id",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("group",
                                            "aperiam",
                                            "autem",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("comment",
                                            "voluptatem",
                                            "dolor",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                        "repellendus iure temporibus a",
                                        "id sit ut"),
                                new FieldsPopupContent([new FieldInfo("email",
                                            "vitae",
                                            "quae",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("title",
                                            "inventore",
                                            "beatae",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLe),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("id",
                                            "maxime",
                                            "pariatur",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("title",
                                            "maiores",
                                            "officia",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                        "et praesentium vel harum explicabo numquam unde",
                                        "eum voluptas architecto")],
                                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "title",
                                        "voluptas provident cum",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("reiciendis praesentium sint",
                                        "https://picsum.photos/640/480/?image=590",
                                        "0a0b58f9-5d52-d552-1f45-24cae473c654",
                                        () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                        "email",
                                        true,
                                        true,
                                        true,
                                        "distinctio")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("ullam quam recusandae",
                                    new MapColor(124, 69, 253),
                                    new MapColor(109, 204, 54),
                                        new Dimension(459.5969),
                                    new MapFont(new Dimension(786.3820),
                                            "Arial",
                                        MapFontStyle.Italic,
                                        FontWeight.Lighter,
                                        TextDecoration.Underline),
                                        963.4970,
                                    new MapColor(241, 46, 156),
                                    new MapColor(174, 250, 34),
                                        472.1239,
                                    HorizontalAlignment.Left,
                                        true,
                                        946.6405,
                                        new Dimension(704.3530),
                                        true),
                                    "quam",
                                [new RotationVariable("voluptatibus",
                                    Axis.Tilt,
                                    RotationType.Arithmetic,
                                    new VisualVariableLegendOptions(true,
                                            "dolorum quibusdam neque"),
                                        "quaerat",
                                        "fuga aut soluta"),
                                new OpacityVariable("ullam",
                                        "numquam",
                                    [new OpacityStop(564.7470,
                                            0.8763,
                                            "praesentium")],
                                    new VisualVariableLegendOptions(true,
                                            "eum eius voluptate"),
                                        "totam",
                                        "non totam beatae")],
                                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(52, 132, 99),
                                        new MapColor(242, 112, 3)),
                                        319.3427,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(166.1462,
                                                859.5797),
                                        new AuthoringInfoField1ClassBreakInfos(872.0437,
                                                978.1757),
                                        new AuthoringInfoField1ClassBreakInfos(322.0045,
                                                366.6245),
                                        new AuthoringInfoField1ClassBreakInfos(556.1292,
                                                730.9778)],
                                            "repudiandae",
                                            "nisi",
                                            "quaerat"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(879.2832,
                                                219.1930),
                                        new AuthoringInfoField1ClassBreakInfos(318.2717,
                                                678.7587)],
                                            "consequatur",
                                            "mollitia",
                                            "et"),
                                        ["animi",
                                            "cumque",
                                            "eos",
                                            "temporibus"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "vel",
                                        true,
                                    LengthUnit.Yards,
                                        306.8364,
                                        250.1605,
                                        443.4380,
                                        196.0417)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(47560694.8161)"
                                MinScale="@(31490.0691)"
                                Opacity="@(0.3152)"
                                PopupEnabled="@(true)"
                                Title="@("et ad qui")"
                                Visible="@(true)"
                                DefinitionExpression="@("est")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(5)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(16898730.6278)"
                                    MinScale="@(10580.4030)"
                                    Opacity="@(0.2741)"
                                    PopupEnabled="@(true)"
                                    Title="@("et aut sed")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("aut")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(5)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(17257051.6017)"
                                        MinScale="@(29233.6310)"
                                        Opacity="@(0.4205)"
                                        PopupEnabled="@(true)"
                                        Title="@("dolore veniam non")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("sequi")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(2)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(38386806.1799)"
                                            MinScale="@(17098.9562)"
                                            Opacity="@(0.5961)"
                                            PopupEnabled="@(true)"
                                            Title="@("minima dolore tempore")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("facere")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(5)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(9731633.9020)"
                                                MinScale="@(47191.5934)"
                                                Opacity="@(0.0926)"
                                                PopupEnabled="@(true)"
                                                Title="@("excepturi rerum et")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("voluptate")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(8)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(8971882.6119)"
                                                    MinScale="@(21828.6884)"
                                                    Opacity="@(0.3286)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("et soluta est")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("tempora")"
                                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("error quae eius")"
                                                        StringContent="@("harum")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("ipsam")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("non mollitia fuga")"
                                                    StringContent="@("laboriosam")"
                                                    OutFields="@(["qui",
                                                        "corrupti"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new MediaPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "1cfc8084-db91-79e9-d5a7-2ade2e793fd1",
                                                            () => { Console.WriteLine("quas"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveStart)"
                                                    LabelExpression="@("totam")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(7885980.0322)"
                                                    MinScale="@(28232.3536)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(73.0745))"
                                                    Symbol="@(new TextSymbol("repellat tempore atque"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Name = 'John Doe'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("tempora")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                        437.1266,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["architecto",
                                                            "nisi",
                                                            "molestiae"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "qui",
                                                        true,
                                                    LengthUnit.Decimeters,
                                                        607.8886,
                                                        702.4807,
                                                        877.7470,
                                                        378.3624))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("quos dolores saepe")"
                                                StringContent="@("nesciunt")"
                                                OutFields="@(["ut",
                                                    "praesentium"])"
                                                FieldInfos="@([new FieldInfo("comment",
                                                        "dolorem",
                                                        "quae",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("email",
                                                        "magni",
                                                        "quia",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max),
                                                new FieldInfo("password",
                                                        "ullam",
                                                        "nihil",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)])"
                                                Content="@([new AttachmentsPopupContent("enim magni tempora",
                                                        "vitae ut in explicabo qui")])"
                                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                        "updatedAt",
                                                        "repellendus consequatur ut")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("iste autem vel",
                                                        "https://picsum.photos/640/480/?image=641",
                                                        "9492c946-319b-0977-70b3-9ca318141790",
                                                        () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                                                        "group",
                                                        true,
                                                        true,
                                                        true,
                                                        "expedita"),
                                                new ActionButton("possimus rerum temporibus",
                                                        "https://picsum.photos/640/480/?image=199",
                                                        "e22a3ebe-e06d-e15f-3f6d-a0b46d85ab9c",
                                                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                        "updatedAt",
                                                        true,
                                                        true,
                                                        true,
                                                        "cum"),
                                                new ActionButton("corporis ducimus voluptatibus",
                                                        "https://picsum.photos/640/480/?image=344",
                                                        "57e187c5-39b5-befb-d0d4-3091e4c3d725",
                                                        () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                                        "id",
                                                        true,
                                                        true,
                                                        true,
                                                        "exercitationem"),
                                                new ActionToggle("laboriosam optio aut",
                                                        "3500a720-aa36-5f96-ec25-50cea07da675",
                                                        () => { Console.WriteLine("ipsam"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "email",
                                                        "et")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveAfter)"
                                                LabelExpression="@("reprehenderit")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(31698234.5591)"
                                                MinScale="@(21568.8770)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(471.4368))"
                                                Symbol="@(new TextSymbol("voluptates est voluptatem",
                                                    new MapColor(88, 144, 198),
                                                    new MapColor(0, 89, 254),
                                                        null,
                                                    new MapFont(),
                                                        914.4398,
                                                    new MapColor(167, 48, 162),
                                                    new MapColor(64, 140, 116),
                                                        379.1855,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        549.6477,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Country = 'Canada'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("ipsam")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv)]),
                                                    859.3673,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "non",
                                                        "expedita",
                                                        "ullam"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "fuga",
                                                        "ipsam",
                                                        "alias"),
                                                    ["iusto",
                                                        "repellat",
                                                        "qui",
                                                        "optio"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "quidem",
                                                    true,
                                                LengthUnit.Centimeters,
                                                    710.2364,
                                                    708.1089,
                                                    562.1881,
                                                    266.9035))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("corporis aliquid deleniti")"
                                            StringContent="@("qui")"
                                            OutFields="@(["qui",
                                                "sit"])"
                                            FieldInfos="@([new FieldInfo("email",
                                                    "expedita",
                                                    "hic",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.DayShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Sum)])"
                                            Content="@([new RelationshipPopupContent("placeat mollitia nostrum",
                                                    "temporibus qui optio saepe perferendis aliquam iusto",
                                                    8,
                                                    "tempore",
                                                [new RelatedRecordsInfoFieldOrder("consequuntur",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("tenetur",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("adipisci",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("dolores",
                                                    OrderBy.Asc)],
                                                    9),
                                            new RelationshipPopupContent("soluta vero vel",
                                                    "assumenda hic est unde accusamus numquam soluta",
                                                    7,
                                                    "odit",
                                                [new RelatedRecordsInfoFieldOrder("officiis",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("quis",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("ut",
                                                    OrderBy.Desc)],
                                                    7),
                                            new MediaPopupContent("dignissimos dignissimos nostrum",
                                                    "qui non corporis accusantium",
                                                [new ImageMediaInfo("nulla maiores fugiat",
                                                        "omnis",
                                                        "harum blanditiis recusandae",
                                                    new ImageMediaInfoValue(),
                                                        564.7906),
                                                new ColumnChartMediaInfo("molestiae libero quam",
                                                        "quo",
                                                        "voluptates fugiat dolores",
                                                    new ChartMediaInfoValue()),
                                                new PieChartMediaInfo("vel qui quia",
                                                        "error",
                                                        "praesentium dolorum alias",
                                                    new ChartMediaInfoValue())],
                                                    5),
                                            new FieldsPopupContent([new FieldInfo("avatar",
                                                        "non",
                                                        "reprehenderit",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("status",
                                                        "ut",
                                                        "magni",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count)],
                                                    "autem id aliquid dolorum eveniet",
                                                    "eos omnis omnis")])"
                                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "comment",
                                                    "quisquam distinctio quisquam",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "avatar",
                                                    "aut atque sint",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature['FieldName'];",
                                                    "phone",
                                                    "ut debitis recusandae",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("dolorem voluptates cum",
                                                    "https://picsum.photos/640/480/?image=468",
                                                    "944f7cd4-5533-5565-bba6-3c74f48256c4",
                                                    () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                                    "status",
                                                    true,
                                                    true,
                                                    true,
                                                    "voluptas"),
                                            new ActionButton("et dolorem qui",
                                                    "https://picsum.photos/640/480/?image=393",
                                                    "facd0970-87c8-37c4-3d27-97218dd01f33",
                                                    () => { Console.WriteLine("excepturi"); return Task.CompletedTask; },
                                                    "category",
                                                    true,
                                                    true,
                                                    true,
                                                    "molestiae"),
                                            new ActionToggle("neque veniam est",
                                                    "7e220115-a0e8-dfbe-55bd-4dd5df5827ff",
                                                    () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "id",
                                                    "deleniti")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterEnd)"
                                            LabelExpression="@("enim")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(6526835.3724)"
                                            MinScale="@(6822.4290)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(633.9278))"
                                            Symbol="@(new TextSymbol("saepe ut culpa",
                                                new MapColor(88, 211, 142),
                                                new MapColor(20, 150, 164),
                                                    new Dimension(124.0983),
                                                new MapFont(new Dimension(777.8274),
                                                        "Palatino",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Bold,
                                                    TextDecoration.Underline),
                                                    353.3599,
                                                new MapColor(108, 40, 228),
                                                new MapColor(201, 254, 141),
                                                    836.5167,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    529.0441,
                                                    new Dimension(811.1443),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Age > 21")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("qui")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(85, 194, 147),
                                                new MapColor(105, 57, 77)),
                                                128.7770,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(212.8765,
                                                        421.4075),
                                                new AuthoringInfoField1ClassBreakInfos(186.5993,
                                                        301.3575),
                                                new AuthoringInfoField1ClassBreakInfos(134.9585,
                                                        328.6520)],
                                                    "labore",
                                                    "qui",
                                                    "facere"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(773.3604,
                                                        981.7523)],
                                                    "atque",
                                                    "neque",
                                                    "quia"),
                                                ["a",
                                                    "architecto",
                                                    "fuga"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "et",
                                                true,
                                            LengthUnit.Centimeters,
                                                905.6576,
                                                413.8810,
                                                584.7051,
                                                649.3097))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("accusamus maxime dolorem")"
                                        StringContent="@("dolor")"
                                        OutFields="@(["exercitationem",
                                            "sed"])"
                                        FieldInfos="@([new FieldInfo("category",
                                                "quas",
                                                "delectus",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("category",
                                                "quaerat",
                                                "molestiae",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongMonthDayYear),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("password",
                                                "eos",
                                                "inventore",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongDate),
                                                true,
                                                true,
                                            StatisticType.Count)])"
                                        Content="@([new TextPopupContent("non dolorum laborum")])"
                                        ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "id",
                                                "ipsam aliquam molestias",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "password",
                                                "provident et est",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("unde fugit impedit",
                                                "25dc766b-05d9-6fef-f810-a7acc7315d53",
                                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "phone",
                                                "at"),
                                        new ActionButton("error reprehenderit assumenda",
                                                "https://picsum.photos/640/480/?image=218",
                                                "c9182aaa-8178-eb0d-563b-45a1d5d19217",
                                                () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                "updatedAt",
                                                true,
                                                true,
                                                true,
                                                "ab"),
                                        new ActionButton("quae et ut",
                                                "https://picsum.photos/640/480/?image=309",
                                                "b7b8f9fa-d83a-19b7-9648-4b63aa1d563e",
                                                () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                                "email",
                                                true,
                                                true,
                                                true,
                                                "accusantium")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterEnd)"
                                        LabelExpression="@("ad")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(28408234.2908)"
                                        MinScale="@(39045.8569)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(324.4261))"
                                        Symbol="@(new TextSymbol("ab eaque aut",
                                            new MapColor(168, 52, 240),
                                            new MapColor(81, 141, 82),
                                                new Dimension(748.0858),
                                            new MapFont(new Dimension(374.1858),
                                                    "Times New Roman",
                                                MapFontStyle.Italic,
                                                FontWeight.Lighter,
                                                TextDecoration.None),
                                                821.8064,
                                            new MapColor(231, 179, 228),
                                            new MapColor(124, 76, 99),
                                                515.6021,
                                            HorizontalAlignment.Center,
                                                true,
                                                913.9101,
                                                new Dimension(478.9768),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Phone = '555-555-5555'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("et")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(75, 209, 178),
                                                new MapColor(82, 67, 252))]),
                                            955.4293,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(290.8217,
                                                    170.7800),
                                            new AuthoringInfoField1ClassBreakInfos(802.4376,
                                                    922.7954),
                                            new AuthoringInfoField1ClassBreakInfos(577.2193,
                                                    424.9320)],
                                                "aut",
                                                "asperiores",
                                                "at"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(564.1670,
                                                    279.6840),
                                            new AuthoringInfoField1ClassBreakInfos(635.4943,
                                                    941.4969),
                                            new AuthoringInfoField1ClassBreakInfos(822.0574,
                                                    550.5021)],
                                                "sed",
                                                "optio",
                                                "minima"),
                                            ["voluptatem",
                                                "quo",
                                                "unde",
                                                "quis"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "omnis",
                                            true,
                                        LengthUnit.NauticalMiles,
                                            899.7966,
                                            481.0498,
                                            828.3702,
                                            862.9313))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("aperiam ut eligendi")"
                                    StringContent="@("amet")"
                                    OutFields="@(["dolor",
                                        "soluta",
                                        "accusantium"])"
                                    FieldInfos="@([new FieldInfo("category",
                                            "dicta",
                                            "sed",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("token",
                                            "similique",
                                            "praesentium",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("phone",
                                            "iusto",
                                            "nam",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("group",
                                            "unde",
                                            "nobis",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Avg)])"
                                    Content="@([new TextPopupContent("dolore beatae sed"),
                                    new RelationshipPopupContent("odit quia ad",
                                            "quas eaque voluptatem nobis",
                                            4,
                                            "beatae",
                                        [new RelatedRecordsInfoFieldOrder("et",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("et",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("nulla",
                                            OrderBy.Desc)],
                                            1),
                                    new FieldsPopupContent([new FieldInfo("group",
                                                "sunt",
                                                "mollitia",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Count)],
                                            "est impedit autem voluptas",
                                            "velit et nostrum"),
                                    new FieldsPopupContent([new FieldInfo("status",
                                                "sint",
                                                "est",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("email",
                                                "rerum",
                                                "omnis",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("status",
                                                "velit",
                                                "corrupti",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev)],
                                            "et illum eius assumenda non ipsum",
                                            "qui cum est")])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "id",
                                            "quae repellat modi",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "comment",
                                            "veniam ipsa praesentium",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("qui facere officiis",
                                            "7888d43b-36c6-33aa-cde5-9c1fbb6911a2",
                                            () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "id",
                                            "officiis")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowEnd)"
                                    LabelExpression="@("nobis")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(38409983.1688)"
                                    MinScale="@(3780.8691)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(622.0549))"
                                    Symbol="@(new TextSymbol("optio hic sunt",
                                        new MapColor(41, 85, 158),
                                        new MapColor(229, 206, 139),
                                            new Dimension(711.7792),
                                        new MapFont(new Dimension(869.6187),
                                                "Courier New",
                                            MapFontStyle.Italic,
                                            FontWeight.Normal,
                                            TextDecoration.Underline),
                                            625.2719,
                                        new MapColor(29, 171, 22),
                                        new MapColor(207, 142, 88),
                                            545.2391,
                                        HorizontalAlignment.Center,
                                            true,
                                            149.0981,
                                            new Dimension(494.4800),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("1 = 1")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("similique")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(82.9663,
                    98.8950,
                    -2.4500,
                    55.1943,
                    383.7188,
                    140.1104,
                    203.4939,
                    722.5381,
                new SpatialReference(8,
                        "qui",
                        "iusto",
                        "culpa"),
                    true,
                    true),
                6,
                4,
            new MapImageLayerCreateExportImageParametersOptions(918.5210,
                    323.5779,
                    "a"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(15.3098,
                    -106.5280,
                    -57.9442,
                    -45.9335,
                    987.1157,
                    292.0618,
                    920.5559,
                    584.5316,
                new SpatialReference(6,
                        "cumque",
                        "consequatur",
                        "exercitationem"),
                    true,
                    true),
                8,
                1,
            new MapImageLayerFetchImageOptions(35.3749,
                    143.2223,
                    "id"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(1);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "sint",
                    "quod",
                    485.9747,
                    ["quos",
                        "aspernatur"],
                    new DateTime(2015, 1, 19, 18, 48, 22),
                    "et",
                    "aut est at inventore adipisci",
                new Extent(-164.1205,
                        165.3282,
                        63.7532,
                        69.6051,
                        198.7435,
                        852.9967,
                        656.2074,
                        449.7200,
                    new SpatialReference(4,
                            "quasi",
                            "dignissimos",
                            "nisi"),
                        true,
                        true),
                    ["et",
                        "repellendus",
                        "sequi",
                        "molestiae"],
                    "in",
                    new DateTime(2018, 7, 5, 1, 20, 49),
                    "phone",
                    284.0756);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.SoftLight;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2010, 7, 12, 0, 3, 37),
                    new DateTime(2019, 8, 19, 12, 25, 4));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("unde",
                    "aut",
                new TimeExtent(new DateTime(2013, 2, 18, 5, 33, 20),
                        new DateTime(2005, 2, 10, 16, 55, 48)),
                new TimeInterval(TemporalTime.Minutes,
                        345.1247),
                    [new DateTime(2017, 2, 19, 17, 46, 16),
                        new DateTime(2020, 2, 16, 1, 56, 36)],
                    "Europe/Kiev",
                    "ipsam");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    20410620.6273,
                    3012.9362,
                    0.4351,
                    true,
                    "sint itaque deleniti",
                    true,
                    "minus",
                new LayerFloorInfo("quo"),
                [new Label(LabelPlacement.AboveLeft,
                        "est",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        35099062.5321,
                        21006.7566,
                        true,
                        new Dimension(906.4816),
                    new TextSymbol("reiciendis dolorum nam",
                        new MapColor(211, 220, 47),
                        new MapColor(172, 47, 155),
                            new Dimension(276.9192),
                        new MapFont(new Dimension(690.8322),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            1.7869,
                        new MapColor(180, 83, 39),
                        new MapColor(108, 116, 42),
                            625.6642,
                        HorizontalAlignment.Left,
                            true,
                            971.8700,
                            new Dimension(611.9947),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.AboveBefore,
                        "repellat",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        46939733.6844,
                        41023.2152,
                        true,
                        new Dimension(532.2933),
                    new TextSymbol("a et rerum",
                        new MapColor(1, 81, 181),
                        new MapColor(122, 9, 212),
                            new Dimension(252.6413),
                        new MapFont(new Dimension(187.3392),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            519.5213,
                        new MapColor(23, 90, 129),
                        new MapColor(109, 251, 86),
                            629.3149,
                        HorizontalAlignment.Center,
                            true,
                            770.8909,
                            new Dimension(994.3132),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.AboveLeft,
                        "exercitationem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        19644196.8686,
                        46311.5069,
                        true,
                        new Dimension(637.2953),
                    new TextSymbol("iusto praesentium reprehenderit",
                        new MapColor(170, 30, 76),
                        new MapColor(146, 219, 182),
                            new Dimension(214.3605),
                        new MapFont(new Dimension(48.0268),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            66.2182,
                        new MapColor(130, 2, 89),
                        new MapColor(179, 197, 103),
                            498.7952,
                        HorizontalAlignment.Center,
                            true,
                            402.2873,
                            new Dimension(837.7039),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("minus pariatur sunt",
                        "porro",
                        ["blanditiis",
                            "esse",
                            "repellat"],
                    [new FieldInfo("avatar",
                            "odio",
                            "commodi",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("phone",
                            "voluptatem",
                            "consectetur",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "ea",
                                "sint reprehenderit consequatur"))],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "password",
                            "omnis similique rem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "name",
                            "voluptatem magni explicabo",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "status",
                            "quia in quas",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("veritatis quibusdam nostrum",
                            "cfec7641-69c9-6054-970f-58e2be51cec4",
                            () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "harum")])),
            new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    42549797.0885,
                    15590.5750,
                    0.2958,
                    true,
                    "assumenda distinctio aut",
                    true,
                    "eveniet",
                new LayerFloorInfo("magni"),
                [new Label(LabelPlacement.AboveStart,
                        "repellat",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        46381097.5850,
                        41257.8613,
                        true,
                        new Dimension(640.3702),
                    new TextSymbol("id ullam quam",
                        new MapColor(107, 41, 34),
                        new MapColor(111, 244, 106),
                            new Dimension(725.1817),
                        new MapFont(new Dimension(398.6322),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            311.9286,
                        new MapColor(177, 114, 59),
                        new MapColor(96, 99, 135),
                            409.5207,
                        HorizontalAlignment.Center,
                            true,
                            803.8426,
                            new Dimension(17.7106),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("nihil et corporis",
                        "vitae",
                        ["dolor",
                            "magnam",
                            "assumenda"],
                    [new FieldInfo("createdAt",
                            "rem",
                            "nihil",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("token",
                            "quo",
                            "consequatur",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new TextPopupContent("molestias saepe omnis"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                "cum",
                                "voluptatem eum eum"))],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "updatedAt",
                            "blanditiis dolorem consequatur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "password",
                            "illo velit molestiae",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "group",
                            "et sint quibusdam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "name",
                            "impedit minus aut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("dolorum repudiandae qui",
                            "https://picsum.photos/640/480/?image=354",
                            "f3291972-c769-d5e1-8b6c-abac40fcf5b5",
                            () => { Console.WriteLine("occaecati"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "quis"),
                    new ActionButton("omnis est provident",
                            "https://picsum.photos/640/480/?image=1039",
                            "463ec40b-abed-01e4-7891-ad11ad74ea35",
                            () => { Console.WriteLine("aliquid"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "illum"),
                    new ActionButton("eaque voluptatem harum",
                            "https://picsum.photos/640/480/?image=842",
                            "b7b2251c-5459-1dc6-9637-a6a731eb9937",
                            () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "corporis"),
                    new ActionToggle("neque delectus consequatur",
                            "2777759c-fde5-6e59-c7ec-9dc1e6cebfdb",
                            () => { Console.WriteLine("dignissimos"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "aut")])),
            new Sublayer(4,
                    true,
                    true,
                ListMode.Show,
                    6556926.7350,
                    17516.3045,
                    0.6461,
                    true,
                    "a ratione tempora",
                    true,
                    "dolorem",
                new LayerFloorInfo("amet"),
                [new Label(LabelPlacement.AboveStart,
                        "minima",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        4391322.7631,
                        27998.9104,
                        true,
                        new Dimension(834.4840),
                    new TextSymbol("in voluptate nobis",
                        new MapColor(6, 72, 138),
                        new MapColor(239, 158, 193),
                            new Dimension(794.3494),
                        new MapFont(new Dimension(144.5916),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            517.0609,
                        new MapColor(169, 110, 81),
                        new MapColor(131, 1, 185),
                            401.2454,
                        HorizontalAlignment.Left,
                            true,
                            324.6876,
                            new Dimension(927.9094),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.AboveAlong,
                        "aliquid",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        9881025.9409,
                        15037.8640,
                        true,
                        new Dimension(433.2114),
                    new TextSymbol("a doloremque qui",
                        new MapColor(252, 164, 241),
                        new MapColor(142, 90, 39),
                            new Dimension(346.3552),
                        new MapFont(new Dimension(933.2989),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            487.2615,
                        new MapColor(9, 134, 209),
                        new MapColor(175, 76, 209),
                            406.1673,
                        HorizontalAlignment.Right,
                            true,
                            756.7880,
                            new Dimension(235.1873),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.AboveLeft,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        14536212.1657,
                        22652.4438,
                        true,
                        new Dimension(803.2016),
                    new TextSymbol("magni est deleniti",
                        new MapColor(236, 193, 141),
                        new MapColor(30, 177, 12),
                            new Dimension(378.3414),
                        new MapFont(new Dimension(222.9591),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            380.5599,
                        new MapColor(136, 13, 15),
                        new MapColor(75, 39, 232),
                            826.2052,
                        HorizontalAlignment.Right,
                            true,
                            542.8747,
                            new Dimension(907.6166),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.CenterAfter,
                        "minus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        21035326.6563,
                        3379.0179,
                        true,
                        new Dimension(857.6520),
                    new TextSymbol("autem accusantium ut",
                        new MapColor(22, 30, 114),
                        new MapColor(124, 246, 212),
                            new Dimension(274.5526),
                        new MapFont(new Dimension(631.2465),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            39.8550,
                        new MapColor(7, 54, 217),
                        new MapColor(74, 127, 232),
                            718.1932,
                        HorizontalAlignment.Right,
                            true,
                            614.4922,
                            new Dimension(992.3310),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("saepe quod cumque",
                        "deserunt",
                        ["provident",
                            "expedita",
                            "et",
                            "quas"],
                    [new FieldInfo("id",
                            "omnis",
                            "fuga",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("id",
                            "neque",
                            "velit",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new RelationshipPopupContent("ut quia repellendus",
                            "vel quae beatae aut ipsum voluptatem",
                            2,
                            "debitis",
                        [new RelatedRecordsInfoFieldOrder("atque",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("saepe",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("nulla",
                            OrderBy.Desc)],
                            5)],
                    [new ExpressionInfo("return Date();",
                            "token",
                            "sed nulla consequatur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "name",
                            "impedit qui consectetur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "title",
                            "voluptas corporis nihil",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "email",
                            "delectus voluptatem officia",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("distinctio sint quia",
                            "https://picsum.photos/640/480/?image=228",
                            "47543b72-6882-1f34-a57f-eef4731a71f5",
                            () => { Console.WriteLine("temporibus"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "reprehenderit"),
                    new ActionToggle("hic cupiditate consequuntur",
                            "0ced39e0-cdb4-93a0-a3bd-5fed79989494",
                            () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "quaerat"),
                    new ActionButton("natus earum voluptatem",
                            "https://picsum.photos/640/480/?image=492",
                            "4134d9bd-f193-d668-5a67-6487d052fa83",
                            () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "officia"),
                    new ActionButton("enim labore ea",
                            "https://picsum.photos/640/480/?image=403",
                            "bdac494d-c588-b882-7a1f-2f6356a4cb47",
                            () => { Console.WriteLine("deleniti"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "excepturi")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Show,
                    33760695.0357,
                    48421.8359,
                    0.7644,
                    true,
                    "velit veniam et",
                    true,
                    "id",
                new LayerFloorInfo("corrupti"),
                [new Label(LabelPlacement.AboveRight,
                        "consequatur",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        1329958.6228,
                        44327.9983,
                        true,
                        new Dimension(598.3469),
                    new TextSymbol("voluptas sequi vero",
                        new MapColor(51, 231, 49),
                        new MapColor(237, 227, 175),
                            new Dimension(443.2534),
                        new MapFont(new Dimension(732.6175),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            695.0544,
                        new MapColor(33, 49, 46),
                        new MapColor(177, 76, 137),
                            49.0147,
                        HorizontalAlignment.Right,
                            true,
                            363.1432,
                            new Dimension(670.1762),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "magni",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        15208447.2444,
                        22974.7024,
                        true,
                        new Dimension(798.0866),
                    new TextSymbol("ducimus ex officia",
                        new MapColor(128, 162, 92),
                        new MapColor(207, 118, 21),
                            new Dimension(943.5434),
                        new MapFont(new Dimension(787.9566),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            678.3463,
                        new MapColor(189, 119, 221),
                        new MapColor(6, 125, 175),
                            884.9921,
                        HorizontalAlignment.Left,
                            true,
                            29.6494,
                            new Dimension(133.6707),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.CenterCenter,
                        "sit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        36199478.9128,
                        4694.3647,
                        true,
                        new Dimension(761.5192),
                    new TextSymbol("id recusandae laudantium",
                        new MapColor(138, 80, 228),
                        new MapColor(24, 36, 37),
                            new Dimension(466.1233),
                        new MapFont(new Dimension(293.3615),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            78.5876,
                        new MapColor(244, 175, 73),
                        new MapColor(184, 20, 205),
                            489.1451,
                        HorizontalAlignment.Right,
                            true,
                            989.0546,
                            new Dimension(591.5291),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("autem culpa qui",
                        "non",
                        ["eum",
                            "eligendi",
                            "quia"],
                    [new FieldInfo("status",
                            "dignissimos",
                            "ullam",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("phone",
                            "ducimus",
                            "deserunt",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("createdAt",
                            "odio",
                            "sed",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("updatedAt",
                            "reiciendis",
                            "nisi",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "repellat",
                                "iste ullam adipisci")),
                    new MediaPopupContent("maxime nihil ab",
                            "atque nihil suscipit culpa est perspiciatis autem",
                        [new PieChartMediaInfo("et et vero",
                                "maiores",
                                "pariatur voluptas quos",
                            new ChartMediaInfoValue(["molestiae",
                                    "eum",
                                    "consectetur",
                                    "asperiores"],
                                    "fuga",
                                    "dolorem",
                                [new ChartMediaInfoValueSeries("name",
                                        "repudiandae",
                                        220.5449),
                                new ChartMediaInfoValueSeries("createdAt",
                                        "quas",
                                        610.2481),
                                new ChartMediaInfoValueSeries("updatedAt",
                                        "vero",
                                        856.3546)],
                                [new MapColor(249, 157, 5)])),
                        new ImageMediaInfo("dolores officia tempore",
                                "id",
                                "similique totam harum",
                            new ImageMediaInfoValue("https://georgette.com",
                                    "http://xavier.org"),
                                244.7279),
                        new ImageMediaInfo("a eos suscipit",
                                "et",
                                "harum dolor unde",
                            new ImageMediaInfoValue("http://everett.biz",
                                    "http://roxanne.info"),
                                505.6244)],
                            8),
                    new MediaPopupContent("dignissimos debitis ut",
                            "blanditiis expedita excepturi ea non",
                        [new ImageMediaInfo("impedit est saepe",
                                "rerum",
                                "alias sunt dolor",
                            new ImageMediaInfoValue("https://ila.biz",
                                    "https://evalyn.name"),
                                941.3716),
                        new ImageMediaInfo("unde nihil aut",
                                "fugiat",
                                "ipsa et ad",
                            new ImageMediaInfoValue("http://evert.org",
                                    "https://ariel.org"),
                                457.8229)],
                            4)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "id",
                            "optio soluta iusto",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "name",
                            "provident praesentium repellat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "avatar",
                            "voluptas doloribus sapiente",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "phone",
                            "iure iusto aut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("sed quis qui",
                            "f70e347f-511d-828d-caf5-2071afc5428f",
                            () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "culpa"),
                    new ActionToggle("ipsum labore perspiciatis",
                            "5a2911ba-6aa8-dbdc-68d3-7ead820f99f1",
                            () => { Console.WriteLine("eius"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "perferendis"),
                    new ActionButton("voluptatem possimus perspiciatis",
                            "https://picsum.photos/640/480/?image=1067",
                            "8e885b2b-6778-d26e-bed0-565ebf213cee",
                            () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "omnis")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-68.6693,
                    178.9769,
                    53.3721,
                    24.5738,
                    908.4398,
                    541.9784,
                    46.0272,
                    59.6514,
                new SpatialReference(6,
                        "libero",
                        "ipsam",
                        "est"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(1,
                    true,
                    true,
                ListMode.Hide,
                    34153468.9710,
                    34245.5704,
                    0.2759,
                    true,
                    "vero fugit quis",
                    true,
                    "eos",
                new LayerFloorInfo("aut"),
                [new Label(LabelPlacement.CenterLeft,
                        "veritatis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        22977655.1115,
                        48074.9584,
                        true,
                        new Dimension(323.8237),
                    new TextSymbol("ut sint inventore",
                        new MapColor(223, 13, 90),
                        new MapColor(152, 118, 154),
                            new Dimension(772.8971),
                        new MapFont(new Dimension(701.0128),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            439.2857,
                        new MapColor(121, 158, 89),
                        new MapColor(60, 179, 210),
                            700.9923,
                        HorizontalAlignment.Right,
                            true,
                            160.4912,
                            new Dimension(699.7485),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.BelowAfter,
                        "similique",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        14670965.7068,
                        20859.2886,
                        true,
                        new Dimension(364.1024),
                    new TextSymbol("sed harum est",
                        new MapColor(3, 84, 253),
                        new MapColor(75, 224, 30),
                            new Dimension(643.4156),
                        new MapFont(new Dimension(539.4791),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            352.3869,
                        new MapColor(85, 171, 103),
                        new MapColor(217, 120, 116),
                            862.2452,
                        HorizontalAlignment.Right,
                            true,
                            726.0261,
                            new Dimension(109.7039),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.BelowEnd,
                        "sunt",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        27655631.0951,
                        16078.2226,
                        true,
                        new Dimension(289.3369),
                    new TextSymbol("id cumque maxime",
                        new MapColor(17, 115, 176),
                        new MapColor(82, 224, 28),
                            new Dimension(839.0887),
                        new MapFont(new Dimension(79.2246),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            417.8778,
                        new MapColor(93, 100, 92),
                        new MapColor(231, 249, 22),
                            22.9723,
                        HorizontalAlignment.Left,
                            true,
                            680.5300,
                            new Dimension(673.9940),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("sunt quis magni",
                        "ipsa",
                        ["occaecati",
                            "facilis",
                            "facilis",
                            "et"],
                    [new FieldInfo("createdAt",
                            "nostrum",
                            "debitis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("updatedAt",
                            "et",
                            "quo",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("password",
                            "rerum",
                            "repellendus",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Var)],
                    [new TextPopupContent("minima hic ipsa"),
                    new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "quisquam",
                                "ut ex officiis"))],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "avatar",
                            "aut voluptatum pariatur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "est reprehenderit veritatis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("similique nam aut",
                            "https://picsum.photos/640/480/?image=971",
                            "d1e51a04-b3be-5b7f-f4f0-10d23ea03f34",
                            () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "id"),
                    new ActionToggle("fugiat quis quae",
                            "3f899077-c252-5b40-8dad-73b13a3b4376",
                            () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "voluptatem"),
                    new ActionButton("atque libero earum",
                            "https://picsum.photos/640/480/?image=491",
                            "8efe8068-719f-b3e1-9a02-10171f3b9123",
                            () => { Console.WriteLine("mollitia"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "quis"),
                    new ActionButton("voluptatem aut tempora",
                            "https://picsum.photos/640/480/?image=117",
                            "e14cc9db-2b5a-a1a3-0cf2-6359bec37bc5",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "excepturi")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Show,
                    10040200.0514,
                    5891.5968,
                    0.2820,
                    true,
                    "nemo et ducimus",
                    true,
                    "doloremque",
                new LayerFloorInfo("nemo"),
                [new Label(LabelPlacement.CenterEnd,
                        "ullam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        10808695.2172,
                        28160.9236,
                        true,
                        new Dimension(966.6881),
                    new TextSymbol("esse qui dolorem",
                        new MapColor(189, 3, 239),
                        new MapColor(211, 3, 165),
                            new Dimension(582.8998),
                        new MapFont(new Dimension(642.3609),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            51.0257,
                        new MapColor(241, 103, 117),
                        new MapColor(88, 128, 156),
                            507.9251,
                        HorizontalAlignment.Right,
                            true,
                            250.1657,
                            new Dimension(187.4722),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("et eum ut",
                        "est",
                        ["numquam",
                            "odio",
                            "est",
                            "voluptas"],
                    [new FieldInfo("id",
                            "maxime",
                            "tempora",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("status",
                            "et",
                            "voluptas",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("avatar",
                            "itaque",
                            "ab",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("password",
                            "in",
                            "natus",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new AttachmentsPopupContent("aliquid adipisci ipsam",
                            "eum ut magni harum labore culpa quis",
                            AttachmentsPopupContentDisplayType.Auto),
                    new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "at",
                                "dolorem aut aut")),
                    new RelationshipPopupContent("non atque accusamus",
                            "nobis ex quibusdam eos",
                            8,
                            "quod",
                        [new RelatedRecordsInfoFieldOrder("et",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("nihil",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("provident",
                            OrderBy.Asc)],
                            2),
                    new TextPopupContent("maxime qui ratione")],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "createdAt",
                            "repellat excepturi vero",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "createdAt",
                            "quia consequatur qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "comment",
                            "dolores nihil ab",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "phone",
                            "enim voluptatem tenetur",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("earum minima quia",
                            "c828b6d0-ff4d-cb2a-c03e-a5fba8956863",
                            () => { Console.WriteLine("dolorum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "sed"),
                    new ActionButton("rerum maxime ut",
                            "https://picsum.photos/640/480/?image=36",
                            "c243db0a-6cf5-94f2-e074-e2dfb446eed1",
                            () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "voluptatem"),
                    new ActionToggle("et facere nemo",
                            "d25a8ac4-4b8b-3300-fb21-bc54d4aa6416",
                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "praesentium"),
                    new ActionToggle("rerum quae nostrum",
                            "0f58eec6-7511-dfd4-5e40-38ed1648fdfb",
                            () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "veniam")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Months,
                    487.7390);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2021, 2, 10, 10, 45, 9),
                    new DateTime(2013, 5, 11, 17, 16, 2));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
