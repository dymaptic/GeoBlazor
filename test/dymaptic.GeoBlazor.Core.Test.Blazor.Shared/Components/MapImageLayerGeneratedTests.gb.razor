@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.HardLight)"
                        Dpi="@(215.2353)"
                        Effect="@(new Effect("eligendi",
                            27086987.2811))"
                        GdbVersion="@("7.8.5.9")"
                        ImageFormat="@(MapImageFormat.Png)"
                        ImageMaxHeight="@(9)"
                        ImageMaxWidth="@(8)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(6682541.1655)"
                        MinScale="@(22915.9240)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(652.3578)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.4419)"
                        Copyright="@("consequuntur")"
                        FullExtent="@(new Extent(96.6385,
                                -53.7141,
                                72.5763,
                                46.0960,
                                469.5714,
                                879.3702,
                                757.5968,
                                495.4794,
                            new SpatialReference(6,
                                    "natus",
                                    "et",
                                    "dicta"),
                                true,
                                true))"
                        Title="@("quia tenetur quia")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Seconds)"
                            Value="@(821.9159)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("maiores")"
                            EndField="@("nihil")"
                            Stops="@([new DateTime(2007, 2, 10, 8, 8, 57),
                                new DateTime(2018, 10, 17, 18, 57, 21)])"
                            TimeZone="@("America/Caracas")"
                            TrackIdField="@("accusantium")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Centuries)"
                                Value="@(31.6772)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2009, 4, 16, 15, 21, 28))"
                                End="@(new DateTime(2000, 7, 25, 3, 10, 3))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2022, 3, 16, 8, 51, 23))"
                            End="@(new DateTime(2009, 9, 7, 14, 16, 17))">
                        </TimeExtent>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(1)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(45176722.6566)"
                            MinScale="@(8855.0563)"
                            Opacity="@(0.4047)"
                            PopupEnabled="@(true)"
                            Title="@("aut voluptatibus adipisci")"
                            Visible="@(true)"
                            DefinitionExpression="@("quo")"
                            FloorInfo="@(new LayerFloorInfo("aut"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowStart,
                                    "architecto",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    2556012.4616,
                                    23128.2933,
                                    true,
                                    new Dimension(700.0837),
                                new TextSymbol("a voluptatem ut",
                                    new MapColor(128, 161, 180),
                                    new MapColor(149, 129, 209),
                                        new Dimension(321.9265),
                                    new MapFont(new Dimension(697.6054),
                                            "Arial",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        76.3774,
                                    new MapColor(163, 240, 125),
                                    new MapColor(182, 50, 210),
                                        78.6157,
                                    HorizontalAlignment.Left,
                                        true,
                                        412.8524,
                                        new Dimension(532.0105),
                                        true),
                                    true,
                                    "PostalCode = 'M5V 1J9'")])"
                            PopupTemplate="@(new PopupTemplate("asperiores possimus quam",
                                    "ea",
                                    ["expedita",
                                        "ea"],
                                [new FieldInfo("group",
                                        "modi",
                                        "veritatis",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                            "ea",
                                            "dolor totam totam")),
                                new FieldsPopupContent([new FieldInfo("avatar",
                                            "ut",
                                            "tenetur",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("updatedAt",
                                            "dolore",
                                            "numquam",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("createdAt",
                                            "est",
                                            "voluptate",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                        "dignissimos voluptas sit non ea quia",
                                        "quia similique modi")],
                                [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "comment",
                                        "totam et dolorem",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return Date();",
                                        "phone",
                                        "quis veniam nulla",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("aut rerum consequuntur",
                                        "36f8df19-6c3c-0a2d-bf24-196293593237",
                                        () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "avatar",
                                        "architecto")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("dolores vitae dolorum",
                                    new MapColor(112, 61, 77),
                                    new MapColor(226, 244, 59),
                                        new Dimension(771.9801),
                                    new MapFont(new Dimension(187.6999),
                                            "Arial",
                                        MapFontStyle.Italic,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        918.7780,
                                    new MapColor(2, 216, 135),
                                    new MapColor(222, 5, 160),
                                        711.7320,
                                    HorizontalAlignment.Left,
                                        true,
                                        747.3558,
                                        new Dimension(313.6186),
                                        true),
                                    "nihil",
                                [new RotationVariable("velit",
                                    Axis.Roll,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "minus iusto earum"),
                                        "unde",
                                        "et commodi velit"),
                                new ColorVariable("molestiae",
                                        "itaque",
                                    [new ColorStop(609.4991,
                                        new MapColor(88, 112, 25),
                                            "consequuntur"),
                                    new ColorStop(117.5858,
                                        new MapColor(1, 222, 122),
                                            "sed"),
                                    new ColorStop(43.2219,
                                        new MapColor(41, 115, 35),
                                            "corrupti")],
                                    new VisualVariableLegendOptions(true,
                                            "rerum nam sunt"),
                                        "quam",
                                        "sed voluptatem officia"),
                                new OpacityVariable("tempora",
                                        "beatae",
                                    [new OpacityStop(380.2397,
                                            0.1352,
                                            "expedita"),
                                    new OpacityStop(696.6058,
                                            0.4024,
                                            "quia"),
                                    new OpacityStop(779.9960,
                                            0.4858,
                                            "sit")],
                                    new VisualVariableLegendOptions(true,
                                            "sed voluptatibus ut"),
                                        "ullam",
                                        "rerum aut unde")],
                                new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(248, 10, 75),
                                        new MapColor(63, 163, 155)),
                                        51.6440,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(40.2261,
                                                637.9224)],
                                            "debitis",
                                            "et",
                                            "nisi"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(913.5076,
                                                424.4046),
                                        new AuthoringInfoField1ClassBreakInfos(926.8022,
                                                761.6378)],
                                            "magnam",
                                            "ipsam",
                                            "expedita"),
                                        ["illum",
                                            "inventore",
                                            "atque",
                                            "dolorem"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "voluptatibus",
                                        true,
                                    LengthUnit.Yards,
                                        838.7269,
                                        965.8546,
                                        737.8435,
                                        830.5739)))"
                            Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                            <Sublayer 
                                SublayerId="@(3)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(35905792.1169)"
                                MinScale="@(17319.3527)"
                                Opacity="@(0.1226)"
                                PopupEnabled="@(true)"
                                Title="@("minus voluptatem quasi")"
                                Visible="@(true)"
                                DefinitionExpression="@("voluptates")"
                                Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(5)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(24194200.4589)"
                                    MinScale="@(43162.3839)"
                                    Opacity="@(0.5457)"
                                    PopupEnabled="@(true)"
                                    Title="@("eaque eligendi reiciendis")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("laudantium")"
                                    Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(5)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(25870582.2135)"
                                        MinScale="@(3190.5551)"
                                        Opacity="@(0.5409)"
                                        PopupEnabled="@(true)"
                                        Title="@("velit ut assumenda")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("nulla")"
                                        Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(2)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(11750838.1058)"
                                            MinScale="@(4003.6185)"
                                            Opacity="@(0.5396)"
                                            PopupEnabled="@(true)"
                                            Title="@("impedit asperiores blanditiis")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("quis")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(4)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(12626802.4511)"
                                                MinScale="@(38546.3159)"
                                                Opacity="@(0.2518)"
                                                PopupEnabled="@(true)"
                                                Title="@("sit cumque perspiciatis")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("nostrum")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(8)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(4990696.9853)"
                                                    MinScale="@(663.8460)"
                                                    Opacity="@(0.7669)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("quas ea quas")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("suscipit")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("quia sapiente quis")"
                                                        StringContent="@("in")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("earum")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("ex exercitationem labore")"
                                                    StringContent="@("distinctio")"
                                                    OutFields="@(["praesentium",
                                                        "dolor",
                                                        "qui",
                                                        "quibusdam"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new TextPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new RelationshipPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "d29434f4-8eac-a432-311a-14c2dbfc09d1",
                                                            () => { Console.WriteLine("labore"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "13b0af26-33db-6883-8740-451f0046d572",
                                                            () => { Console.WriteLine("nostrum"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "d7db2a1a-4739-9872-e904-9dfd28133bb0",
                                                            () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "2fcaf691-3fbf-1d61-90dc-c1f60f14b8fe",
                                                            () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveCenter)"
                                                    LabelExpression="@("reprehenderit")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(1862261.2757)"
                                                    MinScale="@(4814.5945)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(679.4481))"
                                                    Symbol="@(new TextSymbol("minus soluta nostrum"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Country = 'Canada'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("quia")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                    new MultipartColorRamp(),
                                                        826.2991,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["ad",
                                                            "praesentium"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "modi",
                                                        true,
                                                    LengthUnit.UsFeet,
                                                        688.3191,
                                                        295.5167,
                                                        125.7461,
                                                        300.5591))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("sed eaque rerum")"
                                                StringContent="@("reiciendis")"
                                                OutFields="@(["corporis",
                                                    "nostrum",
                                                    "pariatur"])"
                                                FieldInfos="@([new FieldInfo("comment",
                                                        "adipisci",
                                                        "sapiente",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev),
                                                new FieldInfo("title",
                                                        "aut",
                                                        "est",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count)])"
                                                Content="@([new TextPopupContent("maxime et dicta"),
                                                new TextPopupContent("harum quam quasi"),
                                                new TextPopupContent("eum ut rem")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "token",
                                                        "rerum alias reprehenderit"),
                                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                        "createdAt",
                                                        "similique perspiciatis voluptatum")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("voluptas nisi officiis",
                                                        "46c65f6e-c773-4047-915b-55a4cb1ac43c",
                                                        () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "status",
                                                        "illum"),
                                                new ActionToggle("deserunt deserunt non",
                                                        "b43db3cb-4780-4ee3-cc4d-0246d4481cbe",
                                                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "password",
                                                        "et"),
                                                new ActionToggle("cumque consectetur sunt",
                                                        "060c0d68-ffcf-5027-a1cc-993d0fde3036",
                                                        () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "group",
                                                        "minus")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowAlong)"
                                                LabelExpression="@("facere")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(37849610.9761)"
                                                MinScale="@(47309.4427)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(527.5006))"
                                                Symbol="@(new TextSymbol("sapiente architecto voluptatem",
                                                    new MapColor(188, 187, 250),
                                                    new MapColor(222, 148, 48),
                                                        null,
                                                    new MapFont(),
                                                        340.6536,
                                                    new MapColor(141, 120, 206),
                                                    new MapColor(94, 235, 221),
                                                        165.8392,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        23.8187,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("PostalCode = 'M5V 1J9'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("rerum")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch)]),
                                                    648.2447,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "aut",
                                                        "voluptatibus",
                                                        "quos"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "maxime",
                                                        "et",
                                                        "unde"),
                                                    ["earum",
                                                        "voluptatem",
                                                        "placeat"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "rem",
                                                    true,
                                                LengthUnit.Inches,
                                                    30.5885,
                                                    850.3047,
                                                    245.4235,
                                                    10.9221))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("rerum ullam voluptas")"
                                            StringContent="@("ut")"
                                            OutFields="@(["recusandae",
                                                "dignissimos",
                                                "voluptatem"])"
                                            FieldInfos="@([new FieldInfo("createdAt",
                                                    "praesentium",
                                                    "nobis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.DayShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Count)])"
                                            Content="@([new TextPopupContent("dolore fugit rerum"),
                                            new TextPopupContent("vero cupiditate voluptate"),
                                            new FieldsPopupContent([new FieldInfo("createdAt",
                                                        "ipsam",
                                                        "temporibus",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("title",
                                                        "incidunt",
                                                        "praesentium",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max)],
                                                    "esse ea repellat accusantium",
                                                    "enim magnam culpa")])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                    "name",
                                                    "excepturi ut ad",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Name;",
                                                    "status",
                                                    "qui tempora ut",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("veniam eius corrupti",
                                                    "https://picsum.photos/640/480/?image=244",
                                                    "045ca37e-a3fe-a211-1b92-39e4b22046e2",
                                                    () => { Console.WriteLine("minima"); return Task.CompletedTask; },
                                                    "phone",
                                                    true,
                                                    true,
                                                    true,
                                                    "vitae"),
                                            new ActionToggle("repellendus ea quis",
                                                    "321b242c-962c-9ff4-e3fa-d25ac46069e8",
                                                    () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "category",
                                                    "delectus"),
                                            new ActionToggle("sit minima facilis",
                                                    "f6fde1e5-78a7-7abf-d59d-4b81c4aedca3",
                                                    () => { Console.WriteLine("debitis"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "password",
                                                    "placeat"),
                                            new ActionButton("et minima voluptas",
                                                    "https://picsum.photos/640/480/?image=989",
                                                    "64a00bb1-be5e-2b2d-cef3-6b421124b3d7",
                                                    () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                                    "token",
                                                    true,
                                                    true,
                                                    true,
                                                    "ratione")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterAfter)"
                                            LabelExpression="@("ut")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(3237997.2697)"
                                            MinScale="@(5013.8470)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(250.1968))"
                                            Symbol="@(new TextSymbol("quidem qui quod",
                                                new MapColor(163, 232, 218),
                                                new MapColor(26, 175, 242),
                                                    new Dimension(923.0485),
                                                new MapFont(new Dimension(633.6662),
                                                        "Garamond",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Bold,
                                                    TextDecoration.Underline),
                                                    938.7191,
                                                new MapColor(89, 248, 98),
                                                new MapColor(109, 164, 114),
                                                    594.2409,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    450.6366,
                                                    new Dimension(860.2636),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("PostalCode = 'M5V 1J9'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("aut")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(232, 181, 110),
                                                new MapColor(23, 183, 250)),
                                                637.1964,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(998.0801,
                                                        393.1781),
                                                new AuthoringInfoField1ClassBreakInfos(702.4379,
                                                        253.3741),
                                                new AuthoringInfoField1ClassBreakInfos(839.0898,
                                                        767.3708),
                                                new AuthoringInfoField1ClassBreakInfos(37.0981,
                                                        857.5027)],
                                                    "possimus",
                                                    "voluptas",
                                                    "ipsum"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(291.3140,
                                                        314.4809),
                                                new AuthoringInfoField1ClassBreakInfos(227.9441,
                                                        981.6216)],
                                                    "possimus",
                                                    "rerum",
                                                    "dolor"),
                                                ["alias",
                                                    "quia",
                                                    "saepe"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "vel",
                                                true,
                                            LengthUnit.Meters,
                                                815.3599,
                                                619.6097,
                                                841.0897,
                                                62.8384))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("repellat illo qui")"
                                        StringContent="@("voluptas")"
                                        OutFields="@(["dolorem",
                                            "inventore"])"
                                        FieldInfos="@([new FieldInfo("comment",
                                                "ea",
                                                "laboriosam",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("email",
                                                "laborum",
                                                "sapiente",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("phone",
                                                "ad",
                                                "iure",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateLe),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("status",
                                                "cupiditate",
                                                "ratione",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongMonthDayYear),
                                                true,
                                                true,
                                            StatisticType.Stddev)])"
                                        Content="@([new TextPopupContent("dicta voluptas et"),
                                        new TextPopupContent("quis eius tenetur"),
                                        new RelationshipPopupContent("tenetur deserunt et",
                                                "rerum perspiciatis deleniti neque quasi pariatur",
                                                3,
                                                "id",
                                            [new RelatedRecordsInfoFieldOrder("officia",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("consectetur",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("vero",
                                                OrderBy.Desc)],
                                                8),
                                        new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "rem",
                                                    "ut impedit quis"))])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "group",
                                                "tempora alias voluptas",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return Date();",
                                                "email",
                                                "maxime quo distinctio",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("et at accusantium",
                                                "https://picsum.photos/640/480/?image=464",
                                                "20933283-ba6c-d6ee-9901-4ed1c4ed85aa",
                                                () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                                "group",
                                                true,
                                                true,
                                                true,
                                                "dolor"),
                                        new ActionButton("enim temporibus aut",
                                                "https://picsum.photos/640/480/?image=929",
                                                "d2d1f011-2c74-35ff-f023-e0c81a78321f",
                                                () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                                "title",
                                                true,
                                                true,
                                                true,
                                                "culpa")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterAfter)"
                                        LabelExpression="@("ea")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(49356355.2479)"
                                        MinScale="@(22567.8829)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(52.4793))"
                                        Symbol="@(new TextSymbol("libero quibusdam itaque",
                                            new MapColor(29, 68, 246),
                                            new MapColor(102, 233, 198),
                                                new Dimension(467.1202),
                                            new MapFont(new Dimension(502.4250),
                                                    "Courier New",
                                                MapFontStyle.Oblique,
                                                FontWeight.Normal,
                                                TextDecoration.LineThrough),
                                                413.8778,
                                            new MapColor(107, 1, 74),
                                            new MapColor(197, 38, 187),
                                                539.6546,
                                            HorizontalAlignment.Center,
                                                true,
                                                689.0477,
                                                new Dimension(408.1794),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Province = 'Ontario'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("quia")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(161, 104, 82),
                                            new MapColor(5, 205, 157)),
                                            840.9423,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(377.2088,
                                                    746.4745),
                                            new AuthoringInfoField1ClassBreakInfos(147.9175,
                                                    756.0665),
                                            new AuthoringInfoField1ClassBreakInfos(653.2148,
                                                    408.1320)],
                                                "nihil",
                                                "soluta",
                                                "qui"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(755.6182,
                                                    745.3822),
                                            new AuthoringInfoField1ClassBreakInfos(595.1834,
                                                    100.9939),
                                            new AuthoringInfoField1ClassBreakInfos(131.3272,
                                                    252.4269)],
                                                "consequatur",
                                                "animi",
                                                "cum"),
                                            ["nisi",
                                                "perspiciatis",
                                                "deleniti"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "ut",
                                            true,
                                        LengthUnit.Inches,
                                            986.5177,
                                            164.5409,
                                            561.0327,
                                            20.5314))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("sunt tempore sequi")"
                                    StringContent="@("qui")"
                                    OutFields="@(["eligendi",
                                        "et"])"
                                    FieldInfos="@([new FieldInfo("comment",
                                            "possimus",
                                            "ut",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Stddev)])"
                                    Content="@([new AttachmentsPopupContent("non nulla accusamus",
                                            "consequatur animi dolorum et",
                                            AttachmentsPopupContentDisplayType.Preview),
                                    new MediaPopupContent("minus voluptas et",
                                            "tempore eos eius consequatur aliquam repellat",
                                        [new ImageMediaInfo("quia in explicabo",
                                                "et",
                                                "exercitationem numquam rerum",
                                            new ImageMediaInfoValue("http://alysson.org",
                                                    "http://nicole.com"),
                                                402.8509),
                                        new BarChartMediaInfo("sed sunt doloremque",
                                                "eius",
                                                "quisquam facilis iusto",
                                            new ChartMediaInfoValue(["nobis",
                                                    "dolorem",
                                                    "dolorem"],
                                                    "quo",
                                                    "expedita",
                                                [new ChartMediaInfoValueSeries("group",
                                                        "id",
                                                        683.8183),
                                                new ChartMediaInfoValueSeries("email",
                                                        "consequatur",
                                                        121.9675),
                                                new ChartMediaInfoValueSeries("group",
                                                        "facilis",
                                                        778.3077),
                                                new ChartMediaInfoValueSeries("createdAt",
                                                        "modi",
                                                        358.4982)],
                                                [new MapColor(244, 221, 182)]))],
                                            6)])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "title",
                                            "voluptatem voluptatem qui",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature['FieldName'];",
                                            "group",
                                            "aut officia facilis",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "category",
                                            "provident consequatur voluptatibus",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("qui voluptatibus et",
                                            "1ab85ce9-6b8a-cf97-d919-4da0a4e387fe",
                                            () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "group",
                                            "dolore"),
                                    new ActionToggle("similique aut velit",
                                            "769115a1-57e9-2685-665b-d2f08961632f",
                                            () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "id",
                                            "est"),
                                    new ActionButton("molestias et cupiditate",
                                            "https://picsum.photos/640/480/?image=54",
                                            "67014f74-6497-7e53-5cca-fd4d980375c4",
                                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                            "token",
                                            true,
                                            true,
                                            true,
                                            "vitae")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveAfter)"
                                    LabelExpression="@("et")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(30802166.5257)"
                                    MinScale="@(8476.4118)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(343.0223))"
                                    Symbol="@(new TextSymbol("qui quos itaque",
                                        new MapColor(163, 154, 87),
                                        new MapColor(254, 228, 201),
                                            new Dimension(339.7541),
                                        new MapFont(new Dimension(4.6406),
                                                "Times New Roman",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.Underline),
                                            460.6978,
                                        new MapColor(45, 208, 211),
                                        new MapColor(96, 107, 110),
                                            248.6447,
                                        HorizontalAlignment.Center,
                                            true,
                                            141.8613,
                                            new Dimension(156.4482),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Phone = '555-555-5555'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("repudiandae")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-121.7717,
                    30.0131,
                    11.2873,
                    -33.4057,
                    858.2456,
                    303.7384,
                    631.4039,
                    245.2971,
                new SpatialReference(9,
                        "est",
                        "totam",
                        "beatae"),
                    true,
                    true),
                3,
                2,
            new MapImageLayerCreateExportImageParametersOptions(808.2110,
                    66.0936,
                    "atque"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-46.3262,
                    -176.9345,
                    -69.6726,
                    -35.3373,
                    130.6359,
                    396.1463,
                    380.2001,
                    46.3295,
                new SpatialReference(8,
                        "dolorum",
                        "in",
                        "vitae"),
                    true,
                    true),
                2,
                9,
            new MapImageLayerFetchImageOptions(452.0728,
                    191.4582,
                    "sint"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.DestinationIn;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2015, 6, 5, 6, 38, 28),
                    new DateTime(2020, 1, 1, 6, 54, 3));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("qui",
                    "labore",
                new TimeExtent(new DateTime(2019, 10, 12, 0, 0, 55),
                        new DateTime(2022, 5, 20, 7, 45, 21)),
                new TimeInterval(TemporalTime.Decades,
                        367.2105),
                    [new DateTime(2002, 3, 3, 21, 27, 45),
                        new DateTime(2012, 5, 26, 7, 10, 50),
                        new DateTime(2008, 6, 17, 18, 43, 34)],
                    "Europe/Dublin",
                    "voluptate");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(3,
                    true,
                    true,
                ListMode.Show,
                    3916001.3895,
                    15669.4814,
                    0.0433,
                    true,
                    "maiores exercitationem animi",
                    true,
                    "sapiente",
                new LayerFloorInfo("ut"),
                [new Label(LabelPlacement.AboveEnd,
                        "tempora",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        23532222.3900,
                        5628.8232,
                        true,
                        new Dimension(817.1272),
                    new TextSymbol("rerum ab ullam",
                        new MapColor(146, 155, 145),
                        new MapColor(10, 103, 149),
                            new Dimension(38.5224),
                        new MapFont(new Dimension(612.7167),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            695.2358,
                        new MapColor(185, 149, 198),
                        new MapColor(64, 35, 78),
                            537.2758,
                        HorizontalAlignment.Right,
                            true,
                            387.9100,
                            new Dimension(705.0456),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.BelowCenter,
                        "sed",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        4960680.7108,
                        23414.5657,
                        true,
                        new Dimension(865.4150),
                    new TextSymbol("consequatur ea nam",
                        new MapColor(81, 76, 54),
                        new MapColor(54, 7, 156),
                            new Dimension(314.9409),
                        new MapFont(new Dimension(655.5430),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            466.8352,
                        new MapColor(204, 168, 173),
                        new MapColor(51, 110, 196),
                            717.4778,
                        HorizontalAlignment.Right,
                            true,
                            806.3959,
                            new Dimension(531.0682),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("architecto vero qui",
                        "modi",
                        ["et",
                            "nostrum",
                            "et"],
                    [new FieldInfo("password",
                            "aspernatur",
                            "omnis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("updatedAt",
                            "aut",
                            "praesentium",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("category",
                            "perspiciatis",
                            "eum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new MediaPopupContent("et consequatur debitis",
                            "enim facilis asperiores provident nobis",
                        [new LineChartMediaInfo("assumenda consequuntur ipsa",
                                "harum",
                                "a asperiores a",
                            new ChartMediaInfoValue(["maxime",
                                    "eum"],
                                    "dolorem",
                                    "sapiente",
                                [new ChartMediaInfoValueSeries("category",
                                        "consequatur",
                                        552.2926)],
                                [new MapColor(102, 33, 247),
                                new MapColor(94, 51, 122),
                                new MapColor(23, 48, 151)])),
                        new LineChartMediaInfo("itaque nihil quis",
                                "nihil",
                                "illum beatae et",
                            new ChartMediaInfoValue(["quo",
                                    "et",
                                    "et"],
                                    "ducimus",
                                    "eaque",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "tempore",
                                        692.1494),
                                new ChartMediaInfoValueSeries("password",
                                        "maiores",
                                        805.9110),
                                new ChartMediaInfoValueSeries("password",
                                        "voluptas",
                                        84.7864)],
                                [new MapColor(104, 236, 162),
                                new MapColor(124, 186, 240),
                                new MapColor(232, 6, 196),
                                new MapColor(50, 81, 228)])),
                        new LineChartMediaInfo("vel tempora unde",
                                "occaecati",
                                "accusamus enim amet",
                            new ChartMediaInfoValue(["officiis",
                                    "illo",
                                    "error",
                                    "qui"],
                                    "at",
                                    "assumenda",
                                [new ChartMediaInfoValueSeries("name",
                                        "blanditiis",
                                        718.6981),
                                new ChartMediaInfoValueSeries("createdAt",
                                        "eum",
                                        382.3207),
                                new ChartMediaInfoValueSeries("token",
                                        "aspernatur",
                                        972.1267)],
                                [new MapColor(54, 45, 78)])),
                        new PieChartMediaInfo("aut impedit expedita",
                                "enim",
                                "a ut dolore",
                            new ChartMediaInfoValue(["laudantium",
                                    "qui"],
                                    "repudiandae",
                                    "quo",
                                [new ChartMediaInfoValueSeries("id",
                                        "voluptatem",
                                        499.2642),
                                new ChartMediaInfoValueSeries("comment",
                                        "pariatur",
                                        48.8808),
                                new ChartMediaInfoValueSeries("comment",
                                        "iure",
                                        346.2176),
                                new ChartMediaInfoValueSeries("password",
                                        "beatae",
                                        478.1062)],
                                [new MapColor(0, 172, 163),
                                new MapColor(199, 126, 159),
                                new MapColor(205, 141, 87),
                                new MapColor(38, 22, 64)]))],
                            1),
                    new TextPopupContent("vel quo reiciendis")],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "id",
                            "qui voluptatem accusantium",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "token",
                            "et et iusto",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("non exercitationem id",
                            "55e35dc6-4132-43b5-1d19-cbdddcbcf694",
                            () => { Console.WriteLine("saepe"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "enim"),
                    new ActionToggle("distinctio dolore omnis",
                            "b9943d0f-23ff-999a-8cfc-f6c91c72e602",
                            () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "qui"),
                    new ActionToggle("doloribus aliquam asperiores",
                            "2b53c0c2-fbdb-454b-5d77-a2244b961e8e",
                            () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "nemo"),
                    new ActionToggle("in sed modi",
                            "b90fe824-a095-3729-508a-0c88fc8ba424",
                            () => { Console.WriteLine("in"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "dicta")])),
            new Sublayer(3,
                    true,
                    true,
                ListMode.Hide,
                    39967876.4148,
                    43030.7050,
                    0.8236,
                    true,
                    "inventore harum eligendi",
                    true,
                    "voluptate",
                new LayerFloorInfo("quasi"),
                [new Label(LabelPlacement.AlwaysHorizontal,
                        "sint",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        12223215.1659,
                        1338.0516,
                        true,
                        new Dimension(108.2061),
                    new TextSymbol("sint voluptates ut",
                        new MapColor(73, 9, 55),
                        new MapColor(156, 95, 88),
                            new Dimension(77.2396),
                        new MapFont(new Dimension(65.2761),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            786.1385,
                        new MapColor(16, 220, 6),
                        new MapColor(109, 110, 131),
                            270.0872,
                        HorizontalAlignment.Right,
                            true,
                            153.7293,
                            new Dimension(376.9291),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.BelowEnd,
                        "nam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        31629819.0770,
                        19488.6676,
                        true,
                        new Dimension(701.5036),
                    new TextSymbol("nobis aut atque",
                        new MapColor(82, 185, 112),
                        new MapColor(32, 77, 69),
                            new Dimension(904.4504),
                        new MapFont(new Dimension(452.9497),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            65.5318,
                        new MapColor(84, 28, 218),
                        new MapColor(43, 229, 54),
                            606.3125,
                        HorizontalAlignment.Left,
                            true,
                            860.6636,
                            new Dimension(867.9644),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterAlong,
                        "amet",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        40013269.4479,
                        7269.7780,
                        true,
                        new Dimension(123.6951),
                    new TextSymbol("voluptas rem corporis",
                        new MapColor(93, 15, 178),
                        new MapColor(159, 140, 227),
                            new Dimension(705.3426),
                        new MapFont(new Dimension(0.5603),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            634.6714,
                        new MapColor(155, 69, 168),
                        new MapColor(8, 104, 38),
                            783.1921,
                        HorizontalAlignment.Center,
                            true,
                            241.7027,
                            new Dimension(774.3818),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("soluta nobis non",
                        "aliquam",
                        ["magni",
                            "placeat"],
                    [new FieldInfo("id",
                            "tenetur",
                            "cupiditate",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("name",
                            "rem",
                            "qui",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new TextPopupContent("minus est non"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                "veritatis",
                                "ut itaque nostrum")),
                    new AttachmentsPopupContent("doloremque libero pariatur",
                            "excepturi voluptas rem sequi id",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "email",
                            "fugit magnam cumque",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("sequi similique pariatur",
                            "7f3bc43d-cfc6-1ee4-6f16-54f96b01c164",
                            () => { Console.WriteLine("delectus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "tempora"),
                    new ActionToggle("doloremque non autem",
                            "7b6bbaa3-8ff0-3a04-1365-e7dbf1727e6f",
                            () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "nesciunt"),
                    new ActionToggle("doloremque laboriosam aut",
                            "d1a99995-a8cd-3b06-201a-d1bc8d92bcf2",
                            () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "quis")])),
            new Sublayer(4,
                    true,
                    true,
                ListMode.Show,
                    30938434.1680,
                    15647.0242,
                    0.0348,
                    true,
                    "ea qui ab",
                    true,
                    "doloremque",
                new LayerFloorInfo("vero"),
                [new Label(LabelPlacement.AboveAlong,
                        "amet",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        13964486.6636,
                        22739.8384,
                        true,
                        new Dimension(899.0939),
                    new TextSymbol("dicta in qui",
                        new MapColor(243, 124, 148),
                        new MapColor(225, 31, 20),
                            new Dimension(467.3801),
                        new MapFont(new Dimension(892.4588),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            560.0024,
                        new MapColor(85, 30, 245),
                        new MapColor(223, 194, 26),
                            613.1396,
                        HorizontalAlignment.Center,
                            true,
                            987.7796,
                            new Dimension(35.0375),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterAlong,
                        "voluptatem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        41914248.9256,
                        2455.9615,
                        true,
                        new Dimension(635.3316),
                    new TextSymbol("nemo quia aut",
                        new MapColor(252, 167, 206),
                        new MapColor(141, 176, 187),
                            new Dimension(47.3612),
                        new MapFont(new Dimension(601.4480),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            588.0534,
                        new MapColor(29, 60, 124),
                        new MapColor(1, 73, 196),
                            80.4205,
                        HorizontalAlignment.Right,
                            true,
                            46.4792,
                            new Dimension(861.3517),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.CenterCenter,
                        "eveniet",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        49168832.2776,
                        25004.8835,
                        true,
                        new Dimension(738.3922),
                    new TextSymbol("enim et similique",
                        new MapColor(197, 116, 91),
                        new MapColor(39, 217, 244),
                            new Dimension(871.0295),
                        new MapFont(new Dimension(458.5735),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            519.0487,
                        new MapColor(163, 83, 240),
                        new MapColor(95, 150, 110),
                            587.7630,
                        HorizontalAlignment.Left,
                            true,
                            607.6076,
                            new Dimension(618.9804),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.BelowLeft,
                        "quod",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        28966494.2312,
                        30644.9536,
                        true,
                        new Dimension(260.9829),
                    new TextSymbol("harum delectus sapiente",
                        new MapColor(205, 175, 11),
                        new MapColor(254, 140, 71),
                            new Dimension(959.5642),
                        new MapFont(new Dimension(150.4438),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            664.4571,
                        new MapColor(54, 4, 39),
                        new MapColor(48, 23, 253),
                            727.7041,
                        HorizontalAlignment.Left,
                            true,
                            479.9781,
                            new Dimension(365.6013),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("architecto aliquid tempore",
                        "nesciunt",
                        ["natus",
                            "tenetur",
                            "unde"],
                    [new FieldInfo("id",
                            "minus",
                            "officiis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new AttachmentsPopupContent("dicta ut dolores",
                            "minima dolore rerum tempore ut quibusdam unde",
                            AttachmentsPopupContentDisplayType.Auto),
                    new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                "tempore",
                                "qui maiores aut")),
                    new MediaPopupContent("placeat fugit velit",
                            "ab dignissimos quos explicabo",
                        [new BarChartMediaInfo("beatae qui sed",
                                "incidunt",
                                "omnis sapiente placeat",
                            new ChartMediaInfoValue(["aut",
                                    "qui"],
                                    "veritatis",
                                    "ab",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "facere",
                                        829.4578)],
                                [new MapColor(81, 53, 114),
                                new MapColor(249, 9, 193),
                                new MapColor(251, 12, 246)]))],
                            5)],
                    [new ExpressionInfo("return Date();",
                            "category",
                            "natus sint ducimus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "status",
                            "molestiae est exercitationem",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("quia alias facilis",
                            "https://picsum.photos/640/480/?image=111",
                            "7cc36875-f16e-8e41-6419-c4f6eb2bf347",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "unde"),
                    new ActionToggle("enim nulla eum",
                            "0e3aec1e-2e96-eb30-9df9-8ff8311a33db",
                            () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "similique")])),
            new Sublayer(4,
                    true,
                    true,
                ListMode.Show,
                    10444828.0344,
                    23482.2496,
                    0.7687,
                    true,
                    "repellat molestiae at",
                    true,
                    "amet",
                new LayerFloorInfo("architecto"),
                [new Label(LabelPlacement.AboveBefore,
                        "sunt",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        15727455.3122,
                        29314.1734,
                        true,
                        new Dimension(701.9957),
                    new TextSymbol("quibusdam voluptas et",
                        new MapColor(167, 15, 143),
                        new MapColor(246, 59, 215),
                            new Dimension(203.8704),
                        new MapFont(new Dimension(546.8584),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            351.3066,
                        new MapColor(186, 205, 172),
                        new MapColor(4, 121, 187),
                            304.3188,
                        HorizontalAlignment.Center,
                            true,
                            527.7929,
                            new Dimension(733.1620),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.AboveLeft,
                        "fuga",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        42200134.8719,
                        40727.9835,
                        true,
                        new Dimension(229.3728),
                    new TextSymbol("autem aut adipisci",
                        new MapColor(15, 45, 3),
                        new MapColor(201, 173, 160),
                            new Dimension(103.3265),
                        new MapFont(new Dimension(116.0141),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            467.5448,
                        new MapColor(28, 80, 236),
                        new MapColor(5, 124, 240),
                            566.0610,
                        HorizontalAlignment.Right,
                            true,
                            857.2783,
                            new Dimension(253.3780),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.CenterAfter,
                        "nisi",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        46649728.9913,
                        35862.1144,
                        true,
                        new Dimension(335.6783),
                    new TextSymbol("accusantium debitis adipisci",
                        new MapColor(109, 99, 233),
                        new MapColor(32, 20, 62),
                            new Dimension(86.7612),
                        new MapFont(new Dimension(334.2858),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            288.0402,
                        new MapColor(81, 105, 222),
                        new MapColor(165, 121, 12),
                            967.1565,
                        HorizontalAlignment.Right,
                            true,
                            585.7099,
                            new Dimension(897.0165),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("voluptates atque suscipit",
                        "molestiae",
                        ["nam",
                            "rem",
                            "ut",
                            "et"],
                    [new FieldInfo("status",
                            "quae",
                            "inventore",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("id",
                            "sunt",
                            "non",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("group",
                            "dolores",
                            "placeat",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("updatedAt",
                            "expedita",
                            "illum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new AttachmentsPopupContent("amet et expedita",
                            "nostrum et vitae cum",
                            AttachmentsPopupContentDisplayType.Auto),
                    new RelationshipPopupContent("labore saepe eaque",
                            "accusamus architecto quo aut minima sunt",
                            5,
                            "consequatur",
                        [new RelatedRecordsInfoFieldOrder("libero",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("iste",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("distinctio",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("dicta",
                            OrderBy.Desc)],
                            8),
                    new FieldsPopupContent([new FieldInfo("token",
                                "nam",
                                "inventore",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("avatar",
                                "repellendus",
                                "sit",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("category",
                                "tempora",
                                "illum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Avg)],
                            "deleniti praesentium eos temporibus",
                            "distinctio fugiat amet")],
                    [new ExpressionInfo("return Date();",
                            "category",
                            "qui est fugit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "status",
                            "odit et facere",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "title",
                            "est reprehenderit aperiam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("rem eaque dolores",
                            "https://picsum.photos/640/480/?image=749",
                            "f121377f-f526-af5d-883f-705dd80d7afa",
                            () => { Console.WriteLine("eius"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "sunt"),
                    new ActionButton("qui sapiente optio",
                            "https://picsum.photos/640/480/?image=94",
                            "dc3d4e75-9c5e-a613-1078-cca6b6ec077e",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "modi"),
                    new ActionButton("nemo voluptas distinctio",
                            "https://picsum.photos/640/480/?image=1027",
                            "b94bd433-ac28-5d5e-fbfd-ec27fbdcbbd6",
                            () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "error")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(27.3824,
                    -86.1390,
                    -48.6059,
                    -25.0102,
                    797.7907,
                    536.0929,
                    838.2853,
                    828.6767,
                new SpatialReference(9,
                        "est",
                        "cum",
                        "harum"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(4,
                    true,
                    true,
                ListMode.Show,
                    20515525.5377,
                    40402.8993,
                    0.8854,
                    true,
                    "illo neque eos",
                    true,
                    "doloribus",
                new LayerFloorInfo("placeat"),
                [new Label(LabelPlacement.BelowAfter,
                        "maxime",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        20115738.2817,
                        43856.7085,
                        true,
                        new Dimension(617.4319),
                    new TextSymbol("eum ducimus voluptas",
                        new MapColor(155, 132, 166),
                        new MapColor(100, 69, 150),
                            new Dimension(144.8918),
                        new MapFont(new Dimension(993.2620),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            923.2890,
                        new MapColor(143, 4, 69),
                        new MapColor(20, 17, 13),
                            39.8942,
                        HorizontalAlignment.Left,
                            true,
                            438.1979,
                            new Dimension(668.5846),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AboveStart,
                        "delectus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        23547407.6382,
                        32894.9683,
                        true,
                        new Dimension(227.2878),
                    new TextSymbol("est deserunt dolor",
                        new MapColor(46, 106, 142),
                        new MapColor(139, 5, 17),
                            new Dimension(164.9361),
                        new MapFont(new Dimension(746.3414),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            945.9342,
                        new MapColor(23, 59, 33),
                        new MapColor(8, 59, 244),
                            753.5071,
                        HorizontalAlignment.Center,
                            true,
                            864.3115,
                            new Dimension(904.0258),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.AboveBefore,
                        "incidunt",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        13481323.7154,
                        24678.3132,
                        true,
                        new Dimension(484.8945),
                    new TextSymbol("id cupiditate in",
                        new MapColor(71, 76, 194),
                        new MapColor(20, 150, 89),
                            new Dimension(803.7401),
                        new MapFont(new Dimension(426.4209),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            622.5473,
                        new MapColor(252, 20, 201),
                        new MapColor(93, 146, 31),
                            970.7396,
                        HorizontalAlignment.Right,
                            true,
                            913.3063,
                            new Dimension(17.8163),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("voluptatem aut aliquam",
                        "odit",
                        ["perspiciatis",
                            "et",
                            "voluptatem",
                            "et"],
                    [new FieldInfo("title",
                            "soluta",
                            "eveniet",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("updatedAt",
                            "error",
                            "eveniet",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Min)],
                    [new TextPopupContent("odio eos mollitia"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "deserunt",
                                "est reprehenderit recusandae")),
                    new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "minus",
                                "aut in eligendi"))],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "title",
                            "occaecati inventore et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("quos et minus",
                            "https://picsum.photos/640/480/?image=136",
                            "a1a9605e-f021-8d4c-d2e8-0ff651e0d2ca",
                            () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "illum"),
                    new ActionButton("molestiae sapiente id",
                            "https://picsum.photos/640/480/?image=297",
                            "8cffa2bb-2291-92fc-3e41-d87f7ebce27e",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "consequatur"),
                    new ActionToggle("similique quia quaerat",
                            "2f3f82d6-41b5-8568-6a0b-6396834eebf7",
                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "praesentium")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Centuries,
                    148.5895);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2004, 4, 9, 3, 55, 0),
                    new DateTime(2020, 11, 11, 15, 11, 33));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
