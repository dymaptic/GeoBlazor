@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Invert)"
                        Dpi="@(245.5718)"
                        Effect="@(new Effect("minus",
                            10417199.0955))"
                        GdbVersion="@("4.8.5.7")"
                        ImageFormat="@(MapImageFormat.Png32)"
                        ImageMaxHeight="@(9)"
                        ImageMaxWidth="@(4)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(23426822.7809)"
                        MinScale="@(36228.5870)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(169.0660)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.3882)"
                        Copyright="@("voluptatem")"
                        FullExtent="@(new Extent(50.0767,
                                153.3433,
                                -78.1203,
                                -82.7495,
                                880.5699,
                                72.4904,
                                317.6024,
                                889.0399,
                            new SpatialReference(3,
                                    "quia",
                                    "neque",
                                    "non"),
                                true,
                                true))"
                        Title="@("nisi officia voluptas")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Hours)"
                            Value="@(914.5291)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("et")"
                            EndField="@("est")"
                            Stops="@([new DateTime(2009, 5, 8, 7, 43, 28),
                                new DateTime(2007, 6, 15, 5, 26, 22)])"
                            TimeZone="@("Asia/Kamchatka")"
                            TrackIdField="@("nesciunt")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Decades)"
                                Value="@(821.6772)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2016, 11, 12, 5, 9, 44))"
                                End="@(new DateTime(2010, 5, 20, 3, 57, 54))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2023, 1, 18, 9, 5, 17))"
                            End="@(new DateTime(2013, 11, 4, 7, 55, 55))">
                        </TimeExtent>
                        <Sublayer 
                            SublayerId="@(5)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(20752328.7259)"
                            MinScale="@(25772.5293)"
                            Opacity="@(0.7383)"
                            PopupEnabled="@(true)"
                            Title="@("quos illum et")"
                            Visible="@(true)"
                            DefinitionExpression="@("inventore")"
                            FloorInfo="@(new LayerFloorInfo("sapiente"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterLeft,
                                    "numquam",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    40728907.4528,
                                    20725.7733,
                                    true,
                                    new Dimension(847.6495),
                                new TextSymbol("nihil et officia",
                                    new MapColor(153, 227, 155),
                                    new MapColor(169, 0, 86),
                                        new Dimension(204.5443),
                                    new MapFont(new Dimension(358.6449),
                                            "Arial",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        918.7685,
                                    new MapColor(243, 154, 13),
                                    new MapColor(134, 247, 61),
                                        875.2163,
                                    HorizontalAlignment.Right,
                                        true,
                                        36.7377,
                                        new Dimension(833.4039),
                                        true),
                                    true,
                                    "ObjectID = 1"),
                            new Label(LabelPlacement.BelowEnd,
                                    "repellendus",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    18002018.5865,
                                    21023.8332,
                                    true,
                                    new Dimension(525.1200),
                                new TextSymbol("excepturi est ut",
                                    new MapColor(113, 30, 161),
                                    new MapColor(85, 111, 156),
                                        new Dimension(454.7025),
                                    new MapFont(new Dimension(955.2171),
                                            "Palatino",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        713.0162,
                                    new MapColor(103, 166, 199),
                                    new MapColor(92, 222, 188),
                                        895.2654,
                                    HorizontalAlignment.Center,
                                        true,
                                        27.8921,
                                        new Dimension(76.9788),
                                        true),
                                    true,
                                    "Province = 'Ontario'"),
                            new Label(LabelPlacement.BelowBefore,
                                    "sunt",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    47343809.3727,
                                    9653.8261,
                                    true,
                                    new Dimension(37.1483),
                                new TextSymbol("quia eos voluptatibus",
                                    new MapColor(100, 168, 217),
                                    new MapColor(81, 74, 35),
                                        new Dimension(974.5904),
                                    new MapFont(new Dimension(822.8026),
                                            "Bookman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        300.0453,
                                    new MapColor(36, 208, 222),
                                    new MapColor(220, 69, 59),
                                        140.0954,
                                    HorizontalAlignment.Left,
                                        true,
                                        260.8133,
                                        new Dimension(85.4791),
                                        true),
                                    true,
                                    "1 = 1"),
                            new Label(LabelPlacement.CenterStart,
                                    "ut",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    15049733.4842,
                                    19678.5026,
                                    true,
                                    new Dimension(485.2668),
                                new TextSymbol("eum harum est",
                                    new MapColor(73, 164, 103),
                                    new MapColor(40, 180, 17),
                                        new Dimension(580.1633),
                                    new MapFont(new Dimension(802.3778),
                                            "Times New Roman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        92.8123,
                                    new MapColor(181, 116, 101),
                                    new MapColor(66, 147, 68),
                                        699.4968,
                                    HorizontalAlignment.Left,
                                        true,
                                        959.5458,
                                        new Dimension(977.5676),
                                        true),
                                    true,
                                    "Province = 'Ontario'")])"
                            PopupTemplate="@(new PopupTemplate("molestiae molestiae est",
                                    "consequuntur",
                                    ["ut",
                                        "incidunt",
                                        "enim",
                                        "reiciendis"],
                                [new FieldInfo("createdAt",
                                        "aspernatur",
                                        "veritatis",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("comment",
                                        "esse",
                                        "corrupti",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                [new AttachmentsPopupContent("similique at magni",
                                        "aut non beatae vel qui",
                                        AttachmentsPopupContentDisplayType.Preview),
                                new TextPopupContent("quam distinctio veniam"),
                                new AttachmentsPopupContent("quisquam incidunt nemo",
                                        "aut est qui labore",
                                        AttachmentsPopupContentDisplayType.Preview)],
                                [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "email",
                                        "aliquid laudantium tenetur",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "comment",
                                        "vel amet natus",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "email",
                                        "asperiores natus qui",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "group",
                                        "et atque et",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("placeat voluptate accusantium",
                                        "https://picsum.photos/640/480/?image=424",
                                        "ae8a978f-7827-15c5-04de-4168f73e2cbd",
                                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                        "name",
                                        true,
                                        true,
                                        true,
                                        "atque")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("est repellat est",
                                    new MapColor(238, 132, 199),
                                    new MapColor(79, 163, 147),
                                        new Dimension(784.1535),
                                    new MapFont(new Dimension(681.8436),
                                            "Bookman",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        154.2377,
                                    new MapColor(109, 238, 226),
                                    new MapColor(94, 221, 83),
                                        700.2214,
                                    HorizontalAlignment.Right,
                                        true,
                                        505.8170,
                                        new Dimension(911.8743),
                                        true),
                                    "consequatur",
                                [new RotationVariable("ut",
                                    Axis.Tilt,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "totam deserunt ea"),
                                        "ea",
                                        "quia quia voluptas"),
                                new RotationVariable("magnam",
                                    Axis.Tilt,
                                    RotationType.Arithmetic,
                                    new VisualVariableLegendOptions(true,
                                            "eos ea voluptas"),
                                        "aliquam",
                                        "quam eaque neque")],
                                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(58, 139, 160),
                                        new MapColor(85, 13, 27)),
                                        466.9964,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(505.7693,
                                                371.4924),
                                        new AuthoringInfoField1ClassBreakInfos(641.7747,
                                                370.2575)],
                                            "debitis",
                                            "et",
                                            "error"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(810.4069,
                                                12.5047)],
                                            "quaerat",
                                            "magnam",
                                            "voluptate"),
                                        ["nihil",
                                            "temporibus",
                                            "ut"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "repudiandae",
                                        true,
                                    LengthUnit.NauticalMiles,
                                        442.1639,
                                        389.0271,
                                        818.8040,
                                        735.3625)))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(8)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(32483046.0337)"
                                MinScale="@(44897.8315)"
                                Opacity="@(0.5469)"
                                PopupEnabled="@(true)"
                                Title="@("occaecati recusandae consectetur")"
                                Visible="@(true)"
                                DefinitionExpression="@("neque")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(4)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(25912892.4302)"
                                    MinScale="@(32665.0307)"
                                    Opacity="@(0.4760)"
                                    PopupEnabled="@(true)"
                                    Title="@("consectetur eligendi molestias")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("quidem")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(3)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(12190038.9717)"
                                        MinScale="@(29687.7789)"
                                        Opacity="@(0.1821)"
                                        PopupEnabled="@(true)"
                                        Title="@("error rerum et")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("non")"
                                        Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(4)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(7158430.6220)"
                                            MinScale="@(41111.6469)"
                                            Opacity="@(0.0080)"
                                            PopupEnabled="@(true)"
                                            Title="@("qui sapiente sed")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("sunt")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(2)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(16253000.6453)"
                                                MinScale="@(11138.2408)"
                                                Opacity="@(0.4121)"
                                                PopupEnabled="@(true)"
                                                Title="@("aliquid quis asperiores")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("quam")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(8)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(34496588.9491)"
                                                    MinScale="@(30767.7960)"
                                                    Opacity="@(0.8469)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("quasi quod est")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("consectetur")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("a saepe mollitia")"
                                                        StringContent="@("non")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("ut")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("praesentium nemo delectus")"
                                                    StringContent="@("id")"
                                                    OutFields="@(["aut",
                                                        "consequatur"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new RelationshipPopupContent(),
                                                    new MediaPopupContent(),
                                                    new AttachmentsPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "c82b3315-697e-032b-34d8-81198f0a50de",
                                                            () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "f5722542-b98e-30d3-a237-04f933f91b3b",
                                                            () => { Console.WriteLine("natus"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "8c9a0b19-efb7-35c4-a927-87f46476e8b5",
                                                            () => { Console.WriteLine("provident"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterBefore)"
                                                    LabelExpression="@("quo")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(48063450.0145)"
                                                    MinScale="@(37982.9307)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(64.5600))"
                                                    Symbol="@(new TextSymbol("ut nulla itaque"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("1 = 1")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("aut")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                    new MultipartColorRamp(),
                                                        869.5689,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["nulla",
                                                            "saepe"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "iusto",
                                                        true,
                                                    LengthUnit.Decimeters,
                                                        665.0802,
                                                        959.1354,
                                                        985.5950,
                                                        104.3493))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("aperiam saepe ex")"
                                                StringContent="@("nihil")"
                                                OutFields="@(["enim",
                                                    "eius",
                                                    "eaque",
                                                    "minima"])"
                                                FieldInfos="@([new FieldInfo("id",
                                                        "quaerat",
                                                        "qui",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min),
                                                new FieldInfo("id",
                                                        "rerum",
                                                        "delectus",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min),
                                                new FieldInfo("name",
                                                        "et",
                                                        "sunt",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("avatar",
                                                        "aliquam",
                                                        "ut",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var)])"
                                                Content="@([new MediaPopupContent("ullam animi tempora",
                                                        "quos rem voluptatem blanditiis",
                                                    [new BarChartMediaInfo(),
                                                    new ColumnChartMediaInfo()],
                                                        4)])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                        "updatedAt",
                                                        "sed id aut"),
                                                new ExpressionInfo("return Date();",
                                                        "comment",
                                                        "enim dolor dolore"),
                                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "status",
                                                        "eum ipsum quos"),
                                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "phone",
                                                        "aliquid assumenda delectus")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("ex sunt fugiat",
                                                        "https://picsum.photos/640/480/?image=308",
                                                        "9e7c8cfb-10b2-8337-ac5e-e0be51b96a19",
                                                        () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                                        "comment",
                                                        true,
                                                        true,
                                                        true,
                                                        "incidunt"),
                                                new ActionToggle("doloremque sit laudantium",
                                                        "371e3b31-9bf4-ac0b-560f-d4d6d25b9818",
                                                        () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "group",
                                                        "aliquam"),
                                                new ActionButton("harum deserunt iste",
                                                        "https://picsum.photos/640/480/?image=625",
                                                        "a4c14b8e-24ec-de29-be5d-001d9abf1f12",
                                                        () => { Console.WriteLine("fugiat"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "a")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveCenter)"
                                                LabelExpression="@("et")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(21910373.0161)"
                                                MinScale="@(21353.8990)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(531.5910))"
                                                Symbol="@(new TextSymbol("necessitatibus expedita commodi",
                                                    new MapColor(161, 238, 58),
                                                    new MapColor(135, 34, 21),
                                                        null,
                                                    new MapFont(),
                                                        763.8732,
                                                    new MapColor(176, 224, 199),
                                                    new MapColor(68, 208, 195),
                                                        577.7743,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        169.9527,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("City = 'Toronto'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("tempora")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(96, 77, 122),
                                                    new MapColor(58, 53, 156)),
                                                    278.9271,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "porro",
                                                        "placeat",
                                                        "voluptatem"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "pariatur",
                                                        "explicabo",
                                                        "blanditiis"),
                                                    ["velit",
                                                        "quisquam",
                                                        "quia",
                                                        "saepe"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "aut",
                                                    true,
                                                LengthUnit.Centimeters,
                                                    806.1419,
                                                    830.5931,
                                                    317.9906,
                                                    488.7887))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("molestiae sit occaecati")"
                                            StringContent="@("recusandae")"
                                            OutFields="@(["soluta",
                                                "quis",
                                                "mollitia"])"
                                            FieldInfos="@([new FieldInfo("createdAt",
                                                    "accusamus",
                                                    "molestiae",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("updatedAt",
                                                    "et",
                                                    "non",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Count)])"
                                            Content="@([new AttachmentsPopupContent("omnis culpa voluptatibus",
                                                    "dolor sint perspiciatis tempore eos corporis dignissimos",
                                                    AttachmentsPopupContentDisplayType.Auto),
                                            new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                                        "et",
                                                        "iusto tempora velit")),
                                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "autem",
                                                        "animi est quidem"))])"
                                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "password",
                                                    "inventore aspernatur et",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("et et sed",
                                                    "f7074bda-731f-5a57-9f90-8fb1a9956a40",
                                                    () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "updatedAt",
                                                    "error"),
                                            new ActionButton("rerum provident aliquam",
                                                    "https://picsum.photos/640/480/?image=311",
                                                    "a053e188-7c19-87de-b12b-95cde35c889e",
                                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                    "createdAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "totam")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveEnd)"
                                            LabelExpression="@("minus")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(16854252.1353)"
                                            MinScale="@(13720.5469)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(821.3822))"
                                            Symbol="@(new TextSymbol("et eaque quisquam",
                                                new MapColor(162, 177, 232),
                                                new MapColor(130, 121, 129),
                                                    new Dimension(109.4350),
                                                new MapFont(new Dimension(388.8435),
                                                        "Palatino",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Bold,
                                                    TextDecoration.Underline),
                                                    2.2497,
                                                new MapColor(139, 80, 201),
                                                new MapColor(105, 221, 128),
                                                    401.8316,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    528.1674,
                                                    new Dimension(5.7073),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Street = '123 Main St.'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("autem")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(149, 37, 180),
                                                new MapColor(191, 97, 83)),
                                                332.4943,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(721.6490,
                                                        763.9661),
                                                new AuthoringInfoField1ClassBreakInfos(651.2485,
                                                        627.8131),
                                                new AuthoringInfoField1ClassBreakInfos(150.0013,
                                                        178.4353),
                                                new AuthoringInfoField1ClassBreakInfos(863.5287,
                                                        338.9367)],
                                                    "iure",
                                                    "quidem",
                                                    "itaque"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(324.8045,
                                                        886.5578),
                                                new AuthoringInfoField1ClassBreakInfos(775.2561,
                                                        729.9527),
                                                new AuthoringInfoField1ClassBreakInfos(630.3027,
                                                        861.0950)],
                                                    "animi",
                                                    "molestiae",
                                                    "sit"),
                                                ["sed",
                                                    "facilis"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "atque",
                                                true,
                                            LengthUnit.Miles,
                                                418.9043,
                                                641.4311,
                                                552.4350,
                                                497.0839))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("est maiores aliquid")"
                                        StringContent="@("rerum")"
                                        OutFields="@(["quia",
                                            "vero",
                                            "est"])"
                                        FieldInfos="@([new FieldInfo("status",
                                                "qui",
                                                "nobis",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Count)])"
                                        Content="@([new FieldsPopupContent([new FieldInfo("password",
                                                    "quo",
                                                    "facere",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.ShortDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("email",
                                                    "necessitatibus",
                                                    "molestiae",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.LongDate),
                                                    true,
                                                    true,
                                                StatisticType.Avg)],
                                                "natus eum alias commodi sunt",
                                                "incidunt at aut"),
                                        new AttachmentsPopupContent("aliquid eos modi",
                                                "vel praesentium alias illo",
                                                AttachmentsPopupContentDisplayType.Auto)])"
                                        ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                "id",
                                                "aliquam vel aut",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "group",
                                                "enim voluptatum dolor",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "updatedAt",
                                                "exercitationem et molestias",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("officiis nostrum voluptatem",
                                                "2520ac8c-65a4-3d5a-7c3d-4d2f13f84781",
                                                () => { Console.WriteLine("maiores"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "group",
                                                "veniam"),
                                        new ActionToggle("animi qui eos",
                                                "8e23188e-bed4-9608-c383-ff6e356d8313",
                                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "id",
                                                "nam"),
                                        new ActionButton("dolorem asperiores nostrum",
                                                "https://picsum.photos/640/480/?image=698",
                                                "323420bc-172b-50c5-5ba8-ce67574b3db6",
                                                () => { Console.WriteLine("amet"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "et")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.BelowStart)"
                                        LabelExpression="@("et")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(23132004.6413)"
                                        MinScale="@(23434.9683)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(777.0926))"
                                        Symbol="@(new TextSymbol("quod eligendi nihil",
                                            new MapColor(193, 53, 220),
                                            new MapColor(5, 181, 251),
                                                new Dimension(680.1491),
                                            new MapFont(new Dimension(711.7460),
                                                    "Times New Roman",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                586.0520,
                                            new MapColor(69, 174, 36),
                                            new MapColor(172, 81, 152),
                                                103.8294,
                                            HorizontalAlignment.Center,
                                                true,
                                                114.1070,
                                                new Dimension(374.8551),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Country = 'Canada'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("laboriosam")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(136, 252, 162),
                                                new MapColor(112, 200, 58))]),
                                            885.5809,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(183.2862,
                                                    654.2983),
                                            new AuthoringInfoField1ClassBreakInfos(314.9124,
                                                    432.5411),
                                            new AuthoringInfoField1ClassBreakInfos(710.8877,
                                                    337.4772),
                                            new AuthoringInfoField1ClassBreakInfos(287.6310,
                                                    748.9168)],
                                                "qui",
                                                "itaque",
                                                "sed"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(191.7144,
                                                    640.5764),
                                            new AuthoringInfoField1ClassBreakInfos(575.2599,
                                                    402.8604),
                                            new AuthoringInfoField1ClassBreakInfos(144.9600,
                                                    993.1840)],
                                                "laudantium",
                                                "dolorem",
                                                "perferendis"),
                                            ["unde",
                                                "quia",
                                                "atque",
                                                "debitis"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "sapiente",
                                            true,
                                        LengthUnit.Millimeters,
                                            103.9726,
                                            26.3130,
                                            347.0667,
                                            863.8846))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("beatae qui quis")"
                                    StringContent="@("repudiandae")"
                                    OutFields="@(["sed",
                                        "rerum"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "quod",
                                            "est",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.ShortDate),
                                            true,
                                            true,
                                        StatisticType.Sum)])"
                                    Content="@([new FieldsPopupContent([new FieldInfo("name",
                                                "voluptatem",
                                                "ut",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.ShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("id",
                                                "nulla",
                                                "laborum",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.LongMonthDayYear),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("email",
                                                "libero",
                                                "omnis",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Min)],
                                            "repellat dolore harum laboriosam dolores necessitatibus accusantium",
                                            "asperiores et placeat"),
                                    new MediaPopupContent("corporis sed totam",
                                            "qui laboriosam facilis deleniti ut",
                                        [new ColumnChartMediaInfo("aut est illum",
                                                "impedit",
                                                "voluptas aut iste",
                                            new ChartMediaInfoValue(["ex",
                                                    "recusandae"],
                                                    "deserunt",
                                                    "nobis",
                                                [new ChartMediaInfoValueSeries("token",
                                                        "enim",
                                                        518.6491),
                                                new ChartMediaInfoValueSeries("updatedAt",
                                                        "quaerat",
                                                        484.2319),
                                                new ChartMediaInfoValueSeries("category",
                                                        "voluptatem",
                                                        437.9345)],
                                                [new MapColor(70, 163, 93),
                                                new MapColor(167, 236, 197)])),
                                        new ColumnChartMediaInfo("rerum repellendus est",
                                                "vero",
                                                "architecto sit voluptatem",
                                            new ChartMediaInfoValue(["ipsam",
                                                    "laboriosam",
                                                    "tempora",
                                                    "minus"],
                                                    "molestiae",
                                                    "provident",
                                                [new ChartMediaInfoValueSeries("email",
                                                        "et",
                                                        925.9429),
                                                new ChartMediaInfoValueSeries("id",
                                                        "ut",
                                                        745.4488),
                                                new ChartMediaInfoValueSeries("avatar",
                                                        "impedit",
                                                        38.5339),
                                                new ChartMediaInfoValueSeries("id",
                                                        "ea",
                                                        387.4919)],
                                                [new MapColor(20, 105, 214),
                                                new MapColor(124, 64, 34)]))],
                                            2)])"
                                    ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "id",
                                            "sint enim et",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "status",
                                            "beatae pariatur consectetur",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("ut adipisci error",
                                            "https://picsum.photos/640/480/?image=488",
                                            "da26db2f-bf08-3528-7769-8c744f0e0c33",
                                            () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                            "name",
                                            true,
                                            true,
                                            true,
                                            "et"),
                                    new ActionToggle("laborum dolorum qui",
                                            "b9e0a299-a6ae-b6a7-1acb-6b74749f8cd6",
                                            () => { Console.WriteLine("exercitationem"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "est"),
                                    new ActionToggle("consequuntur sint non",
                                            "b2724ef1-6211-0eea-b236-ed143d1ed004",
                                            () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "token",
                                            "doloribus")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterBefore)"
                                    LabelExpression="@("expedita")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(34737542.7749)"
                                    MinScale="@(48689.9496)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(268.9235))"
                                    Symbol="@(new TextSymbol("consectetur qui nesciunt",
                                        new MapColor(242, 60, 73),
                                        new MapColor(15, 178, 115),
                                            new Dimension(664.4163),
                                        new MapFont(new Dimension(181.3823),
                                                "Times New Roman",
                                            MapFontStyle.Normal,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            939.8297,
                                        new MapColor(79, 4, 64),
                                        new MapColor(184, 181, 208),
                                            262.7085,
                                        HorizontalAlignment.Right,
                                            true,
                                            728.2555,
                                            new Dimension(379.8559),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("ObjectID = 1")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("dolores")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-44.1101,
                    -84.0599,
                    11.4860,
                    86.8489,
                    23.4786,
                    634.2412,
                    878.9786,
                    382.2139,
                new SpatialReference(8,
                        "quibusdam",
                        "necessitatibus",
                        "repellendus"),
                    true,
                    true),
                2,
                7,
            new MapImageLayerCreateExportImageParametersOptions(214.9129,
                    285.5365,
                    "ut"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(82.4037,
                    -50.0936,
                    87.5427,
                    -63.3749,
                    712.4103,
                    609.7635,
                    6.3283,
                    611.1839,
                new SpatialReference(5,
                        "assumenda",
                        "dolorem",
                        "voluptas"),
                    true,
                    true),
                8,
                4,
            new MapImageLayerFetchImageOptions(849.2081,
                    301.1820,
                    "itaque"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(6);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "dolorum",
                    "reprehenderit",
                    493.3616,
                    ["eum",
                        "sed",
                        "molestiae"],
                    new DateTime(2022, 7, 25, 4, 32, 28),
                    "quidem",
                    "in nulla impedit sunt voluptatem molestiae magnam",
                new Extent(-71.0226,
                        -95.1689,
                        34.2881,
                        34.7747,
                        785.9608,
                        708.4007,
                        391.8414,
                        287.6931,
                    new SpatialReference(8,
                            "perspiciatis",
                            "quae",
                            "eos"),
                        true,
                        true),
                    ["quia",
                        "commodi"],
                    "magnam",
                    new DateTime(2010, 1, 1, 11, 27, 58),
                    "token",
                    686.6447);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Screen;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2022, 1, 16, 10, 35, 43),
                    new DateTime(2010, 8, 25, 3, 53, 40));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("debitis",
                    "animi",
                new TimeExtent(new DateTime(2001, 5, 9, 18, 37, 22),
                        new DateTime(2006, 11, 9, 6, 32, 23)),
                new TimeInterval(TemporalTime.Centuries,
                        713.6410),
                    [new DateTime(2009, 5, 15, 22, 56, 14),
                        new DateTime(2012, 3, 11, 14, 32, 8),
                        new DateTime(2018, 2, 26, 18, 51, 53),
                        new DateTime(2016, 5, 27, 6, 4, 18)],
                    "Pacific/Port_Moresby",
                    "officia");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    23466817.8547,
                    30946.7628,
                    0.1935,
                    true,
                    "ipsum molestias optio",
                    true,
                    "velit",
                new LayerFloorInfo("et"),
                [new Label(LabelPlacement.BelowLeft,
                        "corporis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        15075728.7187,
                        16271.5525,
                        true,
                        new Dimension(902.3858),
                    new TextSymbol("voluptatem quibusdam error",
                        new MapColor(71, 8, 132),
                        new MapColor(80, 211, 171),
                            new Dimension(130.5660),
                        new MapFont(new Dimension(257.6831),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            68.5322,
                        new MapColor(75, 105, 170),
                        new MapColor(142, 11, 201),
                            221.2979,
                        HorizontalAlignment.Right,
                            true,
                            719.2155,
                            new Dimension(476.6260),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.CenterRight,
                        "esse",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        43296543.3791,
                        32549.3609,
                        true,
                        new Dimension(713.1349),
                    new TextSymbol("dolor possimus hic",
                        new MapColor(77, 58, 75),
                        new MapColor(213, 56, 251),
                            new Dimension(211.7692),
                        new MapFont(new Dimension(317.2077),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            893.8479,
                        new MapColor(166, 215, 35),
                        new MapColor(2, 214, 75),
                            746.3730,
                        HorizontalAlignment.Center,
                            true,
                            316.5970,
                            new Dimension(101.3767),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.CenterStart,
                        "aut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        3807043.7557,
                        4264.8656,
                        true,
                        new Dimension(451.9433),
                    new TextSymbol("iusto in ratione",
                        new MapColor(180, 124, 160),
                        new MapColor(142, 68, 12),
                            new Dimension(688.7193),
                        new MapFont(new Dimension(941.0009),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            135.2959,
                        new MapColor(134, 157, 33),
                        new MapColor(252, 173, 12),
                            509.6028,
                        HorizontalAlignment.Center,
                            true,
                            918.5334,
                            new Dimension(175.7126),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.BelowBefore,
                        "at",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        37840193.2887,
                        15598.0771,
                        true,
                        new Dimension(942.3439),
                    new TextSymbol("rem ratione molestiae",
                        new MapColor(85, 193, 209),
                        new MapColor(30, 109, 211),
                            new Dimension(425.3192),
                        new MapFont(new Dimension(445.2728),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            918.1035,
                        new MapColor(90, 166, 81),
                        new MapColor(93, 5, 164),
                            543.6139,
                        HorizontalAlignment.Center,
                            true,
                            698.8437,
                            new Dimension(549.2457),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("nostrum itaque maxime",
                        "accusamus",
                        ["dicta",
                            "nulla",
                            "reprehenderit",
                            "voluptas"],
                    [new FieldInfo("group",
                            "molestiae",
                            "non",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("category",
                            "explicabo",
                            "suscipit",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new RelationshipPopupContent("iusto quaerat expedita",
                            "possimus sed et sit rerum et non",
                            6,
                            "aut",
                        [new RelatedRecordsInfoFieldOrder("neque",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("dolor",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("odio",
                            OrderBy.Asc)],
                            5),
                    new FieldsPopupContent([new FieldInfo("password",
                                "et",
                                "provident",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Stddev)],
                            "suscipit deserunt officiis et et sed at",
                            "pariatur qui maiores")],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "email",
                            "cupiditate facilis et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("est illum distinctio",
                            "6685194d-7360-41a9-2818-24ca8ca84712",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "consequuntur"),
                    new ActionButton("ad est aut",
                            "https://picsum.photos/640/480/?image=84",
                            "f5b48128-2ed0-8a67-7218-3bf30d1344dd",
                            () => { Console.WriteLine("perferendis"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "praesentium")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    4819320.4099,
                    46530.6860,
                    0.6337,
                    true,
                    "qui dolorem asperiores",
                    true,
                    "aliquid",
                new LayerFloorInfo("soluta"),
                [new Label(LabelPlacement.AboveCenter,
                        "aut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        5872358.1377,
                        47324.9606,
                        true,
                        new Dimension(84.7630),
                    new TextSymbol("alias qui veritatis",
                        new MapColor(25, 210, 210),
                        new MapColor(184, 204, 252),
                            new Dimension(475.7555),
                        new MapFont(new Dimension(327.4938),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            421.1629,
                        new MapColor(112, 214, 184),
                        new MapColor(60, 232, 198),
                            445.9880,
                        HorizontalAlignment.Right,
                            true,
                            837.2436,
                            new Dimension(623.9771),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.CenterCenter,
                        "natus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        8378500.4365,
                        45651.2758,
                        true,
                        new Dimension(627.3258),
                    new TextSymbol("et voluptas quibusdam",
                        new MapColor(142, 20, 168),
                        new MapColor(74, 0, 223),
                            new Dimension(308.2243),
                        new MapFont(new Dimension(770.4514),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            224.7017,
                        new MapColor(92, 228, 154),
                        new MapColor(126, 176, 233),
                            988.0862,
                        HorizontalAlignment.Right,
                            true,
                            53.6764,
                            new Dimension(778.6072),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("fugit est eius",
                        "illo",
                        ["provident",
                            "esse"],
                    [new FieldInfo("phone",
                            "ut",
                            "officia",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "quam",
                                "dicta quidem excepturi")),
                    new FieldsPopupContent([new FieldInfo("title",
                                "impedit",
                                "quisquam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("id",
                                "odit",
                                "quisquam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("phone",
                                "in",
                                "vel",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("email",
                                "illum",
                                "optio",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Max)],
                            "iusto similique sint omnis",
                            "velit sunt id"),
                    new RelationshipPopupContent("maiores veniam nam",
                            "unde sed quos earum eum illum dolores",
                            6,
                            "voluptatem",
                        [new RelatedRecordsInfoFieldOrder("voluptatem",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("aliquid",
                            OrderBy.Desc)],
                            1),
                    new RelationshipPopupContent("eos quia tempore",
                            "repellat facilis dolor quam",
                            5,
                            "vero",
                        [new RelatedRecordsInfoFieldOrder("dolor",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("ipsa",
                            OrderBy.Asc)],
                            9)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "title",
                            "voluptatem et placeat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "token",
                            "corporis possimus esse",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "createdAt",
                            "sapiente perferendis recusandae",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "updatedAt",
                            "sequi commodi dolorem",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("autem accusantium ipsum",
                            "a330d88a-69cc-aeae-9c6b-59a92367c556",
                            () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "quis"),
                    new ActionToggle("voluptate nulla deserunt",
                            "418205df-7739-1be7-96bc-19ed02bb29ff",
                            () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "ut")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Hide,
                    26308021.3432,
                    10736.5943,
                    0.9909,
                    true,
                    "incidunt in voluptas",
                    true,
                    "qui",
                new LayerFloorInfo("ut"),
                [new Label(LabelPlacement.AboveAlong,
                        "aliquid",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        27941307.0218,
                        6943.3038,
                        true,
                        new Dimension(613.8742),
                    new TextSymbol("quasi odit ut",
                        new MapColor(105, 149, 110),
                        new MapColor(235, 111, 68),
                            new Dimension(480.2963),
                        new MapFont(new Dimension(506.4941),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            353.2698,
                        new MapColor(125, 118, 117),
                        new MapColor(163, 150, 148),
                            202.7835,
                        HorizontalAlignment.Left,
                            true,
                            784.1400,
                            new Dimension(341.9774),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("vel sed praesentium",
                        "quasi",
                        ["eveniet",
                            "ea"],
                    [new FieldInfo("category",
                            "deserunt",
                            "assumenda",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("category",
                            "aut",
                            "accusamus",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("avatar",
                            "autem",
                            "cum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("comment",
                            "aperiam",
                            "amet",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new RelationshipPopupContent("sit animi nostrum",
                            "saepe quod quisquam commodi nisi et",
                            5,
                            "cumque",
                        [new RelatedRecordsInfoFieldOrder("placeat",
                            OrderBy.Asc)],
                            9),
                    new FieldsPopupContent([new FieldInfo("email",
                                "dolorem",
                                "occaecati",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("name",
                                "quibusdam",
                                "totam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Var)],
                            "in ea explicabo et et",
                            "et quia temporibus"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "natus",
                                "quisquam consequatur qui")),
                    new FieldsPopupContent([new FieldInfo("name",
                                "sunt",
                                "vel",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                            "porro quas alias et",
                            "odio at dolorem")],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "updatedAt",
                            "voluptas aut quia",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "name",
                            "tenetur earum qui",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("temporibus tempore odio",
                            "https://picsum.photos/640/480/?image=46",
                            "40589236-4f7e-c452-ee17-91546a999350",
                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "sit"),
                    new ActionToggle("architecto autem eligendi",
                            "692e2305-33b4-2eb6-041e-b75f9c8c6f3c",
                            () => { Console.WriteLine("neque"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "rerum"),
                    new ActionToggle("minus dignissimos quas",
                            "4c944915-11b0-0735-5e2f-dfbf58275442",
                            () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "maiores")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-88.2129,
                    73.1388,
                    57.1070,
                    74.2023,
                    503.3469,
                    493.7147,
                    112.1620,
                    417.9473,
                new SpatialReference(7,
                        "rerum",
                        "velit",
                        "rerum"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    26630516.0436,
                    10325.4228,
                    0.2435,
                    true,
                    "veniam saepe deleniti",
                    true,
                    "architecto",
                new LayerFloorInfo("nesciunt"),
                [new Label(LabelPlacement.AboveCenter,
                        "eius",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        10634477.2528,
                        36603.5454,
                        true,
                        new Dimension(806.0443),
                    new TextSymbol("impedit inventore accusantium",
                        new MapColor(179, 10, 29),
                        new MapColor(213, 20, 138),
                            new Dimension(537.1877),
                        new MapFont(new Dimension(945.7250),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            700.9277,
                        new MapColor(118, 102, 26),
                        new MapColor(114, 254, 242),
                            276.5209,
                        HorizontalAlignment.Right,
                            true,
                            699.5772,
                            new Dimension(472.2319),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.CenterLeft,
                        "aut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        33303769.0219,
                        33818.1442,
                        true,
                        new Dimension(470.6065),
                    new TextSymbol("odio commodi magni",
                        new MapColor(158, 65, 161),
                        new MapColor(159, 216, 211),
                            new Dimension(16.3183),
                        new MapFont(new Dimension(643.2961),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            191.9034,
                        new MapColor(170, 217, 250),
                        new MapColor(7, 25, 14),
                            711.5955,
                        HorizontalAlignment.Left,
                            true,
                            932.6259,
                            new Dimension(674.8862),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AboveLeft,
                        "perspiciatis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        19769075.0158,
                        9580.9138,
                        true,
                        new Dimension(216.1790),
                    new TextSymbol("ut soluta laborum",
                        new MapColor(126, 53, 233),
                        new MapColor(183, 180, 86),
                            new Dimension(895.2378),
                        new MapFont(new Dimension(173.1993),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            423.0635,
                        new MapColor(88, 82, 203),
                        new MapColor(119, 19, 87),
                            881.4434,
                        HorizontalAlignment.Left,
                            true,
                            33.2949,
                            new Dimension(787.5914),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.BelowRight,
                        "soluta",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        17350828.4611,
                        40004.0789,
                        true,
                        new Dimension(289.8007),
                    new TextSymbol("perferendis quae unde",
                        new MapColor(213, 28, 199),
                        new MapColor(41, 45, 100),
                            new Dimension(25.2106),
                        new MapFont(new Dimension(821.0880),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            592.5985,
                        new MapColor(88, 209, 247),
                        new MapColor(150, 83, 47),
                            399.1124,
                        HorizontalAlignment.Center,
                            true,
                            715.1569,
                            new Dimension(373.6909),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("quae aut est",
                        "eveniet",
                        ["nam",
                            "optio",
                            "sequi"],
                    [new FieldInfo("name",
                            "saepe",
                            "ad",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("createdAt",
                            "aut",
                            "vitae",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new FieldsPopupContent([new FieldInfo("password",
                                "voluptates",
                                "nihil",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("category",
                                "commodi",
                                "quo",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                            "sint veritatis aut magnam eos cumque",
                            "et ab beatae"),
                    new TextPopupContent("quis dolor sed"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "aperiam",
                                "eaque quae voluptatibus"))],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "group",
                            "voluptate earum hic",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "category",
                            "neque sed ducimus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "comment",
                            "est ipsam labore",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("atque mollitia dolorum",
                            "78132020-8114-108d-65bc-028f8e3a3616",
                            () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "non"),
                    new ActionButton("earum et et",
                            "https://picsum.photos/640/480/?image=863",
                            "80f728f3-7be1-353c-e79c-aa130810e316",
                            () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "modi"),
                    new ActionToggle("aut ipsum consequuntur",
                            "dd2f007d-97f0-65e6-c05f-48f1831c234d",
                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "laborum")])),
            new Sublayer(3,
                    true,
                    true,
                ListMode.Show,
                    43347642.7781,
                    46459.8458,
                    0.5024,
                    true,
                    "earum omnis quis",
                    true,
                    "et",
                new LayerFloorInfo("officiis"),
                [new Label(LabelPlacement.AboveRight,
                        "excepturi",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        36272558.2445,
                        23385.1163,
                        true,
                        new Dimension(684.4191),
                    new TextSymbol("et eos at",
                        new MapColor(113, 215, 5),
                        new MapColor(108, 66, 33),
                            new Dimension(174.9253),
                        new MapFont(new Dimension(454.9511),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            300.2830,
                        new MapColor(14, 43, 167),
                        new MapColor(56, 236, 229),
                            718.1761,
                        HorizontalAlignment.Center,
                            true,
                            257.7450,
                            new Dimension(214.2081),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.AboveCenter,
                        "quos",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        34239048.7292,
                        47776.8526,
                        true,
                        new Dimension(54.1953),
                    new TextSymbol("facilis in qui",
                        new MapColor(169, 228, 186),
                        new MapColor(245, 176, 137),
                            new Dimension(48.1079),
                        new MapFont(new Dimension(340.3780),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            802.8210,
                        new MapColor(149, 189, 77),
                        new MapColor(148, 96, 154),
                            239.6865,
                        HorizontalAlignment.Center,
                            true,
                            71.2582,
                            new Dimension(170.2194),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterLeft,
                        "similique",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        15156666.8600,
                        32536.4770,
                        true,
                        new Dimension(323.3263),
                    new TextSymbol("ea quae recusandae",
                        new MapColor(182, 65, 99),
                        new MapColor(49, 34, 56),
                            new Dimension(256.0126),
                        new MapFont(new Dimension(417.8990),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            645.1274,
                        new MapColor(186, 159, 145),
                        new MapColor(226, 199, 50),
                            928.0432,
                        HorizontalAlignment.Right,
                            true,
                            481.2187,
                            new Dimension(678.1326),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("autem dolorem qui",
                        "et",
                        ["quia",
                            "alias",
                            "at"],
                    [new FieldInfo("createdAt",
                            "vel",
                            "asperiores",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("comment",
                            "ut",
                            "praesentium",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Count)],
                    [new FieldsPopupContent([new FieldInfo("phone",
                                "sunt",
                                "asperiores",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Max)],
                            "est unde harum eos",
                            "perspiciatis qui numquam"),
                    new TextPopupContent("id quaerat tempora")],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "name",
                            "nihil sit ab",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "category",
                            "excepturi sed impedit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "email",
                            "culpa dolorem inventore",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("sint praesentium architecto",
                            "https://picsum.photos/640/480/?image=176",
                            "02e1fba0-c5fa-1146-04ea-7063f58c1775",
                            () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "magni"),
                    new ActionToggle("fuga est temporibus",
                            "6c8cae35-f843-df4d-f9e6-a2e9ca78d131",
                            () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "aut")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Show,
                    9727706.2169,
                    32576.1680,
                    0.2173,
                    true,
                    "maxime harum aut",
                    true,
                    "eos",
                new LayerFloorInfo("totam"),
                [new Label(LabelPlacement.CenterRight,
                        "quasi",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        42309397.8688,
                        280.8438,
                        true,
                        new Dimension(937.2627),
                    new TextSymbol("ea voluptas iste",
                        new MapColor(28, 133, 54),
                        new MapColor(220, 161, 87),
                            new Dimension(622.7088),
                        new MapFont(new Dimension(628.8411),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            194.3176,
                        new MapColor(149, 162, 149),
                        new MapColor(167, 183, 227),
                            685.7088,
                        HorizontalAlignment.Center,
                            true,
                            555.1178,
                            new Dimension(690.3913),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.CenterCenter,
                        "possimus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        48663975.3941,
                        18631.9506,
                        true,
                        new Dimension(376.3643),
                    new TextSymbol("minus itaque assumenda",
                        new MapColor(176, 156, 28),
                        new MapColor(44, 176, 42),
                            new Dimension(278.2577),
                        new MapFont(new Dimension(165.1659),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            347.8379,
                        new MapColor(20, 175, 204),
                        new MapColor(46, 160, 199),
                            862.6070,
                        HorizontalAlignment.Center,
                            true,
                            443.9269,
                            new Dimension(36.4186),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.CenterBefore,
                        "velit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        14456472.6847,
                        37103.2277,
                        true,
                        new Dimension(567.1543),
                    new TextSymbol("vitae odio est",
                        new MapColor(79, 178, 69),
                        new MapColor(14, 240, 153),
                            new Dimension(197.2457),
                        new MapFont(new Dimension(684.8961),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            322.2476,
                        new MapColor(141, 50, 126),
                        new MapColor(227, 83, 244),
                            62.3745,
                        HorizontalAlignment.Right,
                            true,
                            273.2399,
                            new Dimension(269.1885),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("nihil eaque est",
                        "expedita",
                        ["ea",
                            "nostrum",
                            "nam",
                            "consequuntur"],
                    [new FieldInfo("token",
                            "nisi",
                            "quisquam",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("id",
                            "sunt",
                            "vel",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("createdAt",
                            "sunt",
                            "et",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new FieldsPopupContent([new FieldInfo("token",
                                "id",
                                "quo",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("title",
                                "aut",
                                "est",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("group",
                                "officiis",
                                "ut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Avg)],
                            "sunt facilis qui natus voluptatem",
                            "inventore natus natus")],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "email",
                            "earum quis laudantium",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("enim necessitatibus laborum",
                            "https://picsum.photos/640/480/?image=24",
                            "9491e0e7-3498-9672-0852-eaa70d26e655",
                            () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "consequuntur"),
                    new ActionToggle("non magnam asperiores",
                            "ec79de7c-1955-0bbb-7ccd-34cce7a26610",
                            () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "vel")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Months,
                    988.0809);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2010, 10, 27, 18, 14, 9),
                    new DateTime(2008, 1, 8, 15, 14, 27));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
