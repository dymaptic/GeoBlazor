@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Average)"
                        Dpi="@(689.4906)"
                        Effect="@(new Effect("corporis",
                            43068136.0284))"
                        GdbVersion="@("8.0.8.6")"
                        ImageFormat="@(MapImageFormat.Png8)"
                        ImageMaxHeight="@(6)"
                        ImageMaxWidth="@(2)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(16443303.5706)"
                        MinScale="@(49621.6493)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(158.7714)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.7418)"
                        Copyright="@("reprehenderit")"
                        FullExtent="@(new Extent(137.6725,
                                -107.9133,
                                13.1554,
                                -71.9050,
                                369.0772,
                                893.2243,
                                195.3564,
                                159.5569,
                            new SpatialReference(4,
                                    "est",
                                    "voluptate",
                                    "libero"),
                                true,
                                true))"
                        Title="@("vero dolores quod")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Decades)"
                            Value="@(261.6273)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("dignissimos")"
                            EndField="@("animi")"
                            Stops="@([new DateTime(2016, 5, 4, 5, 49, 8),
                                new DateTime(2013, 5, 26, 2, 51, 58),
                                new DateTime(2023, 6, 26, 15, 24, 43),
                                new DateTime(2011, 5, 12, 20, 45, 6)])"
                            TimeZone="@("America/Lima")"
                            TrackIdField="@("maxime")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Minutes)"
                                Value="@(381.2288)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2010, 7, 27, 3, 32, 26))"
                                End="@(new DateTime(2015, 8, 7, 2, 57, 52))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2002, 5, 12, 9, 12, 34))"
                            End="@(new DateTime(2022, 6, 8, 19, 57, 15))">
                        </TimeExtent>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("qui")"
                            ApiKey="@("magnam")"
                            AvgRating="@(654.4521)"
                            Categories="@(["deserunt",
                                "ut",
                                "eveniet"])"
                            Created="@(new DateTime(2018, 11, 21, 19, 17, 19))"
                            Culture="@("reiciendis")"
                            Description="@("natus blanditiis suscipit reiciendis expedita est minima")"
                            Extent="@(new Extent(-178.9291,
                                    133.3448,
                                    -22.7472,
                                    -69.3426,
                                    490.7578,
                                    483.3361,
                                    814.3246,
                                    778.3010,
                                new SpatialReference(6,
                                        "rerum",
                                        "repellat",
                                        "quia"),
                                    true,
                                    true))"
                            GroupCategories="@(["sapiente",
                                "et"])"
                            LicenseInfo="@("quia")"
                            Modified="@(new DateTime(2010, 11, 2, 13, 9, 29))"
                            Name="@("id")"
                            NumComments="@(573.7293)"
                            NumRatings="@(338.7918)"
                            NumViews="@(811.5874)"
                            Owner="@("Caroline Nitzsche")"
                            OwnerFolder="@("Margie Cruickshank")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Anonymous,
                                    ["quod",
                                        "quo",
                                        "voluptas",
                                        "pariatur"],
                                    "amet",
                                    "autem",
                                    "veniam",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("omnis")"
                            Screenshots="@(["laboriosam",
                                "laborum",
                                "eaque"])"
                            Size="@(1)"
                            Snippet="@("vero")"
                            Tags="@(["hic",
                                "est",
                                "suscipit",
                                "eaque"])"
                            Title="@("similique dicta nobis")"
                            TypeKeywords="@(["tempora",
                                "veritatis"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(8)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(1560834.9222)"
                            MinScale="@(17690.1112)"
                            Opacity="@(0.0459)"
                            PopupEnabled="@(true)"
                            Title="@("totam ratione odit")"
                            Visible="@(true)"
                            DefinitionExpression="@("soluta")"
                            FloorInfo="@(new LayerFloorInfo("voluptatem"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveEnd,
                                    "et",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    485926.8498,
                                    47939.6703,
                                    true,
                                    new Dimension(144.5449),
                                new TextSymbol("in possimus facere",
                                    new MapColor(89, 252, 58),
                                    new MapColor(184, 228, 235),
                                        new Dimension(412.4228),
                                    new MapFont(new Dimension(780.2513),
                                            "Bookman",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        765.5227,
                                    new MapColor(38, 14, 107),
                                    new MapColor(139, 161, 209),
                                        87.7002,
                                    HorizontalAlignment.Left,
                                        true,
                                        529.3402,
                                        new Dimension(679.2812),
                                        true),
                                    true,
                                    "1 = 1"),
                            new Label(LabelPlacement.CenterAlong,
                                    "nesciunt",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    30674126.0116,
                                    25776.1359,
                                    true,
                                    new Dimension(2.2234),
                                new TextSymbol("suscipit explicabo delectus",
                                    new MapColor(246, 104, 43),
                                    new MapColor(186, 253, 205),
                                        new Dimension(7.4601),
                                    new MapFont(new Dimension(920.9270),
                                            "Arial",
                                        MapFontStyle.Oblique,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        868.4264,
                                    new MapColor(104, 68, 9),
                                    new MapColor(186, 60, 219),
                                        429.0822,
                                    HorizontalAlignment.Center,
                                        true,
                                        601.5074,
                                        new Dimension(981.4420),
                                        true),
                                    true,
                                    "Age > 21"),
                            new Label(LabelPlacement.BelowEnd,
                                    "dolore",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    12328995.9278,
                                    29881.6744,
                                    true,
                                    new Dimension(676.3539),
                                new TextSymbol("aut ducimus odio",
                                    new MapColor(75, 18, 221),
                                    new MapColor(243, 229, 207),
                                        new Dimension(820.6293),
                                    new MapFont(new Dimension(401.6123),
                                            "Times New Roman",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        968.1494,
                                    new MapColor(197, 175, 242),
                                    new MapColor(13, 99, 162),
                                        956.0043,
                                    HorizontalAlignment.Left,
                                        true,
                                        897.4942,
                                        new Dimension(448.2992),
                                        true),
                                    true,
                                    "Country = 'Canada'"),
                            new Label(LabelPlacement.BelowLeft,
                                    "id",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    17972280.6027,
                                    25409.0374,
                                    true,
                                    new Dimension(503.2102),
                                new TextSymbol("minus cumque unde",
                                    new MapColor(66, 134, 159),
                                    new MapColor(224, 16, 169),
                                        new Dimension(970.4652),
                                    new MapFont(new Dimension(951.9335),
                                            "Courier New",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        995.3127,
                                    new MapColor(168, 175, 83),
                                    new MapColor(228, 220, 159),
                                        342.0350,
                                    HorizontalAlignment.Right,
                                        true,
                                        320.7981,
                                        new Dimension(630.5940),
                                        true),
                                    true,
                                    "ObjectID = 1")])"
                            PopupTemplate="@(new PopupTemplate("id beatae in",
                                    "dolorem",
                                    ["iusto",
                                        "dolores",
                                        "et",
                                        "aliquam"],
                                [new FieldInfo("phone",
                                        "molestiae",
                                        "aut",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("category",
                                        "recusandae",
                                        "qui",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("group",
                                        "perspiciatis",
                                        "at",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("name",
                                        "dolorem",
                                        "officiis",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                            "neque",
                                            "consequatur quis et")),
                                new MediaPopupContent("velit est consequatur",
                                        "sit beatae incidunt quidem",
                                    [new PieChartMediaInfo("inventore ut aut",
                                            "quis",
                                            "porro nihil qui",
                                        new ChartMediaInfoValue(["voluptatem",
                                                "maiores"],
                                                "explicabo",
                                                "qui",
                                            [new ChartMediaInfoValueSeries("createdAt",
                                                    "enim",
                                                    785.8680),
                                            new ChartMediaInfoValueSeries("password",
                                                    "veritatis",
                                                    72.0533),
                                            new ChartMediaInfoValueSeries("status",
                                                    "voluptatibus",
                                                    342.5412),
                                            new ChartMediaInfoValueSeries("category",
                                                    "et",
                                                    271.9015)],
                                            [new MapColor(97, 184, 201),
                                            new MapColor(247, 56, 157),
                                            new MapColor(24, 199, 45)])),
                                    new PieChartMediaInfo("consectetur provident et",
                                            "quisquam",
                                            "harum aut rerum",
                                        new ChartMediaInfoValue(["cum",
                                                "exercitationem"],
                                                "ut",
                                                "dicta",
                                            [new ChartMediaInfoValueSeries("createdAt",
                                                    "vero",
                                                    833.0343),
                                            new ChartMediaInfoValueSeries("category",
                                                    "nesciunt",
                                                    740.4815)],
                                            [new MapColor(167, 237, 63),
                                            new MapColor(160, 194, 173),
                                            new MapColor(102, 147, 31),
                                            new MapColor(179, 78, 199)]))],
                                        4),
                                new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "consequuntur",
                                            "placeat voluptatem praesentium")),
                                new TextPopupContent("saepe sit voluptatem")],
                                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "title",
                                        "ut ducimus cupiditate",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "name",
                                        "beatae sed maiores",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return Date();",
                                        "status",
                                        "modi eum ea",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "token",
                                        "sint illo nihil",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("veniam repellat impedit",
                                        "00b8ae58-a064-3253-df06-2d09c1852b98",
                                        () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "phone",
                                        "dolorem"),
                                new ActionButton("qui quae corrupti",
                                        "https://picsum.photos/640/480/?image=98",
                                        "a60a396e-c174-91e7-55d3-5ac9c4fcb6f5",
                                        () => { Console.WriteLine("distinctio"); return Task.CompletedTask; },
                                        "title",
                                        true,
                                        true,
                                        true,
                                        "rerum")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("tenetur esse at",
                                    new MapColor(200, 84, 233),
                                    new MapColor(248, 87, 218),
                                        new Dimension(606.0260),
                                    new MapFont(new Dimension(899.4895),
                                            "Georgia",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.None),
                                        352.7999,
                                    new MapColor(70, 188, 226),
                                    new MapColor(139, 6, 4),
                                        98.0992,
                                    HorizontalAlignment.Left,
                                        true,
                                        639.8255,
                                        new Dimension(999.6193),
                                        true),
                                    "molestiae",
                                [new OpacityVariable("dolor",
                                        "ea",
                                    [new OpacityStop(253.6306,
                                            0.0578,
                                            "eaque")],
                                    new VisualVariableLegendOptions(true,
                                            "veritatis adipisci et"),
                                        "qui",
                                        "omnis corrupti illo"),
                                new RotationVariable("praesentium",
                                    Axis.Roll,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "suscipit incidunt placeat"),
                                        "voluptas",
                                        "veniam beatae quidem")],
                                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(7, 194, 100),
                                            new MapColor(239, 78, 198)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(230, 105, 247),
                                            new MapColor(184, 36, 12)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(114, 50, 212),
                                            new MapColor(209, 7, 18)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(168, 43, 111),
                                            new MapColor(253, 201, 161))]),
                                        430.5872,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(227.0313,
                                                3.3473),
                                        new AuthoringInfoField1ClassBreakInfos(552.0455,
                                                218.6820)],
                                            "sit",
                                            "quia",
                                            "voluptatem"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(531.0700,
                                                80.9351),
                                        new AuthoringInfoField1ClassBreakInfos(227.9961,
                                                206.5720),
                                        new AuthoringInfoField1ClassBreakInfos(521.1967,
                                                283.5447),
                                        new AuthoringInfoField1ClassBreakInfos(68.7061,
                                                938.5466)],
                                            "officia",
                                            "expedita",
                                            "et"),
                                        ["magni",
                                            "dicta",
                                            "quia",
                                            "perferendis"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "dolores",
                                        true,
                                    LengthUnit.Yards,
                                        911.9534,
                                        862.2925,
                                        573.3389,
                                        60.9758)))"
                            Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(1)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(38691042.7393)"
                                MinScale="@(46010.1447)"
                                Opacity="@(0.5173)"
                                PopupEnabled="@(true)"
                                Title="@("sint omnis inventore")"
                                Visible="@(true)"
                                DefinitionExpression="@("dolorem")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(3)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(1236928.8067)"
                                    MinScale="@(33643.9257)"
                                    Opacity="@(0.0158)"
                                    PopupEnabled="@(true)"
                                    Title="@("ab vero ut")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("pariatur")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(7)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(11924064.5085)"
                                        MinScale="@(31638.4317)"
                                        Opacity="@(0.6643)"
                                        PopupEnabled="@(true)"
                                        Title="@("dolor vitae pariatur")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("cumque")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(2)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(25997129.3580)"
                                            MinScale="@(37064.0882)"
                                            Opacity="@(0.6668)"
                                            PopupEnabled="@(true)"
                                            Title="@("soluta quisquam autem")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("omnis")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(3)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(33072822.4782)"
                                                MinScale="@(10455.4506)"
                                                Opacity="@(0.8152)"
                                                PopupEnabled="@(true)"
                                                Title="@("dolores voluptas magni")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("natus")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(8)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(38498274.3531)"
                                                    MinScale="@(9968.6698)"
                                                    Opacity="@(0.5899)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("natus tempore tempora")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("aut")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("libero dolor ullam")"
                                                        StringContent="@("numquam")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("reiciendis")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("ipsa dolore voluptatum")"
                                                    StringContent="@("id")"
                                                    OutFields="@(["suscipit",
                                                        "quaerat"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new MediaPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "bc43360d-0cbd-4f5a-b02b-77b80487d37c",
                                                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "8284e7ef-53a5-7777-9503-f17da8167552",
                                                            () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "6e4a7d89-23d6-9182-9913-65700af21590",
                                                            () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowEnd)"
                                                    LabelExpression="@("autem")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(28946799.7286)"
                                                    MinScale="@(36140.3798)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(663.9296))"
                                                    Symbol="@(new TextSymbol("ut libero recusandae"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("City = 'Toronto'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("est")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                    new MultipartColorRamp(),
                                                        670.0514,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["nisi",
                                                            "non",
                                                            "vel",
                                                            "praesentium"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "nemo",
                                                        true,
                                                    LengthUnit.Centimeters,
                                                        380.0434,
                                                        749.7295,
                                                        858.3617,
                                                        778.1955))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("sed nesciunt recusandae")"
                                                StringContent="@("autem")"
                                                OutFields="@(["consequatur",
                                                    "voluptatibus",
                                                    "enim",
                                                    "non"])"
                                                FieldInfos="@([new FieldInfo("category",
                                                        "facilis",
                                                        "vero",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("group",
                                                        "voluptas",
                                                        "libero",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("name",
                                                        "aut",
                                                        "nesciunt",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var)])"
                                                Content="@([new AttachmentsPopupContent("suscipit quis quidem",
                                                        "aliquam quas eligendi alias"),
                                                new AttachmentsPopupContent("ducimus est ipsam",
                                                        "molestiae odio consectetur in tempore")])"
                                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                        "createdAt",
                                                        "dolorem nostrum dicta"),
                                                new ExpressionInfo("return Date();",
                                                        "avatar",
                                                        "est debitis impedit")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("non odio suscipit",
                                                        "https://picsum.photos/640/480/?image=561",
                                                        "c8467a54-7d20-234a-2a92-cbf151eae5b9",
                                                        () => { Console.WriteLine("ratione"); return Task.CompletedTask; },
                                                        "avatar",
                                                        true,
                                                        true,
                                                        true,
                                                        "enim"),
                                                new ActionToggle("consequatur odit laboriosam",
                                                        "a116d76f-f034-b285-1c41-d09ad0380c7b",
                                                        () => { Console.WriteLine("nemo"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "createdAt",
                                                        "debitis"),
                                                new ActionButton("eos dolorem accusamus",
                                                        "https://picsum.photos/640/480/?image=476",
                                                        "659b1cff-c81e-bc15-0979-967335a7afbb",
                                                        () => { Console.WriteLine("sapiente"); return Task.CompletedTask; },
                                                        "email",
                                                        true,
                                                        true,
                                                        true,
                                                        "minus"),
                                                new ActionButton("necessitatibus tempore rerum",
                                                        "https://picsum.photos/640/480/?image=187",
                                                        "8809f71a-d607-020c-f82f-2fc4f1e9cac8",
                                                        () => { Console.WriteLine("odit"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "amet")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterStart)"
                                                LabelExpression="@("dolor")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(15320491.9497)"
                                                MinScale="@(47708.7652)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(665.5503))"
                                                Symbol="@(new TextSymbol("deserunt cum cupiditate",
                                                    new MapColor(139, 244, 201),
                                                    new MapColor(43, 1, 102),
                                                        null,
                                                    new MapFont(),
                                                        191.4550,
                                                    new MapColor(216, 183, 64),
                                                    new MapColor(211, 159, 60),
                                                        568.3637,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        238.6482,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Phone = '555-555-5555'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quia")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.CieLab)]),
                                                    242.7337,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "eum",
                                                        "consectetur",
                                                        "nemo"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "quae",
                                                        "aut",
                                                        "non"),
                                                    ["tenetur",
                                                        "quas",
                                                        "ipsam"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "et",
                                                    true,
                                                LengthUnit.Yards,
                                                    574.5981,
                                                    895.4901,
                                                    678.0338,
                                                    450.3709))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("perspiciatis repellat numquam")"
                                            StringContent="@("et")"
                                            OutFields="@(["dolor",
                                                "ipsam"])"
                                            FieldInfos="@([new FieldInfo("password",
                                                    "unde",
                                                    "quae",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("status",
                                                    "vel",
                                                    "minima",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.LongDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Max)])"
                                            Content="@([new MediaPopupContent("repellendus consequatur enim",
                                                    "corporis repellendus nihil rerum impedit ex ut",
                                                [new PieChartMediaInfo("nihil ut id",
                                                        "quis",
                                                        "beatae nam id",
                                                    new ChartMediaInfoValue()),
                                                new PieChartMediaInfo("nihil eos officia",
                                                        "expedita",
                                                        "doloremque aliquam sit",
                                                    new ChartMediaInfoValue())],
                                                    1),
                                            new AttachmentsPopupContent("qui itaque maxime",
                                                    "nihil deserunt qui perferendis qui quia facere",
                                                    AttachmentsPopupContentDisplayType.Preview),
                                            new MediaPopupContent("nesciunt at distinctio",
                                                    "possimus voluptate quidem fugit quibusdam sunt aspernatur",
                                                [new LineChartMediaInfo("in adipisci quis",
                                                        "sapiente",
                                                        "modi consectetur sit",
                                                    new ChartMediaInfoValue()),
                                                new ImageMediaInfo("ea recusandae quam",
                                                        "corporis",
                                                        "sit ad libero",
                                                    new ImageMediaInfoValue(),
                                                        235.2424),
                                                new ImageMediaInfo("optio et totam",
                                                        "non",
                                                        "assumenda eum mollitia",
                                                    new ImageMediaInfoValue(),
                                                        529.1902),
                                                new ImageMediaInfo("quo enim aliquid",
                                                        "et",
                                                        "id iste aut",
                                                    new ImageMediaInfoValue(),
                                                        160.0522)],
                                                    2),
                                            new TextPopupContent("et facere in")])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "id",
                                                    "eos aut quo",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Name;",
                                                    "title",
                                                    "illum maxime fugiat",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("reprehenderit delectus ut",
                                                    "1fed69fb-7fef-fe34-bddc-d7bd86446f3f",
                                                    () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "id",
                                                    "rerum"),
                                            new ActionToggle("qui sit doloremque",
                                                    "a47e5d83-a34b-b157-c779-fbde29c811e0",
                                                    () => { Console.WriteLine("accusantium"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "avatar",
                                                    "sapiente"),
                                            new ActionToggle("molestias omnis et",
                                                    "6728fc95-5214-86bd-a4ed-bfd28ce3c554",
                                                    () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "category",
                                                    "facere"),
                                            new ActionButton("nostrum unde velit",
                                                    "https://picsum.photos/640/480/?image=577",
                                                    "e84918f8-2dbd-97ce-a982-831b440697a1",
                                                    () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                                                    "name",
                                                    true,
                                                    true,
                                                    true,
                                                    "doloribus")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowRight)"
                                            LabelExpression="@("natus")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(46611133.1110)"
                                            MinScale="@(44420.6025)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(266.1611))"
                                            Symbol="@(new TextSymbol("recusandae modi voluptas",
                                                new MapColor(3, 250, 10),
                                                new MapColor(230, 197, 97),
                                                    new Dimension(986.7756),
                                                new MapFont(new Dimension(249.4820),
                                                        "Times New Roman",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Normal,
                                                    TextDecoration.Underline),
                                                    108.3935,
                                                new MapColor(212, 156, 51),
                                                new MapColor(95, 23, 91),
                                                    729.4233,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    674.7091,
                                                    new Dimension(475.7861),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("ObjectID = 1")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("magnam")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(36, 174, 131),
                                                    new MapColor(177, 58, 73)),
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(89, 233, 27),
                                                    new MapColor(23, 2, 25)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(62, 12, 65),
                                                    new MapColor(38, 64, 163)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(241, 68, 30),
                                                    new MapColor(3, 106, 50))]),
                                                544.7707,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(613.3260,
                                                        985.5379),
                                                new AuthoringInfoField1ClassBreakInfos(417.9659,
                                                        131.9424)],
                                                    "dolore",
                                                    "atque",
                                                    "et"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(751.5094,
                                                        515.5358),
                                                new AuthoringInfoField1ClassBreakInfos(565.3699,
                                                        8.4713)],
                                                    "ut",
                                                    "suscipit",
                                                    "sunt"),
                                                ["nihil",
                                                    "qui",
                                                    "sequi",
                                                    "cupiditate"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "voluptatem",
                                                true,
                                            LengthUnit.Centimeters,
                                                934.4366,
                                                242.7511,
                                                777.6155,
                                                769.6098))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("dicta sunt neque")"
                                        StringContent="@("eligendi")"
                                        OutFields="@(["qui",
                                            "nam",
                                            "assumenda",
                                            "maiores"])"
                                        FieldInfos="@([new FieldInfo("updatedAt",
                                                "aut",
                                                "sit",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("comment",
                                                "et",
                                                "sint",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Max)])"
                                        Content="@([new AttachmentsPopupContent("consequatur nesciunt qui",
                                                "ad nisi ratione qui tempore voluptas",
                                                AttachmentsPopupContentDisplayType.Preview),
                                        new FieldsPopupContent([new FieldInfo("id",
                                                    "non",
                                                    "reiciendis",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.LongMonthDayYear),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("password",
                                                    "assumenda",
                                                    "illum",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("status",
                                                    "velit",
                                                    "non",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("createdAt",
                                                    "vitae",
                                                    "magni",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.LongDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Stddev)],
                                                "ratione nihil incidunt commodi et",
                                                "nisi ut nulla")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                "name",
                                                "et enim non",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("et voluptatem quia",
                                                "b28402ef-d59c-efe2-f1e0-43b682a98d02",
                                                () => { Console.WriteLine("error"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "id",
                                                "modi"),
                                        new ActionButton("aut voluptas et",
                                                "https://picsum.photos/640/480/?image=562",
                                                "f2d81cee-05c3-2716-a282-0af30de58766",
                                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                "password",
                                                true,
                                                true,
                                                true,
                                                "deleniti"),
                                        new ActionToggle("in unde aut",
                                                "0a6a803d-0c03-bfa9-d4be-235ee88fd38f",
                                                () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "status",
                                                "ad"),
                                        new ActionButton("error repudiandae sed",
                                                "https://picsum.photos/640/480/?image=810",
                                                "07f4fbad-3be1-8c7e-736f-1a37999dcc4a",
                                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                "comment",
                                                true,
                                                true,
                                                true,
                                                "aut")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveStart)"
                                        LabelExpression="@("rem")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(18453859.5089)"
                                        MinScale="@(8590.3487)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(662.6077))"
                                        Symbol="@(new TextSymbol("qui fuga quis",
                                            new MapColor(142, 38, 162),
                                            new MapColor(79, 2, 122),
                                                new Dimension(21.0979),
                                            new MapFont(new Dimension(620.3960),
                                                    "Helvetica",
                                                MapFontStyle.Normal,
                                                FontWeight.Normal,
                                                TextDecoration.Underline),
                                                484.4475,
                                            new MapColor(59, 104, 57),
                                            new MapColor(184, 247, 117),
                                                466.7877,
                                            HorizontalAlignment.Center,
                                                true,
                                                806.1033,
                                                new Dimension(134.1058),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("City = 'Toronto'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("animi")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(58, 83, 245),
                                            new MapColor(7, 54, 23)),
                                            73.6377,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(325.8266,
                                                    108.5366),
                                            new AuthoringInfoField1ClassBreakInfos(883.5491,
                                                    559.7919),
                                            new AuthoringInfoField1ClassBreakInfos(702.6888,
                                                    496.3713)],
                                                "ipsa",
                                                "aliquam",
                                                "omnis"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(87.4757,
                                                    452.3361)],
                                                "nesciunt",
                                                "omnis",
                                                "et"),
                                            ["doloremque",
                                                "omnis",
                                                "rerum",
                                                "aut"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "in",
                                            true,
                                        LengthUnit.Decimeters,
                                            564.4586,
                                            509.8655,
                                            133.8666,
                                            859.4389))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("eveniet voluptatem qui")"
                                    StringContent="@("autem")"
                                    OutFields="@(["asperiores",
                                        "quidem",
                                        "ut"])"
                                    FieldInfos="@([new FieldInfo("createdAt",
                                            "quia",
                                            "rerum",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLeLongTime),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("name",
                                            "error",
                                            "voluptatum",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("group",
                                            "maxime",
                                            "dignissimos",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Min)])"
                                    Content="@([new AttachmentsPopupContent("quasi possimus rerum",
                                            "repellendus maiores et deserunt doloribus qui",
                                            AttachmentsPopupContentDisplayType.Preview),
                                    new TextPopupContent("excepturi est sint")])"
                                    ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "title",
                                            "adipisci et sed",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("consectetur sit necessitatibus",
                                            "https://picsum.photos/640/480/?image=757",
                                            "b0070c07-882f-1f0d-aee9-53d98fe936a6",
                                            () => { Console.WriteLine("ratione"); return Task.CompletedTask; },
                                            "token",
                                            true,
                                            true,
                                            true,
                                            "adipisci")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterRight)"
                                    LabelExpression="@("quis")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(33420533.0326)"
                                    MinScale="@(514.7230)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(350.4435))"
                                    Symbol="@(new TextSymbol("doloribus dolor ut",
                                        new MapColor(212, 153, 74),
                                        new MapColor(252, 2, 133),
                                            new Dimension(570.9720),
                                        new MapFont(new Dimension(792.0901),
                                                "Times New Roman",
                                            MapFontStyle.Normal,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            811.0974,
                                        new MapColor(43, 169, 175),
                                        new MapColor(209, 244, 115),
                                            419.0276,
                                        HorizontalAlignment.Left,
                                            true,
                                            63.7571,
                                            new Dimension(523.5459),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Street = '123 Main St.'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("nemo")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-152.6622,
                    15.0978,
                    -55.7655,
                    -41.4187,
                    607.3756,
                    83.0852,
                    691.8451,
                    485.2673,
                new SpatialReference(2,
                        "eum",
                        "et",
                        "magni"),
                    true,
                    true),
                9,
                3,
            new MapImageLayerCreateExportImageParametersOptions(800.4667,
                    359.3844,
                    "maxime"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-153.4308,
                    -75.0571,
                    58.2559,
                    -3.1810,
                    151.8933,
                    622.6492,
                    521.0181,
                    952.8698,
                new SpatialReference(1,
                        "provident",
                        "iste",
                        "eum"),
                    true,
                    true),
                6,
                4,
            new MapImageLayerFetchImageOptions(829.4462,
                    100.4288,
                    "error"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "ut",
                    "est",
                    860.4915,
                    ["perspiciatis",
                        "rerum",
                        "fugit"],
                    new DateTime(2018, 3, 3, 1, 17, 27),
                    "sed",
                    "cupiditate doloribus libero eligendi cum et",
                new Extent(166.1780,
                        -154.2350,
                        1.9658,
                        48.7660,
                        860.7845,
                        479.2376,
                        829.5333,
                        872.3707,
                    new SpatialReference(4,
                            "est",
                            "dolore",
                            "sequi"),
                        true,
                        true),
                    ["rerum",
                        "beatae"],
                    "qui",
                    new DateTime(2012, 7, 19, 3, 28, 40),
                    "phone",
                    980.6461);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.SourceOut;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2021, 7, 12, 18, 11, 20),
                    new DateTime(2004, 3, 25, 22, 45, 37));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("aut",
                    "sint",
                new TimeExtent(new DateTime(2022, 6, 22, 22, 3, 48),
                        new DateTime(2022, 3, 4, 0, 46, 49)),
                new TimeInterval(TemporalTime.Decades,
                        182.0558),
                    [new DateTime(2011, 7, 15, 9, 27, 21),
                        new DateTime(2006, 5, 14, 18, 35, 29),
                        new DateTime(2021, 11, 14, 8, 32, 48)],
                    "America/Sao_Paulo",
                    "ratione");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(7,
                    true,
                    true,
                ListMode.Show,
                    45395175.2358,
                    424.9771,
                    0.1039,
                    true,
                    "numquam molestiae recusandae",
                    true,
                    "enim",
                new LayerFloorInfo("voluptas"),
                [new Label(LabelPlacement.AboveAfter,
                        "animi",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        29838611.8722,
                        34619.6756,
                        true,
                        new Dimension(463.8715),
                    new TextSymbol("deserunt qui alias",
                        new MapColor(172, 63, 237),
                        new MapColor(130, 1, 170),
                            new Dimension(777.0434),
                        new MapFont(new Dimension(618.7256),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            468.9890,
                        new MapColor(112, 151, 53),
                        new MapColor(250, 165, 105),
                            680.1733,
                        HorizontalAlignment.Left,
                            true,
                            688.1353,
                            new Dimension(556.7338),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.CenterCenter,
                        "tempore",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        34410756.9882,
                        8312.9639,
                        true,
                        new Dimension(223.3546),
                    new TextSymbol("doloremque illo soluta",
                        new MapColor(112, 192, 142),
                        new MapColor(198, 146, 84),
                            new Dimension(222.2317),
                        new MapFont(new Dimension(886.6568),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            657.5772,
                        new MapColor(220, 238, 72),
                        new MapColor(69, 160, 49),
                            587.0352,
                        HorizontalAlignment.Right,
                            true,
                            926.8323,
                            new Dimension(216.5398),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.BelowCenter,
                        "reiciendis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        28504387.3427,
                        43996.1715,
                        true,
                        new Dimension(411.8133),
                    new TextSymbol("id in sequi",
                        new MapColor(80, 59, 170),
                        new MapColor(41, 190, 107),
                            new Dimension(422.6383),
                        new MapFont(new Dimension(449.3057),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            168.0800,
                        new MapColor(98, 168, 235),
                        new MapColor(124, 238, 84),
                            741.6387,
                        HorizontalAlignment.Left,
                            true,
                            750.9919,
                            new Dimension(766.7503),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("quas quis et",
                        "iure",
                        ["mollitia",
                            "ut",
                            "provident"],
                    [new FieldInfo("category",
                            "sint",
                            "explicabo",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new RelationshipPopupContent("est doloremque voluptas",
                            "mollitia blanditiis numquam minima",
                            8,
                            "vero",
                        [new RelatedRecordsInfoFieldOrder("qui",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("quibusdam",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("tempora",
                            OrderBy.Asc)],
                            3),
                    new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "cumque",
                                "asperiores dolorem corrupti")),
                    new AttachmentsPopupContent("reiciendis soluta aut",
                            "corrupti quam dolor omnis qui ducimus",
                            AttachmentsPopupContentDisplayType.Preview),
                    new AttachmentsPopupContent("architecto est eius",
                            "nihil rerum suscipit iure dicta",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "category",
                            "at sunt ut",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "phone",
                            "non enim ut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("ducimus voluptas autem",
                            "https://picsum.photos/640/480/?image=1003",
                            "670663a5-d289-7cea-2246-80f125a971b8",
                            () => { Console.WriteLine("corporis"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "rerum"),
                    new ActionToggle("atque numquam aliquam",
                            "b1cdca94-5b35-1766-1656-8968e1512aec",
                            () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "sint"),
                    new ActionButton("qui sed cum",
                            "https://picsum.photos/640/480/?image=517",
                            "87993a86-98ad-8f6a-c034-7640bd2e741c",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "aliquam"),
                    new ActionButton("consectetur unde ut",
                            "https://picsum.photos/640/480/?image=66",
                            "a82e930d-789f-0271-4819-7a52d2f125ff",
                            () => { Console.WriteLine("eligendi"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "mollitia")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Hide,
                    33716032.1080,
                    13754.5054,
                    0.5349,
                    true,
                    "dolorem nobis nostrum",
                    true,
                    "velit",
                new LayerFloorInfo("nihil"),
                [new Label(LabelPlacement.BelowAfter,
                        "voluptatem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        39531307.9109,
                        26211.8515,
                        true,
                        new Dimension(794.8024),
                    new TextSymbol("est ratione autem",
                        new MapColor(162, 234, 157),
                        new MapColor(95, 114, 252),
                            new Dimension(726.3680),
                        new MapFont(new Dimension(916.4472),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            450.3942,
                        new MapColor(206, 139, 231),
                        new MapColor(235, 250, 41),
                            463.7040,
                        HorizontalAlignment.Right,
                            true,
                            798.4689,
                            new Dimension(993.9098),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.AboveBefore,
                        "unde",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        18904255.7641,
                        9894.5179,
                        true,
                        new Dimension(368.6024),
                    new TextSymbol("repellat nam et",
                        new MapColor(132, 226, 22),
                        new MapColor(242, 15, 189),
                            new Dimension(204.8286),
                        new MapFont(new Dimension(463.7807),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            966.5174,
                        new MapColor(196, 46, 129),
                        new MapColor(150, 193, 13),
                            866.9177,
                        HorizontalAlignment.Right,
                            true,
                            570.3412,
                            new Dimension(420.6849),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("et sit voluptatibus",
                        "commodi",
                        ["maiores",
                            "ipsam",
                            "nihil"],
                    [new FieldInfo("phone",
                            "vel",
                            "non",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("group",
                            "aliquam",
                            "sit",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Min)],
                    [new RelationshipPopupContent("aliquam expedita totam",
                            "tempore porro molestias mollitia non",
                            5,
                            "est",
                        [new RelatedRecordsInfoFieldOrder("aut",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("voluptas",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("explicabo",
                            OrderBy.Asc)],
                            6),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "ex",
                                "aspernatur labore et")),
                    new FieldsPopupContent([new FieldInfo("createdAt",
                                "libero",
                                "recusandae",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("token",
                                "ut",
                                "dolor",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("password",
                                "explicabo",
                                "voluptatem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("token",
                                "mollitia",
                                "quidem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                            "est eum sint assumenda eligendi debitis",
                            "labore quas non")],
                    [new ExpressionInfo("return $feature.Name;",
                            "status",
                            "dolores inventore impedit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "createdAt",
                            "qui dolore illum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "phone",
                            "iure quisquam ipsum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "name",
                            "dicta qui enim",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("magnam expedita eum",
                            "e312d6e1-71f3-890c-5ff8-4b49a3423a97",
                            () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "nisi"),
                    new ActionButton("voluptatem veritatis amet",
                            "https://picsum.photos/640/480/?image=985",
                            "918578de-0fb7-6e31-721e-aa786573d04f",
                            () => { Console.WriteLine("neque"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "ipsam"),
                    new ActionButton("repellendus ducimus aut",
                            "https://picsum.photos/640/480/?image=751",
                            "2c816665-6ad6-49b4-c459-2349c82b4a27",
                            () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "consequuntur")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Hide,
                    20282907.4580,
                    42610.3782,
                    0.0160,
                    true,
                    "culpa ut nihil",
                    true,
                    "sed",
                new LayerFloorInfo("in"),
                [new Label(LabelPlacement.AlwaysHorizontal,
                        "consectetur",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        11407327.3507,
                        9881.7097,
                        true,
                        new Dimension(935.1214),
                    new TextSymbol("sunt occaecati possimus",
                        new MapColor(237, 18, 224),
                        new MapColor(11, 191, 217),
                            new Dimension(391.8509),
                        new MapFont(new Dimension(549.2416),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            211.3366,
                        new MapColor(79, 117, 110),
                        new MapColor(195, 184, 124),
                            617.1814,
                        HorizontalAlignment.Left,
                            true,
                            976.3286,
                            new Dimension(730.9898),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.BelowRight,
                        "rerum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        4803875.1687,
                        49221.5604,
                        true,
                        new Dimension(561.4755),
                    new TextSymbol("aut natus corrupti",
                        new MapColor(65, 107, 205),
                        new MapColor(76, 136, 239),
                            new Dimension(479.9121),
                        new MapFont(new Dimension(432.7494),
                                "Bookman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            375.9535,
                        new MapColor(137, 139, 242),
                        new MapColor(7, 70, 163),
                            760.2809,
                        HorizontalAlignment.Center,
                            true,
                            123.7807,
                            new Dimension(140.3721),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("harum omnis ut",
                        "esse",
                        ["fugiat",
                            "maxime",
                            "quia",
                            "sed"],
                    [new FieldInfo("title",
                            "veritatis",
                            "sint",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("createdAt",
                            "expedita",
                            "accusantium",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("token",
                            "similique",
                            "corrupti",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("name",
                            "vitae",
                            "est",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new FieldsPopupContent([new FieldInfo("group",
                                "nobis",
                                "doloribus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("id",
                                "sit",
                                "beatae",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("email",
                                "quod",
                                "animi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("createdAt",
                                "enim",
                                "voluptatem",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                            "tempore ipsa eius unde ducimus omnis",
                            "aut est dolores")],
                    [new ExpressionInfo("return $feature.Name;",
                            "group",
                            "at voluptate delectus",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("culpa labore rerum",
                            "https://picsum.photos/640/480/?image=1004",
                            "a0b3dadc-953b-7e2d-2c00-b2df1d0e87b7",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "dolor"),
                    new ActionButton("ut dolor reprehenderit",
                            "https://picsum.photos/640/480/?image=266",
                            "6588290d-f913-399a-2eca-b999e3998fc9",
                            () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "sint")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Hide;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(125.7986,
                    -175.9778,
                    23.7691,
                    22.6684,
                    10.0526,
                    556.3272,
                    448.5858,
                    591.3597,
                new SpatialReference(7,
                        "eum",
                        "harum",
                        "aut"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(8,
                    true,
                    true,
                ListMode.Hide,
                    29132289.2753,
                    8812.7647,
                    0.8113,
                    true,
                    "ipsa facilis et",
                    true,
                    "quia",
                new LayerFloorInfo("numquam"),
                [new Label(LabelPlacement.BelowBefore,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        30253500.7818,
                        37779.7416,
                        true,
                        new Dimension(220.6469),
                    new TextSymbol("tempora animi aperiam",
                        new MapColor(138, 205, 221),
                        new MapColor(34, 8, 218),
                            new Dimension(385.0762),
                        new MapFont(new Dimension(431.1703),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            731.0138,
                        new MapColor(202, 38, 87),
                        new MapColor(254, 119, 7),
                            690.8315,
                        HorizontalAlignment.Left,
                            true,
                            524.8999,
                            new Dimension(72.5152),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.BelowBefore,
                        "est",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        41016596.6157,
                        40516.2370,
                        true,
                        new Dimension(529.9115),
                    new TextSymbol("voluptas velit nisi",
                        new MapColor(10, 51, 156),
                        new MapColor(121, 65, 18),
                            new Dimension(363.1278),
                        new MapFont(new Dimension(861.1006),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            998.0422,
                        new MapColor(222, 235, 181),
                        new MapColor(37, 183, 83),
                            461.8523,
                        HorizontalAlignment.Left,
                            true,
                            514.5457,
                            new Dimension(867.1073),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.AboveAlong,
                        "tempora",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        42406229.0255,
                        17072.4900,
                        true,
                        new Dimension(654.4995),
                    new TextSymbol("dolorem repudiandae sit",
                        new MapColor(5, 245, 25),
                        new MapColor(13, 163, 6),
                            new Dimension(637.1343),
                        new MapFont(new Dimension(495.1216),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            510.1275,
                        new MapColor(93, 224, 18),
                        new MapColor(100, 182, 66),
                            14.4869,
                        HorizontalAlignment.Left,
                            true,
                            237.4822,
                            new Dimension(757.8491),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("alias sunt doloremque",
                        "corrupti",
                        ["accusamus",
                            "ut",
                            "consequatur"],
                    [new FieldInfo("updatedAt",
                            "consequatur",
                            "autem",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("phone",
                            "qui",
                            "dolores",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("title",
                            "in",
                            "adipisci",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new MediaPopupContent("molestiae quo officiis",
                            "a rerum nobis est et",
                        [new BarChartMediaInfo("sed natus cumque",
                                "vero",
                                "vero porro aliquam",
                            new ChartMediaInfoValue(["necessitatibus",
                                    "veniam",
                                    "nesciunt",
                                    "porro"],
                                    "tenetur",
                                    "ut",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "est",
                                        125.6584),
                                new ChartMediaInfoValueSeries("avatar",
                                        "et",
                                        331.5877),
                                new ChartMediaInfoValueSeries("status",
                                        "et",
                                        694.4295),
                                new ChartMediaInfoValueSeries("id",
                                        "qui",
                                        720.5022)],
                                [new MapColor(214, 78, 13)]))],
                            9),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "et",
                                "debitis omnis ducimus")),
                    new AttachmentsPopupContent("vel ut ea",
                            "culpa eum aut ut dolores ea repellat",
                            AttachmentsPopupContentDisplayType.Preview),
                    new MediaPopupContent("ut accusantium fuga",
                            "atque corrupti ut autem id",
                        [new ImageMediaInfo("impedit saepe vel",
                                "aut",
                                "optio sit nam",
                            new ImageMediaInfoValue("https://anita.org",
                                    "http://kaylie.com"),
                                402.6385),
                        new LineChartMediaInfo("sed aliquid placeat",
                                "quis",
                                "praesentium a numquam",
                            new ChartMediaInfoValue(["sit",
                                    "repellat",
                                    "quaerat"],
                                    "fugiat",
                                    "occaecati",
                                [new ChartMediaInfoValueSeries("group",
                                        "itaque",
                                        116.6480),
                                new ChartMediaInfoValueSeries("comment",
                                        "mollitia",
                                        859.2116)],
                                [new MapColor(88, 102, 44),
                                new MapColor(87, 27, 73),
                                new MapColor(236, 80, 170),
                                new MapColor(223, 142, 131)])),
                        new LineChartMediaInfo("at non a",
                                "harum",
                                "ut corrupti et",
                            new ChartMediaInfoValue(["quis",
                                    "temporibus",
                                    "omnis",
                                    "sapiente"],
                                    "architecto",
                                    "vitae",
                                [new ChartMediaInfoValueSeries("email",
                                        "deleniti",
                                        620.9351),
                                new ChartMediaInfoValueSeries("phone",
                                        "totam",
                                        51.7637),
                                new ChartMediaInfoValueSeries("phone",
                                        "et",
                                        624.3979)],
                                [new MapColor(214, 251, 43)])),
                        new LineChartMediaInfo("dolorem perspiciatis laborum",
                                "inventore",
                                "dolores velit assumenda",
                            new ChartMediaInfoValue(["veritatis",
                                    "omnis",
                                    "et"],
                                    "molestias",
                                    "nulla",
                                [new ChartMediaInfoValueSeries("group",
                                        "mollitia",
                                        758.1270),
                                new ChartMediaInfoValueSeries("password",
                                        "unde",
                                        825.6628),
                                new ChartMediaInfoValueSeries("avatar",
                                        "accusamus",
                                        649.7169)],
                                [new MapColor(6, 105, 5),
                                new MapColor(92, 44, 199),
                                new MapColor(96, 87, 48)]))],
                            4)],
                    [new ExpressionInfo("return $feature.Name;",
                            "group",
                            "itaque aut quia",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "password",
                            "libero in temporibus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "password",
                            "impedit voluptatem quaerat",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("saepe aut fugit",
                            "https://picsum.photos/640/480/?image=413",
                            "1cbcbf3a-0b9c-7de5-3c8f-a5ce267f9279",
                            () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "laudantium"),
                    new ActionToggle("maiores in tempora",
                            "2411e733-1cff-6149-07b4-ac2c0ba1decd",
                            () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "fugit"),
                    new ActionToggle("asperiores aut eaque",
                            "a42572d8-1edf-64a1-22dc-3f2e20ba2cb6",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "doloribus")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Show,
                    22829209.4362,
                    1293.2157,
                    0.0449,
                    true,
                    "quis vel consequuntur",
                    true,
                    "est",
                new LayerFloorInfo("voluptatem"),
                [new Label(LabelPlacement.CenterAlong,
                        "eaque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        4160225.0504,
                        21259.1630,
                        true,
                        new Dimension(429.8655),
                    new TextSymbol("autem eveniet maxime",
                        new MapColor(245, 11, 114),
                        new MapColor(241, 170, 33),
                            new Dimension(274.2525),
                        new MapFont(new Dimension(439.0355),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            340.3058,
                        new MapColor(100, 205, 67),
                        new MapColor(179, 83, 69),
                            954.3849,
                        HorizontalAlignment.Right,
                            true,
                            366.8265,
                            new Dimension(364.8693),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.BelowAfter,
                        "quos",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        21646507.7924,
                        9958.9199,
                        true,
                        new Dimension(728.6182),
                    new TextSymbol("laboriosam exercitationem placeat",
                        new MapColor(100, 29, 189),
                        new MapColor(177, 241, 70),
                            new Dimension(640.6632),
                        new MapFont(new Dimension(849.7129),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            367.9281,
                        new MapColor(114, 47, 52),
                        new MapColor(30, 240, 238),
                            30.7903,
                        HorizontalAlignment.Center,
                            true,
                            345.2180,
                            new Dimension(520.3142),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("explicabo sit quasi",
                        "officiis",
                        ["hic",
                            "animi"],
                    [new FieldInfo("group",
                            "delectus",
                            "possimus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("title",
                            "voluptas",
                            "consequatur",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("title",
                            "autem",
                            "laboriosam",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new FieldsPopupContent([new FieldInfo("title",
                                "sit",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("token",
                                "laboriosam",
                                "quis",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Count)],
                            "qui perspiciatis ratione inventore",
                            "temporibus quam illo"),
                    new MediaPopupContent("est consequatur hic",
                            "voluptate sit pariatur iure soluta necessitatibus consequatur",
                        [new PieChartMediaInfo("commodi sapiente eum",
                                "ad",
                                "aliquid ut quae",
                            new ChartMediaInfoValue(["velit",
                                    "voluptatum",
                                    "et",
                                    "error"],
                                    "enim",
                                    "et",
                                [new ChartMediaInfoValueSeries("status",
                                        "id",
                                        124.7403),
                                new ChartMediaInfoValueSeries("name",
                                        "eius",
                                        170.1219),
                                new ChartMediaInfoValueSeries("status",
                                        "rerum",
                                        878.1966)],
                                [new MapColor(248, 246, 173)]))],
                            7)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "updatedAt",
                            "ex voluptatum sunt",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "token",
                            "aspernatur magni asperiores",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "password",
                            "iste quisquam beatae",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("dolorem sit nam",
                            "b680bf9d-1ffd-cadf-dd85-be03d6e7c9c7",
                            () => { Console.WriteLine("asperiores"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "fuga")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    515.9492);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2012, 3, 19, 18, 39, 7),
                    new DateTime(2002, 8, 4, 11, 11, 51));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
