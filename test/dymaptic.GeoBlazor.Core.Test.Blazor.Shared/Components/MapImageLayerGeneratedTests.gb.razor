@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Lighten)"
                        Dpi="@(627.0723)"
                        Effect="@(new Effect("et",
                            41480937.4847))"
                        GdbVersion="@("3.1.2.1")"
                        ImageFormat="@(MapImageFormat.Jpg)"
                        ImageMaxHeight="@(7)"
                        ImageMaxWidth="@(9)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(5765821.9230)"
                        MinScale="@(12630.2471)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(707.0217)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Hide)"
                        Visible="@(true)"
                        Opacity="@(0.7354)"
                        Copyright="@("non")"
                        FullExtent="@(new Extent(32.2079,
                                97.6898,
                                44.6966,
                                -77.2950,
                                588.3456,
                                597.6637,
                                487.0845,
                                938.2913,
                            new SpatialReference(3,
                                    "ullam",
                                    "quaerat",
                                    "asperiores"),
                                true,
                                true))"
                        Title="@("labore fuga ut")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Months)"
                            Value="@(617.7523)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("nostrum")"
                            EndField="@("vel")"
                            Stops="@([new DateTime(2004, 10, 4, 16, 40, 58),
                                new DateTime(2016, 1, 25, 3, 52, 41),
                                new DateTime(2015, 7, 3, 0, 8, 58),
                                new DateTime(2017, 1, 26, 7, 14, 42)])"
                            TimeZone="@("Atlantic/Azores")"
                            TrackIdField="@("excepturi")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Minutes)"
                                Value="@(428.2877)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2010, 11, 6, 19, 28, 5))"
                                End="@(new DateTime(2023, 10, 19, 21, 34, 22))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2018, 8, 18, 5, 48, 5))"
                            End="@(new DateTime(2002, 1, 16, 21, 58, 24))">
                        </TimeExtent>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(7)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(17274196.7376)"
                            MinScale="@(9727.6793)"
                            Opacity="@(0.3580)"
                            PopupEnabled="@(true)"
                            Title="@("id iste officia")"
                            Visible="@(true)"
                            DefinitionExpression="@("sed")"
                            FloorInfo="@(new LayerFloorInfo("odio"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowEnd,
                                    "assumenda",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    517694.9429,
                                    9715.7789,
                                    true,
                                    new Dimension(160.5166),
                                new TextSymbol("aliquid saepe sapiente",
                                    new MapColor(23, 46, 10),
                                    new MapColor(119, 32, 31),
                                        new Dimension(46.4936),
                                    new MapFont(new Dimension(995.8939),
                                            "Bookman",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        739.2423,
                                    new MapColor(185, 215, 242),
                                    new MapColor(227, 148, 119),
                                        564.5616,
                                    HorizontalAlignment.Center,
                                        true,
                                        774.3501,
                                        new Dimension(96.1483),
                                        true),
                                    true,
                                    "PostalCode = 'M5V 1J9'"),
                            new Label(LabelPlacement.AboveLeft,
                                    "accusamus",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    2152812.5235,
                                    4549.0537,
                                    true,
                                    new Dimension(404.9925),
                                new TextSymbol("sint magni cum",
                                    new MapColor(231, 169, 37),
                                    new MapColor(145, 38, 184),
                                        new Dimension(43.6561),
                                    new MapFont(new Dimension(218.6003),
                                            "Garamond",
                                        MapFontStyle.Oblique,
                                        FontWeight.Normal,
                                        TextDecoration.None),
                                        333.3467,
                                    new MapColor(32, 253, 103),
                                    new MapColor(15, 143, 248),
                                        87.2282,
                                    HorizontalAlignment.Left,
                                        true,
                                        311.4235,
                                        new Dimension(262.2510),
                                        true),
                                    true,
                                    "Street = '123 Main St.'"),
                            new Label(LabelPlacement.BelowBefore,
                                    "ex",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    6515744.2429,
                                    23131.3382,
                                    true,
                                    new Dimension(200.6957),
                                new TextSymbol("porro mollitia iure",
                                    new MapColor(124, 184, 59),
                                    new MapColor(21, 174, 190),
                                        new Dimension(861.2581),
                                    new MapFont(new Dimension(478.5894),
                                            "Arial",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.None),
                                        894.7340,
                                    new MapColor(72, 43, 226),
                                    new MapColor(46, 224, 132),
                                        648.5927,
                                    HorizontalAlignment.Center,
                                        true,
                                        58.1374,
                                        new Dimension(288.4230),
                                        true),
                                    true,
                                    "Phone = '555-555-5555'")])"
                            PopupTemplate="@(new PopupTemplate("sint cupiditate ut",
                                    "magni",
                                    ["minus",
                                        "quia",
                                        "dolore",
                                        "porro"],
                                [new FieldInfo("comment",
                                        "enim",
                                        "sit",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("title",
                                        "magni",
                                        "voluptas",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("comment",
                                        "rerum",
                                        "nesciunt",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new AttachmentsPopupContent("in expedita expedita",
                                        "totam praesentium delectus distinctio quis",
                                        AttachmentsPopupContentDisplayType.Auto),
                                new FieldsPopupContent([new FieldInfo("group",
                                            "consequatur",
                                            "quia",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("password",
                                            "quaerat",
                                            "dicta",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.Year),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("group",
                                            "commodi",
                                            "perferendis",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Var)],
                                        "perspiciatis et exercitationem incidunt voluptates adipisci nisi",
                                        "et voluptatem magni")],
                                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "name",
                                        "autem natus porro",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("cumque laborum facilis",
                                        "https://picsum.photos/640/480/?image=303",
                                        "3a1fcc5e-09e4-35a3-5b82-480564657712",
                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                        "email",
                                        true,
                                        true,
                                        true,
                                        "beatae"),
                                new ActionButton("non sint beatae",
                                        "https://picsum.photos/640/480/?image=857",
                                        "67657f4e-f509-a3f3-3a26-a77bfab3abed",
                                        () => { Console.WriteLine("accusamus"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "et"),
                                new ActionToggle("nemo tenetur esse",
                                        "a0e43573-b0c4-e8aa-a6c7-5698581e17e5",
                                        () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "name",
                                        "asperiores"),
                                new ActionButton("est quisquam totam",
                                        "https://picsum.photos/640/480/?image=828",
                                        "16e640e7-c688-c4e5-126f-a5752f6bce69",
                                        () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                                        "status",
                                        true,
                                        true,
                                        true,
                                        "omnis")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("qui praesentium omnis",
                                    new MapColor(0, 44, 236),
                                    new MapColor(191, 229, 127),
                                        new Dimension(943.6357),
                                    new MapFont(new Dimension(563.2955),
                                            "Times New Roman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        394.6119,
                                    new MapColor(157, 112, 212),
                                    new MapColor(192, 50, 36),
                                        718.7003,
                                    HorizontalAlignment.Right,
                                        true,
                                        443.0844,
                                        new Dimension(211.4573),
                                        true),
                                    "dolore",
                                [new ColorVariable("molestiae",
                                        "ipsam",
                                    [new ColorStop(330.3828,
                                        new MapColor(38, 4, 159),
                                            "fugit")],
                                    new VisualVariableLegendOptions(true,
                                            "dolores sed doloribus"),
                                        "incidunt",
                                        "sit sunt magni")],
                                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(171, 29, 252),
                                        new MapColor(150, 239, 161)),
                                        553.0401,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(359.3987,
                                                505.1616)],
                                            "voluptatem",
                                            "voluptates",
                                            "sunt"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(849.3703,
                                                254.5901),
                                        new AuthoringInfoField1ClassBreakInfos(847.2657,
                                                697.7165),
                                        new AuthoringInfoField1ClassBreakInfos(577.8560,
                                                282.5970),
                                        new AuthoringInfoField1ClassBreakInfos(302.7362,
                                                476.1086)],
                                            "qui",
                                            "veniam",
                                            "perferendis"),
                                        ["modi",
                                            "excepturi"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "voluptatem",
                                        true,
                                    LengthUnit.Feet,
                                        753.3300,
                                        684.1841,
                                        764.6873,
                                        21.9952)))"
                            Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                            <Sublayer 
                                SublayerId="@(4)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(16558977.2956)"
                                MinScale="@(28560.6829)"
                                Opacity="@(0.5429)"
                                PopupEnabled="@(true)"
                                Title="@("illo quia voluptatem")"
                                Visible="@(true)"
                                DefinitionExpression="@("aspernatur")"
                                Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(9)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(1644249.0023)"
                                    MinScale="@(18975.3487)"
                                    Opacity="@(0.7747)"
                                    PopupEnabled="@(true)"
                                    Title="@("ipsam odio molestias")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("quidem")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(21165669.6423)"
                                        MinScale="@(23503.9926)"
                                        Opacity="@(0.7674)"
                                        PopupEnabled="@(true)"
                                        Title="@("tenetur sunt vel")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("inventore")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(1)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(23384423.9460)"
                                            MinScale="@(36900.5712)"
                                            Opacity="@(0.8753)"
                                            PopupEnabled="@(true)"
                                            Title="@("asperiores est tempora")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("aut")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(4)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(1833217.0065)"
                                                MinScale="@(27232.0143)"
                                                Opacity="@(0.4333)"
                                                PopupEnabled="@(true)"
                                                Title="@("veniam sunt qui")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("dolorem")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(3)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(12471328.6450)"
                                                    MinScale="@(4856.2831)"
                                                    Opacity="@(0.0528)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("totam dolorum et")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("dicta")"
                                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("vero sit quam")"
                                                        StringContent="@("et")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("et")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("rerum aut dolorum")"
                                                    StringContent="@("aliquid")"
                                                    OutFields="@(["explicabo",
                                                        "sunt",
                                                        "voluptas",
                                                        "quod"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new TextPopupContent(),
                                                    new AttachmentsPopupContent(),
                                                    new MediaPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "edabed2c-a52a-f5dc-3e0b-128b918b0a05",
                                                            () => { Console.WriteLine("labore"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "be2aa0ff-cec0-8140-41d7-5c020fed3bf6",
                                                            () => { Console.WriteLine("nobis"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "83de6472-63ae-9cc1-84a8-165a30324f8b",
                                                            () => { Console.WriteLine("at"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowEnd)"
                                                    LabelExpression="@("ea")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(23259338.8818)"
                                                    MinScale="@(30163.8508)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(668.8468))"
                                                    Symbol="@(new TextSymbol("quia ex quia"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("City = 'Toronto'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("quasi")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                        980.8541,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["impedit",
                                                            "consequatur",
                                                            "dolorum",
                                                            "excepturi"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "voluptatem",
                                                        true,
                                                    LengthUnit.Centimeters,
                                                        881.3613,
                                                        218.5408,
                                                        643.0172,
                                                        505.6380))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("excepturi vel nulla")"
                                                StringContent="@("accusantium")"
                                                OutFields="@(["enim",
                                                    "sunt",
                                                    "et",
                                                    "qui"])"
                                                FieldInfos="@([new FieldInfo("comment",
                                                        "maiores",
                                                        "nihil",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("status",
                                                        "corporis",
                                                        "ut",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("comment",
                                                        "aut",
                                                        "odit",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("email",
                                                        "laborum",
                                                        "accusantium",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)])"
                                                Content="@([new RelationshipPopupContent("sed est et",
                                                        "ea repudiandae dolores accusamus molestias quis hic",
                                                        2,
                                                        "hic",
                                                    [new RelatedRecordsInfoFieldOrder()],
                                                        4)])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "group",
                                                        "animi molestiae vel")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("sint earum et",
                                                        "e45a9caa-31d7-a8dd-bff9-0001c4351f75",
                                                        () => { Console.WriteLine("corporis"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "createdAt",
                                                        "corrupti")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowBefore)"
                                                LabelExpression="@("a")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(13418332.6231)"
                                                MinScale="@(27914.3784)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(669.0720))"
                                                Symbol="@(new TextSymbol("deserunt sapiente sed",
                                                    new MapColor(213, 172, 201),
                                                    new MapColor(234, 177, 92),
                                                        null,
                                                    new MapFont(),
                                                        591.9420,
                                                    new MapColor(149, 170, 207),
                                                    new MapColor(21, 249, 107),
                                                        565.3190,
                                                    HorizontalAlignment.Right,
                                                        true,
                                                        870.3937,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Phone = '555-555-5555'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quis")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv)]),
                                                    207.2950,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "quos",
                                                        "nihil",
                                                        "maxime"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "esse",
                                                        "dolorem",
                                                        "totam"),
                                                    ["consequatur",
                                                        "nobis"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "eos",
                                                    true,
                                                LengthUnit.Meters,
                                                    67.2928,
                                                    954.8594,
                                                    358.0327,
                                                    711.6310))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("id voluptatem alias")"
                                            StringContent="@("illum")"
                                            OutFields="@(["voluptas",
                                                "qui",
                                                "quos",
                                                "nulla"])"
                                            FieldInfos="@([new FieldInfo("comment",
                                                    "laboriosam",
                                                    "neque",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("name",
                                                    "vel",
                                                    "est",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("email",
                                                    "et",
                                                    "ut",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.ShortDate),
                                                    true,
                                                    true,
                                                StatisticType.Sum)])"
                                            Content="@([new AttachmentsPopupContent("id ipsa iste",
                                                    "repellendus maiores placeat fugiat qui",
                                                    AttachmentsPopupContentDisplayType.Auto)])"
                                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                    "createdAt",
                                                    "deleniti nam in",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "updatedAt",
                                                    "explicabo est ab",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("magni pariatur consequatur",
                                                    "https://picsum.photos/640/480/?image=536",
                                                    "4e8826df-5e31-7705-7fee-16f11e82dad1",
                                                    () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                                    "password",
                                                    true,
                                                    true,
                                                    true,
                                                    "qui"),
                                            new ActionButton("qui ullam ipsa",
                                                    "https://picsum.photos/640/480/?image=977",
                                                    "5b985ee8-9972-b8a1-1052-d14c7183e9d1",
                                                    () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                                    "createdAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "atque")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowLeft)"
                                            LabelExpression="@("nisi")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(2717451.6632)"
                                            MinScale="@(37703.5683)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(785.1172))"
                                            Symbol="@(new TextSymbol("odit consequatur ratione",
                                                new MapColor(33, 237, 94),
                                                new MapColor(145, 12, 64),
                                                    new Dimension(550.8686),
                                                new MapFont(new Dimension(988.4822),
                                                        "Verdana",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Normal,
                                                    TextDecoration.None),
                                                    3.1082,
                                                new MapColor(18, 42, 19),
                                                new MapColor(54, 112, 17),
                                                    750.4063,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    495.3976,
                                                    new Dimension(35.6140),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("City = 'Toronto'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("eius")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(89, 134, 235),
                                                new MapColor(165, 101, 218)),
                                                462.1048,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(1.2147,
                                                        181.5485)],
                                                    "quia",
                                                    "maxime",
                                                    "odit"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(140.5693,
                                                        523.0142),
                                                new AuthoringInfoField1ClassBreakInfos(721.2818,
                                                        110.8677),
                                                new AuthoringInfoField1ClassBreakInfos(741.7962,
                                                        384.6318),
                                                new AuthoringInfoField1ClassBreakInfos(168.6221,
                                                        673.7987)],
                                                    "quo",
                                                    "qui",
                                                    "dolorem"),
                                                ["aut",
                                                    "alias",
                                                    "libero"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "neque",
                                                true,
                                            LengthUnit.NauticalMiles,
                                                300.6640,
                                                653.5510,
                                                792.4581,
                                                763.3519))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("hic distinctio sequi")"
                                        StringContent="@("ut")"
                                        OutFields="@(["repellat",
                                            "iure",
                                            "exercitationem"])"
                                        FieldInfos="@([new FieldInfo("name",
                                                "eaque",
                                                "ut",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("phone",
                                                "quisquam",
                                                "enim",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Avg)])"
                                        Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "eum",
                                                    "libero porro repellat")),
                                        new FieldsPopupContent([new FieldInfo("updatedAt",
                                                    "nam",
                                                    "nihil",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                                "a officiis tempora ad",
                                                "dolores laboriosam odio"),
                                        new TextPopupContent("non rem cum"),
                                        new TextPopupContent("ut et est")])"
                                        ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "title",
                                                "nostrum laudantium id",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "createdAt",
                                                "expedita beatae accusamus",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "updatedAt",
                                                "rerum dolorem qui",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("molestiae rem enim",
                                                "https://picsum.photos/640/480/?image=556",
                                                "05583d0e-4708-749e-ec8e-81351df3a871",
                                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                                "createdAt",
                                                true,
                                                true,
                                                true,
                                                "vel"),
                                        new ActionButton("odio impedit voluptatum",
                                                "https://picsum.photos/640/480/?image=1011",
                                                "8bd15cae-27d8-56f7-2f6b-8b86b6d2b928",
                                                () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "consectetur"),
                                        new ActionButton("ut rerum error",
                                                "https://picsum.photos/640/480/?image=643",
                                                "a0c4db41-9101-30fd-8518-399e04c4384e",
                                                () => { Console.WriteLine("ratione"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "et"),
                                        new ActionToggle("assumenda ipsam delectus",
                                                "2f70c3f5-b9fd-48e6-2f9a-24e719516fd7",
                                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "name",
                                                "deserunt")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveLeft)"
                                        LabelExpression="@("ea")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(25752089.3592)"
                                        MinScale="@(21291.1939)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(335.6088))"
                                        Symbol="@(new TextSymbol("optio voluptates odio",
                                            new MapColor(249, 174, 252),
                                            new MapColor(124, 208, 153),
                                                new Dimension(820.5394),
                                            new MapFont(new Dimension(388.8374),
                                                    "Garamond",
                                                MapFontStyle.Italic,
                                                FontWeight.Bolder,
                                                TextDecoration.Underline),
                                                67.2499,
                                            new MapColor(35, 118, 194),
                                            new MapColor(185, 166, 198),
                                                424.9439,
                                            HorizontalAlignment.Left,
                                                true,
                                                319.9846,
                                                new Dimension(591.2055),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Phone = '555-555-5555'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("autem")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(92, 56, 107),
                                            new MapColor(233, 113, 242)),
                                            596.3486,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(377.1420,
                                                    652.3479)],
                                                "quia",
                                                "fuga",
                                                "consequatur"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(283.5499,
                                                    83.5694),
                                            new AuthoringInfoField1ClassBreakInfos(503.8697,
                                                    4.1158)],
                                                "nesciunt",
                                                "animi",
                                                "ut"),
                                            ["sapiente",
                                                "deleniti",
                                                "alias"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "ipsam",
                                            true,
                                        LengthUnit.NauticalMiles,
                                            712.3931,
                                            952.9983,
                                            365.4953,
                                            293.2039))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("quis et id")"
                                    StringContent="@("voluptatibus")"
                                    OutFields="@(["nihil",
                                        "quae",
                                        "totam",
                                        "suscipit"])"
                                    FieldInfos="@([new FieldInfo("category",
                                            "animi",
                                            "fugiat",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("token",
                                            "sed",
                                            "at",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Max)])"
                                    Content="@([new AttachmentsPopupContent("placeat aliquid dolores",
                                            "illum sit officia qui non perspiciatis",
                                            AttachmentsPopupContentDisplayType.Auto),
                                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "eos",
                                                "qui aliquid recusandae"))])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                            "category",
                                            "consequatur est vel",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "token",
                                            "illum odit officiis",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("omnis quae expedita",
                                            "b03dab26-08c9-714c-05b9-e8e3d49e722d",
                                            () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "password",
                                            "dignissimos"),
                                    new ActionToggle("in voluptatem soluta",
                                            "0647aebe-4e75-d94e-0073-c0e789c63d02",
                                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "token",
                                            "unde")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowLeft)"
                                    LabelExpression="@("voluptas")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(5661224.1112)"
                                    MinScale="@(14229.5388)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(231.6768))"
                                    Symbol="@(new TextSymbol("voluptatem nulla quia",
                                        new MapColor(8, 126, 66),
                                        new MapColor(85, 233, 180),
                                            new Dimension(517.8404),
                                        new MapFont(new Dimension(556.2877),
                                                "Arial",
                                            MapFontStyle.Normal,
                                            FontWeight.Bolder,
                                            TextDecoration.LineThrough),
                                            278.7111,
                                        new MapColor(170, 98, 88),
                                        new MapColor(100, 7, 139),
                                            415.1351,
                                        HorizontalAlignment.Center,
                                            true,
                                            39.4919,
                                            new Dimension(695.6444),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Name = 'John Doe'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("eos")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-125.6924,
                    -91.1279,
                    -17.4334,
                    -20.0111,
                    869.6253,
                    648.7910,
                    878.9462,
                    25.1482,
                new SpatialReference(8,
                        "aliquam",
                        "dolores",
                        "qui"),
                    true,
                    true),
                6,
                2,
            new MapImageLayerCreateExportImageParametersOptions(889.7127,
                    190.6579,
                    "voluptatem"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-84.4681,
                    75.4480,
                    13.1353,
                    48.3034,
                    716.3502,
                    546.8055,
                    581.7954,
                    642.3179,
                new SpatialReference(6,
                        "dolorem",
                        "ut",
                        "magni"),
                    true,
                    true),
                6,
                6,
            new MapImageLayerFetchImageOptions(96.3580,
                    107.2307,
                    "quam"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(6);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Hue;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2007, 10, 8, 22, 41, 57),
                    new DateTime(2007, 10, 11, 2, 2, 11));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("dignissimos",
                    "voluptatem",
                new TimeExtent(new DateTime(2003, 6, 2, 22, 34, 5),
                        new DateTime(2006, 1, 2, 20, 2, 15)),
                new TimeInterval(TemporalTime.Days,
                        229.5186),
                    [new DateTime(2009, 11, 24, 19, 43, 12),
                        new DateTime(2005, 8, 15, 8, 47, 53)],
                    "Asia/Ulaanbaatar",
                    "dignissimos");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(6,
                    true,
                    true,
                ListMode.Hide,
                    13889832.9899,
                    33714.4350,
                    0.1494,
                    true,
                    "quae exercitationem temporibus",
                    true,
                    "aut",
                new LayerFloorInfo("dolorum"),
                [new Label(LabelPlacement.AboveAfter,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        20671427.7916,
                        36275.3336,
                        true,
                        new Dimension(651.2381),
                    new TextSymbol("numquam aspernatur autem",
                        new MapColor(218, 16, 87),
                        new MapColor(109, 166, 133),
                            new Dimension(603.6450),
                        new MapFont(new Dimension(785.6039),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            782.9034,
                        new MapColor(21, 105, 37),
                        new MapColor(233, 245, 179),
                            241.1727,
                        HorizontalAlignment.Left,
                            true,
                            493.9650,
                            new Dimension(291.9736),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.BelowEnd,
                        "ut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        1959562.6022,
                        6561.2880,
                        true,
                        new Dimension(550.3060),
                    new TextSymbol("vel illo porro",
                        new MapColor(1, 161, 136),
                        new MapColor(133, 102, 81),
                            new Dimension(896.0129),
                        new MapFont(new Dimension(41.7122),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            317.5714,
                        new MapColor(62, 154, 130),
                        new MapColor(229, 199, 66),
                            475.7265,
                        HorizontalAlignment.Center,
                            true,
                            539.2685,
                            new Dimension(124.4305),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("velit magni eum",
                        "nesciunt",
                        ["reprehenderit",
                            "quaerat"],
                    [new FieldInfo("token",
                            "fugiat",
                            "distinctio",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("createdAt",
                            "sint",
                            "quo",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("email",
                            "est",
                            "alias",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Max)],
                    [new RelationshipPopupContent("ducimus voluptatibus aut",
                            "voluptas quibusdam eligendi aut tempora ea",
                            8,
                            "recusandae",
                        [new RelatedRecordsInfoFieldOrder("rerum",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("minus",
                            OrderBy.Asc)],
                            5),
                    new RelationshipPopupContent("voluptatem ut voluptatibus",
                            "aut labore impedit porro",
                            9,
                            "eaque",
                        [new RelatedRecordsInfoFieldOrder("similique",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("voluptatem",
                            OrderBy.Asc)],
                            2)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "group",
                            "perferendis aliquam ut",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "id",
                            "alias quisquam qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "createdAt",
                            "pariatur laudantium excepturi",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "avatar",
                            "quia qui nihil",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("sit ab commodi",
                            "c7ade9be-c000-fb53-54dc-f614ba5cb251",
                            () => { Console.WriteLine("minus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "fuga"),
                    new ActionButton("itaque ipsam totam",
                            "https://picsum.photos/640/480/?image=469",
                            "d3da3010-2fe3-1625-b1b7-1966afaf8fef",
                            () => { Console.WriteLine("iure"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "et")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Show,
                    40983048.4675,
                    31168.2198,
                    0.4779,
                    true,
                    "nobis et illo",
                    true,
                    "alias",
                new LayerFloorInfo("doloremque"),
                [new Label(LabelPlacement.AboveStart,
                        "sed",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        5926119.3558,
                        42192.4682,
                        true,
                        new Dimension(146.3668),
                    new TextSymbol("amet magni sed",
                        new MapColor(1, 189, 169),
                        new MapColor(59, 101, 125),
                            new Dimension(204.2416),
                        new MapFont(new Dimension(287.7890),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            77.2961,
                        new MapColor(196, 203, 61),
                        new MapColor(129, 117, 239),
                            834.3940,
                        HorizontalAlignment.Left,
                            true,
                            461.9163,
                            new Dimension(870.4050),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterStart,
                        "eveniet",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        1349646.5387,
                        29073.1544,
                        true,
                        new Dimension(456.9284),
                    new TextSymbol("harum facere dolores",
                        new MapColor(93, 97, 127),
                        new MapColor(18, 48, 3),
                            new Dimension(549.7479),
                        new MapFont(new Dimension(949.1169),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            484.2740,
                        new MapColor(106, 250, 75),
                        new MapColor(71, 230, 139),
                            980.8660,
                        HorizontalAlignment.Center,
                            true,
                            206.4460,
                            new Dimension(312.4104),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.CenterAlong,
                        "sunt",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        16191128.8023,
                        26530.1187,
                        true,
                        new Dimension(163.6108),
                    new TextSymbol("quo omnis rem",
                        new MapColor(193, 188, 31),
                        new MapColor(121, 213, 59),
                            new Dimension(136.2721),
                        new MapFont(new Dimension(67.8334),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            435.3469,
                        new MapColor(105, 90, 112),
                        new MapColor(84, 217, 143),
                            856.6413,
                        HorizontalAlignment.Left,
                            true,
                            219.9870,
                            new Dimension(595.6508),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("et autem sed",
                        "fugit",
                        ["voluptatem",
                            "sint",
                            "alias",
                            "sed"],
                    [new FieldInfo("createdAt",
                            "et",
                            "quis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "quas",
                                "sint qui deleniti")),
                    new MediaPopupContent("hic libero rem",
                            "beatae quis suscipit libero nesciunt quas accusantium",
                        [new ColumnChartMediaInfo("aut eum qui",
                                "rem",
                                "in temporibus minus",
                            new ChartMediaInfoValue(["veritatis",
                                    "nostrum",
                                    "qui",
                                    "accusamus"],
                                    "dignissimos",
                                    "eaque",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "nesciunt",
                                        356.3477),
                                new ChartMediaInfoValueSeries("phone",
                                        "sed",
                                        653.9548),
                                new ChartMediaInfoValueSeries("category",
                                        "ut",
                                        286.7882)],
                                [new MapColor(12, 218, 105),
                                new MapColor(142, 10, 46),
                                new MapColor(98, 160, 82)]))],
                            1),
                    new MediaPopupContent("delectus facilis suscipit",
                            "molestiae praesentium est nihil rem magni aspernatur",
                        [new LineChartMediaInfo("et adipisci et",
                                "laboriosam",
                                "ad dignissimos aut",
                            new ChartMediaInfoValue(["non",
                                    "aliquid",
                                    "voluptate",
                                    "adipisci"],
                                    "debitis",
                                    "quae",
                                [new ChartMediaInfoValueSeries("password",
                                        "odio",
                                        164.7634),
                                new ChartMediaInfoValueSeries("comment",
                                        "ducimus",
                                        252.2889),
                                new ChartMediaInfoValueSeries("title",
                                        "ullam",
                                        227.7436),
                                new ChartMediaInfoValueSeries("email",
                                        "et",
                                        236.2774)],
                                [new MapColor(88, 108, 199),
                                new MapColor(83, 116, 111)])),
                        new ImageMediaInfo("rerum perspiciatis saepe",
                                "enim",
                                "aut perferendis velit",
                            new ImageMediaInfoValue("http://mireya.com",
                                    "http://vern.biz"),
                                873.4290)],
                            3)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "non dolores adipisci",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "createdAt",
                            "consequatur aspernatur sequi",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "token",
                            "praesentium fugiat voluptas",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("doloremque sed deserunt",
                            "b94a71b2-2157-2a25-5e14-7f153ed06671",
                            () => { Console.WriteLine("commodi"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "et")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    29231101.6259,
                    2702.2866,
                    0.9905,
                    true,
                    "voluptatem recusandae amet",
                    true,
                    "voluptatem",
                new LayerFloorInfo("dolorem"),
                [new Label(LabelPlacement.AboveLeft,
                        "ut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        5865266.4341,
                        16025.5185,
                        true,
                        new Dimension(629.2146),
                    new TextSymbol("unde velit occaecati",
                        new MapColor(63, 142, 128),
                        new MapColor(116, 189, 168),
                            new Dimension(296.6045),
                        new MapFont(new Dimension(651.3960),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            527.4897,
                        new MapColor(207, 60, 54),
                        new MapColor(36, 38, 211),
                            300.8992,
                        HorizontalAlignment.Center,
                            true,
                            257.6354,
                            new Dimension(36.9216),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AboveEnd,
                        "temporibus",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        18740136.6441,
                        48210.9927,
                        true,
                        new Dimension(565.4892),
                    new TextSymbol("quo et maiores",
                        new MapColor(5, 44, 50),
                        new MapColor(24, 195, 210),
                            new Dimension(960.0654),
                        new MapFont(new Dimension(141.0510),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            987.6847,
                        new MapColor(108, 1, 42),
                        new MapColor(171, 228, 152),
                            711.6333,
                        HorizontalAlignment.Left,
                            true,
                            571.1095,
                            new Dimension(510.9977),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("autem est soluta",
                        "delectus",
                        ["dolores",
                            "libero"],
                    [new FieldInfo("category",
                            "ut",
                            "atque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("group",
                            "minus",
                            "et",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "ipsam",
                                "non in dolorem")),
                    new FieldsPopupContent([new FieldInfo("title",
                                "eius",
                                "labore",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("token",
                                "autem",
                                "labore",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Count)],
                            "ut ut ut natus",
                            "architecto necessitatibus omnis"),
                    new FieldsPopupContent([new FieldInfo("avatar",
                                "repudiandae",
                                "est",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("password",
                                "dolorum",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.DayShortMonthYearShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("comment",
                                "rerum",
                                "repellendus",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("status",
                                "at",
                                "rerum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                            "molestiae et magnam eos",
                            "quo id numquam"),
                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "rem",
                                "odio asperiores provident"))],
                    [new ExpressionInfo("return $feature.Name;",
                            "comment",
                            "est reiciendis dignissimos",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "avatar",
                            "necessitatibus voluptas similique",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "title",
                            "molestiae alias aut",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "createdAt",
                            "harum molestias accusantium",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("necessitatibus porro voluptas",
                            "cb984297-f54a-c6e4-2578-a461c14ad0b3",
                            () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "omnis")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(-131.8624,
                    61.5807,
                    -81.0600,
                    59.2116,
                    842.6098,
                    111.7361,
                    156.6123,
                    900.2340,
                new SpatialReference(6,
                        "veniam",
                        "voluptatem",
                        "aut"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    2453014.9318,
                    44653.0556,
                    0.3259,
                    true,
                    "hic accusamus itaque",
                    true,
                    "adipisci",
                new LayerFloorInfo("voluptatem"),
                [new Label(LabelPlacement.BelowLeft,
                        "repellat",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        4570269.1124,
                        6546.5874,
                        true,
                        new Dimension(686.3981),
                    new TextSymbol("quia iure sunt",
                        new MapColor(91, 194, 245),
                        new MapColor(99, 242, 214),
                            new Dimension(863.2401),
                        new MapFont(new Dimension(492.4371),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            467.0988,
                        new MapColor(187, 61, 145),
                        new MapColor(147, 218, 197),
                            211.6073,
                        HorizontalAlignment.Left,
                            true,
                            404.9750,
                            new Dimension(691.1940),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("qui numquam reiciendis",
                        "qui",
                        ["assumenda",
                            "amet"],
                    [new FieldInfo("phone",
                            "nam",
                            "explicabo",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("password",
                            "eos",
                            "quod",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new RelationshipPopupContent("voluptas ratione repudiandae",
                            "ut id omnis deserunt voluptatibus quidem eaque",
                            2,
                            "consequatur",
                        [new RelatedRecordsInfoFieldOrder("iure",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("eos",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("est",
                            OrderBy.Desc)],
                            6),
                    new MediaPopupContent("quia sequi aut",
                            "omnis hic officiis velit non quam",
                        [new LineChartMediaInfo("ut a error",
                                "nemo",
                                "facere quasi ea",
                            new ChartMediaInfoValue(["quisquam",
                                    "architecto"],
                                    "nesciunt",
                                    "sunt",
                                [new ChartMediaInfoValueSeries("phone",
                                        "ratione",
                                        792.9517),
                                new ChartMediaInfoValueSeries("avatar",
                                        "ex",
                                        739.1869)],
                                [new MapColor(106, 80, 190)]))],
                            1),
                    new AttachmentsPopupContent("illo fugit soluta",
                            "ex quae sed accusantium et nisi",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "token",
                            "ab aut totam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "updatedAt",
                            "suscipit molestias sed",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("eaque dolor labore",
                            "9feea4ec-58f5-935b-d198-e6a034b82c53",
                            () => { Console.WriteLine("eveniet"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "vel"),
                    new ActionToggle("similique voluptatem animi",
                            "7a9d04cd-54d5-0ff1-02cd-fa2df6a9bf40",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "voluptates"),
                    new ActionButton("reiciendis qui dolor",
                            "https://picsum.photos/640/480/?image=253",
                            "9097e259-e927-bba4-fb55-671e93a1a13c",
                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "provident"),
                    new ActionToggle("sequi nam qui",
                            "a684bc63-94e2-ee48-2dcb-2250e84292ed",
                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "qui")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    83.6216);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2005, 4, 12, 20, 50, 33),
                    new DateTime(2020, 11, 6, 9, 12, 38));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
