@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Screen)"
                        Dpi="@(280.3052)"
                        Effect="@(new Effect("dolores",
                            40934033.3433))"
                        GdbVersion="@("6.6.6.8")"
                        ImageFormat="@(MapImageFormat.Png)"
                        ImageMaxHeight="@(7)"
                        ImageMaxWidth="@(2)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(31569293.3302)"
                        MinScale="@(7180.1887)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(119.5328)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Show)"
                        Visible="@(true)"
                        Opacity="@(0.6711)"
                        Copyright="@("aut")"
                        FullExtent="@(new Extent(69.5732,
                                145.8456,
                                64.0686,
                                45.9485,
                                395.8387,
                                739.7331,
                                957.0002,
                                92.8113,
                            new SpatialReference(5,
                                    "a",
                                    "nobis",
                                    "nisi"),
                                true,
                                true))"
                        Title="@("ea eum repudiandae")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Hours)"
                            Value="@(799.6741)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("dolor")"
                            EndField="@("veritatis")"
                            Stops="@([new DateTime(2016, 6, 11, 17, 30, 21),
                                new DateTime(2019, 11, 4, 12, 30, 44),
                                new DateTime(2000, 10, 6, 21, 0, 31)])"
                            TimeZone="@("Australia/Melbourne")"
                            TrackIdField="@("neque")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Hours)"
                                Value="@(484.8697)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2006, 10, 24, 13, 54, 19))"
                                End="@(new DateTime(2007, 4, 17, 18, 40, 48))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2017, 4, 2, 16, 30, 12))"
                            End="@(new DateTime(2000, 4, 2, 2, 30, 39))">
                        </TimeExtent>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(9)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(8183500.5961)"
                            MinScale="@(41280.6939)"
                            Opacity="@(0.3623)"
                            PopupEnabled="@(true)"
                            Title="@("aspernatur est molestiae")"
                            Visible="@(true)"
                            DefinitionExpression="@("libero")"
                            FloorInfo="@(new LayerFloorInfo("expedita"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterStart,
                                    "eius",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    39662499.5346,
                                    44719.2414,
                                    true,
                                    new Dimension(635.9742),
                                new TextSymbol("distinctio laborum et",
                                    new MapColor(217, 233, 8),
                                    new MapColor(221, 180, 79),
                                        new Dimension(90.9253),
                                    new MapFont(new Dimension(489.7079),
                                            "Courier New",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        552.7192,
                                    new MapColor(160, 61, 9),
                                    new MapColor(219, 254, 216),
                                        381.7205,
                                    HorizontalAlignment.Center,
                                        true,
                                        4.5355,
                                        new Dimension(998.1138),
                                        true),
                                    true,
                                    "Country = 'Canada'")])"
                            PopupTemplate="@(new PopupTemplate("et veniam adipisci",
                                    "corporis",
                                    ["velit",
                                        "suscipit"],
                                [new FieldInfo("email",
                                        "sint",
                                        "porro",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("id",
                                        "iusto",
                                        "id",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("email",
                                        "et",
                                        "commodi",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.ShortDateLeLongTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("status",
                                        "beatae",
                                        "voluptate",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.DayShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                [new FieldsPopupContent([new FieldInfo("group",
                                            "id",
                                            "atque",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.ShortDateLeLongTime),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("status",
                                            "enim",
                                            "quas",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("phone",
                                            "ea",
                                            "velit",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                        "recusandae deserunt aut fuga sunt et odit",
                                        "sequi deleniti nihil")],
                                [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "category",
                                        "enim quaerat perspiciatis",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("quia sint adipisci",
                                        "https://picsum.photos/640/480/?image=337",
                                        "6d3a3a55-ea7f-e5b5-6a07-f95d347c3ee7",
                                        () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                        "createdAt",
                                        true,
                                        true,
                                        true,
                                        "ipsa"),
                                new ActionToggle("voluptate saepe alias",
                                        "3376bac6-d614-b103-8d47-800ce6e363d4",
                                        () => { Console.WriteLine("optio"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "updatedAt",
                                        "iusto")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("eaque omnis qui",
                                    new MapColor(60, 131, 178),
                                    new MapColor(14, 235, 81),
                                        new Dimension(36.0069),
                                    new MapFont(new Dimension(173.0816),
                                            "Palatino",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        674.1210,
                                    new MapColor(123, 46, 174),
                                    new MapColor(82, 73, 235),
                                        884.7015,
                                    HorizontalAlignment.Right,
                                        true,
                                        206.9284,
                                        new Dimension(662.1665),
                                        true),
                                    "cumque",
                                [new RotationVariable("qui",
                                    Axis.Tilt,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "in fugiat placeat"),
                                        "aliquam",
                                        "recusandae asperiores soluta"),
                                new SizeVariable("omnis",
                                        new Dimension(572.4815),
                                        new Dimension(306.5163),
                                        983.8628,
                                        439.2085,
                                        VisualValueRepresentation.Width,
                                        VisualValueUnit.Yards,
                                        "non",
                                        "perferendis",
                                        true,
                                        VisualAxis.WidthAndDepth,
                                        "quia",
                                        "aperiam accusantium ut",
                                    new VisualVariableLegendOptions(true,
                                            "animi pariatur dolor")),
                                new ColorVariable("quisquam",
                                        "fuga",
                                    [new ColorStop(317.1243,
                                        new MapColor(154, 155, 132),
                                            "praesentium"),
                                    new ColorStop(664.4163,
                                        new MapColor(17, 156, 201),
                                            "accusamus")],
                                    new VisualVariableLegendOptions(true,
                                            "doloribus laboriosam ut"),
                                        "voluptate",
                                        "magnam in distinctio"),
                                new RotationVariable("inventore",
                                    Axis.Roll,
                                    RotationType.Arithmetic,
                                    new VisualVariableLegendOptions(true,
                                            "commodi aperiam in"),
                                        "dolores",
                                        "ex dolores neque")],
                                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(178, 201, 44),
                                        new MapColor(101, 74, 209)),
                                        154.4006,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(945.3647,
                                                954.1406),
                                        new AuthoringInfoField1ClassBreakInfos(849.0595,
                                                254.1796),
                                        new AuthoringInfoField1ClassBreakInfos(413.4571,
                                                362.4705),
                                        new AuthoringInfoField1ClassBreakInfos(271.5467,
                                                361.6824)],
                                            "veritatis",
                                            "voluptatem",
                                            "velit"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(454.4646,
                                                557.7887),
                                        new AuthoringInfoField1ClassBreakInfos(571.1673,
                                                341.7370),
                                        new AuthoringInfoField1ClassBreakInfos(588.5469,
                                                566.0412),
                                        new AuthoringInfoField1ClassBreakInfos(367.8847,
                                                272.2498)],
                                            "aut",
                                            "quis",
                                            "et"),
                                        ["temporibus",
                                            "quasi",
                                            "maxime"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "at",
                                        true,
                                    LengthUnit.Decimeters,
                                        119.5837,
                                        983.3176,
                                        814.6344,
                                        812.9287)))"
                            Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(19247714.5181)"
                                MinScale="@(23917.5472)"
                                Opacity="@(0.4785)"
                                PopupEnabled="@(true)"
                                Title="@("aperiam sapiente delectus")"
                                Visible="@(true)"
                                DefinitionExpression="@("fugit")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(7)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(45550369.2842)"
                                    MinScale="@(45848.9007)"
                                    Opacity="@(0.8900)"
                                    PopupEnabled="@(true)"
                                    Title="@("molestiae aut a")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("fugiat")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(7)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(12219096.4640)"
                                        MinScale="@(29132.3385)"
                                        Opacity="@(0.6027)"
                                        PopupEnabled="@(true)"
                                        Title="@("commodi optio sit")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("quasi")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(8)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(26171276.0437)"
                                            MinScale="@(45030.1705)"
                                            Opacity="@(0.0865)"
                                            PopupEnabled="@(true)"
                                            Title="@("facilis voluptatibus unde")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("sed")"
                                            Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                            <Sublayer 
                                                SublayerId="@(4)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(35182139.2333)"
                                                MinScale="@(33732.8712)"
                                                Opacity="@(0.8107)"
                                                PopupEnabled="@(true)"
                                                Title="@("cum perspiciatis omnis")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("quos")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(8)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(32950183.9120)"
                                                    MinScale="@(44440.8328)"
                                                    Opacity="@(0.6863)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("sint quae consequuntur")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("est")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("ut quasi dolores")"
                                                        StringContent="@("aut")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("quas")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("aut sit enim")"
                                                    StringContent="@("nulla")"
                                                    OutFields="@(["et",
                                                        "laborum",
                                                        "reiciendis"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new ExpressionPopupContent(),
                                                    new ExpressionPopupContent(),
                                                    new RelationshipPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "4504cd96-8746-d18d-0876-285388f4d4e6",
                                                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveRight)"
                                                    LabelExpression="@("velit")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(40049947.4335)"
                                                    MinScale="@(12232.3890)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(996.4571))"
                                                    Symbol="@(new TextSymbol("excepturi nesciunt eos"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("ObjectID = 1")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("impedit")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                    new MultipartColorRamp(),
                                                        458.7638,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["labore",
                                                            "sint",
                                                            "assumenda",
                                                            "recusandae"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "quidem",
                                                        true,
                                                    LengthUnit.Decimeters,
                                                        745.8307,
                                                        849.6154,
                                                        619.9195,
                                                        370.1711))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("perspiciatis qui dignissimos")"
                                                StringContent="@("repudiandae")"
                                                OutFields="@(["vel",
                                                    "id"])"
                                                FieldInfos="@([new FieldInfo("comment",
                                                        "nostrum",
                                                        "autem",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var),
                                                new FieldInfo("group",
                                                        "ipsa",
                                                        "temporibus",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min),
                                                new FieldInfo("id",
                                                        "qui",
                                                        "exercitationem",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("avatar",
                                                        "quisquam",
                                                        "natus",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var)])"
                                                Content="@([new AttachmentsPopupContent("fugit id ab",
                                                        "et reiciendis est dicta consequatur"),
                                                new RelationshipPopupContent("quo vel quod",
                                                        "doloribus et dolores excepturi voluptas",
                                                        5,
                                                        "accusamus",
                                                    [new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder()],
                                                        1),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "quis error officiis eveniet saepe perferendis",
                                                        "officiis odit odit"),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                        "group",
                                                        "aut voluptas quia"),
                                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "password",
                                                        "nihil cum iste"),
                                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "status",
                                                        "et iste enim"),
                                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                        "phone",
                                                        "eos ut ab")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("dolorum amet qui",
                                                        "https://picsum.photos/640/480/?image=1003",
                                                        "fb07895e-fda9-503b-8e06-dc57f72724fb",
                                                        () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "tempora"),
                                                new ActionButton("voluptates nihil dolores",
                                                        "https://picsum.photos/640/480/?image=1083",
                                                        "1723fd48-7366-0089-9cb3-629328453555",
                                                        () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                                                        "email",
                                                        true,
                                                        true,
                                                        true,
                                                        "facilis"),
                                                new ActionToggle("dolorem molestiae error",
                                                        "85f77ede-f4b2-ecca-75d4-84ac877a69e7",
                                                        () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "title",
                                                        "minus"),
                                                new ActionButton("eum ullam voluptatum",
                                                        "https://picsum.photos/640/480/?image=1026",
                                                        "e1dadebe-ef56-773b-d3bc-9a9b7c9960f4",
                                                        () => { Console.WriteLine("quod"); return Task.CompletedTask; },
                                                        "createdAt",
                                                        true,
                                                        true,
                                                        true,
                                                        "in")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveStart)"
                                                LabelExpression="@("quod")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(3177577.6228)"
                                                MinScale="@(17953.8517)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(842.2990))"
                                                Symbol="@(new TextSymbol("ipsa natus vel",
                                                    new MapColor(164, 223, 110),
                                                    new MapColor(165, 120, 6),
                                                        null,
                                                    new MapFont(),
                                                        798.1571,
                                                    new MapColor(62, 40, 35),
                                                    new MapColor(12, 127, 147),
                                                        726.1625,
                                                    HorizontalAlignment.Right,
                                                        true,
                                                        241.1498,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("PostalCode = 'M5V 1J9'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("voluptas")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(120, 67, 136),
                                                    new MapColor(232, 161, 145)),
                                                    677.6950,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "atque",
                                                        "commodi",
                                                        "vitae"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "quo",
                                                        "dolore",
                                                        "laudantium"),
                                                    ["ab",
                                                        "et",
                                                        "dolor"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "repellendus",
                                                    true,
                                                LengthUnit.Meters,
                                                    732.1783,
                                                    635.0962,
                                                    957.1529,
                                                    641.4505))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("quia sequi et")"
                                            StringContent="@("magnam")"
                                            OutFields="@(["corporis",
                                                "voluptatem",
                                                "in"])"
                                            FieldInfos="@([new FieldInfo("token",
                                                    "dolores",
                                                    "omnis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("id",
                                                    "ut",
                                                    "architecto",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("avatar",
                                                    "eum",
                                                    "autem",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev)])"
                                            Content="@([new MediaPopupContent("nesciunt voluptas magnam",
                                                    "voluptatum nulla fugit nobis vel",
                                                [new BarChartMediaInfo("sed placeat aut",
                                                        "in",
                                                        "nobis aut modi",
                                                    new ChartMediaInfoValue()),
                                                new ImageMediaInfo("eum id aut",
                                                        "ad",
                                                        "et minus quia",
                                                    new ImageMediaInfoValue(),
                                                        696.6202),
                                                new PieChartMediaInfo("aut laboriosam enim",
                                                        "rem",
                                                        "harum quam ullam",
                                                    new ChartMediaInfoValue())],
                                                    8)])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "title",
                                                    "incidunt maxime beatae",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "name",
                                                    "maiores qui ut",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("exercitationem natus tenetur",
                                                    "fe0c1159-97f7-1015-ca9d-f8754e975fce",
                                                    () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "updatedAt",
                                                    "voluptatem"),
                                            new ActionButton("voluptate omnis voluptatem",
                                                    "https://picsum.photos/640/480/?image=544",
                                                    "d19bdbdd-ee41-e1d2-9546-431272ae8bae",
                                                    () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                                                    "email",
                                                    true,
                                                    true,
                                                    true,
                                                    "nihil"),
                                            new ActionButton("ut pariatur voluptatem",
                                                    "https://picsum.photos/640/480/?image=10",
                                                    "8604bb19-e492-921e-fd2f-634a9a679992",
                                                    () => { Console.WriteLine("placeat"); return Task.CompletedTask; },
                                                    "name",
                                                    true,
                                                    true,
                                                    true,
                                                    "corporis")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveBefore)"
                                            LabelExpression="@("ea")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(23070540.4221)"
                                            MinScale="@(19118.7698)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(130.2784))"
                                            Symbol="@(new TextSymbol("optio omnis rerum",
                                                new MapColor(122, 37, 135),
                                                new MapColor(0, 207, 140),
                                                    new Dimension(943.0823),
                                                new MapFont(new Dimension(900.9692),
                                                        "Garamond",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Bolder,
                                                    TextDecoration.Underline),
                                                    758.8899,
                                                new MapColor(227, 205, 242),
                                                new MapColor(227, 186, 187),
                                                    791.7782,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    910.9501,
                                                    new Dimension(390.2227),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Province = 'Ontario'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("dolor")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(166, 165, 175),
                                                new MapColor(180, 169, 4)),
                                                950.1849,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(797.0191,
                                                        32.9997)],
                                                    "commodi",
                                                    "ab",
                                                    "aut"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(926.5239,
                                                        70.4410)],
                                                    "in",
                                                    "dicta",
                                                    "quia"),
                                                ["magni",
                                                    "magni"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "qui",
                                                true,
                                            LengthUnit.Feet,
                                                107.5065,
                                                929.8607,
                                                667.3496,
                                                607.5857))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("amet rerum sunt")"
                                        StringContent="@("perspiciatis")"
                                        OutFields="@(["nostrum",
                                            "magnam",
                                            "et",
                                            "sint"])"
                                        FieldInfos="@([new FieldInfo("token",
                                                "tenetur",
                                                "commodi",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("title",
                                                "excepturi",
                                                "optio",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Count)])"
                                        Content="@([new MediaPopupContent("officia facilis vero",
                                                "laborum est nostrum pariatur quis omnis",
                                            [new PieChartMediaInfo("aut aliquid ut",
                                                    "quasi",
                                                    "et quo natus",
                                                new ChartMediaInfoValue(["sed",
                                                        "sunt",
                                                        "quam",
                                                        "fugit"],
                                                        "nihil",
                                                        "quis",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(173, 114, 37),
                                                    new MapColor(27, 190, 170),
                                                    new MapColor(7, 166, 153)])),
                                            new PieChartMediaInfo("nam nulla voluptatem",
                                                    "porro",
                                                    "aut voluptatem incidunt",
                                                new ChartMediaInfoValue(["in",
                                                        "modi",
                                                        "odio",
                                                        "quam"],
                                                        "laudantium",
                                                        "hic",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(254, 16, 207)])),
                                            new BarChartMediaInfo("quo voluptas odio",
                                                    "non",
                                                    "molestiae esse repellat",
                                                new ChartMediaInfoValue(["ut",
                                                        "atque"],
                                                        "et",
                                                        "eligendi",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(230, 45, 16),
                                                    new MapColor(186, 186, 65),
                                                    new MapColor(142, 183, 166),
                                                    new MapColor(168, 192, 214)])),
                                            new BarChartMediaInfo("ratione consectetur quasi",
                                                    "omnis",
                                                    "inventore neque aperiam",
                                                new ChartMediaInfoValue(["magnam",
                                                        "cum",
                                                        "aspernatur"],
                                                        "ut",
                                                        "culpa",
                                                    [new ChartMediaInfoValueSeries()],
                                                    [new MapColor(164, 163, 8),
                                                    new MapColor(60, 199, 234),
                                                    new MapColor(159, 6, 124),
                                                    new MapColor(164, 165, 206)]))],
                                                3),
                                        new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "ex",
                                                    "adipisci mollitia minus")),
                                        new MediaPopupContent("magnam animi neque",
                                                "sunt dolores consequuntur ipsum quis est nulla",
                                            [new ImageMediaInfo("eligendi quae numquam",
                                                    "laborum",
                                                    "ad iure soluta",
                                                new ImageMediaInfoValue("http://selmer.info",
                                                        "https://bell.info"),
                                                    836.7351),
                                            new ColumnChartMediaInfo("dolores minima molestiae",
                                                    "veritatis",
                                                    "consequatur non occaecati",
                                                new ChartMediaInfoValue(["nostrum",
                                                        "quia",
                                                        "quia",
                                                        "nihil"],
                                                        "ut",
                                                        "quisquam",
                                                    [new ChartMediaInfoValueSeries()],
                                                    [new MapColor(173, 78, 149),
                                                    new MapColor(120, 73, 121),
                                                    new MapColor(114, 206, 223),
                                                    new MapColor(20, 248, 236)])),
                                            new ColumnChartMediaInfo("quos esse placeat",
                                                    "officia",
                                                    "recusandae autem ratione",
                                                new ChartMediaInfoValue(["amet",
                                                        "et",
                                                        "omnis",
                                                        "eos"],
                                                        "amet",
                                                        "quo",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(46, 164, 233),
                                                    new MapColor(250, 168, 21)]))],
                                                2)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "phone",
                                                "non alias assumenda",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "name",
                                                "sit occaecati ducimus",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "category",
                                                "corporis autem quo",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "createdAt",
                                                "dolor commodi sed",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("fugiat molestiae voluptatem",
                                                "67eabe46-e07f-8671-d48a-6df19e2c09cc",
                                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "phone",
                                                "amet"),
                                        new ActionButton("voluptas ad enim",
                                                "https://picsum.photos/640/480/?image=550",
                                                "bd352ae6-e246-532b-80b1-94f160fda889",
                                                () => { Console.WriteLine("ipsum"); return Task.CompletedTask; },
                                                "status",
                                                true,
                                                true,
                                                true,
                                                "deserunt")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterStart)"
                                        LabelExpression="@("eos")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(47558707.1608)"
                                        MinScale="@(25583.0510)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(568.4272))"
                                        Symbol="@(new TextSymbol("blanditiis et nisi",
                                            new MapColor(86, 57, 191),
                                            new MapColor(117, 172, 26),
                                                new Dimension(874.3700),
                                            new MapFont(new Dimension(164.8205),
                                                    "Palatino",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                626.3806,
                                            new MapColor(196, 85, 10),
                                            new MapColor(88, 141, 223),
                                                912.2742,
                                            HorizontalAlignment.Right,
                                                true,
                                                897.0002,
                                                new Dimension(67.3380),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Country = 'Canada'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("ducimus")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(113, 80, 29),
                                                new MapColor(118, 26, 241)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(234, 193, 16),
                                                new MapColor(212, 131, 8)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(157, 247, 182),
                                                new MapColor(173, 98, 56)),
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(228, 150, 137),
                                                new MapColor(98, 151, 108))]),
                                            354.0912,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(685.0743,
                                                    82.3714),
                                            new AuthoringInfoField1ClassBreakInfos(182.5469,
                                                    518.4778),
                                            new AuthoringInfoField1ClassBreakInfos(257.6828,
                                                    494.4450),
                                            new AuthoringInfoField1ClassBreakInfos(150.3374,
                                                    895.8193)],
                                                "expedita",
                                                "aperiam",
                                                "asperiores"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(947.4245,
                                                    139.8362),
                                            new AuthoringInfoField1ClassBreakInfos(781.4701,
                                                    406.6216),
                                            new AuthoringInfoField1ClassBreakInfos(994.9384,
                                                    790.3840)],
                                                "pariatur",
                                                "sit",
                                                "quibusdam"),
                                            ["ex",
                                                "eos",
                                                "distinctio"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "magnam",
                                            true,
                                        LengthUnit.Inches,
                                            673.9805,
                                            105.5701,
                                            624.4561,
                                            16.2822))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("qui eligendi hic")"
                                    StringContent="@("laudantium")"
                                    OutFields="@(["aut",
                                        "odit"])"
                                    FieldInfos="@([new FieldInfo("group",
                                            "eum",
                                            "sequi",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("id",
                                            "expedita",
                                            "dolorum",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("title",
                                            "dolore",
                                            "officia",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("name",
                                            "quia",
                                            "atque",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Count)])"
                                    Content="@([new MediaPopupContent("minus quidem dignissimos",
                                            "neque excepturi quas quibusdam corporis fugit quos",
                                        [new LineChartMediaInfo("amet tempore dolores",
                                                "eius",
                                                "deleniti illo aut",
                                            new ChartMediaInfoValue(["error",
                                                    "eveniet"],
                                                    "assumenda",
                                                    "explicabo",
                                                [new ChartMediaInfoValueSeries("phone",
                                                        "deleniti",
                                                        769.8649),
                                                new ChartMediaInfoValueSeries("group",
                                                        "illum",
                                                        182.1248)],
                                                [new MapColor(183, 219, 163)])),
                                        new ImageMediaInfo("quos quos et",
                                                "assumenda",
                                                "dolorem aut dignissimos",
                                            new ImageMediaInfoValue("http://sarah.biz",
                                                    "https://letha.biz"),
                                                571.9405),
                                        new LineChartMediaInfo("expedita rerum vitae",
                                                "vitae",
                                                "esse modi sed",
                                            new ChartMediaInfoValue(["qui",
                                                    "praesentium",
                                                    "iure"],
                                                    "perspiciatis",
                                                    "ex",
                                                [new ChartMediaInfoValueSeries("comment",
                                                        "dolorem",
                                                        444.9439),
                                                new ChartMediaInfoValueSeries("category",
                                                        "et",
                                                        564.8757),
                                                new ChartMediaInfoValueSeries("avatar",
                                                        "sint",
                                                        255.6580),
                                                new ChartMediaInfoValueSeries("createdAt",
                                                        "commodi",
                                                        209.3779)],
                                                [new MapColor(172, 123, 124),
                                                new MapColor(120, 126, 146),
                                                new MapColor(254, 36, 90)])),
                                        new ColumnChartMediaInfo("ut esse natus",
                                                "dolor",
                                                "repellat et minus",
                                            new ChartMediaInfoValue(["quia",
                                                    "et"],
                                                    "ipsa",
                                                    "illo",
                                                [new ChartMediaInfoValueSeries("id",
                                                        "sed",
                                                        952.0955),
                                                new ChartMediaInfoValueSeries("status",
                                                        "quis",
                                                        752.5435),
                                                new ChartMediaInfoValueSeries("title",
                                                        "enim",
                                                        294.5506),
                                                new ChartMediaInfoValueSeries("phone",
                                                        "eius",
                                                        169.8650)],
                                                [new MapColor(65, 77, 109),
                                                new MapColor(62, 61, 175)]))],
                                            3),
                                    new MediaPopupContent("inventore qui et",
                                            "sequi sit laudantium doloribus",
                                        [new PieChartMediaInfo("eos qui laudantium",
                                                "possimus",
                                                "rerum ipsam consequatur",
                                            new ChartMediaInfoValue(["quam",
                                                    "ipsum",
                                                    "veniam",
                                                    "eligendi"],
                                                    "rerum",
                                                    "est",
                                                [new ChartMediaInfoValueSeries("name",
                                                        "quo",
                                                        707.6376),
                                                new ChartMediaInfoValueSeries("title",
                                                        "similique",
                                                        138.4362)],
                                                [new MapColor(167, 35, 94)]))],
                                            3),
                                    new TextPopupContent("voluptate ea sint"),
                                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "eius",
                                                "ut velit quia"))])"
                                    ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "comment",
                                            "deserunt eos ut",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "avatar",
                                            "in exercitationem quas",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "avatar",
                                            "dicta qui ea",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("beatae ea voluptas",
                                            "41f683b3-f06d-f961-a41a-0f06f7f9d34e",
                                            () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "group",
                                            "qui"),
                                    new ActionToggle("adipisci fugit aut",
                                            "17184f0b-3598-ed33-9ced-b8a66eec0d5a",
                                            () => { Console.WriteLine("eveniet"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "category",
                                            "eveniet"),
                                    new ActionButton("ut et dolor",
                                            "https://picsum.photos/640/480/?image=71",
                                            "e35edb59-014c-b9a3-d9ef-bc82b4d2c573",
                                            () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                            "id",
                                            true,
                                            true,
                                            true,
                                            "vel")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterBefore)"
                                    LabelExpression="@("voluptates")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(14041233.9554)"
                                    MinScale="@(3473.4813)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(267.7775))"
                                    Symbol="@(new TextSymbol("soluta sed repellendus",
                                        new MapColor(173, 181, 241),
                                        new MapColor(254, 233, 9),
                                            new Dimension(585.9897),
                                        new MapFont(new Dimension(636.5003),
                                                "Helvetica",
                                            MapFontStyle.Normal,
                                            FontWeight.Bolder,
                                            TextDecoration.Underline),
                                            543.0655,
                                        new MapColor(47, 211, 156),
                                        new MapColor(185, 215, 117),
                                            369.6638,
                                        HorizontalAlignment.Left,
                                            true,
                                            496.2524,
                                            new Dimension(781.6071),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Phone = '555-555-5555'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("facilis")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(-140.1074,
                    -45.4699,
                    52.0197,
                    -39.7953,
                    443.0157,
                    382.0895,
                    339.3666,
                    272.6032,
                new SpatialReference(5,
                        "sequi",
                        "at",
                        "vel"),
                    true,
                    true),
                9,
                7,
            new MapImageLayerCreateExportImageParametersOptions(27.2568,
                    175.6149,
                    "soluta"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-51.7404,
                    83.0184,
                    -14.5660,
                    63.7708,
                    496.4665,
                    159.6287,
                    678.6076,
                    93.4988,
                new SpatialReference(4,
                        "maxime",
                        "nihil",
                        "placeat"),
                    true,
                    true),
                2,
                8,
            new MapImageLayerFetchImageOptions(743.5790,
                    29.7274,
                    "harum"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem();
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.DestinationAtop;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2004, 4, 12, 0, 51, 4),
                    new DateTime(2009, 1, 21, 18, 53, 1));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("inventore",
                    "et",
                new TimeExtent(new DateTime(2011, 1, 2, 7, 18, 16),
                        new DateTime(2010, 5, 26, 15, 39, 26)),
                new TimeInterval(TemporalTime.Centuries,
                        610.8586),
                    [new DateTime(2016, 9, 14, 13, 49, 38),
                        new DateTime(2014, 9, 8, 11, 50, 0),
                        new DateTime(2005, 11, 20, 12, 42, 3),
                        new DateTime(2023, 7, 8, 22, 33, 31)],
                    "Asia/Almaty",
                    "similique");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    47947029.8095,
                    12414.5576,
                    0.3498,
                    true,
                    "placeat impedit corporis",
                    true,
                    "quia",
                new LayerFloorInfo("dolor"),
                [new Label(LabelPlacement.BelowRight,
                        "cupiditate",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        34775250.8680,
                        30112.7881,
                        true,
                        new Dimension(249.8698),
                    new TextSymbol("beatae et quia",
                        new MapColor(82, 160, 136),
                        new MapColor(147, 2, 147),
                            new Dimension(836.2175),
                        new MapFont(new Dimension(433.3527),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            672.5450,
                        new MapColor(210, 149, 250),
                        new MapColor(59, 124, 117),
                            400.1197,
                        HorizontalAlignment.Left,
                            true,
                            145.7406,
                            new Dimension(582.8391),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "in",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        3704813.9643,
                        30159.8449,
                        true,
                        new Dimension(926.2817),
                    new TextSymbol("dolores eum beatae",
                        new MapColor(48, 193, 94),
                        new MapColor(142, 253, 99),
                            new Dimension(325.6434),
                        new MapFont(new Dimension(613.3367),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            192.0909,
                        new MapColor(231, 196, 69),
                        new MapColor(107, 245, 89),
                            718.3076,
                        HorizontalAlignment.Right,
                            true,
                            770.9927,
                            new Dimension(735.9272),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.AboveAfter,
                        "eum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        22337189.5358,
                        33469.8770,
                        true,
                        new Dimension(858.3092),
                    new TextSymbol("illum voluptate et",
                        new MapColor(137, 55, 170),
                        new MapColor(179, 91, 60),
                            new Dimension(744.6525),
                        new MapFont(new Dimension(213.8747),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            837.1520,
                        new MapColor(42, 20, 185),
                        new MapColor(151, 174, 36),
                            447.4901,
                        HorizontalAlignment.Left,
                            true,
                            417.7424,
                            new Dimension(909.1365),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "impedit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        34160359.4285,
                        46043.1909,
                        true,
                        new Dimension(849.4272),
                    new TextSymbol("vel et nesciunt",
                        new MapColor(193, 25, 38),
                        new MapColor(217, 127, 146),
                            new Dimension(13.5869),
                        new MapFont(new Dimension(128.3599),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            902.5352,
                        new MapColor(191, 216, 67),
                        new MapColor(218, 163, 154),
                            976.5788,
                        HorizontalAlignment.Center,
                            true,
                            245.8166,
                            new Dimension(334.4728),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("est facere maiores",
                        "odit",
                        ["velit",
                            "temporibus",
                            "cupiditate"],
                    [new FieldInfo("name",
                            "ut",
                            "dolores",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Var)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "voluptas",
                                "magni ut ab"))],
                    [new ExpressionInfo("return Date();",
                            "category",
                            "iusto aliquam eos",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("est culpa sunt",
                            "03183684-3ed5-48c8-30aa-5177000c07e4",
                            () => { Console.WriteLine("dolore"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "tenetur"),
                    new ActionButton("est rerum ut",
                            "https://picsum.photos/640/480/?image=504",
                            "1977008e-e731-6148-bac5-16e72e980691",
                            () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "quis"),
                    new ActionButton("velit natus ex",
                            "https://picsum.photos/640/480/?image=725",
                            "2365ff2c-f072-b1f1-fb33-470349fc5ab3",
                            () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "amet"),
                    new ActionButton("earum culpa reprehenderit",
                            "https://picsum.photos/640/480/?image=922",
                            "18584f65-decf-5d76-dada-59acba078752",
                            () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "omnis")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Show,
                    41811768.0422,
                    7894.6559,
                    0.6159,
                    true,
                    "similique commodi rerum",
                    true,
                    "ut",
                new LayerFloorInfo("fugiat"),
                [new Label(LabelPlacement.BelowLeft,
                        "dolor",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        28780945.9953,
                        25723.7111,
                        true,
                        new Dimension(204.8755),
                    new TextSymbol("aut impedit placeat",
                        new MapColor(135, 221, 34),
                        new MapColor(66, 85, 96),
                            new Dimension(587.9734),
                        new MapFont(new Dimension(161.0796),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            236.3557,
                        new MapColor(169, 236, 240),
                        new MapColor(118, 121, 231),
                            433.4624,
                        HorizontalAlignment.Left,
                            true,
                            705.7752,
                            new Dimension(310.9945),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("soluta qui dolore",
                        "autem",
                        ["sit",
                            "a"],
                    [new FieldInfo("name",
                            "omnis",
                            "laudantium",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("token",
                            "possimus",
                            "sed",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("token",
                            "voluptate",
                            "facere",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("token",
                            "ut",
                            "molestiae",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Max)],
                    [new MediaPopupContent("esse ratione et",
                            "alias consequatur pariatur voluptatibus asperiores",
                        [new BarChartMediaInfo("quidem qui recusandae",
                                "rem",
                                "unde laboriosam rem",
                            new ChartMediaInfoValue(["et",
                                    "ut",
                                    "quia"],
                                    "facere",
                                    "alias",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "facere",
                                        575.2278),
                                new ChartMediaInfoValueSeries("status",
                                        "libero",
                                        568.4027)],
                                [new MapColor(44, 225, 3),
                                new MapColor(27, 223, 208),
                                new MapColor(169, 110, 220)])),
                        new ColumnChartMediaInfo("qui est quidem",
                                "neque",
                                "occaecati officia suscipit",
                            new ChartMediaInfoValue(["rerum",
                                    "molestiae",
                                    "laborum"],
                                    "explicabo",
                                    "aliquid",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "nam",
                                        565.6379),
                                new ChartMediaInfoValueSeries("password",
                                        "eaque",
                                        147.1125)],
                                [new MapColor(234, 31, 22),
                                new MapColor(132, 102, 16)]))],
                            4),
                    new MediaPopupContent("vitae quibusdam aut",
                            "quis ut provident veritatis",
                        [new ColumnChartMediaInfo("et enim commodi",
                                "magnam",
                                "corporis quam quis",
                            new ChartMediaInfoValue(["aut",
                                    "facilis",
                                    "et"],
                                    "sit",
                                    "omnis",
                                [new ChartMediaInfoValueSeries("comment",
                                        "repudiandae",
                                        183.8168),
                                new ChartMediaInfoValueSeries("createdAt",
                                        "possimus",
                                        733.7302),
                                new ChartMediaInfoValueSeries("category",
                                        "odit",
                                        76.3417)],
                                [new MapColor(154, 14, 18),
                                new MapColor(115, 117, 208),
                                new MapColor(253, 177, 122)])),
                        new BarChartMediaInfo("enim rerum enim",
                                "voluptatibus",
                                "nesciunt sed quia",
                            new ChartMediaInfoValue(["magni",
                                    "vero",
                                    "et",
                                    "possimus"],
                                    "qui",
                                    "cum",
                                [new ChartMediaInfoValueSeries("id",
                                        "libero",
                                        870.8028),
                                new ChartMediaInfoValueSeries("token",
                                        "nisi",
                                        48.9520)],
                                [new MapColor(204, 211, 60),
                                new MapColor(253, 118, 58),
                                new MapColor(29, 131, 105),
                                new MapColor(152, 72, 85)]))],
                            2),
                    new FieldsPopupContent([new FieldInfo("createdAt",
                                "et",
                                "aut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("title",
                                "odit",
                                "facilis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Sum)],
                            "exercitationem hic earum in libero",
                            "itaque est minima")],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "group",
                            "quas iusto et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "name",
                            "omnis est et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "password",
                            "ut voluptatibus magni",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "status",
                            "eligendi quis quia",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("voluptatem voluptates asperiores",
                            "574f2313-297d-df27-1561-ff2b6b776ecf",
                            () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "nulla"),
                    new ActionToggle("voluptas ex fuga",
                            "75e74ed6-b20b-2875-bf4a-5c69e8d4976b",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "occaecati"),
                    new ActionButton("quasi sit molestiae",
                            "https://picsum.photos/640/480/?image=437",
                            "0042f6ba-e950-73a9-f3cb-01332ef99958",
                            () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "ut")])),
            new Sublayer(3,
                    true,
                    true,
                ListMode.Hide,
                    3146419.2542,
                    18718.6607,
                    0.4979,
                    true,
                    "culpa iusto pariatur",
                    true,
                    "maiores",
                new LayerFloorInfo("dolore"),
                [new Label(LabelPlacement.CenterEnd,
                        "numquam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        12655329.5375,
                        22895.4776,
                        true,
                        new Dimension(709.1850),
                    new TextSymbol("odit nostrum non",
                        new MapColor(41, 225, 216),
                        new MapColor(161, 250, 158),
                            new Dimension(990.6586),
                        new MapFont(new Dimension(105.4534),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            626.1539,
                        new MapColor(115, 211, 105),
                        new MapColor(80, 145, 14),
                            131.5214,
                        HorizontalAlignment.Right,
                            true,
                            786.6086,
                            new Dimension(949.2506),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("delectus sunt numquam",
                        "debitis",
                        ["est",
                            "vitae"],
                    [new FieldInfo("status",
                            "ut",
                            "neque",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("email",
                            "pariatur",
                            "quidem",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("title",
                            "sit",
                            "voluptatem",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new RelationshipPopupContent("dolores nihil expedita",
                            "consequatur nisi voluptatum doloribus aspernatur necessitatibus",
                            8,
                            "aperiam",
                        [new RelatedRecordsInfoFieldOrder("minima",
                            OrderBy.Desc)],
                            9),
                    new FieldsPopupContent([new FieldInfo("createdAt",
                                "aperiam",
                                "suscipit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Count)],
                            "maxime repellat debitis dolor non",
                            "id officia qui")],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "password",
                            "consequatur ab ex",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "updatedAt",
                            "ratione facere ut",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "group",
                            "et aperiam qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "comment",
                            "incidunt illum hic",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("cum animi doloremque",
                            "https://picsum.photos/640/480/?image=666",
                            "2867122c-685c-3cbb-aef1-ecc442e14859",
                            () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "placeat"),
                    new ActionToggle("ducimus sint saepe",
                            "18b1aaeb-11a7-1453-57cc-53f10875f9a0",
                            () => { Console.WriteLine("reiciendis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "accusamus")])),
            new Sublayer(7,
                    true,
                    true,
                ListMode.Show,
                    35486886.7845,
                    5986.1631,
                    0.4246,
                    true,
                    "ipsum a ratione",
                    true,
                    "possimus",
                new LayerFloorInfo("corrupti"),
                [new Label(LabelPlacement.AboveAfter,
                        "vel",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        41295884.0375,
                        44736.6039,
                        true,
                        new Dimension(300.4249),
                    new TextSymbol("fugiat ullam rerum",
                        new MapColor(53, 140, 180),
                        new MapColor(133, 196, 231),
                            new Dimension(298.1879),
                        new MapFont(new Dimension(834.3375),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            139.6132,
                        new MapColor(120, 54, 116),
                        new MapColor(134, 91, 102),
                            812.3216,
                        HorizontalAlignment.Left,
                            true,
                            562.9430,
                            new Dimension(522.3492),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("qui velit tenetur",
                        "illo",
                        ["quia",
                            "laboriosam",
                            "ipsum"],
                    [new FieldInfo("category",
                            "est",
                            "ullam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("password",
                            "incidunt",
                            "quia",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("token",
                            "facilis",
                            "ut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("avatar",
                            "nobis",
                            "rem",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new RelationshipPopupContent("saepe sequi qui",
                            "excepturi nesciunt iusto saepe",
                            5,
                            "dolor",
                        [new RelatedRecordsInfoFieldOrder("et",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("officiis",
                            OrderBy.Desc)],
                            1),
                    new MediaPopupContent("tempora rem facilis",
                            "recusandae eius alias porro rerum",
                        [new LineChartMediaInfo("doloremque asperiores numquam",
                                "ullam",
                                "optio aut omnis",
                            new ChartMediaInfoValue(["quibusdam",
                                    "pariatur",
                                    "reprehenderit",
                                    "ex"],
                                    "tenetur",
                                    "incidunt",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "quaerat",
                                        546.7210),
                                new ChartMediaInfoValueSeries("comment",
                                        "maiores",
                                        406.6683)],
                                [new MapColor(237, 52, 102)])),
                        new BarChartMediaInfo("fuga dolores cum",
                                "unde",
                                "impedit molestias nesciunt",
                            new ChartMediaInfoValue(["aut",
                                    "corrupti",
                                    "esse"],
                                    "et",
                                    "nulla",
                                [new ChartMediaInfoValueSeries("comment",
                                        "laudantium",
                                        868.3519),
                                new ChartMediaInfoValueSeries("id",
                                        "cum",
                                        254.2276),
                                new ChartMediaInfoValueSeries("avatar",
                                        "perspiciatis",
                                        168.5576)],
                                [new MapColor(138, 135, 140),
                                new MapColor(222, 170, 206),
                                new MapColor(6, 224, 6),
                                new MapColor(24, 223, 225)])),
                        new LineChartMediaInfo("non perferendis corrupti",
                                "sed",
                                "dolores reprehenderit voluptas",
                            new ChartMediaInfoValue(["blanditiis",
                                    "nihil",
                                    "voluptatem"],
                                    "vitae",
                                    "suscipit",
                                [new ChartMediaInfoValueSeries("title",
                                        "praesentium",
                                        964.0400),
                                new ChartMediaInfoValueSeries("name",
                                        "neque",
                                        522.1590)],
                                [new MapColor(29, 67, 232)])),
                        new BarChartMediaInfo("atque nisi error",
                                "voluptatum",
                                "enim hic ut",
                            new ChartMediaInfoValue(["et",
                                    "reprehenderit",
                                    "eum",
                                    "ut"],
                                    "eligendi",
                                    "maiores",
                                [new ChartMediaInfoValueSeries("token",
                                        "commodi",
                                        726.2431),
                                new ChartMediaInfoValueSeries("phone",
                                        "quaerat",
                                        417.9452)],
                                [new MapColor(104, 239, 175),
                                new MapColor(244, 181, 134),
                                new MapColor(14, 176, 8)]))],
                            8),
                    new AttachmentsPopupContent("quia id beatae",
                            "esse velit rerum sed et",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.Name;",
                            "id",
                            "ratione laboriosam voluptatem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "email",
                            "quia voluptate dolorem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "velit quibusdam atque",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("et dignissimos sed",
                            "f011e23a-d126-6e42-55bb-5080c6cf1759",
                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "saepe")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(14.9858,
                    71.4327,
                    74.9807,
                    -3.1104,
                    813.5518,
                    288.2359,
                    349.4179,
                    312.0736,
                new SpatialReference(9,
                        "aspernatur",
                        "fuga",
                        "aut"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(6,
                    true,
                    true,
                ListMode.Show,
                    46987033.7966,
                    39025.1668,
                    0.7409,
                    true,
                    "ex sint ratione",
                    true,
                    "quis",
                new LayerFloorInfo("et"),
                [new Label(LabelPlacement.CenterAlong,
                        "incidunt",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        17318369.2589,
                        26599.8839,
                        true,
                        new Dimension(797.5012),
                    new TextSymbol("consequatur minus harum",
                        new MapColor(78, 54, 31),
                        new MapColor(93, 14, 76),
                            new Dimension(293.3560),
                        new MapFont(new Dimension(665.6328),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            374.7691,
                        new MapColor(160, 9, 207),
                        new MapColor(144, 7, 9),
                            672.3445,
                        HorizontalAlignment.Center,
                            true,
                            182.5247,
                            new Dimension(163.3833),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("aliquam incidunt eius",
                        "animi",
                        ["consequatur",
                            "sed",
                            "et"],
                    [new FieldInfo("comment",
                            "debitis",
                            "eius",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("token",
                            "possimus",
                            "vel",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("updatedAt",
                            "voluptatem",
                            "qui",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("comment",
                            "laborum",
                            "provident",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new RelationshipPopupContent("totam quia aut",
                            "quasi eligendi vitae cumque repudiandae dicta consequatur",
                            1,
                            "sit",
                        [new RelatedRecordsInfoFieldOrder("qui",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("dolores",
                            OrderBy.Desc)],
                            9)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "group",
                            "ut tempora deleniti",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "group",
                            "nostrum aspernatur sit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "category",
                            "maxime quo ducimus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "createdAt",
                            "reprehenderit sed repellat",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("deserunt enim aut",
                            "https://picsum.photos/640/480/?image=342",
                            "3cadb0f7-3d95-c229-c61b-e6b269b3daca",
                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "reiciendis"),
                    new ActionToggle("est mollitia non",
                            "2878c835-f90e-a956-8485-ee5176e99cf5",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "eius"),
                    new ActionToggle("et corrupti voluptas",
                            "339186e8-494f-8c0f-9033-a5f4432d0686",
                            () => { Console.WriteLine("voluptates"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "voluptatem")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Decades,
                    941.7532);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2019, 11, 10, 17, 3, 11),
                    new DateTime(2003, 9, 12, 15, 54, 23));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
