@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        MapImageLayer? mapImageLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <MapImageLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer")"
                        BlendMode="@(BlendMode.Xor)"
                        Dpi="@(176.1159)"
                        Effect="@(new Effect("inventore",
                            12047693.9596))"
                        GdbVersion="@("4.7.3.6")"
                        ImageFormat="@(MapImageFormat.Pdf)"
                        ImageMaxHeight="@(1)"
                        ImageMaxWidth="@(5)"
                        ImageTransparency="@(true)"
                        LegendEnabled="@(true)"
                        MaxScale="@(17402014.7631)"
                        MinScale="@(30847.0026)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(887.8153)"
                        UseViewTime="@(true)"
                        ListMode="@(ListMode.Hide)"
                        Visible="@(true)"
                        Opacity="@(0.1336)"
                        Copyright="@("vel")"
                        FullExtent="@(new Extent(50.6169,
                                67.8584,
                                84.0967,
                                -25.0255,
                                213.3952,
                                839.2619,
                                218.3644,
                                234.5018,
                            new SpatialReference(1,
                                    "aut",
                                    "sed",
                                    "suscipit"),
                                true,
                                true))"
                        Title="@("architecto quia ipsa")"
                        OnRefresh="OnRefresh">
                        <TimeInterval 
                            Unit="@(TemporalTime.Seconds)"
                            Value="@(729.5623)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("porro")"
                            EndField="@("sed")"
                            Stops="@([new DateTime(2003, 8, 1, 13, 39, 41),
                                new DateTime(2005, 2, 3, 10, 46, 8),
                                new DateTime(2004, 10, 11, 1, 22, 0),
                                new DateTime(2008, 7, 2, 0, 56, 36)])"
                            TimeZone="@("Asia/Tehran")"
                            TrackIdField="@("optio")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Hours)"
                                Value="@(159.2530)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2007, 3, 10, 2, 27, 3))"
                                End="@(new DateTime(2004, 10, 27, 12, 27, 43))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2020, 8, 2, 5, 56, 53))"
                            End="@(new DateTime(2007, 1, 26, 2, 12, 8))">
                        </TimeExtent>
                        <Sublayer 
                            SublayerId="@(5)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(17619777.5482)"
                            MinScale="@(2582.9252)"
                            Opacity="@(0.3459)"
                            PopupEnabled="@(true)"
                            Title="@("laudantium eos quidem")"
                            Visible="@(true)"
                            DefinitionExpression="@("dolores")"
                            FloorInfo="@(new LayerFloorInfo("modi"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterAfter,
                                    "quam",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    28317001.4576,
                                    8575.5220,
                                    true,
                                    new Dimension(183.5256),
                                new TextSymbol("et temporibus officiis",
                                    new MapColor(44, 157, 244),
                                    new MapColor(127, 168, 151),
                                        new Dimension(304.8878),
                                    new MapFont(new Dimension(343.8000),
                                            "Arial",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        608.1093,
                                    new MapColor(200, 192, 235),
                                    new MapColor(13, 14, 108),
                                        650.1832,
                                    HorizontalAlignment.Center,
                                        true,
                                        555.7533,
                                        new Dimension(117.9955),
                                        true),
                                    true,
                                    "Name = 'John Doe'"),
                            new Label(LabelPlacement.CenterCenter,
                                    "sit",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    6762754.5142,
                                    10551.2619,
                                    true,
                                    new Dimension(667.5919),
                                new TextSymbol("itaque error soluta",
                                    new MapColor(69, 162, 17),
                                    new MapColor(157, 241, 93),
                                        new Dimension(446.1555),
                                    new MapFont(new Dimension(312.3586),
                                            "Helvetica",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        328.1379,
                                    new MapColor(28, 11, 25),
                                    new MapColor(130, 34, 149),
                                        967.4883,
                                    HorizontalAlignment.Right,
                                        true,
                                        975.0748,
                                        new Dimension(821.2431),
                                        true),
                                    true,
                                    "Province = 'Ontario'")])"
                            PopupTemplate="@(new PopupTemplate("et sunt explicabo",
                                    "consequatur",
                                    ["eaque",
                                        "rerum",
                                        "consequatur",
                                        "et"],
                                [new FieldInfo("password",
                                        "rem",
                                        "ex",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("comment",
                                        "minus",
                                        "nihil",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Count),
                                new FieldInfo("comment",
                                        "maiores",
                                        "commodi",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("name",
                                        "consequuntur",
                                        "error",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.DayShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new AttachmentsPopupContent("soluta iure quia",
                                        "et sed ipsa aspernatur quidem",
                                        AttachmentsPopupContentDisplayType.Auto),
                                new FieldsPopupContent([new FieldInfo("comment",
                                            "porro",
                                            "velit",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDateLe),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                        "eveniet doloribus vitae dicta",
                                        "voluptas cumque libero")],
                                [new ExpressionInfo("return $feature.Name;",
                                        "phone",
                                        "est dolores ut",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Name;",
                                        "status",
                                        "non nulla eveniet",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "createdAt",
                                        "perspiciatis nesciunt incidunt",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "category",
                                        "enim voluptatem amet",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("adipisci eos rem",
                                        "https://picsum.photos/640/480/?image=382",
                                        "0f6ccdae-aa04-32da-52b0-917695b3645f",
                                        () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                        "updatedAt",
                                        true,
                                        true,
                                        true,
                                        "et"),
                                new ActionToggle("unde molestiae voluptatem",
                                        "34716ed8-a01b-fb52-07ae-38528f4ff294",
                                        () => { Console.WriteLine("similique"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "name",
                                        "qui"),
                                new ActionButton("quisquam vitae aut",
                                        "https://picsum.photos/640/480/?image=112",
                                        "335edbf5-4b0e-c402-7138-07767ec93146",
                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                        "group",
                                        true,
                                        true,
                                        true,
                                        "consectetur"),
                                new ActionToggle("quia dolorem exercitationem",
                                        "d3edf663-0150-3875-3c25-a5a1e4ab1052",
                                        () => { Console.WriteLine("itaque"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "updatedAt",
                                        "nihil")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("dolor qui et",
                                    new MapColor(16, 104, 12),
                                    new MapColor(166, 36, 169),
                                        new Dimension(782.3472),
                                    new MapFont(new Dimension(879.8724),
                                            "Georgia",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        695.6523,
                                    new MapColor(216, 81, 124),
                                    new MapColor(52, 106, 42),
                                        598.0159,
                                    HorizontalAlignment.Center,
                                        true,
                                        669.9828,
                                        new Dimension(784.7883),
                                        true),
                                    "rerum",
                                [new SizeVariable("fugit",
                                        new Dimension(68.4385),
                                        new Dimension(80.3972),
                                        393.9623,
                                        660.9312,
                                        VisualValueRepresentation.Radius,
                                        VisualValueUnit.NauticalMiles,
                                        "incidunt",
                                        "adipisci",
                                        true,
                                        VisualAxis.WidthAndDepth,
                                        "qui",
                                        "qui aut et",
                                    new VisualVariableLegendOptions(true,
                                            "esse voluptatum eos"))],
                                new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(252, 32, 19),
                                        new MapColor(214, 158, 78)),
                                        746.9094,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(313.6791,
                                                966.7374),
                                        new AuthoringInfoField1ClassBreakInfos(24.8122,
                                                597.2954),
                                        new AuthoringInfoField1ClassBreakInfos(610.7033,
                                                304.2971),
                                        new AuthoringInfoField1ClassBreakInfos(937.3226,
                                                464.5286)],
                                            "in",
                                            "et",
                                            "mollitia"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(794.9068,
                                                709.0100),
                                        new AuthoringInfoField1ClassBreakInfos(648.9895,
                                                189.0724),
                                        new AuthoringInfoField1ClassBreakInfos(352.0872,
                                                620.8616)],
                                            "porro",
                                            "iusto",
                                            "itaque"),
                                        ["voluptatum",
                                            "qui",
                                            "sint"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "eius",
                                        true,
                                    LengthUnit.Meters,
                                        997.2157,
                                        283.4792,
                                        222.3241,
                                        391.4131)))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(3)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(17796089.5279)"
                                MinScale="@(24864.4113)"
                                Opacity="@(0.7562)"
                                PopupEnabled="@(true)"
                                Title="@("autem perspiciatis dignissimos")"
                                Visible="@(true)"
                                DefinitionExpression="@("nam")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(7)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(48057868.1134)"
                                    MinScale="@(37107.6916)"
                                    Opacity="@(0.8427)"
                                    PopupEnabled="@(true)"
                                    Title="@("reiciendis error omnis")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("reiciendis")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(1)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(6065617.9623)"
                                        MinScale="@(11459.8838)"
                                        Opacity="@(0.5045)"
                                        PopupEnabled="@(true)"
                                        Title="@("animi assumenda et")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("et")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(9)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(1361500.6484)"
                                            MinScale="@(3495.7518)"
                                            Opacity="@(0.3263)"
                                            PopupEnabled="@(true)"
                                            Title="@("labore rerum vel")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("quisquam")"
                                            Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                            <Sublayer 
                                                SublayerId="@(4)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(46393513.6362)"
                                                MinScale="@(18626.4147)"
                                                Opacity="@(0.2702)"
                                                PopupEnabled="@(true)"
                                                Title="@("magnam quas sit")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("saepe")"
                                                Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                                <Sublayer 
                                                    SublayerId="@(5)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(9569336.9859)"
                                                    MinScale="@(42433.1402)"
                                                    Opacity="@(0.8963)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("non itaque a")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("nobis")"
                                                    Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("quis officia saepe")"
                                                        StringContent="@("nobis")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("libero")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("dolor reiciendis qui")"
                                                    StringContent="@("aut")"
                                                    OutFields="@(["explicabo",
                                                        "reprehenderit",
                                                        "animi",
                                                        "recusandae"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new ExpressionPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new MediaPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "844fd692-c31f-a6a9-e2d6-4c4735bbcba1",
                                                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "a2e60663-8255-91c4-c07d-7dc22cd22b3e",
                                                            () => { Console.WriteLine("fugiat"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowAlong)"
                                                    LabelExpression="@("quia")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(28334831.3561)"
                                                    MinScale="@(23281.3590)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(784.5701))"
                                                    Symbol="@(new TextSymbol("magnam architecto sit"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("qui")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                    new MultipartColorRamp(),
                                                        590.7060,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["quia",
                                                            "occaecati",
                                                            "possimus"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "a",
                                                        true,
                                                    LengthUnit.Yards,
                                                        789.9473,
                                                        513.8080,
                                                        978.9325,
                                                        892.4334))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("quas et possimus")"
                                                StringContent="@("et")"
                                                OutFields="@(["quia",
                                                    "aut"])"
                                                FieldInfos="@([new FieldInfo("category",
                                                        "doloremque",
                                                        "voluptatem",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var),
                                                new FieldInfo("avatar",
                                                        "ducimus",
                                                        "blanditiis",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var),
                                                new FieldInfo("avatar",
                                                        "sapiente",
                                                        "tempora",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("token",
                                                        "recusandae",
                                                        "quasi",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum)])"
                                                Content="@([new RelationshipPopupContent("id et consequuntur",
                                                        "a veniam animi et quas et veritatis",
                                                        1,
                                                        "mollitia",
                                                    [new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder()],
                                                        8)])"
                                                ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                        "comment",
                                                        "repellat nihil deserunt"),
                                                new ExpressionInfo("return Date();",
                                                        "updatedAt",
                                                        "inventore veritatis accusantium")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("aut provident natus",
                                                        "https://picsum.photos/640/480/?image=1032",
                                                        "edd76843-1f65-7a15-1dbb-c193aec56efe",
                                                        () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                                        "token",
                                                        true,
                                                        true,
                                                        true,
                                                        "quia"),
                                                new ActionButton("quisquam eos illum",
                                                        "https://picsum.photos/640/480/?image=858",
                                                        "e6884aef-5635-07b2-874a-d32a0d12caf8",
                                                        () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                                        "group",
                                                        true,
                                                        true,
                                                        true,
                                                        "ratione"),
                                                new ActionButton("ut aut fugiat",
                                                        "https://picsum.photos/640/480/?image=165",
                                                        "dc7b70de-a2d0-da3b-b874-83825bb7d6eb",
                                                        () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "accusantium")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowBefore)"
                                                LabelExpression="@("iure")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(39998486.7708)"
                                                MinScale="@(25545.0343)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(808.4473))"
                                                Symbol="@(new TextSymbol("quisquam animi autem",
                                                    new MapColor(204, 65, 185),
                                                    new MapColor(42, 79, 88),
                                                        null,
                                                    new MapFont(),
                                                        827.3092,
                                                    new MapColor(224, 9, 155),
                                                    new MapColor(235, 61, 29),
                                                        743.1238,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        720.6252,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Age > 21")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("molestiae")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(165, 142, 123),
                                                    new MapColor(84, 113, 192)),
                                                    477.2050,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "placeat",
                                                        "accusantium",
                                                        "nam"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "optio",
                                                        "non",
                                                        "in"),
                                                    ["minus",
                                                        "corrupti"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "officiis",
                                                    true,
                                                LengthUnit.Meters,
                                                    750.8772,
                                                    430.8166,
                                                    382.5367,
                                                    521.8829))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("aut est architecto")"
                                            StringContent="@("ut")"
                                            OutFields="@(["sunt",
                                                "qui",
                                                "sed",
                                                "aut"])"
                                            FieldInfos="@([new FieldInfo("status",
                                                    "ut",
                                                    "praesentium",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("name",
                                                    "vitae",
                                                    "quidem",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("id",
                                                    "pariatur",
                                                    "impedit",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min)])"
                                            Content="@([new AttachmentsPopupContent("eveniet aut soluta",
                                                    "quasi ut consequatur dolore ipsum eveniet",
                                                    AttachmentsPopupContentDisplayType.Auto)])"
                                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "createdAt",
                                                    "molestias quidem sed",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "password",
                                                    "ab officia similique",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("ipsam dignissimos ut",
                                                    "15657ff8-320a-45e3-f5e0-a4b472240d22",
                                                    () => { Console.WriteLine("doloremque"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "id",
                                                    "tenetur"),
                                            new ActionToggle("sunt sunt tempore",
                                                    "68e187b8-8075-2221-d83a-a0ed3a72bdee",
                                                    () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "token",
                                                    "et")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowAlong)"
                                            LabelExpression="@("rerum")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(16085734.1299)"
                                            MinScale="@(37707.6245)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(479.7312))"
                                            Symbol="@(new TextSymbol("tenetur cumque repudiandae",
                                                new MapColor(86, 240, 25),
                                                new MapColor(43, 49, 127),
                                                    new Dimension(732.9860),
                                                new MapFont(new Dimension(578.0068),
                                                        "Garamond",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Bolder,
                                                    TextDecoration.LineThrough),
                                                    488.3857,
                                                new MapColor(221, 137, 92),
                                                new MapColor(210, 93, 12),
                                                    294.2727,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    296.9377,
                                                    new Dimension(461.3737),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Phone = '555-555-5555'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("labore")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(185, 65, 189),
                                                new MapColor(15, 150, 234)),
                                                491.5136,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(708.0800,
                                                        728.6120),
                                                new AuthoringInfoField1ClassBreakInfos(297.6595,
                                                        773.4738)],
                                                    "reiciendis",
                                                    "ipsa",
                                                    "inventore"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(360.2081,
                                                        869.0922),
                                                new AuthoringInfoField1ClassBreakInfos(810.7923,
                                                        147.4448),
                                                new AuthoringInfoField1ClassBreakInfos(411.1107,
                                                        354.4755),
                                                new AuthoringInfoField1ClassBreakInfos(876.1264,
                                                        739.6754)],
                                                    "neque",
                                                    "eum",
                                                    "sed"),
                                                ["temporibus",
                                                    "doloribus",
                                                    "adipisci"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "pariatur",
                                                true,
                                            LengthUnit.NauticalMiles,
                                                695.8382,
                                                638.4046,
                                                586.2434,
                                                997.0299))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("doloremque nihil voluptatem")"
                                        StringContent="@("doloremque")"
                                        OutFields="@(["minus",
                                            "enim",
                                            "possimus"])"
                                        FieldInfos="@([new FieldInfo("category",
                                                "deserunt",
                                                "sed",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("status",
                                                "aperiam",
                                                "ipsam",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Var)])"
                                        Content="@([new RelationshipPopupContent("et perspiciatis molestias",
                                                "molestiae earum nostrum voluptatibus",
                                                5,
                                                "neque",
                                            [new RelatedRecordsInfoFieldOrder("et",
                                                OrderBy.Desc)],
                                                2),
                                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                                    "perspiciatis",
                                                    "ut eius aliquid")),
                                        new AttachmentsPopupContent("praesentium est aspernatur",
                                                "quia minima quae officiis magni excepturi exercitationem",
                                                AttachmentsPopupContentDisplayType.Auto),
                                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                                    "voluptas",
                                                    "omnis veniam id"))])"
                                        ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "status",
                                                "et qui non",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "category",
                                                "quasi ad ea",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("molestias omnis rerum",
                                                "2a41015d-0611-c2f5-1575-b6b07fc94a0a",
                                                () => { Console.WriteLine("asperiores"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "category",
                                                "et")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterBefore)"
                                        LabelExpression="@("quos")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(40710033.8692)"
                                        MinScale="@(48650.1873)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(881.9464))"
                                        Symbol="@(new TextSymbol("iure aut illo",
                                            new MapColor(202, 240, 182),
                                            new MapColor(57, 91, 187),
                                                new Dimension(954.1526),
                                            new MapFont(new Dimension(936.9170),
                                                    "Arial",
                                                MapFontStyle.Italic,
                                                FontWeight.Bolder,
                                                TextDecoration.LineThrough),
                                                967.7998,
                                            new MapColor(125, 145, 176),
                                            new MapColor(217, 11, 9),
                                                656.9622,
                                            HorizontalAlignment.Center,
                                                true,
                                                896.2976,
                                                new Dimension(462.3918),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("1 = 1")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("ea")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(17, 71, 157),
                                                new MapColor(146, 243, 36)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(28, 150, 252),
                                                new MapColor(166, 196, 189))]),
                                            179.4535,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(196.4223,
                                                    899.4650),
                                            new AuthoringInfoField1ClassBreakInfos(675.7440,
                                                    801.6346),
                                            new AuthoringInfoField1ClassBreakInfos(260.9355,
                                                    250.4461)],
                                                "soluta",
                                                "neque",
                                                "odio"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(617.8583,
                                                    910.5445)],
                                                "perferendis",
                                                "doloribus",
                                                "maiores"),
                                            ["distinctio",
                                                "recusandae"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "libero",
                                            true,
                                        LengthUnit.Miles,
                                            181.0204,
                                            701.2730,
                                            907.0917,
                                            445.8516))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("repellat impedit voluptatem")"
                                    StringContent="@("sint")"
                                    OutFields="@(["modi",
                                        "incidunt"])"
                                    FieldInfos="@([new FieldInfo("category",
                                            "culpa",
                                            "necessitatibus",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("name",
                                            "doloremque",
                                            "fugiat",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Min)])"
                                    Content="@([new MediaPopupContent("dolores nihil qui",
                                            "at consequatur voluptates dolorem et",
                                        [new ImageMediaInfo("nemo dolores unde",
                                                "libero",
                                                "quia in sint",
                                            new ImageMediaInfoValue("http://ruby.biz",
                                                    "https://chandler.name"),
                                                335.9364),
                                        new ImageMediaInfo("sed iusto vel",
                                                "facilis",
                                                "aperiam quasi dolor",
                                            new ImageMediaInfoValue("https://mossie.biz",
                                                    "https://malachi.org"),
                                                958.1429)],
                                            2)])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "phone",
                                            "in aut qui",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return Date();",
                                            "title",
                                            "distinctio quia ut",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("odit fugit omnis",
                                            "d7df8843-41f6-ed58-435f-463d267a23d5",
                                            () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "createdAt",
                                            "aut"),
                                    new ActionToggle("non sed laudantium",
                                            "915ab631-6de5-be93-c9f4-2911e769c8a1",
                                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "comment",
                                            "reiciendis"),
                                    new ActionToggle("architecto est et",
                                            "2508dac5-5ef1-5050-f128-8ac52f361f02",
                                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "category",
                                            "ipsam")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveEnd)"
                                    LabelExpression="@("omnis")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(40732221.1202)"
                                    MinScale="@(46906.2711)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(63.8047))"
                                    Symbol="@(new TextSymbol("et nam dolores",
                                        new MapColor(224, 106, 225),
                                        new MapColor(70, 164, 9),
                                            new Dimension(238.6388),
                                        new MapFont(new Dimension(817.5533),
                                                "Courier New",
                                            MapFontStyle.Italic,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            180.8203,
                                        new MapColor(226, 236, 193),
                                        new MapColor(239, 56, 169),
                                            507.2846,
                                        HorizontalAlignment.Center,
                                            true,
                                            766.1101,
                                            new Dimension(142.0393),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Phone = '555-555-5555'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("delectus")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(mapImageLayer!);
        await AssertJavaScript("dispatchEvent", args: [mapImageLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "map-image");
        var createExportImageParametersMethodResult = await mapImageLayer.CreateExportImageParameters(new Extent(68.7132,
                    34.0961,
                    24.5098,
                    61.6098,
                    800.7645,
                    289.1013,
                    78.6792,
                    509.8072,
                new SpatialReference(8,
                        "sit",
                        "nesciunt",
                        "voluptates"),
                    true,
                    true),
                8,
                9,
            new MapImageLayerCreateExportImageParametersOptions(954.5951,
                    301.8730,
                    "velit"));
        Assert.IsNotNull(createExportImageParametersMethodResult);
        var createServiceSublayersMethodResult = await mapImageLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchImageMethodResult = await mapImageLayer.FetchImage(new Extent(-144.4774,
                    87.9933,
                    -39.2939,
                    -48.9871,
                    134.0456,
                    788.0710,
                    676.2103,
                    450.2534,
                new SpatialReference(1,
                        "qui",
                        "quis",
                        "natus"),
                    true,
                    true),
                5,
                3,
            new MapImageLayerFetchImageOptions(0.4044,
                    218.1363,
                    "dicta"));
        Assert.IsNotNull(fetchImageMethodResult);
        var findSublayerByIdMethodResult = await mapImageLayer.FindSublayerById(7);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var loadAllMethodResult = await mapImageLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "ex",
                    "eos",
                    687.6910,
                    ["quia",
                        "eius",
                        "voluptas",
                        "dicta"],
                    new DateTime(2002, 5, 11, 13, 1, 2),
                    "repudiandae",
                    "voluptatem quia est aut esse delectus et",
                new Extent(61.2643,
                        13.3122,
                        -81.7752,
                        89.9084,
                        5.1759,
                        819.6216,
                        841.8297,
                        872.3604,
                    new SpatialReference(9,
                            "maiores",
                            "quia",
                            "ut"),
                        true,
                        true),
                    ["est",
                        "optio"],
                    "debitis",
                    new DateTime(2003, 10, 9, 1, 41, 16),
                    "updatedAt",
                    855.0111);
        await mapImageLayer.SetPortalItem(testPortalItem);
        var portalItem = await mapImageLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Overlay;
        await mapImageLayer.SetBlendMode(testBlendMode);
        var blendMode = await mapImageLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2013, 6, 20, 18, 40, 30),
                    new DateTime(2019, 10, 19, 12, 8, 50));
        await mapImageLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await mapImageLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("blanditiis",
                    "temporibus",
                new TimeExtent(new DateTime(2003, 10, 27, 22, 0, 35),
                        new DateTime(2022, 10, 13, 14, 23, 2)),
                new TimeInterval(TemporalTime.Centuries,
                        940.4603),
                    [new DateTime(2021, 5, 26, 6, 13, 12),
                        new DateTime(2009, 1, 9, 6, 52, 1)],
                    "Australia/Brisbane",
                    "omnis");
        await mapImageLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await mapImageLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        IReadOnlyList<Sublayer> testSublayers = [new Sublayer(2,
                    true,
                    true,
                ListMode.Show,
                    47843128.5470,
                    9462.4680,
                    0.0667,
                    true,
                    "molestiae ut soluta",
                    true,
                    "aut",
                new LayerFloorInfo("neque"),
                [new Label(LabelPlacement.CenterEnd,
                        "amet",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        3149021.7564,
                        35936.5914,
                        true,
                        new Dimension(814.0711),
                    new TextSymbol("cupiditate exercitationem sint",
                        new MapColor(208, 144, 117),
                        new MapColor(73, 116, 16),
                            new Dimension(680.9822),
                        new MapFont(new Dimension(996.7135),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.None),
                            751.4433,
                        new MapColor(17, 89, 46),
                        new MapColor(155, 69, 160),
                            423.0398,
                        HorizontalAlignment.Left,
                            true,
                            642.1359,
                            new Dimension(423.2303),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("molestias tempora ut",
                        "voluptas",
                        ["voluptates",
                            "iure",
                            "ex"],
                    [new FieldInfo("avatar",
                            "nesciunt",
                            "doloribus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("token",
                            "quia",
                            "ut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("status",
                            "maiores",
                            "iure",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("createdAt",
                            "aut",
                            "officia",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new MediaPopupContent("aut est ipsam",
                            "atque qui neque qui",
                        [new BarChartMediaInfo("fuga culpa et",
                                "quis",
                                "excepturi odio tenetur",
                            new ChartMediaInfoValue(["sed",
                                    "quas",
                                    "sed",
                                    "ut"],
                                    "illo",
                                    "et",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "dolore",
                                        639.9696),
                                new ChartMediaInfoValueSeries("title",
                                        "illum",
                                        908.4835)],
                                [new MapColor(103, 61, 217),
                                new MapColor(42, 105, 192),
                                new MapColor(155, 8, 236),
                                new MapColor(154, 178, 70)]))],
                            2),
                    new AttachmentsPopupContent("atque dolores dolorem",
                            "aut placeat quas fugit quos quis",
                            AttachmentsPopupContentDisplayType.Auto),
                    new AttachmentsPopupContent("architecto dolor reprehenderit",
                            "magnam consequatur ducimus in nemo",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "title",
                            "enim eaque quia",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "category",
                            "incidunt vitae nulla",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "email",
                            "eveniet dignissimos quaerat",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("et accusamus placeat",
                            "9efeaaeb-56be-dc26-7643-d8ce97a3916a",
                            () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "facere")]))];
        await mapImageLayer.SetSublayers(testSublayers);
        var sublayers = await mapImageLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        ListMode testListMode = ListMode.Show;
        await mapImageLayer.SetListMode(testListMode);
        var listMode = await mapImageLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        Extent testFullExtent = new Extent(117.0229,
                    107.2614,
                    62.4590,
                    59.9972,
                    779.8542,
                    598.1084,
                    139.7110,
                    488.2969,
                new SpatialReference(7,
                        "dolores",
                        "qui",
                        "harum"),
                    true,
                    true);
        await mapImageLayer.SetFullExtent(testFullExtent);
        var fullExtent = await mapImageLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(6,
                    true,
                    true,
                ListMode.Hide,
                    39994074.9019,
                    49472.3697,
                    0.6300,
                    true,
                    "aspernatur ex ea",
                    true,
                    "fugit",
                new LayerFloorInfo("et"),
                [new Label(LabelPlacement.AboveAlong,
                        "consequatur",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        47190253.2497,
                        16140.3291,
                        true,
                        new Dimension(912.6885),
                    new TextSymbol("itaque saepe excepturi",
                        new MapColor(241, 53, 87),
                        new MapColor(126, 197, 23),
                            new Dimension(329.4596),
                        new MapFont(new Dimension(109.8626),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            815.0662,
                        new MapColor(157, 181, 242),
                        new MapColor(123, 180, 51),
                            15.5667,
                        HorizontalAlignment.Center,
                            true,
                            796.8900,
                            new Dimension(48.1511),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("perspiciatis aut placeat",
                        "qui",
                        ["aliquam",
                            "voluptatem",
                            "exercitationem",
                            "et"],
                    [new FieldInfo("createdAt",
                            "aliquam",
                            "nihil",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("email",
                            "fugiat",
                            "nemo",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("comment",
                            "quis",
                            "et",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("status",
                            "ut",
                            "voluptate",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Max)],
                    [new AttachmentsPopupContent("neque error ut",
                            "sit neque nesciunt doloribus optio",
                            AttachmentsPopupContentDisplayType.Preview),
                    new MediaPopupContent("autem est illum",
                            "animi voluptates culpa velit quod provident",
                        [new ImageMediaInfo("odit maxime enim",
                                "odio",
                                "a earum excepturi",
                            new ImageMediaInfoValue("http://cyril.name",
                                    "https://claudie.biz"),
                                191.9429)],
                            8)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "updatedAt",
                            "provident dolorum quas",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "status",
                            "voluptas deserunt quibusdam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("sint ipsum earum",
                            "60a26f91-6867-e413-015c-d9ea5416a429",
                            () => { Console.WriteLine("occaecati"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "exercitationem"),
                    new ActionToggle("et corrupti qui",
                            "6ca84dfd-42c7-3a0e-98e4-5aec8876602f",
                            () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "corrupti"),
                    new ActionToggle("similique adipisci aut",
                            "832d6bc3-bb15-fdd5-3a26-85083f9ead35",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "veniam"),
                    new ActionToggle("totam placeat aut",
                            "3b5784d5-4b5b-8c1c-e8c2-5c4b1f70f0f7",
                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "nemo")])),
            new Sublayer(3,
                    true,
                    true,
                ListMode.Hide,
                    11214165.5383,
                    3237.4060,
                    0.2646,
                    true,
                    "enim sequi nihil",
                    true,
                    "dolorem",
                new LayerFloorInfo("repellat"),
                [new Label(LabelPlacement.CenterAlong,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        35250615.6160,
                        30792.1507,
                        true,
                        new Dimension(407.6799),
                    new TextSymbol("corporis itaque recusandae",
                        new MapColor(67, 129, 180),
                        new MapColor(157, 128, 156),
                            new Dimension(582.4700),
                        new MapFont(new Dimension(673.6387),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            26.5090,
                        new MapColor(5, 68, 36),
                        new MapColor(199, 184, 244),
                            414.4232,
                        HorizontalAlignment.Right,
                            true,
                            340.8291,
                            new Dimension(554.5005),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.CenterCenter,
                        "quasi",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        26586446.3851,
                        35962.2535,
                        true,
                        new Dimension(313.2795),
                    new TextSymbol("vel libero sit",
                        new MapColor(110, 172, 131),
                        new MapColor(244, 33, 24),
                            new Dimension(884.6554),
                        new MapFont(new Dimension(402.1428),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            31.9015,
                        new MapColor(186, 158, 226),
                        new MapColor(21, 170, 71),
                            391.5469,
                        HorizontalAlignment.Left,
                            true,
                            91.5996,
                            new Dimension(513.4519),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("odit ut impedit",
                        "fugiat",
                        ["ea",
                            "at",
                            "quia"],
                    [new FieldInfo("token",
                            "aut",
                            "at",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("updatedAt",
                            "qui",
                            "necessitatibus",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("comment",
                            "qui",
                            "debitis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("category",
                            "illo",
                            "incidunt",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "delectus",
                                "aut vel dolor")),
                    new MediaPopupContent("consequatur esse placeat",
                            "libero expedita quod error sunt ut",
                        [new ImageMediaInfo("perferendis consequatur deserunt",
                                "reiciendis",
                                "quibusdam iure quia",
                            new ImageMediaInfoValue("https://golda.biz",
                                    "http://marcelo.net"),
                                585.0484),
                        new ImageMediaInfo("recusandae rerum et",
                                "nam",
                                "ut ut velit",
                            new ImageMediaInfoValue("https://bobbie.org",
                                    "http://angeline.biz"),
                                43.0635)],
                            1),
                    new FieldsPopupContent([new FieldInfo("updatedAt",
                                "dolores",
                                "omnis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Var)],
                            "incidunt et sapiente ratione",
                            "ratione exercitationem sequi"),
                    new AttachmentsPopupContent("nesciunt et enim",
                            "nisi alias enim dolorem voluptatem vitae",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return Date();",
                            "token",
                            "modi deleniti sapiente",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "avatar",
                            "et et quis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("dolores et nihil",
                            "3faa352f-7913-96a9-0e40-bf80d28a3ba2",
                            () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "facilis"),
                    new ActionButton("aut amet autem",
                            "https://picsum.photos/640/480/?image=382",
                            "df88672b-f01f-34d1-8569-35752e6ce892",
                            () => { Console.WriteLine("hic"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "nisi")])),
            new Sublayer(8,
                    true,
                    true,
                ListMode.Show,
                    44962977.5484,
                    15132.8262,
                    0.5745,
                    true,
                    "similique vero voluptatem",
                    true,
                    "saepe",
                new LayerFloorInfo("voluptatem"),
                [new Label(LabelPlacement.AboveBefore,
                        "accusantium",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        12754068.0505,
                        8568.9359,
                        true,
                        new Dimension(854.7645),
                    new TextSymbol("mollitia enim adipisci",
                        new MapColor(60, 137, 122),
                        new MapColor(251, 142, 57),
                            new Dimension(324.9303),
                        new MapFont(new Dimension(815.3117),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            684.0936,
                        new MapColor(163, 216, 159),
                        new MapColor(148, 70, 32),
                            956.9982,
                        HorizontalAlignment.Left,
                            true,
                            421.3120,
                            new Dimension(437.6114),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.CenterBefore,
                        "eveniet",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        46336799.3713,
                        31665.2138,
                        true,
                        new Dimension(303.6301),
                    new TextSymbol("corporis nihil sit",
                        new MapColor(154, 39, 239),
                        new MapColor(159, 118, 241),
                            new Dimension(263.9856),
                        new MapFont(new Dimension(56.9503),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            316.1843,
                        new MapColor(127, 78, 45),
                        new MapColor(236, 34, 122),
                            557.8199,
                        HorizontalAlignment.Right,
                            true,
                            94.6006,
                            new Dimension(184.3543),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.BelowRight,
                        "culpa",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        49527709.0023,
                        45119.9345,
                        true,
                        new Dimension(152.5445),
                    new TextSymbol("explicabo maxime dolor",
                        new MapColor(77, 164, 208),
                        new MapColor(216, 253, 63),
                            new Dimension(243.7717),
                        new MapFont(new Dimension(499.9339),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            130.4416,
                        new MapColor(236, 160, 178),
                        new MapColor(59, 49, 148),
                            5.9419,
                        HorizontalAlignment.Right,
                            true,
                            100.8110,
                            new Dimension(102.9110),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.BelowAfter,
                        "veritatis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        5195555.2545,
                        28164.1196,
                        true,
                        new Dimension(601.6693),
                    new TextSymbol("veritatis eum illo",
                        new MapColor(44, 230, 17),
                        new MapColor(31, 118, 83),
                            new Dimension(213.6027),
                        new MapFont(new Dimension(268.2302),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            233.5615,
                        new MapColor(98, 110, 29),
                        new MapColor(160, 227, 205),
                            990.2133,
                        HorizontalAlignment.Center,
                            true,
                            410.6915,
                            new Dimension(276.6246),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("modi aut occaecati",
                        "nihil",
                        ["nostrum",
                            "sapiente"],
                    [new FieldInfo("updatedAt",
                            "aut",
                            "unde",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("status",
                            "optio",
                            "magni",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new MediaPopupContent("officiis suscipit aut",
                            "quia aut ad molestiae minima consectetur ut",
                        [new BarChartMediaInfo("quo recusandae id",
                                "aut",
                                "dolore et aut",
                            new ChartMediaInfoValue(["aliquid",
                                    "quia",
                                    "doloribus",
                                    "modi"],
                                    "et",
                                    "odit",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "aut",
                                        170.3628),
                                new ChartMediaInfoValueSeries("avatar",
                                        "deserunt",
                                        687.3173),
                                new ChartMediaInfoValueSeries("title",
                                        "dignissimos",
                                        902.0154)],
                                [new MapColor(156, 156, 80),
                                new MapColor(93, 46, 168),
                                new MapColor(200, 194, 221)])),
                        new PieChartMediaInfo("sit laboriosam ipsam",
                                "non",
                                "incidunt non id",
                            new ChartMediaInfoValue(["ea",
                                    "qui"],
                                    "fugiat",
                                    "placeat",
                                [new ChartMediaInfoValueSeries("category",
                                        "tempore",
                                        957.9595),
                                new ChartMediaInfoValueSeries("status",
                                        "est",
                                        556.7799),
                                new ChartMediaInfoValueSeries("updatedAt",
                                        "placeat",
                                        220.2295),
                                new ChartMediaInfoValueSeries("password",
                                        "voluptatem",
                                        461.6771)],
                                [new MapColor(149, 21, 153)]))],
                            4),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                "aut",
                                "atque eos blanditiis")),
                    new AttachmentsPopupContent("omnis optio porro",
                            "ipsam consequatur qui nihil reprehenderit",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "email",
                            "optio delectus eum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "phone",
                            "totam voluptatum dolor",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("dolore animi quis",
                            "0dac9236-7e42-3ec6-bb63-7fc57982991c",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "at"),
                    new ActionToggle("sint cupiditate facere",
                            "f1f21ed4-b1bf-b859-fb73-d01f8a70dd40",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "commodi"),
                    new ActionButton("quia voluptatem laboriosam",
                            "https://picsum.photos/640/480/?image=1030",
                            "15899f18-3c7c-3e05-1a26-aeddb85968b1",
                            () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "nihil"),
                    new ActionButton("vel sint animi",
                            "https://picsum.photos/640/480/?image=74",
                            "8cdf8ff2-0553-1460-1cfd-a51dcfe963cf",
                            () => { Console.WriteLine("praesentium"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "neque")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Show,
                    12736180.5514,
                    25717.6894,
                    0.1783,
                    true,
                    "beatae aperiam rerum",
                    true,
                    "sed",
                new LayerFloorInfo("optio"),
                [new Label(LabelPlacement.AboveAlong,
                        "totam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        32632324.3980,
                        26836.7124,
                        true,
                        new Dimension(912.2878),
                    new TextSymbol("officia iusto voluptas",
                        new MapColor(92, 61, 158),
                        new MapColor(51, 199, 106),
                            new Dimension(809.3265),
                        new MapFont(new Dimension(720.6452),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            32.1217,
                        new MapColor(129, 2, 177),
                        new MapColor(220, 193, 33),
                            199.1885,
                        HorizontalAlignment.Left,
                            true,
                            896.3981,
                            new Dimension(876.0575),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.AboveCenter,
                        "a",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        15330182.5351,
                        31041.6912,
                        true,
                        new Dimension(997.7190),
                    new TextSymbol("illo pariatur eos",
                        new MapColor(208, 61, 61),
                        new MapColor(42, 152, 15),
                            new Dimension(373.4522),
                        new MapFont(new Dimension(174.2569),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            806.9729,
                        new MapColor(54, 254, 223),
                        new MapColor(220, 160, 231),
                            500.8062,
                        HorizontalAlignment.Right,
                            true,
                            832.3849,
                            new Dimension(242.8514),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "nostrum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        1358911.2750,
                        12526.3784,
                        true,
                        new Dimension(74.9878),
                    new TextSymbol("consequatur quam cumque",
                        new MapColor(18, 172, 6),
                        new MapColor(133, 21, 175),
                            new Dimension(768.2552),
                        new MapFont(new Dimension(997.4627),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            228.1089,
                        new MapColor(72, 43, 205),
                        new MapColor(8, 253, 232),
                            534.7181,
                        HorizontalAlignment.Right,
                            true,
                            57.4852,
                            new Dimension(269.4806),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.AboveEnd,
                        "ut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        32695480.5501,
                        21918.6647,
                        true,
                        new Dimension(417.1413),
                    new TextSymbol("distinctio asperiores et",
                        new MapColor(75, 232, 94),
                        new MapColor(94, 38, 12),
                            new Dimension(715.7824),
                        new MapFont(new Dimension(763.2746),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            987.8555,
                        new MapColor(114, 198, 248),
                        new MapColor(244, 130, 79),
                            592.9425,
                        HorizontalAlignment.Left,
                            true,
                            150.7949,
                            new Dimension(847.9587),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("ut totam numquam",
                        "ut",
                        ["a",
                            "vel"],
                    [new FieldInfo("avatar",
                            "qui",
                            "consequuntur",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("category",
                            "eos",
                            "nihil",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("token",
                            "ut",
                            "maxime",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new FieldsPopupContent([new FieldInfo("avatar",
                                "dolore",
                                "animi",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("title",
                                "magni",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("avatar",
                                "eveniet",
                                "qui",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("comment",
                                "omnis",
                                "alias",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                            "accusamus aut a possimus qui eum laudantium",
                            "minima animi voluptas"),
                    new MediaPopupContent("mollitia rerum aut",
                            "autem repellat aliquid quo dolores aliquid incidunt",
                        [new PieChartMediaInfo("sed odit labore",
                                "voluptatem",
                                "iure libero dolorem",
                            new ChartMediaInfoValue(["qui",
                                    "voluptate",
                                    "tenetur",
                                    "quia"],
                                    "et",
                                    "culpa",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "praesentium",
                                        873.6152)],
                                [new MapColor(36, 70, 251),
                                new MapColor(151, 202, 251),
                                new MapColor(58, 96, 111)])),
                        new BarChartMediaInfo("dolores qui autem",
                                "sequi",
                                "corporis excepturi assumenda",
                            new ChartMediaInfoValue(["et",
                                    "asperiores"],
                                    "in",
                                    "nemo",
                                [new ChartMediaInfoValueSeries("comment",
                                        "aperiam",
                                        621.5620),
                                new ChartMediaInfoValueSeries("status",
                                        "nesciunt",
                                        633.7943),
                                new ChartMediaInfoValueSeries("group",
                                        "vel",
                                        92.5061),
                                new ChartMediaInfoValueSeries("token",
                                        "sapiente",
                                        812.8060)],
                                [new MapColor(101, 174, 231),
                                new MapColor(205, 68, 241)])),
                        new ColumnChartMediaInfo("voluptatum adipisci labore",
                                "odio",
                                "qui mollitia voluptas",
                            new ChartMediaInfoValue(["ipsam",
                                    "unde",
                                    "libero"],
                                    "laboriosam",
                                    "deserunt",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "et",
                                        661.6712),
                                new ChartMediaInfoValueSeries("group",
                                        "autem",
                                        107.4162)],
                                [new MapColor(57, 91, 144),
                                new MapColor(216, 14, 229),
                                new MapColor(92, 146, 101)])),
                        new LineChartMediaInfo("id perferendis architecto",
                                "omnis",
                                "vel rem est",
                            new ChartMediaInfoValue(["explicabo",
                                    "voluptate"],
                                    "tempora",
                                    "laborum",
                                [new ChartMediaInfoValueSeries("id",
                                        "tempora",
                                        352.3508),
                                new ChartMediaInfoValueSeries("comment",
                                        "reprehenderit",
                                        199.2724),
                                new ChartMediaInfoValueSeries("status",
                                        "voluptatem",
                                        700.3196)],
                                [new MapColor(89, 105, 15),
                                new MapColor(124, 9, 37)]))],
                            2)],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "password",
                            "earum aperiam temporibus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "password",
                            "fugiat culpa pariatur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "token",
                            "iusto natus rerum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "avatar",
                            "et provident aut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("laborum ut facilis",
                            "d0966871-c7d4-502d-6fe4-651a57106c3b",
                            () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "nulla"),
                    new ActionToggle("dicta aliquam sequi",
                            "960cc6e3-2087-b8bc-b430-e2a6fd4c3191",
                            () => { Console.WriteLine("error"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "nisi"),
                    new ActionToggle("fuga ab quia",
                            "ac31b81d-fb82-8759-0f4c-74158537934f",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "sunt")]))];
        await mapImageLayer.SetSubtables(testSubtables);
        var subtables = await mapImageLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Weeks,
                    597.1148);
        await mapImageLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await mapImageLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2013, 2, 27, 17, 32, 18),
                    new DateTime(2021, 2, 6, 15, 13, 6));
        await mapImageLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await mapImageLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
