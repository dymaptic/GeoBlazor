@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@* ReSharper disable once InconsistentNaming *@

@code {

    [TestMethod]
    public async Task TestCanRenderWMSLayerWithFeatureInfoFormats(Action renderHandler,
        Action<LayerViewCreateEvent> layerViewCreated)
    {
#pragma warning disable GeoBlazor_Untested
        WMSLayer? layer = null;

        AddMapRenderFragment(
            @<SceneView class="map-view" 
                        OnViewRendered="renderHandler"
                        OnLayerViewCreate="layerViewCreated">
                <Map>
                    <WMSLayer @ref="layer"
                              Url="https://ows.terrestris.de/osm/service"
                              SpatialReference="new SpatialReference(102100)">
                        <WMSSublayer Name="OSM-WMS"/>
                    </WMSLayer>
                </Map>
        </SceneView>);
        await WaitForMapToRender();
        
        var createEvent = await WaitForLayerToRender<WMSLayer>();
        Assert.IsInstanceOfType<WMSLayer>(createEvent.Layer);
        WMSLayer createdLayer = (WMSLayer)createEvent.Layer;
        Assert.AreEqual(layer?.Id, createdLayer.Id);
        
        await AssertJavaScript("assertLayerExists", args: "wms");
#pragma warning restore GeoBlazor_Untested
    }
    
    [TestMethod]
    public async Task TestWMSLayerSpatialReference(Action renderHandler,
        Action<LayerViewCreateEvent> layerViewCreated)
    {
#pragma warning disable GeoBlazor_Untested
        WMSLayer? layer = null;

        AddMapRenderFragment(
            @<SceneView class="map-view" 
                        OnViewRendered="renderHandler"
                        OnLayerViewCreate="layerViewCreated">
                <Map>
                    <WMSLayer @ref="layer"
                              Url="https://ows.terrestris.de/osm/service" >
                        <WMSSublayer Name="OSM-WMS"/>
                    </WMSLayer>
                </Map>
            </SceneView>);
        await WaitForMapToRender();
        LayerViewCreateEvent createEvent = await WaitForLayerToRender<WMSLayer>();
        Assert.IsInstanceOfType<WMSLayer>(createEvent.Layer);
        WMSLayer createdLayer = (WMSLayer)createEvent.Layer;
        Assert.AreEqual(layer?.Id, createdLayer.Id);
        Assert.IsTrue(layer?.SpatialReference == SpatialReference.Wgs84);
        
#pragma warning restore GeoBlazor_Untested
    }

}