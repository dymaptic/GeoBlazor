@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderMapImageLayer(Action renderHandler)
    {
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisDarkGray" />
                    </Basemap>
                    <MapImageLayer>
                        <PortalItem PortalItemId="d7892b3c13b44391992ecd42bfa92d01" />
                    </MapImageLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        await AssertJavaScript("assertLayerExists", args: "map-image");
    }
    
    [TestMethod]
    public async Task TestCanRenderMapImageLayerWithUrlAndNestedSublayers(Action renderHandler, 
        Action<LayerViewCreateEvent> layerViewCreatedHandler)
    {
        MapImageLayer? layer = null;

        AddMapRenderFragment(
            @<MapView class="map-view"
                      OnViewRendered="renderHandler"
                      OnLayerViewCreate="layerViewCreatedHandler">
                <Map>
                    <MapImageLayer @ref="layer" Title="Encroachments" 
                               Url="https://sampleserver6.arcgisonline.com/arcgis/rest/services/Military/MapServer" />
                </Map>
            </MapView>);
        await WaitForMapToRender();
        
        LayerViewCreateEvent createEvent = await WaitForLayerToRender<MapImageLayer>();
        Assert.IsInstanceOfType<MapImageLayer>(createEvent.Layer);
        MapImageLayer createdLayer = (MapImageLayer)createEvent.Layer;
        Assert.AreEqual(layer?.Id, createdLayer.Id);
        
        Sublayer firstSublayer = layer!.Sublayers!.First(l => l.Sublayers is { Count: > 0 });
        Sublayer firstSubSublayer = firstSublayer.Sublayers![0];
        Assert.IsNotNull(firstSubSublayer);
        await firstSublayer.SetPopupEnabled(false);
        await AssertJavaScript("assertObjectHasPropertyWithValue", args: [firstSublayer.Id, "popupEnabled", false]);
        
        Assert.IsTrue(layer!.Sublayers!.Count > 0);
        Assert.IsTrue(layer.AllSublayers!.Count > 0);
        await AssertJavaScript("assertLayerExists", args: "map-image");
    }
}