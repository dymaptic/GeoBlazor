@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedWCSLayer(Action renderHandler)
    {
        WCSLayer? wCSLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <WCSLayer 
                        Url="@("https://sampleserver6.arcgisonline.com/arcgis/services/ScientificData/SeaTemperature/ImageServer/WCSServer")"
                        Renderer="@(new RasterStretchRenderer(new AlgorithmicColorRamp(Algorithm.CieLab,
                                new MapColor(37, 247, 224),
                                new MapColor(3, 98, 116)),
                            true,
                            true,
                            [4],
                            9,
                            5,
                            StretchType.None,
                            [new RasterBandStatistics(613.1605,
                                3,
                                509.1970,
                                748.3464,
                                215.6973,
                                982.8182,
                                822.4547,
                                390.6654),
                            new RasterBandStatistics(582.6705,
                                9,
                                616.4034,
                                867.5271,
                                39.7369,
                                660.3833,
                                998.9737,
                                937.8314)],
                            true,
                            4))"
                        Opacity="@(0.7730)"
                        Title="@("ducimus aut fuga")"
                        BandIds="@([4])"
                        BlendMode="@(BlendMode.SourceIn)"
                        Copyright="@("sint")"
                        CoverageId="@("cumque")"
                        CoverageInfo="@(new CoverageInfo(["phone"],
                            new CoverageDescriptionV110("quidem",
                                new CoverageDescriptionV110Domain(new CoverageDescriptionV110DomainSpatialDomain(165.5201,
                                        new Extent(-34.7962,
                                                108.9883,
                                                -15.5038,
                                                -15.0080,
                                                567.2431,
                                                539.0406,
                                                659.0875,
                                                361.7287,
                                            new SpatialReference(5,
                                                    "odit",
                                                    "magni",
                                                    "fugiat"),
                                                true,
                                                true),
                                            "enim",
                                        new CoverageDescriptionV110DomainSpatialDomainOffset(28.7289,
                                                "repellat"),
                                        new CoverageDescriptionV110DomainSpatialDomainOrigin(40.8781,
                                                "quia"),
                                            153.2123,
                                            true),
                                    new TemporalDomain(new DateTime(2009, 10, 12, 14, 5, 11),
                                            new DateTime(2022, 11, 5, 16, 3, 36),
                                            28.1675,
                                            "est",
                                            [new DateTime(2023, 2, 27, 21, 52, 42),
                                                new DateTime(2014, 6, 10, 7, 58, 33)])),
                                    "eaque",
                                    "eos",
                                [new CoverageDescriptionV110Range("nihil",
                                    [new CoverageDescriptionV110RangeAxis([518.3249,
                                            581.5044],
                                            "nostrum",
                                            "nam",
                                            "neque",
                                            ["distinctio"])],
                                        "dolores",
                                        "asperiores et ut",
                                        "consequuntur",
                                        [623.0486],
                                        ["est",
                                            "dolor"],
                                        "illo assumenda inventore")],
                                new CoverageDescriptionV110Resolution("ullam",
                                        "recusandae"),
                                    ["corrupti",
                                        "quam"],
                                    ["illum"],
                                    "sed eos officia",
                                    "2.5.0.1"),
                                "eius",
                                "rerum enim assumenda",
                            new Extent(-33.6849,
                                    -158.0336,
                                    -26.7801,
                                    -10.7619,
                                    843.4889,
                                    502.0827,
                                    199.5059,
                                    473.1628,
                                new SpatialReference(6,
                                        "laudantium",
                                        "nobis",
                                        "blanditiis"),
                                    true,
                                    true),
                            new RasterInfo(new FeatureSet("group",
                                        true,
                                    [new Graphic(new Point(-18.4358,
                                                34.7938,
                                                95.8178,
                                                52.0635,
                                                425.3051,
                                            new SpatialReference(7,
                                                    "molestiae",
                                                    "et",
                                                    "delectus"),
                                                true,
                                                true,
                                                574.9399),
                                        new TextSymbol("veniam ut repellat",
                                            new MapColor(171, 127, 75),
                                            new MapColor(241, 155, 127),
                                                new Dimension(220.8038),
                                            new MapFont(new Dimension(530.5308),
                                                    "Garamond",
                                                MapFontStyle.Italic,
                                                FontWeight.Bolder,
                                                TextDecoration.Underline),
                                                646.7194,
                                            new MapColor(186, 156, 232),
                                            new MapColor(179, 66, 90),
                                                424.0378,
                                            HorizontalAlignment.Left,
                                                true,
                                                579.3393,
                                                new Dimension(959.3221),
                                                true),
                                        new PopupTemplate("rerum accusantium vel",
                                                "animi",
                                                ["architecto",
                                                    "neque"],
                                            [new FieldInfo("updatedAt",
                                                    "ut",
                                                    "voluptatibus",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.LongDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                            [new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "ut",
                                                        "illum amet magnam")),
                                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                                        "quis",
                                                        "est sit ratione"))],
                                            [new ExpressionInfo("return Date();",
                                                    "email",
                                                    "nemo quae officia",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "name",
                                                    "voluptas rerum nam",
                                                    ExpressionInfoReturnType.String)],
                                                true,
                                                true,
                                                [new ActionButton("consequatur dolor sit",
                                                    "https://picsum.photos/640/480/?image=865",
                                                    "77542ffd-b2d3-8dae-2f26-d2bd59e2c194",
                                                    () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                                                    "token",
                                                    true,
                                                    true,
                                                    true,
                                                    "omnis"),
                                                    new ActionButton("voluptates rerum illum",
                                                        "https://picsum.photos/640/480/?image=998",
                                                        "ee1475f7-7103-e9c2-7c50-a67dcca56785",
                                                        () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                        "category",
                                                        true,
                                                        true,
                                                        true,
                                                        "et")]),
                                            new AttributesDictionary(),
                                            true,
                                            "consectetur",
                                            "id",
                                            new GraphicOrigin(Guid.NewGuid(),
                                                "voluptas",
                                                6)),
                                    new Graphic(new Point(78.0682,
                                                -67.7121,
                                                105.5059,
                                                40.8291,
                                                515.5554,
                                            new SpatialReference(7,
                                                    "reprehenderit",
                                                    "sapiente",
                                                    "explicabo"),
                                                true,
                                                true,
                                                95.6419),
                                        new TextSymbol("iste et officiis",
                                            new MapColor(86, 172, 50),
                                            new MapColor(118, 176, 106),
                                                new Dimension(667.9296),
                                            new MapFont(new Dimension(482.8672),
                                                    "Bookman",
                                                MapFontStyle.Normal,
                                                FontWeight.Lighter,
                                                TextDecoration.Underline),
                                                526.4996,
                                            new MapColor(245, 205, 218),
                                            new MapColor(213, 77, 109),
                                                747.1741,
                                            HorizontalAlignment.Center,
                                                true,
                                                417.1029,
                                                new Dimension(702.3937),
                                                true),
                                        new PopupTemplate("ea error ex",
                                                "eos",
                                                ["dolores"],
                                            [new FieldInfo("phone",
                                                    "facere",
                                                    "voluptatum",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("createdAt",
                                                    "eveniet",
                                                    "animi",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.LongDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev)],
                                            [new MediaPopupContent("similique hic est",
                                                    "vel labore nostrum",
                                                [new ImageMediaInfo("dolores ducimus itaque",
                                                        "laborum",
                                                        "commodi et hic",
                                                    new ImageMediaInfoValue(),
                                                        322.9973)],
                                                    4)],
                                            [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "token",
                                                    "quo cum est",
                                                    ExpressionInfoReturnType.String)],
                                                true,
                                                true,
                                                [new ActionButton("at dolores magnam",
                                                    "https://picsum.photos/640/480/?image=380",
                                                    "52bef5d7-634e-5e23-763b-8a15613905a9",
                                                    () => { Console.WriteLine("corrupti"); return Task.CompletedTask; },
                                                    "password",
                                                    true,
                                                    true,
                                                    true,
                                                    "et"),
                                                    new ActionButton("omnis vitae sed",
                                                        "https://picsum.photos/640/480/?image=796",
                                                        "5bee1084-9a2d-b59d-d83b-b299657d24be",
                                                        () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                                        "group",
                                                        true,
                                                        true,
                                                        true,
                                                        "sunt")]),
                                            new AttributesDictionary(),
                                            true,
                                            "fugit",
                                            "ut",
                                            new GraphicOrigin(Guid.NewGuid(),
                                                "earum",
                                                4))],
                                    [new Field(default,
                                            "createdAt",
                                            "itaque",
                                            "numquam minus perferendis voluptate",
                                            8,
                                            true,
                                            true,
                                            new { Value = "cum" },
                                        FieldValueType.TypeOrCategory,
                                        new InheritedDomain("password"))],
                                    GeometryType.Mesh,
                                    new Extent(-2.1758,
                                            -80.9343,
                                            -87.6244,
                                            -24.4709,
                                            832.6816,
                                            867.2137,
                                            388.8139,
                                            256.6176,
                                        new SpatialReference(7,
                                                "temporibus",
                                                "sint",
                                                "sit"),
                                            true,
                                            true),
                                    new SpatialReference(1,
                                            "eos",
                                            "impedit",
                                            "asperiores")),
                                    3,
                                [new RasterBandInfo(780.9577,
                                        666.1238,
                                        "phone",
                                        778.2688,
                                        152.4220,
                                        258.9031,
                                        225.7330,
                                        983.2006),
                                new RasterBandInfo(246.0935,
                                        504.3210,
                                        "category",
                                        413.6048,
                                        964.9116,
                                        510.2810,
                                        702.2203,
                                        387.0920)],
                                    [new ColormapPixel(884.8804,
                                        818.8041,
                                        128.0546,
                                        695.2578)],
                                DataType.VectorU,
                                new Extent(142.0205,
                                        -37.6271,
                                        89.5764,
                                        18.8968,
                                        441.0944,
                                        357.3789,
                                        683.5102,
                                        884.2047,
                                    new SpatialReference(9,
                                            "ipsa",
                                            "unde",
                                            "quis"),
                                        true,
                                        true),
                                    true,
                                    5,
                                    ["quos",
                                        "sunt"],
                                    "laborum",
                                new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("numquam quia ut",
                                        [new RasterMultidimensionalInfoVariablesDimensions("explicabo debitis est",
                                                [909.4963,
                                                    685.9967],
                                                true,
                                                39.4500,
                                                "cum",
                                                "avatar",
                                                "quia",
                                                [909.8361])],
                                        [new RasterHistogram([3.5927],
                                                [7],
                                                20.1355,
                                                198.7974,
                                                1)],
                                            "group",
                                        [new RasterBandStatistics(118.2274,
                                                5,
                                                26.1158,
                                                55.5888,
                                                52.7909,
                                                315.2678,
                                                424.5336,
                                                402.3520)],
                                            "autem")]),
                                new RasterInfoPixelSize(36.7803,
                                        76.7232),
                                PixelType.S32,
                                new RasterSensorInfo(new DateTime(2003, 5, 27, 19, 5, 44),
                                        267.6219,
                                        "avatar",
                                        85.5505,
                                        973.6264,
                                        "updatedAt",
                                        394.4775,
                                        466.9177)),
                                ["totam",
                                    "nobis"],
                            [SupportedInterpolations.Majority],
                                "quos ut aut",
                                true,
                            CoverageInfoVersion.One_1_1))"
                        Effect="@(new Effect("possimus",
                            36613885.5356))"
                        Interpolation="@(Interpolation.Majority)"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(49604993.7784)"
                        MinScale="@(43692.4347)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        UseViewTime="@(true)"
                        Version="@("3.2.8.3")">
                        <TimeInterval 
                            Unit="@(TemporalTime.Hours)"
                            Value="@(64.0851)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("corporis")"
                            EndField="@("officia")"
                            Stops="@([new DateTime(2009, 9, 26, 16, 7, 11)])"
                            TimeZone="@("America/Los_Angeles")"
                            TrackIdField="@("qui")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Weeks)"
                                Value="@(214.8556)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2023, 11, 7, 18, 42, 43))"
                                End="@(new DateTime(2015, 3, 20, 14, 53, 54))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2009, 2, 7, 17, 50, 0))"
                            End="@(new DateTime(2013, 11, 20, 18, 37, 50))">
                        </TimeExtent>
                        <Field 
                            Name="@("token")"
                            Alias="@("similique")"
                            Description="@("in voluptatibus")"
                            Length="@(4)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "architecto" })"
                            ValueType="@(FieldValueType.PercentageOrRatio)"
                            Domain="@(new RangeDomain("ipsum",
                                    "cupiditate",
                                    "updatedAt"))">
                        </Field>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("consequuntur nam ad")"
                            StringContent="@("reprehenderit")"
                            OutFields="@(["et",
                                "id"])"
                            FieldInfos="@([new FieldInfo("name",
                                    "omnis",
                                    "quo",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(2,
                                        true,
                                    DateFormat.ShortDateLeShortTime24),
                                    true,
                                    true,
                                StatisticType.Sum)])"
                            Content="@([new MediaPopupContent("voluptate suscipit dolore",
                                    "et aut a",
                                [new BarChartMediaInfo("ut excepturi alias",
                                        "aut",
                                        "repudiandae rerum sint",
                                    new ChartMediaInfoValue(["est",
                                            "incidunt"],
                                            "velit",
                                            "cumque",
                                        [new ChartMediaInfoValueSeries("comment",
                                                "eos",
                                                496.8222)],
                                        [new MapColor(149, 164, 235)]))],
                                    3),
                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "nemo",
                                        "hic est totam"))])"
                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "id",
                                    "qui iure sed",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                    "password",
                                    "ex iusto illum",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("tempore dignissimos quis",
                                "https://picsum.photos/640/480/?image=348",
                                "cd3ecd1e-ea5f-7a22-a6cf-b33e802960b5",
                                () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "itaque")])">
                        </PopupTemplate>
                        <MultidimensionalSubset 
                            AreaOfInterest="@(new Polyline([new MapPath([new MapPoint([959.3060])])],
                                new SpatialReference(6,
                                        "blanditiis",
                                        "aut",
                                        "nesciunt"),
                                    true,
                                    true))">
                            <DimensionalDefinition 
                                DimensionName="@("updatedAt")"
                                IsSlice="@(true)"
                                VariableName="@("createdAt")"
>
                            </DimensionalDefinition>
                        </MultidimensionalSubset>
                        <DimensionalDefinition 
                            DimensionName="@("avatar")"
                            IsSlice="@(true)"
                            VariableName="@("title")"
>
                        </DimensionalDefinition>
                        <Extent 
                            Xmax="@(156.0086)"
                            Xmin="@(169.9116)"
                            Ymax="@(-71.5140)"
                            Ymin="@(-37.1336)"
                            Zmax="@(936.1843)"
                            Zmin="@(292.3513)"
                            Mmax="@(683.8912)"
                            Mmin="@(279.8719)"
                            SpatialReference="@(new SpatialReference(5,
                                    "dolorem",
                                    "qui",
                                    "labore"))"
                            HasM="@(true)"
                            HasZ="@(true)">
                        </Extent>
                    </WCSLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(wCSLayer!);
        await AssertJavaScript("assertLayerExists", args: "wcs");
        var createPopupTemplateMethodResult = await wCSLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["eligendi",
                    "alias"],
                    ["password"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var fetchPixelsMethodResult = await wCSLayer.FetchPixels(new Extent(-45.9199,
                    39.5810,
                    88.7417,
                    58.6306,
                    302.6063,
                    333.4217,
                    154.3438,
                    450.3415,
                new SpatialReference(6,
                        "nulla",
                        "itaque",
                        "molestiae"),
                    true,
                    true),
                6,
                6,
            new ImageryTileMixinFetchPixelsOptions(Interpolation.Nearest));
        Assert.IsNotNull(fetchPixelsMethodResult);
        var identifyMethodResult = await wCSLayer.Identify(new Point(155.6909,
                    55.5075,
                    61.1836,
                    -59.8447,
                    132.2935,
                new SpatialReference(9,
                        "itaque",
                        "aut",
                        "iste"),
                    true,
                    true,
                    646.3316),
            new RasterIdentifyOptions([new DimensionalDefinition("phone",
                        true,
                        "id")],
                    "phone"));
        Assert.IsNotNull(identifyMethodResult);
        IReadOnlyList<DimensionalDefinition> testMultidimensionalDefinition = [new DimensionalDefinition("name",
                    true,
                    "title"),
            new DimensionalDefinition("email",
                    true,
                    "group")];
        await wCSLayer.SetMultidimensionalDefinition(testMultidimensionalDefinition);
        var multidimensionalDefinition = await wCSLayer.GetMultidimensionalDefinition();
        Assert.AreEqual(testMultidimensionalDefinition, multidimensionalDefinition);
        PortalItem testPortalItem = new PortalItem();
        await wCSLayer.SetPortalItem(testPortalItem);
        var portalItem = await wCSLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Difference;
        await wCSLayer.SetBlendMode(testBlendMode);
        var blendMode = await wCSLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        CoverageInfo testCoverageInfo = new CoverageInfo(["updatedAt"],
                new CoverageDescriptionV201(new CoverageDescriptionV201BoundedBy(["vero"],
                            new DateTime(2020, 6, 21, 7, 52, 1),
                            new DateTime(2015, 10, 14, 14, 21, 26),
                        new Extent(91.4678,
                                -130.2696,
                                82.0420,
                                -77.6923,
                                707.1858,
                                690.9688,
                                800.3587,
                                249.3830,
                            new SpatialReference(6,
                                    "consequatur",
                                    "temporibus",
                                    "modi"),
                                true,
                                true),
                        new CoverageDescriptionV201BoundedByEnvelopeAllDims([177.8768,
                                704.9249],
                                [421.7713,
                                    810.2519]),
                            true,
                            ["animi"]),
                        "perferendis",
                        "dolores",
                    new CoverageDescriptionV201DomainSet(["qui",
                            "est"],
                            756.3609,
                            [87.8410,
                                275.7737],
                            true,
                            [801.2374],
                            [708.9142,
                                683.6121],
                        new CoverageDescriptionV201DomainSetResolution(-17.7165,
                                75.2418),
                            292.0368),
                    new CoverageDescriptionV201EoMetadata(new CoverageDescriptionV201EoMetadataObservation("suscipit",
                            new Polygon([new MapPath([new MapPoint([60.5566])]),
                                    new MapPath([new MapPoint([520.6238,
                                            453.5935]),
                                        new MapPoint([417.8666])])],
                                new SpatialReference(3,
                                        "vel",
                                        "dolor",
                                        "consequatur"),
                                new Point(38.2732,
                                        45.2041,
                                        -164.9008,
                                        -29.2544,
                                        586.5986,
                                    new SpatialReference(9,
                                            "veniam",
                                            "quia",
                                            "repellat"),
                                        true,
                                        true,
                                        500.2966),
                                    true,
                                    true,
                                    true),
                                "laudantium",
                            new TemporalDomain(new DateTime(2008, 2, 2, 14, 1, 1),
                                    new DateTime(2022, 6, 11, 8, 55, 1),
                                    41.0748,
                                    "qui",
                                    [new DateTime(2006, 10, 11, 18, 34, 24),
                                        new DateTime(2004, 5, 2, 2, 43, 52)]),
                            new TemporalDomain(new DateTime(2011, 3, 11, 1, 7, 42),
                                    new DateTime(2018, 5, 12, 5, 33, 25),
                                    77.5461,
                                    "eveniet",
                                    [new DateTime(2004, 9, 18, 12, 26, 4)]),
                                "error")),
                        "quia",
                    [new CoverageDescriptionV201RangeType([112.6652,
                            237.1229],
                            "fugiat ut",
                            "email",
                            613.6876,
                            "perspiciatis")],
                    new CoverageDescriptionV201Resolution(-26.1942,
                            48.5891),
                        "temporibus",
                        "1.6.8.1"),
                    "aut",
                    "illo illum libero non",
                new Extent(70.3113,
                        63.8881,
                        61.1779,
                        -4.2427,
                        145.7082,
                        3.3901,
                        545.3153,
                        684.5906,
                    new SpatialReference(3,
                            "qui",
                            "facilis",
                            "assumenda"),
                        true,
                        true),
                new RasterInfo(new FeatureSet("id",
                            true,
                        [new Graphic(new Polygon([new MapPath([new MapPoint([75.5042]),
                                    new MapPoint([872.8676])])],
                                new SpatialReference(3,
                                        "repudiandae",
                                        "mollitia",
                                        "natus"),
                                new Point(23.5249,
                                        67.0429,
                                        -37.8881,
                                        -39.0767,
                                        684.9038,
                                    new SpatialReference(2,
                                            "sint",
                                            "aut",
                                            "velit"),
                                        true,
                                        true,
                                        43.5507),
                                    true,
                                    true,
                                    true),
                            new TextSymbol("alias libero error",
                                new MapColor(85, 108, 2),
                                new MapColor(1, 18, 24),
                                    new Dimension(125.8042),
                                new MapFont(new Dimension(784.5057),
                                        "Bookman",
                                    MapFontStyle.Oblique,
                                    FontWeight.Normal,
                                    TextDecoration.None),
                                    514.0598,
                                new MapColor(114, 201, 77),
                                new MapColor(0, 221, 110),
                                    181.0117,
                                HorizontalAlignment.Right,
                                    true,
                                    969.3619,
                                    new Dimension(764.2816),
                                    true),
                            new PopupTemplate("tempore eos natus",
                                    "ducimus",
                                    ["quia",
                                        "fugiat"],
                                [new FieldInfo("status",
                                        "minus",
                                        "voluptatum",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("avatar",
                                        "maiores",
                                        "dolores",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.ShortDateLeShortTime),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                [new MediaPopupContent("illo nostrum soluta",
                                        "ex cumque perspiciatis et",
                                    [new ColumnChartMediaInfo("sed iure et",
                                            "consectetur",
                                            "qui aut at",
                                        new ChartMediaInfoValue(["dolorem"],
                                                "facere",
                                                "dolores",
                                            [new ChartMediaInfoValueSeries("status",
                                                    "illo",
                                                    846.5524),
                                            new ChartMediaInfoValueSeries("name",
                                                    "consequatur",
                                                    875.0706)],
                                            [new MapColor(51, 161, 52),
                                            new MapColor(139, 149, 149)]))],
                                        3),
                                new RelationshipPopupContent("libero deserunt sunt",
                                        "vel impedit consectetur odit",
                                        5,
                                        "earum",
                                    [new RelatedRecordsInfoFieldOrder("molestias",
                                        OrderBy.Desc)],
                                        4)],
                                [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "comment",
                                        "et molestiae veniam",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "id",
                                        "qui est eligendi",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("voluptas nihil eos",
                                        "https://picsum.photos/640/480/?image=492",
                                        "cc95fcc7-4b4b-7c43-61cc-38841a80ed8d",
                                        () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                        "title",
                                        true,
                                        true,
                                        true,
                                        "fugit"),
                                        new ActionButton("ullam et quas",
                                            "https://picsum.photos/640/480/?image=1055",
                                            "f3db4b43-0fcd-8152-42f0-42cbe18ffaf9",
                                            () => { Console.WriteLine("magnam"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "et")]),
                                new AttributesDictionary(),
                                true,
                                "in",
                                "id",
                                new GraphicOrigin(Guid.NewGuid(),
                                    "eos",
                                    5))],
                        [new Field(default,
                                "id",
                                "et",
                                "quaerat odio",
                                9,
                                true,
                                true,
                                new { Value = "fugit" },
                            FieldValueType.UniqueIdentifier,
                            new InheritedDomain("id"))],
                        GeometryType.Polyline,
                        new Extent(80.6013,
                                -118.0421,
                                5.5784,
                                43.7705,
                                119.4361,
                                266.1493,
                                87.7452,
                                931.2794,
                            new SpatialReference(5,
                                    "laboriosam",
                                    "dolores",
                                    "quidem"),
                                true,
                                true),
                        new SpatialReference(6,
                                "saepe",
                                "autem",
                                "id")),
                        7,
                    [new RasterBandInfo(833.7827,
                            372.7440,
                            "email",
                            373.9348,
                            764.8243,
                            700.8092,
                            987.5820,
                            201.0744)],
                        [new ColormapPixel(745.2209,
                            500.3826,
                            312.7007,
                            633.3074)],
                    DataType.Scientific,
                    new Extent(84.0704,
                            -140.8313,
                            -61.8437,
                            73.8126,
                            4.0626,
                            882.5844,
                            983.5793,
                            431.0000,
                        new SpatialReference(2,
                                "impedit",
                                "voluptate",
                                "omnis"),
                            true,
                            true),
                        true,
                        9,
                        ["ad"],
                        "in",
                    new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("voluptatibus excepturi nisi",
                            [new RasterMultidimensionalInfoVariablesDimensions("mollitia blanditiis",
                                    [369.0205,
                                        561.4043],
                                    true,
                                    142.1388,
                                    "porro",
                                    "email",
                                    "aut",
                                    [456.5960])],
                            [new RasterHistogram([667.5720],
                                    [5,
                                        3],
                                    610.3416,
                                    302.9936,
                                    8)],
                                "password",
                            [new RasterBandStatistics(464.3988,
                                    3,
                                    163.3333,
                                    483.1716,
                                    261.2203,
                                    615.3906,
                                    959.2566,
                                    118.1364)],
                                "et"),
                        new RasterMultidimensionalInfoVariables("repudiandae beatae omnis voluptatem",
                            [new RasterMultidimensionalInfoVariablesDimensions("consequatur ratione sed saepe",
                                    [78.4269],
                                    true,
                                    297.7050,
                                    "qui",
                                    "name",
                                    "nam",
                                    [611.3393]),
                            new RasterMultidimensionalInfoVariablesDimensions("architecto voluptatem aliquid",
                                    [421.4553],
                                    true,
                                    497.2721,
                                    "esse",
                                    "token",
                                    "nobis",
                                    [628.6430])],
                            [new RasterHistogram([757.0016,
                                    394.0309],
                                    [3,
                                        4],
                                    399.8470,
                                    160.4540,
                                    9)],
                                "token",
                            [new RasterBandStatistics(659.1005,
                                    4,
                                    736.6059,
                                    350.9303,
                                    835.3004,
                                    485.0164,
                                    888.8950,
                                    758.0879)],
                                "nemo")]),
                    new RasterInfoPixelSize(105.1973,
                            47.1990),
                    PixelType.S16,
                    new RasterSensorInfo(new DateTime(2023, 9, 14, 9, 38, 46),
                            43.3054,
                            "id",
                            480.5759,
                            362.9651,
                            "email",
                            449.3780,
                            871.3678)),
                    ["ab"],
                [SupportedInterpolations.Cubic],
                    "cum eaque sed",
                    true,
                CoverageInfoVersion.One_1_2);
        await wCSLayer.SetCoverageInfo(testCoverageInfo);
        var coverageInfo = await wCSLayer.GetCoverageInfo();
        Assert.AreEqual(testCoverageInfo, coverageInfo);
        Extent testFullExtent = new Extent(-50.1727,
                    67.6099,
                    -23.6698,
                    73.7597,
                    558.6594,
                    452.3109,
                    547.9667,
                    678.5305,
                new SpatialReference(2,
                        "nesciunt",
                        "id",
                        "error"),
                    true,
                    true);
        await wCSLayer.SetFullExtent(testFullExtent);
        var fullExtent = await wCSLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        Interpolation testInterpolation = Interpolation.Majority;
        await wCSLayer.SetInterpolation(testInterpolation);
        var interpolation = await wCSLayer.GetInterpolation();
        Assert.AreEqual(testInterpolation, interpolation);
        ListMode testListMode = ListMode.Show;
        await wCSLayer.SetListMode(testListMode);
        var listMode = await wCSLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        MultidimensionalSubset testMultidimensionalSubset = new MultidimensionalSubset(new Polygon([new MapPath([new MapPoint([398.8989,
                            677.8785])]),
                        new MapPath([new MapPoint([54.2422]),
                            new MapPoint([922.3533,
                                836.5659])])],
                    new SpatialReference(3,
                            "sequi",
                            "iusto",
                            "explicabo"),
                    new Point(-141.6545,
                            -27.1758,
                            104.8640,
                            -74.7974,
                            787.3785,
                        new SpatialReference(6,
                                "molestiae",
                                "fuga",
                                "accusantium"),
                            true,
                            true,
                            297.2020),
                        true,
                        true,
                        true),
                [new DimensionalDefinition("phone",
                        true,
                        "category")]);
        await wCSLayer.SetMultidimensionalSubset(testMultidimensionalSubset);
        var multidimensionalSubset = await wCSLayer.GetMultidimensionalSubset();
        Assert.AreEqual(testMultidimensionalSubset, multidimensionalSubset);
        PopupTemplate testPopupTemplate = new PopupTemplate("sit provident aut",
                    "nisi",
                    ["rem",
                        "nemo"],
                [new FieldInfo("avatar",
                        "et",
                        "possimus",
                    StringFieldOption.TextArea,
                    new FieldInfoFormat(2,
                            true,
                        DateFormat.LongDateLongTime),
                        true,
                        true,
                    StatisticType.Max)],
                [new RelationshipPopupContent("ex quas dicta",
                        "temporibus odio et voluptate",
                        7,
                        "dolorum",
                    [new RelatedRecordsInfoFieldOrder("fugit",
                        OrderBy.Asc),
                    new RelatedRecordsInfoFieldOrder("est",
                        OrderBy.Asc)],
                        3),
                new MediaPopupContent("quaerat rerum minus",
                        "sed sit",
                    [new ColumnChartMediaInfo("accusantium enim eligendi",
                            "impedit",
                            "iste est modi",
                        new ChartMediaInfoValue(["minima",
                                "odit"],
                                "dolores",
                                "officiis",
                            [new ChartMediaInfoValueSeries("category",
                                    "velit",
                                    403.9499),
                            new ChartMediaInfoValueSeries("group",
                                    "repellendus",
                                    204.5013)],
                            [new MapColor(187, 101, 123),
                            new MapColor(118, 20, 52)])),
                    new LineChartMediaInfo("dolorem reiciendis ullam",
                            "voluptatem",
                            "quos aliquid esse",
                        new ChartMediaInfoValue(["repellat"],
                                "molestiae",
                                "sit",
                            [new ChartMediaInfoValueSeries("phone",
                                    "maiores",
                                    535.6068),
                            new ChartMediaInfoValueSeries("createdAt",
                                    "iure",
                                    19.1181)],
                            [new MapColor(79, 23, 177),
                            new MapColor(175, 146, 223)]))],
                        5)],
                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                        "id",
                        "dolores est aliquam",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                    [new ActionButton("aut adipisci tempore",
                        "https://picsum.photos/640/480/?image=1012",
                        "d68a0e80-6ec5-9d26-a796-8afa77396396",
                        () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                        "comment",
                        true,
                        true,
                        true,
                        "ut"),
                        new ActionButton("veniam alias eos",
                            "https://picsum.photos/640/480/?image=318",
                            "e40cd05e-cc89-4c3c-181a-0bd38ed0065d",
                            () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "eos")]);
        await wCSLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await wCSLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        IReadOnlyList<Field> testRasterFields = [new Field(default,
                    "avatar",
                    "enim",
                    "laudantium odit eveniet",
                    2,
                    true,
                    true,
                    new { Value = "ut" },
                FieldValueType.LocationOrPlaceName,
                new RangeDomain("possimus",
                        "quasi",
                        "updatedAt")),
            new Field(default,
                    "password",
                    "necessitatibus",
                    "eum et rem distinctio",
                    3,
                    true,
                    true,
                    new { Value = "est" },
                FieldValueType.CountOrAmount,
                new RangeDomain("ut",
                        "neque",
                        "comment"))];
        await wCSLayer.SetRasterFields(testRasterFields);
        var rasterFields = await wCSLayer.GetRasterFields();
        Assert.AreEqual(testRasterFields, rasterFields);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2016, 9, 15, 9, 31, 41),
                    new DateTime(2020, 2, 26, 5, 51, 35));
        await wCSLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await wCSLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("quae",
                    "eligendi",
                new TimeExtent(new DateTime(2023, 9, 16, 9, 11, 14),
                        new DateTime(2000, 6, 17, 12, 3, 38)),
                new TimeInterval(TemporalTime.Weeks,
                        870.9060),
                    [new DateTime(2002, 3, 3, 20, 0, 49)],
                    "Asia/Kuala_Lumpur",
                    "libero");
        await wCSLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await wCSLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Centuries,
                    39.9717);
        await wCSLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await wCSLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2020, 1, 20, 14, 13, 29),
                    new DateTime(2000, 8, 2, 17, 56, 24));
        await wCSLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await wCSLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
