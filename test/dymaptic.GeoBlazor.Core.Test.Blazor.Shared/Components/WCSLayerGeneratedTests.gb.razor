@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedWCSLayer(Action renderHandler)
    {
        WCSLayer? wCSLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <WCSLayer 
                        Url="@("https://landsat2.arcgis.com/arcgis/rest/services/Landsat8_Views/ImageServer")"
                        Renderer="@(new RasterStretchRenderer(new AlgorithmicColorRamp(Algorithm.CieLab,
                                new MapColor(245, 121, 106),
                                new MapColor(102, 163, 251)),
                            true,
                            true,
                            [9,
                            5,
                            5,
                            9],
                            3,
                            7,
                            StretchType.None,
                            [new RasterBandStatistics(763.2722,
                                2,
                                658.1132,
                                76.4736,
                                402.3839,
                                645.4042,
                                69.2933,
                                539.4063),
                            new RasterBandStatistics(255.3347,
                                3,
                                176.6182,
                                180.6465,
                                473.5670,
                                238.6726,
                                516.4731,
                                2.3180),
                            new RasterBandStatistics(761.7180,
                                7,
                                794.3580,
                                108.8093,
                                772.5724,
                                506.0726,
                                737.7686,
                                561.2401)],
                            true,
                            7))"
                        Opacity="@(0.4448)"
                        Title="@("ut sed amet")"
                        BandIds="@([7,
                            4,
                            5])"
                        BlendMode="@(BlendMode.Overlay)"
                        Copyright="@("in")"
                        CoverageId="@("odio")"
                        CoverageInfo="@(new CoverageInfo(["avatar",
                                "name"],
                            default,
                                "molestias",
                                "asperiores ea incidunt distinctio sapiente nulla sit",
                            new Extent(-30.8697,
                                    -139.8890,
                                    24.6719,
                                    -51.1041,
                                    307.5362,
                                    748.7316,
                                    568.2757,
                                    981.2385,
                                new SpatialReference(2,
                                        "corporis",
                                        "distinctio",
                                        "ea"),
                                    true,
                                    true),
                            new RasterInfo(new FeatureSet("phone",
                                        true,
                                    [new Graphic(new Polyline([new MapPath([new MapPoint([683.6976,
                                                    858.9660,
                                                    617.9117,
                                                    599.2029]),
                                                new MapPoint([249.5013,
                                                    484.5423,
                                                    982.6022,
                                                    76.3267]),
                                                new MapPoint([658.4628,
                                                    749.6720,
                                                    683.0640]),
                                                new MapPoint([647.9936,
                                                    850.4515,
                                                    970.9237,
                                                    187.5169])]),
                                                new MapPath([new MapPoint([95.8701,
                                                        602.8576]),
                                                    new MapPoint([97.7029,
                                                        92.0650,
                                                        887.9591,
                                                        750.4063])]),
                                                new MapPath([new MapPoint([466.4955,
                                                        49.9037]),
                                                    new MapPoint([409.7147,
                                                        435.1557,
                                                        966.6650,
                                                        851.4638]),
                                                    new MapPoint([126.3943,
                                                        31.7500,
                                                        741.8270])])],
                                            new SpatialReference(6,
                                                    "non",
                                                    "tenetur",
                                                    "autem"),
                                                true,
                                                true),
                                        new TextSymbol("blanditiis asperiores sit",
                                            new MapColor(161, 105, 182),
                                            new MapColor(95, 11, 135),
                                                new Dimension(390.1214),
                                            new MapFont(new Dimension(942.7422),
                                                    "Courier New",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bolder,
                                                TextDecoration.LineThrough),
                                                169.4560,
                                            new MapColor(157, 207, 54),
                                            new MapColor(105, 94, 133),
                                                820.8527,
                                            HorizontalAlignment.Left,
                                                true,
                                                841.0591,
                                                new Dimension(187.3810),
                                                true),
                                        new PopupTemplate("tempore rem ut",
                                                "laboriosam",
                                                ["maiores",
                                                    "omnis"],
                                            [new FieldInfo("category",
                                                    "rerum",
                                                    "repellendus",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.LongMonthDayYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("createdAt",
                                                    "commodi",
                                                    "nobis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongMonthDayYear),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("password",
                                                    "omnis",
                                                    "est",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("category",
                                                    "aliquam",
                                                    "quidem",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Var)],
                                            [new FieldsPopupContent([new FieldInfo("group",
                                                        "incidunt",
                                                        "voluptate",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev),
                                                new FieldInfo("password",
                                                        "est",
                                                        "aut",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)],
                                                    "totam molestias voluptas nobis rem dolorem voluptatem",
                                                    "nemo provident non"),
                                            new FieldsPopupContent([new FieldInfo("category",
                                                        "tenetur",
                                                        "autem",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max),
                                                new FieldInfo("name",
                                                        "natus",
                                                        "vel",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count)],
                                                    "unde deserunt cum voluptatem",
                                                    "quibusdam quo voluptatem"),
                                            new AttachmentsPopupContent("veniam odit enim",
                                                    "porro vitae quis laborum blanditiis",
                                                    AttachmentsPopupContentDisplayType.Preview)],
                                            [new ExpressionInfo("return Date();",
                                                    "token",
                                                    "voluptatem quis ducimus",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "phone",
                                                    "excepturi fugiat ducimus",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "createdAt",
                                                    "incidunt non minima",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "password",
                                                    "qui aut aliquam",
                                                    ExpressionInfoReturnType.String)],
                                                true,
                                                true,
                                            [new ActionButton("ut exercitationem accusamus",
                                                    "https://picsum.photos/640/480/?image=77",
                                                    "59af8faf-a367-5282-8494-b6cf84591455",
                                                    () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                                    "title",
                                                    true,
                                                    true,
                                                    true,
                                                    "minus")]),
                                            new AttributesDictionary(),
                                            true,
                                            "dolorem",
                                            "expedita",
                                            new GraphicOrigin(Guid.NewGuid(),
                                                "nemo",
                                                3))],
                                    [new Field(default,
                                            "avatar",
                                            "tempore",
                                            "quae quidem magni in rerum temporibus et",
                                            8,
                                            true,
                                            true,
                                            new { Value = "et" },
                                        FieldValueType.PercentageOrRatio,
                                            new CodedValueDomain<string>()),
                                    new Field(default,
                                            "password",
                                            "architecto",
                                            "officiis ipsum ea nostrum necessitatibus perferendis",
                                            9,
                                            true,
                                            true,
                                            new { Value = "ullam" },
                                        FieldValueType.UniqueIdentifier,
                                            new CodedValueDomain<string>()),
                                    new Field(default,
                                            "status",
                                            "adipisci",
                                            "provident dolorum cum ut",
                                            4,
                                            true,
                                            true,
                                            new { Value = "est" },
                                        FieldValueType.NameOrTitle,
                                            new CodedValueDomain<string>()),
                                    new Field(default,
                                            "token",
                                            "dignissimos",
                                            "autem eaque laudantium unde",
                                            8,
                                            true,
                                            true,
                                            new { Value = "pariatur" },
                                        FieldValueType.DateAndTime,
                                            new CodedValueDomain<string>())],
                                    GeometryType.Point,
                                    new Polyline([new MapPath([new MapPoint([722.7668,
                                                313.9671,
                                                488.3737]),
                                            new MapPoint([879.9943,
                                                219.3510,
                                                986.5317])]),
                                            new MapPath([new MapPoint([360.4282,
                                                    174.0152,
                                                    708.2967]),
                                                new MapPoint([214.9867,
                                                    691.3289])])],
                                        new SpatialReference(3,
                                                "inventore",
                                                "amet",
                                                "quibusdam"),
                                            true,
                                            true),
                                    new SpatialReference(2,
                                            "tenetur",
                                            "aut",
                                            "consectetur")),
                                    9,
                                [new RasterBandInfo(87.0488,
                                        932.9395,
                                        "group",
                                        902.9483,
                                        69.8982,
                                        296.9401,
                                        979.6997,
                                        844.3564)],
                                    [new ColormapPixel(18.4069,
                                        578.4348,
                                        73.6209,
                                        348.0509),
                                        new ColormapPixel(727.9226,
                                            251.8694,
                                            941.7075,
                                            805.2341),
                                        new ColormapPixel(61.4291,
                                            201.7306,
                                            22.7141,
                                            192.0721),
                                        new ColormapPixel(786.1906,
                                            476.7966,
                                            23.9431,
                                            271.9321)],
                                DataType.Elevation,
                                new Extent(11.6346,
                                        -169.1686,
                                        44.4003,
                                        -51.7377,
                                        146.1537,
                                        898.8260,
                                        31.2062,
                                        615.7739,
                                    new SpatialReference(5,
                                            "quos",
                                            "ut",
                                            "quia"),
                                        true,
                                        true),
                                    true,
                                    1,
                                    ["ex",
                                        "et",
                                        "sed"],
                                    "unde",
                                new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("optio veritatis reiciendis aspernatur",
                                        [new RasterMultidimensionalInfoVariablesDimensions("blanditiis est aspernatur sequi",
                                                [775.1713,
                                                    94.4475,
                                                    575.6023],
                                                true,
                                                291.0632,
                                                "et",
                                                "updatedAt",
                                                "facere",
                                                [944.8476,
                                                    328.1151])],
                                        [new RasterHistogram([460.5629,
                                                74.7247,
                                                122.9639,
                                                793.2308],
                                                [8,
                                                    8,
                                                    3],
                                                563.4986,
                                                121.8920,
                                                5),
                                        new RasterHistogram([749.1185,
                                                54.6872,
                                                870.8889],
                                                [9,
                                                    9,
                                                    3,
                                                    4],
                                                441.6498,
                                                457.8128,
                                                9),
                                        new RasterHistogram([556.3656,
                                                113.2299],
                                                [7,
                                                    5,
                                                    4,
                                                    8],
                                                985.7599,
                                                364.0570,
                                                9),
                                        new RasterHistogram([54.5827,
                                                574.0749,
                                                976.1865,
                                                222.4955],
                                                [1,
                                                    2],
                                                781.2007,
                                                45.2277,
                                                8)],
                                            "comment",
                                        [new RasterBandStatistics(652.4604,
                                                8,
                                                550.3603,
                                                416.1602,
                                                544.0473,
                                                927.4120,
                                                897.4036,
                                                119.2166),
                                        new RasterBandStatistics(702.0009,
                                                5,
                                                757.2078,
                                                943.5935,
                                                683.2268,
                                                659.1950,
                                                310.1859,
                                                994.2373),
                                        new RasterBandStatistics(284.9124,
                                                3,
                                                41.6602,
                                                308.0296,
                                                969.3916,
                                                506.0112,
                                                792.4311,
                                                481.3659),
                                        new RasterBandStatistics(84.2811,
                                                2,
                                                347.0634,
                                                570.8582,
                                                568.1594,
                                                741.2722,
                                                384.3562,
                                                958.8494)],
                                            "ab")]),
                                new RasterInfoPixelSize(172.2784,
                                        -7.8478),
                                PixelType.U1,
                                new RasterSensorInfo(new DateTime(2002, 6, 16, 21, 29, 47),
                                        255.4503,
                                        "group",
                                        340.8253,
                                        43.1828,
                                        "phone",
                                        336.3014,
                                        140.2747)),
                                ["et",
                                    "eaque",
                                    "expedita"],
                            [SupportedInterpolations.Cubic,
                            SupportedInterpolations.Majority,
                            SupportedInterpolations.Nearest,
                            SupportedInterpolations.Majority],
                                "consequatur similique asperiores",
                                true,
                            CoverageInfoVersion.One_1_2))"
                        Effect="@(new Effect("sed",
                            36882684.1753))"
                        FullExtent="@(new Extent(62.5894,
                                -20.4073,
                                -51.4989,
                                3.9955,
                                562.5960,
                                526.0950,
                                99.7241,
                                652.1215,
                            new SpatialReference(6,
                                    "et",
                                    "nulla",
                                    "eveniet"),
                                true,
                                true))"
                        Interpolation="@(Interpolation.Bilinear)"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(11697035.6828)"
                        MinScale="@(47235.9319)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        UseViewTime="@(true)"
                        Version="@("3.5.5.8")">
                        <TimeInterval 
                            Unit="@(TemporalTime.Seconds)"
                            Value="@(121.3904)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("et")"
                            EndField="@("est")"
                            Stops="@([new DateTime(2009, 10, 20, 14, 43, 21),
                                new DateTime(2011, 5, 8, 0, 55, 27)])"
                            TimeZone="@("Europe/Moscow")"
                            TrackIdField="@("voluptas")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Decades)"
                                Value="@(448.2998)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2009, 1, 13, 2, 33, 33))"
                                End="@(new DateTime(2006, 5, 20, 20, 46, 21))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2006, 4, 5, 3, 36, 30))"
                            End="@(new DateTime(2021, 3, 16, 13, 8, 50))">
                        </TimeExtent>
                        <Field 
                            Name="@("password")"
                            Alias="@("atque")"
                            Description="@("enim sed aut consequatur nisi dolores dolorem")"
                            Length="@(6)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "fuga" })"
                            ValueType="@(FieldValueType.Measurement)"
                            Domain="@(new CodedValueDomain<string>())">
                        </Field>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("quae aut minima")"
                            StringContent="@("ut")"
                            OutFields="@(["impedit",
                                "distinctio"])"
                            FieldInfos="@([new FieldInfo("group",
                                    "error",
                                    "nihil",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Max)])"
                            Content="@([new MediaPopupContent("corporis dolor non",
                                    "omnis reiciendis consequatur sed dolorum perspiciatis et",
                                [new BarChartMediaInfo("eius in dignissimos",
                                        "quia",
                                        "laudantium fuga quia",
                                    new ChartMediaInfoValue(["natus",
                                            "beatae",
                                            "eum"],
                                            "dolores",
                                            "commodi",
                                        [new ChartMediaInfoValueSeries("group",
                                                "est",
                                                376.3102)],
                                        [new MapColor(177, 54, 199),
                                        new MapColor(146, 122, 23)])),
                                new LineChartMediaInfo("voluptas esse sit",
                                        "facilis",
                                        "molestiae sequi doloribus",
                                    new ChartMediaInfoValue(["qui",
                                            "laborum"],
                                            "nobis",
                                            "aut",
                                        [new ChartMediaInfoValueSeries("id",
                                                "id",
                                                782.2307),
                                        new ChartMediaInfoValueSeries("name",
                                                "officiis",
                                                823.5650)],
                                        [new MapColor(86, 231, 100),
                                        new MapColor(107, 106, 92),
                                        new MapColor(181, 212, 146),
                                        new MapColor(200, 200, 216)])),
                                new LineChartMediaInfo("quod aliquid quam",
                                        "natus",
                                        "fugiat vel tempora",
                                    new ChartMediaInfoValue(["sint",
                                            "illum",
                                            "quis"],
                                            "consequatur",
                                            "doloribus",
                                        [new ChartMediaInfoValueSeries("group",
                                                "deserunt",
                                                596.9592)],
                                        [new MapColor(145, 44, 197),
                                        new MapColor(22, 133, 111),
                                        new MapColor(157, 197, 170)])),
                                new PieChartMediaInfo("atque qui aut",
                                        "nisi",
                                        "unde id sunt",
                                    new ChartMediaInfoValue(["facere",
                                            "natus"],
                                            "ut",
                                            "ea",
                                        [new ChartMediaInfoValueSeries("createdAt",
                                                "aut",
                                                978.7934),
                                        new ChartMediaInfoValueSeries("status",
                                                "voluptatem",
                                                116.0609),
                                        new ChartMediaInfoValueSeries("name",
                                                "inventore",
                                                301.4707)],
                                        [new MapColor(114, 210, 62),
                                        new MapColor(202, 130, 189),
                                        new MapColor(55, 86, 146)]))],
                                    6)])"
                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "comment",
                                    "velit ipsam et",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "category",
                                    "modi voluptatem laborum",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("at est consectetur",
                                    "https://picsum.photos/640/480/?image=167",
                                    "89b57501-ee42-b010-d09f-3f1180e901b7",
                                    () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                                    "status",
                                    true,
                                    true,
                                    true,
                                    "suscipit"),
                            new ActionButton("eligendi voluptas itaque",
                                    "https://picsum.photos/640/480/?image=856",
                                    "571ccabb-e528-eda2-9415-60bdfef57fad",
                                    () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                    "name",
                                    true,
                                    true,
                                    true,
                                    "qui")])">
                        </PopupTemplate>
                        <MultidimensionalSubset 
                            AreaOfInterest="@(new Extent(107.8497,
                                    173.8666,
                                    85.0867,
                                    84.2512,
                                    606.0805,
                                    468.9373,
                                    191.7392,
                                    464.9907,
                                new SpatialReference(8,
                                        "dolorem",
                                        "debitis",
                                        "quas"),
                                    true,
                                    true))">
                            <DimensionalDefinition 
                                DimensionName="@("avatar")"
                                IsSlice="@(true)"
                                VariableName="@("updatedAt")"
>
                            </DimensionalDefinition>
                        </MultidimensionalSubset>
                        <DimensionalDefinition 
                            DimensionName="@("phone")"
                            IsSlice="@(true)"
                            VariableName="@("password")"
>
                        </DimensionalDefinition>
                    </WCSLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(wCSLayer!);
        await AssertJavaScript("assertLayerExists", args: "wcs");
        var createPopupTemplateMethodResult = await wCSLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["qui",
                    "nihil",
                    "non"],
                    ["createdAt",
                        "comment",
                        "id"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var fetchPixelsMethodResult = await wCSLayer.FetchPixels(new Extent(174.4682,
                    -56.5296,
                    16.5254,
                    67.5011,
                    591.6279,
                    868.7146,
                    570.2534,
                    115.1016,
                new SpatialReference(8,
                        "aut",
                        "blanditiis",
                        "facere"),
                    true,
                    true),
                3,
                5,
            new ImageryTileMixinFetchPixelsOptions(Interpolation.Bilinear));
        Assert.IsNotNull(fetchPixelsMethodResult);
        var identifyMethodResult = await wCSLayer.Identify(new Point(-135.4875,
                    -28.7333,
                    -81.7327,
                    78.2205,
                    154.6538,
                new SpatialReference(4,
                        "mollitia",
                        "vero",
                        "voluptatem"),
                    true,
                    true,
                    563.0353),
            new RasterIdentifyOptions([new DimensionalDefinition("id",
                        true,
                        "comment")],
                    "phone"));
        Assert.IsNotNull(identifyMethodResult);
        IReadOnlyList<DimensionalDefinition> testMultidimensionalDefinition = [new DimensionalDefinition("createdAt",
                    true,
                    "updatedAt"),
            new DimensionalDefinition("id",
                    true,
                    "token"),
            new DimensionalDefinition("password",
                    true,
                    "phone")];
        await wCSLayer.SetMultidimensionalDefinition(testMultidimensionalDefinition);
        var multidimensionalDefinition = await wCSLayer.GetMultidimensionalDefinition();
        Assert.AreEqual(testMultidimensionalDefinition, multidimensionalDefinition);
        PortalItem testPortalItem = new PortalItem();
        await wCSLayer.SetPortalItem(testPortalItem);
        var portalItem = await wCSLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Normal;
        await wCSLayer.SetBlendMode(testBlendMode);
        var blendMode = await wCSLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        CoverageInfo testCoverageInfo = new CoverageInfo(["token",
                    "email",
                    "phone"],
                default,
                    "cum",
                    "et sit recusandae libero explicabo",
                new Extent(-7.4843,
                        56.2429,
                        -32.8289,
                        19.9752,
                        924.2002,
                        285.8896,
                        649.1960,
                        777.6880,
                    new SpatialReference(6,
                            "exercitationem",
                            "hic",
                            "quia"),
                        true,
                        true),
                new RasterInfo(new FeatureSet("phone",
                            true,
                        [new Graphic(new Point(75.5848,
                                    -34.2206,
                                    17.0225,
                                    -27.0264,
                                    613.5276,
                                new SpatialReference(1,
                                        "similique",
                                        "enim",
                                        "nihil"),
                                    true,
                                    true,
                                    699.2298),
                            new TextSymbol("in enim ullam",
                                new MapColor(239, 224, 94),
                                new MapColor(191, 88, 81),
                                    new Dimension(582.8020),
                                new MapFont(new Dimension(34.2115),
                                        "Helvetica",
                                    MapFontStyle.Normal,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    996.6758,
                                new MapColor(168, 218, 33),
                                new MapColor(183, 102, 40),
                                    433.0130,
                                HorizontalAlignment.Left,
                                    true,
                                    773.9902,
                                    new Dimension(456.4620),
                                    true),
                            new PopupTemplate("dolores ut nulla",
                                    "aut",
                                    ["voluptatem",
                                        "voluptas",
                                        "tenetur"],
                                [new FieldInfo("status",
                                        "minus",
                                        "sint",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new TextPopupContent("quo voluptas non"),
                                new MediaPopupContent("voluptate eum quo",
                                        "qui debitis vel excepturi veniam",
                                    [new BarChartMediaInfo("id ut accusamus",
                                            "voluptas",
                                            "ut aspernatur et",
                                        new ChartMediaInfoValue(["vel",
                                                "quas"],
                                                "voluptas",
                                                "aliquid",
                                            [new ChartMediaInfoValueSeries("phone",
                                                    "facere",
                                                    276.0071),
                                            new ChartMediaInfoValueSeries("password",
                                                    "non",
                                                    867.3183),
                                            new ChartMediaInfoValueSeries("title",
                                                    "ut",
                                                    808.9889),
                                            new ChartMediaInfoValueSeries("token",
                                                    "est",
                                                    447.8018)],
                                            [new MapColor(49, 171, 203),
                                            new MapColor(101, 152, 156),
                                            new MapColor(167, 37, 129)])),
                                    new LineChartMediaInfo("voluptatibus culpa iusto",
                                            "atque",
                                            "voluptas error nisi",
                                        new ChartMediaInfoValue(["omnis",
                                                "id",
                                                "omnis",
                                                "soluta"],
                                                "cum",
                                                "labore",
                                            [new ChartMediaInfoValueSeries("createdAt",
                                                    "ipsam",
                                                    421.2417),
                                            new ChartMediaInfoValueSeries("status",
                                                    "et",
                                                    530.9810),
                                            new ChartMediaInfoValueSeries("token",
                                                    "ipsa",
                                                    802.7617)],
                                            [new MapColor(110, 169, 177),
                                            new MapColor(143, 128, 242)])),
                                    new ColumnChartMediaInfo("voluptatem corrupti cumque",
                                            "dolor",
                                            "eveniet rerum eos",
                                        new ChartMediaInfoValue(["et",
                                                "optio",
                                                "et",
                                                "quod"],
                                                "eum",
                                                "unde",
                                            [new ChartMediaInfoValueSeries("avatar",
                                                    "doloremque",
                                                    847.5670)],
                                            [new MapColor(241, 54, 64),
                                            new MapColor(4, 36, 233),
                                            new MapColor(86, 130, 193),
                                            new MapColor(236, 229, 206)]))],
                                        5),
                                new TextPopupContent("voluptatem voluptatem ut")],
                                [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "title",
                                        "eum consequatur soluta",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Name;",
                                        "password",
                                        "doloremque provident et",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("accusantium dolorem voluptatum",
                                        "68865872-474a-b61f-870f-af91cdff13c6",
                                        () => { Console.WriteLine("cumque"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "avatar",
                                        "nemo"),
                                new ActionButton("tempore totam dolorem",
                                        "https://picsum.photos/640/480/?image=861",
                                        "8671bef8-be58-0da8-2787-7d05b0635d24",
                                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                        "name",
                                        true,
                                        true,
                                        true,
                                        "voluptates"),
                                new ActionButton("consequatur eaque vitae",
                                        "https://picsum.photos/640/480/?image=698",
                                        "5a6981b5-765d-dadc-b184-702158def76a",
                                        () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "aliquam"),
                                new ActionButton("laboriosam exercitationem eaque",
                                        "https://picsum.photos/640/480/?image=961",
                                        "f201323b-6a4b-b088-23fb-ddf6b74f01e1",
                                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                        "email",
                                        true,
                                        true,
                                        true,
                                        "dolor")]),
                                new AttributesDictionary(),
                                true,
                                "ut",
                                "itaque",
                                new GraphicOrigin(Guid.NewGuid(),
                                    "cum",
                                    2))],
                        [new Field(default,
                                "category",
                                "beatae",
                                "architecto deserunt eos sint",
                                3,
                                true,
                                true,
                                new { Value = "autem" },
                            FieldValueType.CountOrAmount,
                                new CodedValueDomain<string>()),
                        new Field(default,
                                "phone",
                                "ducimus",
                                "illum ipsam aut laudantium voluptatem unde recusandae",
                                3,
                                true,
                                true,
                                new { Value = "in" },
                            FieldValueType.Description,
                                new CodedValueDomain<string>()),
                        new Field(default,
                                "title",
                                "quis",
                                "voluptatum cumque deleniti illo et saepe repellendus",
                                7,
                                true,
                                true,
                                new { Value = "et" },
                            FieldValueType.TypeOrCategory,
                                new CodedValueDomain<string>())],
                        GeometryType.Polygon,
                        new Polyline([new MapPath([new MapPoint([953.1617,
                                    422.4641,
                                    196.9950]),
                                new MapPoint([751.2435,
                                    843.4177,
                                    250.6723])]),
                                new MapPath([new MapPoint([276.4120,
                                        574.3452,
                                        644.8816]),
                                    new MapPoint([308.2132,
                                        205.1779]),
                                    new MapPoint([661.6935,
                                        306.9932,
                                        594.4690])]),
                                new MapPath([new MapPoint([361.0029,
                                        891.5368,
                                        523.4333,
                                        405.6851]),
                                    new MapPoint([178.5962,
                                        117.2557]),
                                    new MapPoint([457.9335,
                                        970.9774,
                                        343.9640,
                                        973.2401])]),
                                new MapPath([new MapPoint([842.9501,
                                        656.6534]),
                                    new MapPoint([737.1764,
                                        548.2168]),
                                    new MapPoint([859.7458,
                                        813.1606,
                                        224.8470]),
                                    new MapPoint([418.6935,
                                        54.7888,
                                        443.3960,
                                        41.3636])])],
                            new SpatialReference(4,
                                    "delectus",
                                    "soluta",
                                    "neque"),
                                true,
                                true),
                        new SpatialReference(9,
                                "temporibus",
                                "beatae",
                                "iusto")),
                        3,
                    [new RasterBandInfo(220.9545,
                            321.7114,
                            "id",
                            577.3426,
                            950.3145,
                            43.3842,
                            918.8201,
                            911.7156),
                    new RasterBandInfo(278.2505,
                            531.0915,
                            "password",
                            513.7279,
                            760.4094,
                            745.2922,
                            85.9050,
                            579.4639),
                    new RasterBandInfo(427.5034,
                            132.5044,
                            "title",
                            286.4329,
                            551.8464,
                            120.6522,
                            651.5389,
                            212.3626),
                    new RasterBandInfo(252.3984,
                            515.1482,
                            "updatedAt",
                            490.2681,
                            902.4481,
                            228.1803,
                            933.5780,
                            750.9630)],
                        [new ColormapPixel(236.4341,
                            306.7351,
                            455.9626,
                            754.0342),
                            new ColormapPixel(446.5922,
                                763.1339,
                                548.6100,
                                105.2572),
                            new ColormapPixel(379.0337,
                                921.8766,
                                827.0399,
                                663.3992)],
                    DataType.Elevation,
                    new Extent(-135.5692,
                            -111.5944,
                            82.8043,
                            -40.6623,
                            89.5971,
                            43.7409,
                            103.0418,
                            81.6871,
                        new SpatialReference(9,
                                "amet",
                                "nostrum",
                                "debitis"),
                            true,
                            true),
                        true,
                        1,
                        ["non",
                            "aperiam",
                            "quisquam"],
                        "optio",
                    new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("autem quod et nobis distinctio dolorem",
                            [new RasterMultidimensionalInfoVariablesDimensions("voluptatem aut sint dicta sed aliquam",
                                    [392.3791,
                                        628.9229,
                                        418.3110],
                                    true,
                                    572.0725,
                                    "sunt",
                                    "id",
                                    "omnis",
                                    [420.5264,
                                        362.4883,
                                        547.6496,
                                        186.4217])],
                            [new RasterHistogram([860.2200,
                                    273.4176,
                                    176.9079,
                                    793.7335],
                                    [1,
                                        9],
                                    344.6917,
                                    693.7617,
                                    4),
                            new RasterHistogram([11.0048,
                                    61.0577,
                                    303.2183],
                                    [6,
                                        9,
                                        3],
                                    502.2691,
                                    657.9398,
                                    2)],
                                "email",
                            [new RasterBandStatistics(445.1986,
                                    4,
                                    723.4575,
                                    936.7974,
                                    140.5903,
                                    784.1069,
                                    283.2410,
                                    1.2170),
                            new RasterBandStatistics(825.1181,
                                    7,
                                    880.8520,
                                    62.3140,
                                    416.5448,
                                    86.1028,
                                    345.4150,
                                    33.5894),
                            new RasterBandStatistics(188.1500,
                                    1,
                                    140.3786,
                                    920.3203,
                                    403.6552,
                                    610.3783,
                                    3.8280,
                                    849.2660)],
                                "quia"),
                        new RasterMultidimensionalInfoVariables("quidem sit voluptas cum est facere",
                            [new RasterMultidimensionalInfoVariablesDimensions("molestiae quisquam qui error debitis",
                                    [516.0537,
                                        637.3203],
                                    true,
                                    716.8509,
                                    "reiciendis",
                                    "group",
                                    "ratione",
                                    [527.2036,
                                        740.1308,
                                        452.8550])],
                            [new RasterHistogram([963.1563,
                                    782.1100,
                                    125.7582],
                                    [8,
                                        8,
                                        5],
                                    162.6599,
                                    182.3798,
                                    9),
                            new RasterHistogram([937.0091,
                                    154.0638],
                                    [1,
                                        6,
                                        7,
                                        8],
                                    410.4809,
                                    111.2390,
                                    5),
                            new RasterHistogram([915.2653,
                                    448.9104,
                                    839.5696,
                                    919.1230],
                                    [8,
                                        8,
                                        6,
                                        8],
                                    7.7073,
                                    135.8825,
                                    4)],
                                "title",
                            [new RasterBandStatistics(937.2246,
                                    4,
                                    929.9920,
                                    368.3861,
                                    880.7979,
                                    589.2700,
                                    646.7224,
                                    927.4365),
                            new RasterBandStatistics(965.7459,
                                    2,
                                    32.1047,
                                    553.5217,
                                    721.5476,
                                    380.4002,
                                    660.9396,
                                    269.1973)],
                                "sunt")]),
                    new RasterInfoPixelSize(-143.8212,
                            -41.9146),
                    PixelType.U4,
                    new RasterSensorInfo(new DateTime(2001, 8, 4, 18, 9, 37),
                            18.4436,
                            "status",
                            304.7195,
                            722.8690,
                            "email",
                            301.1951,
                            188.3465)),
                    ["aut",
                        "beatae",
                        "quia"],
                [SupportedInterpolations.Bilinear],
                    "voluptas dicta unde",
                    true,
                CoverageInfoVersion.One_1_1);
        await wCSLayer.SetCoverageInfo(testCoverageInfo);
        var coverageInfo = await wCSLayer.GetCoverageInfo();
        Assert.AreEqual(testCoverageInfo, coverageInfo);
        Extent testFullExtent = new Extent(83.7040,
                    -136.4565,
                    -76.9120,
                    47.4235,
                    870.7640,
                    657.9146,
                    177.8853,
                    507.5403,
                new SpatialReference(6,
                        "ut",
                        "minus",
                        "sed"),
                    true,
                    true);
        await wCSLayer.SetFullExtent(testFullExtent);
        var fullExtent = await wCSLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        Interpolation testInterpolation = Interpolation.Majority;
        await wCSLayer.SetInterpolation(testInterpolation);
        var interpolation = await wCSLayer.GetInterpolation();
        Assert.AreEqual(testInterpolation, interpolation);
        ListMode testListMode = ListMode.Show;
        await wCSLayer.SetListMode(testListMode);
        var listMode = await wCSLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        MultidimensionalSubset testMultidimensionalSubset = new MultidimensionalSubset(new Extent(-119.1926,
                        56.4532,
                        4.5898,
                        -88.7163,
                        189.4153,
                        375.6126,
                        857.1107,
                        53.2566,
                    new SpatialReference(8,
                            "tempore",
                            "et",
                            "aut"),
                        true,
                        true),
                [new DimensionalDefinition("createdAt",
                        true,
                        "comment"),
                new DimensionalDefinition("id",
                        true,
                        "email"),
                new DimensionalDefinition("token",
                        true,
                        "status"),
                new DimensionalDefinition("createdAt",
                        true,
                        "password")]);
        await wCSLayer.SetMultidimensionalSubset(testMultidimensionalSubset);
        var multidimensionalSubset = await wCSLayer.GetMultidimensionalSubset();
        Assert.AreEqual(testMultidimensionalSubset, multidimensionalSubset);
        PopupTemplate testPopupTemplate = new PopupTemplate("sequi non est",
                    "atque",
                    ["quos",
                        "assumenda",
                        "qui"],
                [new FieldInfo("token",
                        "voluptates",
                        "totam",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(1,
                            true,
                        DateFormat.ShortDateLongTime24),
                        true,
                        true,
                    StatisticType.Count),
                new FieldInfo("id",
                        "corrupti",
                        "aperiam",
                    StringFieldOption.RichText,
                    new FieldInfoFormat(5,
                            true,
                        DateFormat.LongMonthDayYear),
                        true,
                        true,
                    StatisticType.Stddev)],
                [new TextPopupContent("iste sunt explicabo")],
                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                        "updatedAt",
                        "earum asperiores possimus",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "phone",
                        "quaerat non vel",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                [new ActionToggle("dolorum quia doloremque",
                        "74ea61f6-5572-f126-31dc-5be43f3e7063",
                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "group",
                        "optio"),
                new ActionToggle("deserunt sunt ut",
                        "7cffb03a-e584-ec0c-19ba-e5d85bcf075d",
                        () => { Console.WriteLine("modi"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "category",
                        "quo"),
                new ActionButton("veritatis maiores nam",
                        "https://picsum.photos/640/480/?image=157",
                        "c8971418-8a16-c05b-baa0-9e6de679ab11",
                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                        "token",
                        true,
                        true,
                        true,
                        "consequuntur"),
                new ActionToggle("cupiditate quia rerum",
                        "13435fe3-e891-1749-cd7b-ce57235bc029",
                        () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                        true,
                        true,
                        true,
                        true,
                        "group",
                        "et")]);
        await wCSLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await wCSLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        IReadOnlyList<Field> testRasterFields = [new Field(default,
                    "updatedAt",
                    "debitis",
                    "ea vitae eaque quod",
                    9,
                    true,
                    true,
                    new { Value = "cumque" },
                FieldValueType.None,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "email",
                    "nobis",
                    "modi accusamus laboriosam quidem debitis",
                    1,
                    true,
                    true,
                    new { Value = "est" },
                FieldValueType.PercentageOrRatio,
                    new CodedValueDomain<string>()),
            new Field(default,
                    "password",
                    "rerum",
                    "autem ab eligendi animi non accusamus numquam",
                    5,
                    true,
                    true,
                    new { Value = "illo" },
                FieldValueType.Coordinate,
                    new CodedValueDomain<string>())];
        await wCSLayer.SetRasterFields(testRasterFields);
        var rasterFields = await wCSLayer.GetRasterFields();
        Assert.AreEqual(testRasterFields, rasterFields);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2020, 2, 21, 3, 14, 14),
                    new DateTime(2018, 5, 13, 18, 31, 2));
        await wCSLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await wCSLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("cumque",
                    "nihil",
                new TimeExtent(new DateTime(2013, 1, 10, 12, 6, 37),
                        new DateTime(2009, 8, 21, 5, 35, 34)),
                new TimeInterval(TemporalTime.Minutes,
                        177.2893),
                    [new DateTime(2000, 7, 5, 0, 56, 26),
                        new DateTime(2006, 7, 14, 0, 35, 48),
                        new DateTime(2014, 4, 11, 20, 37, 4),
                        new DateTime(2000, 8, 13, 10, 49, 40)],
                    "Asia/Vladivostok",
                    "omnis");
        await wCSLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await wCSLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Decades,
                    295.4735);
        await wCSLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await wCSLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2002, 3, 6, 21, 12, 14),
                    new DateTime(2017, 3, 16, 1, 48, 35));
        await wCSLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await wCSLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
