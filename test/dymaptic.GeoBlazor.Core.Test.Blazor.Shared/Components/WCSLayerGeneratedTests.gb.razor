@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedWCSLayer(Action renderHandler)
    {
        WCSLayer? wCSLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <WCSLayer 
                        Url="@("https://landsat2.arcgis.com/arcgis/rest/services/Landsat/MS/ImageServer")"
                        Renderer="@(new RasterStretchRenderer(new AlgorithmicColorRamp(Algorithm.LabLch,
                                new MapColor(21, 9, 54),
                                new MapColor(182, 152, 119)),
                            true,
                            true,
                            [8,
                            5],
                            4,
                            6,
                            StretchType.StandardDeviation,
                            [new RasterBandStatistics(409.2688,
                                4,
                                815.6011,
                                859.8938,
                                305.5894,
                                772.4032,
                                289.6289,
                                59.7682)],
                            true,
                            1))"
                        Opacity="@(0.2378)"
                        Title="@("modi molestiae ad")"
                        BandIds="@([7,
                            5])"
                        BlendMode="@(BlendMode.Darken)"
                        Copyright="@("est")"
                        CoverageId="@("non")"
                        CoverageInfo="@(new CoverageInfo(["createdAt"],
                            new CoverageDescriptionV100("ratione aut sint",
                                new CoverageDescriptionV100DomainSet(new CoverageDescriptionV100DomainSetSpatialDomain(47.8491,
                                        new Extent(-40.2797,
                                                -68.7045,
                                                2.9719,
                                                -62.0492,
                                                723.1915,
                                                236.0934,
                                                805.2139,
                                                265.1827,
                                            new SpatialReference(7,
                                                    "eius",
                                                    "nobis",
                                                    "ut"),
                                                true,
                                                true),
                                        new CoverageDescriptionV100DomainSetSpatialDomainOffset(126.3198,
                                                "consequatur"),
                                        new CoverageDescriptionV100DomainSetSpatialDomainOrigin(-8.8531,
                                                "et"),
                                            356.8372),
                                    new TemporalDomain(new DateTime(2013, 11, 24, 14, 37, 6),
                                            new DateTime(2021, 9, 26, 15, 58, 55),
                                            78.0808,
                                            "ea",
                                            [new DateTime(2010, 5, 25, 8, 51, 27),
                                                new DateTime(2008, 9, 4, 6, 55, 7)])),
                                    "quia",
                                new Extent(-71.9855,
                                        -95.3878,
                                        76.2933,
                                        35.7905,
                                        696.2073,
                                        451.6584,
                                        831.2111,
                                        361.8050,
                                    new SpatialReference(5,
                                            "dolores",
                                            "dignissimos",
                                            "aut"),
                                        true,
                                        true),
                                    "status",
                                [new CoverageDescriptionV100RangeSet([new CoverageDescriptionV100RangeSetAxis("consequatur",
                                            "createdAt",
                                            ["qui",
                                                "non"])],
                                        "at",
                                        "status",
                                        [836.2375,
                                            196.3068]),
                                new CoverageDescriptionV100RangeSet([new CoverageDescriptionV100RangeSetAxis("dolor",
                                            "token",
                                            ["dolores",
                                                "illum"]),
                                    new CoverageDescriptionV100RangeSetAxis("minus",
                                            "createdAt",
                                            ["totam",
                                                "voluptatem"])],
                                        "voluptatibus",
                                        "createdAt",
                                        [843.7060,
                                            105.5804])],
                                new CoverageDescriptionV100SupportedCRSs(["dolor",
                                        "recusandae"],
                                        ["impedit",
                                            "et"]),
                                    ["quae"],
                                    ["voluptatem",
                                        "sint"],
                                    "9.4.6.5"),
                                "inventore",
                                "sed quidem corrupti",
                            new Extent(-125.4747,
                                    34.1893,
                                    6.5943,
                                    -11.9246,
                                    826.0804,
                                    156.0441,
                                    468.8337,
                                    983.2538,
                                new SpatialReference(6,
                                        "tempora",
                                        "harum",
                                        "harum"),
                                    true,
                                    true),
                            new RasterInfo(new FeatureSet("password",
                                        true,
                                    [new Graphic(new Polyline([new MapPath([new MapPoint([835.7607])]),
                                                new MapPath([new MapPoint([91.9825])])],
                                            new SpatialReference(6,
                                                    "recusandae",
                                                    "fugit",
                                                    "amet"),
                                                true,
                                                true),
                                        new TextSymbol("et dicta voluptatem",
                                            new MapColor(123, 113, 24),
                                            new MapColor(145, 1, 112),
                                                new Dimension(649.6034),
                                            new MapFont(new Dimension(403.0065),
                                                    "Georgia",
                                                MapFontStyle.Oblique,
                                                FontWeight.Normal,
                                                TextDecoration.LineThrough),
                                                486.3789,
                                            new MapColor(59, 176, 40),
                                            new MapColor(229, 234, 115),
                                                33.0693,
                                            HorizontalAlignment.Left,
                                                true,
                                                765.7105,
                                                new Dimension(276.7635),
                                                true),
                                        new PopupTemplate("eum aperiam autem",
                                                "quos",
                                                ["recusandae"],
                                            [new FieldInfo("phone",
                                                    "ab",
                                                    "beatae",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.LongMonthDayYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("avatar",
                                                    "veritatis",
                                                    "magni",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min)],
                                            [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                        "dolor",
                                                        "impedit minus voluptas")),
                                            new MediaPopupContent("nobis dolorem aut",
                                                    "cupiditate eos quo",
                                                [new ImageMediaInfo("dolorem ipsam optio",
                                                        "perspiciatis",
                                                        "dolor et libero",
                                                    new ImageMediaInfoValue(),
                                                        39.8404)],
                                                    8)],
                                            [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "phone",
                                                    "explicabo quibusdam et",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Name;",
                                                    "comment",
                                                    "accusamus corporis ab",
                                                    ExpressionInfoReturnType.String)],
                                                true,
                                                true,
                                                [new ActionButton("laudantium in voluptas",
                                                    "https://picsum.photos/640/480/?image=230",
                                                    "f9e3ed90-e099-5aea-a271-354bb60d3eee",
                                                    () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                                                    "password",
                                                    true,
                                                    true,
                                                    true,
                                                    "pariatur"),
                                                    new ActionButton("odit quia voluptas",
                                                        "https://picsum.photos/640/480/?image=886",
                                                        "df690f50-81e5-f192-ce4c-e5a4cedabce7",
                                                        () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                                                        "phone",
                                                        true,
                                                        true,
                                                        true,
                                                        "hic")]),
                                            new AttributesDictionary(),
                                            true,
                                            "dignissimos",
                                            "est",
                                            new GraphicOrigin(Guid.NewGuid(),
                                                "doloribus",
                                                1)),
                                    new Graphic(new Polygon([new MapPath([new MapPoint([62.9738])])],
                                            new SpatialReference(2,
                                                    "dolor",
                                                    "doloremque",
                                                    "in"),
                                            new Point(-151.2349,
                                                    71.7630,
                                                    104.2470,
                                                    18.8875,
                                                    9.6167,
                                                new SpatialReference(7,
                                                        "quia",
                                                        "aut",
                                                        "necessitatibus"),
                                                    true,
                                                    true,
                                                    824.4772),
                                                true,
                                                true,
                                                true),
                                        new TextSymbol("molestiae nam sapiente",
                                            new MapColor(15, 100, 158),
                                            new MapColor(64, 154, 53),
                                                new Dimension(961.4591),
                                            new MapFont(new Dimension(155.9586),
                                                    "Courier New",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bold,
                                                TextDecoration.LineThrough),
                                                229.2863,
                                            new MapColor(250, 253, 192),
                                            new MapColor(119, 39, 188),
                                                370.7220,
                                            HorizontalAlignment.Center,
                                                true,
                                                538.8928,
                                                new Dimension(779.0052),
                                                true),
                                        new PopupTemplate("maiores et id",
                                                "labore",
                                                ["voluptatem",
                                                    "quidem"],
                                            [new FieldInfo("comment",
                                                    "non",
                                                    "dolores",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongMonthDayYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("category",
                                                    "sint",
                                                    "quia",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                            [new RelationshipPopupContent("et quia ab",
                                                    "voluptas dolor perspiciatis",
                                                    3,
                                                    "atque",
                                                [new RelatedRecordsInfoFieldOrder("quidem",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("labore",
                                                    OrderBy.Desc)],
                                                    6)],
                                            [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "avatar",
                                                    "perferendis non quo",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "status",
                                                    "necessitatibus sed voluptatem",
                                                    ExpressionInfoReturnType.String)],
                                                true,
                                                true,
                                                [new ActionButton("inventore illo ratione",
                                                    "https://picsum.photos/640/480/?image=332",
                                                    "27144415-cf7b-fc38-28a4-5abc0a7b244c",
                                                    () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                                    "id",
                                                    true,
                                                    true,
                                                    true,
                                                    "voluptatem"),
                                                    new ActionButton("deserunt sapiente rerum",
                                                        "https://picsum.photos/640/480/?image=564",
                                                        "28d4dc88-b078-da04-addc-67359063bba7",
                                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                        "avatar",
                                                        true,
                                                        true,
                                                        true,
                                                        "velit")]),
                                            new AttributesDictionary(),
                                            true,
                                            "ipsam",
                                            "quia",
                                            new GraphicOrigin(Guid.NewGuid(),
                                                "recusandae",
                                                7))],
                                    [new Field(default,
                                            "status",
                                            "earum",
                                            "officia modi numquam",
                                            4,
                                            true,
                                            true,
                                            new { Value = "ducimus" },
                                        FieldValueType.CountOrAmount,
                                            new CodedValueDomain<string>()),
                                    new Field(default,
                                            "password",
                                            "et",
                                            "sunt nisi dolores omnis",
                                            1,
                                            true,
                                            true,
                                            new { Value = "ea" },
                                        FieldValueType.None,
                                            new CodedValueDomain<string>())],
                                    GeometryType.Polygon,
                                    new Polygon([new MapPath([new MapPoint([786.0842]),
                                            new MapPoint([56.7360])])],
                                        new SpatialReference(1,
                                                "id",
                                                "qui",
                                                "et"),
                                        new Point(-79.2669,
                                                62.9830,
                                                102.0066,
                                                -27.3499,
                                                955.4746,
                                            new SpatialReference(4,
                                                    "unde",
                                                    "sed",
                                                    "quo"),
                                                true,
                                                true,
                                                901.1389),
                                            true,
                                            true,
                                            true),
                                    new SpatialReference(9,
                                            "ea",
                                            "possimus",
                                            "facere")),
                                    9,
                                [new RasterBandInfo(546.7588,
                                        634.9320,
                                        "email",
                                        982.2587,
                                        541.9163,
                                        216.3320,
                                        831.2490,
                                        370.5453)],
                                    [new ColormapPixel(579.3815,
                                        501.0348,
                                        213.5207,
                                        758.4644),
                                        new ColormapPixel(889.9132,
                                            584.6464,
                                            958.5008,
                                            401.0752)],
                                DataType.Scientific,
                                new Extent(96.4974,
                                        25.8921,
                                        -41.9598,
                                        -60.2572,
                                        668.0664,
                                        459.5277,
                                        898.2745,
                                        884.1654,
                                    new SpatialReference(1,
                                            "aut",
                                            "placeat",
                                            "aspernatur"),
                                        true,
                                        true),
                                    true,
                                    8,
                                    ["labore"],
                                    "quia",
                                new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("et numquam et",
                                        [new RasterMultidimensionalInfoVariablesDimensions("reprehenderit eum",
                                                [432.9931],
                                                true,
                                                965.6110,
                                                "expedita",
                                                "email",
                                                "ab",
                                                [938.0523,
                                                    754.1848]),
                                        new RasterMultidimensionalInfoVariablesDimensions("sed vel saepe eum",
                                                [919.1149,
                                                    546.3180],
                                                true,
                                                956.7418,
                                                "aspernatur",
                                                "group",
                                                "temporibus",
                                                [686.6652])],
                                        [new RasterHistogram([440.0804,
                                                876.0226],
                                                [1],
                                                278.3495,
                                                711.3158,
                                                9),
                                        new RasterHistogram([91.2816,
                                                855.2005],
                                                [5],
                                                452.7497,
                                                462.3549,
                                                4)],
                                            "avatar",
                                        [new RasterBandStatistics(902.8890,
                                                3,
                                                879.3067,
                                                730.6672,
                                                487.2604,
                                                588.7544,
                                                365.7693,
                                                364.9233),
                                        new RasterBandStatistics(933.0041,
                                                4,
                                                792.6910,
                                                635.2813,
                                                531.3702,
                                                941.4901,
                                                479.2622,
                                                402.5763)],
                                            "libero"),
                                    new RasterMultidimensionalInfoVariables("suscipit corporis iste rerum",
                                        [new RasterMultidimensionalInfoVariablesDimensions("quis explicabo",
                                                [719.3901,
                                                    487.1055],
                                                true,
                                                488.7788,
                                                "eius",
                                                "createdAt",
                                                "non",
                                                [421.7907,
                                                    641.2419]),
                                        new RasterMultidimensionalInfoVariablesDimensions("ut sit assumenda perspiciatis",
                                                [420.8124,
                                                    656.0021],
                                                true,
                                                691.5227,
                                                "eum",
                                                "comment",
                                                "dicta",
                                                [725.2771,
                                                    925.0439])],
                                        [new RasterHistogram([668.2294,
                                                125.7425],
                                                [5,
                                                    4],
                                                536.1019,
                                                372.7276,
                                                3)],
                                            "email",
                                        [new RasterBandStatistics(180.6336,
                                                8,
                                                897.2275,
                                                779.9484,
                                                633.9059,
                                                221.8971,
                                                671.5872,
                                                569.0288)],
                                            "id")]),
                                new RasterInfoPixelSize(-30.6248,
                                        3.5640),
                                PixelType.Unknown,
                                new RasterSensorInfo(new DateTime(2020, 6, 4, 17, 13, 43),
                                        914.1368,
                                        "name",
                                        241.3031,
                                        937.7839,
                                        "name",
                                        483.9314,
                                        744.7376)),
                                ["officia",
                                    "fugiat"],
                            [SupportedInterpolations.Cubic,
                            SupportedInterpolations.Bilinear],
                                "laudantium eum reiciendis",
                                true,
                            CoverageInfoVersion.One_0_0))"
                        Effect="@(new Effect("natus",
                            6162689.8432))"
                        Interpolation="@(Interpolation.Bilinear)"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(19757645.1289)"
                        MinScale="@(35990.3681)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        UseViewTime="@(true)"
                        Version="@("2.3.4.6")">
                        <TimeInterval 
                            Unit="@(TemporalTime.Hours)"
                            Value="@(48.0321)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("placeat")"
                            EndField="@("minima")"
                            Stops="@([new DateTime(2022, 11, 7, 17, 45, 14),
                                new DateTime(2018, 8, 13, 21, 2, 20)])"
                            TimeZone="@("America/Mexico_City")"
                            TrackIdField="@("aut")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Years)"
                                Value="@(130.9094)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2008, 10, 21, 16, 7, 20))"
                                End="@(new DateTime(2023, 10, 23, 9, 15, 35))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2017, 11, 27, 18, 52, 54))"
                            End="@(new DateTime(2010, 1, 9, 7, 43, 57))">
                        </TimeExtent>
                        <Field 
                            Name="@("avatar")"
                            Alias="@("sapiente")"
                            Description="@("adipisci vitae")"
                            Length="@(5)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "quae" })"
                            ValueType="@(FieldValueType.Coordinate)"
                            Domain="@(new CodedValueDomain<string>())">
                        </Field>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("vel omnis natus")"
                            StringContent="@("tempora")"
                            OutFields="@(["autem"])"
                            FieldInfos="@([new FieldInfo("title",
                                    "qui",
                                    "facilis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(9,
                                        true,
                                    DateFormat.ShortDateLe),
                                    true,
                                    true,
                                StatisticType.Min)])"
                            Content="@([new MediaPopupContent("autem excepturi aspernatur",
                                    "aut quia molestiae",
                                [new LineChartMediaInfo("mollitia quam repudiandae",
                                        "dolorem",
                                        "maiores a eos",
                                    new ChartMediaInfoValue(["non"],
                                            "at",
                                            "ipsa",
                                        [new ChartMediaInfoValueSeries("comment",
                                                "totam",
                                                690.0031),
                                        new ChartMediaInfoValueSeries("comment",
                                                "quidem",
                                                794.4669)],
                                        [new MapColor(222, 142, 253),
                                        new MapColor(235, 153, 189)])),
                                new LineChartMediaInfo("quidem beatae fugit",
                                        "voluptas",
                                        "qui similique doloribus",
                                    new ChartMediaInfoValue(["beatae",
                                            "quis"],
                                            "sed",
                                            "incidunt",
                                        [new ChartMediaInfoValueSeries("comment",
                                                "dolor",
                                                538.9174),
                                        new ChartMediaInfoValueSeries("email",
                                                "et",
                                                353.3434)],
                                        [new MapColor(178, 240, 30),
                                        new MapColor(233, 104, 215)]))],
                                    7),
                            new FieldsPopupContent([new FieldInfo("status",
                                        "aspernatur",
                                        "nulla",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("title",
                                        "autem",
                                        "voluptas",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                    "sed consequuntur optio",
                                    "et delectus omnis")])"
                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "category",
                                    "ducimus ab maxime",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("aut veritatis voluptatum",
                                "https://picsum.photos/640/480/?image=489",
                                "10761b94-96b2-09c2-99e3-d1b818e5de71",
                                () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "eos"),
                                new ActionButton("odio alias natus",
                                    "https://picsum.photos/640/480/?image=24",
                                    "903ebaa2-1d56-a19c-1ee6-7fbbce3f9b00",
                                    () => { Console.WriteLine("delectus"); return Task.CompletedTask; },
                                    "group",
                                    true,
                                    true,
                                    true,
                                    "ut")])">
                        </PopupTemplate>
                        <MultidimensionalSubset 
                            AreaOfInterest="@(new Polyline([new MapPath([new MapPoint([694.0109,
                                        421.5687]),
                                    new MapPoint([864.4583,
                                        914.5487])])],
                                new SpatialReference(3,
                                        "dicta",
                                        "temporibus",
                                        "eos"),
                                    true,
                                    true))">
                            <DimensionalDefinition 
                                DimensionName="@("password")"
                                IsSlice="@(true)"
                                VariableName="@("createdAt")"
>
                            </DimensionalDefinition>
                        </MultidimensionalSubset>
                        <DimensionalDefinition 
                            DimensionName="@("id")"
                            IsSlice="@(true)"
                            VariableName="@("id")"
>
                        </DimensionalDefinition>
                        <Extent 
                            Xmax="@(-107.0799)"
                            Xmin="@(-86.3004)"
                            Ymax="@(-32.8352)"
                            Ymin="@(-72.8210)"
                            Zmax="@(514.0356)"
                            Zmin="@(990.2999)"
                            Mmax="@(410.8835)"
                            Mmin="@(449.1954)"
                            SpatialReference="@(new SpatialReference(1,
                                    "nostrum",
                                    "qui",
                                    "qui"))"
                            HasM="@(true)"
                            HasZ="@(true)">
                        </Extent>
                    </WCSLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(wCSLayer!);
        await AssertJavaScript("assertLayerExists", args: "wcs");
        var createPopupTemplateMethodResult = await wCSLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["qui"],
                    ["createdAt",
                        "avatar"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var fetchPixelsMethodResult = await wCSLayer.FetchPixels(new Extent(47.2142,
                    -176.7689,
                    -42.8176,
                    -71.4273,
                    932.5342,
                    559.1447,
                    42.3470,
                    572.2342,
                new SpatialReference(3,
                        "corporis",
                        "voluptas",
                        "id"),
                    true,
                    true),
                7,
                9,
            new ImageryTileMixinFetchPixelsOptions(Interpolation.Cubic));
        Assert.IsNotNull(fetchPixelsMethodResult);
        var identifyMethodResult = await wCSLayer.Identify(new Point(43.7583,
                    78.7606,
                    82.7804,
                    -44.9342,
                    602.5588,
                new SpatialReference(2,
                        "repudiandae",
                        "facere",
                        "quidem"),
                    true,
                    true,
                    520.6698),
            new RasterIdentifyOptions([new DimensionalDefinition("category",
                        true,
                        "createdAt")],
                    "category"));
        Assert.IsNotNull(identifyMethodResult);
        IReadOnlyList<DimensionalDefinition> testMultidimensionalDefinition = [new DimensionalDefinition("avatar",
                    true,
                    "token"),
            new DimensionalDefinition("name",
                    true,
                    "token")];
        await wCSLayer.SetMultidimensionalDefinition(testMultidimensionalDefinition);
        var multidimensionalDefinition = await wCSLayer.GetMultidimensionalDefinition();
        Assert.AreEqual(testMultidimensionalDefinition, multidimensionalDefinition);
        PortalItem testPortalItem = new PortalItem();
        await wCSLayer.SetPortalItem(testPortalItem);
        var portalItem = await wCSLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.ColorDodge;
        await wCSLayer.SetBlendMode(testBlendMode);
        var blendMode = await wCSLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        CoverageInfo testCoverageInfo = new CoverageInfo(["createdAt",
                    "email"],
                new CoverageDescriptionV100("sit consequuntur adipisci eum",
                    new CoverageDescriptionV100DomainSet(new CoverageDescriptionV100DomainSetSpatialDomain(944.9952,
                            new Extent(-35.7423,
                                    9.6137,
                                    78.5893,
                                    -11.2942,
                                    101.3199,
                                    648.7514,
                                    717.8372,
                                    523.4963,
                                new SpatialReference(1,
                                        "inventore",
                                        "ut",
                                        "ad"),
                                    true,
                                    true),
                            new CoverageDescriptionV100DomainSetSpatialDomainOffset(-74.7706,
                                    "aut"),
                            new CoverageDescriptionV100DomainSetSpatialDomainOrigin(127.2230,
                                    "maxime"),
                                538.0345),
                        new TemporalDomain(new DateTime(2020, 2, 10, 8, 50, 38),
                                new DateTime(2020, 5, 15, 3, 0, 2),
                                94.7131,
                                "a",
                                [new DateTime(2007, 5, 9, 4, 30, 14)])),
                        "qui",
                    new Extent(88.0514,
                            91.4947,
                            27.1347,
                            -26.4824,
                            978.2871,
                            980.1713,
                            771.6473,
                            62.6282,
                        new SpatialReference(1,
                                "vel",
                                "magni",
                                "sint"),
                            true,
                            true),
                        "category",
                    [new CoverageDescriptionV100RangeSet([new CoverageDescriptionV100RangeSetAxis("ducimus",
                                "group",
                                ["est",
                                    "tenetur"]),
                        new CoverageDescriptionV100RangeSetAxis("et",
                                "category",
                                ["et",
                                    "ea"])],
                            "adipisci",
                            "comment",
                            [786.9610,
                                909.6425])],
                    new CoverageDescriptionV100SupportedCRSs(["accusamus"],
                            ["harum"]),
                        ["totam"],
                        ["numquam"],
                        "9.6.5.6"),
                    "voluptatum",
                    "repellendus nobis ullam",
                new Extent(-34.7009,
                        -7.8092,
                        47.7682,
                        11.2695,
                        476.0018,
                        332.1588,
                        921.1826,
                        301.3043,
                    new SpatialReference(9,
                            "repellat",
                            "aliquid",
                            "possimus"),
                        true,
                        true),
                new RasterInfo(new FeatureSet("email",
                            true,
                        [new Graphic(new Extent(145.4569,
                                    -165.4397,
                                    35.0601,
                                    -73.2862,
                                    869.8074,
                                    992.9689,
                                    78.0941,
                                    10.1788,
                                new SpatialReference(6,
                                        "est",
                                        "dolore",
                                        "est"),
                                    true,
                                    true),
                            new TextSymbol("doloribus reprehenderit et",
                                new MapColor(246, 78, 216),
                                new MapColor(40, 37, 187),
                                    new Dimension(335.2760),
                                new MapFont(new Dimension(734.5387),
                                        "Times New Roman",
                                    MapFontStyle.Italic,
                                    FontWeight.Lighter,
                                    TextDecoration.None),
                                    652.5951,
                                new MapColor(158, 50, 104),
                                new MapColor(176, 36, 167),
                                    62.5252,
                                HorizontalAlignment.Right,
                                    true,
                                    214.7854,
                                    new Dimension(290.0748),
                                    true),
                            new PopupTemplate("est aperiam sint",
                                    "aut",
                                    ["qui"],
                                [new FieldInfo("status",
                                        "adipisci",
                                        "provident",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                            "dolorum",
                                            "error qui omnis"))],
                                [new ExpressionInfo("return Date();",
                                        "phone",
                                        "praesentium minus in",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return Date();",
                                        "status",
                                        "architecto consectetur omnis",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("nihil rerum quibusdam",
                                        "https://picsum.photos/640/480/?image=956",
                                        "4a93178c-c4a4-45b5-8719-12c2b123c24b",
                                        () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "quos"),
                                        new ActionButton("dolor dolorem accusamus",
                                            "https://picsum.photos/640/480/?image=274",
                                            "fa00779c-96e6-04df-0f9f-f555cbc481ed",
                                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "ex")]),
                                new AttributesDictionary(),
                                true,
                                "commodi",
                                "sint",
                                new GraphicOrigin(Guid.NewGuid(),
                                    "aut",
                                    8)),
                        new Graphic(new Point(-46.6928,
                                    -24.2380,
                                    99.5117,
                                    -68.2288,
                                    62.8389,
                                new SpatialReference(5,
                                        "maxime",
                                        "quibusdam",
                                        "qui"),
                                    true,
                                    true,
                                    106.4260),
                            new TextSymbol("accusantium sequi rem",
                                new MapColor(146, 100, 164),
                                new MapColor(225, 193, 86),
                                    new Dimension(591.0696),
                                new MapFont(new Dimension(440.6930),
                                        "Georgia",
                                    MapFontStyle.Italic,
                                    FontWeight.Bolder,
                                    TextDecoration.LineThrough),
                                    316.2576,
                                new MapColor(114, 166, 115),
                                new MapColor(246, 83, 245),
                                    646.7218,
                                HorizontalAlignment.Center,
                                    true,
                                    187.7839,
                                    new Dimension(117.8455),
                                    true),
                            new PopupTemplate("libero nisi est",
                                    "ut",
                                    ["excepturi"],
                                [new FieldInfo("group",
                                        "sit",
                                        "omnis",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                [new AttachmentsPopupContent("perferendis nisi sint",
                                        "maxime consectetur accusamus velit",
                                        AttachmentsPopupContentDisplayType.Auto),
                                new FieldsPopupContent([new FieldInfo("email",
                                            "atque",
                                            "quam",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                        "doloribus sed",
                                        "et porro architecto")],
                                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "phone",
                                        "deleniti vero voluptatibus",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("aut ut nesciunt",
                                        "https://picsum.photos/640/480/?image=1059",
                                        "e4c88ea2-d212-4c64-fd06-b4f73d434d27",
                                        () => { Console.WriteLine("neque"); return Task.CompletedTask; },
                                        "title",
                                        true,
                                        true,
                                        true,
                                        "accusamus"),
                                        new ActionButton("quam voluptatum perspiciatis",
                                            "https://picsum.photos/640/480/?image=374",
                                            "a8d25318-f61f-c070-527c-cdceca9a54e8",
                                            () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                            "comment",
                                            true,
                                            true,
                                            true,
                                            "dolor")]),
                                new AttributesDictionary(),
                                true,
                                "blanditiis",
                                "non",
                                new GraphicOrigin(Guid.NewGuid(),
                                    "est",
                                    1))],
                        [new Field(default,
                                "id",
                                "molestiae",
                                "ut est",
                                8,
                                true,
                                true,
                                new { Value = "quia" },
                            FieldValueType.DateAndTime,
                                new CodedValueDomain<string>()),
                        new Field(default,
                                "group",
                                "similique",
                                "cum reiciendis sed quo",
                                9,
                                true,
                                true,
                                new { Value = "soluta" },
                            FieldValueType.Coordinate,
                                new CodedValueDomain<string>())],
                        GeometryType.Multipoint,
                        new Point(7.5713,
                                62.6718,
                                136.7279,
                                17.6038,
                                482.8960,
                            new SpatialReference(3,
                                    "in",
                                    "ea",
                                    "explicabo"),
                                true,
                                true,
                                269.0471),
                        new SpatialReference(9,
                                "qui",
                                "fugiat",
                                "illo")),
                        9,
                    [new RasterBandInfo(741.3051,
                            853.3438,
                            "phone",
                            395.8081,
                            639.4415,
                            161.2725,
                            741.3710,
                            1.2447),
                    new RasterBandInfo(539.6804,
                            156.2728,
                            "updatedAt",
                            701.2693,
                            848.2569,
                            51.0973,
                            306.3916,
                            875.1367)],
                        [new ColormapPixel(379.8588,
                            588.6742,
                            893.4162,
                            992.8831)],
                    DataType.VectorUv,
                    new Extent(47.0911,
                            -101.1627,
                            14.8527,
                            15.5714,
                            191.7344,
                            809.5283,
                            603.3506,
                            495.1257,
                        new SpatialReference(9,
                                "qui",
                                "praesentium",
                                "temporibus"),
                            true,
                            true),
                        true,
                        4,
                        ["est"],
                        "qui",
                    new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("enim commodi eveniet",
                            [new RasterMultidimensionalInfoVariablesDimensions("repellendus est",
                                    [738.2097,
                                        603.2956],
                                    true,
                                    622.7260,
                                    "pariatur",
                                    "email",
                                    "veniam",
                                    [22.6781])],
                            [new RasterHistogram([122.8232],
                                    [2,
                                        5],
                                    408.1701,
                                    930.8722,
                                    2)],
                                "id",
                            [new RasterBandStatistics(392.0109,
                                    9,
                                    883.0692,
                                    203.4962,
                                    163.0487,
                                    722.1817,
                                    977.4271,
                                    789.2805)],
                                "quasi")]),
                    new RasterInfoPixelSize(145.4685,
                            54.3194),
                    PixelType.U32,
                    new RasterSensorInfo(new DateTime(2001, 2, 6, 14, 49, 1),
                            268.8751,
                            "comment",
                            419.4214,
                            844.6141,
                            "category",
                            27.5655,
                            976.0708)),
                    ["qui",
                        "esse"],
                [SupportedInterpolations.Nearest,
                SupportedInterpolations.Nearest],
                    "soluta ad temporibus",
                    true,
                CoverageInfoVersion.One_1_1);
        await wCSLayer.SetCoverageInfo(testCoverageInfo);
        var coverageInfo = await wCSLayer.GetCoverageInfo();
        Assert.AreEqual(testCoverageInfo, coverageInfo);
        Extent testFullExtent = new Extent(159.1012,
                    -50.9990,
                    28.8828,
                    -2.6478,
                    903.7348,
                    298.2037,
                    672.8849,
                    588.5625,
                new SpatialReference(8,
                        "sit",
                        "ut",
                        "fugit"),
                    true,
                    true);
        await wCSLayer.SetFullExtent(testFullExtent);
        var fullExtent = await wCSLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        Interpolation testInterpolation = Interpolation.Bilinear;
        await wCSLayer.SetInterpolation(testInterpolation);
        var interpolation = await wCSLayer.GetInterpolation();
        Assert.AreEqual(testInterpolation, interpolation);
        ListMode testListMode = ListMode.Hide;
        await wCSLayer.SetListMode(testListMode);
        var listMode = await wCSLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        MultidimensionalSubset testMultidimensionalSubset = new MultidimensionalSubset(new Polyline([new MapPath([new MapPoint([261.3204])])],
                    new SpatialReference(5,
                            "molestiae",
                            "molestiae",
                            "similique"),
                        true,
                        true),
                [new DimensionalDefinition("category",
                        true,
                        "comment")]);
        await wCSLayer.SetMultidimensionalSubset(testMultidimensionalSubset);
        var multidimensionalSubset = await wCSLayer.GetMultidimensionalSubset();
        Assert.AreEqual(testMultidimensionalSubset, multidimensionalSubset);
        PopupTemplate testPopupTemplate = new PopupTemplate("in et quae",
                    "cupiditate",
                    ["accusamus",
                        "et"],
                [new FieldInfo("updatedAt",
                        "beatae",
                        "quasi",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(6,
                            true,
                        DateFormat.DayShortMonthYear),
                        true,
                        true,
                    StatisticType.Avg),
                new FieldInfo("title",
                        "ipsam",
                        "cum",
                    StringFieldOption.TextBox,
                    new FieldInfoFormat(8,
                            true,
                        DateFormat.ShortMonthYear),
                        true,
                        true,
                    StatisticType.Stddev)],
                [new AttachmentsPopupContent("adipisci ipsum ratione",
                        "totam eos nam nihil",
                        AttachmentsPopupContentDisplayType.Preview),
                new MediaPopupContent("aut nihil provident",
                        "architecto id facere",
                    [new BarChartMediaInfo("culpa ad commodi",
                            "ut",
                            "soluta incidunt delectus",
                        new ChartMediaInfoValue(["odit"],
                                "laborum",
                                "nobis",
                            [new ChartMediaInfoValueSeries("createdAt",
                                    "sed",
                                    553.2198)],
                            [new MapColor(122, 73, 235)]))],
                        8)],
                [new ExpressionInfo("return $feature.Name;",
                        "category",
                        "quas sapiente eos",
                        ExpressionInfoReturnType.String),
                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                        "phone",
                        "labore eius culpa",
                        ExpressionInfoReturnType.String)],
                    true,
                    true,
                    [new ActionButton("ratione dolore ratione",
                        "https://picsum.photos/640/480/?image=539",
                        "b6c8e090-5a04-31d5-4057-b4af46b46d8d",
                        () => { Console.WriteLine("iusto"); return Task.CompletedTask; },
                        "title",
                        true,
                        true,
                        true,
                        "laborum"),
                        new ActionButton("id dolores quisquam",
                            "https://picsum.photos/640/480/?image=76",
                            "8159f158-6075-026c-25ab-a591accf7c9d",
                            () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "sint")]);
        await wCSLayer.SetPopupTemplate(testPopupTemplate);
        var popupTemplate = await wCSLayer.GetPopupTemplate();
        Assert.AreEqual(testPopupTemplate, popupTemplate);
        IReadOnlyList<Field> testRasterFields = [new Field(default,
                    "comment",
                    "voluptatem",
                    "dolor blanditiis",
                    3,
                    true,
                    true,
                    new { Value = "dolor" },
                FieldValueType.Binary,
                    new CodedValueDomain<string>())];
        await wCSLayer.SetRasterFields(testRasterFields);
        var rasterFields = await wCSLayer.GetRasterFields();
        Assert.AreEqual(testRasterFields, rasterFields);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2008, 9, 20, 2, 24, 33),
                    new DateTime(2022, 2, 25, 15, 1, 52));
        await wCSLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await wCSLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("ut",
                    "quo",
                new TimeExtent(new DateTime(2023, 1, 12, 19, 6, 5),
                        new DateTime(2000, 3, 2, 15, 2, 38)),
                new TimeInterval(TemporalTime.Years,
                        141.1613),
                    [new DateTime(2017, 6, 23, 6, 41, 5)],
                    "America/Los_Angeles",
                    "natus");
        await wCSLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await wCSLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Seconds,
                    417.4461);
        await wCSLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await wCSLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2008, 7, 12, 2, 8, 24),
                    new DateTime(2011, 9, 1, 21, 41, 45));
        await wCSLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await wCSLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
