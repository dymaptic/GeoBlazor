@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedWCSLayer(Action renderHandler)
    {
        WCSLayer? wCSLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <WCSLayer 
                        Url="@("https://landsat2.arcgis.com/arcgis/rest/services/Landsat/MS/ImageServer")"
                        Renderer="@(new RasterStretchRenderer(new AlgorithmicColorRamp(Algorithm.LabLch,
                                new MapColor(204, 152, 11),
                                new MapColor(14, 42, 83)),
                            true,
                            true,
                            [8,
                            5],
                            2,
                            3,
                            StretchType.PercentClip,
                            [new RasterBandStatistics(707.3193,
                                3,
                                378.5173,
                                763.8133,
                                951.5907,
                                808.8808,
                                217.2567,
                                535.1844),
                            new RasterBandStatistics(732.3052,
                                8,
                                846.6481,
                                241.4053,
                                465.3609,
                                562.4188,
                                329.4864,
                                609.6511)],
                            true,
                            9))"
                        Opacity="@(0.9822)"
                        Title="@("voluptatem at necessitatibus")"
                        BandIds="@([9])"
                        BlendMode="@(BlendMode.Average)"
                        Copyright="@("similique")"
                        CoverageId="@("voluptate")"
                        CoverageInfo="@(new CoverageInfo(["updatedAt"],
                            new CoverageDescriptionV201(new CoverageDescriptionV201BoundedBy(["laudantium",
                                        "ea"],
                                        new DateTime(2018, 11, 9, 18, 39, 15),
                                        new DateTime(2002, 6, 25, 7, 6, 58),
                                    new Extent(13.4735,
                                            174.1339,
                                            -58.3277,
                                            7.7137,
                                            807.3568,
                                            555.2025,
                                            799.2144,
                                            394.6476,
                                        new SpatialReference(9,
                                                "autem",
                                                "maxime",
                                                "nihil"),
                                            true,
                                            true),
                                    new CoverageDescriptionV201BoundedByEnvelopeAllDims([82.0260],
                                            [92.2538,
                                                24.3554]),
                                        true,
                                        ["ratione",
                                            "dicta"]),
                                    "quidem",
                                    "ducimus",
                                new CoverageDescriptionV201DomainSet(["est"],
                                        478.0458,
                                        [269.1856,
                                            355.1403],
                                        true,
                                        [161.7207],
                                        [25.8750,
                                            293.2213],
                                    new CoverageDescriptionV201DomainSetResolution(105.7219,
                                            74.7659),
                                        571.9942),
                                new CoverageDescriptionV201EoMetadata(new CoverageDescriptionV201EoMetadataObservation("id",
                                        new Polygon([new MapPath([new MapPoint([853.9017,
                                                    60.8465]),
                                                new MapPoint([504.6221,
                                                    275.8122])]),
                                                new MapPath([new MapPoint([864.3696])])],
                                            new SpatialReference(4,
                                                    "magnam",
                                                    "qui",
                                                    "saepe"),
                                            new Point(128.1220,
                                                    -88.2357,
                                                    20.5287,
                                                    -13.0705,
                                                    459.5483,
                                                new SpatialReference(8,
                                                        "quo",
                                                        "cumque",
                                                        "beatae"),
                                                    true,
                                                    true,
                                                    431.8378),
                                                true,
                                                true,
                                                true),
                                            "eligendi",
                                        new TemporalDomain(new DateTime(2014, 5, 1, 14, 21, 45),
                                                new DateTime(2018, 1, 12, 3, 55, 32),
                                                21.9230,
                                                "debitis",
                                                [new DateTime(2005, 8, 16, 21, 53, 26),
                                                    new DateTime(2020, 8, 8, 0, 16, 41)]),
                                        new TemporalDomain(new DateTime(2006, 11, 1, 12, 31, 51),
                                                new DateTime(2019, 6, 10, 3, 53, 16),
                                                82.3667,
                                                "sunt",
                                                [new DateTime(2005, 8, 21, 17, 35, 42)]),
                                            "delectus")),
                                    "quidem",
                                [new CoverageDescriptionV201RangeType([410.9493],
                                        "sed nemo",
                                        "token",
                                        209.8393,
                                        "culpa"),
                                new CoverageDescriptionV201RangeType([157.6813],
                                        "reiciendis consequuntur nam deleniti",
                                        "comment",
                                        335.1462,
                                        "rerum")],
                                new CoverageDescriptionV201Resolution(-6.1955,
                                        -31.9418),
                                    "et",
                                    "2.1.7.8"),
                                "ut",
                                "laudantium voluptatem blanditiis",
                            new Extent(108.8130,
                                    101.1440,
                                    57.3574,
                                    -37.4853,
                                    382.0681,
                                    657.0356,
                                    924.5616,
                                    157.1649,
                                new SpatialReference(9,
                                        "quam",
                                        "rerum",
                                        "vel"),
                                    true,
                                    true),
                            new RasterInfo(new FeatureSet("group",
                                        true,
                                    [new Graphic(new Polygon([new MapPath([new MapPoint([82.8807,
                                                    350.6646]),
                                                new MapPoint([950.1324])]),
                                                new MapPath([new MapPoint([713.9074]),
                                                    new MapPoint([441.5391])])],
                                            new SpatialReference(3,
                                                    "id",
                                                    "nemo",
                                                    "facere"),
                                            new Point(64.6360,
                                                    67.7345,
                                                    -155.8249,
                                                    -64.7765,
                                                    997.5314,
                                                new SpatialReference(3,
                                                        "architecto",
                                                        "quibusdam",
                                                        "quaerat"),
                                                    true,
                                                    true,
                                                    802.0856),
                                                true,
                                                true,
                                                true),
                                        new TextSymbol("hic quasi aut",
                                            new MapColor(222, 156, 180),
                                            new MapColor(147, 190, 183),
                                                new Dimension(3.4875),
                                            new MapFont(new Dimension(123.0976),
                                                    "Verdana",
                                                MapFontStyle.Oblique,
                                                FontWeight.Lighter,
                                                TextDecoration.None),
                                                907.6997,
                                            new MapColor(110, 29, 247),
                                            new MapColor(51, 34, 80),
                                                847.8005,
                                            HorizontalAlignment.Left,
                                                true,
                                                902.6494,
                                                new Dimension(984.3560),
                                                true),
                                        new PopupTemplate("rem et ad",
                                                "eligendi",
                                                ["ex"],
                                            [new FieldInfo("comment",
                                                    "eaque",
                                                    "quis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Max)],
                                            [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                        "iusto",
                                                        "est et veritatis")),
                                            new TextPopupContent("praesentium ab debitis")],
                                            [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "token",
                                                    "iusto qui maxime",
                                                    ExpressionInfoReturnType.String)],
                                                true,
                                                true,
                                                [new ActionButton("eum recusandae et",
                                                    "https://picsum.photos/640/480/?image=51",
                                                    "94108f06-d839-65e2-39e5-c318099500e5",
                                                    () => { Console.WriteLine("tempore"); return Task.CompletedTask; },
                                                    "token",
                                                    true,
                                                    true,
                                                    true,
                                                    "aut")]),
                                            new AttributesDictionary(),
                                            true,
                                            "et",
                                            "est",
                                            new GraphicOrigin(Guid.NewGuid(),
                                                "sit",
                                                9)),
                                    new Graphic(new Point(-49.5333,
                                                26.2673,
                                                11.6736,
                                                -14.1232,
                                                41.8649,
                                            new SpatialReference(5,
                                                    "accusantium",
                                                    "ducimus",
                                                    "ut"),
                                                true,
                                                true,
                                                166.8081),
                                        new TextSymbol("non sed debitis",
                                            new MapColor(64, 10, 64),
                                            new MapColor(61, 73, 251),
                                                new Dimension(11.0354),
                                            new MapFont(new Dimension(407.7443),
                                                    "Helvetica",
                                                MapFontStyle.Normal,
                                                FontWeight.Bold,
                                                TextDecoration.Underline),
                                                837.8528,
                                            new MapColor(214, 232, 97),
                                            new MapColor(10, 216, 22),
                                                305.2123,
                                            HorizontalAlignment.Left,
                                                true,
                                                836.5644,
                                                new Dimension(143.8906),
                                                true),
                                        new PopupTemplate("omnis velit recusandae",
                                                "aliquid",
                                                ["et",
                                                    "error"],
                                            [new FieldInfo("category",
                                                    "harum",
                                                    "veritatis",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("password",
                                                    "magnam",
                                                    "illo",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.ShortDateLe),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                            [new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "provident",
                                                        "vel repudiandae temporibus")),
                                            new MediaPopupContent("necessitatibus dolor sint",
                                                    "odit quis accusantium",
                                                [new ColumnChartMediaInfo("ut at reiciendis",
                                                        "soluta",
                                                        "itaque velit aut",
                                                    new ChartMediaInfoValue()),
                                                new ColumnChartMediaInfo("quae quia nostrum",
                                                        "vel",
                                                        "consequatur blanditiis consequatur",
                                                    new ChartMediaInfoValue())],
                                                    9)],
                                            [new ExpressionInfo("return $feature.Name;",
                                                    "password",
                                                    "quis nobis dolorem",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "comment",
                                                    "dignissimos non minima",
                                                    ExpressionInfoReturnType.String)],
                                                true,
                                                true,
                                                [new ActionButton("ut maiores quidem",
                                                    "https://picsum.photos/640/480/?image=944",
                                                    "3a44efed-25a0-8d1d-614a-05a2be93fd05",
                                                    () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                                    "group",
                                                    true,
                                                    true,
                                                    true,
                                                    "architecto")]),
                                            new AttributesDictionary(),
                                            true,
                                            "eum",
                                            "ea",
                                            new GraphicOrigin(Guid.NewGuid(),
                                                "et",
                                                6))],
                                    [new Field(default,
                                            "email",
                                            "esse",
                                            "beatae quaerat quam modi",
                                            6,
                                            true,
                                            true,
                                            new { Value = "natus" },
                                        FieldValueType.NameOrTitle,
                                            new CodedValueDomain<string>([new CodedValue<string>()],
                                                "email"))],
                                    GeometryType.Polygon,
                                    new Polyline([new MapPath([new MapPoint([629.7603]),
                                            new MapPoint([980.6542,
                                                680.3057])])],
                                        new SpatialReference(5,
                                                "aspernatur",
                                                "maiores",
                                                "at"),
                                            true,
                                            true),
                                    new SpatialReference(6,
                                            "voluptatem",
                                            "ipsum",
                                            "vitae")),
                                    5,
                                [new RasterBandInfo(884.6261,
                                        294.2378,
                                        "name",
                                        188.0499,
                                        452.9227,
                                        806.2031,
                                        630.8005,
                                        878.2642)],
                                    [new ColormapPixel(401.5007,
                                        596.0598,
                                        280.8580,
                                        936.4412),
                                        new ColormapPixel(103.0452,
                                            1.6449,
                                            97.7307,
                                            81.5588)],
                                DataType.VectorMagnitude,
                                new Extent(-64.6385,
                                        73.4764,
                                        22.1285,
                                        -56.5241,
                                        631.1995,
                                        794.9080,
                                        765.8080,
                                        201.5935,
                                    new SpatialReference(8,
                                            "harum",
                                            "eius",
                                            "saepe"),
                                        true,
                                        true),
                                    true,
                                    3,
                                    ["placeat",
                                        "alias"],
                                    "corrupti",
                                new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("consectetur consequatur facilis eos",
                                        [new RasterMultidimensionalInfoVariablesDimensions("libero molestiae",
                                                [243.6681],
                                                true,
                                                605.3039,
                                                "consequatur",
                                                "createdAt",
                                                "accusamus",
                                                [214.3151,
                                                    944.2780])],
                                        [new RasterHistogram([766.0962,
                                                109.0871],
                                                [6],
                                                546.1825,
                                                783.2151,
                                                5),
                                        new RasterHistogram([563.7630,
                                                528.9300],
                                                [9],
                                                503.9751,
                                                121.8845,
                                                4)],
                                            "updatedAt",
                                        [new RasterBandStatistics(472.9287,
                                                7,
                                                487.4246,
                                                71.0795,
                                                164.8691,
                                                281.1610,
                                                687.5016,
                                                624.9724),
                                        new RasterBandStatistics(945.2379,
                                                4,
                                                753.9845,
                                                998.5330,
                                                61.4548,
                                                883.5027,
                                                479.2102,
                                                459.4858)],
                                            "reiciendis"),
                                    new RasterMultidimensionalInfoVariables("tenetur quia",
                                        [new RasterMultidimensionalInfoVariablesDimensions("earum necessitatibus aut nihil",
                                                [915.0934,
                                                    245.4003],
                                                true,
                                                345.9444,
                                                "mollitia",
                                                "name",
                                                "impedit",
                                                [627.9776,
                                                    87.1088])],
                                        [new RasterHistogram([916.5032,
                                                377.6505],
                                                [4,
                                                    5],
                                                686.5607,
                                                769.0455,
                                                7),
                                        new RasterHistogram([49.3593],
                                                [6],
                                                433.8417,
                                                319.2304,
                                                5)],
                                            "group",
                                        [new RasterBandStatistics(857.9307,
                                                6,
                                                255.9916,
                                                625.1900,
                                                198.9737,
                                                361.8570,
                                                864.2123,
                                                346.1441),
                                        new RasterBandStatistics(35.6590,
                                                8,
                                                757.9377,
                                                369.4848,
                                                988.0739,
                                                907.5607,
                                                597.2292,
                                                544.1858)],
                                            "optio")]),
                                new RasterInfoPixelSize(76.2424,
                                        2.4659),
                                PixelType.S8,
                                new RasterSensorInfo(new DateTime(2017, 11, 11, 18, 9, 7),
                                        103.3316,
                                        "avatar",
                                        692.7014,
                                        1.3959,
                                        "status",
                                        744.8504,
                                        57.6833)),
                                ["et"],
                            [SupportedInterpolations.Bilinear,
                            SupportedInterpolations.Majority],
                                "odio quasi laboriosam",
                                true,
                            CoverageInfoVersion.Two_0_1))"
                        Effect="@(new Effect("voluptatem",
                            29223762.3402))"
                        Interpolation="@(Interpolation.Cubic)"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(6772459.8579)"
                        MinScale="@(45968.7213)"
                        PersistenceEnabled="@(true)"
                        PopupEnabled="@(true)"
                        UseViewTime="@(true)"
                        Version="@("8.8.4.9")">
                        <TimeInterval 
                            Unit="@(TemporalTime.Decades)"
                            Value="@(919.0140)">
                        </TimeInterval>
                        <TimeInfo 
                            StartField="@("rerum")"
                            EndField="@("vitae")"
                            Stops="@([new DateTime(2002, 6, 4, 18, 51, 47)])"
                            TimeZone="@("Africa/Johannesburg")"
                            TrackIdField="@("aut")">
                            <TimeInterval 
                                Unit="@(TemporalTime.Years)"
                                Value="@(192.0000)">
                            </TimeInterval>
                            <TimeExtent 
                                Start="@(new DateTime(2013, 7, 25, 8, 5, 58))"
                                End="@(new DateTime(2007, 1, 1, 1, 26, 47))">
                            </TimeExtent>
                        </TimeInfo>
                        <TimeExtent 
                            Start="@(new DateTime(2022, 3, 25, 7, 28, 20))"
                            End="@(new DateTime(2005, 11, 14, 18, 43, 21))">
                        </TimeExtent>
                        <Field 
                            Name="@("email")"
                            Alias="@("quia")"
                            Description="@("enim et")"
                            Length="@(4)"
                            Editable="@(true)"
                            Nullable="@(true)"
                            DefaultValue="@(new { Value = "est" })"
                            ValueType="@(FieldValueType.Description)"
                            Domain="@(new CodedValueDomain<string>([new CodedValue<string>()],
                                "group"))">
                        </Field>
                        <PortalItem />
                        <PopupTemplate 
                            Title="@("rerum et rem")"
                            StringContent="@("est")"
                            OutFields="@(["earum"])"
                            FieldInfos="@([new FieldInfo("password",
                                    "illum",
                                    "sed",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongDateLongTime24),
                                    true,
                                    true,
                                StatisticType.Max),
                            new FieldInfo("group",
                                    "eum",
                                    "ut",
                                StringFieldOption.RichText,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.ShortDateLeLongTime),
                                    true,
                                    true,
                                StatisticType.Min)])"
                            Content="@([new MediaPopupContent("reiciendis ea et",
                                    "quisquam tenetur fuga hic",
                                [new BarChartMediaInfo("saepe hic est",
                                        "repudiandae",
                                        "omnis officia recusandae",
                                    new ChartMediaInfoValue(["blanditiis"],
                                            "quam",
                                            "molestias",
                                        [new ChartMediaInfoValueSeries("id",
                                                "repellat",
                                                71.1049),
                                        new ChartMediaInfoValueSeries("name",
                                                "qui",
                                                554.0349)],
                                        [new MapColor(177, 217, 79),
                                        new MapColor(176, 79, 127)]))],
                                    1),
                            new RelationshipPopupContent("sint laboriosam id",
                                    "in laudantium excepturi neque",
                                    9,
                                    "libero",
                                [new RelatedRecordsInfoFieldOrder("dicta",
                                    OrderBy.Asc)],
                                    2)])"
                            ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                    "name",
                                    "atque est tempore",
                                    ExpressionInfoReturnType.String),
                            new ExpressionInfo("return Date();",
                                    "category",
                                    "non reiciendis molestias",
                                    ExpressionInfoReturnType.String)])"
                            OverwriteActions="@(true)"
                            ReturnGeometry="@(true)"
                            Actions="@([new ActionButton("dolores dicta nesciunt",
                                "https://picsum.photos/640/480/?image=223",
                                "c752af6a-f195-96e4-5e9e-098db3adf2ff",
                                () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                "phone",
                                true,
                                true,
                                true,
                                "qui"),
                                new ActionButton("quibusdam facilis ut",
                                    "https://picsum.photos/640/480/?image=877",
                                    "f319649a-aadb-049f-fdda-d42df739830d",
                                    () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                    "id",
                                    true,
                                    true,
                                    true,
                                    "ad")])">
                        </PopupTemplate>
                        <MultidimensionalSubset 
                            AreaOfInterest="@(new Point(167.0133,
                                    -77.2376,
                                    50.3595,
                                    69.1812,
                                    208.6495,
                                new SpatialReference(7,
                                        "sit",
                                        "pariatur",
                                        "vel"),
                                    true,
                                    true,
                                    941.4849))">
                            <DimensionalDefinition 
                                DimensionName="@("name")"
                                IsSlice="@(true)"
                                VariableName="@("id")"
>
                            </DimensionalDefinition>
                        </MultidimensionalSubset>
                        <DimensionalDefinition 
                            DimensionName="@("name")"
                            IsSlice="@(true)"
                            VariableName="@("updatedAt")"
>
                        </DimensionalDefinition>
                        <Extent 
                            Xmax="@(-18.8258)"
                            Xmin="@(-126.4094)"
                            Ymax="@(46.7763)"
                            Ymin="@(21.0192)"
                            Zmax="@(525.4505)"
                            Zmin="@(359.5689)"
                            Mmax="@(709.2298)"
                            Mmin="@(463.4923)"
                            SpatialReference="@(new SpatialReference(5,
                                    "sed",
                                    "quisquam",
                                    "aut"))"
                            HasM="@(true)"
                            HasZ="@(true)">
                        </Extent>
                    </WCSLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(wCSLayer!);
        await AssertJavaScript("assertLayerExists", args: "wcs");
        var createPopupTemplateMethodResult = await wCSLayer.CreatePopupTemplate(new CreatePopupTemplateOptions(["qui"],
                    ["updatedAt"]));
        Assert.IsNotNull(createPopupTemplateMethodResult);
        var fetchPixelsMethodResult = await wCSLayer.FetchPixels(new Extent(17.9431,
                    45.8631,
                    -46.8773,
                    -88.1177,
                    590.0254,
                    209.2489,
                    796.0264,
                    968.5103,
                new SpatialReference(1,
                        "est",
                        "commodi",
                        "ratione"),
                    true,
                    true),
                6,
                2,
            new ImageryTileMixinFetchPixelsOptions(Interpolation.Bilinear));
        Assert.IsNotNull(fetchPixelsMethodResult);
        var identifyMethodResult = await wCSLayer.Identify(new Point(-167.7568,
                    -35.7752,
                    48.8347,
                    -24.8716,
                    246.5530,
                new SpatialReference(6,
                        "alias",
                        "quia",
                        "aut"),
                    true,
                    true,
                    452.2404),
            new RasterIdentifyOptions([new DimensionalDefinition("group",
                        true,
                        "category")],
                    "status"));
        Assert.IsNotNull(identifyMethodResult);
        IReadOnlyList<DimensionalDefinition> testMultidimensionalDefinition = [new DimensionalDefinition("avatar",
                    true,
                    "status")];
        await wCSLayer.SetMultidimensionalDefinition(testMultidimensionalDefinition);
        var multidimensionalDefinition = await wCSLayer.GetMultidimensionalDefinition();
        Assert.AreEqual(testMultidimensionalDefinition, multidimensionalDefinition);
        PortalItem testPortalItem = new PortalItem();
        await wCSLayer.SetPortalItem(testPortalItem);
        var portalItem = await wCSLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Plus;
        await wCSLayer.SetBlendMode(testBlendMode);
        var blendMode = await wCSLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        CoverageInfo testCoverageInfo = new CoverageInfo(["category",
                    "status"],
                new CoverageDescriptionV201(new CoverageDescriptionV201BoundedBy(["incidunt",
                            "error"],
                            new DateTime(2014, 5, 17, 8, 50, 5),
                            new DateTime(2017, 4, 1, 15, 3, 8),
                        new Extent(-127.2246,
                                -108.6759,
                                51.2307,
                                -47.2113,
                                287.7817,
                                625.7601,
                                42.8910,
                                513.8158,
                            new SpatialReference(6,
                                    "natus",
                                    "autem",
                                    "accusantium"),
                                true,
                                true),
                        new CoverageDescriptionV201BoundedByEnvelopeAllDims([303.1483],
                                [474.6624,
                                    455.4054]),
                            true,
                            ["eum",
                                "eius"]),
                        "fugiat",
                        "sapiente",
                    new CoverageDescriptionV201DomainSet(["quia"],
                            618.4678,
                            [834.6550],
                            true,
                            [840.3442],
                            [303.1807,
                                980.2686],
                        new CoverageDescriptionV201DomainSetResolution(159.6735,
                                13.3237),
                            63.4091),
                    new CoverageDescriptionV201EoMetadata(new CoverageDescriptionV201EoMetadataObservation("reprehenderit",
                            new Polygon([new MapPath([new MapPoint([765.0076,
                                        229.7162]),
                                    new MapPoint([249.1278])]),
                                    new MapPath([new MapPoint([259.3561,
                                            210.5315])])],
                                new SpatialReference(3,
                                        "et",
                                        "sint",
                                        "alias"),
                                new Point(66.9992,
                                        12.2228,
                                        168.2494,
                                        27.3291,
                                        581.2458,
                                    new SpatialReference(2,
                                            "temporibus",
                                            "et",
                                            "eos"),
                                        true,
                                        true,
                                        279.0507),
                                    true,
                                    true,
                                    true),
                                "enim",
                            new TemporalDomain(new DateTime(2001, 7, 25, 15, 29, 5),
                                    new DateTime(2002, 11, 9, 2, 41, 50),
                                    63.9461,
                                    "ullam",
                                    [new DateTime(2007, 1, 13, 0, 9, 5)]),
                            new TemporalDomain(new DateTime(2018, 5, 12, 20, 27, 6),
                                    new DateTime(2022, 6, 17, 8, 45, 26),
                                    28.8154,
                                    "ut",
                                    [new DateTime(2006, 5, 17, 11, 37, 41),
                                        new DateTime(2014, 11, 26, 22, 56, 57)]),
                                "a")),
                        "et",
                    [new CoverageDescriptionV201RangeType([24.7921],
                            "minus reprehenderit est",
                            "title",
                            210.5685,
                            "veniam"),
                    new CoverageDescriptionV201RangeType([944.2697,
                            222.3798],
                            "dolorum officia porro",
                            "comment",
                            613.3285,
                            "rem")],
                    new CoverageDescriptionV201Resolution(-162.0280,
                            -73.9389),
                        "temporibus",
                        "4.1.8.7"),
                    "culpa",
                    "est reprehenderit",
                new Extent(-74.0407,
                        -169.2835,
                        27.4123,
                        26.2353,
                        516.9218,
                        176.9064,
                        780.2509,
                        254.6095,
                    new SpatialReference(7,
                            "inventore",
                            "molestiae",
                            "accusantium"),
                        true,
                        true),
                new RasterInfo(new FeatureSet("email",
                            true,
                        [new Graphic(new Extent(-98.6696,
                                    17.8314,
                                    -29.2601,
                                    -26.2942,
                                    141.7557,
                                    772.7931,
                                    480.0117,
                                    771.2728,
                                new SpatialReference(9,
                                        "id",
                                        "cum",
                                        "aliquam"),
                                    true,
                                    true),
                            new TextSymbol("ipsa reiciendis molestiae",
                                new MapColor(158, 61, 236),
                                new MapColor(102, 236, 161),
                                    new Dimension(704.2495),
                                new MapFont(new Dimension(40.2468),
                                        "Palatino",
                                    MapFontStyle.Normal,
                                    FontWeight.Bolder,
                                    TextDecoration.Underline),
                                    606.1249,
                                new MapColor(93, 40, 77),
                                new MapColor(204, 21, 53),
                                    163.5865,
                                HorizontalAlignment.Right,
                                    true,
                                    212.1523,
                                    new Dimension(706.3966),
                                    true),
                            new PopupTemplate("laboriosam esse ducimus",
                                    "est",
                                    ["dicta"],
                                [new FieldInfo("category",
                                        "temporibus",
                                        "error",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("id",
                                        "vero",
                                        "quia",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                [new TextPopupContent("quasi debitis dolores")],
                                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "category",
                                        "sapiente magnam et",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "id",
                                        "accusamus repellat nam",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("odit nulla quis",
                                        "https://picsum.photos/640/480/?image=1070",
                                        "735451bc-81cd-d607-dde9-882ca3d6063b",
                                        () => { Console.WriteLine("praesentium"); return Task.CompletedTask; },
                                        "password",
                                        true,
                                        true,
                                        true,
                                        "minus"),
                                        new ActionButton("tempore atque ipsum",
                                            "https://picsum.photos/640/480/?image=567",
                                            "2f626942-59b2-d5f8-6218-92dc36065ced",
                                            () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "omnis")]),
                                new AttributesDictionary(),
                                true,
                                "non",
                                "qui",
                                new GraphicOrigin(Guid.NewGuid(),
                                    "eum",
                                    8))],
                        [new Field(default,
                                "category",
                                "error",
                                "aut iure quae et",
                                5,
                                true,
                                true,
                                new { Value = "nostrum" },
                            FieldValueType.None,
                                new CodedValueDomain<string>([new CodedValue<string>()],
                                    "avatar"))],
                        GeometryType.Polyline,
                        new Polygon([new MapPath([new MapPoint([158.2225,
                                    843.6225]),
                                new MapPoint([214.5289])])],
                            new SpatialReference(4,
                                    "modi",
                                    "consectetur",
                                    "accusantium"),
                            new Point(-148.5477,
                                    -83.3824,
                                    -67.2608,
                                    -21.8900,
                                    744.9603,
                                new SpatialReference(8,
                                        "ad",
                                        "dolores",
                                        "atque"),
                                    true,
                                    true,
                                    764.8575),
                                true,
                                true,
                                true),
                        new SpatialReference(2,
                                "culpa",
                                "totam",
                                "voluptas")),
                        9,
                    [new RasterBandInfo(761.7473,
                            167.2359,
                            "group",
                            219.1779,
                            718.3081,
                            134.1600,
                            161.2542,
                            853.0549),
                    new RasterBandInfo(288.2260,
                            273.3531,
                            "avatar",
                            377.0402,
                            53.9240,
                            18.3603,
                            202.1730,
                            158.3286)],
                        [new ColormapPixel(376.7091,
                            795.8036,
                            77.3334,
                            505.7718),
                            new ColormapPixel(97.0712,
                                493.0667,
                                879.7699,
                                373.0881)],
                    DataType.Scientific,
                    new Extent(-27.6754,
                            -159.5868,
                            -86.0990,
                            -70.1269,
                            554.3688,
                            316.3755,
                            870.3772,
                            363.4429,
                        new SpatialReference(9,
                                "qui",
                                "repellendus",
                                "vitae"),
                            true,
                            true),
                        true,
                        7,
                        ["esse",
                            "quos"],
                        "tempore",
                    new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("ut quia eos",
                            [new RasterMultidimensionalInfoVariablesDimensions("eos quibusdam facilis",
                                    [904.2798],
                                    true,
                                    295.5772,
                                    "provident",
                                    "createdAt",
                                    "et",
                                    [568.5198,
                                        976.4907])],
                            [new RasterHistogram([319.0961],
                                    [8,
                                        7],
                                    885.8511,
                                    180.7363,
                                    6)],
                                "group",
                            [new RasterBandStatistics(473.7303,
                                    8,
                                    533.8457,
                                    902.9638,
                                    370.4379,
                                    519.9098,
                                    985.9599,
                                    64.6898)],
                                "cupiditate")]),
                    new RasterInfoPixelSize(-107.5739,
                            -86.8980),
                    PixelType.C64,
                    new RasterSensorInfo(new DateTime(2022, 10, 12, 7, 12, 5),
                            184.4332,
                            "phone",
                            210.0045,
                            593.0831,
                            "token",
                            172.8841,
                            192.7410)),
                    ["in",
                        "minus"],
                [SupportedInterpolations.Bilinear,
                SupportedInterpolations.Majority],
                    "fuga aut recusandae",
                    true,
                CoverageInfoVersion.One_1_2);
        await wCSLayer.SetCoverageInfo(testCoverageInfo);
        var coverageInfo = await wCSLayer.GetCoverageInfo();
        Assert.AreEqual(testCoverageInfo, coverageInfo);
        Extent testFullExtent = new Extent(173.6265,
                    -62.8058,
                    -30.4958,
                    -59.2340,
                    125.9673,
                    357.9826,
                    680.1780,
                    567.0079,
                new SpatialReference(7,
                        "quibusdam",
                        "qui",
                        "debitis"),
                    true,
                    true);
        await wCSLayer.SetFullExtent(testFullExtent);
        var fullExtent = await wCSLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        Interpolation testInterpolation = Interpolation.Nearest;
        await wCSLayer.SetInterpolation(testInterpolation);
        var interpolation = await wCSLayer.GetInterpolation();
        Assert.AreEqual(testInterpolation, interpolation);
        ListMode testListMode = ListMode.Hide;
        await wCSLayer.SetListMode(testListMode);
        var listMode = await wCSLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        MultidimensionalSubset testMultidimensionalSubset = new MultidimensionalSubset(new Extent(69.5985,
                        151.5111,
                        -58.5642,
                        54.4839,
                        59.6017,
                        977.5590,
                        559.2553,
                        775.0038,
                    new SpatialReference(7,
                            "tempore",
                            "fuga",
                            "rerum"),
                        true,
                        true),
                [new DimensionalDefinition("name",
                        true,
                        "email"),
                new DimensionalDefinition("group",
                        true,
                        "id")]);
        await wCSLayer.SetMultidimensionalSubset(testMultidimensionalSubset);
        var multidimensionalSubset = await wCSLayer.GetMultidimensionalSubset();
        Assert.AreEqual(testMultidimensionalSubset, multidimensionalSubset);
        IReadOnlyList<Field> testRasterFields = [new Field(default,
                    "updatedAt",
                    "sunt",
                    "in possimus",
                    1,
                    true,
                    true,
                    new { Value = "et" },
                FieldValueType.UniqueIdentifier,
                    new CodedValueDomain<string>([new CodedValue<string>(),
                        new CodedValue<string>()],
                        "avatar"))];
        await wCSLayer.SetRasterFields(testRasterFields);
        var rasterFields = await wCSLayer.GetRasterFields();
        Assert.AreEqual(testRasterFields, rasterFields);
        TimeExtent testTimeExtent = new TimeExtent(new DateTime(2022, 9, 9, 14, 24, 3),
                    new DateTime(2014, 4, 20, 5, 22, 2));
        await wCSLayer.SetTimeExtent(testTimeExtent);
        var timeExtent = await wCSLayer.GetTimeExtent();
        Assert.AreEqual(testTimeExtent, timeExtent);
        TimeInfo testTimeInfo = new TimeInfo("commodi",
                    "eaque",
                new TimeExtent(new DateTime(2009, 10, 2, 22, 1, 16),
                        new DateTime(2014, 3, 8, 18, 35, 3)),
                new TimeInterval(TemporalTime.Seconds,
                        324.3005),
                    [new DateTime(2012, 1, 21, 0, 49, 31)],
                    "Europe/Zagreb",
                    "occaecati");
        await wCSLayer.SetTimeInfo(testTimeInfo);
        var timeInfo = await wCSLayer.GetTimeInfo();
        Assert.AreEqual(testTimeInfo, timeInfo);
        TimeInterval testTimeOffset = new TimeInterval(TemporalTime.Minutes,
                    714.5481);
        await wCSLayer.SetTimeOffset(testTimeOffset);
        var timeOffset = await wCSLayer.GetTimeOffset();
        Assert.AreEqual(testTimeOffset, timeOffset);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2008, 2, 2, 7, 16, 51),
                    new DateTime(2012, 5, 23, 16, 55, 3));
        await wCSLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await wCSLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
