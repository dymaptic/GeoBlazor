@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("aliquid voluptate voluptates")"
                        Opacity="@(0.5722)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(20935.8873)"
                        MaxScale="@(4458139.0087)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.DestinationAtop)"
                        Effect="@(new Effect("quibusdam",
                            21671248.2270))">
                        <TimeExtent 
                            Start="@(new DateTime(2018, 6, 16, 18, 12, 35))"
                            End="@(new DateTime(2011, 3, 9, 13, 39, 45))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Polyline([new MapPath([new MapPoint([369.2818]),
                                    new MapPoint([381.1521,
                                        630.0886])])],
                                new SpatialReference(9,
                                        "in",
                                        "nam",
                                        "quo"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("fugit fugit ea",
                                new MapColor(228, 157, 192),
                                new MapColor(187, 107, 245),
                                    new Dimension(477.4256),
                                new MapFont(new Dimension(81.3931),
                                        "Bookman",
                                    MapFontStyle.Normal,
                                    FontWeight.Bolder,
                                    TextDecoration.LineThrough),
                                    282.2563,
                                new MapColor(29, 176, 101),
                                new MapColor(180, 234, 155),
                                    315.1057,
                                HorizontalAlignment.Center,
                                    true,
                                    943.0073,
                                    new Dimension(715.3851),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("ad officiis cumque",
                                    "ea",
                                    ["et"],
                                [new FieldInfo("title",
                                        "quis",
                                        "voluptatem",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("status",
                                        "blanditiis",
                                        "nihil",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                            "et",
                                            "voluptatem eos nobis"))],
                                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "title",
                                        "dolorum nemo repudiandae",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "category",
                                        "tempore numquam eum",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("debitis voluptatum et",
                                        "https://picsum.photos/640/480/?image=287",
                                        "4ec65dba-c788-e8e9-6fd1-feff02fb1e85",
                                        () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                                        "name",
                                        true,
                                        true,
                                        true,
                                        "qui"),
                                        new ActionButton("maxime quaerat est",
                                            "https://picsum.photos/640/480/?image=695",
                                            "bc8bf21d-c7cc-bf09-f486-88c1a593b536",
                                            () => { Console.WriteLine("itaque"); return Task.CompletedTask; },
                                            "name",
                                            true,
                                            true,
                                            true,
                                            "rerum")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("porro")"
                            AggregateGeometries="@("provident")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "in",
                                2))">
                        </Graphic>
                        <Extent 
                            Xmax="@(-35.6087)"
                            Xmin="@(115.1161)"
                            Ymax="@(52.6521)"
                            Ymin="@(-24.5689)"
                            Zmax="@(428.0726)"
                            Zmin="@(842.0039)"
                            Mmax="@(58.1463)"
                            Mmin="@(409.0090)"
                            SpatialReference="@(new SpatialReference(3,
                                    "quas",
                                    "quod",
                                    "magnam"))"
                            HasM="@(true)"
                            HasZ="@(true)">
                        </Extent>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                    "quis totam vitae"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(909.1206)"
                            Unit="@(ElevationUnit.Yards)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Polygon([new MapPath([new MapPoint([764.2967])]),
                        new MapPath([new MapPoint([736.3176]),
                            new MapPoint([945.3941])])],
                    new SpatialReference(7,
                            "saepe",
                            "consequatur",
                            "officia"),
                    new Point(3.1875,
                            -66.9934,
                            154.1028,
                            84.7073,
                            157.5774,
                        new SpatialReference(3,
                                "ex",
                                "vero",
                                "facere"),
                            true,
                            true,
                            59.8694),
                        true,
                        true,
                        true),
                new TextSymbol("quod id facilis",
                    new MapColor(3, 239, 149),
                    new MapColor(198, 198, 101),
                        new Dimension(828.7889),
                    new MapFont(new Dimension(153.3292),
                            "Bookman",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        622.7999,
                    new MapColor(55, 75, 79),
                    new MapColor(240, 198, 49),
                        788.6415,
                    HorizontalAlignment.Center,
                        true,
                        586.1385,
                        new Dimension(958.0318),
                        true),
                new PopupTemplate("blanditiis aut omnis",
                        "omnis",
                        ["aut",
                            "ea"],
                    [new FieldInfo("category",
                            "eos",
                            "quis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new MediaPopupContent("pariatur quia quisquam",
                            "et sunt fugit",
                        [new BarChartMediaInfo("sit consectetur aut",
                                "non",
                                "asperiores dolor officia",
                            new ChartMediaInfoValue(["laudantium"],
                                    "neque",
                                    "alias",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "sit",
                                        196.4925),
                                new ChartMediaInfoValueSeries("avatar",
                                        "aut",
                                        970.7819)],
                                [new MapColor(220, 107, 111),
                                new MapColor(131, 236, 202)]))],
                            9),
                    new RelationshipPopupContent("voluptatum nemo et",
                            "odio consequuntur perferendis inventore",
                            2,
                            "ut",
                        [new RelatedRecordsInfoFieldOrder("qui",
                            OrderBy.Desc)],
                            5)],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "phone",
                            "cupiditate consequuntur perspiciatis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("deserunt autem unde",
                            "https://picsum.photos/640/480/?image=168",
                            "f56bd25e-30af-f774-9349-15a55c4d9fe0",
                            () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "sunt")]),
                    new AttributesDictionary(),
                    true,
                    "voluptas",
                    "aut",
                    new GraphicOrigin(Guid.NewGuid(),
                        "placeat",
                        9)),
            new Graphic(new Polygon([new MapPath([new MapPoint([578.3283])])],
                    new SpatialReference(2,
                            "dolore",
                            "sequi",
                            "sed"),
                    new Point(-53.2668,
                            72.5868,
                            -13.5033,
                            -78.6359,
                            174.2880,
                        new SpatialReference(9,
                                "in",
                                "praesentium",
                                "ut"),
                            true,
                            true,
                            274.6237),
                        true,
                        true,
                        true),
                new TextSymbol("similique odit dolorem",
                    new MapColor(102, 78, 55),
                    new MapColor(252, 61, 193),
                        new Dimension(770.4185),
                    new MapFont(new Dimension(611.2953),
                            "Verdana",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.None),
                        871.9137,
                    new MapColor(253, 29, 128),
                    new MapColor(196, 187, 80),
                        950.4033,
                    HorizontalAlignment.Center,
                        true,
                        441.1247,
                        new Dimension(476.1079),
                        true),
                new PopupTemplate("tenetur dolores et",
                        "dolores",
                        ["sit",
                            "dolor"],
                    [new FieldInfo("token",
                            "mollitia",
                            "accusantium",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("category",
                            "praesentium",
                            "debitis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new MediaPopupContent("asperiores accusantium aut",
                            "est repellendus totam et",
                        [new PieChartMediaInfo("temporibus repellat inventore",
                                "corporis",
                                "ut cupiditate sed",
                            new ChartMediaInfoValue(["dolorem"],
                                    "qui",
                                    "vitae",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "quia",
                                        955.4539),
                                new ChartMediaInfoValueSeries("phone",
                                        "hic",
                                        820.1110)],
                                [new MapColor(31, 179, 29),
                                new MapColor(201, 205, 197)]))],
                            4)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "phone",
                            "molestiae error enim",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("cumque debitis a",
                            "https://picsum.photos/640/480/?image=1025",
                            "e9ae44b7-d23b-a422-029c-38cce66c86fd",
                            () => { Console.WriteLine("iure"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "possimus"),
                            new ActionButton("assumenda fugiat corporis",
                                "https://picsum.photos/640/480/?image=32",
                                "316386d1-7da7-56ba-b3f9-8437a91c869b",
                                () => { Console.WriteLine("eaque"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "aliquam")]),
                    new AttributesDictionary(),
                    true,
                    "dolores",
                    "quidem",
                    new GraphicOrigin(Guid.NewGuid(),
                        "voluptas",
                        4))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Extent(106.7422,
                        132.9712,
                        -8.1038,
                        -79.5499,
                        363.6805,
                        688.2106,
                        914.3208,
                        252.6905,
                    new SpatialReference(8,
                            "omnis",
                            "temporibus",
                            "ea"),
                        true,
                        true),
                new TextSymbol("dolor aut distinctio",
                    new MapColor(100, 190, 174),
                    new MapColor(191, 41, 182),
                        new Dimension(559.4807),
                    new MapFont(new Dimension(879.1391),
                            "Times New Roman",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        940.4390,
                    new MapColor(30, 125, 122),
                    new MapColor(162, 215, 42),
                        83.6598,
                    HorizontalAlignment.Center,
                        true,
                        557.1759,
                        new Dimension(842.5382),
                        true),
                new PopupTemplate("ratione culpa suscipit",
                        "velit",
                        ["commodi",
                            "sequi"],
                    [new FieldInfo("updatedAt",
                            "nostrum",
                            "ipsum",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Count)],
                    [new AttachmentsPopupContent("delectus eum dolor",
                            "et ex",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("sapiente esse illum")],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "comment",
                            "modi ipsa tempora",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "avatar",
                            "pariatur ea voluptate",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("unde quis expedita",
                            "https://picsum.photos/640/480/?image=970",
                            "ec6739c8-83f1-2bf3-bf4c-6410fd736a11",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "sed"),
                            new ActionButton("maiores necessitatibus voluptatem",
                                "https://picsum.photos/640/480/?image=246",
                                "cc3a870b-daf2-48c0-34ac-289df17bdb46",
                                () => { Console.WriteLine("repellat"); return Task.CompletedTask; },
                                "group",
                                true,
                                true,
                                true,
                                "exercitationem")]),
                    new AttributesDictionary(),
                    true,
                    "enim",
                    "ex",
                    new GraphicOrigin(Guid.NewGuid(),
                        "amet",
                        2)),
            new Graphic(new Extent(-53.4742,
                        -102.7702,
                        89.6044,
                        37.1656,
                        577.4772,
                        985.2219,
                        246.6323,
                        908.2478,
                    new SpatialReference(1,
                            "est",
                            "et",
                            "iure"),
                        true,
                        true),
                new TextSymbol("hic et aliquid",
                    new MapColor(209, 170, 195),
                    new MapColor(211, 218, 158),
                        new Dimension(19.5414),
                    new MapFont(new Dimension(909.7928),
                            "Helvetica",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        415.1810,
                    new MapColor(211, 229, 106),
                    new MapColor(68, 85, 40),
                        201.5170,
                    HorizontalAlignment.Right,
                        true,
                        337.6043,
                        new Dimension(226.6090),
                        true),
                new PopupTemplate("est corrupti a",
                        "rem",
                        ["quae",
                            "impedit"],
                    [new FieldInfo("category",
                            "laboriosam",
                            "sunt",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("email",
                            "porro",
                            "omnis",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new RelationshipPopupContent("fugit vel et",
                            "harum quia ipsa",
                            7,
                            "quae",
                        [new RelatedRecordsInfoFieldOrder("ipsa",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("et",
                            OrderBy.Desc)],
                            6)],
                    [new ExpressionInfo("return Date();",
                            "avatar",
                            "enim in quis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "password",
                            "et voluptates eligendi",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("magni placeat libero",
                            "https://picsum.photos/640/480/?image=1084",
                            "b4fffb47-5e94-29ef-6376-0a1898486bc8",
                            () => { Console.WriteLine("eligendi"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "esse")]),
                    new AttributesDictionary(),
                    true,
                    "voluptate",
                    "velit",
                    new GraphicOrigin(Guid.NewGuid(),
                        "sed",
                        8))]);
        ListMode testListMode = ListMode.Show;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.SoftLight;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.Population / $feature.Area;",
                        "voluptatum sit aspernatur"),
                ElevationInfoMode.RelativeToScene,
                    914.9156,
                ElevationUnit.Yards);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(-73.3427,
                    -125.0114,
                    -73.6340,
                    -22.0549,
                    301.9127,
                    154.5060,
                    773.1630,
                    197.4447,
                new SpatialReference(3,
                        "quos",
                        "laboriosam",
                        "cumque"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2017, 4, 18, 21, 20, 27),
                    new DateTime(2011, 3, 11, 6, 36, 4));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
