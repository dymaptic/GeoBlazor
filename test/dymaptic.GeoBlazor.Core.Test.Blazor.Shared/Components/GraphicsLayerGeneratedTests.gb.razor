@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("ullam distinctio enim")"
                        Opacity="@(0.0007)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(13557.1426)"
                        MaxScale="@(39847324.1835)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.Exclusion)"
                        Effect="@(new Effect("consequatur",
                            38068900.2740))"
                        FullExtent="@(new Extent(-4.9334,
                                -154.9305,
                                82.9702,
                                -59.0277,
                                700.5486,
                                825.2566,
                                191.3721,
                                155.4491,
                            new SpatialReference(8,
                                    "sunt",
                                    "omnis",
                                    "repellendus"),
                                true,
                                true))">
                        <TimeExtent 
                            Start="@(new DateTime(2013, 11, 24, 18, 34, 7))"
                            End="@(new DateTime(2008, 7, 27, 7, 18, 16))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Polyline([new MapPath([new MapPoint([675.6773,
                                        930.2900,
                                        256.1614,
                                        804.3807]),
                                    new MapPoint([987.8586,
                                        510.0203,
                                        529.4532,
                                        172.1189])])],
                                new SpatialReference(3,
                                        "reprehenderit",
                                        "aperiam",
                                        "pariatur"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("voluptatem fugit vitae",
                                new MapColor(92, 199, 193),
                                new MapColor(228, 62, 250),
                                    new Dimension(844.1521),
                                new MapFont(new Dimension(584.3030),
                                        "Georgia",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bolder,
                                    TextDecoration.None),
                                    270.5767,
                                new MapColor(49, 189, 118),
                                new MapColor(142, 89, 188),
                                    589.8880,
                                HorizontalAlignment.Left,
                                    true,
                                    926.5338,
                                    new Dimension(684.9721),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("omnis aliquid error",
                                    "non",
                                    ["non",
                                        "doloribus",
                                        "distinctio"],
                                [new FieldInfo("phone",
                                        "et",
                                        "adipisci",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("title",
                                        "laborum",
                                        "eum",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "libero",
                                            "iure quaerat quia"))],
                                [new ExpressionInfo("return $feature['FieldName'];",
                                        "category",
                                        "eligendi debitis quos",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("quam eaque aut",
                                        "https://picsum.photos/640/480/?image=982",
                                        "27277680-abeb-a25d-1478-407af744fb95",
                                        () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                        "name",
                                        true,
                                        true,
                                        true,
                                        "aut"),
                                new ActionToggle("est perspiciatis aliquam",
                                        "e2205d88-b82b-5f89-f0ad-339d379ee0eb",
                                        () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "group",
                                        "pariatur")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("officiis")"
                            AggregateGeometries="@("quis")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "aut",
                                7))">
                        </Graphic>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                    "dolorem fugiat facilis"))"
                            Mode="@(ElevationInfoMode.RelativeToGround)"
                            Offset="@(804.4699)"
                            Unit="@(ElevationUnit.Feet)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Polyline([new MapPath([new MapPoint([417.8254,
                            359.5359,
                            893.8045,
                            695.8567]),
                        new MapPoint([898.8343,
                            863.8159,
                            96.2125]),
                        new MapPoint([885.5343,
                            419.0987,
                            818.5829])]),
                        new MapPath([new MapPoint([811.9324,
                                317.6454,
                                75.5950]),
                            new MapPoint([882.4986,
                                966.4531])]),
                        new MapPath([new MapPoint([16.8116,
                                168.7187,
                                158.5430]),
                            new MapPoint([304.6076,
                                950.7924]),
                            new MapPoint([275.7653,
                                303.3612,
                                101.3335]),
                            new MapPoint([843.7828,
                                761.3923,
                                425.8726])])],
                    new SpatialReference(2,
                            "provident",
                            "cumque",
                            "qui"),
                        true,
                        true),
                new TextSymbol("impedit autem natus",
                    new MapColor(194, 138, 241),
                    new MapColor(21, 234, 226),
                        new Dimension(375.7684),
                    new MapFont(new Dimension(451.6801),
                            "Palatino",
                        MapFontStyle.Normal,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        739.2250,
                    new MapColor(161, 131, 82),
                    new MapColor(242, 65, 118),
                        265.9522,
                    HorizontalAlignment.Right,
                        true,
                        226.3660,
                        new Dimension(997.3715),
                        true),
                new PopupTemplate("consequuntur vero ipsa",
                        "est",
                        ["aut",
                            "et",
                            "quaerat"],
                    [new FieldInfo("status",
                            "iure",
                            "quod",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("phone",
                            "totam",
                            "corrupti",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "id",
                                "corporis ducimus laborum")),
                    new TextPopupContent("quia id odit"),
                    new FieldsPopupContent([new FieldInfo("group",
                                "laudantium",
                                "dolores",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("updatedAt",
                                "et",
                                "neque",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.DayShortMonthYear),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("title",
                                "illo",
                                "quisquam",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                            "expedita voluptates quis earum",
                            "est alias nam")],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "email",
                            "in cumque consequatur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "createdAt",
                            "numquam harum sint",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "token",
                            "sed corrupti quae",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("illo quis error",
                            "fe4174b8-5621-6894-8f94-17203b01ff77",
                            () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "enim"),
                    new ActionButton("cupiditate consectetur non",
                            "https://picsum.photos/640/480/?image=840",
                            "b6899b3b-c1b1-be68-2b95-7013a701a694",
                            () => { Console.WriteLine("repudiandae"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "laborum")]),
                    new AttributesDictionary(),
                    true,
                    "quidem",
                    "eveniet",
                    new GraphicOrigin(Guid.NewGuid(),
                        "et",
                        4)),
            new Graphic(new Extent(-54.4174,
                        55.0366,
                        -84.2709,
                        -81.0764,
                        590.2298,
                        909.4910,
                        585.5381,
                        539.5324,
                    new SpatialReference(8,
                            "nisi",
                            "vero",
                            "velit"),
                        true,
                        true),
                new TextSymbol("in temporibus velit",
                    new MapColor(87, 5, 228),
                    new MapColor(148, 215, 52),
                        new Dimension(46.8157),
                    new MapFont(new Dimension(591.0739),
                            "Palatino",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.None),
                        393.3154,
                    new MapColor(252, 21, 162),
                    new MapColor(117, 245, 210),
                        328.8703,
                    HorizontalAlignment.Right,
                        true,
                        999.0733,
                        new Dimension(991.5289),
                        true),
                new PopupTemplate("modi facilis incidunt",
                        "fuga",
                        ["minima",
                            "doloribus",
                            "neque"],
                    [new FieldInfo("title",
                            "eveniet",
                            "blanditiis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("updatedAt",
                            "sunt",
                            "minus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("updatedAt",
                            "quis",
                            "aut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("name",
                            "vel",
                            "molestiae",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new RelationshipPopupContent("assumenda dolores consequatur",
                            "tenetur aut laborum non est",
                            6,
                            "est",
                        [new RelatedRecordsInfoFieldOrder("veritatis",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("illum",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("neque",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("qui",
                            OrderBy.Asc)],
                            6)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "phone",
                            "expedita enim accusamus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "comment",
                            "vitae aut aspernatur",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("nobis aut in",
                            "eb5bbe0d-ba71-7c27-2080-c61ee34fd857",
                            () => { Console.WriteLine("natus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "et"),
                    new ActionButton("ex nobis aut",
                            "https://picsum.photos/640/480/?image=373",
                            "1dee90c2-578b-b914-bba9-1681b58a37f4",
                            () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "eum"),
                    new ActionToggle("sapiente nihil corrupti",
                            "8bb1a6fc-8c1b-f375-6006-1815bbfb4e66",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "voluptates")]),
                    new AttributesDictionary(),
                    true,
                    "distinctio",
                    "incidunt",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ad",
                        8))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Polyline([new MapPath([new MapPoint([598.3890,
                            226.8989,
                            896.0160]),
                        new MapPoint([508.7846,
                            986.9282,
                            184.5196,
                            868.1332]),
                        new MapPoint([252.7609,
                            165.0885,
                            663.9235])])],
                    new SpatialReference(3,
                            "rerum",
                            "perferendis",
                            "suscipit"),
                        true,
                        true),
                new TextSymbol("corrupti optio vero",
                    new MapColor(216, 141, 194),
                    new MapColor(105, 106, 241),
                        new Dimension(435.4413),
                    new MapFont(new Dimension(388.5825),
                            "Bookman",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.LineThrough),
                        718.6616,
                    new MapColor(174, 223, 93),
                    new MapColor(0, 176, 147),
                        412.8233,
                    HorizontalAlignment.Left,
                        true,
                        143.5800,
                        new Dimension(970.3820),
                        true),
                new PopupTemplate("sapiente aperiam vel",
                        "qui",
                        ["eius",
                            "debitis",
                            "temporibus",
                            "odio"],
                    [new FieldInfo("id",
                            "quibusdam",
                            "sunt",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new AttachmentsPopupContent("atque sunt ea",
                            "nobis et recusandae hic",
                            AttachmentsPopupContentDisplayType.Preview),
                    new AttachmentsPopupContent("iusto quas mollitia",
                            "voluptatem et et est incidunt et minus",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "phone",
                            "veritatis adipisci voluptatum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "email",
                            "ut molestiae saepe",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("distinctio voluptas et",
                            "ed779d7a-7e69-6685-b2d7-0b52ab899a99",
                            () => { Console.WriteLine("modi"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "nam"),
                    new ActionButton("voluptas fugit dicta",
                            "https://picsum.photos/640/480/?image=353",
                            "a7b40231-4101-4e69-8ffd-bdbdccc69970",
                            () => { Console.WriteLine("aliquam"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "modi"),
                    new ActionToggle("asperiores est tenetur",
                            "74bc8828-4a3f-2d73-af47-50210031874f",
                            () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "sequi")]),
                    new AttributesDictionary(),
                    true,
                    "molestias",
                    "consequuntur",
                    new GraphicOrigin(Guid.NewGuid(),
                        "eum",
                        4)),
            new Graphic(new Polygon([new MapPath([new MapPoint([40.9059,
                            220.7635,
                            443.4556,
                            957.6764]),
                        new MapPoint([691.6746,
                            802.8542,
                            398.3217,
                            892.9066]),
                        new MapPoint([567.1765,
                            947.2697,
                            522.1720,
                            602.2653]),
                        new MapPoint([240.5992,
                            743.8350])]),
                        new MapPath([new MapPoint([585.4796,
                                615.9411,
                                230.8537]),
                            new MapPoint([215.1327,
                                535.4697])]),
                        new MapPath([new MapPoint([528.4776,
                                224.3187,
                                420.8945]),
                            new MapPoint([346.0417,
                                375.6170,
                                937.5502,
                                709.5360]),
                            new MapPoint([407.1769,
                                370.4715,
                                738.8948]),
                            new MapPoint([423.5875,
                                498.4679,
                                473.3992,
                                898.5607])]),
                        new MapPath([new MapPoint([154.6599,
                                631.2509]),
                            new MapPoint([295.0130,
                                276.2411])])],
                    new SpatialReference(3,
                            "libero",
                            "soluta",
                            "rem"),
                    new Point(130.7874,
                            -41.8001,
                            2.0086,
                            -2.9592,
                            103.6719,
                        new SpatialReference(6,
                                "quod",
                                "eos",
                                "et"),
                            true,
                            true,
                            440.2096),
                        true,
                        true,
                        true),
                new TextSymbol("ut officiis iure",
                    new MapColor(111, 19, 218),
                    new MapColor(184, 62, 180),
                        new Dimension(42.0248),
                    new MapFont(new Dimension(217.6437),
                            "Garamond",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        293.7455,
                    new MapColor(95, 183, 26),
                    new MapColor(86, 4, 248),
                        969.2629,
                    HorizontalAlignment.Left,
                        true,
                        723.1713,
                        new Dimension(20.0068),
                        true),
                new PopupTemplate("eveniet aliquid placeat",
                        "at",
                        ["modi",
                            "aut"],
                    [new FieldInfo("email",
                            "molestias",
                            "velit",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("email",
                            "sapiente",
                            "dolorum",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("comment",
                            "voluptatem",
                            "ut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "aperiam",
                                "mollitia veniam expedita")),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                "et",
                                "aliquam deserunt iste")),
                    new RelationshipPopupContent("est et id",
                            "autem necessitatibus dignissimos et",
                            1,
                            "et",
                        [new RelatedRecordsInfoFieldOrder("dolor",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("consectetur",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("ea",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("dolorem",
                            OrderBy.Desc)],
                            4)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "title",
                            "quam doloremque et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "createdAt",
                            "praesentium assumenda aliquid",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "updatedAt",
                            "dolores consequatur optio",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "comment",
                            "voluptatem qui aspernatur",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("culpa et aut",
                            "https://picsum.photos/640/480/?image=47",
                            "ecb3251f-3e86-ba38-4925-2cde73c970c5",
                            () => { Console.WriteLine("quasi"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "beatae"),
                    new ActionToggle("at consectetur distinctio",
                            "c8c03ff5-91aa-d283-1f4c-a384199b1aad",
                            () => { Console.WriteLine("voluptate"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "odit"),
                    new ActionToggle("expedita facere enim",
                            "f2c95ad5-5852-b93e-1add-9e19668ddb29",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "ut")]),
                    new AttributesDictionary(),
                    true,
                    "laborum",
                    "aliquam",
                    new GraphicOrigin(Guid.NewGuid(),
                        "totam",
                        6))]);
        ListMode testListMode = ListMode.Show;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Minus;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                        "est omnis odit"),
                ElevationInfoMode.RelativeToScene,
                    192.5016,
                ElevationUnit.Inches);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(-148.9627,
                    -139.0907,
                    24.6016,
                    15.0251,
                    193.9585,
                    781.9103,
                    785.6066,
                    386.3481,
                new SpatialReference(8,
                        "aut",
                        "dicta",
                        "sapiente"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2004, 1, 23, 10, 20, 16),
                    new DateTime(2006, 3, 6, 10, 50, 25));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
