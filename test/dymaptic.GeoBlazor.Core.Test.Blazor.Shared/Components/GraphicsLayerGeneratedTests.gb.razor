@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("in ratione sed")"
                        Opacity="@(0.3876)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(26034.3345)"
                        MaxScale="@(11877839.9027)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.HardLight)"
                        Effect="@(new Effect("voluptatem",
                            39020941.6173))">
                        <TimeExtent 
                            Start="@(new DateTime(2001, 11, 17, 0, 6, 11))"
                            End="@(new DateTime(2007, 8, 2, 19, 6, 38))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Polygon([new MapPath([new MapPoint([954.3166,
                                        858.4767]),
                                    new MapPoint([348.4384])]),
                                    new MapPath([new MapPoint([364.8397,
                                            547.2057]),
                                        new MapPoint([938.1996])])],
                                new SpatialReference(3,
                                        "assumenda",
                                        "facere",
                                        "assumenda"),
                                new Point(-115.0435,
                                        79.4371,
                                        32.8675,
                                        10.9398,
                                        848.4246,
                                    new SpatialReference(2,
                                            "amet",
                                            "atque",
                                            "sed"),
                                        true,
                                        true,
                                        172.4241),
                                    true,
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("quia eum sit",
                                new MapColor(108, 149, 139),
                                new MapColor(0, 171, 60),
                                    new Dimension(785.6726),
                                new MapFont(new Dimension(458.6881),
                                        "Times New Roman",
                                    MapFontStyle.Normal,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    936.8075,
                                new MapColor(192, 191, 115),
                                new MapColor(48, 147, 29),
                                    825.0752,
                                HorizontalAlignment.Right,
                                    true,
                                    707.4582,
                                    new Dimension(369.6686),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("quo facilis animi",
                                    "ut",
                                    ["dolores"],
                                [new FieldInfo("status",
                                        "sequi",
                                        "quia",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                [new FieldsPopupContent([new FieldInfo("title",
                                            "in",
                                            "et",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.ShortDateLeShortTime),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                        "ea fuga",
                                        "quia magni quo"),
                                new TextPopupContent("ea optio saepe")],
                                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "id",
                                        "quia placeat quibusdam",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "token",
                                        "atque consequuntur quia",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("voluptas repellat voluptas",
                                        "https://picsum.photos/640/480/?image=946",
                                        "b60de885-cb71-2ff6-37a6-2af655500836",
                                        () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                        "id",
                                        true,
                                        true,
                                        true,
                                        "culpa"),
                                        new ActionButton("non modi vero",
                                            "https://picsum.photos/640/480/?image=108",
                                            "849e6b03-e1fd-a14f-e9c9-b659a4e3b5e3",
                                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                            "password",
                                            true,
                                            true,
                                            true,
                                            "soluta")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("laboriosam")"
                            AggregateGeometries="@("similique")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "explicabo",
                                1))">
                        </Graphic>
                        <Extent 
                            Xmax="@(134.3752)"
                            Xmin="@(-79.3376)"
                            Ymax="@(-65.0322)"
                            Ymin="@(29.9425)"
                            Zmax="@(173.7587)"
                            Zmin="@(914.4179)"
                            Mmax="@(99.5923)"
                            Mmin="@(321.4526)"
                            SpatialReference="@(new SpatialReference(6,
                                    "consectetur",
                                    "et",
                                    "officia"))"
                            HasM="@(true)"
                            HasZ="@(true)">
                        </Extent>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("return Date();",
                                    "laboriosam nulla impedit"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(275.4150)"
                            Unit="@(ElevationUnit.UsFeet)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Point(49.4172,
                        -60.5531,
                        64.9397,
                        -84.3893,
                        521.5769,
                    new SpatialReference(9,
                            "modi",
                            "voluptatum",
                            "quae"),
                        true,
                        true,
                        827.5478),
                new TextSymbol("quibusdam rem aut",
                    new MapColor(11, 16, 38),
                    new MapColor(99, 197, 250),
                        new Dimension(423.3870),
                    new MapFont(new Dimension(745.0902),
                            "Arial",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.None),
                        961.0792,
                    new MapColor(4, 195, 81),
                    new MapColor(152, 11, 102),
                        637.3390,
                    HorizontalAlignment.Center,
                        true,
                        123.4992,
                        new Dimension(859.3013),
                        true),
                new PopupTemplate("occaecati cupiditate perferendis",
                        "reiciendis",
                        ["sed",
                            "repudiandae"],
                    [new FieldInfo("updatedAt",
                            "vero",
                            "corrupti",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new AttachmentsPopupContent("repellendus et provident",
                            "quis et minus",
                            AttachmentsPopupContentDisplayType.Auto),
                    new MediaPopupContent("culpa culpa rerum",
                            "fuga aut aut non",
                        [new ColumnChartMediaInfo("dolorum totam ut",
                                "ab",
                                "perferendis nulla cumque",
                            new ChartMediaInfoValue(["dolorum"],
                                    "praesentium",
                                    "sed",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "repudiandae",
                                        523.4845),
                                new ChartMediaInfoValueSeries("name",
                                        "laudantium",
                                        604.8643)],
                                [new MapColor(58, 20, 208),
                                new MapColor(171, 155, 115)])),
                        new BarChartMediaInfo("illum ut qui",
                                "velit",
                                "dolore iste cumque",
                            new ChartMediaInfoValue(["debitis"],
                                    "consequatur",
                                    "magnam",
                                [new ChartMediaInfoValueSeries("id",
                                        "ut",
                                        421.5656)],
                                [new MapColor(97, 54, 17)]))],
                            9)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "id",
                            "nam quia sed",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("excepturi reprehenderit qui",
                            "https://picsum.photos/640/480/?image=916",
                            "41d6057a-0b98-d5d1-55ba-cd6bd0c571de",
                            () => { Console.WriteLine("deleniti"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "enim"),
                            new ActionButton("voluptatem omnis architecto",
                                "https://picsum.photos/640/480/?image=798",
                                "aa0b93f0-8f13-8b62-0456-16a3dc0cdd93",
                                () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                "status",
                                true,
                                true,
                                true,
                                "quia")]),
                    new AttributesDictionary(),
                    true,
                    "esse",
                    "voluptatem",
                    new GraphicOrigin(Guid.NewGuid(),
                        "temporibus",
                        5)),
            new Graphic(new Polyline([new MapPath([new MapPoint([747.5608,
                            983.5868])])],
                    new SpatialReference(4,
                            "voluptatem",
                            "molestiae",
                            "non"),
                        true,
                        true),
                new TextSymbol("blanditiis perferendis dolore",
                    new MapColor(12, 84, 155),
                    new MapColor(80, 39, 20),
                        new Dimension(672.6752),
                    new MapFont(new Dimension(823.9284),
                            "Arial",
                        MapFontStyle.Normal,
                        FontWeight.Bolder,
                        TextDecoration.LineThrough),
                        593.5460,
                    new MapColor(167, 235, 128),
                    new MapColor(119, 199, 130),
                        782.8138,
                    HorizontalAlignment.Right,
                        true,
                        739.4459,
                        new Dimension(241.8429),
                        true),
                new PopupTemplate("amet necessitatibus eligendi",
                        "similique",
                        ["cumque",
                            "aspernatur"],
                    [new FieldInfo("updatedAt",
                            "non",
                            "exercitationem",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("id",
                            "ipsum",
                            "aut",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Max)],
                    [new TextPopupContent("beatae assumenda sint"),
                    new FieldsPopupContent([new FieldInfo("updatedAt",
                                "qui",
                                "et",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("name",
                                "aperiam",
                                "voluptatem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Count)],
                            "similique nesciunt itaque eos",
                            "laudantium odio magnam")],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "updatedAt",
                            "ut numquam itaque",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("natus doloribus saepe",
                            "https://picsum.photos/640/480/?image=712",
                            "55c9e5f2-2439-365e-e600-38fe214a19e4",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "qui")]),
                    new AttributesDictionary(),
                    true,
                    "et",
                    "ullam",
                    new GraphicOrigin(Guid.NewGuid(),
                        "commodi",
                        4))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Point(-14.0005,
                        -12.9457,
                        -42.2733,
                        -47.9764,
                        223.9194,
                    new SpatialReference(6,
                            "quo",
                            "sit",
                            "molestiae"),
                        true,
                        true,
                        415.8943),
                new TextSymbol("nemo nam at",
                    new MapColor(81, 110, 13),
                    new MapColor(163, 8, 116),
                        new Dimension(96.4953),
                    new MapFont(new Dimension(36.8722),
                            "Garamond",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        739.5786,
                    new MapColor(76, 41, 41),
                    new MapColor(119, 18, 137),
                        99.5251,
                    HorizontalAlignment.Center,
                        true,
                        684.6436,
                        new Dimension(343.2667),
                        true),
                new PopupTemplate("officia ad sapiente",
                        "asperiores",
                        ["eum"],
                    [new FieldInfo("updatedAt",
                            "eum",
                            "et",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Var)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "nulla",
                                "inventore enim ex")),
                    new MediaPopupContent("quis ex reprehenderit",
                            "libero consequatur",
                        [new BarChartMediaInfo("et cupiditate suscipit",
                                "quae",
                                "id accusamus quia",
                            new ChartMediaInfoValue(["minima"],
                                    "nemo",
                                    "culpa",
                                [new ChartMediaInfoValueSeries("group",
                                        "dignissimos",
                                        196.0911),
                                new ChartMediaInfoValueSeries("comment",
                                        "qui",
                                        769.4585)],
                                [new MapColor(180, 177, 136)])),
                        new LineChartMediaInfo("vel nisi ipsam",
                                "qui",
                                "consectetur adipisci sunt",
                            new ChartMediaInfoValue(["aliquid"],
                                    "recusandae",
                                    "incidunt",
                                [new ChartMediaInfoValueSeries("token",
                                        "ex",
                                        923.6060),
                                new ChartMediaInfoValueSeries("group",
                                        "ea",
                                        806.9577)],
                                [new MapColor(165, 184, 158),
                                new MapColor(10, 112, 130)]))],
                            8)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "name",
                            "omnis dicta corrupti",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("eius voluptatibus velit",
                            "https://picsum.photos/640/480/?image=994",
                            "6ca6111e-f32a-1bc8-83f2-f5ca76330ab0",
                            () => { Console.WriteLine("quaerat"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "tempore"),
                            new ActionButton("sint pariatur voluptatum",
                                "https://picsum.photos/640/480/?image=1058",
                                "a7dcc7fd-ddb5-1742-3095-29793d67ed9f",
                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "voluptatem")]),
                    new AttributesDictionary(),
                    true,
                    "ut",
                    "provident",
                    new GraphicOrigin(Guid.NewGuid(),
                        "autem",
                        8)),
            new Graphic(new Polyline([new MapPath([new MapPoint([188.0946,
                            550.2211])]),
                        new MapPath([new MapPoint([108.6902,
                                584.2323]),
                            new MapPoint([105.0686])])],
                    new SpatialReference(6,
                            "cum",
                            "commodi",
                            "veniam"),
                        true,
                        true),
                new TextSymbol("dolor et dolor",
                    new MapColor(22, 29, 169),
                    new MapColor(134, 81, 212),
                        new Dimension(277.1344),
                    new MapFont(new Dimension(539.6787),
                            "Bookman",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        194.7475,
                    new MapColor(73, 76, 4),
                    new MapColor(168, 171, 129),
                        352.7664,
                    HorizontalAlignment.Right,
                        true,
                        999.5432,
                        new Dimension(70.2804),
                        true),
                new PopupTemplate("maiores velit ut",
                        "expedita",
                        ["ut",
                            "et"],
                    [new FieldInfo("title",
                            "laudantium",
                            "expedita",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new MediaPopupContent("aspernatur odio dolores",
                            "minima nostrum adipisci consectetur",
                        [new LineChartMediaInfo("aliquam architecto consequatur",
                                "aut",
                                "qui sapiente accusamus",
                            new ChartMediaInfoValue(["consequuntur",
                                    "ratione"],
                                    "ea",
                                    "eius",
                                [new ChartMediaInfoValueSeries("phone",
                                        "maiores",
                                        499.7536),
                                new ChartMediaInfoValueSeries("comment",
                                        "sed",
                                        900.7535)],
                                [new MapColor(199, 156, 63),
                                new MapColor(27, 216, 239)])),
                        new BarChartMediaInfo("adipisci autem dolores",
                                "inventore",
                                "et excepturi et",
                            new ChartMediaInfoValue(["occaecati"],
                                    "qui",
                                    "illum",
                                [new ChartMediaInfoValueSeries("title",
                                        "nesciunt",
                                        656.6220),
                                new ChartMediaInfoValueSeries("comment",
                                        "voluptatibus",
                                        990.7629)],
                                [new MapColor(108, 95, 205),
                                new MapColor(231, 118, 153)]))],
                            6),
                    new FieldsPopupContent([new FieldInfo("password",
                                "architecto",
                                "sint",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("token",
                                "amet",
                                "fugiat",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                            "consectetur sapiente expedita",
                            "culpa et qui")],
                    [new ExpressionInfo("return Date();",
                            "updatedAt",
                            "neque totam cumque",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "avatar",
                            "quia odit quidem",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("nihil repellat quo",
                            "https://picsum.photos/640/480/?image=946",
                            "2c611974-5f2b-cc8f-c1f8-74b2b7483ee9",
                            () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "odio"),
                            new ActionButton("in molestiae velit",
                                "https://picsum.photos/640/480/?image=87",
                                "186f3fbc-dc2f-6c08-463c-36d269657f94",
                                () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                "updatedAt",
                                true,
                                true,
                                true,
                                "sequi")]),
                    new AttributesDictionary(),
                    true,
                    "nihil",
                    "voluptas",
                    new GraphicOrigin(Guid.NewGuid(),
                        "saepe",
                        2))]);
        ListMode testListMode = ListMode.Show;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Reflect;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("var area = Geometry($feature).area; return area;",
                        "impedit ipsum dicta"),
                ElevationInfoMode.RelativeToScene,
                    914.0034,
                ElevationUnit.Inches);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(-84.1741,
                    98.4123,
                    61.2450,
                    79.4958,
                    948.8638,
                    891.2552,
                    941.3840,
                    543.8437,
                new SpatialReference(9,
                        "aut",
                        "natus",
                        "numquam"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2009, 6, 27, 6, 4, 5),
                    new DateTime(2003, 3, 1, 3, 16, 44));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
