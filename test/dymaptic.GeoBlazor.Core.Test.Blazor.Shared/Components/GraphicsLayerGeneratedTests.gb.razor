@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("et qui est")"
                        Opacity="@(0.6557)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(45083.1779)"
                        MaxScale="@(33383985.1376)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.Saturation)"
                        Effect="@(new Effect("magni",
                            48128504.1097))"
                        FullExtent="@(new Extent(46.3900,
                                -141.6604,
                                -51.3048,
                                -43.3781,
                                555.6203,
                                88.4666,
                                185.1067,
                                537.2491,
                            new SpatialReference(3,
                                    "necessitatibus",
                                    "omnis",
                                    "aut"),
                                true,
                                true))">
                        <TimeExtent 
                            Start="@(new DateTime(2023, 11, 18, 15, 11, 14))"
                            End="@(new DateTime(2022, 6, 1, 20, 45, 5))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Point(117.6073,
                                    -13.0156,
                                    -48.7765,
                                    -89.3719,
                                    138.8494,
                                new SpatialReference(6,
                                        "sed",
                                        "sequi",
                                        "iure"),
                                    true,
                                    true,
                                    708.8253))"
                            Symbol="@(new TextSymbol("aut culpa dolorum",
                                new MapColor(154, 103, 230),
                                new MapColor(117, 151, 173),
                                    new Dimension(551.0588),
                                new MapFont(new Dimension(552.3069),
                                        "Palatino",
                                    MapFontStyle.Italic,
                                    FontWeight.Bolder,
                                    TextDecoration.Underline),
                                    137.7163,
                                new MapColor(184, 69, 228),
                                new MapColor(107, 33, 41),
                                    969.7861,
                                HorizontalAlignment.Left,
                                    true,
                                    492.2153,
                                    new Dimension(835.9972),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("similique quae cum",
                                    "qui",
                                    ["ad",
                                        "nostrum"],
                                [new FieldInfo("group",
                                        "sunt",
                                        "excepturi",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.ShortDateLeLongTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("title",
                                        "ut",
                                        "id",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("createdAt",
                                        "exercitationem",
                                        "qui",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("email",
                                        "aut",
                                        "illo",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.ShortDateLe),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new AttachmentsPopupContent("enim et enim",
                                        "eaque aut optio consequatur",
                                        AttachmentsPopupContentDisplayType.Preview)],
                                [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "email",
                                        "qui qui itaque",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "createdAt",
                                        "mollitia cupiditate nulla",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "avatar",
                                        "nam earum voluptas",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "group",
                                        "eveniet error alias",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("et hic culpa",
                                        "https://picsum.photos/640/480/?image=14",
                                        "162d0b12-ffd0-7e47-e48d-354eb4eb7ca8",
                                        () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                        "createdAt",
                                        true,
                                        true,
                                        true,
                                        "vitae"),
                                new ActionButton("sit tempore ea",
                                        "https://picsum.photos/640/480/?image=972",
                                        "d8a51a6c-4dd8-9f52-1108-5434208462ac",
                                        () => { Console.WriteLine("maxime"); return Task.CompletedTask; },
                                        "name",
                                        true,
                                        true,
                                        true,
                                        "ducimus"),
                                new ActionButton("exercitationem error maiores",
                                        "https://picsum.photos/640/480/?image=484",
                                        "4a9f5c24-b12d-57ed-e2d1-9e4a47de8165",
                                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "sequi")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("porro")"
                            AggregateGeometries="@("et")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "rerum",
                                3))">
                        </Graphic>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.Population / $feature.Area;",
                                    "dolores dolorem exercitationem"))"
                            Mode="@(ElevationInfoMode.RelativeToScene)"
                            Offset="@(266.7243)"
                            Unit="@(ElevationUnit.Miles)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Polyline([new MapPath([new MapPoint([926.4740,
                            809.9705]),
                        new MapPoint([135.0290,
                            682.0529,
                            173.9792,
                            418.0466]),
                        new MapPoint([482.2734,
                            495.0309,
                            316.7358])]),
                        new MapPath([new MapPoint([453.7827,
                                789.8366,
                                363.6770,
                                252.3441]),
                            new MapPoint([617.4562,
                                808.3135,
                                977.6308,
                                695.9861])])],
                    new SpatialReference(4,
                            "beatae",
                            "at",
                            "eos"),
                        true,
                        true),
                new TextSymbol("impedit deleniti numquam",
                    new MapColor(88, 193, 128),
                    new MapColor(168, 224, 155),
                        new Dimension(336.8269),
                    new MapFont(new Dimension(786.1881),
                            "Courier New",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        917.8016,
                    new MapColor(6, 245, 216),
                    new MapColor(76, 117, 163),
                        287.3236,
                    HorizontalAlignment.Right,
                        true,
                        9.8679,
                        new Dimension(420.9153),
                        true),
                new PopupTemplate("veniam corrupti dolor",
                        "eius",
                        ["magni",
                            "ducimus",
                            "optio"],
                    [new FieldInfo("group",
                            "amet",
                            "alias",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("phone",
                            "aut",
                            "perferendis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("group",
                            "consectetur",
                            "similique",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                "beatae",
                                "impedit et repellat")),
                    new FieldsPopupContent([new FieldInfo("email",
                                "ut",
                                "expedita",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("password",
                                "voluptas",
                                "vitae",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("token",
                                "aut",
                                "at",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("token",
                                "rerum",
                                "non",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                            "qui porro nam et dolor",
                            "perferendis voluptatem libero"),
                    new MediaPopupContent("perferendis ex vel",
                            "adipisci nesciunt officia et",
                        [new BarChartMediaInfo("eum quo asperiores",
                                "vero",
                                "eos corrupti totam",
                            new ChartMediaInfoValue(["est",
                                    "ut",
                                    "magnam"],
                                    "adipisci",
                                    "nesciunt",
                                [new ChartMediaInfoValueSeries("category",
                                        "porro",
                                        987.6854),
                                new ChartMediaInfoValueSeries("name",
                                        "autem",
                                        432.4828)],
                                [new MapColor(101, 226, 111)])),
                        new PieChartMediaInfo("sequi qui quis",
                                "exercitationem",
                                "et soluta iste",
                            new ChartMediaInfoValue(["quia",
                                    "id",
                                    "repellat",
                                    "facilis"],
                                    "et",
                                    "quas",
                                [new ChartMediaInfoValueSeries("id",
                                        "rerum",
                                        328.9502)],
                                [new MapColor(13, 79, 16)])),
                        new ImageMediaInfo("consequatur eos quo",
                                "ex",
                                "omnis eos unde",
                            new ImageMediaInfoValue("http://cordelia.com",
                                    "https://adelbert.com"),
                                836.8118),
                        new PieChartMediaInfo("nobis vitae aut",
                                "ad",
                                "reprehenderit sunt dignissimos",
                            new ChartMediaInfoValue(["laboriosam",
                                    "ullam",
                                    "labore"],
                                    "et",
                                    "nisi",
                                [new ChartMediaInfoValueSeries("name",
                                        "sequi",
                                        809.5316)],
                                [new MapColor(43, 155, 247),
                                new MapColor(244, 73, 178),
                                new MapColor(99, 33, 146),
                                new MapColor(22, 41, 140)]))],
                            7)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "token",
                            "aut provident minus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "name",
                            "animi in rerum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "updatedAt",
                            "deleniti pariatur pariatur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "comment",
                            "ut ducimus quod",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("sint consequatur impedit",
                            "https://picsum.photos/640/480/?image=485",
                            "fd4682c1-4197-e763-fa6c-a88d3df5c047",
                            () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "tempore"),
                    new ActionButton("qui quidem id",
                            "https://picsum.photos/640/480/?image=561",
                            "110b4279-8095-5cd4-6e2f-3b2ee8870de4",
                            () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "quo")]),
                    new AttributesDictionary(),
                    true,
                    "earum",
                    "qui",
                    new GraphicOrigin(Guid.NewGuid(),
                        "cum",
                        6)),
            new Graphic(new Extent(-33.4331,
                        -127.2409,
                        -66.7002,
                        -11.3376,
                        503.4497,
                        158.0773,
                        598.6932,
                        280.8729,
                    new SpatialReference(5,
                            "quia",
                            "pariatur",
                            "fuga"),
                        true,
                        true),
                new TextSymbol("dolore libero facere",
                    new MapColor(100, 96, 69),
                    new MapColor(84, 195, 30),
                        new Dimension(15.7265),
                    new MapFont(new Dimension(580.7501),
                            "Palatino",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        784.2995,
                    new MapColor(17, 162, 43),
                    new MapColor(48, 49, 90),
                        927.1480,
                    HorizontalAlignment.Right,
                        true,
                        357.2418,
                        new Dimension(625.6895),
                        true),
                new PopupTemplate("aut eos consequatur",
                        "et",
                        ["ratione",
                            "maxime",
                            "quas"],
                    [new FieldInfo("email",
                            "laudantium",
                            "id",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("createdAt",
                            "dicta",
                            "id",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new RelationshipPopupContent("in suscipit quae",
                            "et nihil totam ipsam molestiae",
                            6,
                            "optio",
                        [new RelatedRecordsInfoFieldOrder("dolorum",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("magni",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("dolorem",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("qui",
                            OrderBy.Asc)],
                            3)],
                    [new ExpressionInfo("return $feature.Name;",
                            "email",
                            "iste veniam inventore",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "name",
                            "necessitatibus labore expedita",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "comment",
                            "enim eum dolorum",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("distinctio eligendi praesentium",
                            "9bdbce4d-42cb-90e4-12e7-d8c335fe76ba",
                            () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "officiis")]),
                    new AttributesDictionary(),
                    true,
                    "rerum",
                    "quia",
                    new GraphicOrigin(Guid.NewGuid(),
                        "iure",
                        1)),
            new Graphic(new Polygon([new MapPath([new MapPoint([688.0807,
                            330.4810]),
                        new MapPoint([979.1060,
                            391.5791,
                            986.5577,
                            692.7559])])],
                    new SpatialReference(7,
                            "harum",
                            "facere",
                            "repellendus"),
                    new Point(-103.5811,
                            -23.6476,
                            175.6752,
                            -25.7240,
                            989.7443,
                        new SpatialReference(7,
                                "sed",
                                "sint",
                                "culpa"),
                            true,
                            true,
                            647.7309),
                        true,
                        true,
                        true),
                new TextSymbol("quis iste assumenda",
                    new MapColor(186, 161, 219),
                    new MapColor(1, 227, 188),
                        new Dimension(608.4280),
                    new MapFont(new Dimension(294.0043),
                            "Courier New",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        455.4112,
                    new MapColor(156, 16, 15),
                    new MapColor(24, 217, 102),
                        553.3051,
                    HorizontalAlignment.Left,
                        true,
                        787.3327,
                        new Dimension(741.6779),
                        true),
                new PopupTemplate("inventore blanditiis occaecati",
                        "aut",
                        ["omnis",
                            "aut",
                            "est"],
                    [new FieldInfo("status",
                            "accusamus",
                            "corrupti",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("name",
                            "omnis",
                            "tenetur",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "qui",
                                "commodi sed quis"))],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "createdAt",
                            "eligendi et minus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "comment",
                            "molestias quia earum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "status",
                            "aliquid aut veniam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("aspernatur ex ea",
                            "fae2771c-a5c7-4f45-40db-5af441d75a62",
                            () => { Console.WriteLine("eaque"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "nemo"),
                    new ActionButton("quae quia enim",
                            "https://picsum.photos/640/480/?image=1036",
                            "11f6f72a-bd8a-907a-94d5-61ca42a5858c",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "aut"),
                    new ActionToggle("hic architecto voluptates",
                            "255d1ba8-0a33-5a38-53a4-734c007f9786",
                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "atque")]),
                    new AttributesDictionary(),
                    true,
                    "tempore",
                    "odit",
                    new GraphicOrigin(Guid.NewGuid(),
                        "sint",
                        2)),
            new Graphic(new Polyline([new MapPath([new MapPoint([886.2301,
                            636.2160,
                            223.2108]),
                        new MapPoint([627.4113,
                            44.0994,
                            674.8465,
                            15.0562]),
                        new MapPoint([588.6958,
                            69.1779])]),
                        new MapPath([new MapPoint([235.6331,
                                709.7800,
                                485.6872]),
                            new MapPoint([107.5709,
                                556.7296,
                                338.7934,
                                953.5961])]),
                        new MapPath([new MapPoint([646.4946,
                                570.4871,
                                727.6744,
                                106.1382]),
                            new MapPoint([84.2740,
                                123.1953,
                                537.6342,
                                549.8089]),
                            new MapPoint([496.0716,
                                637.6541,
                                217.4452,
                                893.5636])]),
                        new MapPath([new MapPoint([683.8745,
                                769.5179,
                                540.6189,
                                804.0097]),
                            new MapPoint([335.0660,
                                451.5789,
                                586.9283,
                                658.9675]),
                            new MapPoint([580.2702,
                                905.5126,
                                281.8717,
                                879.4321]),
                            new MapPoint([808.3345,
                                434.6517,
                                287.8114,
                                885.3388])])],
                    new SpatialReference(3,
                            "et",
                            "eveniet",
                            "qui"),
                        true,
                        true),
                new TextSymbol("rerum et non",
                    new MapColor(133, 77, 49),
                    new MapColor(172, 204, 223),
                        new Dimension(36.2094),
                    new MapFont(new Dimension(134.7117),
                            "Georgia",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        399.6899,
                    new MapColor(27, 136, 251),
                    new MapColor(229, 1, 166),
                        173.9594,
                    HorizontalAlignment.Center,
                        true,
                        596.1786,
                        new Dimension(193.6409),
                        true),
                new PopupTemplate("atque fugit culpa",
                        "ducimus",
                        ["officiis",
                            "aliquid"],
                    [new FieldInfo("password",
                            "beatae",
                            "quasi",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("group",
                            "consequatur",
                            "illo",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("status",
                            "accusantium",
                            "neque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthYear),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("title",
                            "sint",
                            "earum",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new RelationshipPopupContent("dolores ad tempore",
                            "vitae animi et reiciendis fugiat dignissimos adipisci",
                            1,
                            "repellendus",
                        [new RelatedRecordsInfoFieldOrder("sit",
                            OrderBy.Asc)],
                            6)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "password",
                            "consequuntur aut illo",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "title",
                            "dolores optio consequuntur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "group",
                            "et enim ducimus",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("dolorem et assumenda",
                            "a231aa33-7429-e4e8-3006-5534af5af855",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "et")]),
                    new AttributesDictionary(),
                    true,
                    "et",
                    "accusamus",
                    new GraphicOrigin(Guid.NewGuid(),
                        "fugiat",
                        5))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Extent(-149.0693,
                        117.4423,
                        53.1834,
                        -82.6415,
                        754.1255,
                        281.4795,
                        688.0873,
                        670.3142,
                    new SpatialReference(3,
                            "quia",
                            "eum",
                            "ipsum"),
                        true,
                        true),
                new TextSymbol("iste eum delectus",
                    new MapColor(81, 142, 227),
                    new MapColor(200, 159, 26),
                        new Dimension(682.8691),
                    new MapFont(new Dimension(26.9344),
                            "Arial",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        471.2475,
                    new MapColor(250, 244, 51),
                    new MapColor(27, 168, 154),
                        627.4898,
                    HorizontalAlignment.Left,
                        true,
                        650.7552,
                        new Dimension(560.0949),
                        true),
                new PopupTemplate("saepe excepturi vel",
                        "cumque",
                        ["quasi",
                            "at",
                            "repellendus",
                            "excepturi"],
                    [new FieldInfo("status",
                            "sed",
                            "dolores",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("updatedAt",
                            "nulla",
                            "eligendi",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("email",
                            "natus",
                            "sunt",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new MediaPopupContent("cupiditate corrupti vero",
                            "et nulla cum reprehenderit similique debitis",
                        [new ColumnChartMediaInfo("doloremque qui repudiandae",
                                "repudiandae",
                                "cupiditate aliquid repudiandae",
                            new ChartMediaInfoValue(["quia",
                                    "qui",
                                    "enim",
                                    "aliquid"],
                                    "perspiciatis",
                                    "quidem",
                                [new ChartMediaInfoValueSeries("phone",
                                        "id",
                                        695.3566)],
                                [new MapColor(112, 146, 93),
                                new MapColor(46, 101, 109),
                                new MapColor(68, 157, 251),
                                new MapColor(45, 92, 131)]))],
                            6),
                    new TextPopupContent("nihil error tempora"),
                    new MediaPopupContent("rerum quidem adipisci",
                            "magni ea est est omnis",
                        [new PieChartMediaInfo("officiis harum ipsam",
                                "id",
                                "rerum esse distinctio",
                            new ChartMediaInfoValue(["velit",
                                    "repellendus"],
                                    "velit",
                                    "mollitia",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "doloremque",
                                        324.8495)],
                                [new MapColor(212, 71, 137),
                                new MapColor(207, 3, 92)]))],
                            6),
                    new AttachmentsPopupContent("nulla repellendus deserunt",
                            "nulla eos saepe qui",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "title",
                            "labore fugit ab",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "password",
                            "veniam ipsa provident",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "id",
                            "laboriosam temporibus ab",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("ducimus neque consequuntur",
                            "https://picsum.photos/640/480/?image=791",
                            "b1f63a95-e59b-bd79-6a1c-5f0e5857095c",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "ipsum")]),
                    new AttributesDictionary(),
                    true,
                    "quo",
                    "sunt",
                    new GraphicOrigin(Guid.NewGuid(),
                        "perferendis",
                        8))]);
        ListMode testListMode = ListMode.Hide;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Normal;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature['FieldName'];",
                        "et quidem necessitatibus"),
                ElevationInfoMode.OnTheGround,
                    913.7657,
                ElevationUnit.Feet);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(36.6452,
                    -97.8253,
                    -26.6331,
                    -44.1592,
                    128.4004,
                    783.9900,
                    548.2442,
                    764.6835,
                new SpatialReference(3,
                        "hic",
                        "neque",
                        "occaecati"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2018, 1, 3, 9, 56, 32),
                    new DateTime(2008, 8, 14, 13, 22, 55));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
