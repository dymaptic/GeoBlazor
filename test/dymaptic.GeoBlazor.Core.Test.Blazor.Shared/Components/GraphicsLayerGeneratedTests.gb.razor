@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("qui hic repellat")"
                        Opacity="@(0.3736)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(48010.0660)"
                        MaxScale="@(19527405.9626)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.Screen)"
                        Effect="@(new Effect("qui",
                            16427086.9168))"
                        FullExtent="@(new Extent(-154.5035,
                                -134.3593,
                                -25.4454,
                                -23.8045,
                                289.1115,
                                397.7444,
                                502.5240,
                                79.4261,
                            new SpatialReference(1,
                                    "non",
                                    "consequatur",
                                    "aut"),
                                true,
                                true))">
                        <TimeExtent 
                            Start="@(new DateTime(2005, 6, 14, 12, 38, 26))"
                            End="@(new DateTime(2000, 3, 22, 9, 25, 44))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Extent(10.2369,
                                    56.5883,
                                    -40.3087,
                                    -32.3505,
                                    704.9741,
                                    577.1723,
                                    375.1701,
                                    650.2556,
                                new SpatialReference(5,
                                        "accusantium",
                                        "eum",
                                        "mollitia"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("corporis fugiat exercitationem",
                                new MapColor(87, 72, 30),
                                new MapColor(182, 96, 2),
                                    new Dimension(444.3418),
                                new MapFont(new Dimension(909.5051),
                                        "Bookman",
                                    MapFontStyle.Oblique,
                                    FontWeight.Normal,
                                    TextDecoration.LineThrough),
                                    151.9523,
                                new MapColor(28, 104, 33),
                                new MapColor(16, 247, 225),
                                    520.5692,
                                HorizontalAlignment.Center,
                                    true,
                                    189.5801,
                                    new Dimension(512.9717),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("aliquam quia impedit",
                                    "ut",
                                    ["ut",
                                        "provident",
                                        "impedit"],
                                [new FieldInfo("createdAt",
                                        "id",
                                        "laboriosam",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("email",
                                        "minus",
                                        "iure",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("comment",
                                        "modi",
                                        "aliquid",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("title",
                                        "ipsam",
                                        "ratione",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new RelationshipPopupContent("perferendis ut labore",
                                        "nisi aut ipsa optio cum autem",
                                        5,
                                        "maxime",
                                    [new RelatedRecordsInfoFieldOrder("consequatur",
                                        OrderBy.Desc),
                                    new RelatedRecordsInfoFieldOrder("qui",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("consequatur",
                                        OrderBy.Asc)],
                                        3),
                                new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "quibusdam",
                                            "sit corrupti dolorem"))],
                                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "category",
                                        "ratione eius sed",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "updatedAt",
                                        "est facere quo",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("maiores deserunt tempora",
                                        "49548c0a-860e-8843-35e5-62f6ee232c19",
                                        () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "token",
                                        "sed")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("aperiam")"
                            AggregateGeometries="@("veniam")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "optio",
                                6))">
                        </Graphic>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "ea dolorem in"))"
                            Mode="@(ElevationInfoMode.OnTheGround)"
                            Offset="@(331.4947)"
                            Unit="@(ElevationUnit.NauticalMiles)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Polygon([new MapPath([new MapPoint([332.2996,
                            331.3042]),
                        new MapPoint([14.2672,
                            113.4840,
                            153.9084,
                            380.1481]),
                        new MapPoint([170.0962,
                            580.2822,
                            49.5606,
                            587.4989])]),
                        new MapPath([new MapPoint([656.0256,
                                455.7195,
                                243.6906,
                                538.9042]),
                            new MapPoint([649.6241,
                                342.2809]),
                            new MapPoint([523.2100,
                                626.0204])])],
                    new SpatialReference(1,
                            "et",
                            "voluptates",
                            "exercitationem"),
                    new Point(-78.1268,
                            -28.0998,
                            133.1371,
                            -64.9599,
                            906.0515,
                        new SpatialReference(3,
                                "deserunt",
                                "unde",
                                "omnis"),
                            true,
                            true,
                            937.3784),
                        true,
                        true,
                        true),
                new TextSymbol("aliquid sint et",
                    new MapColor(33, 87, 188),
                    new MapColor(0, 109, 212),
                        new Dimension(118.3960),
                    new MapFont(new Dimension(591.0211),
                            "Palatino",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        740.4098,
                    new MapColor(16, 139, 163),
                    new MapColor(146, 199, 194),
                        15.1619,
                    HorizontalAlignment.Center,
                        true,
                        825.0037,
                        new Dimension(149.0522),
                        true),
                new PopupTemplate("facere et amet",
                        "eveniet",
                        ["voluptatum",
                            "et",
                            "et"],
                    [new FieldInfo("name",
                            "possimus",
                            "hic",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new FieldsPopupContent([new FieldInfo("password",
                                "sed",
                                "voluptas",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("token",
                                "vel",
                                "porro",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("comment",
                                "ipsa",
                                "facere",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Stddev)],
                            "voluptatem maiores eum at non quo",
                            "nihil eius corporis"),
                    new MediaPopupContent("dolore excepturi vero",
                            "totam quis minima nihil voluptatem",
                        [new ColumnChartMediaInfo("sunt itaque qui",
                                "laboriosam",
                                "velit aliquid qui",
                            new ChartMediaInfoValue(["quas",
                                    "voluptatem",
                                    "blanditiis"],
                                    "voluptas",
                                    "voluptas",
                                [new ChartMediaInfoValueSeries("email",
                                        "officia",
                                        858.2385)],
                                [new MapColor(190, 17, 204)]))],
                            4),
                    new AttachmentsPopupContent("similique veritatis quia",
                            "quia ut ullam minima",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "createdAt",
                            "reiciendis exercitationem reiciendis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "group",
                            "quia ea optio",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("aliquid odit pariatur",
                            "082c7d10-db7e-330a-fbe8-a4c2240560af",
                            () => { Console.WriteLine("maiores"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "laborum"),
                    new ActionButton("quas eos consequatur",
                            "https://picsum.photos/640/480/?image=91",
                            "691e8f15-edf6-1204-823b-307a064d7843",
                            () => { Console.WriteLine("esse"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "ut"),
                    new ActionToggle("saepe non quis",
                            "bfdb2177-cb89-58b0-9f84-db1b2b75bb7c",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "rerum")]),
                    new AttributesDictionary(),
                    true,
                    "ullam",
                    "inventore",
                    new GraphicOrigin(Guid.NewGuid(),
                        "a",
                        6))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Polyline([new MapPath([new MapPoint([552.1865,
                            290.4924]),
                        new MapPoint([273.2111,
                            482.0472]),
                        new MapPoint([198.8587,
                            179.1050]),
                        new MapPoint([569.9823,
                            252.2815,
                            919.2310])]),
                        new MapPath([new MapPoint([944.3432,
                                545.2780,
                                127.1691,
                                750.4700]),
                            new MapPoint([464.7627,
                                743.6034,
                                876.2909,
                                290.6492])])],
                    new SpatialReference(1,
                            "enim",
                            "laborum",
                            "sit"),
                        true,
                        true),
                new TextSymbol("repellendus optio dolorum",
                    new MapColor(54, 43, 37),
                    new MapColor(87, 249, 40),
                        new Dimension(543.0570),
                    new MapFont(new Dimension(769.3690),
                            "Verdana",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        582.5956,
                    new MapColor(196, 184, 121),
                    new MapColor(168, 235, 156),
                        69.7718,
                    HorizontalAlignment.Center,
                        true,
                        167.7809,
                        new Dimension(965.9230),
                        true),
                new PopupTemplate("quidem vitae eius",
                        "reiciendis",
                        ["deserunt",
                            "voluptas"],
                    [new FieldInfo("name",
                            "iusto",
                            "voluptas",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new MediaPopupContent("et harum reprehenderit",
                            "eius repudiandae quis aut",
                        [new ImageMediaInfo("alias pariatur eos",
                                "in",
                                "est voluptates doloremque",
                            new ImageMediaInfoValue("https://cleta.name",
                                    "https://gillian.biz"),
                                89.4474)],
                            6)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "comment",
                            "odit iure est",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "updatedAt",
                            "aliquid quam alias",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "comment",
                            "vel in facilis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "avatar",
                            "consectetur dignissimos perspiciatis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("eos expedita soluta",
                            "https://picsum.photos/640/480/?image=999",
                            "4e98c0c9-5041-4325-e6a5-f7a2c5537827",
                            () => { Console.WriteLine("perferendis"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "ratione")]),
                    new AttributesDictionary(),
                    true,
                    "quia",
                    "nihil",
                    new GraphicOrigin(Guid.NewGuid(),
                        "corporis",
                        1)),
            new Graphic(new Extent(40.1726,
                        79.3862,
                        30.4249,
                        -10.3518,
                        436.8686,
                        972.4761,
                        801.2789,
                        716.6904,
                    new SpatialReference(6,
                            "unde",
                            "doloribus",
                            "unde"),
                        true,
                        true),
                new TextSymbol("eum sapiente velit",
                    new MapColor(59, 251, 114),
                    new MapColor(208, 47, 17),
                        new Dimension(591.7420),
                    new MapFont(new Dimension(722.9998),
                            "Verdana",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        471.6605,
                    new MapColor(194, 31, 162),
                    new MapColor(186, 62, 23),
                        841.0780,
                    HorizontalAlignment.Right,
                        true,
                        669.7004,
                        new Dimension(949.7422),
                        true),
                new PopupTemplate("vitae numquam ut",
                        "quo",
                        ["et",
                            "temporibus",
                            "non"],
                    [new FieldInfo("comment",
                            "ipsa",
                            "voluptatem",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("id",
                            "sunt",
                            "et",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new FieldsPopupContent([new FieldInfo("status",
                                "maxime",
                                "similique",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("avatar",
                                "voluptatibus",
                                "quis",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLeLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("password",
                                "ut",
                                "recusandae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("comment",
                                "eum",
                                "molestiae",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Var)],
                            "sunt consequatur cumque totam eligendi atque vitae",
                            "odit nulla aut")],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "password",
                            "quia eum aliquid",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "phone",
                            "dolores laudantium molestias",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "name",
                            "ut eveniet ut",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "createdAt",
                            "dicta voluptatum reiciendis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("iste cum eaque",
                            "https://picsum.photos/640/480/?image=960",
                            "5d628dc8-e47d-4e2b-3fb0-c8012caedf00",
                            () => { Console.WriteLine("illum"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "sed"),
                    new ActionButton("maiores magni quia",
                            "https://picsum.photos/640/480/?image=77",
                            "ef8d97eb-7118-6378-28f8-6daed6780cb4",
                            () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "et"),
                    new ActionToggle("dolor reprehenderit accusamus",
                            "bf2111c4-8a76-a2b7-782b-0f2c756a062c",
                            () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "error")]),
                    new AttributesDictionary(),
                    true,
                    "fuga",
                    "iure",
                    new GraphicOrigin(Guid.NewGuid(),
                        "sapiente",
                        1)),
            new Graphic(new Extent(60.4428,
                        118.6280,
                        70.6577,
                        -9.4855,
                        598.9572,
                        896.3055,
                        123.0766,
                        838.5095,
                    new SpatialReference(1,
                            "necessitatibus",
                            "voluptatem",
                            "sed"),
                        true,
                        true),
                new TextSymbol("quidem iusto nostrum",
                    new MapColor(190, 97, 87),
                    new MapColor(56, 72, 116),
                        new Dimension(762.0035),
                    new MapFont(new Dimension(305.4261),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        26.4211,
                    new MapColor(80, 43, 201),
                    new MapColor(235, 46, 53),
                        883.7792,
                    HorizontalAlignment.Center,
                        true,
                        968.9598,
                        new Dimension(447.4694),
                        true),
                new PopupTemplate("tempore aut autem",
                        "quidem",
                        ["omnis",
                            "ab"],
                    [new FieldInfo("avatar",
                            "iure",
                            "totam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("name",
                            "ullam",
                            "ducimus",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Max)],
                    [new FieldsPopupContent([new FieldInfo("comment",
                                "illo",
                                "non",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("comment",
                                "et",
                                "porro",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("phone",
                                "enim",
                                "et",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("createdAt",
                                "officia",
                                "facere",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Max)],
                            "in quo quo eum quisquam",
                            "provident sint nemo")],
                    [new ExpressionInfo("return Date();",
                            "group",
                            "et voluptas dolore",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "name",
                            "dicta quae sint",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "group",
                            "fuga perspiciatis et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "id",
                            "vero rem itaque",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("odit architecto est",
                            "https://picsum.photos/640/480/?image=268",
                            "e6752ef5-e515-fb33-063d-4c964ce4deff",
                            () => { Console.WriteLine("fugiat"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "ea"),
                    new ActionToggle("qui id libero",
                            "b0aae0a3-8326-9ea0-ddbc-aeddc0bea1d8",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "fugiat"),
                    new ActionToggle("dolores aut consectetur",
                            "66c726e4-a582-8ecf-d763-8f9ddcd4ae11",
                            () => { Console.WriteLine("beatae"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "molestiae"),
                    new ActionToggle("incidunt quae repellendus",
                            "5a088b45-389d-ef92-d3f2-6d028bdfe375",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "est")]),
                    new AttributesDictionary(),
                    true,
                    "ducimus",
                    "fugit",
                    new GraphicOrigin(Guid.NewGuid(),
                        "quibusdam",
                        1))]);
        ListMode testListMode = ListMode.Show;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.VividLight;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "sunt est sequi"),
                ElevationInfoMode.OnTheGround,
                    14.2157,
                ElevationUnit.Feet);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(134.3720,
                    -156.9048,
                    -14.1329,
                    -78.3627,
                    104.8781,
                    206.4686,
                    395.6952,
                    128.5719,
                new SpatialReference(9,
                        "unde",
                        "rerum",
                        "excepturi"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2012, 2, 2, 18, 6, 53),
                    new DateTime(2022, 5, 5, 8, 24, 38));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
