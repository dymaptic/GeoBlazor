@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("sunt laborum in")"
                        Opacity="@(0.3886)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(16380.8932)"
                        MaxScale="@(9521823.2604)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.Luminosity)"
                        Effect="@(new Effect("atque",
                            29804145.0404))"
                        FullExtent="@(new Extent(66.0155,
                                137.9553,
                                -40.9356,
                                -67.1373,
                                444.0828,
                                576.0672,
                                662.5228,
                                737.3744,
                            new SpatialReference(4,
                                    "possimus",
                                    "distinctio",
                                    "optio"),
                                true,
                                true))">
                        <TimeExtent 
                            Start="@(new DateTime(2013, 5, 18, 12, 53, 2))"
                            End="@(new DateTime(2008, 3, 14, 7, 3, 20))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Polyline([new MapPath([new MapPoint([705.3190,
                                        500.3721]),
                                    new MapPoint([820.9713,
                                        630.5337,
                                        660.1897]),
                                    new MapPoint([966.4882,
                                        354.8646,
                                        355.8968,
                                        541.6098]),
                                    new MapPoint([328.4301,
                                        468.2040])]),
                                    new MapPath([new MapPoint([175.0758,
                                            538.6079]),
                                        new MapPoint([452.1642,
                                            245.7827,
                                            752.8921]),
                                        new MapPoint([494.2123,
                                            15.9737,
                                            9.5284,
                                            512.0699])]),
                                    new MapPath([new MapPoint([25.1472,
                                            114.1398,
                                            443.7499,
                                            609.4366]),
                                        new MapPoint([943.1083,
                                            942.5633])])],
                                new SpatialReference(8,
                                        "ut",
                                        "excepturi",
                                        "aperiam"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("sunt rerum ut",
                                new MapColor(135, 198, 98),
                                new MapColor(137, 165, 227),
                                    new Dimension(223.7056),
                                new MapFont(new Dimension(198.9711),
                                        "Bookman",
                                    MapFontStyle.Italic,
                                    FontWeight.Bolder,
                                    TextDecoration.Underline),
                                    140.9862,
                                new MapColor(26, 232, 9),
                                new MapColor(132, 246, 135),
                                    734.2137,
                                HorizontalAlignment.Left,
                                    true,
                                    634.6962,
                                    new Dimension(767.2081),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("dolores aliquam officiis",
                                    "non",
                                    ["aliquid",
                                        "illo"],
                                [new FieldInfo("name",
                                        "corrupti",
                                        "modi",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "sunt",
                                            "atque ut facilis"))],
                                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "id",
                                        "deserunt facere commodi",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Name;",
                                        "password",
                                        "sunt reiciendis mollitia",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Name;",
                                        "updatedAt",
                                        "molestias id sequi",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("sed eveniet corporis",
                                        "https://picsum.photos/640/480/?image=6",
                                        "f5c1b47f-c7e1-1e71-e260-ecf8d4a475eb",
                                        () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "vel"),
                                new ActionToggle("occaecati consequatur ab",
                                        "524fd9d6-50a3-4c40-2496-0019d4ea6f4e",
                                        () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "group",
                                        "quod")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("qui")"
                            AggregateGeometries="@("aperiam")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "temporibus",
                                7))">
                        </Graphic>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("var length = Geometry($feature).length; return length;",
                                    "quae aut perspiciatis"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(544.1147)"
                            Unit="@(ElevationUnit.Unknown)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Point(-38.5903,
                        56.1284,
                        -115.8830,
                        64.6943,
                        609.9349,
                    new SpatialReference(9,
                            "earum",
                            "voluptatum",
                            "ea"),
                        true,
                        true,
                        85.3150),
                new TextSymbol("aut inventore excepturi",
                    new MapColor(65, 131, 225),
                    new MapColor(35, 91, 147),
                        new Dimension(476.5565),
                    new MapFont(new Dimension(705.2071),
                            "Courier New",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        155.4040,
                    new MapColor(169, 25, 231),
                    new MapColor(30, 46, 172),
                        82.5079,
                    HorizontalAlignment.Right,
                        true,
                        719.5705,
                        new Dimension(385.8841),
                        true),
                new PopupTemplate("ut quia dolor",
                        "nobis",
                        ["maiores",
                            "rerum",
                            "in",
                            "facilis"],
                    [new FieldInfo("category",
                            "quod",
                            "eligendi",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("id",
                            "vero",
                            "dolore",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("title",
                            "omnis",
                            "quia",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Count)],
                    [new MediaPopupContent("aut saepe dicta",
                            "mollitia iure cumque repudiandae odio nemo aut",
                        [new BarChartMediaInfo("sed maxime rem",
                                "tempore",
                                "ipsum voluptatum quia",
                            new ChartMediaInfoValue(["sit",
                                    "et"],
                                    "ipsa",
                                    "ab",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "iure",
                                        336.7855),
                                new ChartMediaInfoValueSeries("comment",
                                        "autem",
                                        959.4293),
                                new ChartMediaInfoValueSeries("id",
                                        "in",
                                        211.0247)],
                                [new MapColor(135, 221, 160)])),
                        new BarChartMediaInfo("et sit necessitatibus",
                                "molestias",
                                "quae labore quo",
                            new ChartMediaInfoValue(["qui",
                                    "rerum",
                                    "et"],
                                    "repellendus",
                                    "consequatur",
                                [new ChartMediaInfoValueSeries("name",
                                        "qui",
                                        391.8072)],
                                [new MapColor(84, 61, 117),
                                new MapColor(236, 56, 176),
                                new MapColor(43, 239, 8)]))],
                            5),
                    new RelationshipPopupContent("impedit officia et",
                            "omnis magni laudantium architecto laboriosam",
                            4,
                            "sint",
                        [new RelatedRecordsInfoFieldOrder("ut",
                            OrderBy.Desc)],
                            3)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "status",
                            "consequuntur sapiente facere",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "phone",
                            "distinctio voluptas sint",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "avatar",
                            "sit eligendi sequi",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "updatedAt",
                            "eligendi enim autem",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("dolor laboriosam placeat",
                            "a1d32926-8811-b240-51df-0072b9df67d4",
                            () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "maxime"),
                    new ActionToggle("enim non et",
                            "20a1a94f-3e03-311d-d33b-f38cdc3d09e7",
                            () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "natus"),
                    new ActionToggle("quas eos mollitia",
                            "4d2fecff-6a80-649e-e328-cf8bc5141af5",
                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "cumque")]),
                    new AttributesDictionary(),
                    true,
                    "sapiente",
                    "qui",
                    new GraphicOrigin(Guid.NewGuid(),
                        "voluptatum",
                        3)),
            new Graphic(new Polygon([new MapPath([new MapPoint([848.8709,
                            708.7289,
                            727.1721]),
                        new MapPoint([713.0075,
                            38.2773,
                            918.2651,
                            187.4743]),
                        new MapPoint([650.1340,
                            550.2152,
                            894.9639,
                            120.9917]),
                        new MapPoint([980.2069,
                            659.5391,
                            56.2948])]),
                        new MapPath([new MapPoint([439.2140,
                                336.5198]),
                            new MapPoint([708.6233,
                                143.9590,
                                987.9430,
                                443.8541]),
                            new MapPoint([313.5105,
                                358.8354])]),
                        new MapPath([new MapPoint([775.6779,
                                828.5259]),
                            new MapPoint([366.6328,
                                612.8340,
                                621.0611]),
                            new MapPoint([852.2906,
                                680.0416,
                                755.3197]),
                            new MapPoint([157.3643,
                                756.8701,
                                804.8420,
                                129.9955])])],
                    new SpatialReference(1,
                            "sunt",
                            "sapiente",
                            "ipsa"),
                    new Point(-12.8248,
                            64.6712,
                            -119.2760,
                            9.0298,
                            427.8196,
                        new SpatialReference(3,
                                "aut",
                                "molestiae",
                                "asperiores"),
                            true,
                            true,
                            210.1483),
                        true,
                        true,
                        true),
                new TextSymbol("aut quasi voluptas",
                    new MapColor(67, 232, 87),
                    new MapColor(20, 194, 213),
                        new Dimension(395.6035),
                    new MapFont(new Dimension(16.6503),
                            "Verdana",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        424.9664,
                    new MapColor(129, 66, 160),
                    new MapColor(145, 8, 34),
                        543.2925,
                    HorizontalAlignment.Right,
                        true,
                        79.9557,
                        new Dimension(304.5794),
                        true),
                new PopupTemplate("accusamus ut voluptatem",
                        "veritatis",
                        ["dolores",
                            "ratione"],
                    [new FieldInfo("updatedAt",
                            "accusantium",
                            "magni",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Max)],
                    [new FieldsPopupContent([new FieldInfo("avatar",
                                "sed",
                                "consequatur",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("title",
                                "commodi",
                                "nihil",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("phone",
                                "fugiat",
                                "aut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Max)],
                            "vel autem sit libero accusamus aliquam",
                            "perspiciatis et odit"),
                    new FieldsPopupContent([new FieldInfo("category",
                                "eius",
                                "fugit",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("category",
                                "ipsum",
                                "est",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Min)],
                            "similique tenetur maiores voluptas",
                            "dolorum laboriosam optio"),
                    new TextPopupContent("voluptates voluptatum ut")],
                    [new ExpressionInfo("return $feature.Name;",
                            "name",
                            "voluptatem debitis et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "updatedAt",
                            "est eligendi et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "createdAt",
                            "sed ullam autem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "email",
                            "ut repellendus porro",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("facilis officia esse",
                            "https://picsum.photos/640/480/?image=118",
                            "d585cdec-abb5-53f0-c9af-a5127f66c473",
                            () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "ipsa"),
                    new ActionButton("accusamus ut quisquam",
                            "https://picsum.photos/640/480/?image=16",
                            "97af4c37-771f-3677-a233-e0e982309451",
                            () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "qui")]),
                    new AttributesDictionary(),
                    true,
                    "rerum",
                    "nulla",
                    new GraphicOrigin(Guid.NewGuid(),
                        "quia",
                        1)),
            new Graphic(new Extent(146.2914,
                        -16.0415,
                        81.8363,
                        -13.5148,
                        540.9565,
                        862.9434,
                        902.1200,
                        699.8141,
                    new SpatialReference(7,
                            "inventore",
                            "ullam",
                            "sit"),
                        true,
                        true),
                new TextSymbol("sequi minus vel",
                    new MapColor(106, 105, 166),
                    new MapColor(214, 4, 171),
                        new Dimension(916.5540),
                    new MapFont(new Dimension(622.4911),
                            "Georgia",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.None),
                        113.1206,
                    new MapColor(95, 4, 134),
                    new MapColor(170, 158, 44),
                        402.1196,
                    HorizontalAlignment.Center,
                        true,
                        396.5154,
                        new Dimension(817.2296),
                        true),
                new PopupTemplate("asperiores rerum rerum",
                        "dolor",
                        ["sint",
                            "optio",
                            "voluptatibus",
                            "quae"],
                    [new FieldInfo("comment",
                            "vitae",
                            "laborum",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("category",
                            "numquam",
                            "rem",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("name",
                            "sequi",
                            "magnam",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("id",
                            "necessitatibus",
                            "quibusdam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Max)],
                    [new AttachmentsPopupContent("sed et omnis",
                            "sapiente sint molestias similique",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "updatedAt",
                            "ut consequatur laborum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "comment",
                            "fuga totam voluptas",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "name",
                            "fuga dolorum vero",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("ex illum quis",
                            "https://picsum.photos/640/480/?image=972",
                            "39f4151c-40c5-a6d6-c0e0-b1a9fffb54b2",
                            () => { Console.WriteLine("temporibus"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "nesciunt")]),
                    new AttributesDictionary(),
                    true,
                    "repudiandae",
                    "dicta",
                    new GraphicOrigin(Guid.NewGuid(),
                        "laborum",
                        6))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Polyline([new MapPath([new MapPoint([547.8786,
                            106.2313,
                            729.7080]),
                        new MapPoint([137.5784,
                            809.7439,
                            955.4360]),
                        new MapPoint([263.4123,
                            273.1327]),
                        new MapPoint([420.1585,
                            8.5603])])],
                    new SpatialReference(5,
                            "et",
                            "quam",
                            "aliquam"),
                        true,
                        true),
                new TextSymbol("suscipit fuga totam",
                    new MapColor(176, 142, 197),
                    new MapColor(9, 142, 86),
                        new Dimension(541.2839),
                    new MapFont(new Dimension(845.5175),
                            "Palatino",
                        MapFontStyle.Italic,
                        FontWeight.Bolder,
                        TextDecoration.None),
                        658.6990,
                    new MapColor(144, 161, 172),
                    new MapColor(182, 68, 182),
                        453.7272,
                    HorizontalAlignment.Center,
                        true,
                        612.9210,
                        new Dimension(998.0386),
                        true),
                new PopupTemplate("aut dolorum quia",
                        "natus",
                        ["dolores",
                            "quia",
                            "ullam"],
                    [new FieldInfo("title",
                            "non",
                            "nihil",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new MediaPopupContent("minima soluta et",
                            "laboriosam dolores enim ut",
                        [new ImageMediaInfo("facere voluptas fuga",
                                "fuga",
                                "totam consequatur debitis",
                            new ImageMediaInfoValue("http://charley.com",
                                    "https://delphia.com"),
                                17.4936)],
                            7),
                    new MediaPopupContent("velit eum praesentium",
                            "velit a et eaque ducimus",
                        [new ImageMediaInfo("quaerat nam sunt",
                                "dolorum",
                                "rerum est ut",
                            new ImageMediaInfoValue("http://olin.biz",
                                    "https://mario.com"),
                                77.2739)],
                            4),
                    new AttachmentsPopupContent("est fugiat repellat",
                            "maiores et voluptas consequatur sed sunt",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("aut impedit in")],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "group",
                            "atque quia iste",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "category",
                            "consequuntur suscipit cum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "comment",
                            "pariatur odit sed",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("similique qui quia",
                            "4b842a15-65bb-7a4b-fd28-52a344e3b685",
                            () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "qui")]),
                    new AttributesDictionary(),
                    true,
                    "et",
                    "sunt",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ex",
                        4))]);
        ListMode testListMode = ListMode.Hide;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Reflect;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.Name;",
                        "excepturi accusantium in"),
                ElevationInfoMode.RelativeToScene,
                    612.7587,
                ElevationUnit.Meters);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(-63.3078,
                    -2.5085,
                    -7.8176,
                    77.3461,
                    405.2064,
                    144.6815,
                    79.6107,
                    811.4136,
                new SpatialReference(4,
                        "est",
                        "sequi",
                        "aut"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2014, 11, 5, 9, 49, 10),
                    new DateTime(2005, 4, 1, 19, 20, 55));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
