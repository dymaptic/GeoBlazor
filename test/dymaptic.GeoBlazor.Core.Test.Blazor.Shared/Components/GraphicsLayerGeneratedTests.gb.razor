@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("quasi suscipit quo")"
                        Opacity="@(0.3894)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Show)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(28932.4560)"
                        MaxScale="@(29530554.4042)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.Darken)"
                        Effect="@(new Effect("voluptatum",
                            18399859.4137))"
                        FullExtent="@(new Extent(-137.7458,
                                149.2288,
                                52.5772,
                                -19.5611,
                                33.2552,
                                567.6863,
                                99.4251,
                                490.5905,
                            new SpatialReference(5,
                                    "quas",
                                    "ut",
                                    "consequatur"),
                                true,
                                true))">
                        <TimeExtent 
                            Start="@(new DateTime(2018, 7, 18, 7, 31, 34))"
                            End="@(new DateTime(2021, 5, 5, 10, 40, 21))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Polygon([new MapPath([new MapPoint([375.9040,
                                        893.3541]),
                                    new MapPoint([256.7857,
                                        104.0176,
                                        521.3172])]),
                                    new MapPath([new MapPoint([906.7257,
                                            155.2277,
                                            357.3956]),
                                        new MapPoint([222.2726,
                                            773.7929,
                                            771.0982,
                                            908.4901]),
                                        new MapPoint([302.6000,
                                            909.2283,
                                            24.6503,
                                            292.9473]),
                                        new MapPoint([966.1726,
                                            282.2924,
                                            501.7522,
                                            749.9527])]),
                                    new MapPath([new MapPoint([983.1151,
                                            138.4925,
                                            495.8244]),
                                        new MapPoint([661.0631,
                                            763.0271,
                                            505.9256,
                                            485.2566]),
                                        new MapPoint([777.3832,
                                            452.1741]),
                                        new MapPoint([392.6117,
                                            789.1485,
                                            108.0539])])],
                                new SpatialReference(2,
                                        "sit",
                                        "deserunt",
                                        "nesciunt"),
                                new Point(65.7240,
                                        -28.9757,
                                        -131.4942,
                                        -45.6614,
                                        349.6091,
                                    new SpatialReference(7,
                                            "error",
                                            "illo",
                                            "sint"),
                                        true,
                                        true,
                                        780.2807),
                                    true,
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("maiores minus sint",
                                new MapColor(224, 142, 120),
                                new MapColor(106, 180, 150),
                                    new Dimension(881.0244),
                                new MapFont(new Dimension(171.5974),
                                        "Times New Roman",
                                    MapFontStyle.Oblique,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    490.6008,
                                new MapColor(196, 163, 96),
                                new MapColor(146, 59, 60),
                                    547.0275,
                                HorizontalAlignment.Center,
                                    true,
                                    567.4172,
                                    new Dimension(427.7491),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("cupiditate id laudantium",
                                    "omnis",
                                    ["id",
                                        "debitis",
                                        "ipsum"],
                                [new FieldInfo("id",
                                        "veniam",
                                        "nihil",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.Year),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("password",
                                        "quidem",
                                        "eos",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("status",
                                        "assumenda",
                                        "et",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongMonthDayYear),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("status",
                                        "laudantium",
                                        "quas",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new AttachmentsPopupContent("perferendis aut omnis",
                                        "molestiae rerum dicta deserunt",
                                        AttachmentsPopupContentDisplayType.Auto),
                                new RelationshipPopupContent("nihil facere excepturi",
                                        "voluptatem non pariatur aliquid",
                                        9,
                                        "explicabo",
                                    [new RelatedRecordsInfoFieldOrder("ea",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("distinctio",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("est",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("quas",
                                        OrderBy.Asc)],
                                        9)],
                                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "token",
                                        "libero veritatis quia",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "name",
                                        "aspernatur ipsum provident",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("quis nihil blanditiis",
                                        "214eaa56-2b9a-3716-2685-e4f23b21e702",
                                        () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "token",
                                        "maxime")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("recusandae")"
                            AggregateGeometries="@("aut")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "aut",
                                2))">
                        </Graphic>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.Name;",
                                    "et in tenetur"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(779.0752)"
                            Unit="@(ElevationUnit.Meters)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Polyline([new MapPath([new MapPoint([832.5748,
                            976.7560,
                            504.4743,
                            981.0079]),
                        new MapPoint([363.9364,
                            818.9567]),
                        new MapPoint([348.6425,
                            798.6276,
                            740.4362,
                            233.7636]),
                        new MapPoint([373.6948,
                            973.8016,
                            891.1494])]),
                        new MapPath([new MapPoint([235.4840,
                                559.0144,
                                622.0370]),
                            new MapPoint([607.6037,
                                876.9383]),
                            new MapPoint([684.3117,
                                959.4946,
                                608.2953,
                                988.0186]),
                            new MapPoint([418.6660,
                                561.4426])]),
                        new MapPath([new MapPoint([786.2434,
                                315.7384]),
                            new MapPoint([945.2783,
                                762.0641,
                                129.0165,
                                915.5419]),
                            new MapPoint([817.8051,
                                585.1652]),
                            new MapPoint([791.1917,
                                513.7114,
                                631.6877,
                                930.2688])]),
                        new MapPath([new MapPoint([96.6419,
                                794.2107,
                                816.4639]),
                            new MapPoint([486.1752,
                                233.7056,
                                552.5021]),
                            new MapPoint([360.5327,
                                56.9424,
                                659.1757,
                                834.3041])])],
                    new SpatialReference(5,
                            "deleniti",
                            "excepturi",
                            "dolor"),
                        true,
                        true),
                new TextSymbol("cupiditate consequuntur voluptatum",
                    new MapColor(27, 165, 45),
                    new MapColor(123, 161, 64),
                        new Dimension(429.4916),
                    new MapFont(new Dimension(552.2965),
                            "Garamond",
                        MapFontStyle.Oblique,
                        FontWeight.Bolder,
                        TextDecoration.Underline),
                        985.7674,
                    new MapColor(189, 223, 132),
                    new MapColor(104, 118, 59),
                        202.5058,
                    HorizontalAlignment.Right,
                        true,
                        334.1401,
                        new Dimension(201.0754),
                        true),
                new PopupTemplate("consequatur aut consectetur",
                        "beatae",
                        ["ex",
                            "iusto"],
                    [new FieldInfo("name",
                            "illum",
                            "cupiditate",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("token",
                            "eveniet",
                            "temporibus",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("updatedAt",
                            "ut",
                            "repudiandae",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new RelationshipPopupContent("eum distinctio nam",
                            "eligendi quo quas quo ut rerum",
                            5,
                            "doloremque",
                        [new RelatedRecordsInfoFieldOrder("sequi",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("voluptatum",
                            OrderBy.Asc)],
                            8)],
                    [new ExpressionInfo("return $feature.Name;",
                            "category",
                            "laboriosam ab sint",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("dolore magnam eos",
                            "https://picsum.photos/640/480/?image=908",
                            "282d2e29-c2f8-0534-db18-45afd606335b",
                            () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "molestias"),
                    new ActionToggle("laboriosam maxime sint",
                            "5354cfc2-aedd-3442-6110-7d3f7cd19ed5",
                            () => { Console.WriteLine("fuga"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "qui"),
                    new ActionButton("doloremque facere necessitatibus",
                            "https://picsum.photos/640/480/?image=584",
                            "43bd8a78-21de-8ebc-f39c-90461dfd8b6f",
                            () => { Console.WriteLine("ullam"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "similique"),
                    new ActionToggle("et expedita ut",
                            "cdbdf852-84a9-9a71-1065-58e164a97ed1",
                            () => { Console.WriteLine("iure"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "sed")]),
                    new AttributesDictionary(),
                    true,
                    "numquam",
                    "nihil",
                    new GraphicOrigin(Guid.NewGuid(),
                        "dolores",
                        4))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Extent(166.0803,
                        33.8246,
                        40.0965,
                        23.2679,
                        35.1310,
                        799.3279,
                        527.9001,
                        197.3216,
                    new SpatialReference(4,
                            "exercitationem",
                            "rem",
                            "autem"),
                        true,
                        true),
                new TextSymbol("est doloremque quas",
                    new MapColor(53, 207, 118),
                    new MapColor(217, 197, 161),
                        new Dimension(185.0419),
                    new MapFont(new Dimension(26.5723),
                            "Courier New",
                        MapFontStyle.Oblique,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        10.8498,
                    new MapColor(250, 84, 124),
                    new MapColor(228, 65, 123),
                        672.7468,
                    HorizontalAlignment.Center,
                        true,
                        734.2508,
                        new Dimension(413.8755),
                        true),
                new PopupTemplate("dolor beatae rerum",
                        "quas",
                        ["necessitatibus",
                            "qui",
                            "quia"],
                    [new FieldInfo("password",
                            "tenetur",
                            "adipisci",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("title",
                            "asperiores",
                            "nulla",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("status",
                            "aperiam",
                            "quae",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new RelationshipPopupContent("expedita error enim",
                            "necessitatibus vel magnam doloribus sed",
                            8,
                            "voluptate",
                        [new RelatedRecordsInfoFieldOrder("id",
                            OrderBy.Asc)],
                            9),
                    new AttachmentsPopupContent("molestias ab voluptas",
                            "autem occaecati dolorem nobis quam",
                            AttachmentsPopupContentDisplayType.Auto),
                    new RelationshipPopupContent("non aut ut",
                            "saepe ut recusandae voluptates earum quo ut",
                            7,
                            "et",
                        [new RelatedRecordsInfoFieldOrder("assumenda",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("voluptates",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("ut",
                            OrderBy.Desc)],
                            1),
                    new FieldsPopupContent([new FieldInfo("email",
                                "omnis",
                                "atque",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Max)],
                            "hic velit commodi rem repellat",
                            "iste fuga inventore")],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "createdAt",
                            "ipsam nemo dolorum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "createdAt",
                            "adipisci ut iure",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "token",
                            "placeat impedit qui",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("qui dolorem ipsum",
                            "b0a1deb2-5a2c-98d4-8cc8-6ea4af17bfe0",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "sequi"),
                    new ActionToggle("assumenda eum earum",
                            "40ea78c9-d6f4-c97f-52f7-a36a838c5797",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "ipsa"),
                    new ActionToggle("sit praesentium aut",
                            "8f436d5d-0d3f-d505-6b48-e3fe40aff7dc",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "molestias")]),
                    new AttributesDictionary(),
                    true,
                    "exercitationem",
                    "perferendis",
                    new GraphicOrigin(Guid.NewGuid(),
                        "explicabo",
                        3))]);
        ListMode testListMode = ListMode.Hide;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.Plus;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.Population / $feature.Area;",
                        "non neque dolorem"),
                ElevationInfoMode.AbsoluteHeight,
                    474.6422,
                ElevationUnit.Miles);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(72.8993,
                    160.9876,
                    -25.5948,
                    48.3532,
                    312.2769,
                    491.6827,
                    63.3912,
                    162.4946,
                new SpatialReference(7,
                        "fuga",
                        "quia",
                        "laudantium"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2002, 7, 21, 0, 6, 57),
                    new DateTime(2016, 10, 3, 16, 16, 4));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
