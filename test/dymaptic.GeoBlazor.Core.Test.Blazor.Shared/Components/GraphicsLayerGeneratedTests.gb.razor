@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("magnam commodi eos")"
                        Opacity="@(0.9996)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(32122.7245)"
                        MaxScale="@(17059922.9120)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.DestinationOver)"
                        Effect="@(new Effect("itaque",
                            18959721.7581))"
                        FullExtent="@(new Extent(-26.1003,
                                -32.5333,
                                -5.2026,
                                49.6709,
                                630.6280,
                                328.2540,
                                805.0439,
                                987.3379,
                            new SpatialReference(2,
                                    "sed",
                                    "aspernatur",
                                    "velit"),
                                true,
                                true))">
                        <TimeExtent 
                            Start="@(new DateTime(2003, 9, 6, 6, 26, 29))"
                            End="@(new DateTime(2015, 1, 6, 13, 26, 3))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Point(-42.0529,
                                    -78.5492,
                                    74.7761,
                                    -21.9642,
                                    727.9046,
                                new SpatialReference(6,
                                        "occaecati",
                                        "et",
                                        "minima"),
                                    true,
                                    true,
                                    61.5273))"
                            Symbol="@(new TextSymbol("nulla repudiandae soluta",
                                new MapColor(56, 140, 196),
                                new MapColor(88, 218, 239),
                                    new Dimension(805.7570),
                                new MapFont(new Dimension(35.3173),
                                        "Times New Roman",
                                    MapFontStyle.Oblique,
                                    FontWeight.Bold,
                                    TextDecoration.Underline),
                                    603.3411,
                                new MapColor(206, 113, 182),
                                new MapColor(19, 54, 124),
                                    709.7660,
                                HorizontalAlignment.Center,
                                    true,
                                    754.2037,
                                    new Dimension(50.9302),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("aliquid quia atque",
                                    "sit",
                                    ["nostrum",
                                        "animi"],
                                [new FieldInfo("status",
                                        "sit",
                                        "dolor",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.ShortDateLeLongTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("token",
                                        "est",
                                        "odit",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("comment",
                                        "possimus",
                                        "similique",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new RelationshipPopupContent("optio nobis accusamus",
                                        "maiores deleniti non nisi quas",
                                        4,
                                        "aut",
                                    [new RelatedRecordsInfoFieldOrder("blanditiis",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("nobis",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("sint",
                                        OrderBy.Asc)],
                                        1),
                                new FieldsPopupContent([new FieldInfo("group",
                                            "itaque",
                                            "aut",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("email",
                                            "eos",
                                            "quisquam",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("category",
                                            "sint",
                                            "nam",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("avatar",
                                            "necessitatibus",
                                            "aut",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                        "voluptatibus recusandae aut explicabo inventore consectetur",
                                        "quo itaque nihil")],
                                [new ExpressionInfo("return $feature.Name;",
                                        "createdAt",
                                        "error deleniti optio",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "status",
                                        "rerum in blanditiis",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return Date();",
                                        "category",
                                        "ut aut deserunt",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("minima aut soluta",
                                        "https://picsum.photos/640/480/?image=580",
                                        "715a05b1-da4e-4738-25bf-7088954d33ef",
                                        () => { Console.WriteLine("vero"); return Task.CompletedTask; },
                                        "group",
                                        true,
                                        true,
                                        true,
                                        "est"),
                                new ActionButton("assumenda voluptatibus delectus",
                                        "https://picsum.photos/640/480/?image=958",
                                        "10ab891e-ba70-1db9-9b13-1e91f5915ad9",
                                        () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                                        "comment",
                                        true,
                                        true,
                                        true,
                                        "optio")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("ea")"
                            AggregateGeometries="@("non")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "rerum",
                                3))">
                        </Graphic>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                    "doloribus et consequatur"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(959.5669)"
                            Unit="@(ElevationUnit.Decimeters)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Polyline([new MapPath([new MapPoint([200.4519,
                            836.3217,
                            445.1213]),
                        new MapPoint([361.8684,
                            919.4045]),
                        new MapPoint([63.5493,
                            376.9266]),
                        new MapPoint([465.0188,
                            827.3944])]),
                        new MapPath([new MapPoint([461.4771,
                                606.5582,
                                521.2892,
                                990.2999]),
                            new MapPoint([559.9447,
                                557.3607,
                                420.2434,
                                201.4767]),
                            new MapPoint([828.1645,
                                770.0680,
                                884.3572])]),
                        new MapPath([new MapPoint([273.3485,
                                42.9825,
                                345.5140]),
                            new MapPoint([261.0969,
                                381.9185]),
                            new MapPoint([134.5651,
                                822.8312,
                                396.1028]),
                            new MapPoint([721.8209,
                                781.0757])])],
                    new SpatialReference(3,
                            "est",
                            "et",
                            "aliquam"),
                        true,
                        true),
                new TextSymbol("omnis porro eveniet",
                    new MapColor(135, 218, 191),
                    new MapColor(149, 154, 110),
                        new Dimension(848.0357),
                    new MapFont(new Dimension(857.1652),
                            "Verdana",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        510.2030,
                    new MapColor(245, 219, 74),
                    new MapColor(152, 39, 79),
                        794.8218,
                    HorizontalAlignment.Right,
                        true,
                        36.7731,
                        new Dimension(508.9851),
                        true),
                new PopupTemplate("beatae consequatur culpa",
                        "sint",
                        ["esse",
                            "pariatur"],
                    [new FieldInfo("password",
                            "minus",
                            "rerum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("updatedAt",
                            "maiores",
                            "voluptatibus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("title",
                            "nihil",
                            "doloribus",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new TextPopupContent("unde harum quia"),
                    new AttachmentsPopupContent("rerum recusandae omnis",
                            "eveniet est ad in itaque eligendi",
                            AttachmentsPopupContentDisplayType.Auto),
                    new FieldsPopupContent([new FieldInfo("title",
                                "ab",
                                "laborum",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Max)],
                            "placeat dolor quam ea nam est",
                            "qui deserunt qui"),
                    new FieldsPopupContent([new FieldInfo("id",
                                "nulla",
                                "laborum",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("token",
                                "numquam",
                                "ad",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Max)],
                            "ut iusto quos occaecati ratione debitis",
                            "ut optio dolor")],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "category",
                            "sint unde optio",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "category",
                            "ut alias qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "group",
                            "enim et modi",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("ratione et nihil",
                            "0733bcac-db29-ea80-1a42-eedadb0c7787",
                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "porro"),
                    new ActionButton("pariatur facilis et",
                            "https://picsum.photos/640/480/?image=31",
                            "9f5bc01b-1f0a-604b-ef41-f4c221037261",
                            () => { Console.WriteLine("fuga"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "odio"),
                    new ActionButton("possimus et occaecati",
                            "https://picsum.photos/640/480/?image=945",
                            "38fdf280-b55a-9f9d-dc54-2ace66a6bbbd",
                            () => { Console.WriteLine("labore"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "nesciunt")]),
                    new AttributesDictionary(),
                    true,
                    "voluptas",
                    "laboriosam",
                    new GraphicOrigin(Guid.NewGuid(),
                        "nisi",
                        1)),
            new Graphic(new Polygon([new MapPath([new MapPoint([456.7107,
                            861.7512]),
                        new MapPoint([567.5077,
                            290.9666,
                            375.7774,
                            791.4770])]),
                        new MapPath([new MapPoint([43.3151,
                                837.8385,
                                630.8289]),
                            new MapPoint([454.4901,
                                611.2272]),
                            new MapPoint([582.9785,
                                865.4950,
                                810.7171])]),
                        new MapPath([new MapPoint([52.8274,
                                679.7164,
                                998.5410,
                                542.4457]),
                            new MapPoint([564.8030,
                                700.4209,
                                34.5060])])],
                    new SpatialReference(9,
                            "omnis",
                            "voluptas",
                            "hic"),
                    new Point(-178.1868,
                            35.9310,
                            26.6531,
                            -11.9741,
                            244.2774,
                        new SpatialReference(8,
                                "excepturi",
                                "voluptas",
                                "ullam"),
                            true,
                            true,
                            269.9038),
                        true,
                        true,
                        true),
                new TextSymbol("eum magnam dignissimos",
                    new MapColor(137, 240, 6),
                    new MapColor(208, 26, 150),
                        new Dimension(767.9395),
                    new MapFont(new Dimension(939.9565),
                            "Helvetica",
                        MapFontStyle.Italic,
                        FontWeight.Normal,
                        TextDecoration.None),
                        155.7841,
                    new MapColor(110, 11, 174),
                    new MapColor(149, 235, 216),
                        454.2548,
                    HorizontalAlignment.Right,
                        true,
                        412.9039,
                        new Dimension(290.0920),
                        true),
                new PopupTemplate("explicabo non asperiores",
                        "cupiditate",
                        ["voluptatem",
                            "voluptate",
                            "nostrum",
                            "atque"],
                    [new FieldInfo("createdAt",
                            "a",
                            "eum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("status",
                            "voluptatum",
                            "id",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new TextPopupContent("exercitationem quia delectus"),
                    new MediaPopupContent("omnis qui praesentium",
                            "in et non ab ducimus aut harum",
                        [new LineChartMediaInfo("et sequi reiciendis",
                                "sapiente",
                                "ducimus et quo",
                            new ChartMediaInfoValue(["quae",
                                    "et",
                                    "aut",
                                    "voluptas"],
                                    "at",
                                    "beatae",
                                [new ChartMediaInfoValueSeries("comment",
                                        "reprehenderit",
                                        689.0334)],
                                [new MapColor(223, 50, 184)]))],
                            2)],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "category",
                            "voluptas et et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("voluptatum rem sed",
                            "e0048a27-635c-2280-ce74-32a8d41fd364",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "illum"),
                    new ActionToggle("amet dicta pariatur",
                            "09091b6f-bcb8-8d2e-0349-baa256556496",
                            () => { Console.WriteLine("placeat"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "voluptatum"),
                    new ActionToggle("occaecati dolorum libero",
                            "8e4ce0cc-2fac-8bbb-4132-bd98404ce3d0",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "incidunt"),
                    new ActionToggle("autem officia et",
                            "ef9930e9-6299-91fb-a6e1-b79c4b73a47e",
                            () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "qui")]),
                    new AttributesDictionary(),
                    true,
                    "quo",
                    "doloribus",
                    new GraphicOrigin(Guid.NewGuid(),
                        "laborum",
                        5)),
            new Graphic(new Point(-45.4969,
                        5.4185,
                        58.7318,
                        -63.1249,
                        631.1101,
                    new SpatialReference(1,
                            "molestias",
                            "laborum",
                            "est"),
                        true,
                        true,
                        747.0201),
                new TextSymbol("eos quae dolorem",
                    new MapColor(108, 121, 237),
                    new MapColor(177, 49, 39),
                        new Dimension(170.9709),
                    new MapFont(new Dimension(285.6187),
                            "Georgia",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        164.9333,
                    new MapColor(227, 123, 230),
                    new MapColor(2, 1, 175),
                        200.7178,
                    HorizontalAlignment.Center,
                        true,
                        103.0372,
                        new Dimension(102.0182),
                        true),
                new PopupTemplate("beatae dolor dolores",
                        "quidem",
                        ["sed",
                            "eius"],
                    [new FieldInfo("id",
                            "delectus",
                            "labore",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("status",
                            "voluptatibus",
                            "vero",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("token",
                            "repellendus",
                            "voluptate",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("phone",
                            "accusamus",
                            "atque",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new TextPopupContent("aut et ut")],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "status",
                            "quisquam explicabo rerum",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "id",
                            "et quis animi",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("laboriosam optio distinctio",
                            "9bb80fd6-6c76-3b12-eec5-f3834a5c1f16",
                            () => { Console.WriteLine("in"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "ipsa"),
                    new ActionToggle("et laborum in",
                            "8ee759a2-229a-16dd-219b-a69439f89b2e",
                            () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "sit"),
                    new ActionToggle("voluptatem harum voluptatum",
                            "10432d6f-10ef-a1ea-4747-bc553cac3fac",
                            () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "voluptatem"),
                    new ActionToggle("ea repudiandae nostrum",
                            "526a8cdc-b967-4cae-ff8d-4121215d575b",
                            () => { Console.WriteLine("iure"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "veritatis")]),
                    new AttributesDictionary(),
                    true,
                    "aliquid",
                    "officia",
                    new GraphicOrigin(Guid.NewGuid(),
                        "harum",
                        9)),
            new Graphic(new Extent(-142.6782,
                        124.0506,
                        77.8699,
                        50.2640,
                        884.6419,
                        373.7213,
                        303.9401,
                        186.0405,
                    new SpatialReference(4,
                            "voluptatem",
                            "libero",
                            "et"),
                        true,
                        true),
                new TextSymbol("voluptas et veniam",
                    new MapColor(119, 189, 140),
                    new MapColor(119, 16, 184),
                        new Dimension(550.0049),
                    new MapFont(new Dimension(730.7205),
                            "Times New Roman",
                        MapFontStyle.Italic,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        796.9004,
                    new MapColor(157, 68, 234),
                    new MapColor(127, 123, 41),
                        235.0242,
                    HorizontalAlignment.Right,
                        true,
                        260.2094,
                        new Dimension(43.4179),
                        true),
                new PopupTemplate("sint numquam et",
                        "placeat",
                        ["nihil",
                            "cupiditate",
                            "itaque",
                            "quisquam"],
                    [new FieldInfo("password",
                            "quaerat",
                            "non",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("updatedAt",
                            "consequatur",
                            "temporibus",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new AttachmentsPopupContent("numquam dolor repellat",
                            "voluptas corrupti molestiae qui tenetur",
                            AttachmentsPopupContentDisplayType.Auto),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "ut",
                                "dolores velit dolorem")),
                    new TextPopupContent("eos nihil aut")],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "avatar",
                            "necessitatibus labore praesentium",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("officia inventore nemo",
                            "2fbbbd81-4585-2dda-67c2-9084811b4ded",
                            () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "voluptas"),
                    new ActionButton("nam non minima",
                            "https://picsum.photos/640/480/?image=596",
                            "e236098c-682d-e9cf-7982-2c9fd979c944",
                            () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "dolore")]),
                    new AttributesDictionary(),
                    true,
                    "perspiciatis",
                    "distinctio",
                    new GraphicOrigin(Guid.NewGuid(),
                        "nam",
                        8))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Polyline([new MapPath([new MapPoint([432.1197,
                            556.9475,
                            858.9641]),
                        new MapPoint([172.1835,
                            234.5773,
                            379.9953]),
                        new MapPoint([663.6604,
                            597.2992])]),
                        new MapPath([new MapPoint([178.6397,
                                285.6846,
                                33.7734,
                                184.7226]),
                            new MapPoint([78.7302,
                                274.7003,
                                591.2306,
                                441.5740]),
                            new MapPoint([960.3898,
                                766.3406,
                                172.6973,
                                953.9631]),
                            new MapPoint([490.3678,
                                484.5405])])],
                    new SpatialReference(5,
                            "animi",
                            "voluptatem",
                            "eius"),
                        true,
                        true),
                new TextSymbol("omnis quia ut",
                    new MapColor(95, 206, 123),
                    new MapColor(136, 92, 91),
                        new Dimension(427.3914),
                    new MapFont(new Dimension(642.3568),
                            "Verdana",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.Underline),
                        172.8859,
                    new MapColor(181, 240, 127),
                    new MapColor(110, 123, 231),
                        607.7923,
                    HorizontalAlignment.Center,
                        true,
                        373.5900,
                        new Dimension(103.6136),
                        true),
                new PopupTemplate("ipsum modi omnis",
                        "eligendi",
                        ["in",
                            "nobis",
                            "cumque"],
                    [new FieldInfo("comment",
                            "dignissimos",
                            "nulla",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("group",
                            "sed",
                            "laudantium",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("name",
                            "vero",
                            "est",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Count)],
                    [new AttachmentsPopupContent("ut id ut",
                            "ea excepturi ipsa aut temporibus",
                            AttachmentsPopupContentDisplayType.Auto),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                "hic",
                                "molestias quisquam qui")),
                    new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "sed",
                                "neque ut quia")),
                    new TextPopupContent("itaque repellendus beatae")],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "title",
                            "sapiente consequatur et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("corporis laborum et",
                            "https://picsum.photos/640/480/?image=818",
                            "2b376d0e-0e76-7fb5-4d3c-222767a63322",
                            () => { Console.WriteLine("adipisci"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "ab"),
                    new ActionToggle("architecto eum eaque",
                            "ddee8cd1-dc52-f182-5dfd-4d4ef3ce7c27",
                            () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "quidem")]),
                    new AttributesDictionary(),
                    true,
                    "maiores",
                    "sint",
                    new GraphicOrigin(Guid.NewGuid(),
                        "laborum",
                        5)),
            new Graphic(new Point(-174.9353,
                        -70.3716,
                        115.0612,
                        64.0412,
                        675.5901,
                    new SpatialReference(4,
                            "debitis",
                            "ducimus",
                            "et"),
                        true,
                        true,
                        838.3849),
                new TextSymbol("debitis atque non",
                    new MapColor(197, 81, 87),
                    new MapColor(33, 213, 217),
                        new Dimension(174.4082),
                    new MapFont(new Dimension(776.2989),
                            "Garamond",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.LineThrough),
                        742.0600,
                    new MapColor(246, 35, 114),
                    new MapColor(44, 12, 183),
                        645.0916,
                    HorizontalAlignment.Right,
                        true,
                        672.7373,
                        new Dimension(644.3387),
                        true),
                new PopupTemplate("autem qui hic",
                        "sed",
                        ["cumque",
                            "consequatur",
                            "occaecati"],
                    [new FieldInfo("createdAt",
                            "autem",
                            "accusamus",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("createdAt",
                            "esse",
                            "blanditiis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new FieldsPopupContent([new FieldInfo("phone",
                                "aut",
                                "ut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Sum),
                        new FieldInfo("phone",
                                "asperiores",
                                "dolorem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("avatar",
                                "qui",
                                "aut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Stddev)],
                            "labore voluptas soluta placeat",
                            "quia sunt molestias"),
                    new AttachmentsPopupContent("suscipit nesciunt consequatur",
                            "deleniti est voluptas et perspiciatis",
                            AttachmentsPopupContentDisplayType.Preview),
                    new FieldsPopupContent([new FieldInfo("group",
                                "debitis",
                                "quam",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("id",
                                "animi",
                                "quo",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthYear),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("category",
                                "facilis",
                                "excepturi",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("id",
                                "id",
                                "quidem",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Min)],
                            "voluptatem eos ex facilis",
                            "et sapiente esse")],
                    [new ExpressionInfo("return $feature.Name;",
                            "avatar",
                            "id quos deleniti",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("optio consectetur pariatur",
                            "0cf5c3dd-a7c1-1e5d-753a-6eed76e64b8d",
                            () => { Console.WriteLine("cumque"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "beatae"),
                    new ActionToggle("harum laborum laboriosam",
                            "fac37676-0edf-2d8e-4026-090023658469",
                            () => { Console.WriteLine("accusamus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "fuga"),
                    new ActionButton("et sed esse",
                            "https://picsum.photos/640/480/?image=332",
                            "50731018-272e-c4ac-365d-d00bceec99a3",
                            () => { Console.WriteLine("tempora"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "dolores"),
                    new ActionButton("quas dolores molestias",
                            "https://picsum.photos/640/480/?image=13",
                            "860a1f1a-e421-865c-ca6c-33f687edae54",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "vel")]),
                    new AttributesDictionary(),
                    true,
                    "ipsam",
                    "nisi",
                    new GraphicOrigin(Guid.NewGuid(),
                        "corrupti",
                        3)),
            new Graphic(new Extent(0.8951,
                        34.9996,
                        65.7754,
                        76.5362,
                        874.3385,
                        617.4096,
                        116.2212,
                        11.0466,
                    new SpatialReference(9,
                            "voluptatem",
                            "quia",
                            "facilis"),
                        true,
                        true),
                new TextSymbol("iure maxime delectus",
                    new MapColor(115, 125, 208),
                    new MapColor(108, 140, 20),
                        new Dimension(420.4867),
                    new MapFont(new Dimension(568.1185),
                            "Palatino",
                        MapFontStyle.Italic,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        770.6493,
                    new MapColor(62, 87, 254),
                    new MapColor(120, 254, 243),
                        78.5574,
                    HorizontalAlignment.Center,
                        true,
                        466.1095,
                        new Dimension(628.1966),
                        true),
                new PopupTemplate("ea tempore et",
                        "dolor",
                        ["at",
                            "molestiae",
                            "nobis"],
                    [new FieldInfo("comment",
                            "iure",
                            "vel",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("group",
                            "consequuntur",
                            "delectus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("category",
                            "neque",
                            "natus",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("category",
                            "veniam",
                            "laboriosam",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYear),
                            true,
                            true,
                        StatisticType.Var)],
                    [new AttachmentsPopupContent("esse aperiam culpa",
                            "ratione magni voluptatibus asperiores consequuntur qui",
                            AttachmentsPopupContentDisplayType.Preview),
                    new TextPopupContent("tempore ipsa a"),
                    new MediaPopupContent("dolorum quis ratione",
                            "nobis ad perspiciatis et sunt voluptatem natus",
                        [new BarChartMediaInfo("beatae pariatur aut",
                                "eaque",
                                "sunt qui dolorem",
                            new ChartMediaInfoValue(["sed",
                                    "consectetur"],
                                    "fugiat",
                                    "voluptates",
                                [new ChartMediaInfoValueSeries("token",
                                        "vitae",
                                        121.3580)],
                                [new MapColor(182, 180, 99),
                                new MapColor(114, 121, 39)])),
                        new BarChartMediaInfo("omnis iusto culpa",
                                "quidem",
                                "sed ut autem",
                            new ChartMediaInfoValue(["sit",
                                    "consequatur",
                                    "ea"],
                                    "dolore",
                                    "asperiores",
                                [new ChartMediaInfoValueSeries("phone",
                                        "sapiente",
                                        272.6199)],
                                [new MapColor(125, 207, 219),
                                new MapColor(187, 2, 1),
                                new MapColor(36, 199, 8)]))],
                            5)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "token",
                            "dolor magnam explicabo",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "avatar",
                            "at similique dolor",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "id",
                            "nemo aut et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "comment",
                            "recusandae quam recusandae",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("ipsam quod sequi",
                            "5be06fc3-7288-5bb0-d535-ff587871131a",
                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "sunt"),
                    new ActionToggle("eos voluptate facilis",
                            "9f5f89f9-48a9-d551-4f71-dbcd96c116ff",
                            () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "occaecati"),
                    new ActionToggle("ut sapiente rem",
                            "cd03367b-f6da-f1df-5942-04904a18b789",
                            () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "sit"),
                    new ActionButton("qui quo praesentium",
                            "https://picsum.photos/640/480/?image=772",
                            "351413e6-6ef6-8cc4-62d8-a4d7da2b174d",
                            () => { Console.WriteLine("ullam"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "velit")]),
                    new AttributesDictionary(),
                    true,
                    "voluptas",
                    "ea",
                    new GraphicOrigin(Guid.NewGuid(),
                        "similique",
                        9))]);
        ListMode testListMode = ListMode.Show;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.ColorDodge;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                        "perferendis non reprehenderit"),
                ElevationInfoMode.RelativeToGround,
                    280.6786,
                ElevationUnit.DecimalDegrees);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(-5.1700,
                    -14.1141,
                    67.1395,
                    32.5652,
                    556.5051,
                    538.2131,
                    887.7990,
                    310.5421,
                new SpatialReference(1,
                        "ut",
                        "sed",
                        "veniam"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2005, 6, 3, 2, 54, 8),
                    new DateTime(2016, 11, 11, 19, 12, 1));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
