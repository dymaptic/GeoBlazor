@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedGraphicsLayer(Action renderHandler)
    {
        GraphicsLayer? graphicsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <GraphicsLayer 
                        Title="@("blanditiis fugit dicta")"
                        Opacity="@(0.5364)"
                        Visible="@(true)"
                        ListMode="@(ListMode.Hide)"
                        PersistenceEnabled="@(true)"
                        MinScale="@(13766.0124)"
                        MaxScale="@(21244911.9712)"
                        ScreenSizePerspectiveEnabled="@(true)"
                        BlendMode="@(BlendMode.Normal)"
                        Effect="@(new Effect("autem",
                            4566165.1585))"
                        FullExtent="@(new Extent(-87.7305,
                                -146.4954,
                                13.5582,
                                46.0022,
                                872.5051,
                                781.6756,
                                824.2639,
                                397.0660,
                            new SpatialReference(5,
                                    "et",
                                    "quis",
                                    "ea"),
                                true,
                                true))">
                        <TimeExtent 
                            Start="@(new DateTime(2003, 9, 17, 17, 23, 30))"
                            End="@(new DateTime(2007, 4, 15, 8, 57, 5))">
                        </TimeExtent>
                        <Graphic 
                            Geometry="@(new Extent(134.5407,
                                    7.6194,
                                    85.7198,
                                    61.0505,
                                    265.1766,
                                    600.0096,
                                    330.2570,
                                    137.2251,
                                new SpatialReference(5,
                                        "voluptatem",
                                        "qui",
                                        "et"),
                                    true,
                                    true))"
                            Symbol="@(new TextSymbol("non aliquam est",
                                new MapColor(33, 81, 102),
                                new MapColor(42, 167, 192),
                                    new Dimension(333.9500),
                                new MapFont(new Dimension(631.1790),
                                        "Helvetica",
                                    MapFontStyle.Oblique,
                                    FontWeight.Lighter,
                                    TextDecoration.Underline),
                                    222.1443,
                                new MapColor(63, 44, 114),
                                new MapColor(251, 86, 213),
                                    307.3135,
                                HorizontalAlignment.Right,
                                    true,
                                    73.3015,
                                    new Dimension(213.7622),
                                    true))"
                            PopupTemplate="@(new PopupTemplate("est cum quidem",
                                    "qui",
                                    ["omnis",
                                        "minus",
                                        "qui",
                                        "eum"],
                                [new FieldInfo("title",
                                        "maiores",
                                        "eum",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "id",
                                            "sunt voluptas expedita")),
                                new FieldsPopupContent([new FieldInfo("group",
                                            "voluptas",
                                            "in",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("avatar",
                                            "est",
                                            "molestiae",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("avatar",
                                            "et",
                                            "nihil",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDate),
                                            true,
                                            true,
                                        StatisticType.Avg)],
                                        "provident distinctio ut porro",
                                        "aliquam sunt dignissimos"),
                                new FieldsPopupContent([new FieldInfo("password",
                                            "ex",
                                            "temporibus",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("updatedAt",
                                            "quo",
                                            "labore",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateLeLongTime),
                                            true,
                                            true,
                                        StatisticType.Max)],
                                        "sint ratione tenetur sint et dolores ratione",
                                        "laborum unde itaque"),
                                new FieldsPopupContent([new FieldInfo("group",
                                            "voluptatem",
                                            "sunt",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("password",
                                            "possimus",
                                            "dolorem",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.LongDate),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                        "eveniet odio inventore alias",
                                        "laudantium dolorum rem")],
                                [new ExpressionInfo("return Date();",
                                        "category",
                                        "natus aut ipsam",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("reprehenderit consequatur necessitatibus",
                                        "https://picsum.photos/640/480/?image=451",
                                        "40cd8761-2cd6-ee9e-ce5e-a9993af0bcae",
                                        () => { Console.WriteLine("ipsum"); return Task.CompletedTask; },
                                        "updatedAt",
                                        true,
                                        true,
                                        true,
                                        "consectetur"),
                                new ActionToggle("ipsam et accusamus",
                                        "bc578f0a-b31b-d832-923f-d330598d1a5f",
                                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "title",
                                        "asperiores"),
                                new ActionToggle("est et quo",
                                        "2c686d85-9226-c663-cc27-2d5f74cd3dc6",
                                        () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "status",
                                        "non"),
                                new ActionButton("nulla illum qui",
                                        "https://picsum.photos/640/480/?image=945",
                                        "3fd71e37-5c34-2e6c-9de0-f283c05334a1",
                                        () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                        "createdAt",
                                        true,
                                        true,
                                        true,
                                        "sed")]))"
                            Attributes="@(new AttributesDictionary())"
                            Visible="@(true)"
                            LegendLabel="@("in")"
                            AggregateGeometries="@("illum")"
                            Origin="@(new GraphicOrigin(Guid.NewGuid(),
                                "minus",
                                2))">
                        </Graphic>
                        <GraphicsLayerElevationInfo 
                            FeatureExpressionInfo="@(new GraphicsLayerElevationInfoFeatureExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                    "iusto eum est"))"
                            Mode="@(ElevationInfoMode.AbsoluteHeight)"
                            Offset="@(225.2330)"
                            Unit="@(ElevationUnit.Yards)">
                        </GraphicsLayerElevationInfo>
                    </GraphicsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(graphicsLayer!);
        await AssertJavaScript("assertLayerExists", args: "graphics");
        await graphicsLayer.AddMany([new Graphic(new Polyline([new MapPath([new MapPoint([882.3722,
                            991.0499,
                            421.7108]),
                        new MapPoint([621.2991,
                            899.0750,
                            993.1086,
                            314.8724]),
                        new MapPoint([539.8268,
                            823.0061,
                            269.1539])]),
                        new MapPath([new MapPoint([25.0440,
                                732.9585,
                                255.8449,
                                926.0618]),
                            new MapPoint([815.3071,
                                223.1227,
                                612.0706,
                                141.9012]),
                            new MapPoint([201.8267,
                                10.8901,
                                381.0665]),
                            new MapPoint([631.5028,
                                979.3193,
                                236.5267,
                                833.5806])])],
                    new SpatialReference(3,
                            "vel",
                            "velit",
                            "voluptas"),
                        true,
                        true),
                new TextSymbol("dolores rerum aliquid",
                    new MapColor(89, 113, 145),
                    new MapColor(253, 158, 92),
                        new Dimension(671.5734),
                    new MapFont(new Dimension(874.7835),
                            "Garamond",
                        MapFontStyle.Normal,
                        FontWeight.Lighter,
                        TextDecoration.LineThrough),
                        587.4979,
                    new MapColor(85, 134, 171),
                    new MapColor(106, 252, 184),
                        102.2449,
                    HorizontalAlignment.Center,
                        true,
                        681.1607,
                        new Dimension(379.0555),
                        true),
                new PopupTemplate("blanditiis aut quos",
                        "nostrum",
                        ["possimus",
                            "tempora",
                            "molestiae"],
                    [new FieldInfo("phone",
                            "ad",
                            "repudiandae",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("password",
                            "et",
                            "mollitia",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Min)],
                    [new AttachmentsPopupContent("ea quia in",
                            "repellat aut et iste labore eum illum",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "email",
                            "atque eius et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("omnis ipsam ut",
                            "1060dc10-4e75-f512-63a0-926475657a27",
                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "ut")]),
                    new AttributesDictionary(),
                    true,
                    "cupiditate",
                    "quas",
                    new GraphicOrigin(Guid.NewGuid(),
                        "velit",
                        5)),
            new Graphic(new Point(6.2927,
                        2.3496,
                        166.5811,
                        50.3823,
                        847.7498,
                    new SpatialReference(9,
                            "quis",
                            "voluptatum",
                            "vitae"),
                        true,
                        true,
                        814.2860),
                new TextSymbol("officia doloribus amet",
                    new MapColor(127, 97, 247),
                    new MapColor(234, 66, 79),
                        new Dimension(850.0533),
                    new MapFont(new Dimension(823.3654),
                            "Helvetica",
                        MapFontStyle.Normal,
                        FontWeight.Bold,
                        TextDecoration.Underline),
                        227.4920,
                    new MapColor(157, 9, 79),
                    new MapColor(128, 207, 130),
                        15.6933,
                    HorizontalAlignment.Center,
                        true,
                        433.6696,
                        new Dimension(729.1519),
                        true),
                new PopupTemplate("dolores consequatur blanditiis",
                        "incidunt",
                        ["aut",
                            "officiis",
                            "voluptas",
                            "rerum"],
                    [new FieldInfo("comment",
                            "libero",
                            "praesentium",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new AttachmentsPopupContent("voluptatem accusamus temporibus",
                            "reiciendis voluptatem laboriosam libero qui",
                            AttachmentsPopupContentDisplayType.Preview),
                    new FieldsPopupContent([new FieldInfo("avatar",
                                "soluta",
                                "velit",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("avatar",
                                "totam",
                                "est",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("password",
                                "cum",
                                "dolor",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Var)],
                            "quidem rerum velit veniam neque suscipit",
                            "consequuntur voluptatem unde"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "pariatur",
                                "voluptas sunt dolor"))],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "avatar",
                            "sed ad vero",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("et quia aliquid",
                            "ea4b6396-916e-4996-b31e-ad0050e84638",
                            () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "id"),
                    new ActionButton("autem aut ut",
                            "https://picsum.photos/640/480/?image=841",
                            "f0fb998d-67b5-308e-102c-b4ac55134b5c",
                            () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "et")]),
                    new AttributesDictionary(),
                    true,
                    "similique",
                    "ut",
                    new GraphicOrigin(Guid.NewGuid(),
                        "aut",
                        8))]);
        await graphicsLayer.RemoveAll();
        await graphicsLayer.RemoveMany([new Graphic(new Extent(-107.7046,
                        -134.5771,
                        8.4811,
                        17.0595,
                        392.0658,
                        103.3832,
                        651.5156,
                        815.4373,
                    new SpatialReference(1,
                            "laboriosam",
                            "laboriosam",
                            "fugiat"),
                        true,
                        true),
                new TextSymbol("consectetur delectus et",
                    new MapColor(88, 171, 177),
                    new MapColor(146, 29, 95),
                        new Dimension(901.3869),
                    new MapFont(new Dimension(549.3247),
                            "Verdana",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.Underline),
                        467.7770,
                    new MapColor(179, 71, 113),
                    new MapColor(129, 22, 135),
                        970.0963,
                    HorizontalAlignment.Right,
                        true,
                        657.8610,
                        new Dimension(134.1266),
                        true),
                new PopupTemplate("hic consequatur et",
                        "impedit",
                        ["sed",
                            "iusto",
                            "asperiores",
                            "tenetur"],
                    [new FieldInfo("avatar",
                            "vel",
                            "itaque",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("group",
                            "nostrum",
                            "dolor",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("createdAt",
                            "rem",
                            "officia",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("title",
                            "maiores",
                            "doloremque",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new RelationshipPopupContent("laudantium eius ad",
                            "eveniet voluptate odit modi nisi",
                            6,
                            "esse",
                        [new RelatedRecordsInfoFieldOrder("totam",
                            OrderBy.Desc)],
                            8),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "quia",
                                "earum illum omnis"))],
                    [new ExpressionInfo("return Date();",
                            "createdAt",
                            "harum nulla dolorem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "comment",
                            "neque omnis quae",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "updatedAt",
                            "et quae fugiat",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("voluptatem recusandae eveniet",
                            "https://picsum.photos/640/480/?image=551",
                            "c6664d29-a5ad-7565-2aba-8f89de797459",
                            () => { Console.WriteLine("facere"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "iste"),
                    new ActionButton("mollitia incidunt sit",
                            "https://picsum.photos/640/480/?image=1023",
                            "70f2e7b3-d8e8-e778-fac7-7806369dcbfd",
                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "facere"),
                    new ActionToggle("libero aut quod",
                            "07636152-4090-8aa9-c775-0d791ad69063",
                            () => { Console.WriteLine("quas"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "eligendi"),
                    new ActionButton("ea quod ad",
                            "https://picsum.photos/640/480/?image=529",
                            "c2cf34e5-096c-8737-45fd-977e7a8af945",
                            () => { Console.WriteLine("repellat"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "laborum")]),
                    new AttributesDictionary(),
                    true,
                    "molestiae",
                    "magni",
                    new GraphicOrigin(Guid.NewGuid(),
                        "ut",
                        3))]);
        ListMode testListMode = ListMode.Show;
        await graphicsLayer.SetListMode(testListMode);
        var listMode = await graphicsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        BlendMode testBlendMode = BlendMode.SourceIn;
        await graphicsLayer.SetBlendMode(testBlendMode);
        var blendMode = await graphicsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        GraphicsLayerElevationInfo testElevationInfo = new GraphicsLayerElevationInfo(new GraphicsLayerElevationInfoFeatureExpressionInfo("var area = Geometry($feature).area; return area;",
                        "ut id omnis"),
                ElevationInfoMode.OnTheGround,
                    882.6646,
                ElevationUnit.Miles);
        await graphicsLayer.SetElevationInfo(testElevationInfo);
        var elevationInfo = await graphicsLayer.GetElevationInfo();
        Assert.AreEqual(testElevationInfo, elevationInfo);
        Extent testFullExtent = new Extent(-39.1138,
                    68.0583,
                    20.7413,
                    26.8577,
                    158.2426,
                    550.4891,
                    984.6582,
                    632.0450,
                new SpatialReference(9,
                        "et",
                        "dignissimos",
                        "nam"),
                    true,
                    true);
        await graphicsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await graphicsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2019, 3, 10, 14, 39, 11),
                    new DateTime(2013, 4, 26, 2, 3, 58));
        await graphicsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await graphicsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
