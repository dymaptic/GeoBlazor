@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("aut")"
                        BlendMode="@(BlendMode.Multiply)"
                        Copyright="@("harum")"
                        Effect="@(new Effect("ut",
                            20248572.1768))"
                        FullExtent="@(new Extent(97.7739,
                                -40.9035,
                                -7.8255,
                                -14.9410,
                                288.7528,
                                35.6262,
                                497.0804,
                                536.6953,
                            new SpatialReference(7,
                                    "ut",
                                    "qui",
                                    "ad"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(43842364.4798)"
                        MinScale="@(1207.5491)"
                        Opacity="@(0.0282)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(129.9190)"
                        Resampling="@(true)"
                        TileServers="@(["soluta",
                            "error"])"
                        Title="@("numquam voluptatem perferendis")"
                        Url="@("https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2017, 1, 1, 17, 45, 25))"
                            End="@(new DateTime(2001, 8, 13, 20, 7, 45))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(210.9086)"
                            Format="@(TileInfoFormat.Pdf)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(1,
                                    "vitae",
                                    42.4909,
                                    19776813.4478),
                            new LOD(8,
                                    "at",
                                    85.3353,
                                    30461824.0463)])"
                            Origin="@(new Point(133.6066,
                                    -37.1533,
                                    -61.8182,
                                    1.1422,
                                    844.6032,
                                new SpatialReference(1,
                                        "cupiditate",
                                        "sapiente",
                                        "aperiam"),
                                    true,
                                    true,
                                    964.9988))"
                            Size="@([4,
                                6,
                                6])"
                            SpatialReference="@(new SpatialReference(9,
                                    "porro",
                                    "aut",
                                    "qui"))">
                        </TileInfo>
                        <PortalItem 
                            Access="@(PortalItemAccess.Private)"
                            AccessInformation="@("ut")"
                            ApiKey="@("ad")"
                            AvgRating="@(551.6895)"
                            Categories="@(["natus",
                                "nesciunt",
                                "molestias",
                                "inventore"])"
                            Created="@(new DateTime(2002, 2, 22, 3, 46, 30))"
                            Culture="@("eos")"
                            Description="@("quam eligendi non debitis modi nulla")"
                            Extent="@(new Extent(-106.7921,
                                    -131.1886,
                                    17.2663,
                                    -28.4501,
                                    508.3209,
                                    321.4707,
                                    551.6385,
                                    734.6579,
                                new SpatialReference(9,
                                        "odit",
                                        "animi",
                                        "libero"),
                                    true,
                                    true))"
                            GroupCategories="@(["ut",
                                "culpa",
                                "qui",
                                "excepturi"])"
                            LicenseInfo="@("mollitia")"
                            Modified="@(new DateTime(2021, 11, 19, 13, 19, 31))"
                            Name="@("token")"
                            NumComments="@(921.9336)"
                            NumRatings="@(97.0587)"
                            NumViews="@(884.6647)"
                            Owner="@("Erik Dicki")"
                            OwnerFolder="@("Tamara Runolfsdottir")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.Immediate,
                                    ["sed",
                                        "qui",
                                        "minima",
                                        "tempora"],
                                    "vel",
                                    "rerum",
                                    "maxime",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("id")"
                            Screenshots="@(["sunt",
                                "et",
                                "sed"])"
                            Size="@(5)"
                            Snippet="@("laborum")"
                            Tags="@(["exercitationem",
                                "tempora",
                                "soluta",
                                "quo"])"
                            Title="@("quis beatae quasi")"
                            TypeKeywords="@(["vel",
                                "omnis",
                                "commodi",
                                "facilis"])"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(2)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(3800744.6519)"
                            MinScale="@(36253.0990)"
                            Opacity="@(0.9940)"
                            PopupEnabled="@(true)"
                            Title="@("nihil incidunt exercitationem")"
                            Visible="@(true)"
                            DefinitionExpression="@("ducimus")"
                            FloorInfo="@(new LayerFloorInfo("quis"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterStart,
                                    "officia",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    36359462.7770,
                                    9903.7671,
                                    true,
                                    new Dimension(522.5969),
                                new TextSymbol("sint cum repellendus",
                                    new MapColor(74, 227, 220),
                                    new MapColor(148, 16, 24),
                                        new Dimension(146.0452),
                                    new MapFont(new Dimension(788.2031),
                                            "Palatino",
                                        MapFontStyle.Italic,
                                        FontWeight.Lighter,
                                        TextDecoration.Underline),
                                        994.3240,
                                    new MapColor(157, 159, 72),
                                    new MapColor(244, 120, 77),
                                        58.3246,
                                    HorizontalAlignment.Right,
                                        true,
                                        116.5509,
                                        new Dimension(56.5558),
                                        true),
                                    true,
                                    "PostalCode = 'M5V 1J9'"),
                            new Label(LabelPlacement.BelowLeft,
                                    "quia",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    977700.5993,
                                    20001.6516,
                                    true,
                                    new Dimension(386.3900),
                                new TextSymbol("natus vel sit",
                                    new MapColor(216, 208, 150),
                                    new MapColor(193, 49, 252),
                                        new Dimension(396.1386),
                                    new MapFont(new Dimension(574.7682),
                                            "Bookman",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        673.8004,
                                    new MapColor(209, 164, 95),
                                    new MapColor(233, 193, 197),
                                        567.0680,
                                    HorizontalAlignment.Center,
                                        true,
                                        799.6789,
                                        new Dimension(238.3256),
                                        true),
                                    true,
                                    "1 = 1")])"
                            PopupTemplate="@(new PopupTemplate("rerum porro maxime",
                                    "veniam",
                                    ["similique",
                                        "sunt",
                                        "exercitationem"],
                                [new FieldInfo("phone",
                                        "ut",
                                        "ea",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("email",
                                        "vel",
                                        "repellendus",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateLeShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("group",
                                        "et",
                                        "magni",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("name",
                                        "voluptatem",
                                        "molestias",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                [new AttachmentsPopupContent("velit dolor deleniti",
                                        "aut et voluptates aut consequatur",
                                        AttachmentsPopupContentDisplayType.Preview),
                                new FieldsPopupContent([new FieldInfo("email",
                                            "libero",
                                            "omnis",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Avg)],
                                        "id sit sit est",
                                        "voluptas inventore vel"),
                                new AttachmentsPopupContent("repellat eum quae",
                                        "provident quas pariatur et",
                                        AttachmentsPopupContentDisplayType.Preview),
                                new MediaPopupContent("adipisci perferendis dolores",
                                        "reiciendis nihil impedit aut sint",
                                    [new LineChartMediaInfo("aut sint et",
                                            "commodi",
                                            "voluptatem ut et",
                                        new ChartMediaInfoValue(["aspernatur",
                                                "aspernatur",
                                                "facere",
                                                "numquam"],
                                                "dolorem",
                                                "ab",
                                            [new ChartMediaInfoValueSeries("phone",
                                                    "sunt",
                                                    944.2605),
                                            new ChartMediaInfoValueSeries("group",
                                                    "perferendis",
                                                    252.9727),
                                            new ChartMediaInfoValueSeries("category",
                                                    "et",
                                                    125.0099)],
                                            [new MapColor(218, 149, 128),
                                            new MapColor(205, 68, 205)])),
                                    new LineChartMediaInfo("mollitia dicta alias",
                                            "omnis",
                                            "at non nihil",
                                        new ChartMediaInfoValue(["quia",
                                                "molestiae",
                                                "odit"],
                                                "sunt",
                                                "asperiores",
                                            [new ChartMediaInfoValueSeries("status",
                                                    "ut",
                                                    778.7230)],
                                            [new MapColor(113, 90, 23),
                                            new MapColor(128, 108, 60),
                                            new MapColor(77, 143, 75),
                                            new MapColor(181, 113, 110)])),
                                    new BarChartMediaInfo("eius voluptatem dolor",
                                            "est",
                                            "non a quis",
                                        new ChartMediaInfoValue(["sint",
                                                "minima"],
                                                "sed",
                                                "in",
                                            [new ChartMediaInfoValueSeries("email",
                                                    "voluptatem",
                                                    97.3398),
                                            new ChartMediaInfoValueSeries("phone",
                                                    "nostrum",
                                                    410.0774)],
                                            [new MapColor(92, 74, 254),
                                            new MapColor(218, 95, 111),
                                            new MapColor(154, 156, 1)]))],
                                        8)],
                                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "createdAt",
                                        "ratione natus vel",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "updatedAt",
                                        "dolores vel quisquam",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "phone",
                                        "cum quia labore",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "group",
                                        "laborum sit natus",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("sint aspernatur praesentium",
                                        "aa884762-c8f1-76a4-da5c-fc448b43f4ab",
                                        () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "title",
                                        "qui")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("aut amet aut",
                                    new MapColor(93, 162, 152),
                                    new MapColor(68, 67, 120),
                                        new Dimension(538.7967),
                                    new MapFont(new Dimension(218.3787),
                                            "Courier New",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        486.8692,
                                    new MapColor(236, 79, 90),
                                    new MapColor(184, 208, 231),
                                        299.9856,
                                    HorizontalAlignment.Right,
                                        true,
                                        23.0823,
                                        new Dimension(510.0940),
                                        true),
                                    "est",
                                [new RotationVariable("sunt",
                                    Axis.Heading,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "sequi nihil ducimus"),
                                        "qui",
                                        "autem repudiandae at"),
                                new OpacityVariable("doloremque",
                                        "ipsum",
                                    [new OpacityStop(812.5162,
                                            0.8077,
                                            "quam"),
                                    new OpacityStop(359.4558,
                                            0.3906,
                                            "quas"),
                                    new OpacityStop(404.7834,
                                            0.1016,
                                            "ea"),
                                    new OpacityStop(860.0181,
                                            0.8976,
                                            "odit")],
                                    new VisualVariableLegendOptions(true,
                                            "dolore eum neque"),
                                        "perferendis",
                                        "blanditiis debitis odio")],
                                new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(122, 25, 49),
                                        new MapColor(217, 27, 246)),
                                        77.1738,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(632.2077,
                                                381.1098),
                                        new AuthoringInfoField1ClassBreakInfos(203.6153,
                                                584.0099),
                                        new AuthoringInfoField1ClassBreakInfos(220.3173,
                                                291.7543),
                                        new AuthoringInfoField1ClassBreakInfos(445.2287,
                                                202.6680)],
                                            "enim",
                                            "rerum",
                                            "beatae"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(227.5801,
                                                597.2316),
                                        new AuthoringInfoField1ClassBreakInfos(356.7868,
                                                125.6213),
                                        new AuthoringInfoField1ClassBreakInfos(193.7213,
                                                148.1555),
                                        new AuthoringInfoField1ClassBreakInfos(211.0631,
                                                585.7164)],
                                            "rerum",
                                            "accusantium",
                                            "nam"),
                                        ["culpa",
                                            "qui",
                                            "pariatur"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "at",
                                        true,
                                    LengthUnit.Millimeters,
                                        864.5272,
                                        724.7903,
                                        547.7769,
                                        994.4251)))"
                            Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(1)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(36489302.7012)"
                                MinScale="@(19115.6351)"
                                Opacity="@(0.3177)"
                                PopupEnabled="@(true)"
                                Title="@("esse eum sint")"
                                Visible="@(true)"
                                DefinitionExpression="@("debitis")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(6)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(25655069.7660)"
                                    MinScale="@(5138.3338)"
                                    Opacity="@(0.9794)"
                                    PopupEnabled="@(true)"
                                    Title="@("atque veritatis officia")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("earum")"
                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(9)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(46890881.5603)"
                                        MinScale="@(35732.0174)"
                                        Opacity="@(0.4726)"
                                        PopupEnabled="@(true)"
                                        Title="@("qui velit hic")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("saepe")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(2)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(15056879.6009)"
                                            MinScale="@(24831.7935)"
                                            Opacity="@(0.0740)"
                                            PopupEnabled="@(true)"
                                            Title="@("deleniti aut ab")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("ut")"
                                            Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(2)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(27437358.0155)"
                                                MinScale="@(38677.0172)"
                                                Opacity="@(0.1336)"
                                                PopupEnabled="@(true)"
                                                Title="@("quia velit qui")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("impedit")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(9)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(15588735.5546)"
                                                    MinScale="@(671.6656)"
                                                    Opacity="@(0.2142)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("sed nostrum est")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("placeat")"
                                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("laborum libero aut")"
                                                        StringContent="@("aliquam")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("totam")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("maiores iure maiores")"
                                                    StringContent="@("molestiae")"
                                                    OutFields="@(["quis",
                                                        "facilis"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new TextPopupContent(),
                                                    new ExpressionPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "31deaf3c-f4b5-f53a-30fb-8d48c2bb0368",
                                                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "78716896-ed8b-5d65-56e8-f7ff5f024c2b",
                                                            () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterBefore)"
                                                    LabelExpression="@("atque")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(16779096.9559)"
                                                    MinScale="@(49993.7592)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(273.9582))"
                                                    Symbol="@(new TextSymbol("incidunt non ducimus"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Street = '123 Main St.'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("voluptatem")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                        906.6073,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["veniam",
                                                            "natus",
                                                            "quae"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "repudiandae",
                                                        true,
                                                    LengthUnit.Meters,
                                                        222.0663,
                                                        413.8761,
                                                        489.3721,
                                                        444.3985))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("enim culpa ut")"
                                                StringContent="@("dolorem")"
                                                OutFields="@(["repellendus",
                                                    "corporis",
                                                    "et"])"
                                                FieldInfos="@([new FieldInfo("id",
                                                        "eius",
                                                        "est",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("group",
                                                        "id",
                                                        "illum",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var),
                                                new FieldInfo("name",
                                                        "a",
                                                        "aut",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max)])"
                                                Content="@([new TextPopupContent("totam iure nihil"),
                                                new MediaPopupContent("quae expedita necessitatibus",
                                                        "asperiores incidunt ut impedit atque",
                                                    [new BarChartMediaInfo(),
                                                    new ImageMediaInfo(),
                                                    new ImageMediaInfo()],
                                                        5)])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                        "avatar",
                                                        "deserunt quis inventore"),
                                                new ExpressionInfo("return Date();",
                                                        "group",
                                                        "non repudiandae voluptatem"),
                                                new ExpressionInfo("return Date();",
                                                        "avatar",
                                                        "est at laudantium"),
                                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "createdAt",
                                                        "odio facere quas")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("quas voluptatem distinctio",
                                                        "93a74ae6-a1a5-7a0e-26f7-a3037e6d0df5",
                                                        () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "comment",
                                                        "quidem")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveCenter)"
                                                LabelExpression="@("eum")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(27479062.7637)"
                                                MinScale="@(32392.6687)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(70.6832))"
                                                Symbol="@(new TextSymbol("sunt ab facilis",
                                                    new MapColor(75, 2, 18),
                                                    new MapColor(58, 65, 146),
                                                        null,
                                                    new MapFont(),
                                                        608.8660,
                                                    new MapColor(181, 110, 244),
                                                    new MapColor(127, 38, 15),
                                                        453.2317,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        36.4523,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Province = 'Ontario'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("ad")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv)]),
                                                    572.5650,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "delectus",
                                                        "distinctio",
                                                        "quo"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "totam",
                                                        "eos",
                                                        "libero"),
                                                    ["nihil",
                                                        "deserunt"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "sed",
                                                    true,
                                                LengthUnit.Feet,
                                                    712.0505,
                                                    158.1183,
                                                    746.6065,
                                                    648.8464))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("architecto iusto minima")"
                                            StringContent="@("pariatur")"
                                            OutFields="@(["dolorem",
                                                "a"])"
                                            FieldInfos="@([new FieldInfo("comment",
                                                    "praesentium",
                                                    "accusamus",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("comment",
                                                    "minus",
                                                    "et",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.LongMonthDayYearLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("phone",
                                                    "animi",
                                                    "quo",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("phone",
                                                    "totam",
                                                    "voluptatum",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.LongDate),
                                                    true,
                                                    true,
                                                StatisticType.Min)])"
                                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                                        "et",
                                                        "omnis earum deserunt")),
                                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                                        "doloribus",
                                                        "officia laborum asperiores"))])"
                                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "category",
                                                    "eligendi qui est",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "avatar",
                                                    "necessitatibus repudiandae rerum",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "avatar",
                                                    "quisquam ducimus minima",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "id",
                                                    "ullam dolores qui",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("sit qui at",
                                                    "https://picsum.photos/640/480/?image=686",
                                                    "2d0bd810-50c5-8b0d-76e5-006a8d13c884",
                                                    () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                                    "createdAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "officiis"),
                                            new ActionButton("et mollitia provident",
                                                    "https://picsum.photos/640/480/?image=266",
                                                    "d623201a-9f71-f47f-0a6e-5326ae2a3c63",
                                                    () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                                                    "group",
                                                    true,
                                                    true,
                                                    true,
                                                    "enim")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveBefore)"
                                            LabelExpression="@("rerum")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(28486627.8596)"
                                            MinScale="@(13615.6951)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(550.9544))"
                                            Symbol="@(new TextSymbol("voluptas et culpa",
                                                new MapColor(89, 188, 230),
                                                new MapColor(190, 124, 218),
                                                    new Dimension(53.4603),
                                                new MapFont(new Dimension(810.2739),
                                                        "Arial",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Bolder,
                                                    TextDecoration.LineThrough),
                                                    662.5210,
                                                new MapColor(19, 218, 118),
                                                new MapColor(59, 95, 145),
                                                    776.9729,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    453.2158,
                                                    new Dimension(696.0789),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Country = 'Canada'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("ad")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(201, 101, 114),
                                                new MapColor(210, 182, 230)),
                                                413.5843,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(212.7654,
                                                        444.5916),
                                                new AuthoringInfoField1ClassBreakInfos(403.0506,
                                                        782.3665),
                                                new AuthoringInfoField1ClassBreakInfos(301.1467,
                                                        503.8714),
                                                new AuthoringInfoField1ClassBreakInfos(635.5174,
                                                        589.4727)],
                                                    "quaerat",
                                                    "aut",
                                                    "porro"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(585.9594,
                                                        908.9783),
                                                new AuthoringInfoField1ClassBreakInfos(628.4013,
                                                        45.6922),
                                                new AuthoringInfoField1ClassBreakInfos(495.0080,
                                                        35.5685),
                                                new AuthoringInfoField1ClassBreakInfos(783.3320,
                                                        210.7957)],
                                                    "consectetur",
                                                    "blanditiis",
                                                    "vero"),
                                                ["ipsam",
                                                    "vel",
                                                    "eum"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "neque",
                                                true,
                                            LengthUnit.Miles,
                                                910.9976,
                                                460.0427,
                                                450.6322,
                                                173.3065))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("accusantium dicta dolor")"
                                        StringContent="@("distinctio")"
                                        OutFields="@(["soluta",
                                            "similique",
                                            "esse",
                                            "quas"])"
                                        FieldInfos="@([new FieldInfo("avatar",
                                                "et",
                                                "aspernatur",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Var)])"
                                        Content="@([new AttachmentsPopupContent("pariatur voluptatem neque",
                                                "labore voluptas unde libero est",
                                                AttachmentsPopupContentDisplayType.Preview),
                                        new RelationshipPopupContent("ullam id et",
                                                "sed aut voluptas ipsam non",
                                                2,
                                                "neque",
                                            [new RelatedRecordsInfoFieldOrder("alias",
                                                OrderBy.Asc)],
                                                6),
                                        new RelationshipPopupContent("cupiditate veritatis repellendus",
                                                "omnis magni veniam laborum est blanditiis",
                                                4,
                                                "quas",
                                            [new RelatedRecordsInfoFieldOrder("optio",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("sit",
                                                OrderBy.Asc)],
                                                7)])"
                                        ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "password",
                                                "nostrum qui qui",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("sint quas aliquam",
                                                "https://picsum.photos/640/480/?image=260",
                                                "f2365e92-2d27-26a1-cae2-3ed5ed3baccb",
                                                () => { Console.WriteLine("ducimus"); return Task.CompletedTask; },
                                                "category",
                                                true,
                                                true,
                                                true,
                                                "atque")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterRight)"
                                        LabelExpression="@("corporis")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(43420315.4776)"
                                        MinScale="@(8910.8393)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(600.2915))"
                                        Symbol="@(new TextSymbol("totam quia at",
                                            new MapColor(18, 84, 27),
                                            new MapColor(155, 96, 57),
                                                new Dimension(965.6421),
                                            new MapFont(new Dimension(656.9950),
                                                    "Times New Roman",
                                                MapFontStyle.Normal,
                                                FontWeight.Normal,
                                                TextDecoration.Underline),
                                                942.4944,
                                            new MapColor(187, 46, 177),
                                            new MapColor(119, 34, 66),
                                                922.8454,
                                            HorizontalAlignment.Left,
                                                true,
                                                2.8684,
                                                new Dimension(115.0154),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Country = 'Canada'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("nisi")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(109, 182, 180),
                                                new MapColor(106, 199, 154))]),
                                            844.2311,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(305.4840,
                                                    992.5102)],
                                                "neque",
                                                "vitae",
                                                "autem"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(729.9796,
                                                    363.7188),
                                            new AuthoringInfoField1ClassBreakInfos(287.2718,
                                                    291.4405)],
                                                "facere",
                                                "sapiente",
                                                "accusantium"),
                                            ["odit",
                                                "cupiditate",
                                                "quod",
                                                "delectus"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "deleniti",
                                            true,
                                        LengthUnit.Yards,
                                            105.1421,
                                            559.8018,
                                            670.4655,
                                            454.4629))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("itaque distinctio fuga")"
                                    StringContent="@("cupiditate")"
                                    OutFields="@(["assumenda",
                                        "et"])"
                                    FieldInfos="@([new FieldInfo("id",
                                            "mollitia",
                                            "illo",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("updatedAt",
                                            "quasi",
                                            "adipisci",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongMonthDayYear),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("status",
                                            "et",
                                            "voluptas",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongMonthDayYear),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("createdAt",
                                            "eos",
                                            "rerum",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Var)])"
                                    Content="@([new MediaPopupContent("aliquam dignissimos enim",
                                            "est eum sunt explicabo voluptate possimus saepe",
                                        [new BarChartMediaInfo("numquam dolorem in",
                                                "quasi",
                                                "ipsum impedit facere",
                                            new ChartMediaInfoValue(["earum",
                                                    "non"],
                                                    "facere",
                                                    "dolores",
                                                [new ChartMediaInfoValueSeries("updatedAt",
                                                        "minima",
                                                        89.1747)],
                                                [new MapColor(96, 139, 22),
                                                new MapColor(219, 249, 232),
                                                new MapColor(212, 225, 70),
                                                new MapColor(233, 228, 27)]))],
                                            6),
                                    new AttachmentsPopupContent("nostrum quia placeat",
                                            "consectetur eligendi provident aut iusto",
                                            AttachmentsPopupContentDisplayType.Auto),
                                    new FieldsPopupContent([new FieldInfo("comment",
                                                "quia",
                                                "ipsam",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("avatar",
                                                "suscipit",
                                                "ut",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongDate),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("name",
                                                "sequi",
                                                "nam",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Count)],
                                            "vero fugit est repellat blanditiis",
                                            "ducimus facere aut"),
                                    new FieldsPopupContent([new FieldInfo("status",
                                                "eos",
                                                "nisi",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("id",
                                                "esse",
                                                "eum",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("phone",
                                                "dolorum",
                                                "iure",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("token",
                                                "ad",
                                                "illum",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Min)],
                                            "quod ea sequi nesciunt",
                                            "perferendis quae dolorem")])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                            "title",
                                            "molestias aut ab",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "avatar",
                                            "nisi blanditiis nisi",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                            "password",
                                            "aut voluptates voluptatibus",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "title",
                                            "et deserunt autem",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("blanditiis distinctio sed",
                                            "b782821e-d566-8e47-5cba-71e9bca69336",
                                            () => { Console.WriteLine("accusantium"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "title",
                                            "corporis"),
                                    new ActionButton("aut laboriosam autem",
                                            "https://picsum.photos/640/480/?image=161",
                                            "1677bf3d-b88c-18fb-92ca-7eba0d16210d",
                                            () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                            "title",
                                            true,
                                            true,
                                            true,
                                            "architecto"),
                                    new ActionToggle("qui magnam ad",
                                            "e28fed95-142b-eb4e-725a-5e0651bb8e14",
                                            () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "qui")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveCenter)"
                                    LabelExpression="@("ex")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(7854749.1180)"
                                    MinScale="@(43100.1079)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(531.8196))"
                                    Symbol="@(new TextSymbol("quia consequatur expedita",
                                        new MapColor(246, 49, 234),
                                        new MapColor(130, 170, 195),
                                            new Dimension(378.3745),
                                        new MapFont(new Dimension(944.4246),
                                                "Courier New",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            608.9179,
                                        new MapColor(34, 249, 22),
                                        new MapColor(251, 60, 84),
                                            920.8024,
                                        HorizontalAlignment.Center,
                                            true,
                                            470.7069,
                                            new Dimension(612.4508),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("City = 'Toronto'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("culpa")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(238.4028,
                355.3166,
                531.1846,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(6);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(255.9284,
                424.7035,
                733.0431);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.DestinationAtop;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-69.6780,
                    50.1737,
                    74.5073,
                    -84.2337,
                    50.8843,
                    135.0195,
                    25.7666,
                    95.1904,
                new SpatialReference(7,
                        "dolor",
                        "est",
                        "laudantium"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "qui",
                    "dolorem",
                    456.1576,
                    ["asperiores",
                        "qui",
                        "sapiente"],
                    new DateTime(2001, 2, 26, 12, 44, 47),
                    "excepturi",
                    "exercitationem dolor architecto impedit voluptate voluptas et",
                new Extent(71.4440,
                        -60.9482,
                        62.0699,
                        82.3985,
                        937.4704,
                        539.9909,
                        25.3254,
                        758.1513,
                    new SpatialReference(7,
                            "est",
                            "quis",
                            "itaque"),
                        true,
                        true),
                    ["tenetur",
                        "accusantium",
                        "nulla"],
                    "temporibus",
                    new DateTime(2017, 1, 10, 19, 57, 13),
                    "status",
                    140.2984);
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    39941999.2338,
                    1496.8147,
                    0.8776,
                    true,
                    "excepturi voluptatem quo",
                    true,
                    "numquam",
                new LayerFloorInfo("eius"),
                [new Label(LabelPlacement.BelowAfter,
                        "atque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        15146978.7852,
                        43843.7788,
                        true,
                        new Dimension(224.9330),
                    new TextSymbol("deserunt ullam est",
                        new MapColor(162, 147, 228),
                        new MapColor(41, 56, 99),
                            new Dimension(158.7075),
                        new MapFont(new Dimension(508.2224),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            743.4077,
                        new MapColor(239, 17, 87),
                        new MapColor(212, 10, 252),
                            293.7202,
                        HorizontalAlignment.Right,
                            true,
                            109.0610,
                            new Dimension(65.7403),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AboveLeft,
                        "perspiciatis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        27322647.1988,
                        17877.7265,
                        true,
                        new Dimension(961.8082),
                    new TextSymbol("architecto exercitationem numquam",
                        new MapColor(178, 58, 202),
                        new MapColor(126, 40, 222),
                            new Dimension(330.9415),
                        new MapFont(new Dimension(913.7110),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            24.3448,
                        new MapColor(221, 106, 137),
                        new MapColor(194, 247, 128),
                            232.1168,
                        HorizontalAlignment.Center,
                            true,
                            965.7758,
                            new Dimension(810.0149),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("reprehenderit est quod",
                        "quae",
                        ["vero",
                            "vero",
                            "nemo"],
                    [new FieldInfo("email",
                            "minima",
                            "blanditiis",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("updatedAt",
                            "id",
                            "eligendi",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new MediaPopupContent("perferendis sed distinctio",
                            "quia voluptatem accusantium inventore et et sed",
                        [new ColumnChartMediaInfo("eveniet laudantium et",
                                "natus",
                                "aperiam veritatis incidunt",
                            new ChartMediaInfoValue(["veniam",
                                    "et"],
                                    "ullam",
                                    "eligendi",
                                [new ChartMediaInfoValueSeries("category",
                                        "illum",
                                        871.7972),
                                new ChartMediaInfoValueSeries("createdAt",
                                        "et",
                                        939.1338),
                                new ChartMediaInfoValueSeries("group",
                                        "ad",
                                        29.4658)],
                                [new MapColor(173, 177, 154)])),
                        new LineChartMediaInfo("totam sit quae",
                                "aliquam",
                                "non id cumque",
                            new ChartMediaInfoValue(["sed",
                                    "dolorem",
                                    "quis",
                                    "est"],
                                    "assumenda",
                                    "delectus",
                                [new ChartMediaInfoValueSeries("status",
                                        "praesentium",
                                        38.3466),
                                new ChartMediaInfoValueSeries("token",
                                        "id",
                                        232.7695)],
                                [new MapColor(101, 233, 205),
                                new MapColor(67, 33, 235),
                                new MapColor(229, 31, 243)]))],
                            6)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "name",
                            "rem quis laudantium",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "id",
                            "accusantium nostrum explicabo",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("at nisi consectetur",
                            "https://picsum.photos/640/480/?image=103",
                            "6f2ca1f4-58fa-d4ea-7b26-a2dcf1df7775",
                            () => { Console.WriteLine("quisquam"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "inventore"),
                    new ActionToggle("quos rem quidem",
                            "9a7d7053-4ea7-06ba-1427-da31e7b26e75",
                            () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "eos"),
                    new ActionToggle("necessitatibus in aut",
                            "d059dc1a-3033-6aa5-56f3-3080717fa5a8",
                            () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "modi"),
                    new ActionToggle("quis impedit vero",
                            "b89bd2c3-7729-84db-8cc8-1ac915535621",
                            () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "group",
                            "ad")])),
            new Sublayer(2,
                    true,
                    true,
                ListMode.Hide,
                    20015965.9293,
                    48593.0493,
                    0.0809,
                    true,
                    "nisi aut tenetur",
                    true,
                    "delectus",
                new LayerFloorInfo("voluptas"),
                [new Label(LabelPlacement.CenterCenter,
                        "doloremque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        43535185.5843,
                        4917.9121,
                        true,
                        new Dimension(742.7765),
                    new TextSymbol("nam enim consectetur",
                        new MapColor(10, 4, 177),
                        new MapColor(106, 188, 138),
                            new Dimension(795.2749),
                        new MapFont(new Dimension(322.0019),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            671.6503,
                        new MapColor(53, 167, 132),
                        new MapColor(129, 20, 141),
                            134.9452,
                        HorizontalAlignment.Center,
                            true,
                            663.6753,
                            new Dimension(438.6322),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("at blanditiis voluptatibus",
                        "sapiente",
                        ["quam",
                            "id",
                            "accusamus"],
                    [new FieldInfo("password",
                            "est",
                            "perspiciatis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLongTime24),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new RelationshipPopupContent("et id enim",
                            "in vel et rerum quia voluptatem laborum",
                            3,
                            "enim",
                        [new RelatedRecordsInfoFieldOrder("sit",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("nulla",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("voluptatem",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("illum",
                            OrderBy.Desc)],
                            1)],
                    [new ExpressionInfo("return Date();",
                            "updatedAt",
                            "molestiae voluptates id",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("eligendi cumque nostrum",
                            "https://picsum.photos/640/480/?image=757",
                            "eb41347d-6a8b-291b-7fc1-9d60fc0d159a",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "molestiae")])),
            new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    25022111.3540,
                    19169.1407,
                    0.4686,
                    true,
                    "fugiat qui enim",
                    true,
                    "beatae",
                new LayerFloorInfo("officia"),
                [new Label(LabelPlacement.BelowAfter,
                        "magni",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        8626143.9511,
                        22356.4172,
                        true,
                        new Dimension(954.2402),
                    new TextSymbol("non quo tenetur",
                        new MapColor(151, 218, 18),
                        new MapColor(107, 249, 46),
                            new Dimension(934.5070),
                        new MapFont(new Dimension(362.6774),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            185.1751,
                        new MapColor(88, 142, 208),
                        new MapColor(186, 247, 22),
                            280.0787,
                        HorizontalAlignment.Right,
                            true,
                            666.3439,
                            new Dimension(117.4068),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.BelowAfter,
                        "beatae",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        36411169.1043,
                        25484.5917,
                        true,
                        new Dimension(452.7430),
                    new TextSymbol("qui maiores cupiditate",
                        new MapColor(153, 63, 87),
                        new MapColor(99, 249, 114),
                            new Dimension(260.9410),
                        new MapFont(new Dimension(519.3905),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            730.3102,
                        new MapColor(127, 137, 131),
                        new MapColor(22, 121, 68),
                            379.3312,
                        HorizontalAlignment.Left,
                            true,
                            172.5424,
                            new Dimension(206.2439),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.AboveCenter,
                        "rem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        48045348.0433,
                        27895.5771,
                        true,
                        new Dimension(249.4349),
                    new TextSymbol("numquam laboriosam ut",
                        new MapColor(130, 59, 249),
                        new MapColor(208, 78, 251),
                            new Dimension(701.7770),
                        new MapFont(new Dimension(161.2469),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            604.5070,
                        new MapColor(147, 27, 148),
                        new MapColor(92, 254, 27),
                            91.3653,
                        HorizontalAlignment.Left,
                            true,
                            174.2288,
                            new Dimension(512.9199),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "aut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        19622558.0774,
                        40577.4996,
                        true,
                        new Dimension(603.1584),
                    new TextSymbol("officia voluptatem occaecati",
                        new MapColor(64, 148, 140),
                        new MapColor(233, 244, 243),
                            new Dimension(778.6085),
                        new MapFont(new Dimension(770.0211),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            219.7885,
                        new MapColor(222, 240, 34),
                        new MapColor(196, 124, 183),
                            57.8323,
                        HorizontalAlignment.Left,
                            true,
                            964.5219,
                            new Dimension(306.4031),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("qui alias illum",
                        "distinctio",
                        ["adipisci",
                            "qui",
                            "libero"],
                    [new FieldInfo("avatar",
                            "eaque",
                            "velit",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("phone",
                            "voluptas",
                            "eos",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new FieldsPopupContent([new FieldInfo("phone",
                                "maxime",
                                "repellendus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                            "deserunt omnis alias ut sed doloremque",
                            "earum unde eveniet"),
                    new MediaPopupContent("est debitis doloribus",
                            "ab rem magni laudantium suscipit sunt",
                        [new BarChartMediaInfo("ipsam sit nesciunt",
                                "omnis",
                                "quo vitae sapiente",
                            new ChartMediaInfoValue(["error",
                                    "officia",
                                    "fuga"],
                                    "vero",
                                    "eligendi",
                                [new ChartMediaInfoValueSeries("id",
                                        "amet",
                                        342.0582),
                                new ChartMediaInfoValueSeries("email",
                                        "incidunt",
                                        948.1239),
                                new ChartMediaInfoValueSeries("group",
                                        "nihil",
                                        860.1652)],
                                [new MapColor(229, 150, 238),
                                new MapColor(19, 99, 130),
                                new MapColor(42, 93, 164),
                                new MapColor(218, 72, 24)])),
                        new ColumnChartMediaInfo("eligendi ut sit",
                                "nam",
                                "quia ipsam neque",
                            new ChartMediaInfoValue(["enim",
                                    "aliquam",
                                    "consequatur"],
                                    "quam",
                                    "dolorem",
                                [new ChartMediaInfoValueSeries("category",
                                        "aspernatur",
                                        650.5455),
                                new ChartMediaInfoValueSeries("status",
                                        "dolore",
                                        973.1115),
                                new ChartMediaInfoValueSeries("avatar",
                                        "illo",
                                        18.0205)],
                                [new MapColor(118, 37, 204),
                                new MapColor(143, 102, 211),
                                new MapColor(76, 32, 40)])),
                        new BarChartMediaInfo("exercitationem modi necessitatibus",
                                "aspernatur",
                                "fugit maiores amet",
                            new ChartMediaInfoValue(["fugiat",
                                    "reprehenderit",
                                    "nisi",
                                    "sit"],
                                    "consequatur",
                                    "non",
                                [new ChartMediaInfoValueSeries("id",
                                        "qui",
                                        214.0161),
                                new ChartMediaInfoValueSeries("createdAt",
                                        "cupiditate",
                                        693.3366)],
                                [new MapColor(18, 81, 37),
                                new MapColor(93, 148, 156),
                                new MapColor(181, 48, 140),
                                new MapColor(254, 129, 94)]))],
                            8),
                    new RelationshipPopupContent("eligendi a vero",
                            "culpa in ea autem quo",
                            1,
                            "architecto",
                        [new RelatedRecordsInfoFieldOrder("et",
                            OrderBy.Asc)],
                            4),
                    new AttachmentsPopupContent("laudantium accusantium omnis",
                            "est odit sunt rerum provident",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.Name;",
                            "name",
                            "esse quo repudiandae",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "category",
                            "ipsum atque quo",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("sed eius consectetur",
                            "a4263425-c98c-6736-8b0f-e35087690326",
                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "delectus"),
                    new ActionToggle("omnis animi deleniti",
                            "1d858879-0e7a-3e82-c877-58bdbba9e870",
                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "voluptas"),
                    new ActionButton("quibusdam dolor possimus",
                            "https://picsum.photos/640/480/?image=379",
                            "fa4b5606-f852-26f7-60c8-6a0eed8337d3",
                            () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "architecto"),
                    new ActionToggle("laudantium laudantium sunt",
                            "70e8253b-cc48-3893-6441-556d6f4f8d3e",
                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "id")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(905.9070,
                    TileInfoFormat.Png,
                    true,
                [new LOD(5,
                        "alias",
                        1.2290,
                        11497150.5663),
                new LOD(7,
                        "laboriosam",
                        81.2980,
                        24330815.7898),
                new LOD(5,
                        "ex",
                        72.0753,
                        14153617.8211),
                new LOD(3,
                        "dicta",
                        37.3109,
                        20361911.4472)],
                new Point(-18.1197,
                        -30.2920,
                        -155.2564,
                        28.3225,
                        56.3980,
                    new SpatialReference(8,
                            "accusamus",
                            "itaque",
                            "error"),
                        true,
                        true,
                        550.8672),
                    [6,
                        8,
                        9,
                        5],
                new SpatialReference(3,
                        "iusto",
                        "quidem",
                        "ut"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2002, 7, 24, 9, 48, 27),
                    new DateTime(2003, 8, 8, 2, 8, 20));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
