@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("ut")"
                        BlendMode="@(BlendMode.HardLight)"
                        Copyright="@("ducimus")"
                        Effect="@(new Effect("molestiae",
                            43058425.5664))"
                        FullExtent="@(new Extent(-177.0701,
                                -68.6758,
                                -33.8333,
                                38.9745,
                                146.6696,
                                457.0168,
                                221.7649,
                                898.0866,
                            new SpatialReference(2,
                                    "est",
                                    "sunt",
                                    "ipsa"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(28391910.5366)"
                        MinScale="@(31334.6697)"
                        Opacity="@(0.1100)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(943.9744)"
                        Resampling="@(true)"
                        TileServers="@(["nihil",
                            "autem",
                            "est",
                            "a"])"
                        Title="@("et labore voluptas")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_NearInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2022, 11, 8, 7, 52, 32))"
                            End="@(new DateTime(2009, 6, 15, 22, 0, 18))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(528.2053)"
                            Format="@(TileInfoFormat.Png24)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(8,
                                    "ut",
                                    50.3644,
                                    32719352.9181),
                            new LOD(9,
                                    "occaecati",
                                    19.3060,
                                    21788938.1640),
                            new LOD(2,
                                    "blanditiis",
                                    6.0430,
                                    21116506.9699),
                            new LOD(3,
                                    "earum",
                                    75.1264,
                                    24297664.1315)])"
                            Origin="@(new Point(52.8284,
                                    -71.8943,
                                    -2.0121,
                                    -54.7053,
                                    193.4665,
                                new SpatialReference(3,
                                        "qui",
                                        "sunt",
                                        "et"),
                                    true,
                                    true,
                                    9.0949))"
                            Size="@([9,
                                4])"
                            SpatialReference="@(new SpatialReference(7,
                                    "vero",
                                    "eum",
                                    "eligendi"))">
                        </TileInfo>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(6)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(22864945.8813)"
                            MinScale="@(2997.3734)"
                            Opacity="@(0.6270)"
                            PopupEnabled="@(true)"
                            Title="@("assumenda ipsa qui")"
                            Visible="@(true)"
                            DefinitionExpression="@("id")"
                            FloorInfo="@(new LayerFloorInfo("odio"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterBefore,
                                    "alias",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    7481673.5842,
                                    13236.0454,
                                    true,
                                    new Dimension(809.2530),
                                new TextSymbol("omnis porro nobis",
                                    new MapColor(54, 135, 27),
                                    new MapColor(85, 138, 121),
                                        new Dimension(161.5377),
                                    new MapFont(new Dimension(637.2049),
                                            "Arial",
                                        MapFontStyle.Oblique,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        146.9817,
                                    new MapColor(221, 177, 18),
                                    new MapColor(218, 59, 135),
                                        796.4182,
                                    HorizontalAlignment.Left,
                                        true,
                                        17.5321,
                                        new Dimension(992.1407),
                                        true),
                                    true,
                                    "ObjectID = 1"),
                            new Label(LabelPlacement.AboveBefore,
                                    "quam",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    15887764.8443,
                                    176.6944,
                                    true,
                                    new Dimension(834.5429),
                                new TextSymbol("laboriosam tempore ad",
                                    new MapColor(90, 18, 148),
                                    new MapColor(203, 200, 8),
                                        new Dimension(532.4040),
                                    new MapFont(new Dimension(898.4363),
                                            "Verdana",
                                        MapFontStyle.Italic,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        518.7573,
                                    new MapColor(105, 223, 136),
                                    new MapColor(26, 158, 170),
                                        409.5574,
                                    HorizontalAlignment.Center,
                                        true,
                                        776.6856,
                                        new Dimension(406.6881),
                                        true),
                                    true,
                                    "City = 'Toronto'"),
                            new Label(LabelPlacement.CenterAfter,
                                    "id",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    26521133.8919,
                                    29540.8691,
                                    true,
                                    new Dimension(783.9820),
                                new TextSymbol("enim nihil enim",
                                    new MapColor(205, 253, 41),
                                    new MapColor(78, 172, 145),
                                        new Dimension(317.7933),
                                    new MapFont(new Dimension(998.1575),
                                            "Verdana",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        124.2207,
                                    new MapColor(201, 191, 122),
                                    new MapColor(147, 77, 147),
                                        213.9802,
                                    HorizontalAlignment.Right,
                                        true,
                                        443.6579,
                                        new Dimension(99.2132),
                                        true),
                                    true,
                                    "Country = 'Canada'")])"
                            PopupTemplate="@(new PopupTemplate("ratione laudantium dicta",
                                    "enim",
                                    ["eos",
                                        "dolorem"],
                                [new FieldInfo("updatedAt",
                                        "optio",
                                        "facilis",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.DayShortMonthYearLongTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("group",
                                        "voluptatum",
                                        "occaecati",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongDate),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("updatedAt",
                                        "neque",
                                        "deleniti",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("comment",
                                        "mollitia",
                                        "porro",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.ShortDateLe),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                [new TextPopupContent("voluptatibus itaque harum")],
                                [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                        "password",
                                        "maiores accusantium impedit",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return Date();",
                                        "title",
                                        "omnis aut qui",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("enim reiciendis eius",
                                        "https://picsum.photos/640/480/?image=621",
                                        "446c4732-79e2-e3de-c444-181e9ba770c3",
                                        () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                                        "createdAt",
                                        true,
                                        true,
                                        true,
                                        "amet"),
                                new ActionToggle("pariatur aliquid fuga",
                                        "226c6fbb-cd72-2780-9da6-215d0f2cefa0",
                                        () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "name",
                                        "atque"),
                                new ActionButton("fugit voluptatum quam",
                                        "https://picsum.photos/640/480/?image=260",
                                        "d9316ddf-6b57-b1b3-51e5-e12bf84f22fc",
                                        () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                        "group",
                                        true,
                                        true,
                                        true,
                                        "qui"),
                                new ActionToggle("et et voluptas",
                                        "c8c71192-37b9-3e4b-4767-71942ec28c19",
                                        () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "password",
                                        "modi")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("illo quisquam blanditiis",
                                    new MapColor(187, 120, 188),
                                    new MapColor(223, 173, 229),
                                        new Dimension(901.0899),
                                    new MapFont(new Dimension(767.8336),
                                            "Verdana",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        404.8669,
                                    new MapColor(184, 25, 192),
                                    new MapColor(34, 244, 139),
                                        549.2543,
                                    HorizontalAlignment.Right,
                                        true,
                                        591.3138,
                                        new Dimension(192.4983),
                                        true),
                                    "rerum",
                                [new ColorVariable("id",
                                        "vitae",
                                    [new ColorStop(724.5311,
                                        new MapColor(136, 170, 125),
                                            "quod"),
                                    new ColorStop(974.4510,
                                        new MapColor(151, 38, 46),
                                            "aut"),
                                    new ColorStop(843.4773,
                                        new MapColor(75, 184, 75),
                                            "sunt")],
                                    new VisualVariableLegendOptions(true,
                                            "est delectus similique"),
                                        "inventore",
                                        "quisquam et quidem"),
                                new RotationVariable("illo",
                                    Axis.Roll,
                                    RotationType.Arithmetic,
                                    new VisualVariableLegendOptions(true,
                                            "delectus officiis impedit"),
                                        "nesciunt",
                                        "eos dolor repellendus"),
                                new ColorVariable("ut",
                                        "ut",
                                    [new ColorStop(285.1772,
                                        new MapColor(162, 210, 214),
                                            "est"),
                                    new ColorStop(634.9210,
                                        new MapColor(202, 54, 170),
                                            "sint"),
                                    new ColorStop(55.0279,
                                        new MapColor(83, 38, 219),
                                            "adipisci")],
                                    new VisualVariableLegendOptions(true,
                                            "ex optio a"),
                                        "quo",
                                        "iusto et quia"),
                                new SizeVariable("mollitia",
                                        new Dimension(163.2915),
                                        new Dimension(140.4766),
                                        711.1617,
                                        48.8960,
                                        VisualValueRepresentation.Radius,
                                        VisualValueUnit.Unknown,
                                        "corporis",
                                        "deserunt",
                                        true,
                                        VisualAxis.Depth,
                                        "veniam",
                                        "ipsam voluptate odit",
                                    new VisualVariableLegendOptions(true,
                                            "qui provident dignissimos"))],
                                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(49, 125, 253),
                                            new MapColor(174, 19, 251)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(160, 93, 156),
                                            new MapColor(40, 167, 44)),
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(129, 45, 69),
                                            new MapColor(254, 164, 28))]),
                                        234.9074,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(973.3064,
                                                772.5493),
                                        new AuthoringInfoField1ClassBreakInfos(359.7651,
                                                466.4846)],
                                            "in",
                                            "iusto",
                                            "non"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(700.7939,
                                                706.1659),
                                        new AuthoringInfoField1ClassBreakInfos(199.0638,
                                                600.4041),
                                        new AuthoringInfoField1ClassBreakInfos(404.1698,
                                                394.2307),
                                        new AuthoringInfoField1ClassBreakInfos(867.5226,
                                                320.4682)],
                                            "a",
                                            "aut",
                                            "dignissimos"),
                                        ["est",
                                            "et",
                                            "neque",
                                            "dolores"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "est",
                                        true,
                                    LengthUnit.Meters,
                                        959.7742,
                                        284.0787,
                                        197.1868,
                                        579.8265)))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(7)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(20558827.9145)"
                                MinScale="@(45196.6697)"
                                Opacity="@(0.9479)"
                                PopupEnabled="@(true)"
                                Title="@("aut sint officia")"
                                Visible="@(true)"
                                DefinitionExpression="@("ea")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(9)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(32950937.4832)"
                                    MinScale="@(15876.9871)"
                                    Opacity="@(0.3096)"
                                    PopupEnabled="@(true)"
                                    Title="@("alias consequatur accusamus")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("laborum")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(8)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(37384039.6891)"
                                        MinScale="@(11402.4945)"
                                        Opacity="@(0.8452)"
                                        PopupEnabled="@(true)"
                                        Title="@("repellat veniam ratione")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("at")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(2)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(38370558.4658)"
                                            MinScale="@(6915.1680)"
                                            Opacity="@(0.7253)"
                                            PopupEnabled="@(true)"
                                            Title="@("natus incidunt est")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("ea")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(2)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(22406788.3272)"
                                                MinScale="@(6924.2392)"
                                                Opacity="@(0.7079)"
                                                PopupEnabled="@(true)"
                                                Title="@("aspernatur voluptatum et")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("qui")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(6)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(25458339.2301)"
                                                    MinScale="@(43892.7934)"
                                                    Opacity="@(0.5893)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("ut rerum animi")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("deserunt")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("ratione iure iure")"
                                                        StringContent="@("in")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("harum")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("mollitia eos voluptatem")"
                                                    StringContent="@("molestiae")"
                                                    OutFields="@(["corrupti",
                                                        "ut",
                                                        "eligendi"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new RelationshipPopupContent(),
                                                    new AttachmentsPopupContent(),
                                                    new AttachmentsPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "003202bf-c6a9-a550-45c8-043a53648d3a",
                                                            () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "7356df4c-5afa-b269-62ce-b5b6d1dd2743",
                                                            () => { Console.WriteLine("repellat"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveAlong)"
                                                    LabelExpression="@("enim")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(20498663.4862)"
                                                    MinScale="@(28339.1162)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(943.8409))"
                                                    Symbol="@(new TextSymbol("ea eius et"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Province = 'Ontario'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("molestias")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                        454.8870,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["quo",
                                                            "quia",
                                                            "est"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "facilis",
                                                        true,
                                                    LengthUnit.NauticalMiles,
                                                        463.7211,
                                                        277.8360,
                                                        558.0783,
                                                        532.1851))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("ut iste quia")"
                                                StringContent="@("doloremque")"
                                                OutFields="@(["dolores",
                                                    "aut"])"
                                                FieldInfos="@([new FieldInfo("password",
                                                        "eaque",
                                                        "laborum",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max)])"
                                                Content="@([new RelationshipPopupContent("tempora harum impedit",
                                                        "voluptatem et nesciunt nihil fugiat",
                                                        3,
                                                        "architecto",
                                                    [new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder()],
                                                        5)])"
                                                ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "category",
                                                        "sint sit eum"),
                                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                        "avatar",
                                                        "at veritatis dolorum")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("repellendus qui labore",
                                                        "2130410a-480e-7a39-5c06-f9a86cccb8c0",
                                                        () => { Console.WriteLine("voluptatum"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "createdAt",
                                                        "magnam"),
                                                new ActionButton("consectetur rerum iste",
                                                        "https://picsum.photos/640/480/?image=624",
                                                        "29544e77-62b8-362c-f15f-7adf96fafdb5",
                                                        () => { Console.WriteLine("placeat"); return Task.CompletedTask; },
                                                        "createdAt",
                                                        true,
                                                        true,
                                                        true,
                                                        "harum"),
                                                new ActionButton("et fugiat recusandae",
                                                        "https://picsum.photos/640/480/?image=969",
                                                        "64becf68-1238-5681-7f80-7ff0931f3568",
                                                        () => { Console.WriteLine("ipsum"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "voluptate"),
                                                new ActionToggle("officia soluta sed",
                                                        "63250ebe-69eb-1234-1bd9-b8f6e3b2962b",
                                                        () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "avatar",
                                                        "saepe")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterBefore)"
                                                LabelExpression="@("quasi")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(47153171.3050)"
                                                MinScale="@(25921.7204)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(733.3512))"
                                                Symbol="@(new TextSymbol("a provident quasi",
                                                    new MapColor(236, 198, 208),
                                                    new MapColor(146, 222, 181),
                                                        null,
                                                    new MapFont(),
                                                        754.9374,
                                                    new MapColor(72, 178, 37),
                                                    new MapColor(136, 12, 246),
                                                        48.2745,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        625.1154,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Country = 'Canada'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("ullam")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch)]),
                                                    961.3457,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "magni",
                                                        "aut",
                                                        "velit"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "omnis",
                                                        "omnis",
                                                        "quibusdam"),
                                                    ["unde",
                                                        "labore",
                                                        "est",
                                                        "pariatur"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "molestias",
                                                    true,
                                                LengthUnit.Decimeters,
                                                    53.3610,
                                                    437.0054,
                                                    7.7877,
                                                    544.2339))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("ea dolorem delectus")"
                                            StringContent="@("sit")"
                                            OutFields="@(["pariatur",
                                                "cum",
                                                "magnam"])"
                                            FieldInfos="@([new FieldInfo("password",
                                                    "fugit",
                                                    "consequuntur",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.ShortDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("comment",
                                                    "excepturi",
                                                    "quasi",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("title",
                                                    "ut",
                                                    "totam",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Avg)])"
                                            Content="@([new MediaPopupContent("cum sint velit",
                                                    "omnis ut sit aliquam dolorum",
                                                [new PieChartMediaInfo("culpa rem ad",
                                                        "asperiores",
                                                        "blanditiis quia molestiae",
                                                    new ChartMediaInfoValue()),
                                                new PieChartMediaInfo("ut minus corporis",
                                                        "non",
                                                        "consequatur distinctio iusto",
                                                    new ChartMediaInfoValue())],
                                                    9),
                                            new RelationshipPopupContent("aut eos ut",
                                                    "ut voluptatem doloremque corrupti voluptatem enim at",
                                                    8,
                                                    "a",
                                                [new RelatedRecordsInfoFieldOrder("debitis",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("qui",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("molestiae",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("quo",
                                                    OrderBy.Asc)],
                                                    8),
                                            new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "quisquam",
                                                        "ea animi magnam"))])"
                                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "group",
                                                    "consequuntur ea magnam",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("reprehenderit enim impedit",
                                                    "https://picsum.photos/640/480/?image=66",
                                                    "99a052f0-4df8-32c0-db3f-67e4ae7b93a1",
                                                    () => { Console.WriteLine("a"); return Task.CompletedTask; },
                                                    "password",
                                                    true,
                                                    true,
                                                    true,
                                                    "et"),
                                            new ActionToggle("consequuntur sunt ipsam",
                                                    "3af151d8-d163-8082-2bef-64000dbc5650",
                                                    () => { Console.WriteLine("totam"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "phone",
                                                    "aut")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterBefore)"
                                            LabelExpression="@("ab")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(331260.3172)"
                                            MinScale="@(14869.9118)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(580.0711))"
                                            Symbol="@(new TextSymbol("exercitationem et beatae",
                                                new MapColor(224, 96, 17),
                                                new MapColor(238, 91, 61),
                                                    new Dimension(840.3627),
                                                new MapFont(new Dimension(2.6297),
                                                        "Palatino",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Bolder,
                                                    TextDecoration.None),
                                                    886.3160,
                                                new MapColor(76, 157, 229),
                                                new MapColor(96, 49, 41),
                                                    212.0755,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    135.8998,
                                                    new Dimension(662.3732),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("PostalCode = 'M5V 1J9'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("voluptatem")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(69, 31, 72),
                                                new MapColor(78, 126, 6)),
                                                890.8137,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(810.9071,
                                                        992.3305),
                                                new AuthoringInfoField1ClassBreakInfos(634.0809,
                                                        939.1310),
                                                new AuthoringInfoField1ClassBreakInfos(387.6134,
                                                        164.9642)],
                                                    "et",
                                                    "voluptas",
                                                    "illum"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(993.7867,
                                                        429.3130)],
                                                    "quia",
                                                    "voluptas",
                                                    "minus"),
                                                ["tempore",
                                                    "et"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "quis",
                                                true,
                                            LengthUnit.Meters,
                                                528.4077,
                                                302.4329,
                                                837.3978,
                                                722.8628))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("delectus et amet")"
                                        StringContent="@("odit")"
                                        OutFields="@(["aut",
                                            "nostrum",
                                            "ut"])"
                                        FieldInfos="@([new FieldInfo("id",
                                                "animi",
                                                "quasi",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("updatedAt",
                                                "illo",
                                                "explicabo",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateLeLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("comment",
                                                "repellat",
                                                "numquam",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Min)])"
                                        Content="@([new MediaPopupContent("est fuga rem",
                                                "labore pariatur qui velit id",
                                            [new BarChartMediaInfo("numquam ipsam porro",
                                                    "et",
                                                    "et quibusdam praesentium",
                                                new ChartMediaInfoValue(["placeat",
                                                        "sapiente"],
                                                        "nihil",
                                                        "deleniti",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(220, 115, 46)])),
                                            new LineChartMediaInfo("maxime nam vitae",
                                                    "dolores",
                                                    "occaecati quisquam qui",
                                                new ChartMediaInfoValue(["odio",
                                                        "dolorem"],
                                                        "adipisci",
                                                        "dignissimos",
                                                    [new ChartMediaInfoValueSeries()],
                                                    [new MapColor(12, 138, 169),
                                                    new MapColor(28, 126, 201),
                                                    new MapColor(53, 18, 43)])),
                                            new ColumnChartMediaInfo("unde voluptates asperiores",
                                                    "et",
                                                    "assumenda et ratione",
                                                new ChartMediaInfoValue(["sit",
                                                        "modi"],
                                                        "nam",
                                                        "necessitatibus",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(91, 21, 184),
                                                    new MapColor(132, 213, 0),
                                                    new MapColor(61, 1, 129),
                                                    new MapColor(114, 32, 185)])),
                                            new LineChartMediaInfo("qui aspernatur dolor",
                                                    "et",
                                                    "harum enim unde",
                                                new ChartMediaInfoValue(["tenetur",
                                                        "a"],
                                                        "explicabo",
                                                        "autem",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(220, 217, 172),
                                                    new MapColor(195, 104, 27),
                                                    new MapColor(59, 245, 235),
                                                    new MapColor(108, 61, 9)]))],
                                                6)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                "category",
                                                "et minima blanditiis",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("repellat error sequi",
                                                "https://picsum.photos/640/480/?image=792",
                                                "c5681a1f-fe57-7d4a-7a41-a49f76ce3cec",
                                                () => { Console.WriteLine("quam"); return Task.CompletedTask; },
                                                "category",
                                                true,
                                                true,
                                                true,
                                                "sint"),
                                        new ActionButton("deleniti rerum dignissimos",
                                                "https://picsum.photos/640/480/?image=537",
                                                "6fbdae0d-7b93-3199-2ef0-4b41be395ad1",
                                                () => { Console.WriteLine("excepturi"); return Task.CompletedTask; },
                                                "email",
                                                true,
                                                true,
                                                true,
                                                "sed"),
                                        new ActionButton("sunt repellendus nihil",
                                                "https://picsum.photos/640/480/?image=96",
                                                "acef976c-c202-2688-9283-9ccf15f2dc9f",
                                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                                "status",
                                                true,
                                                true,
                                                true,
                                                "ipsa")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterRight)"
                                        LabelExpression="@("nostrum")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(12507836.7629)"
                                        MinScale="@(29935.6939)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(993.1148))"
                                        Symbol="@(new TextSymbol("id velit qui",
                                            new MapColor(164, 246, 76),
                                            new MapColor(88, 112, 145),
                                                new Dimension(208.7798),
                                            new MapFont(new Dimension(644.2907),
                                                    "Arial",
                                                MapFontStyle.Italic,
                                                FontWeight.Normal,
                                                TextDecoration.LineThrough),
                                                394.9812,
                                            new MapColor(163, 180, 41),
                                            new MapColor(0, 216, 25),
                                                369.9174,
                                            HorizontalAlignment.Left,
                                                true,
                                                868.1976,
                                                new Dimension(682.6348),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Name = 'John Doe'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("nihil")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(158, 24, 12),
                                                new MapColor(60, 236, 198))]),
                                            492.5770,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(543.7611,
                                                    973.0657),
                                            new AuthoringInfoField1ClassBreakInfos(392.8131,
                                                    337.1368)],
                                                "id",
                                                "provident",
                                                "maiores"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(69.3491,
                                                    913.6274),
                                            new AuthoringInfoField1ClassBreakInfos(951.2443,
                                                    147.7712),
                                            new AuthoringInfoField1ClassBreakInfos(646.5352,
                                                    845.1518),
                                            new AuthoringInfoField1ClassBreakInfos(3.4251,
                                                    271.9175)],
                                                "in",
                                                "consectetur",
                                                "aut"),
                                            ["dicta",
                                                "voluptatum",
                                                "consequatur"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "eius",
                                            true,
                                        LengthUnit.Meters,
                                            479.4511,
                                            293.7094,
                                            990.6847,
                                            481.6276))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("ut hic doloremque")"
                                    StringContent="@("suscipit")"
                                    OutFields="@(["quibusdam",
                                        "non",
                                        "earum"])"
                                    FieldInfos="@([new FieldInfo("comment",
                                            "est",
                                            "quaerat",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("token",
                                            "illum",
                                            "quisquam",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("avatar",
                                            "ea",
                                            "aliquam",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.Year),
                                            true,
                                            true,
                                        StatisticType.Var)])"
                                    Content="@([new TextPopupContent("voluptate nesciunt nihil"),
                                    new TextPopupContent("dolores corrupti eligendi"),
                                    new RelationshipPopupContent("facilis voluptatum vel",
                                            "itaque voluptatem ut repellat",
                                            5,
                                            "beatae",
                                        [new RelatedRecordsInfoFieldOrder("enim",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("saepe",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("odio",
                                            OrderBy.Desc)],
                                            2),
                                    new MediaPopupContent("nobis et culpa",
                                            "id minus adipisci suscipit voluptas porro",
                                        [new ImageMediaInfo("consectetur fugit dolor",
                                                "vitae",
                                                "ut rem eveniet",
                                            new ImageMediaInfoValue("http://lolita.net",
                                                    "https://dallin.biz"),
                                                805.0845),
                                        new BarChartMediaInfo("aliquid explicabo vel",
                                                "occaecati",
                                                "non nesciunt quisquam",
                                            new ChartMediaInfoValue(["sequi",
                                                    "dolore",
                                                    "et",
                                                    "unde"],
                                                    "dolorum",
                                                    "optio",
                                                [new ChartMediaInfoValueSeries("title",
                                                        "aliquid",
                                                        127.3105),
                                                new ChartMediaInfoValueSeries("title",
                                                        "ratione",
                                                        904.0538),
                                                new ChartMediaInfoValueSeries("avatar",
                                                        "in",
                                                        161.8444)],
                                                [new MapColor(23, 1, 233),
                                                new MapColor(15, 205, 230)]))],
                                            3)])"
                                    ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "password",
                                            "sequi odit est",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                            "name",
                                            "iure unde temporibus",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "name",
                                            "vitae aut aut",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("nemo ratione quis",
                                            "f925317c-b66c-5bf6-4ebe-6553e02cb717",
                                            () => { Console.WriteLine("libero"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "id",
                                            "eos"),
                                    new ActionButton("esse vero reiciendis",
                                            "https://picsum.photos/640/480/?image=711",
                                            "a30824f8-5073-8062-dd17-09e17368def5",
                                            () => { Console.WriteLine("dolore"); return Task.CompletedTask; },
                                            "password",
                                            true,
                                            true,
                                            true,
                                            "debitis"),
                                    new ActionToggle("expedita incidunt totam",
                                            "be4f1753-0458-d19d-04fe-522256cf3c07",
                                            () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "email",
                                            "numquam")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterStart)"
                                    LabelExpression="@("et")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(15522752.5736)"
                                    MinScale="@(4094.4805)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(14.5619))"
                                    Symbol="@(new TextSymbol("cumque et debitis",
                                        new MapColor(151, 166, 121),
                                        new MapColor(29, 199, 116),
                                            new Dimension(709.2558),
                                        new MapFont(new Dimension(338.8858),
                                                "Garamond",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            812.0634,
                                        new MapColor(168, 218, 199),
                                        new MapColor(212, 179, 180),
                                            522.2145,
                                        HorizontalAlignment.Center,
                                            true,
                                            195.8510,
                                            new Dimension(359.3734),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Age > 21")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("aperiam")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(801.0455,
                529.6754,
                677.9677,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(2);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(108.6561,
                941.0423,
                167.6613);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.Color;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-5.6941,
                    76.8254,
                    88.8309,
                    -35.8198,
                    398.3878,
                    793.5731,
                    49.6955,
                    954.0919,
                new SpatialReference(7,
                        "ducimus",
                        "quae",
                        "autem"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(4,
                    true,
                    true,
                ListMode.Hide,
                    35977078.9492,
                    23140.0734,
                    0.6560,
                    true,
                    "ducimus est quisquam",
                    true,
                    "consequuntur",
                new LayerFloorInfo("omnis"),
                [new Label(LabelPlacement.CenterLeft,
                        "ad",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        47548010.2024,
                        20626.9833,
                        true,
                        new Dimension(814.9383),
                    new TextSymbol("iure commodi voluptas",
                        new MapColor(244, 43, 42),
                        new MapColor(173, 83, 142),
                            new Dimension(503.5871),
                        new MapFont(new Dimension(208.8867),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            639.8072,
                        new MapColor(93, 83, 234),
                        new MapColor(10, 102, 233),
                            701.1397,
                        HorizontalAlignment.Center,
                            true,
                            915.5839,
                            new Dimension(60.5340),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.BelowStart,
                        "adipisci",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        11974064.2352,
                        14831.0986,
                        true,
                        new Dimension(428.4576),
                    new TextSymbol("eum voluptatem nisi",
                        new MapColor(103, 166, 24),
                        new MapColor(18, 234, 196),
                            new Dimension(567.6249),
                        new MapFont(new Dimension(908.0120),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            859.7322,
                        new MapColor(92, 188, 251),
                        new MapColor(65, 174, 45),
                            386.8073,
                        HorizontalAlignment.Center,
                            true,
                            658.9667,
                            new Dimension(585.4111),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.AboveEnd,
                        "ut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        4309469.9210,
                        24259.4032,
                        true,
                        new Dimension(76.0192),
                    new TextSymbol("expedita est consequatur",
                        new MapColor(136, 221, 134),
                        new MapColor(115, 58, 213),
                            new Dimension(105.4607),
                        new MapFont(new Dimension(473.4162),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            207.2108,
                        new MapColor(69, 55, 248),
                        new MapColor(57, 55, 15),
                            826.1103,
                        HorizontalAlignment.Right,
                            true,
                            13.6787,
                            new Dimension(480.6566),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("enim architecto sit",
                        "aut",
                        ["consectetur",
                            "provident",
                            "quia",
                            "quas"],
                    [new FieldInfo("status",
                            "ipsam",
                            "est",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortMonthYear),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("title",
                            "debitis",
                            "aliquid",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("password",
                            "est",
                            "magni",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("category",
                            "eos",
                            "reprehenderit",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Max)],
                    [new FieldsPopupContent([new FieldInfo("id",
                                "inventore",
                                "voluptatibus",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("phone",
                                "quo",
                                "enim",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongMonthDayYearShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("updatedAt",
                                "veritatis",
                                "qui",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                            "culpa beatae facilis reiciendis",
                            "aut animi rerum"),
                    new TextPopupContent("repellendus iste consectetur"),
                    new TextPopupContent("ducimus sed asperiores"),
                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "ipsam",
                                "inventore fuga et"))],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "password",
                            "at debitis debitis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "title",
                            "et quae tenetur",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "id",
                            "saepe culpa voluptates",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("quibusdam est at",
                            "https://picsum.photos/640/480/?image=959",
                            "562c05c9-953a-c405-eccb-6089f8460b26",
                            () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "sit"),
                    new ActionToggle("dolore culpa est",
                            "09eb842a-6517-040c-ffd6-7435200c3a1e",
                            () => { Console.WriteLine("a"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "earum"),
                    new ActionButton("quia consequuntur quis",
                            "https://picsum.photos/640/480/?image=366",
                            "c966cf70-5017-b5f4-6d25-0f226fba846c",
                            () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "repudiandae")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    7598928.3605,
                    23842.3595,
                    0.8836,
                    true,
                    "voluptatem aut velit",
                    true,
                    "voluptatum",
                new LayerFloorInfo("eos"),
                [new Label(LabelPlacement.CenterRight,
                        "consectetur",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        26250223.4946,
                        13368.5673,
                        true,
                        new Dimension(354.3885),
                    new TextSymbol("aut et magni",
                        new MapColor(223, 181, 154),
                        new MapColor(32, 101, 155),
                            new Dimension(673.1589),
                        new MapFont(new Dimension(899.8128),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            100.8194,
                        new MapColor(208, 93, 210),
                        new MapColor(230, 133, 2),
                            37.9392,
                        HorizontalAlignment.Center,
                            true,
                            815.6645,
                            new Dimension(649.5062),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.AboveLeft,
                        "omnis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        38125299.4700,
                        27662.9241,
                        true,
                        new Dimension(935.0083),
                    new TextSymbol("non quidem nobis",
                        new MapColor(194, 73, 230),
                        new MapColor(25, 220, 225),
                            new Dimension(201.8802),
                        new MapFont(new Dimension(24.1703),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            408.1493,
                        new MapColor(244, 166, 6),
                        new MapColor(98, 172, 234),
                            598.8892,
                        HorizontalAlignment.Right,
                            true,
                            467.9719,
                            new Dimension(966.1275),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AboveCenter,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        9030821.6413,
                        36636.5199,
                        true,
                        new Dimension(86.2959),
                    new TextSymbol("rerum aut laborum",
                        new MapColor(122, 161, 61),
                        new MapColor(147, 103, 5),
                            new Dimension(17.0418),
                        new MapFont(new Dimension(203.2046),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            590.5013,
                        new MapColor(109, 110, 220),
                        new MapColor(159, 47, 253),
                            399.6180,
                        HorizontalAlignment.Left,
                            true,
                            525.6634,
                            new Dimension(434.9430),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.BelowCenter,
                        "minima",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        34042753.0685,
                        13004.4030,
                        true,
                        new Dimension(842.4765),
                    new TextSymbol("perferendis voluptatem et",
                        new MapColor(165, 220, 218),
                        new MapColor(10, 155, 53),
                            new Dimension(840.8133),
                        new MapFont(new Dimension(935.6053),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            647.6741,
                        new MapColor(51, 253, 54),
                        new MapColor(151, 150, 196),
                            557.0100,
                        HorizontalAlignment.Left,
                            true,
                            338.4787,
                            new Dimension(856.9582),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("non ducimus eos",
                        "corrupti",
                        ["magni",
                            "qui",
                            "accusamus",
                            "ex"],
                    [new FieldInfo("token",
                            "ut",
                            "voluptatem",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("token",
                            "deleniti",
                            "autem",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("createdAt",
                            "earum",
                            "voluptate",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "voluptas",
                                "fugiat autem nesciunt")),
                    new RelationshipPopupContent("molestias est placeat",
                            "dolorem sint sed sapiente numquam consequatur",
                            6,
                            "reiciendis",
                        [new RelatedRecordsInfoFieldOrder("voluptate",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("autem",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("laudantium",
                            OrderBy.Asc)],
                            6)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "updatedAt",
                            "quae amet qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "updatedAt",
                            "exercitationem voluptates numquam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "email",
                            "porro ut quia",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("ut doloremque nostrum",
                            "2e230737-a150-dffd-e569-7135a8e0f27f",
                            () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "quia"),
                    new ActionToggle("id fuga dolor",
                            "234553d8-f72c-6889-a2e3-04251302ef8a",
                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "quia"),
                    new ActionButton("voluptas repellendus illum",
                            "https://picsum.photos/640/480/?image=797",
                            "4b416d3a-9882-b6c5-a818-ef4b16abd85b",
                            () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "possimus"),
                    new ActionButton("vel accusamus perspiciatis",
                            "https://picsum.photos/640/480/?image=731",
                            "60ef8ac5-f8d3-f49e-ffe1-4892aabb47b5",
                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "autem")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(827.3059,
                    TileInfoFormat.Jpg,
                    true,
                [new LOD(5,
                        "consectetur",
                        58.6377,
                        16089782.8982),
                new LOD(5,
                        "amet",
                        86.0536,
                        43618793.4434),
                new LOD(7,
                        "et",
                        17.9350,
                        21517910.3862),
                new LOD(2,
                        "magni",
                        76.9149,
                        9360707.7914)],
                new Point(14.2215,
                        80.0517,
                        107.1429,
                        64.9775,
                        258.6861,
                    new SpatialReference(3,
                            "minus",
                            "aliquid",
                            "voluptate"),
                        true,
                        true,
                        443.7845),
                    [3,
                        2,
                        4,
                        2],
                new SpatialReference(6,
                        "velit",
                        "itaque",
                        "voluptates"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2014, 3, 18, 3, 19, 8),
                    new DateTime(2022, 11, 15, 17, 24, 21));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
