@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("tempora")"
                        BlendMode="@(BlendMode.Plus)"
                        Copyright="@("ducimus")"
                        Effect="@(new Effect("et",
                            34387681.4833))"
                        FullExtent="@(new Extent(-152.0816,
                                160.3749,
                                36.6829,
                                -55.2412,
                                5.1095,
                                552.4048,
                                711.4056,
                                517.2671,
                            new SpatialReference(3,
                                    "consequatur",
                                    "asperiores",
                                    "rem"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(26814958.7831)"
                        MinScale="@(32605.9138)"
                        Opacity="@(0.3310)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(90.1243)"
                        Resampling="@(true)"
                        TileServers="@(["accusamus",
                            "et",
                            "totam",
                            "repellat"])"
                        Title="@("in quia qui")"
                        Url="@("https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2008, 5, 9, 0, 6, 8))"
                            End="@(new DateTime(2010, 9, 23, 11, 3, 2))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(689.6594)"
                            Format="@(TileInfoFormat.Lerc)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(8,
                                    "facilis",
                                    58.2194,
                                    9523195.1157),
                            new LOD(3,
                                    "beatae",
                                    49.2284,
                                    41753412.1928),
                            new LOD(2,
                                    "minus",
                                    48.4380,
                                    49452609.4689),
                            new LOD(3,
                                    "expedita",
                                    4.7899,
                                    46072932.7293)])"
                            Origin="@(new Point(167.7563,
                                    -10.3943,
                                    131.3903,
                                    74.2148,
                                    627.3226,
                                new SpatialReference(8,
                                        "odit",
                                        "quas",
                                        "sed"),
                                    true,
                                    true,
                                    821.9410))"
                            Size="@([1,
                                2,
                                1])"
                            SpatialReference="@(new SpatialReference(7,
                                    "aliquam",
                                    "nihil",
                                    "quia"))">
                        </TileInfo>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(1)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(48670811.8523)"
                            MinScale="@(2243.0775)"
                            Opacity="@(0.1948)"
                            PopupEnabled="@(true)"
                            Title="@("perspiciatis saepe dolores")"
                            Visible="@(true)"
                            DefinitionExpression="@("magni")"
                            FloorInfo="@(new LayerFloorInfo("et"))"
                            LabelingInfo="@([new Label(LabelPlacement.AlwaysHorizontal,
                                    "quis",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    16306494.5388,
                                    18279.1067,
                                    true,
                                    new Dimension(64.1060),
                                new TextSymbol("nostrum maxime officia",
                                    new MapColor(213, 87, 87),
                                    new MapColor(126, 135, 214),
                                        new Dimension(8.5171),
                                    new MapFont(new Dimension(639.8717),
                                            "Garamond",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        817.7541,
                                    new MapColor(49, 52, 12),
                                    new MapColor(5, 8, 187),
                                        122.4899,
                                    HorizontalAlignment.Left,
                                        true,
                                        336.1963,
                                        new Dimension(911.4702),
                                        true),
                                    true,
                                    "Province = 'Ontario'"),
                            new Label(LabelPlacement.CenterAlong,
                                    "nostrum",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    9920637.1434,
                                    32681.9777,
                                    true,
                                    new Dimension(162.2798),
                                new TextSymbol("repudiandae quos sed",
                                    new MapColor(189, 194, 252),
                                    new MapColor(104, 48, 102),
                                        new Dimension(547.7123),
                                    new MapFont(new Dimension(813.8668),
                                            "Verdana",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        189.2129,
                                    new MapColor(250, 172, 166),
                                    new MapColor(185, 175, 139),
                                        834.5096,
                                    HorizontalAlignment.Right,
                                        true,
                                        111.9084,
                                        new Dimension(251.0275),
                                        true),
                                    true,
                                    "Country = 'Canada'"),
                            new Label(LabelPlacement.CenterRight,
                                    "eum",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    10798306.1204,
                                    8350.7903,
                                    true,
                                    new Dimension(295.2266),
                                new TextSymbol("quisquam odio iure",
                                    new MapColor(69, 110, 171),
                                    new MapColor(108, 214, 222),
                                        new Dimension(820.2003),
                                    new MapFont(new Dimension(525.2851),
                                            "Bookman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        691.6977,
                                    new MapColor(196, 177, 171),
                                    new MapColor(216, 249, 28),
                                        886.3401,
                                    HorizontalAlignment.Left,
                                        true,
                                        603.0098,
                                        new Dimension(419.1135),
                                        true),
                                    true,
                                    "1 = 1"),
                            new Label(LabelPlacement.BelowEnd,
                                    "quod",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    11528479.8915,
                                    48851.1622,
                                    true,
                                    new Dimension(852.7473),
                                new TextSymbol("placeat sequi libero",
                                    new MapColor(206, 226, 59),
                                    new MapColor(105, 157, 96),
                                        new Dimension(964.4918),
                                    new MapFont(new Dimension(982.0598),
                                            "Arial",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        465.4572,
                                    new MapColor(205, 104, 44),
                                    new MapColor(141, 242, 36),
                                        231.5391,
                                    HorizontalAlignment.Left,
                                        true,
                                        368.6450,
                                        new Dimension(937.7289),
                                        true),
                                    true,
                                    "City = 'Toronto'")])"
                            PopupTemplate="@(new PopupTemplate("eligendi non magnam",
                                    "adipisci",
                                    ["aspernatur",
                                        "temporibus",
                                        "animi",
                                        "enim"],
                                [new FieldInfo("email",
                                        "placeat",
                                        "tempore",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("avatar",
                                        "aperiam",
                                        "non",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.ShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Sum)],
                                [new MediaPopupContent("ipsum repudiandae enim",
                                        "odio iure quas ea excepturi occaecati amet",
                                    [new ImageMediaInfo("dolores qui aut",
                                            "velit",
                                            "rerum sed qui",
                                        new ImageMediaInfoValue("http://alexander.name",
                                                "http://dayne.org"),
                                            490.2739),
                                    new ColumnChartMediaInfo("est incidunt et",
                                            "eos",
                                            "sed suscipit molestiae",
                                        new ChartMediaInfoValue(["necessitatibus",
                                                "delectus"],
                                                "accusamus",
                                                "est",
                                            [new ChartMediaInfoValueSeries("phone",
                                                    "dolor",
                                                    522.1051),
                                            new ChartMediaInfoValueSeries("category",
                                                    "quam",
                                                    143.3046),
                                            new ChartMediaInfoValueSeries("id",
                                                    "sint",
                                                    349.0948),
                                            new ChartMediaInfoValueSeries("title",
                                                    "sint",
                                                    155.9810)],
                                            [new MapColor(123, 149, 69),
                                            new MapColor(59, 181, 154)])),
                                    new BarChartMediaInfo("consequatur temporibus facere",
                                            "magni",
                                            "iure officia cumque",
                                        new ChartMediaInfoValue(["earum",
                                                "tempore",
                                                "sit",
                                                "et"],
                                                "accusantium",
                                                "quam",
                                            [new ChartMediaInfoValueSeries("avatar",
                                                    "cupiditate",
                                                    924.8967),
                                            new ChartMediaInfoValueSeries("id",
                                                    "ratione",
                                                    27.5959),
                                            new ChartMediaInfoValueSeries("token",
                                                    "quae",
                                                    739.0497)],
                                            [new MapColor(223, 197, 129)]))],
                                        1),
                                new TextPopupContent("dolorum dolor nihil"),
                                new AttachmentsPopupContent("iusto ea dolor",
                                        "voluptates vel rem et et",
                                        AttachmentsPopupContentDisplayType.Preview)],
                                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "group",
                                        "repellendus reprehenderit nihil",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Name;",
                                        "avatar",
                                        "amet at autem",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "category",
                                        "tempora qui doloremque",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "title",
                                        "reiciendis accusamus quia",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("tempore accusantium at",
                                        "https://picsum.photos/640/480/?image=410",
                                        "e8b24f09-dac8-96bd-dc35-6ad9b1053661",
                                        () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                        "group",
                                        true,
                                        true,
                                        true,
                                        "id"),
                                new ActionToggle("excepturi omnis ea",
                                        "2f2bf871-bb26-789d-12c9-bc0c434fbabd",
                                        () => { Console.WriteLine("veniam"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "category",
                                        "quia")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("minima magnam dolores",
                                    new MapColor(226, 11, 184),
                                    new MapColor(8, 16, 51),
                                        new Dimension(629.1139),
                                    new MapFont(new Dimension(975.4703),
                                            "Courier New",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.LineThrough),
                                        569.3085,
                                    new MapColor(38, 64, 215),
                                    new MapColor(83, 181, 31),
                                        688.0401,
                                    HorizontalAlignment.Center,
                                        true,
                                        676.4881,
                                        new Dimension(110.1303),
                                        true),
                                    "debitis",
                                [new RotationVariable("aperiam",
                                    Axis.Roll,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "fugiat facilis officiis"),
                                        "cum",
                                        "et voluptas ut"),
                                new ColorVariable("perspiciatis",
                                        "corporis",
                                    [new ColorStop(292.5224,
                                        new MapColor(254, 219, 180),
                                            "reiciendis"),
                                    new ColorStop(688.7634,
                                        new MapColor(171, 77, 36),
                                            "quis"),
                                    new ColorStop(732.3657,
                                        new MapColor(209, 241, 249),
                                            "sapiente")],
                                    new VisualVariableLegendOptions(true,
                                            "voluptas qui nihil"),
                                        "sapiente",
                                        "sapiente dolores repudiandae"),
                                new RotationVariable("deleniti",
                                    Axis.Tilt,
                                    RotationType.Arithmetic,
                                    new VisualVariableLegendOptions(true,
                                            "voluptas molestiae autem"),
                                        "voluptatibus",
                                        "sunt ut facere")],
                                new AuthoringInfo(ClassificationMethod.Manual,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(246, 98, 222),
                                            new MapColor(142, 99, 175)),
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(120, 85, 211),
                                            new MapColor(182, 136, 237)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(108, 179, 228),
                                            new MapColor(209, 199, 129)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(4, 3, 16),
                                            new MapColor(188, 184, 109))]),
                                        472.6082,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(609.4436,
                                                17.6107)],
                                            "rerum",
                                            "culpa",
                                            "neque"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(64.1845,
                                                345.5262),
                                        new AuthoringInfoField1ClassBreakInfos(10.7975,
                                                789.9743),
                                        new AuthoringInfoField1ClassBreakInfos(694.1980,
                                                65.5150),
                                        new AuthoringInfoField1ClassBreakInfos(364.0404,
                                                757.0012)],
                                            "commodi",
                                            "fugit",
                                            "harum"),
                                        ["vel",
                                            "incidunt",
                                            "accusantium"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "error",
                                        true,
                                    LengthUnit.Inches,
                                        460.3552,
                                        31.8001,
                                        233.8300,
                                        839.9542)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(8)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(7975153.7366)"
                                MinScale="@(12886.5136)"
                                Opacity="@(0.7217)"
                                PopupEnabled="@(true)"
                                Title="@("sint ullam omnis")"
                                Visible="@(true)"
                                DefinitionExpression="@("illo")"
                                Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(1)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(1157104.7169)"
                                    MinScale="@(33410.2082)"
                                    Opacity="@(0.8450)"
                                    PopupEnabled="@(true)"
                                    Title="@("quia blanditiis molestias")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("officiis")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(40824134.0950)"
                                        MinScale="@(26337.5553)"
                                        Opacity="@(0.9227)"
                                        PopupEnabled="@(true)"
                                        Title="@("voluptatum maxime facere")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("odio")"
                                        Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(6)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(27310502.0686)"
                                            MinScale="@(44092.8746)"
                                            Opacity="@(0.6082)"
                                            PopupEnabled="@(true)"
                                            Title="@("magnam laborum similique")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("unde")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(6)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(32392699.5620)"
                                                MinScale="@(35352.5708)"
                                                Opacity="@(0.8119)"
                                                PopupEnabled="@(true)"
                                                Title="@("ut et qui")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("in")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(1)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(4498394.3739)"
                                                    MinScale="@(10934.1030)"
                                                    Opacity="@(0.1811)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("eos error accusantium")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("quam")"
                                                    Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("sint aut soluta")"
                                                        StringContent="@("modi")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("assumenda")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("ullam sapiente non")"
                                                    StringContent="@("quod")"
                                                    OutFields="@(["et",
                                                        "eum",
                                                        "dicta",
                                                        "aut"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new AttachmentsPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "51cfe67c-05d5-a66c-1a80-2ec5a53bd768",
                                                            () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "8e876476-c861-3d24-f4c9-52db604eeee9",
                                                            () => { Console.WriteLine("cumque"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "9cb771fb-edfd-2316-fc1b-6dcfa4e6f844",
                                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowEnd)"
                                                    LabelExpression="@("sit")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(37396464.4140)"
                                                    MinScale="@(24515.4682)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(115.6946))"
                                                    Symbol="@(new TextSymbol("dolore fugit rem"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Province = 'Ontario'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("molestias")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                        179.9583,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["rerum",
                                                            "unde"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "labore",
                                                        true,
                                                    LengthUnit.Yards,
                                                        618.5669,
                                                        882.1326,
                                                        327.4742,
                                                        553.7629))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("odit doloremque in")"
                                                StringContent="@("repellat")"
                                                OutFields="@(["consequuntur",
                                                    "adipisci"])"
                                                FieldInfos="@([new FieldInfo("comment",
                                                        "ipsa",
                                                        "ut",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("email",
                                                        "optio",
                                                        "ducimus",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum)])"
                                                Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "velit quod corrupti inventore provident similique qui",
                                                        "expedita facere fugit"),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                        "status",
                                                        "voluptates consequatur rerum")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("quos repudiandae eum",
                                                        "https://picsum.photos/640/480/?image=970",
                                                        "da0ff708-8d83-4e57-7b4f-c46c48548148",
                                                        () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                                        "phone",
                                                        true,
                                                        true,
                                                        true,
                                                        "quo"),
                                                new ActionToggle("consequatur repudiandae aliquid",
                                                        "f141bf40-3718-b267-44cd-9ec71cf2db58",
                                                        () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "group",
                                                        "sunt")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterCenter)"
                                                LabelExpression="@("nihil")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(31233289.7658)"
                                                MinScale="@(13091.2150)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(356.0585))"
                                                Symbol="@(new TextSymbol("doloribus nobis molestias",
                                                    new MapColor(252, 104, 73),
                                                    new MapColor(88, 29, 80),
                                                        null,
                                                    new MapFont(),
                                                        452.9291,
                                                    new MapColor(147, 229, 166),
                                                    new MapColor(21, 197, 115),
                                                        628.0058,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        158.1098,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Phone = '555-555-5555'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("hic")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(90, 16, 102),
                                                    new MapColor(180, 35, 227)),
                                                    764.6846,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "laboriosam",
                                                        "accusantium",
                                                        "officia"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "rerum",
                                                        "nam",
                                                        "laborum"),
                                                    ["deserunt",
                                                        "est",
                                                        "ut",
                                                        "voluptates"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "iste",
                                                    true,
                                                LengthUnit.Inches,
                                                    290.9910,
                                                    538.7901,
                                                    151.9063,
                                                    69.0415))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("sit vero veritatis")"
                                            StringContent="@("porro")"
                                            OutFields="@(["in",
                                                "sapiente",
                                                "reprehenderit",
                                                "nihil"])"
                                            FieldInfos="@([new FieldInfo("createdAt",
                                                    "consequatur",
                                                    "consequuntur",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("updatedAt",
                                                    "necessitatibus",
                                                    "consequatur",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Max)])"
                                            Content="@([new TextPopupContent("voluptatum rem et"),
                                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "possimus",
                                                        "excepturi dolores est"))])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "group",
                                                    "maxime quae possimus",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return Date();",
                                                    "name",
                                                    "mollitia tenetur maxime",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature['FieldName'];",
                                                    "group",
                                                    "ut deleniti adipisci",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "avatar",
                                                    "inventore ab velit",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("est doloribus eaque",
                                                    "https://picsum.photos/640/480/?image=279",
                                                    "c9cc51e3-c55d-5490-3434-1c227f98c9b2",
                                                    () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                                    "email",
                                                    true,
                                                    true,
                                                    true,
                                                    "laudantium")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveRight)"
                                            LabelExpression="@("consequatur")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(27846934.7087)"
                                            MinScale="@(4951.5876)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(392.0536))"
                                            Symbol="@(new TextSymbol("similique expedita et",
                                                new MapColor(122, 109, 94),
                                                new MapColor(131, 147, 19),
                                                    new Dimension(731.0761),
                                                new MapFont(new Dimension(845.5361),
                                                        "Verdana",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Lighter,
                                                    TextDecoration.Underline),
                                                    179.7040,
                                                new MapColor(45, 102, 106),
                                                new MapColor(65, 151, 114),
                                                    149.4486,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    967.7188,
                                                    new Dimension(990.2927),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Name = 'John Doe'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("sed")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(203, 124, 181),
                                                new MapColor(157, 109, 75)),
                                                174.0595,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(280.8003,
                                                        559.1446),
                                                new AuthoringInfoField1ClassBreakInfos(419.0737,
                                                        113.6563),
                                                new AuthoringInfoField1ClassBreakInfos(295.9195,
                                                        165.0447),
                                                new AuthoringInfoField1ClassBreakInfos(503.7318,
                                                        182.6277)],
                                                    "aut",
                                                    "et",
                                                    "ut"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(573.8114,
                                                        846.3545),
                                                new AuthoringInfoField1ClassBreakInfos(571.9409,
                                                        807.7855)],
                                                    "perspiciatis",
                                                    "pariatur",
                                                    "consequatur"),
                                                ["deleniti",
                                                    "nobis",
                                                    "voluptates",
                                                    "sequi"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "qui",
                                                true,
                                            LengthUnit.Meters,
                                                118.5989,
                                                190.4648,
                                                242.2776,
                                                496.1873))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("sapiente rerum tempora")"
                                        StringContent="@("et")"
                                        OutFields="@(["culpa",
                                            "et",
                                            "non"])"
                                        FieldInfos="@([new FieldInfo("email",
                                                "corrupti",
                                                "dolor",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var)])"
                                        Content="@([new FieldsPopupContent([new FieldInfo("name",
                                                    "corrupti",
                                                    "omnis",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.ShortDate),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("category",
                                                    "sapiente",
                                                    "laboriosam",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongMonthDayYearLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("email",
                                                    "voluptates",
                                                    "et",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("email",
                                                    "accusamus",
                                                    "odio",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.LongMonthDayYear),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                                "autem voluptatem nihil accusamus modi voluptas",
                                                "doloremque est commodi"),
                                        new FieldsPopupContent([new FieldInfo("title",
                                                    "aut",
                                                    "ut",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("avatar",
                                                    "quis",
                                                    "debitis",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("group",
                                                    "impedit",
                                                    "in",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.LongDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("name",
                                                    "inventore",
                                                    "sapiente",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortDateLe),
                                                    true,
                                                    true,
                                                StatisticType.Max)],
                                                "id tenetur ex hic labore",
                                                "eum et ut")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                "avatar",
                                                "dicta dolor est",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature['FieldName'];",
                                                "password",
                                                "possimus non et",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("aliquid id ex",
                                                "https://picsum.photos/640/480/?image=629",
                                                "eda2e451-1d83-b36f-5d01-b36fe0a5d655",
                                                () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                                "password",
                                                true,
                                                true,
                                                true,
                                                "fugit"),
                                        new ActionToggle("non optio quaerat",
                                                "39730238-1695-389e-b433-1a181740f0b3",
                                                () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "title",
                                                "non")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveAlong)"
                                        LabelExpression="@("dolorem")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(37701512.5514)"
                                        MinScale="@(36572.1502)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(113.7504))"
                                        Symbol="@(new TextSymbol("consequatur cum ratione",
                                            new MapColor(114, 242, 34),
                                            new MapColor(88, 18, 187),
                                                new Dimension(371.6182),
                                            new MapFont(new Dimension(475.3242),
                                                    "Courier New",
                                                MapFontStyle.Italic,
                                                FontWeight.Lighter,
                                                TextDecoration.LineThrough),
                                                292.8115,
                                            new MapColor(127, 120, 33),
                                            new MapColor(226, 106, 163),
                                                546.2010,
                                            HorizontalAlignment.Center,
                                                true,
                                                261.3742,
                                                new Dimension(594.4212),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Street = '123 Main St.'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("tempora")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(101, 212, 213),
                                                new MapColor(113, 231, 93)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(77, 16, 251),
                                                new MapColor(138, 209, 135)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(210, 106, 167),
                                                new MapColor(186, 40, 242))]),
                                            743.2519,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(564.3705,
                                                    687.9786),
                                            new AuthoringInfoField1ClassBreakInfos(853.3282,
                                                    245.7690),
                                            new AuthoringInfoField1ClassBreakInfos(343.9311,
                                                    584.4613),
                                            new AuthoringInfoField1ClassBreakInfos(445.6442,
                                                    841.8444)],
                                                "consequatur",
                                                "dolore",
                                                "voluptas"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(32.3302,
                                                    214.2380),
                                            new AuthoringInfoField1ClassBreakInfos(945.0458,
                                                    741.6480)],
                                                "tempora",
                                                "fuga",
                                                "consequatur"),
                                            ["ut",
                                                "tempora",
                                                "id",
                                                "est"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "tenetur",
                                            true,
                                        LengthUnit.Inches,
                                            766.6434,
                                            394.2570,
                                            62.8326,
                                            748.4656))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("ea veritatis distinctio")"
                                    StringContent="@("possimus")"
                                    OutFields="@(["ut",
                                        "commodi"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "rerum",
                                            "rerum",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Avg)])"
                                    Content="@([new TextPopupContent("labore hic facilis"),
                                    new AttachmentsPopupContent("vero sed deserunt",
                                            "id delectus dolorem repudiandae alias",
                                            AttachmentsPopupContentDisplayType.Preview)])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "password",
                                            "aut qui quibusdam",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("dignissimos vitae suscipit",
                                            "https://picsum.photos/640/480/?image=467",
                                            "46cd8426-4f52-2b55-4254-6411d502b940",
                                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                            "name",
                                            true,
                                            true,
                                            true,
                                            "occaecati"),
                                    new ActionToggle("voluptates voluptate ea",
                                            "1ed3cc86-9eb4-b048-6a7c-505ffd057d5a",
                                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "temporibus")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterLeft)"
                                    LabelExpression="@("laboriosam")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(49293841.0675)"
                                    MinScale="@(8916.0706)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(782.9903))"
                                    Symbol="@(new TextSymbol("quis dolorem autem",
                                        new MapColor(22, 48, 1),
                                        new MapColor(8, 54, 165),
                                            new Dimension(740.6376),
                                        new MapFont(new Dimension(443.2698),
                                                "Arial",
                                            MapFontStyle.Italic,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            280.7832,
                                        new MapColor(71, 137, 109),
                                        new MapColor(35, 143, 73),
                                            289.1336,
                                        HorizontalAlignment.Right,
                                            true,
                                            492.3757,
                                            new Dimension(789.9114),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Province = 'Ontario'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("dolore")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(80.7167,
                667.5675,
                864.2133,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(4);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(324.1136,
                288.2677,
                258.1753);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.DestinationOver;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-108.7549,
                    -80.4688,
                    4.3318,
                    50.3525,
                    465.6215,
                    769.5220,
                    667.6651,
                    819.9380,
                new SpatialReference(9,
                        "et",
                        "tempora",
                        "nostrum"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    37942050.7585,
                    12576.3705,
                    0.8091,
                    true,
                    "dicta et ad",
                    true,
                    "consequatur",
                new LayerFloorInfo("rerum"),
                [new Label(LabelPlacement.BelowAlong,
                        "repellat",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        41448288.4418,
                        39565.8778,
                        true,
                        new Dimension(319.3440),
                    new TextSymbol("adipisci est fuga",
                        new MapColor(221, 188, 249),
                        new MapColor(138, 136, 106),
                            new Dimension(117.8853),
                        new MapFont(new Dimension(604.0610),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            220.3336,
                        new MapColor(168, 131, 44),
                        new MapColor(19, 156, 99),
                            764.3766,
                        HorizontalAlignment.Right,
                            true,
                            261.8653,
                            new Dimension(425.2252),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.AboveStart,
                        "minima",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        6432863.8779,
                        5981.2878,
                        true,
                        new Dimension(120.5390),
                    new TextSymbol("eum nesciunt rerum",
                        new MapColor(212, 82, 88),
                        new MapColor(225, 236, 159),
                            new Dimension(373.5759),
                        new MapFont(new Dimension(843.6056),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            130.4226,
                        new MapColor(205, 164, 186),
                        new MapColor(77, 191, 87),
                            290.2376,
                        HorizontalAlignment.Left,
                            true,
                            652.6059,
                            new Dimension(31.6076),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.AboveAlong,
                        "pariatur",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        43570727.6523,
                        39069.0643,
                        true,
                        new Dimension(636.1998),
                    new TextSymbol("exercitationem suscipit soluta",
                        new MapColor(31, 84, 103),
                        new MapColor(249, 104, 175),
                            new Dimension(189.7107),
                        new MapFont(new Dimension(148.8501),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            132.2051,
                        new MapColor(60, 20, 207),
                        new MapColor(78, 246, 119),
                            331.5255,
                        HorizontalAlignment.Right,
                            true,
                            743.6810,
                            new Dimension(576.5038),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterAfter,
                        "facilis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        6546101.9473,
                        43351.4364,
                        true,
                        new Dimension(170.5323),
                    new TextSymbol("nam voluptatum consequatur",
                        new MapColor(168, 240, 243),
                        new MapColor(80, 47, 195),
                            new Dimension(158.9260),
                        new MapFont(new Dimension(274.4535),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.None),
                            395.1953,
                        new MapColor(246, 173, 68),
                        new MapColor(120, 57, 10),
                            420.6395,
                        HorizontalAlignment.Right,
                            true,
                            360.2430,
                            new Dimension(334.6861),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("repudiandae et facere",
                        "omnis",
                        ["at",
                            "itaque",
                            "perspiciatis",
                            "vero"],
                    [new FieldInfo("comment",
                            "dolor",
                            "quia",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("updatedAt",
                            "cum",
                            "sapiente",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new TextPopupContent("reiciendis deserunt aperiam")],
                    [new ExpressionInfo("return $feature.Name;",
                            "email",
                            "illo fuga excepturi",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("tenetur qui quis",
                            "daa1a136-da12-aa0b-16ef-f19397ae68a6",
                            () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "alias"),
                    new ActionToggle("enim illo aspernatur",
                            "ce9d27d2-2d70-24c1-b1e1-bbedacfeaf48",
                            () => { Console.WriteLine("iste"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "quis"),
                    new ActionButton("aliquid dolore itaque",
                            "https://picsum.photos/640/480/?image=628",
                            "04aae88b-eeb4-0eb0-7cd1-3af834ac3f63",
                            () => { Console.WriteLine("vero"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "at"),
                    new ActionToggle("eius explicabo repudiandae",
                            "a0df9c87-1052-f241-f4a9-1491975a7165",
                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "sed")])),
            new Sublayer(4,
                    true,
                    true,
                ListMode.Show,
                    33707109.9070,
                    25377.9584,
                    0.0668,
                    true,
                    "ab ipsam omnis",
                    true,
                    "esse",
                new LayerFloorInfo("aliquid"),
                [new Label(LabelPlacement.AlwaysHorizontal,
                        "vitae",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        27438933.1232,
                        13952.9800,
                        true,
                        new Dimension(263.7405),
                    new TextSymbol("accusantium esse ducimus",
                        new MapColor(48, 139, 92),
                        new MapColor(171, 51, 26),
                            new Dimension(787.9700),
                        new MapFont(new Dimension(461.1783),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            667.0395,
                        new MapColor(70, 61, 189),
                        new MapColor(251, 229, 26),
                            181.1978,
                        HorizontalAlignment.Center,
                            true,
                            618.9824,
                            new Dimension(931.8278),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.AboveEnd,
                        "ad",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        24400007.2304,
                        24154.1832,
                        true,
                        new Dimension(43.0425),
                    new TextSymbol("quibusdam est eveniet",
                        new MapColor(202, 107, 128),
                        new MapColor(4, 149, 41),
                            new Dimension(983.8416),
                        new MapFont(new Dimension(106.1114),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            662.2138,
                        new MapColor(180, 23, 50),
                        new MapColor(154, 102, 162),
                            364.9784,
                        HorizontalAlignment.Left,
                            true,
                            347.5919,
                            new Dimension(956.4523),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.BelowAlong,
                        "omnis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        682119.6058,
                        33912.0643,
                        true,
                        new Dimension(176.5562),
                    new TextSymbol("facilis voluptatem sit",
                        new MapColor(226, 230, 163),
                        new MapColor(201, 146, 182),
                            new Dimension(778.4606),
                        new MapFont(new Dimension(842.0328),
                                "Times New Roman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            567.6459,
                        new MapColor(44, 179, 198),
                        new MapColor(150, 36, 243),
                            632.2231,
                        HorizontalAlignment.Left,
                            true,
                            347.9359,
                            new Dimension(834.8239),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.CenterCenter,
                        "veritatis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        41634661.9951,
                        2244.5863,
                        true,
                        new Dimension(734.7220),
                    new TextSymbol("aut nihil quibusdam",
                        new MapColor(199, 216, 243),
                        new MapColor(117, 37, 5),
                            new Dimension(663.5686),
                        new MapFont(new Dimension(310.9655),
                                "Georgia",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            440.2252,
                        new MapColor(237, 0, 132),
                        new MapColor(128, 65, 43),
                            582.7871,
                        HorizontalAlignment.Center,
                            true,
                            256.9134,
                            new Dimension(127.7388),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("natus id aliquid",
                        "quaerat",
                        ["exercitationem",
                            "aliquid",
                            "nihil"],
                    [new FieldInfo("category",
                            "dolore",
                            "iste",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new MediaPopupContent("aut expedita exercitationem",
                            "qui commodi voluptatibus voluptatibus sed magni quo",
                        [new ColumnChartMediaInfo("aliquam qui asperiores",
                                "in",
                                "architecto architecto magnam",
                            new ChartMediaInfoValue(["suscipit",
                                    "distinctio"],
                                    "odio",
                                    "facere",
                                [new ChartMediaInfoValueSeries("id",
                                        "quia",
                                        701.3133)],
                                [new MapColor(209, 32, 41),
                                new MapColor(60, 5, 205),
                                new MapColor(204, 62, 192),
                                new MapColor(11, 106, 235)])),
                        new LineChartMediaInfo("nam vel suscipit",
                                "asperiores",
                                "quia blanditiis corrupti",
                            new ChartMediaInfoValue(["molestiae",
                                    "neque",
                                    "quia",
                                    "aut"],
                                    "praesentium",
                                    "libero",
                                [new ChartMediaInfoValueSeries("comment",
                                        "reprehenderit",
                                        32.2976)],
                                [new MapColor(241, 108, 181)])),
                        new ImageMediaInfo("atque laborum cum",
                                "in",
                                "quaerat officiis quia",
                            new ImageMediaInfoValue("https://emmanuelle.org",
                                    "http://sonny.info"),
                                31.5996)],
                            9),
                    new RelationshipPopupContent("eos at id",
                            "assumenda quisquam nostrum amet",
                            2,
                            "sequi",
                        [new RelatedRecordsInfoFieldOrder("odio",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("non",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("aspernatur",
                            OrderBy.Asc)],
                            5),
                    new TextPopupContent("hic ut commodi"),
                    new AttachmentsPopupContent("explicabo sunt repudiandae",
                            "beatae voluptates sit nisi quis sunt qui",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "email",
                            "beatae incidunt a",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "phone",
                            "debitis occaecati voluptatem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "name",
                            "totam illo voluptate",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "voluptatibus ipsum excepturi",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("magnam eveniet blanditiis",
                            "25fd4a9a-1872-54ce-5e33-5ba0e3f9ff86",
                            () => { Console.WriteLine("doloribus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "possimus"),
                    new ActionButton("ea ea consequatur",
                            "https://picsum.photos/640/480/?image=8",
                            "fa0b003b-2c3d-2671-bf73-21c132788dc5",
                            () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "accusamus"),
                    new ActionButton("voluptate odio ipsam",
                            "https://picsum.photos/640/480/?image=852",
                            "163a0d31-403a-b9e1-6b1b-655ea76ec86b",
                            () => { Console.WriteLine("expedita"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "repellat"),
                    new ActionToggle("animi sunt quod",
                            "2e27d301-7342-452c-e5d4-a4b2e2137581",
                            () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "corrupti")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(400.1257,
                    TileInfoFormat.Mixed,
                    true,
                [new LOD(7,
                        "assumenda",
                        90.0425,
                        6059784.6692),
                new LOD(2,
                        "cupiditate",
                        77.5402,
                        37906027.1419)],
                new Point(-111.2188,
                        88.1641,
                        -145.8157,
                        -53.2019,
                        277.7431,
                    new SpatialReference(4,
                            "expedita",
                            "ut",
                            "qui"),
                        true,
                        true,
                        838.7321),
                    [5,
                        8,
                        2],
                new SpatialReference(5,
                        "eum",
                        "quae",
                        "nisi"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2004, 8, 4, 11, 49, 50),
                    new DateTime(2003, 9, 15, 1, 46, 49));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
