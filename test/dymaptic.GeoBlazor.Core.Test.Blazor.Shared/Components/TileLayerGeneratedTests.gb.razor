@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("optio")"
                        BlendMode="@(BlendMode.DestinationAtop)"
                        Copyright="@("deleniti")"
                        Effect="@(new Effect("laboriosam",
                            145135.3138))"
                        FullExtent="@(new Extent(-134.2927,
                                160.0510,
                                47.4111,
                                42.9639,
                                649.6626,
                                607.4465,
                                624.3208,
                                740.9024,
                            new SpatialReference(7,
                                    "unde",
                                    "nihil",
                                    "quia"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(42084477.2226)"
                        MinScale="@(48035.6820)"
                        Opacity="@(0.4831)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(392.3779)"
                        Resampling="@(true)"
                        TileServers="@(["autem",
                            "debitis"])"
                        Title="@("et deleniti vero")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_ShortwaveInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2011, 6, 19, 16, 6, 34))"
                            End="@(new DateTime(2010, 11, 13, 4, 2, 34))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(231.6418)"
                            Format="@(TileInfoFormat.Ps)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(1,
                                    "delectus",
                                    73.1106,
                                    12905728.0862),
                            new LOD(5,
                                    "commodi",
                                    12.9370,
                                    46172986.0115),
                            new LOD(4,
                                    "harum",
                                    37.3976,
                                    29189253.3285)])"
                            Origin="@(new Point(153.8059,
                                    -29.9878,
                                    -78.2830,
                                    86.1558,
                                    972.7224,
                                new SpatialReference(2,
                                        "est",
                                        "omnis",
                                        "cupiditate"),
                                    true,
                                    true,
                                    504.1512))"
                            Size="@([7,
                                1,
                                6,
                                6])"
                            SpatialReference="@(new SpatialReference(7,
                                    "deserunt",
                                    "consequuntur",
                                    "ut"))">
                        </TileInfo>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("dolores")"
                            ApiKey="@("at")"
                            AvgRating="@(295.5190)"
                            Categories="@(["voluptatem",
                                "et",
                                "at"])"
                            Created="@(new DateTime(2011, 1, 9, 2, 6, 51))"
                            Culture="@("dignissimos")"
                            Description="@("et numquam voluptates ut est expedita nam")"
                            Extent="@(new Extent(117.6967,
                                    -70.2057,
                                    -24.2262,
                                    -13.8331,
                                    279.2832,
                                    141.8433,
                                    446.0935,
                                    629.1333,
                                new SpatialReference(6,
                                        "neque",
                                        "qui",
                                        "deserunt"),
                                    true,
                                    true))"
                            GroupCategories="@(["nihil",
                                "sint",
                                "rerum"])"
                            LicenseInfo="@("ducimus")"
                            Modified="@(new DateTime(2008, 3, 4, 7, 3, 56))"
                            Name="@("avatar")"
                            NumComments="@(323.8829)"
                            NumRatings="@(123.7949)"
                            NumViews="@(46.9378)"
                            Owner="@("Kenna Blanda")"
                            OwnerFolder="@("Frida Durgan")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Auto,
                                    ["recusandae",
                                        "occaecati",
                                        "ea"],
                                    "et",
                                    "possimus",
                                    "illum",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("qui")"
                            Screenshots="@(["inventore",
                                "culpa",
                                "repellat"])"
                            Size="@(1)"
                            Snippet="@("sunt")"
                            Tags="@(["qui",
                                "debitis",
                                "nihil",
                                "similique"])"
                            Title="@("illo adipisci rerum")"
                            TypeKeywords="@(["et",
                                "et",
                                "eos",
                                "debitis"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(9)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(30726444.8764)"
                            MinScale="@(33496.3808)"
                            Opacity="@(0.8148)"
                            PopupEnabled="@(true)"
                            Title="@("omnis officiis voluptatem")"
                            Visible="@(true)"
                            DefinitionExpression="@("doloremque")"
                            FloorInfo="@(new LayerFloorInfo("et"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterStart,
                                    "voluptatem",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    12368852.8540,
                                    43587.1221,
                                    true,
                                    new Dimension(326.0725),
                                new TextSymbol("perferendis distinctio sed",
                                    new MapColor(129, 254, 124),
                                    new MapColor(209, 223, 117),
                                        new Dimension(839.5651),
                                    new MapFont(new Dimension(958.6285),
                                            "Helvetica",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        904.6235,
                                    new MapColor(117, 19, 107),
                                    new MapColor(201, 40, 26),
                                        542.1417,
                                    HorizontalAlignment.Left,
                                        true,
                                        278.7577,
                                        new Dimension(205.0543),
                                        true),
                                    true,
                                    "Street = '123 Main St.'"),
                            new Label(LabelPlacement.BelowLeft,
                                    "ab",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    31176524.2715,
                                    43975.9711,
                                    true,
                                    new Dimension(203.8596),
                                new TextSymbol("ab ad pariatur",
                                    new MapColor(54, 74, 251),
                                    new MapColor(208, 148, 144),
                                        new Dimension(383.6254),
                                    new MapFont(new Dimension(372.8390),
                                            "Arial",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        770.0902,
                                    new MapColor(156, 29, 114),
                                    new MapColor(133, 53, 251),
                                        923.1826,
                                    HorizontalAlignment.Center,
                                        true,
                                        775.7880,
                                        new Dimension(424.7431),
                                        true),
                                    true,
                                    "Street = '123 Main St.'")])"
                            PopupTemplate="@(new PopupTemplate("laborum ab non",
                                    "delectus",
                                    ["exercitationem",
                                        "sunt",
                                        "iusto"],
                                [new FieldInfo("createdAt",
                                        "alias",
                                        "in",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("token",
                                        "ut",
                                        "neque",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.ShortDateLeLongTime24),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("updatedAt",
                                        "iure",
                                        "rerum",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongMonthDayYear),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("comment",
                                        "consequatur",
                                        "eligendi",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateLeShortTime),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new RelationshipPopupContent("voluptates autem earum",
                                        "qui esse exercitationem dolores sint",
                                        1,
                                        "eaque",
                                    [new RelatedRecordsInfoFieldOrder("cum",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("alias",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("corrupti",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("rem",
                                        OrderBy.Desc)],
                                        7),
                                new TextPopupContent("laudantium suscipit aperiam"),
                                new AttachmentsPopupContent("odit dolores est",
                                        "earum ullam adipisci eum eveniet",
                                        AttachmentsPopupContentDisplayType.Preview),
                                new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "veritatis",
                                            "et vel rerum"))],
                                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "createdAt",
                                        "nemo dolorum est",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("eos est est",
                                        "bdbae566-a78f-2395-382c-aaa283d79e9a",
                                        () => { Console.WriteLine("fugit"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "status",
                                        "nam"),
                                new ActionButton("rerum cupiditate illo",
                                        "https://picsum.photos/640/480/?image=410",
                                        "b191f9ff-bf4b-741a-85b7-2858f7e3537d",
                                        () => { Console.WriteLine("vero"); return Task.CompletedTask; },
                                        "name",
                                        true,
                                        true,
                                        true,
                                        "est"),
                                new ActionButton("omnis alias nostrum",
                                        "https://picsum.photos/640/480/?image=791",
                                        "2ba40efb-de8b-ec1d-8fe9-50a001c53276",
                                        () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                                        "createdAt",
                                        true,
                                        true,
                                        true,
                                        "dignissimos"),
                                new ActionToggle("quos necessitatibus asperiores",
                                        "7f63bcdc-7a9d-ac64-d3e5-9fe5b2685c35",
                                        () => { Console.WriteLine("at"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "title",
                                        "pariatur")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("architecto autem excepturi",
                                    new MapColor(8, 224, 31),
                                    new MapColor(41, 137, 72),
                                        new Dimension(29.5829),
                                    new MapFont(new Dimension(683.3602),
                                            "Garamond",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        549.0651,
                                    new MapColor(234, 96, 122),
                                    new MapColor(172, 11, 76),
                                        325.2602,
                                    HorizontalAlignment.Center,
                                        true,
                                        151.2335,
                                        new Dimension(982.4694),
                                        true),
                                    "qui",
                                [new OpacityVariable("eos",
                                        "nobis",
                                    [new OpacityStop(821.7725,
                                            0.9616,
                                            "sunt")],
                                    new VisualVariableLegendOptions(true,
                                            "adipisci aliquid dolor"),
                                        "magnam",
                                        "consequatur dignissimos illum"),
                                new SizeVariable("possimus",
                                        new Dimension(684.2392),
                                        new Dimension(917.7713),
                                        348.7463,
                                        971.3599,
                                        VisualValueRepresentation.Width,
                                        VisualValueUnit.Inches,
                                        "beatae",
                                        "iure",
                                        true,
                                        VisualAxis.Depth,
                                        "enim",
                                        "et nihil voluptate",
                                    new VisualVariableLegendOptions(true,
                                            "occaecati cupiditate iste"))],
                                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(183, 141, 78),
                                            new MapColor(239, 117, 91)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(146, 166, 40),
                                            new MapColor(160, 206, 155)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(34, 2, 209),
                                            new MapColor(91, 65, 186)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(152, 1, 67),
                                            new MapColor(118, 210, 233))]),
                                        324.1707,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(829.7717,
                                                402.7866),
                                        new AuthoringInfoField1ClassBreakInfos(197.8284,
                                                75.7603),
                                        new AuthoringInfoField1ClassBreakInfos(854.4919,
                                                511.2677)],
                                            "itaque",
                                            "esse",
                                            "vel"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(566.3238,
                                                776.9234),
                                        new AuthoringInfoField1ClassBreakInfos(861.4085,
                                                592.2481)],
                                            "voluptate",
                                            "dolor",
                                            "quibusdam"),
                                        ["rem",
                                            "nulla",
                                            "ipsum",
                                            "quis"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "distinctio",
                                        true,
                                    LengthUnit.Meters,
                                        515.0386,
                                        384.6049,
                                        236.3207,
                                        633.5945)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(27898290.6085)"
                                MinScale="@(45761.9375)"
                                Opacity="@(0.4720)"
                                PopupEnabled="@(true)"
                                Title="@("vel voluptatem deserunt")"
                                Visible="@(true)"
                                DefinitionExpression="@("illo")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(7)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(2849813.2755)"
                                    MinScale="@(13990.1183)"
                                    Opacity="@(0.1551)"
                                    PopupEnabled="@(true)"
                                    Title="@("magnam excepturi deserunt")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("dolores")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(4)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(20893322.5238)"
                                        MinScale="@(9896.4715)"
                                        Opacity="@(0.9617)"
                                        PopupEnabled="@(true)"
                                        Title="@("recusandae alias modi")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("non")"
                                        Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(2)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(21681637.5619)"
                                            MinScale="@(21755.3963)"
                                            Opacity="@(0.6863)"
                                            PopupEnabled="@(true)"
                                            Title="@("quasi aut officiis")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("sed")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(1)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(17267811.9705)"
                                                MinScale="@(36674.5539)"
                                                Opacity="@(0.1621)"
                                                PopupEnabled="@(true)"
                                                Title="@("consequatur quia dolores")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("voluptate")"
                                                Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(9)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(31096587.9031)"
                                                    MinScale="@(47499.4879)"
                                                    Opacity="@(0.5690)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("blanditiis qui illo")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("voluptas")"
                                                    Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("quis dolores sed")"
                                                        StringContent="@("vel")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("rem")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("nihil et in")"
                                                    StringContent="@("animi")"
                                                    OutFields="@(["fuga",
                                                        "ducimus",
                                                        "laborum",
                                                        "culpa"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new ExpressionPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "9bb5ae3e-b0ff-34ac-7d83-85e9b17561cb",
                                                            () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "4f4458a4-5b2a-0c9c-f437-919014f0893b",
                                                            () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "a988e3eb-be1a-2229-f8b4-da0bb9bac1f5",
                                                            () => { Console.WriteLine("dolor"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveRight)"
                                                    LabelExpression="@("aut")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(28130510.4133)"
                                                    MinScale="@(38547.7820)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(902.0336))"
                                                    Symbol="@(new TextSymbol("id odit saepe"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("City = 'Toronto'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("tempore")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                        540.7135,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["fugiat",
                                                            "blanditiis",
                                                            "illum",
                                                            "nostrum"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "facere",
                                                        true,
                                                    LengthUnit.Decimeters,
                                                        916.1321,
                                                        902.0737,
                                                        632.6009,
                                                        139.9232))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("ea ea sit")"
                                                StringContent="@("autem")"
                                                OutFields="@(["et",
                                                    "et"])"
                                                FieldInfos="@([new FieldInfo("id",
                                                        "deserunt",
                                                        "explicabo",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev),
                                                new FieldInfo("name",
                                                        "repellendus",
                                                        "dolorem",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("createdAt",
                                                        "nihil",
                                                        "at",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)])"
                                                Content="@([new TextPopupContent("fugit enim ipsum"),
                                                new MediaPopupContent("nihil non est",
                                                        "cum magni nam alias adipisci et",
                                                    [new ImageMediaInfo(),
                                                    new ImageMediaInfo(),
                                                    new PieChartMediaInfo(),
                                                    new LineChartMediaInfo()],
                                                        5),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "rem saepe magni eum voluptatem nam quo",
                                                        "nam quae nulla")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "email",
                                                        "ea quae eum"),
                                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "email",
                                                        "autem omnis dignissimos"),
                                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "password",
                                                        "rerum eum dolorem"),
                                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                        "createdAt",
                                                        "tenetur magni facere")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("sint aut ab",
                                                        "e6333373-55b2-d6be-6288-cfc86e3d1b5d",
                                                        () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "phone",
                                                        "aut"),
                                                new ActionButton("sed veniam error",
                                                        "https://picsum.photos/640/480/?image=542",
                                                        "0f4acdfe-6d6d-6844-3dfe-cbc8eb2909fe",
                                                        () => { Console.WriteLine("vitae"); return Task.CompletedTask; },
                                                        "title",
                                                        true,
                                                        true,
                                                        true,
                                                        "quod"),
                                                new ActionToggle("consequatur cum et",
                                                        "fd45263e-7367-6325-febb-66cf7c47e5e3",
                                                        () => { Console.WriteLine("deleniti"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "id",
                                                        "recusandae"),
                                                new ActionButton("inventore soluta quia",
                                                        "https://picsum.photos/640/480/?image=1030",
                                                        "35d3902d-6167-8c62-c589-27b8404ce151",
                                                        () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                                                        "status",
                                                        true,
                                                        true,
                                                        true,
                                                        "recusandae")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterAlong)"
                                                LabelExpression="@("est")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(25768826.1873)"
                                                MinScale="@(12053.7870)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(371.3627))"
                                                Symbol="@(new TextSymbol("non harum odio",
                                                    new MapColor(142, 104, 231),
                                                    new MapColor(195, 208, 213),
                                                        null,
                                                    new MapFont(),
                                                        776.5746,
                                                    new MapColor(207, 85, 15),
                                                    new MapColor(232, 177, 72),
                                                        576.7475,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        645.2267,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Province = 'Ontario'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("eum")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv)]),
                                                    84.1896,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "amet",
                                                        "enim",
                                                        "sint"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "quibusdam",
                                                        "est",
                                                        "sunt"),
                                                    ["quae",
                                                        "et"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "qui",
                                                    true,
                                                LengthUnit.Centimeters,
                                                    391.6768,
                                                    474.6469,
                                                    570.8142,
                                                    988.4609))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("atque inventore in")"
                                            StringContent="@("perspiciatis")"
                                            OutFields="@(["ea",
                                                "amet"])"
                                            FieldInfos="@([new FieldInfo("email",
                                                    "itaque",
                                                    "sit",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Sum)])"
                                            Content="@([new AttachmentsPopupContent("cumque est repellendus",
                                                    "aut dolorem magni et minus aut corporis",
                                                    AttachmentsPopupContentDisplayType.Preview),
                                            new AttachmentsPopupContent("aut labore placeat",
                                                    "est qui consectetur vitae officiis ut",
                                                    AttachmentsPopupContentDisplayType.Auto),
                                            new AttachmentsPopupContent("dicta et nesciunt",
                                                    "quia autem tempora sed soluta sunt asperiores",
                                                    AttachmentsPopupContentDisplayType.Preview),
                                            new RelationshipPopupContent("quia nulla et",
                                                    "unde ut ea eius",
                                                    2,
                                                    "recusandae",
                                                [new RelatedRecordsInfoFieldOrder("non",
                                                    OrderBy.Desc),
                                                new RelatedRecordsInfoFieldOrder("itaque",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("ipsam",
                                                    OrderBy.Asc)],
                                                    3)])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                    "avatar",
                                                    "iusto hic cumque",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return Date();",
                                                    "email",
                                                    "dolor doloremque magnam",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "email",
                                                    "necessitatibus dolorem suscipit",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("error harum ea",
                                                    "https://picsum.photos/640/480/?image=449",
                                                    "fb847884-5916-5616-b7ff-17a0a3ba5c9e",
                                                    () => { Console.WriteLine("dignissimos"); return Task.CompletedTask; },
                                                    "group",
                                                    true,
                                                    true,
                                                    true,
                                                    "commodi"),
                                            new ActionToggle("rerum error consequuntur",
                                                    "439750de-61b4-3c11-33b6-17fef98fe477",
                                                    () => { Console.WriteLine("fugiat"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "token",
                                                    "cumque")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowCenter)"
                                            LabelExpression="@("repellendus")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(43035060.6834)"
                                            MinScale="@(27526.1342)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(820.5720))"
                                            Symbol="@(new TextSymbol("sunt delectus quae",
                                                new MapColor(109, 1, 122),
                                                new MapColor(188, 161, 155),
                                                    new Dimension(371.0928),
                                                new MapFont(new Dimension(794.1988),
                                                        "Times New Roman",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Normal,
                                                    TextDecoration.None),
                                                    358.0727,
                                                new MapColor(138, 84, 233),
                                                new MapColor(153, 183, 116),
                                                    85.9856,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    415.4996,
                                                    new Dimension(28.4050),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Country = 'Canada'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("cupiditate")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(135, 200, 133),
                                                new MapColor(5, 174, 247)),
                                                285.1750,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(355.0270,
                                                        768.0243),
                                                new AuthoringInfoField1ClassBreakInfos(407.4591,
                                                        499.2062)],
                                                    "aut",
                                                    "deserunt",
                                                    "eaque"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(320.8378,
                                                        856.3202),
                                                new AuthoringInfoField1ClassBreakInfos(638.9492,
                                                        904.8558)],
                                                    "sapiente",
                                                    "vitae",
                                                    "dolor"),
                                                ["nihil",
                                                    "vel"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "perspiciatis",
                                                true,
                                            LengthUnit.Feet,
                                                914.5257,
                                                343.4806,
                                                519.7173,
                                                642.2522))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("aliquam porro blanditiis")"
                                        StringContent="@("voluptas")"
                                        OutFields="@(["sit",
                                            "quidem",
                                            "delectus",
                                            "dolores"])"
                                        FieldInfos="@([new FieldInfo("phone",
                                                "voluptate",
                                                "ut",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("phone",
                                                "eius",
                                                "itaque",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.ShortDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Var)])"
                                        Content="@([new RelationshipPopupContent("aut quis aut",
                                                "et mollitia nulla dolores sint officia",
                                                5,
                                                "ut",
                                            [new RelatedRecordsInfoFieldOrder("rerum",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("alias",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("quas",
                                                OrderBy.Asc)],
                                                5)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "createdAt",
                                                "dolore voluptatum fugiat",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "avatar",
                                                "doloribus incidunt distinctio",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "id",
                                                "totam aut totam",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "group",
                                                "eum vel rem",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("magni deserunt corrupti",
                                                "92874f11-2042-36a5-7dd8-af37a00a4467",
                                                () => { Console.WriteLine("ratione"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "phone",
                                                "a"),
                                        new ActionToggle("quam pariatur id",
                                                "fb02f13b-6e9e-474d-d643-5cbebcebdc3c",
                                                () => { Console.WriteLine("molestiae"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "group",
                                                "tenetur"),
                                        new ActionToggle("itaque voluptatem porro",
                                                "f60560d7-e96d-0323-5682-b9280ac0db13",
                                                () => { Console.WriteLine("nam"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "comment",
                                                "est")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveLeft)"
                                        LabelExpression="@("quis")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(1616620.6996)"
                                        MinScale="@(8680.2573)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(989.1739))"
                                        Symbol="@(new TextSymbol("tenetur facilis labore",
                                            new MapColor(21, 9, 205),
                                            new MapColor(189, 106, 116),
                                                new Dimension(136.7551),
                                            new MapFont(new Dimension(541.8149),
                                                    "Palatino",
                                                MapFontStyle.Italic,
                                                FontWeight.Normal,
                                                TextDecoration.Underline),
                                                188.6320,
                                            new MapColor(26, 76, 181),
                                            new MapColor(76, 123, 139),
                                                818.1201,
                                            HorizontalAlignment.Center,
                                                true,
                                                733.4661,
                                                new Dimension(323.8690),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("PostalCode = 'M5V 1J9'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("temporibus")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(194, 234, 185),
                                            new MapColor(247, 134, 192)),
                                            117.8355,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(586.3046,
                                                    75.0231),
                                            new AuthoringInfoField1ClassBreakInfos(17.6720,
                                                    284.7110),
                                            new AuthoringInfoField1ClassBreakInfos(90.2198,
                                                    301.6813),
                                            new AuthoringInfoField1ClassBreakInfos(710.0251,
                                                    356.7513)],
                                                "officiis",
                                                "voluptas",
                                                "blanditiis"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(796.6010,
                                                    880.8676),
                                            new AuthoringInfoField1ClassBreakInfos(581.9379,
                                                    56.5603),
                                            new AuthoringInfoField1ClassBreakInfos(318.1199,
                                                    128.5350)],
                                                "beatae",
                                                "tempore",
                                                "quibusdam"),
                                            ["cupiditate",
                                                "fugiat",
                                                "dolorem"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "veniam",
                                            true,
                                        LengthUnit.Decimeters,
                                            686.6338,
                                            899.5553,
                                            285.5271,
                                            311.1679))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("molestiae sit ratione")"
                                    StringContent="@("rerum")"
                                    OutFields="@(["labore",
                                        "id"])"
                                    FieldInfos="@([new FieldInfo("token",
                                            "eius",
                                            "magni",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("password",
                                            "reiciendis",
                                            "neque",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("phone",
                                            "doloremque",
                                            "hic",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Avg)])"
                                    Content="@([new TextPopupContent("voluptatem dolore temporibus"),
                                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "quod",
                                                "dolorem et consequatur"))])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "email",
                                            "et quia aliquid",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("saepe tenetur enim",
                                            "https://picsum.photos/640/480/?image=892",
                                            "026d9bfd-491b-7deb-10f0-3863a8461169",
                                            () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "error"),
                                    new ActionButton("nisi at eos",
                                            "https://picsum.photos/640/480/?image=317",
                                            "635f2096-65fe-dae3-e6c4-dcc6163b1d19",
                                            () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "totam"),
                                    new ActionToggle("doloribus odio voluptatibus",
                                            "a9da0a4e-ce84-7d9d-0cdf-a128bee98858",
                                            () => { Console.WriteLine("repellat"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "category",
                                            "facere")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowStart)"
                                    LabelExpression="@("libero")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(22956241.9070)"
                                    MinScale="@(37829.9379)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(612.7996))"
                                    Symbol="@(new TextSymbol("ea corrupti ullam",
                                        new MapColor(182, 192, 48),
                                        new MapColor(31, 101, 155),
                                            new Dimension(698.3603),
                                        new MapFont(new Dimension(528.9992),
                                                "Times New Roman",
                                            MapFontStyle.Italic,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            439.0411,
                                        new MapColor(210, 229, 62),
                                        new MapColor(219, 243, 83),
                                            755.8334,
                                        HorizontalAlignment.Left,
                                            true,
                                            104.2650,
                                            new Dimension(849.7974),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Age > 21")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("sequi")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(278.8253,
                648.3379,
                8.0589,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(6);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(986.7068,
                761.3654,
                117.2812);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.Reflect;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-62.8059,
                    -105.4717,
                    8.1860,
                    -52.7719,
                    221.3855,
                    367.6848,
                    174.2678,
                    620.2409,
                new SpatialReference(1,
                        "mollitia",
                        "omnis",
                        "consequatur"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "mollitia",
                    "autem",
                    127.8838,
                    ["eum",
                        "et"],
                    new DateTime(2005, 6, 2, 15, 17, 47),
                    "sit",
                    "ullam tempore qui quidem illo",
                new Extent(-112.4388,
                        170.4485,
                        83.6066,
                        72.3759,
                        124.9203,
                        414.5366,
                        446.5173,
                        324.4450,
                    new SpatialReference(1,
                            "voluptate",
                            "aperiam",
                            "distinctio"),
                        true,
                        true),
                    ["ipsum",
                        "vero",
                        "pariatur",
                        "dolor"],
                    "perferendis",
                    new DateTime(2001, 10, 2, 11, 46, 5),
                    "group",
                    306.8571);
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(8,
                    true,
                    true,
                ListMode.Show,
                    2091818.3396,
                    14551.1126,
                    0.0896,
                    true,
                    "amet laborum recusandae",
                    true,
                    "deleniti",
                new LayerFloorInfo("eaque"),
                [new Label(LabelPlacement.AboveCenter,
                        "veritatis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        49068106.5584,
                        41208.6191,
                        true,
                        new Dimension(644.5078),
                    new TextSymbol("rerum iste magni",
                        new MapColor(239, 230, 211),
                        new MapColor(0, 153, 206),
                            new Dimension(697.3427),
                        new MapFont(new Dimension(260.8476),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            784.8525,
                        new MapColor(55, 119, 201),
                        new MapColor(139, 40, 44),
                            17.2229,
                        HorizontalAlignment.Right,
                            true,
                            540.3360,
                            new Dimension(867.1096),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.AboveEnd,
                        "velit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        43661977.4439,
                        16495.7203,
                        true,
                        new Dimension(830.1474),
                    new TextSymbol("quos dolor esse",
                        new MapColor(85, 103, 53),
                        new MapColor(113, 47, 91),
                            new Dimension(724.6066),
                        new MapFont(new Dimension(945.6665),
                                "Palatino",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            610.3230,
                        new MapColor(153, 103, 222),
                        new MapColor(76, 186, 108),
                            755.7515,
                        HorizontalAlignment.Right,
                            true,
                            832.3841,
                            new Dimension(360.8624),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AboveAfter,
                        "unde",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        30134227.5498,
                        41619.2374,
                        true,
                        new Dimension(669.5854),
                    new TextSymbol("ea omnis beatae",
                        new MapColor(158, 151, 201),
                        new MapColor(48, 158, 252),
                            new Dimension(242.0506),
                        new MapFont(new Dimension(490.9121),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            465.3478,
                        new MapColor(177, 157, 151),
                        new MapColor(46, 141, 141),
                            884.9293,
                        HorizontalAlignment.Left,
                            true,
                            856.0921,
                            new Dimension(354.5404),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.CenterBefore,
                        "provident",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        30236669.6541,
                        46138.0302,
                        true,
                        new Dimension(862.1375),
                    new TextSymbol("numquam ut aut",
                        new MapColor(203, 225, 243),
                        new MapColor(79, 213, 87),
                            new Dimension(638.8690),
                        new MapFont(new Dimension(87.3185),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            566.5307,
                        new MapColor(104, 48, 75),
                        new MapColor(34, 221, 219),
                            475.1341,
                        HorizontalAlignment.Right,
                            true,
                            423.7636,
                            new Dimension(939.8467),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("magnam tenetur asperiores",
                        "velit",
                        ["ad",
                            "illum",
                            "quo",
                            "itaque"],
                    [new FieldInfo("password",
                            "facilis",
                            "quibusdam",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("token",
                            "a",
                            "blanditiis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new AttachmentsPopupContent("ad aliquid hic",
                            "quia ut incidunt at sint",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("corporis eum perferendis")],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "comment",
                            "quia omnis neque",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "name",
                            "officiis vero neque",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("doloremque commodi ut",
                            "https://picsum.photos/640/480/?image=584",
                            "b1ddea46-ea05-652d-3db7-e32e9222a1e1",
                            () => { Console.WriteLine("minima"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "et")])),
            new Sublayer(1,
                    true,
                    true,
                ListMode.Hide,
                    49571170.8644,
                    30168.5531,
                    0.7847,
                    true,
                    "molestiae et sit",
                    true,
                    "aliquam",
                new LayerFloorInfo("assumenda"),
                [new Label(LabelPlacement.CenterBefore,
                        "dicta",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        41815329.5923,
                        27100.8103,
                        true,
                        new Dimension(937.4059),
                    new TextSymbol("enim nulla consequatur",
                        new MapColor(143, 193, 212),
                        new MapColor(253, 252, 114),
                            new Dimension(39.9328),
                        new MapFont(new Dimension(238.2430),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            530.7267,
                        new MapColor(8, 245, 100),
                        new MapColor(192, 112, 36),
                            585.8450,
                        HorizontalAlignment.Right,
                            true,
                            333.5019,
                            new Dimension(967.4371),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("sunt aliquam et",
                        "minima",
                        ["et",
                            "esse",
                            "aut",
                            "tempore"],
                    [new FieldInfo("title",
                            "doloribus",
                            "ut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("createdAt",
                            "molestias",
                            "consequatur",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("token",
                            "incidunt",
                            "quam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("id",
                            "ipsum",
                            "eum",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new RelationshipPopupContent("dolore quam esse",
                            "aperiam ratione earum cumque voluptas et",
                            1,
                            "rerum",
                        [new RelatedRecordsInfoFieldOrder("commodi",
                            OrderBy.Desc)],
                            1)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "createdAt",
                            "et cupiditate totam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "comment",
                            "placeat quo et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "title",
                            "sequi qui quis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "avatar",
                            "qui cupiditate mollitia",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("facilis quidem quisquam",
                            "https://picsum.photos/640/480/?image=809",
                            "c239fa10-9322-9508-ce47-d004e0b65be9",
                            () => { Console.WriteLine("fugit"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "laborum"),
                    new ActionButton("commodi doloribus autem",
                            "https://picsum.photos/640/480/?image=1009",
                            "931f44df-4aae-9751-a225-6190a5fae2e3",
                            () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "magni"),
                    new ActionButton("earum id sunt",
                            "https://picsum.photos/640/480/?image=730",
                            "24cc2fba-1220-a774-c73e-fd6c58b4140e",
                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "iure"),
                    new ActionButton("pariatur eum suscipit",
                            "https://picsum.photos/640/480/?image=648",
                            "5a5d311b-6f5e-6db0-99c2-5ed167eb29ec",
                            () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "odit")])),
            new Sublayer(4,
                    true,
                    true,
                ListMode.Hide,
                    32729813.8623,
                    12413.5570,
                    0.8523,
                    true,
                    "blanditiis voluptatem eius",
                    true,
                    "ea",
                new LayerFloorInfo("aperiam"),
                [new Label(LabelPlacement.BelowRight,
                        "quidem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        28470581.9685,
                        32743.1009,
                        true,
                        new Dimension(872.2766),
                    new TextSymbol("placeat ea quia",
                        new MapColor(235, 103, 29),
                        new MapColor(6, 236, 101),
                            new Dimension(594.2836),
                        new MapFont(new Dimension(115.7170),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            558.5171,
                        new MapColor(230, 108, 84),
                        new MapColor(166, 94, 239),
                            340.0175,
                        HorizontalAlignment.Center,
                            true,
                            988.5801,
                            new Dimension(136.4729),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("molestias quam nihil",
                        "aut",
                        ["consectetur",
                            "ab",
                            "inventore",
                            "id"],
                    [new FieldInfo("comment",
                            "libero",
                            "cumque",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongMonthDayYearLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("phone",
                            "necessitatibus",
                            "saepe",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new FieldsPopupContent([new FieldInfo("category",
                                "iure",
                                "qui",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("name",
                                "pariatur",
                                "molestias",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateShortTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("status",
                                "facilis",
                                "voluptatem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("createdAt",
                                "eaque",
                                "voluptatem",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                            "reprehenderit magnam rerum temporibus vitae sapiente sit",
                            "fugit temporibus nihil"),
                    new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                "eveniet",
                                "aliquid nam adipisci")),
                    new AttachmentsPopupContent("ipsa deserunt et",
                            "dolore ad libero rerum sint",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("consectetur sit quidem")],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "title",
                            "et beatae velit",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "email",
                            "veniam vero et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("ut doloribus sit",
                            "https://picsum.photos/640/480/?image=107",
                            "d316faea-17fc-c4f7-66a5-d5a1291b52ec",
                            () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                            "createdAt",
                            true,
                            true,
                            true,
                            "asperiores"),
                    new ActionButton("itaque et ut",
                            "https://picsum.photos/640/480/?image=99",
                            "8594ec28-dddc-f9fa-6a5e-4a4881823717",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "molestiae")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(116.0221,
                    TileInfoFormat.Gif,
                    true,
                [new LOD(2,
                        "dolores",
                        61.8982,
                        7828112.7291)],
                new Point(-110.3276,
                        -57.3694,
                        -117.7308,
                        -61.5582,
                        468.2386,
                    new SpatialReference(1,
                            "delectus",
                            "reprehenderit",
                            "quae"),
                        true,
                        true,
                        619.6069),
                    [7,
                        2,
                        2],
                new SpatialReference(5,
                        "aut",
                        "esse",
                        "rerum"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2005, 11, 7, 0, 2, 21),
                    new DateTime(2000, 8, 26, 14, 17, 56));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
