@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("quasi")"
                        BlendMode="@(BlendMode.VividLight)"
                        Copyright="@("veniam")"
                        Effect="@(new Effect("inventore",
                            25348908.2784))"
                        FullExtent="@(new Extent(167.0584,
                                -25.9240,
                                -24.2467,
                                -30.5405,
                                20.9791,
                                60.0682,
                                292.4954,
                                705.5419,
                            new SpatialReference(7,
                                    "aut",
                                    "aut",
                                    "nulla"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(10613518.0999)"
                        MinScale="@(33280.7428)"
                        Opacity="@(0.6191)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(301.7827)"
                        Resampling="@(true)"
                        TileServers="@(["rerum",
                            "qui",
                            "laborum",
                            "qui"])"
                        Title="@("cum quis nulla")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_ShortwaveInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2023, 6, 14, 6, 22, 22))"
                            End="@(new DateTime(2010, 7, 19, 16, 58, 35))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(77.4810)"
                            Format="@(TileInfoFormat.Png32)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(7,
                                    "fugit",
                                    71.9658,
                                    30289868.5279),
                            new LOD(7,
                                    "quia",
                                    91.3379,
                                    22064417.9157),
                            new LOD(7,
                                    "quaerat",
                                    88.6648,
                                    47218986.5454)])"
                            Origin="@(new Point(-167.8922,
                                    23.1052,
                                    -66.1928,
                                    -88.4175,
                                    648.6251,
                                new SpatialReference(3,
                                        "consequatur",
                                        "voluptatibus",
                                        "recusandae"),
                                    true,
                                    true,
                                    662.6106))"
                            Size="@([6,
                                6,
                                5,
                                9])"
                            SpatialReference="@(new SpatialReference(5,
                                    "accusamus",
                                    "enim",
                                    "voluptas"))">
                        </TileInfo>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(5)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(14924649.5002)"
                            MinScale="@(1526.0005)"
                            Opacity="@(0.2091)"
                            PopupEnabled="@(true)"
                            Title="@("omnis corporis et")"
                            Visible="@(true)"
                            DefinitionExpression="@("vero")"
                            FloorInfo="@(new LayerFloorInfo("eligendi"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowRight,
                                    "itaque",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    41111057.2727,
                                    30046.0702,
                                    true,
                                    new Dimension(739.6889),
                                new TextSymbol("sunt consequuntur animi",
                                    new MapColor(68, 238, 199),
                                    new MapColor(143, 176, 229),
                                        new Dimension(172.2920),
                                    new MapFont(new Dimension(723.5000),
                                            "Courier New",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.Underline),
                                        549.6033,
                                    new MapColor(106, 3, 227),
                                    new MapColor(213, 222, 78),
                                        486.7280,
                                    HorizontalAlignment.Right,
                                        true,
                                        475.5257,
                                        new Dimension(718.7541),
                                        true),
                                    true,
                                    "1 = 1")])"
                            PopupTemplate="@(new PopupTemplate("est numquam explicabo",
                                    "omnis",
                                    ["et",
                                        "natus",
                                        "sed"],
                                [new FieldInfo("id",
                                        "mollitia",
                                        "vitae",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("phone",
                                        "aperiam",
                                        "dicta",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearLongTime24),
                                        true,
                                        true,
                                    StatisticType.Count)],
                                [new MediaPopupContent("autem possimus provident",
                                        "est ut at impedit in",
                                    [new PieChartMediaInfo("necessitatibus est velit",
                                            "vero",
                                            "eos neque et",
                                        new ChartMediaInfoValue(["velit",
                                                "cumque",
                                                "quia",
                                                "aut"],
                                                "provident",
                                                "unde",
                                            [new ChartMediaInfoValueSeries("id",
                                                    "eligendi",
                                                    802.1403)],
                                            [new MapColor(50, 92, 144),
                                            new MapColor(154, 161, 130),
                                            new MapColor(124, 242, 1)])),
                                    new ColumnChartMediaInfo("enim omnis et",
                                            "quae",
                                            "distinctio aut atque",
                                        new ChartMediaInfoValue(["molestias",
                                                "velit"],
                                                "est",
                                                "autem",
                                            [new ChartMediaInfoValueSeries("name",
                                                    "sapiente",
                                                    385.0820)],
                                            [new MapColor(167, 238, 190),
                                            new MapColor(44, 85, 12)])),
                                    new LineChartMediaInfo("quam pariatur ut",
                                            "rerum",
                                            "officiis excepturi voluptatem",
                                        new ChartMediaInfoValue(["rerum",
                                                "repellendus",
                                                "et",
                                                "reiciendis"],
                                                "temporibus",
                                                "ullam",
                                            [new ChartMediaInfoValueSeries("email",
                                                    "maxime",
                                                    981.5242),
                                            new ChartMediaInfoValueSeries("title",
                                                    "rerum",
                                                    863.8863)],
                                            [new MapColor(171, 120, 122),
                                            new MapColor(179, 17, 33)])),
                                    new LineChartMediaInfo("enim maiores quaerat",
                                            "veniam",
                                            "nam consequatur unde",
                                        new ChartMediaInfoValue(["earum",
                                                "itaque",
                                                "natus"],
                                                "similique",
                                                "beatae",
                                            [new ChartMediaInfoValueSeries("id",
                                                    "sed",
                                                    370.7274),
                                            new ChartMediaInfoValueSeries("token",
                                                    "odit",
                                                    824.6857)],
                                            [new MapColor(46, 85, 54),
                                            new MapColor(80, 10, 230),
                                            new MapColor(135, 47, 78),
                                            new MapColor(230, 202, 161)]))],
                                        2),
                                new AttachmentsPopupContent("distinctio hic et",
                                        "totam suscipit iure quas",
                                        AttachmentsPopupContentDisplayType.Preview),
                                new FieldsPopupContent([new FieldInfo("createdAt",
                                            "saepe",
                                            "magnam",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("name",
                                            "eaque",
                                            "quod",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLeLongTime),
                                            true,
                                            true,
                                        StatisticType.Stddev)],
                                        "tempore magni praesentium sit incidunt et",
                                        "veritatis nobis excepturi")],
                                [new ExpressionInfo("return $feature['FieldName'];",
                                        "group",
                                        "nostrum harum esse",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "createdAt",
                                        "eveniet pariatur blanditiis",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "name",
                                        "consequatur optio corporis",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("nostrum distinctio incidunt",
                                        "https://picsum.photos/640/480/?image=496",
                                        "62b7f75e-35df-64dd-f84f-e502f808ce1e",
                                        () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                        "avatar",
                                        true,
                                        true,
                                        true,
                                        "sint"),
                                new ActionToggle("placeat ut est",
                                        "0e65f3df-60d7-5d8b-c698-9e88bfd87f00",
                                        () => { Console.WriteLine("inventore"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "email",
                                        "blanditiis"),
                                new ActionToggle("id sunt laboriosam",
                                        "ab2203cb-c59e-e630-46b1-0f12e8ed3d8f",
                                        () => { Console.WriteLine("quidem"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "title",
                                        "sint")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.Manual,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(5, 235, 150),
                                            new MapColor(62, 228, 182)),
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(109, 181, 46),
                                            new MapColor(12, 174, 10)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(108, 200, 130),
                                            new MapColor(135, 250, 245))]),
                                        208.5848,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(738.5660,
                                                558.1578),
                                        new AuthoringInfoField1ClassBreakInfos(908.8407,
                                                300.0948)],
                                            "id",
                                            "labore",
                                            "eveniet"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(633.1933,
                                                599.6135),
                                        new AuthoringInfoField1ClassBreakInfos(860.9143,
                                                944.7649),
                                        new AuthoringInfoField1ClassBreakInfos(552.4850,
                                                80.3073),
                                        new AuthoringInfoField1ClassBreakInfos(804.1918,
                                                251.6772)],
                                            "mollitia",
                                            "cupiditate",
                                            "nesciunt"),
                                        ["et",
                                            "a",
                                            "officia"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "voluptatibus",
                                        true,
                                    LengthUnit.Yards,
                                        230.7686,
                                        507.1405,
                                        825.7389,
                                        297.2068),
                                new PictureFillSymbol("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1",
                                    new Dimension(770.6280),
                                    new Dimension(886.8551),
                                    new Dimension(627.0473),
                                    new Dimension(318.3785),
                                    106.4597,
                                    -15.0153,
                                    new Outline(new MapColor(59, 200, 97),
                                        new Dimension(951.7639),
                                        SimpleLineSymbolStyle.ShortDashDot,
                                        Cap.Round,
                                        Join.Round,
                                        new LineSymbolMarker(new MapColor(112, 249, 211),
                                            LinePlacement.End,
                                            LineSymbolMarkerStyle.Cross),
                                        326.6429),
                                    new MapColor(53, 175, 74)),
                                    "vel",
                                    new DefaultSymbol(),
                                    "id",
                                    "aut",
                                    "sit",
                                    "aperiam",
                                new UniqueValueRendererLegendOptions("ut voluptas nisi"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("quidem",
                                        new TextSymbol("quibusdam necessitatibus totam",
                                            new MapColor(65, 14, 24),
                                            new MapColor(86, 170, 6),
                                                new Dimension(727.7537),
                                            new MapFont(new Dimension(444.6714),
                                                    "Courier New",
                                                MapFontStyle.Italic,
                                                FontWeight.Lighter,
                                                TextDecoration.None),
                                                384.5012,
                                            new MapColor(244, 64, 80),
                                            new MapColor(173, 115, 30),
                                                475.9061,
                                            HorizontalAlignment.Right,
                                                true,
                                                464.6660,
                                                new Dimension(101.9091),
                                                true),
                                        [new UniqueValue("possimus",
                                                "saepe",
                                                "doloribus"),
                                        new UniqueValue("numquam",
                                                "quo",
                                                "exercitationem"),
                                        new UniqueValue("quam",
                                                "odit",
                                                "quas")])],
                                        "id")],
                                [new UniqueValueInfo("cum",
                                    new TextSymbol("magnam ut nostrum",
                                        new MapColor(85, 55, 75),
                                        new MapColor(155, 167, 96),
                                            new Dimension(529.2360),
                                        new MapFont(new Dimension(256.4716),
                                                "Arial",
                                            MapFontStyle.Italic,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            537.3929,
                                        new MapColor(144, 14, 138),
                                        new MapColor(184, 239, 72),
                                            623.9423,
                                        HorizontalAlignment.Left,
                                            true,
                                            343.8045,
                                            new Dimension(606.7121),
                                            true),
                                        "neque"),
                                new UniqueValueInfo("eum",
                                    new TextSymbol("quia pariatur explicabo",
                                        new MapColor(106, 241, 52),
                                        new MapColor(192, 151, 30),
                                            new Dimension(664.7243),
                                        new MapFont(new Dimension(500.6813),
                                                "Verdana",
                                            MapFontStyle.Italic,
                                            FontWeight.Bold,
                                            TextDecoration.Underline),
                                            43.1931,
                                        new MapColor(39, 205, 168),
                                        new MapColor(2, 166, 148),
                                            377.6826,
                                        HorizontalAlignment.Center,
                                            true,
                                            937.3984,
                                            new Dimension(75.7831),
                                            true),
                                        "excepturi")],
                                    "quia",
                                    "temporibus fugit voluptatem"))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(2)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(13342373.3104)"
                                MinScale="@(47671.5242)"
                                Opacity="@(0.6140)"
                                PopupEnabled="@(true)"
                                Title="@("quia debitis eaque")"
                                Visible="@(true)"
                                DefinitionExpression="@("iste")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(8)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(13682118.6664)"
                                    MinScale="@(31018.9620)"
                                    Opacity="@(0.1307)"
                                    PopupEnabled="@(true)"
                                    Title="@("et autem recusandae")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("sed")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(10150705.5018)"
                                        MinScale="@(20815.7118)"
                                        Opacity="@(0.7890)"
                                        PopupEnabled="@(true)"
                                        Title="@("sunt doloremque necessitatibus")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("aut")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(9)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(7480349.6766)"
                                            MinScale="@(11974.7179)"
                                            Opacity="@(0.2675)"
                                            PopupEnabled="@(true)"
                                            Title="@("sunt cumque dolores")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("incidunt")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(8)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(49418819.4433)"
                                                MinScale="@(20179.2929)"
                                                Opacity="@(0.3476)"
                                                PopupEnabled="@(true)"
                                                Title="@("omnis et sed")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("reiciendis")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(9)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(12875562.1706)"
                                                    MinScale="@(32542.2322)"
                                                    Opacity="@(0.7544)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("harum qui culpa")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("possimus")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("et voluptatibus occaecati")"
                                                        StringContent="@("quia")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("et")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("aperiam quibusdam maiores")"
                                                    StringContent="@("aut")"
                                                    OutFields="@(["officia",
                                                        "dolores",
                                                        "explicabo"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new RelationshipPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new RelationshipPopupContent(),
                                                    new ExpressionPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "16c288bb-ebe8-0a3e-064f-5a0af27b2994",
                                                            () => { Console.WriteLine("minima"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "9967b381-34a1-5ba3-77aa-f6aa8a392263",
                                                            () => { Console.WriteLine("dolorum"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "90057bf7-5718-37f0-ea17-b61c327421cf",
                                                            () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveBefore)"
                                                    LabelExpression="@("voluptate")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(19907763.5670)"
                                                    MinScale="@(38021.9711)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(748.6008))"
                                                    Symbol="@(new TextSymbol("soluta quis enim"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("1 = 1")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("et")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                    new MultipartColorRamp(),
                                                        908.5248,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["quibusdam",
                                                            "quas"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "perspiciatis",
                                                        true,
                                                    LengthUnit.Centimeters,
                                                        34.9668,
                                                        426.6693,
                                                        677.1065,
                                                        832.5670))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("ut quasi exercitationem")"
                                                StringContent="@("repudiandae")"
                                                OutFields="@(["nemo",
                                                    "in",
                                                    "quae"])"
                                                FieldInfos="@([new FieldInfo("avatar",
                                                        "nihil",
                                                        "nisi",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min),
                                                new FieldInfo("title",
                                                        "et",
                                                        "quod",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)])"
                                                Content="@([new AttachmentsPopupContent("omnis cum enim",
                                                        "in nihil nesciunt iure magnam et"),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                        "group",
                                                        "odit non asperiores"),
                                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "password",
                                                        "delectus ratione aliquam"),
                                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "category",
                                                        "dolores architecto sit")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("tenetur cupiditate ut",
                                                        "https://picsum.photos/640/480/?image=816",
                                                        "22f002bf-c742-3d5a-980d-273a68a7fd5e",
                                                        () => { Console.WriteLine("itaque"); return Task.CompletedTask; },
                                                        "phone",
                                                        true,
                                                        true,
                                                        true,
                                                        "atque"),
                                                new ActionButton("fugit reprehenderit animi",
                                                        "https://picsum.photos/640/480/?image=661",
                                                        "7d714554-8c6c-cfed-316a-13dd9fcbf037",
                                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                        "id",
                                                        true,
                                                        true,
                                                        true,
                                                        "maiores")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveRight)"
                                                LabelExpression="@("aut")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(7412910.6761)"
                                                MinScale="@(37712.0842)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(316.0483))"
                                                Symbol="@(new TextSymbol("dolorem optio mollitia",
                                                    new MapColor(89, 100, 17),
                                                    new MapColor(9, 80, 10),
                                                        null,
                                                    new MapFont(),
                                                        198.9769,
                                                    new MapColor(57, 246, 176),
                                                    new MapColor(187, 96, 145),
                                                        403.8748,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        101.2160,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Country = 'Canada'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quisquam")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(112, 213, 252),
                                                    new MapColor(127, 37, 82)),
                                                    732.9665,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "adipisci",
                                                        "culpa",
                                                        "velit"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "quibusdam",
                                                        "soluta",
                                                        "consequatur"),
                                                    ["laudantium",
                                                        "aliquam"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "debitis",
                                                    true,
                                                LengthUnit.Feet,
                                                    83.6586,
                                                    869.3497,
                                                    54.4912,
                                                    982.6408))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("consequatur vitae dolor")"
                                            StringContent="@("laborum")"
                                            OutFields="@(["inventore",
                                                "aliquid",
                                                "explicabo",
                                                "fugiat"])"
                                            FieldInfos="@([new FieldInfo("status",
                                                    "tenetur",
                                                    "laboriosam",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("updatedAt",
                                                    "perferendis",
                                                    "quaerat",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.LongMonthDayYearShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("createdAt",
                                                    "quam",
                                                    "reprehenderit",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongMonthDayYear),
                                                    true,
                                                    true,
                                                StatisticType.Sum)])"
                                            Content="@([new AttachmentsPopupContent("ab natus voluptatem",
                                                    "facere omnis recusandae voluptate sit",
                                                    AttachmentsPopupContentDisplayType.Preview)])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                    "comment",
                                                    "facere laudantium ea",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "password",
                                                    "incidunt aut quas",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("cupiditate praesentium consequatur",
                                                    "https://picsum.photos/640/480/?image=488",
                                                    "9f8fb93c-94f4-947e-4c6d-5cf2ce2ab58a",
                                                    () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                                    "title",
                                                    true,
                                                    true,
                                                    true,
                                                    "tempore")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveAfter)"
                                            LabelExpression="@("non")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(18740076.4427)"
                                            MinScale="@(3817.3387)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(569.9281))"
                                            Symbol="@(new TextSymbol("enim aperiam optio",
                                                new MapColor(137, 117, 79),
                                                new MapColor(18, 237, 99),
                                                    new Dimension(384.2407),
                                                new MapFont(new Dimension(596.4613),
                                                        "Times New Roman",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Bolder,
                                                    TextDecoration.LineThrough),
                                                    719.9801,
                                                new MapColor(16, 253, 84),
                                                new MapColor(33, 212, 111),
                                                    570.1573,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    783.9535,
                                                    new Dimension(283.1946),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Country = 'Canada'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("tempora")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(123, 183, 43),
                                                    new MapColor(163, 234, 36)),
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(95, 180, 21),
                                                    new MapColor(77, 185, 188)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(200, 36, 41),
                                                    new MapColor(32, 2, 27)),
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(132, 39, 223),
                                                    new MapColor(44, 84, 233))]),
                                                590.8226,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(619.8047,
                                                        856.7915),
                                                new AuthoringInfoField1ClassBreakInfos(594.9566,
                                                        633.6953),
                                                new AuthoringInfoField1ClassBreakInfos(64.3632,
                                                        383.8363),
                                                new AuthoringInfoField1ClassBreakInfos(597.6202,
                                                        574.0286)],
                                                    "possimus",
                                                    "ad",
                                                    "et"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(410.2627,
                                                        734.2405),
                                                new AuthoringInfoField1ClassBreakInfos(275.6439,
                                                        386.4257),
                                                new AuthoringInfoField1ClassBreakInfos(569.1436,
                                                        524.4301),
                                                new AuthoringInfoField1ClassBreakInfos(788.8738,
                                                        396.2800)],
                                                    "voluptate",
                                                    "excepturi",
                                                    "error"),
                                                ["perspiciatis",
                                                    "voluptatibus",
                                                    "est"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "consectetur",
                                                true,
                                            LengthUnit.Feet,
                                                445.9719,
                                                955.8141,
                                                466.2396,
                                                643.1759))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("qui ullam eligendi")"
                                        StringContent="@("quia")"
                                        OutFields="@(["est",
                                            "libero"])"
                                        FieldInfos="@([new FieldInfo("email",
                                                "sint",
                                                "qui",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("phone",
                                                "voluptatem",
                                                "veritatis",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("title",
                                                "occaecati",
                                                "dolores",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("category",
                                                "consequuntur",
                                                "et",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Avg)])"
                                        Content="@([new RelationshipPopupContent("ab ut ducimus",
                                                "quo corrupti tempore reiciendis",
                                                5,
                                                "amet",
                                            [new RelatedRecordsInfoFieldOrder("id",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("vitae",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("in",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("dignissimos",
                                                OrderBy.Asc)],
                                                6),
                                        new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "voluptate",
                                                    "delectus minus voluptas"))])"
                                        ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                "comment",
                                                "rerum eius dolores",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Name;",
                                                "token",
                                                "dolor voluptatibus autem",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "createdAt",
                                                "saepe dolorum eos",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "token",
                                                "illo soluta ut",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("non libero saepe",
                                                "https://picsum.photos/640/480/?image=625",
                                                "d2f1d0ba-2f1c-4ffc-663b-b14e9eeb19cf",
                                                () => { Console.WriteLine("fugiat"); return Task.CompletedTask; },
                                                "email",
                                                true,
                                                true,
                                                true,
                                                "et"),
                                        new ActionToggle("vel porro deserunt",
                                                "335b2ce3-a628-749c-c973-5ecaa7d9748e",
                                                () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "id",
                                                "suscipit")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterStart)"
                                        LabelExpression="@("cumque")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(11107942.7811)"
                                        MinScale="@(42274.9294)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(721.5123))"
                                        Symbol="@(new TextSymbol("assumenda blanditiis unde",
                                            new MapColor(186, 169, 186),
                                            new MapColor(1, 179, 229),
                                                new Dimension(672.9866),
                                            new MapFont(new Dimension(306.4594),
                                                    "Courier New",
                                                MapFontStyle.Normal,
                                                FontWeight.Bolder,
                                                TextDecoration.None),
                                                988.6059,
                                            new MapColor(208, 124, 45),
                                            new MapColor(140, 246, 164),
                                                742.9817,
                                            HorizontalAlignment.Left,
                                                true,
                                                711.3286,
                                                new Dimension(812.1292),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Age > 21")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("ad")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(151, 236, 37),
                                                new MapColor(225, 55, 146)),
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(75, 100, 57),
                                                new MapColor(59, 187, 91)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(204, 105, 6),
                                                new MapColor(55, 84, 238))]),
                                            934.6773,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(409.2584,
                                                    548.2551),
                                            new AuthoringInfoField1ClassBreakInfos(340.5406,
                                                    482.2446),
                                            new AuthoringInfoField1ClassBreakInfos(217.2427,
                                                    185.6007),
                                            new AuthoringInfoField1ClassBreakInfos(831.4219,
                                                    735.5832)],
                                                "ullam",
                                                "architecto",
                                                "qui"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(852.4334,
                                                    397.4877)],
                                                "velit",
                                                "voluptatem",
                                                "voluptas"),
                                            ["occaecati",
                                                "porro"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "quidem",
                                            true,
                                        LengthUnit.Feet,
                                            84.3480,
                                            869.9727,
                                            475.5829,
                                            464.1567))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("repellat rerum cupiditate")"
                                    StringContent="@("architecto")"
                                    OutFields="@(["ut",
                                        "consectetur"])"
                                    FieldInfos="@([new FieldInfo("phone",
                                            "odit",
                                            "nostrum",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("status",
                                            "corporis",
                                            "ut",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("phone",
                                            "quaerat",
                                            "et",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Count)])"
                                    Content="@([new FieldsPopupContent([new FieldInfo("email",
                                                "officia",
                                                "magni",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("status",
                                                "est",
                                                "a",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("category",
                                                "quia",
                                                "voluptatum",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongMonthYear),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("status",
                                                "culpa",
                                                "aut",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.DayShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Min)],
                                            "corporis qui voluptatem cumque itaque quibusdam ut",
                                            "quod cum architecto"),
                                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "illum",
                                                "molestiae eaque quas")),
                                    new ExpressionPopupContent(new ElementExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "quam",
                                                "est repellendus est"))])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                            "title",
                                            "voluptas quidem reprehenderit",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "phone",
                                            "id impedit aut",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("illum omnis molestiae",
                                            "404c5a98-de69-20a4-d5c5-2feeabb0870b",
                                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "comment",
                                            "perspiciatis"),
                                    new ActionButton("et cumque consequatur",
                                            "https://picsum.photos/640/480/?image=1063",
                                            "c65b794a-1b62-5b12-60df-f217bcea6554",
                                            () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                            "token",
                                            true,
                                            true,
                                            true,
                                            "exercitationem"),
                                    new ActionButton("quos deserunt provident",
                                            "https://picsum.photos/640/480/?image=233",
                                            "d4a7b70c-4fda-6ac6-443c-72175e925863",
                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                            "category",
                                            true,
                                            true,
                                            true,
                                            "dignissimos"),
                                    new ActionToggle("officiis ea illum",
                                            "49d05728-0f2c-5c43-8ed8-6b5bdde9bc79",
                                            () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "id",
                                            "ad")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterBefore)"
                                    LabelExpression="@("eos")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(38669738.1943)"
                                    MinScale="@(42804.0921)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(570.8211))"
                                    Symbol="@(new TextSymbol("iste odit totam",
                                        new MapColor(3, 197, 201),
                                        new MapColor(32, 149, 215),
                                            new Dimension(439.4035),
                                        new MapFont(new Dimension(151.2966),
                                                "Georgia",
                                            MapFontStyle.Italic,
                                            FontWeight.Normal,
                                            TextDecoration.Underline),
                                            361.2097,
                                        new MapColor(171, 249, 54),
                                        new MapColor(201, 21, 219),
                                            790.0920,
                                        HorizontalAlignment.Right,
                                            true,
                                            320.4660,
                                            new Dimension(641.3436),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Name = 'John Doe'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("pariatur")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(887.6808,
                440.7478,
                200.1964,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(2);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(604.2404,
                233.2092,
                662.5684);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.DestinationOut;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-88.3271,
                    -28.4608,
                    -43.0264,
                    -52.2423,
                    230.1685,
                    399.6830,
                    343.4015,
                    766.1901,
                new SpatialReference(2,
                        "nostrum",
                        "autem",
                        "et"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    25120630.4523,
                    32651.9217,
                    0.6744,
                    true,
                    "asperiores eaque suscipit",
                    true,
                    "quis",
                new LayerFloorInfo("quos"),
                [new Label(LabelPlacement.BelowCenter,
                        "consequatur",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        24376294.6583,
                        18856.9597,
                        true,
                        new Dimension(967.3723),
                    new TextSymbol("quidem et eos",
                        new MapColor(71, 61, 9),
                        new MapColor(137, 189, 203),
                            new Dimension(85.6350),
                        new MapFont(new Dimension(67.9972),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            463.6736,
                        new MapColor(13, 253, 187),
                        new MapColor(111, 218, 237),
                            859.8710,
                        HorizontalAlignment.Left,
                            true,
                            811.1951,
                            new Dimension(260.6670),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("consequatur et consectetur",
                        "rerum",
                        ["et",
                            "est",
                            "atque",
                            "voluptates"],
                    [new FieldInfo("password",
                            "nihil",
                            "rerum",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("email",
                            "nisi",
                            "dolor",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "officiis",
                                "delectus vitae totam")),
                    new AttachmentsPopupContent("et amet est",
                            "ipsum est non aut harum",
                            AttachmentsPopupContentDisplayType.Auto),
                    new TextPopupContent("iusto id quam"),
                    new TextPopupContent("animi veritatis blanditiis")],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "updatedAt",
                            "qui quia amet",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "name",
                            "alias similique aut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("sed nesciunt fugiat",
                            "608a970b-ba0f-3752-ce39-eee0f18cac6e",
                            () => { Console.WriteLine("voluptates"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "voluptate"),
                    new ActionToggle("ut est natus",
                            "fca07096-986b-8c8b-43a2-6e37ae8acf05",
                            () => { Console.WriteLine("consectetur"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "ut")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    30565643.0796,
                    7124.4107,
                    0.5597,
                    true,
                    "aut velit sit",
                    true,
                    "reprehenderit",
                new LayerFloorInfo("quia"),
                [new Label(LabelPlacement.BelowBefore,
                        "excepturi",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        1654980.1992,
                        20804.2227,
                        true,
                        new Dimension(787.9430),
                    new TextSymbol("explicabo est laborum",
                        new MapColor(210, 148, 146),
                        new MapColor(161, 227, 243),
                            new Dimension(44.0263),
                        new MapFont(new Dimension(640.5278),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.LineThrough),
                            250.6845,
                        new MapColor(133, 31, 148),
                        new MapColor(250, 195, 10),
                            198.6579,
                        HorizontalAlignment.Center,
                            true,
                            316.1868,
                            new Dimension(839.4390),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("eaque rerum repellendus",
                        "praesentium",
                        ["voluptas",
                            "nihil"],
                    [new FieldInfo("category",
                            "et",
                            "voluptatem",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Min)],
                    [new TextPopupContent("odit alias et"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "doloremque",
                                "nobis iste minima")),
                    new RelationshipPopupContent("sit quas hic",
                            "et est accusamus fuga voluptate et enim",
                            3,
                            "distinctio",
                        [new RelatedRecordsInfoFieldOrder("quis",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("est",
                            OrderBy.Desc)],
                            5),
                    new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "id",
                                "recusandae laboriosam sed"))],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "password",
                            "ducimus odio quo",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "updatedAt",
                            "qui molestias nam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("eaque voluptatem nobis",
                            "https://picsum.photos/640/480/?image=872",
                            "f60d3cae-c61e-87a4-545d-3e71f793e9bb",
                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "delectus"),
                    new ActionButton("minima magnam doloremque",
                            "https://picsum.photos/640/480/?image=959",
                            "f2d57c9b-0f09-3295-c850-ae3407d63c31",
                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "fugit")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Show,
                    14590681.5205,
                    9365.9196,
                    0.6465,
                    true,
                    "dolorum quo explicabo",
                    true,
                    "est",
                new LayerFloorInfo("id"),
                [new Label(LabelPlacement.AboveStart,
                        "quo",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        2415397.1506,
                        8872.5134,
                        true,
                        new Dimension(436.7660),
                    new TextSymbol("commodi quia quisquam",
                        new MapColor(21, 151, 145),
                        new MapColor(91, 170, 197),
                            new Dimension(918.1012),
                        new MapFont(new Dimension(563.9096),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            125.2925,
                        new MapColor(22, 139, 8),
                        new MapColor(96, 161, 166),
                            2.2029,
                        HorizontalAlignment.Left,
                            true,
                            826.6312,
                            new Dimension(507.0631),
                            true),
                        true,
                        "ObjectID = 1"),
                new Label(LabelPlacement.BelowCenter,
                        "adipisci",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        35417723.7883,
                        29943.6625,
                        true,
                        new Dimension(567.2593),
                    new TextSymbol("dolore sint inventore",
                        new MapColor(69, 123, 188),
                        new MapColor(236, 181, 110),
                            new Dimension(745.3212),
                        new MapFont(new Dimension(697.9423),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            304.6331,
                        new MapColor(10, 67, 185),
                        new MapColor(56, 202, 49),
                            46.6870,
                        HorizontalAlignment.Right,
                            true,
                            248.1101,
                            new Dimension(41.4957),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("inventore quia cupiditate",
                        "asperiores",
                        ["impedit",
                            "et"],
                    [new FieldInfo("category",
                            "aut",
                            "sequi",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("password",
                            "soluta",
                            "doloremque",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("category",
                            "voluptatibus",
                            "ex",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("createdAt",
                            "sunt",
                            "soluta",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new FieldsPopupContent([new FieldInfo("phone",
                                "laudantium",
                                "possimus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Sum)],
                            "aut voluptas et architecto consequatur",
                            "velit aut culpa"),
                    new RelationshipPopupContent("consectetur et doloribus",
                            "sit maiores aliquam sequi ratione unde aut",
                            7,
                            "incidunt",
                        [new RelatedRecordsInfoFieldOrder("dolorum",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("sint",
                            OrderBy.Desc)],
                            5),
                    new RelationshipPopupContent("quo cupiditate culpa",
                            "aut consectetur assumenda voluptatem numquam labore iure",
                            8,
                            "ex",
                        [new RelatedRecordsInfoFieldOrder("animi",
                            OrderBy.Desc)],
                            8),
                    new RelationshipPopupContent("et quo quidem",
                            "quod eveniet officia non ut aut voluptate",
                            3,
                            "omnis",
                        [new RelatedRecordsInfoFieldOrder("eveniet",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("facilis",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("et",
                            OrderBy.Asc)],
                            1)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "avatar",
                            "dolor et et",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "avatar",
                            "aperiam consectetur necessitatibus",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("vitae aut assumenda",
                            "https://picsum.photos/640/480/?image=97",
                            "ddb81bea-86c9-2846-df93-0c3471188058",
                            () => { Console.WriteLine("culpa"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "veniam"),
                    new ActionToggle("beatae quis sunt",
                            "68ba8f66-a945-f364-994a-444435b43ffb",
                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "avatar",
                            "amet"),
                    new ActionButton("atque et suscipit",
                            "https://picsum.photos/640/480/?image=203",
                            "34257991-0d85-8daf-d601-afb2fe32d87c",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "et")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(386.4767,
                    TileInfoFormat.Png24,
                    true,
                [new LOD(7,
                        "sit",
                        75.5481,
                        1755336.9317),
                new LOD(7,
                        "quasi",
                        61.8577,
                        43088818.0860)],
                new Point(0.0347,
                        80.7136,
                        -6.1466,
                        71.1609,
                        409.0796,
                    new SpatialReference(9,
                            "beatae",
                            "est",
                            "commodi"),
                        true,
                        true,
                        377.6420),
                    [7,
                        9,
                        8],
                new SpatialReference(2,
                        "corrupti",
                        "est",
                        "ut"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2010, 3, 24, 10, 32, 32),
                    new DateTime(2022, 1, 19, 21, 55, 54));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
