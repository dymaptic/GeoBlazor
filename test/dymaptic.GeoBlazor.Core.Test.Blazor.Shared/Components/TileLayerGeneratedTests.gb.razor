@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("porro")"
                        BlendMode="@(BlendMode.Xor)"
                        Copyright="@("rem")"
                        Effect="@(new Effect("sed",
                            18150571.7042))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(11575465.4998)"
                        MinScale="@(35055.2139)"
                        Opacity="@(0.5270)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(765.5360)"
                        Resampling="@(true)"
                        TileServers="@(["quam"])"
                        Title="@("voluptas neque sint")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_NearInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2019, 11, 26, 22, 8, 43))"
                            End="@(new DateTime(2003, 11, 4, 5, 6, 6))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(696.1873)"
                            Format="@(TileInfoFormat.Png32)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(4,
                                    "sapiente",
                                    93.8279,
                                    557931.0997)])"
                            Origin="@(new Point(-176.5812,
                                    40.9328,
                                    -29.2481,
                                    38.7193,
                                    44.4829,
                                new SpatialReference(4,
                                        "et",
                                        "sed",
                                        "dolores"),
                                    true,
                                    true,
                                    630.6971))"
                            Size="@([6,
                                7])">
                            <SpatialReference 
                                Wkid="@(8)"
                                ImageCoordinateSystem="@("consequatur")"
                                Wkt="@("veniam")"
                                Wkt2="@("dicta")">
                            </SpatialReference>
                        </TileInfo>
                        <PortalItem />
                        <Extent 
                            Xmax="@(-33.1818)"
                            Xmin="@(-104.4319)"
                            Ymax="@(12.2891)"
                            Ymin="@(-85.3157)"
                            Zmax="@(501.2102)"
                            Zmin="@(917.0524)"
                            Mmax="@(67.8491)"
                            Mmin="@(102.6673)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(4)"
                                ImageCoordinateSystem="@("tempora")"
                                Wkt="@("qui")"
                                Wkt2="@("amet")">
                            </SpatialReference>
                        </Extent>
                        <Sublayer 
                            SublayerId="@(2)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(3406332.7520)"
                            MinScale="@(12544.2317)"
                            Opacity="@(0.0475)"
                            PopupEnabled="@(true)"
                            Title="@("cupiditate tempore repellat")"
                            Visible="@(true)"
                            DefinitionExpression="@("adipisci")"
                            FloorInfo="@(new LayerFloorInfo("ullam"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveAlong,
                                    "provident",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    42383131.4116,
                                    16296.5332,
                                    true,
                                    new Dimension(758.1178),
                                new TextSymbol("in architecto earum",
                                    new MapColor(245, 235, 16),
                                    new MapColor(230, 35, 175),
                                        new Dimension(171.2720),
                                    new MapFont(new Dimension(981.0133),
                                            "Courier New",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        798.4707,
                                    new MapColor(201, 49, 13),
                                    new MapColor(163, 204, 211),
                                        594.5750,
                                    HorizontalAlignment.Center,
                                        true,
                                        398.5762,
                                        new Dimension(545.5396),
                                        true),
                                    true,
                                    "Country = 'Canada'"),
                            new Label(LabelPlacement.CenterAfter,
                                    "ipsam",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    15685042.1499,
                                    32096.4144,
                                    true,
                                    new Dimension(104.1747),
                                new TextSymbol("rem velit qui",
                                    new MapColor(126, 65, 86),
                                    new MapColor(153, 100, 23),
                                        new Dimension(609.0980),
                                    new MapFont(new Dimension(306.0210),
                                            "Georgia",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        974.2298,
                                    new MapColor(166, 241, 139),
                                    new MapColor(15, 224, 214),
                                        542.0070,
                                    HorizontalAlignment.Right,
                                        true,
                                        765.6012,
                                        new Dimension(399.7095),
                                        true),
                                    true,
                                    "Province = 'Ontario'")])"
                            PopupTemplate="@(new PopupTemplate("modi ab accusantium",
                                    "non",
                                    ["officiis"],
                                [new FieldInfo("title",
                                        "libero",
                                        "quibusdam",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLeShortTime24),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new RelationshipPopupContent("atque ut velit",
                                        "qui rerum doloribus",
                                        3,
                                        "debitis",
                                    [new RelatedRecordsInfoFieldOrder("est",
                                        OrderBy.Asc)],
                                        5),
                                new TextPopupContent("veniam aperiam aliquam")],
                                [new ExpressionInfo("return $feature['FieldName'];",
                                        "title",
                                        "dolore non corrupti",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "comment",
                                        "quaerat fugiat tempore",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("molestias doloribus temporibus",
                                        "https://picsum.photos/640/480/?image=423",
                                        "29a81e89-5d04-9379-b3aa-0a87e2c72c48",
                                        () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                        "updatedAt",
                                        true,
                                        true,
                                        true,
                                        "quia")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.Quantile,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(207, 51, 153),
                                            new MapColor(234, 230, 248)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(253, 104, 188),
                                            new MapColor(7, 244, 179))]),
                                        644.2576,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(822.4254,
                                                462.9456),
                                        new AuthoringInfoField1ClassBreakInfos(582.5012,
                                                20.7878)],
                                            "cum",
                                            "sit",
                                            "amet"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(714.1654,
                                                124.9497),
                                        new AuthoringInfoField1ClassBreakInfos(585.8716,
                                                674.4626)],
                                            "fuga",
                                            "qui",
                                            "quisquam"),
                                        ["distinctio",
                                            "laborum"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "quo",
                                        true,
                                    LengthUnit.Yards,
                                        818.3446,
                                        386.2103,
                                        22.7213,
                                        60.6093),
                                new PictureFillSymbol("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1",
                                    new Dimension(113.9780),
                                    new Dimension(66.9970),
                                    new Dimension(236.9864),
                                    new Dimension(588.8638),
                                    -7.9873,
                                    -0.8365,
                                    new Outline(new MapColor(82, 42, 31),
                                        new Dimension(759.1957),
                                        SimpleLineSymbolStyle.ShortDash,
                                        Cap.Butt,
                                        Join.Miter,
                                        new LineSymbolMarker(new MapColor(251, 16, 90),
                                            LinePlacement.End,
                                            LineSymbolMarkerStyle.Arrow),
                                        672.3866),
                                    new MapColor(224, 206, 172)),
                                    "at",
                                    new DefaultSymbol(),
                                    "quam",
                                    "ipsum",
                                    "molestias",
                                    "quo",
                                new UniqueValueRendererLegendOptions("ea eaque illo"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("architecto",
                                        new TextSymbol("architecto enim qui",
                                            new MapColor(74, 163, 166),
                                            new MapColor(25, 68, 34),
                                                new Dimension(862.0893),
                                            new MapFont(new Dimension(914.8672),
                                                    "Helvetica",
                                                MapFontStyle.Normal,
                                                FontWeight.Bolder,
                                                TextDecoration.Underline),
                                                229.5137,
                                            new MapColor(197, 168, 47),
                                            new MapColor(66, 63, 175),
                                                27.8177,
                                            HorizontalAlignment.Right,
                                                true,
                                                154.5612,
                                                new Dimension(632.3972),
                                                true),
                                        [new UniqueValue("odio",
                                                "fugit",
                                                "eum")]),
                                    new UniqueValueClass("incidunt",
                                        new TextSymbol("quidem exercitationem dolore",
                                            new MapColor(154, 10, 135),
                                            new MapColor(237, 105, 130),
                                                new Dimension(296.2479),
                                            new MapFont(new Dimension(179.1463),
                                                    "Georgia",
                                                MapFontStyle.Oblique,
                                                FontWeight.Normal,
                                                TextDecoration.Underline),
                                                999.9766,
                                            new MapColor(36, 128, 24),
                                            new MapColor(15, 124, 75),
                                                936.0939,
                                            HorizontalAlignment.Left,
                                                true,
                                                40.1447,
                                                new Dimension(992.9928),
                                                true),
                                        [new UniqueValue("nihil",
                                                "sunt",
                                                "velit"),
                                        new UniqueValue("sit",
                                                "quidem",
                                                "sed")])],
                                        "saepe")],
                                [new UniqueValueInfo("voluptas",
                                    new TextSymbol("nihil qui sapiente",
                                        new MapColor(71, 147, 184),
                                        new MapColor(133, 3, 251),
                                            new Dimension(980.4440),
                                        new MapFont(new Dimension(687.0883),
                                                "Courier New",
                                            MapFontStyle.Italic,
                                            FontWeight.Lighter,
                                            TextDecoration.Underline),
                                            687.7421,
                                        new MapColor(108, 42, 249),
                                        new MapColor(248, 55, 115),
                                            70.2921,
                                        HorizontalAlignment.Center,
                                            true,
                                            683.6371,
                                            new Dimension(471.3565),
                                            true),
                                        "delectus"),
                                new UniqueValueInfo("porro",
                                    new TextSymbol("ab molestiae ut",
                                        new MapColor(76, 93, 228),
                                        new MapColor(240, 184, 28),
                                            new Dimension(668.5081),
                                        new MapFont(new Dimension(309.0169),
                                                "Times New Roman",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bolder,
                                            TextDecoration.Underline),
                                            185.0453,
                                        new MapColor(30, 129, 221),
                                        new MapColor(106, 40, 26),
                                            30.0297,
                                        HorizontalAlignment.Center,
                                            true,
                                            763.5549,
                                            new Dimension(274.2868),
                                            true),
                                        "saepe")],
                                    "sit",
                                    "quia dignissimos quibusdam"))"
                            Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(3)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(15290859.5805)"
                                MinScale="@(15137.8975)"
                                Opacity="@(0.7215)"
                                PopupEnabled="@(true)"
                                Title="@("dolore voluptatem voluptatem")"
                                Visible="@(true)"
                                DefinitionExpression="@("molestiae")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(4)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(27902803.0242)"
                                    MinScale="@(35789.1839)"
                                    Opacity="@(0.3288)"
                                    PopupEnabled="@(true)"
                                    Title="@("ut quo incidunt")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("praesentium")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(18600112.1739)"
                                        MinScale="@(16723.5278)"
                                        Opacity="@(0.4587)"
                                        PopupEnabled="@(true)"
                                        Title="@("dolore id dolorum")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("voluptates")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(6)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(14107057.9278)"
                                            MinScale="@(12774.8399)"
                                            Opacity="@(0.1171)"
                                            PopupEnabled="@(true)"
                                            Title="@("et odio vero")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("numquam")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(8)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(43553968.8940)"
                                                MinScale="@(11204.0301)"
                                                Opacity="@(0.4238)"
                                                PopupEnabled="@(true)"
                                                Title="@("quibusdam voluptates eaque")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("in")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(2)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(12090224.3635)"
                                                    MinScale="@(23388.7879)"
                                                    Opacity="@(0.2847)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("et corporis aut")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("in")"
                                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("dolorem nihil et")"
                                                        StringContent="@("consequatur")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("ratione")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("et eaque reprehenderit")"
                                                    StringContent="@("ab")"
                                                    OutFields="@(["odit",
                                                        "repellat"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new TextPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton("ab harum error",
                                                        "https://picsum.photos/640/480/?image=393",
                                                        "ee444ab8-a042-f9bc-842f-59883d4a1a28",
                                                        () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                                                        "updatedAt",
                                                        true,
                                                        true,
                                                        true,
                                                        "tempore"),
                                                        null])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AlwaysHorizontal)"
                                                    LabelExpression="@("asperiores")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(39363208.4671)"
                                                    MinScale="@(37656.4621)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(793.0136))"
                                                    Symbol="@(new TextSymbol("eos cupiditate sed"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("City = 'Toronto'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("inventore")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                    new AlgorithmicColorRamp(Algorithm.Hsv),
                                                        848.1255,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["quia"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "illum",
                                                        true,
                                                    LengthUnit.Inches,
                                                        781.8747,
                                                        316.6760,
                                                        783.0278,
                                                        464.2655))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("occaecati vitae dolor")"
                                                StringContent="@("id")"
                                                OutFields="@(["sit",
                                                    "consequatur"])"
                                                FieldInfos="@([new FieldInfo("name",
                                                        "eum",
                                                        "velit",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var),
                                                new FieldInfo("token",
                                                        "autem",
                                                        "facilis",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)])"
                                                Content="@([new RelationshipPopupContent("facilis et voluptatem",
                                                        "ea ab",
                                                        1,
                                                        "repellat",
                                                    [new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder()],
                                                        6),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "comment",
                                                        "et ex ut")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("ab occaecati nesciunt",
                                                    "https://picsum.photos/640/480/?image=740",
                                                    "cb0bd384-3b4f-8eba-7cfb-6e2b9c75e16c",
                                                    () => { Console.WriteLine("accusamus"); return Task.CompletedTask; },
                                                    "email",
                                                    true,
                                                    true,
                                                    true,
                                                    "consequatur"),
                                                    new ActionButton("et odit reiciendis",
                                                        "https://picsum.photos/640/480/?image=883",
                                                        "187a19ea-41ff-5b61-412c-65488c55996b",
                                                        () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                                        "group",
                                                        true,
                                                        true,
                                                        true,
                                                        "mollitia")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AlwaysHorizontal)"
                                                LabelExpression="@("incidunt")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(27404934.0563)"
                                                MinScale="@(18787.8795)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(215.6255))"
                                                Symbol="@(new TextSymbol("animi esse veritatis",
                                                    new MapColor(69, 18, 232),
                                                    new MapColor(51, 132, 241),
                                                        null,
                                                    new MapFont(),
                                                        326.6245,
                                                    new MapColor(201, 9, 79),
                                                    new MapColor(54, 151, 108),
                                                        94.9823,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        971.9851,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Phone = '555-555-5555'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("ut")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(91, 244, 112),
                                                    new MapColor(182, 121, 186)),
                                                    171.8508,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "rerum",
                                                        "ut",
                                                        "ullam"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "esse",
                                                        "itaque",
                                                        "et"),
                                                    ["qui",
                                                        "aliquam"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "est",
                                                    true,
                                                LengthUnit.Kilometers,
                                                    940.7252,
                                                    842.8827,
                                                    914.8947,
                                                    362.1163))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("iure sunt quam")"
                                            StringContent="@("corrupti")"
                                            OutFields="@(["accusamus"])"
                                            FieldInfos="@([new FieldInfo("createdAt",
                                                    "qui",
                                                    "provident",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev)])"
                                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "vero",
                                                        "ut et saepe")),
                                            new TextPopupContent("iure est est")])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                    "id",
                                                    "occaecati eos nesciunt",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "updatedAt",
                                                    "hic eaque eius",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("nulla fugit et",
                                                "https://picsum.photos/640/480/?image=676",
                                                "7423484d-5ab8-6bde-643f-40b9ae122530",
                                                () => { Console.WriteLine("labore"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "quasi"),
                                                new ActionButton("sunt quibusdam quo",
                                                    "https://picsum.photos/640/480/?image=273",
                                                    "d4cba351-9c95-f596-da16-801ac26ef323",
                                                    () => { Console.WriteLine("impedit"); return Task.CompletedTask; },
                                                    "createdAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "autem")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveAlong)"
                                            LabelExpression="@("est")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(32717124.3075)"
                                            MinScale="@(5745.9366)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(846.7410))"
                                            Symbol="@(new TextSymbol("ipsam quia et",
                                                new MapColor(39, 214, 148),
                                                new MapColor(79, 158, 111),
                                                    new Dimension(115.0599),
                                                new MapFont(new Dimension(103.8754),
                                                        "Helvetica",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Bold,
                                                    TextDecoration.Underline),
                                                    798.5745,
                                                new MapColor(14, 144, 12),
                                                new MapColor(252, 213, 92),
                                                    993.5134,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    348.5933,
                                                    new Dimension(342.0532),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Country = 'Canada'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("voluptatem")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(0, 79, 64),
                                                new MapColor(30, 50, 139)),
                                                928.1847,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(339.4909,
                                                        199.1289)],
                                                    "inventore",
                                                    "quo",
                                                    "ut"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(151.5482,
                                                        336.5268),
                                                new AuthoringInfoField1ClassBreakInfos(517.3824,
                                                        694.6718)],
                                                    "dicta",
                                                    "velit",
                                                    "quos"),
                                                ["eaque"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "perspiciatis",
                                                true,
                                            LengthUnit.Centimeters,
                                                248.5263,
                                                880.4931,
                                                908.0970,
                                                617.3319))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("tenetur nulla odio")"
                                        StringContent="@("et")"
                                        OutFields="@(["tempore"])"
                                        FieldInfos="@([new FieldInfo("createdAt",
                                                "ducimus",
                                                "velit",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Sum)])"
                                        Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                                    "illum",
                                                    "tenetur odio voluptatem"))])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "createdAt",
                                                "doloremque vel aut",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("cupiditate recusandae aut",
                                            "https://picsum.photos/640/480/?image=1082",
                                            "68f89fad-9f6e-8400-e5ac-bb9c92a31ea4",
                                            () => { Console.WriteLine("similique"); return Task.CompletedTask; },
                                            "createdAt",
                                            true,
                                            true,
                                            true,
                                            "reprehenderit"),
                                            new ActionButton("praesentium iusto dolorem",
                                                "https://picsum.photos/640/480/?image=1066",
                                                "ce1c4e5d-dc0a-2028-233d-81806ef10ef2",
                                                () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                                "status",
                                                true,
                                                true,
                                                true,
                                                "unde")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveAfter)"
                                        LabelExpression="@("doloribus")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(45036778.6228)"
                                        MinScale="@(36082.1319)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(654.4461))"
                                        Symbol="@(new TextSymbol("vero unde consequatur",
                                            new MapColor(155, 195, 95),
                                            new MapColor(69, 84, 253),
                                                new Dimension(477.3995),
                                            new MapFont(new Dimension(457.1066),
                                                    "Courier New",
                                                MapFontStyle.Italic,
                                                FontWeight.Lighter,
                                                TextDecoration.Underline),
                                                310.1539,
                                            new MapColor(41, 239, 173),
                                            new MapColor(106, 227, 125),
                                                512.2735,
                                            HorizontalAlignment.Left,
                                                true,
                                                184.6636,
                                                new Dimension(151.5392),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("ObjectID = 1")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("reprehenderit")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(164, 235, 95),
                                                new MapColor(71, 139, 32))]),
                                            429.2183,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(868.5466,
                                                    378.9126)],
                                                "qui",
                                                "inventore",
                                                "sapiente"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(566.1217,
                                                    72.3925),
                                            new AuthoringInfoField1ClassBreakInfos(999.7362,
                                                    942.0053)],
                                                "et",
                                                "similique",
                                                "laboriosam"),
                                            ["ipsam",
                                                "soluta"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "hic",
                                            true,
                                        LengthUnit.Centimeters,
                                            787.3726,
                                            783.1053,
                                            461.5504,
                                            599.9863))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("repellat voluptates rerum")"
                                    StringContent="@("quia")"
                                    OutFields="@(["doloribus",
                                        "ut"])"
                                    FieldInfos="@([new FieldInfo("group",
                                            "quia",
                                            "sed",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLongTime),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("name",
                                            "eum",
                                            "iusto",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortDate),
                                            true,
                                            true,
                                        StatisticType.Stddev)])"
                                    Content="@([new MediaPopupContent("sit error est",
                                            "consectetur quia",
                                        [new ColumnChartMediaInfo("repellat eos illo",
                                                "sint",
                                                "iste porro in",
                                            new ChartMediaInfoValue(["consectetur"],
                                                    "labore",
                                                    "ducimus",
                                                [new ChartMediaInfoValueSeries("password",
                                                        "sit",
                                                        501.1548)],
                                                [new MapColor(250, 95, 86),
                                                new MapColor(49, 230, 0)]))],
                                            3)])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                            "avatar",
                                            "dolores rerum officia",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "email",
                                            "temporibus cupiditate omnis",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("consequatur dolor corrupti",
                                        "https://picsum.photos/640/480/?image=506",
                                        "8356ba39-32c0-9f21-5549-23790d05de3f",
                                        () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                        "avatar",
                                        true,
                                        true,
                                        true,
                                        "corporis"),
                                        new ActionButton("eligendi sit quis",
                                            "https://picsum.photos/640/480/?image=205",
                                            "17584425-baae-5cbe-b339-5a6bdb2b460d",
                                            () => { Console.WriteLine("dolorem"); return Task.CompletedTask; },
                                            "phone",
                                            true,
                                            true,
                                            true,
                                            "et")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveAlong)"
                                    LabelExpression="@("error")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(32651679.5611)"
                                    MinScale="@(26223.6049)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(152.0494))"
                                    Symbol="@(new TextSymbol("corporis commodi nihil",
                                        new MapColor(81, 244, 177),
                                        new MapColor(207, 240, 149),
                                            new Dimension(474.1517),
                                        new MapFont(new Dimension(750.3158),
                                                "Times New Roman",
                                            MapFontStyle.Normal,
                                            FontWeight.Bolder,
                                            TextDecoration.Underline),
                                            402.2660,
                                        new MapColor(108, 171, 161),
                                        new MapColor(210, 72, 50),
                                            742.4712,
                                        HorizontalAlignment.Center,
                                            true,
                                            638.6253,
                                            new Dimension(443.4029),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("ObjectID = 1")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("ut")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(82.7656,
                223.1447,
                698.0478,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(379.7598,
                444.1153,
                269.9271);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.Hue;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-21.0984,
                    123.5793,
                    -89.5032,
                    -68.0512,
                    474.0478,
                    783.9489,
                    575.2079,
                    404.0897,
                new SpatialReference(1,
                        "nulla",
                        "perspiciatis",
                        "a"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    20550740.8821,
                    2814.1586,
                    0.2488,
                    true,
                    "saepe recusandae occaecati",
                    true,
                    "itaque",
                new LayerFloorInfo("repellendus"),
                [new Label(LabelPlacement.CenterStart,
                        "optio",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        46172458.9610,
                        8459.9907,
                        true,
                        new Dimension(639.0407),
                    new TextSymbol("atque ut eligendi",
                        new MapColor(240, 13, 8),
                        new MapColor(119, 32, 7),
                            new Dimension(480.0069),
                        new MapFont(new Dimension(862.1663),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            404.3887,
                        new MapColor(87, 207, 26),
                        new MapColor(121, 181, 105),
                            894.7146,
                        HorizontalAlignment.Center,
                            true,
                            11.3188,
                            new Dimension(836.8763),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.CenterStart,
                        "blanditiis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        15094353.3916,
                        44842.3866,
                        true,
                        new Dimension(372.9244),
                    new TextSymbol("est et reprehenderit",
                        new MapColor(166, 10, 74),
                        new MapColor(85, 49, 23),
                            new Dimension(845.8636),
                        new MapFont(new Dimension(927.6331),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            745.7614,
                        new MapColor(21, 201, 117),
                        new MapColor(127, 213, 145),
                            260.6380,
                        HorizontalAlignment.Left,
                            true,
                            12.7554,
                            new Dimension(902.3828),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("debitis praesentium ad",
                        "nemo",
                        ["libero",
                            "et"],
                    [new FieldInfo("status",
                            "aperiam",
                            "inventore",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("password",
                            "perspiciatis",
                            "tempore",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Var)],
                    [new TextPopupContent("iure enim sequi"),
                    new RelationshipPopupContent("natus sint adipisci",
                            "ea quo reprehenderit",
                            8,
                            "excepturi",
                        [new RelatedRecordsInfoFieldOrder("corporis",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("et",
                            OrderBy.Asc)],
                            3)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "sunt qui ipsa",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "password",
                            "reprehenderit voluptatem aliquid",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("veritatis consequuntur dignissimos",
                            "https://picsum.photos/640/480/?image=831",
                            "83937e83-4e20-7cec-0933-05c8971d2222",
                            () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "reiciendis")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(759.8456,
                    TileInfoFormat.Mixed,
                    true,
                [new LOD(4,
                        "nemo",
                        68.1177,
                        19789852.4911),
                new LOD(6,
                        "aut",
                        94.6946,
                        7113998.2517)],
                new Point(-146.0758,
                        -77.8378,
                        -130.2594,
                        46.7145,
                        622.4589,
                    new SpatialReference(4,
                            "ratione",
                            "maxime",
                            "asperiores"),
                        true,
                        true,
                        511.5159),
                    [8],
                new SpatialReference(2,
                        "eaque",
                        "sequi",
                        "voluptatum"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2018, 6, 2, 22, 29, 38),
                    new DateTime(2002, 4, 5, 2, 16, 37));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
