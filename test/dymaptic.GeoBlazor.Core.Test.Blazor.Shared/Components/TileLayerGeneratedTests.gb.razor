@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("autem")"
                        BlendMode="@(BlendMode.Plus)"
                        Copyright="@("ipsam")"
                        Effect="@(new Effect("beatae",
                            40302245.4397))"
                        FullExtent="@(new Extent(124.8954,
                                -55.5268,
                                -57.5106,
                                -41.8033,
                                181.1098,
                                62.9161,
                                619.5388,
                                92.0238,
                            new SpatialReference(5,
                                    "et",
                                    "et",
                                    "omnis"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(19379974.6444)"
                        MinScale="@(28700.7760)"
                        Opacity="@(0.3878)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(220.0057)"
                        Resampling="@(true)"
                        TileServers="@(["quasi",
                            "at",
                            "quaerat"])"
                        Title="@("voluptas ut cumque")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_NearInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2014, 11, 5, 16, 42, 40))"
                            End="@(new DateTime(2015, 1, 4, 17, 15, 16))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(793.2699)"
                            Format="@(TileInfoFormat.Ps)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(5,
                                    "facilis",
                                    99.5497,
                                    23526372.4880),
                            new LOD(4,
                                    "hic",
                                    57.6755,
                                    26934730.6777)])"
                            Origin="@(new Point(35.9751,
                                    -5.2975,
                                    150.1175,
                                    -43.3219,
                                    578.1238,
                                new SpatialReference(1,
                                        "quod",
                                        "quod",
                                        "incidunt"),
                                    true,
                                    true,
                                    803.1026))"
                            Size="@([8,
                                9,
                                6])"
                            SpatialReference="@(new SpatialReference(5,
                                    "illo",
                                    "rerum",
                                    "ea"))">
                        </TileInfo>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("non")"
                            ApiKey="@("ducimus")"
                            AvgRating="@(170.5635)"
                            Categories="@(["vitae",
                                "esse",
                                "totam",
                                "esse"])"
                            Created="@(new DateTime(2000, 2, 16, 4, 22, 48))"
                            Culture="@("quia")"
                            Description="@("non et in rerum atque consequatur quaerat")"
                            Extent="@(new Extent(-108.0049,
                                    -102.0660,
                                    -13.3280,
                                    -51.9843,
                                    41.4998,
                                    257.9622,
                                    215.2665,
                                    990.1298,
                                new SpatialReference(8,
                                        "ut",
                                        "non",
                                        "quaerat"),
                                    true,
                                    true))"
                            GroupCategories="@(["facere",
                                "veniam",
                                "optio"])"
                            LicenseInfo="@("asperiores")"
                            Modified="@(new DateTime(2014, 11, 6, 10, 21, 16))"
                            Name="@("status")"
                            NumComments="@(351.8325)"
                            NumRatings="@(179.5838)"
                            NumViews="@(99.5746)"
                            Owner="@("Berta Cummings")"
                            OwnerFolder="@("Stuart Buckridge")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Anonymous,
                                    ["et",
                                        "eum"],
                                    "quae",
                                    "in",
                                    "ipsam",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("aut")"
                            Screenshots="@(["aperiam",
                                "consequuntur",
                                "et"])"
                            Size="@(2)"
                            Snippet="@("qui")"
                            Tags="@(["voluptatem",
                                "temporibus",
                                "maxime",
                                "suscipit"])"
                            Title="@("id qui aut")"
                            TypeKeywords="@(["doloribus",
                                "quo",
                                "cupiditate"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(1)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(956526.9711)"
                            MinScale="@(924.2168)"
                            Opacity="@(0.4219)"
                            PopupEnabled="@(true)"
                            Title="@("facilis voluptatibus et")"
                            Visible="@(true)"
                            DefinitionExpression="@("illum")"
                            FloorInfo="@(new LayerFloorInfo("eum"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowAlong,
                                    "totam",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    47827139.2186,
                                    38133.4929,
                                    true,
                                    new Dimension(103.5240),
                                new TextSymbol("ut omnis ut",
                                    new MapColor(68, 15, 64),
                                    new MapColor(42, 245, 100),
                                        new Dimension(113.2434),
                                    new MapFont(new Dimension(945.5470),
                                            "Times New Roman",
                                        MapFontStyle.Italic,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        791.4099,
                                    new MapColor(131, 214, 82),
                                    new MapColor(202, 163, 9),
                                        517.7479,
                                    HorizontalAlignment.Center,
                                        true,
                                        221.4942,
                                        new Dimension(956.3948),
                                        true),
                                    true,
                                    "Street = '123 Main St.'"),
                            new Label(LabelPlacement.AlwaysHorizontal,
                                    "et",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    29624387.4998,
                                    24988.1964,
                                    true,
                                    new Dimension(706.4274),
                                new TextSymbol("veniam laborum voluptas",
                                    new MapColor(37, 219, 73),
                                    new MapColor(207, 214, 187),
                                        new Dimension(172.8319),
                                    new MapFont(new Dimension(991.7232),
                                            "Garamond",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.Underline),
                                        39.1365,
                                    new MapColor(93, 31, 218),
                                    new MapColor(23, 132, 174),
                                        616.0540,
                                    HorizontalAlignment.Left,
                                        true,
                                        612.9367,
                                        new Dimension(630.2753),
                                        true),
                                    true,
                                    "1 = 1"),
                            new Label(LabelPlacement.BelowLeft,
                                    "asperiores",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    43581326.1542,
                                    10687.0601,
                                    true,
                                    new Dimension(420.6356),
                                new TextSymbol("doloremque modi tempore",
                                    new MapColor(164, 3, 124),
                                    new MapColor(105, 248, 207),
                                        new Dimension(296.0415),
                                    new MapFont(new Dimension(546.1091),
                                            "Helvetica",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        568.2735,
                                    new MapColor(54, 41, 230),
                                    new MapColor(154, 238, 32),
                                        236.2248,
                                    HorizontalAlignment.Center,
                                        true,
                                        284.7033,
                                        new Dimension(429.9698),
                                        true),
                                    true,
                                    "ObjectID = 1")])"
                            PopupTemplate="@(new PopupTemplate("natus illum libero",
                                    "ut",
                                    ["numquam",
                                        "maxime",
                                        "velit"],
                                [new FieldInfo("name",
                                        "sed",
                                        "hic",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.ShortDateLeShortTime),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("token",
                                        "ea",
                                        "iste",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("createdAt",
                                        "labore",
                                        "ut",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "alias",
                                            "sed autem aliquam")),
                                new MediaPopupContent("aspernatur reprehenderit sit",
                                        "voluptatem vitae unde earum ab",
                                    [new ImageMediaInfo("quo ratione distinctio",
                                            "vero",
                                            "animi et dolor",
                                        new ImageMediaInfoValue("https://douglas.name",
                                                "http://karine.name"),
                                            800.3943),
                                    new PieChartMediaInfo("et repellendus ipsam",
                                            "odio",
                                            "explicabo omnis libero",
                                        new ChartMediaInfoValue(["ut",
                                                "esse"],
                                                "expedita",
                                                "et",
                                            [new ChartMediaInfoValueSeries("createdAt",
                                                    "quo",
                                                    15.4980),
                                            new ChartMediaInfoValueSeries("avatar",
                                                    "eius",
                                                    754.5789),
                                            new ChartMediaInfoValueSeries("password",
                                                    "fugit",
                                                    46.2548),
                                            new ChartMediaInfoValueSeries("name",
                                                    "animi",
                                                    95.6130)],
                                            [new MapColor(146, 92, 24),
                                            new MapColor(221, 55, 163),
                                            new MapColor(74, 35, 164),
                                            new MapColor(58, 44, 70)]))],
                                        3),
                                new FieldsPopupContent([new FieldInfo("id",
                                            "facilis",
                                            "vero",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortDateLeLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("category",
                                            "aut",
                                            "quia",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("createdAt",
                                            "autem",
                                            "quia",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Avg),
                                    new FieldInfo("title",
                                            "molestias",
                                            "facere",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.DayShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Avg)],
                                        "vitae quis tempore minus saepe incidunt qui",
                                        "repellendus incidunt numquam"),
                                new AttachmentsPopupContent("possimus nam suscipit",
                                        "non occaecati nostrum velit sunt magnam praesentium",
                                        AttachmentsPopupContentDisplayType.Preview)],
                                [new ExpressionInfo("return Date();",
                                        "id",
                                        "vel harum iste",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("expedita eaque est",
                                        "https://picsum.photos/640/480/?image=910",
                                        "f734b923-248d-d643-7a8d-64d2b462c4f9",
                                        () => { Console.WriteLine("delectus"); return Task.CompletedTask; },
                                        "password",
                                        true,
                                        true,
                                        true,
                                        "omnis"),
                                new ActionToggle("perferendis consequuntur maxime",
                                        "d1759667-2eed-3741-9cd3-e8081c48890a",
                                        () => { Console.WriteLine("recusandae"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "email",
                                        "in"),
                                new ActionButton("recusandae dolores inventore",
                                        "https://picsum.photos/640/480/?image=993",
                                        "ef7f862e-08e7-3a6e-ca83-e6a92a7ee553",
                                        () => { Console.WriteLine("quo"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "qui")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("aliquid impedit non",
                                    new MapColor(38, 218, 221),
                                    new MapColor(20, 242, 214),
                                        new Dimension(972.5044),
                                    new MapFont(new Dimension(626.6670),
                                            "Garamond",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        977.9199,
                                    new MapColor(61, 82, 155),
                                    new MapColor(154, 166, 131),
                                        669.2538,
                                    HorizontalAlignment.Center,
                                        true,
                                        634.0616,
                                        new Dimension(753.6132),
                                        true),
                                    "alias",
                                [new ColorVariable("animi",
                                        "doloremque",
                                    [new ColorStop(248.2193,
                                        new MapColor(17, 105, 12),
                                            "ullam"),
                                    new ColorStop(371.1172,
                                        new MapColor(135, 12, 100),
                                            "commodi"),
                                    new ColorStop(59.7504,
                                        new MapColor(252, 17, 29),
                                            "laudantium"),
                                    new ColorStop(777.3566,
                                        new MapColor(248, 211, 122),
                                            "qui")],
                                    new VisualVariableLegendOptions(true,
                                            "pariatur nemo consectetur"),
                                        "consequatur",
                                        "et et numquam")],
                                new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(173, 235, 178),
                                            new MapColor(87, 109, 2)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(218, 99, 254),
                                            new MapColor(195, 247, 38)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(243, 154, 122),
                                            new MapColor(51, 66, 246)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(83, 205, 66),
                                            new MapColor(50, 49, 199))]),
                                        566.8179,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(431.2485,
                                                712.9095)],
                                            "earum",
                                            "et",
                                            "optio"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(613.7373,
                                                352.9604)],
                                            "dolores",
                                            "eligendi",
                                            "voluptate"),
                                        ["error",
                                            "fugit",
                                            "velit",
                                            "repellat"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "est",
                                        true,
                                    LengthUnit.Miles,
                                        867.3368,
                                        427.8063,
                                        574.9212,
                                        166.1522)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(3)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(38659033.0660)"
                                MinScale="@(15912.9651)"
                                Opacity="@(0.7260)"
                                PopupEnabled="@(true)"
                                Title="@("voluptatem aut distinctio")"
                                Visible="@(true)"
                                DefinitionExpression="@("optio")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(1)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(4633936.2558)"
                                    MinScale="@(25039.9056)"
                                    Opacity="@(0.1637)"
                                    PopupEnabled="@(true)"
                                    Title="@("odio velit qui")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("repudiandae")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(8)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(4691345.2352)"
                                        MinScale="@(30902.4434)"
                                        Opacity="@(0.2802)"
                                        PopupEnabled="@(true)"
                                        Title="@("sit repellat et")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("exercitationem")"
                                        Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(9)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(47533315.8699)"
                                            MinScale="@(13271.6002)"
                                            Opacity="@(0.1114)"
                                            PopupEnabled="@(true)"
                                            Title="@("ratione cum reprehenderit")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("amet")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(5)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(26008464.8519)"
                                                MinScale="@(18402.3158)"
                                                Opacity="@(0.9610)"
                                                PopupEnabled="@(true)"
                                                Title="@("minima voluptas est")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("voluptatum")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(6)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(5032449.1859)"
                                                    MinScale="@(35590.9648)"
                                                    Opacity="@(0.8443)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("perspiciatis illum voluptas")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("hic")"
                                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("voluptatum repudiandae minus")"
                                                        StringContent="@("beatae")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("voluptates")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("aliquam excepturi a")"
                                                    StringContent="@("est")"
                                                    OutFields="@(["repellat",
                                                        "autem"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new MediaPopupContent(),
                                                    new RelationshipPopupContent(),
                                                    new TextPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "99a24585-b591-954c-0fe7-f37994b5ea89",
                                                            () => { Console.WriteLine("repudiandae"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowLeft)"
                                                    LabelExpression="@("consequatur")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(20362012.7513)"
                                                    MinScale="@(40709.6006)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(366.6730))"
                                                    Symbol="@(new TextSymbol("doloribus quod magnam"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Province = 'Ontario'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("nisi")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                    new MultipartColorRamp(),
                                                        499.1541,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["est",
                                                            "facere",
                                                            "a",
                                                            "sit"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "quae",
                                                        true,
                                                    LengthUnit.Inches,
                                                        211.1414,
                                                        143.4543,
                                                        312.2075,
                                                        603.6717))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("nam et ducimus")"
                                                StringContent="@("consectetur")"
                                                OutFields="@(["eius",
                                                    "quia"])"
                                                FieldInfos="@([new FieldInfo("comment",
                                                        "porro",
                                                        "tempore",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var),
                                                new FieldInfo("group",
                                                        "laborum",
                                                        "quos",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("createdAt",
                                                        "quod",
                                                        "similique",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)])"
                                                Content="@([new RelationshipPopupContent("ea ex doloribus",
                                                        "aut illo eaque qui fugit in voluptatibus",
                                                        6,
                                                        "voluptatem",
                                                    [new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder(),
                                                    new RelatedRecordsInfoFieldOrder()],
                                                        8)])"
                                                ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                        "phone",
                                                        "veritatis optio perferendis")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("illo aut voluptatibus",
                                                        "https://picsum.photos/640/480/?image=496",
                                                        "2e19aa37-0f03-5549-87b7-38b409fa0114",
                                                        () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                                        "avatar",
                                                        true,
                                                        true,
                                                        true,
                                                        "ullam"),
                                                new ActionToggle("iste ipsam quia",
                                                        "fc9b96bf-b51c-c4b7-2890-b697886b671f",
                                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "phone",
                                                        "dolorem"),
                                                new ActionButton("earum accusantium tempore",
                                                        "https://picsum.photos/640/480/?image=139",
                                                        "4e3f9e42-38f0-29cf-c79e-18b33f7221bc",
                                                        () => { Console.WriteLine("unde"); return Task.CompletedTask; },
                                                        "id",
                                                        true,
                                                        true,
                                                        true,
                                                        "officiis"),
                                                new ActionToggle("aut qui minima",
                                                        "f114b5df-15af-5d22-4305-0048b001ee90",
                                                        () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "status",
                                                        "nemo")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowStart)"
                                                LabelExpression="@("eaque")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(36511222.0605)"
                                                MinScale="@(26416.6852)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(701.5534))"
                                                Symbol="@(new TextSymbol("et necessitatibus illo",
                                                    new MapColor(211, 98, 47),
                                                    new MapColor(115, 92, 249),
                                                        null,
                                                    new MapFont(),
                                                        869.8827,
                                                    new MapColor(116, 177, 216),
                                                    new MapColor(158, 52, 114),
                                                        257.8929,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        433.2657,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("ObjectID = 1")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("maxime")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab)]),
                                                    754.1009,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "unde",
                                                        "sed",
                                                        "quo"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "maiores",
                                                        "animi",
                                                        "sint"),
                                                    ["quia",
                                                        "veniam"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "blanditiis",
                                                    true,
                                                LengthUnit.Centimeters,
                                                    329.6809,
                                                    588.9425,
                                                    276.1055,
                                                    207.6005))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("distinctio voluptatum nostrum")"
                                            StringContent="@("consequatur")"
                                            OutFields="@(["harum",
                                                "eos",
                                                "autem"])"
                                            FieldInfos="@([new FieldInfo("id",
                                                    "dolorem",
                                                    "saepe",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev)])"
                                            Content="@([new RelationshipPopupContent("fuga neque maxime",
                                                    "dolores totam quo ipsam architecto culpa",
                                                    4,
                                                    "et",
                                                [new RelatedRecordsInfoFieldOrder("id",
                                                    OrderBy.Desc)],
                                                    7),
                                            new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                        "magnam",
                                                        "quibusdam vel architecto"))])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "createdAt",
                                                    "nesciunt praesentium nihil",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "name",
                                                    "est sint laudantium",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "updatedAt",
                                                    "eum animi repellat",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "updatedAt",
                                                    "debitis laudantium velit",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("aut placeat quia",
                                                    "https://picsum.photos/640/480/?image=212",
                                                    "057ba6dc-c36e-ce3f-12bc-73174d9d4c2c",
                                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                    "password",
                                                    true,
                                                    true,
                                                    true,
                                                    "voluptas"),
                                            new ActionToggle("quam quam sint",
                                                    "6ac17878-2625-d6f8-59ac-95cbfa221362",
                                                    () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "createdAt",
                                                    "beatae"),
                                            new ActionToggle("ipsam id aliquid",
                                                    "b1a944ff-fc4a-4c55-fb27-16787ccb1530",
                                                    () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "token",
                                                    "nesciunt")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterEnd)"
                                            LabelExpression="@("deleniti")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(37935327.2465)"
                                            MinScale="@(46295.3101)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(871.1763))"
                                            Symbol="@(new TextSymbol("vero iusto nihil",
                                                new MapColor(172, 246, 173),
                                                new MapColor(35, 96, 204),
                                                    new Dimension(708.1918),
                                                new MapFont(new Dimension(309.5883),
                                                        "Bookman",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Lighter,
                                                    TextDecoration.LineThrough),
                                                    239.1580,
                                                new MapColor(186, 141, 131),
                                                new MapColor(145, 33, 173),
                                                    67.9736,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    779.8555,
                                                    new Dimension(369.1873),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Name = 'John Doe'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("voluptatibus")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(161, 7, 52),
                                                new MapColor(177, 129, 250)),
                                                183.3174,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(454.0013,
                                                        61.5854),
                                                new AuthoringInfoField1ClassBreakInfos(749.7480,
                                                        337.1038),
                                                new AuthoringInfoField1ClassBreakInfos(41.8242,
                                                        382.0775),
                                                new AuthoringInfoField1ClassBreakInfos(984.2765,
                                                        886.5522)],
                                                    "consequatur",
                                                    "quisquam",
                                                    "atque"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(385.3881,
                                                        125.0854),
                                                new AuthoringInfoField1ClassBreakInfos(161.9340,
                                                        59.6208),
                                                new AuthoringInfoField1ClassBreakInfos(707.4461,
                                                        239.2023),
                                                new AuthoringInfoField1ClassBreakInfos(978.6698,
                                                        877.4514)],
                                                    "sit",
                                                    "at",
                                                    "est"),
                                                ["recusandae",
                                                    "quibusdam",
                                                    "autem"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "illum",
                                                true,
                                            LengthUnit.Yards,
                                                458.7828,
                                                544.0724,
                                                306.6610,
                                                5.7681))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("voluptatem illum consequatur")"
                                        StringContent="@("excepturi")"
                                        OutFields="@(["enim",
                                            "cum"])"
                                        FieldInfos="@([new FieldInfo("phone",
                                                "occaecati",
                                                "et",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongMonthDayYear),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("updatedAt",
                                                "maiores",
                                                "animi",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("updatedAt",
                                                "et",
                                                "libero",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("group",
                                                "eum",
                                                "cupiditate",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.Year),
                                                true,
                                                true,
                                            StatisticType.Sum)])"
                                        Content="@([new FieldsPopupContent([new FieldInfo("id",
                                                    "quas",
                                                    "illo",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.ShortDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("id",
                                                    "dolores",
                                                    "et",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Count)],
                                                "ut ut et maiores",
                                                "dicta esse explicabo"),
                                        new MediaPopupContent("qui accusantium facilis",
                                                "dignissimos minima officia vel ad dolores laudantium",
                                            [new ColumnChartMediaInfo("maxime molestiae quia",
                                                    "nihil",
                                                    "accusamus et tempora",
                                                new ChartMediaInfoValue(["in",
                                                        "nihil",
                                                        "aut"],
                                                        "id",
                                                        "hic",
                                                    [new ChartMediaInfoValueSeries()],
                                                    [new MapColor(27, 62, 7),
                                                    new MapColor(53, 199, 32)])),
                                            new ColumnChartMediaInfo("maiores et placeat",
                                                    "excepturi",
                                                    "ipsam fugit fuga",
                                                new ChartMediaInfoValue(["consequatur",
                                                        "ipsam",
                                                        "id"],
                                                        "non",
                                                        "qui",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(128, 126, 205),
                                                    new MapColor(143, 149, 9)])),
                                            new BarChartMediaInfo("vitae ab quasi",
                                                    "repudiandae",
                                                    "voluptatem neque eum",
                                                new ChartMediaInfoValue(["doloribus",
                                                        "corrupti"],
                                                        "assumenda",
                                                        "dolores",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(14, 225, 192)])),
                                            new ImageMediaInfo("aut nobis corporis",
                                                    "ab",
                                                    "harum aspernatur et",
                                                new ImageMediaInfoValue("https://ceasar.biz",
                                                        "https://ernestina.info"),
                                                    220.8608)],
                                                7)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                "email",
                                                "voluptas illo et",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "password",
                                                "voluptatem quia in",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("soluta ea consequatur",
                                                "eaabe3e2-253d-ab4c-bb35-32be8edde479",
                                                () => { Console.WriteLine("maiores"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "title",
                                                "nisi")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterAfter)"
                                        LabelExpression="@("sed")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(11202968.7313)"
                                        MinScale="@(24719.8143)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(557.2477))"
                                        Symbol="@(new TextSymbol("similique facilis minima",
                                            new MapColor(192, 236, 114),
                                            new MapColor(34, 208, 133),
                                                new Dimension(347.9961),
                                            new MapFont(new Dimension(810.0501),
                                                    "Verdana",
                                                MapFontStyle.Italic,
                                                FontWeight.Bold,
                                                TextDecoration.Underline),
                                                107.3829,
                                            new MapColor(108, 145, 171),
                                            new MapColor(94, 220, 82),
                                                900.0740,
                                            HorizontalAlignment.Left,
                                                true,
                                                758.6952,
                                                new Dimension(127.7643),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Province = 'Ontario'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("aut")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(75, 132, 180),
                                            new MapColor(113, 6, 130)),
                                            547.9266,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(332.4020,
                                                    720.0592),
                                            new AuthoringInfoField1ClassBreakInfos(413.2552,
                                                    257.0438),
                                            new AuthoringInfoField1ClassBreakInfos(485.6408,
                                                    260.6667),
                                            new AuthoringInfoField1ClassBreakInfos(504.1896,
                                                    722.9718)],
                                                "perferendis",
                                                "quos",
                                                "exercitationem"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(612.8600,
                                                    375.7617),
                                            new AuthoringInfoField1ClassBreakInfos(506.5303,
                                                    413.0013),
                                            new AuthoringInfoField1ClassBreakInfos(527.7538,
                                                    618.9213),
                                            new AuthoringInfoField1ClassBreakInfos(384.4203,
                                                    40.5474)],
                                                "earum",
                                                "molestiae",
                                                "repellat"),
                                            ["perferendis",
                                                "error"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "aliquam",
                                            true,
                                        LengthUnit.Inches,
                                            543.2517,
                                            299.0655,
                                            320.4387,
                                            543.7497))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("pariatur ad excepturi")"
                                    StringContent="@("ipsam")"
                                    OutFields="@(["quia",
                                        "vero",
                                        "adipisci"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "non",
                                            "fugiat",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Count)])"
                                    Content="@([new FieldsPopupContent([new FieldInfo("status",
                                                "amet",
                                                "non",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("phone",
                                                "animi",
                                                "ullam",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("updatedAt",
                                                "placeat",
                                                "illum",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.ShortDateLeLongTime),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                            "qui ab quibusdam similique",
                                            "magni quibusdam ipsum"),
                                    new FieldsPopupContent([new FieldInfo("createdAt",
                                                "repellendus",
                                                "non",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("id",
                                                "eum",
                                                "error",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Max)],
                                            "voluptatem qui amet unde quos",
                                            "a dicta et")])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "title",
                                            "doloribus cupiditate asperiores",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "status",
                                            "quaerat ipsa quam",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "avatar",
                                            "excepturi sapiente aliquid",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("facere nulla sed",
                                            "6f6f3df7-005f-a086-f055-6b70746f2b32",
                                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "phone",
                                            "similique"),
                                    new ActionButton("atque molestiae quisquam",
                                            "https://picsum.photos/640/480/?image=375",
                                            "ac998c56-92a8-f682-1a52-8724ec535d55",
                                            () => { Console.WriteLine("assumenda"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "sed"),
                                    new ActionButton("quo perferendis esse",
                                            "https://picsum.photos/640/480/?image=144",
                                            "6314423e-1ded-6bce-ab4c-43960d032588",
                                            () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                                            "status",
                                            true,
                                            true,
                                            true,
                                            "sit")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.BelowLeft)"
                                    LabelExpression="@("aut")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(7899901.8542)"
                                    MinScale="@(29283.5576)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(314.7801))"
                                    Symbol="@(new TextSymbol("eum dolorem dolorum",
                                        new MapColor(245, 139, 222),
                                        new MapColor(170, 37, 43),
                                            new Dimension(677.7731),
                                        new MapFont(new Dimension(545.8896),
                                                "Verdana",
                                            MapFontStyle.Italic,
                                            FontWeight.Bolder,
                                            TextDecoration.Underline),
                                            158.3804,
                                        new MapColor(131, 82, 249),
                                        new MapColor(77, 136, 171),
                                            951.4788,
                                        HorizontalAlignment.Left,
                                            true,
                                            179.9471,
                                            new Dimension(429.6187),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Phone = '555-555-5555'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("voluptas")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(856.5506,
                599.5379,
                353.6018,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(4);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(398.4085,
                618.7453,
                192.1813);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.Screen;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-174.7280,
                    -113.4755,
                    40.3715,
                    -17.0733,
                    142.2377,
                    821.7283,
                    273.2176,
                    968.7922,
                new SpatialReference(9,
                        "omnis",
                        "optio",
                        "impedit"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Shared,
                    "repudiandae",
                    "voluptas",
                    619.1872,
                    ["ea",
                        "asperiores"],
                    new DateTime(2007, 4, 17, 5, 23, 29),
                    "porro",
                    "quia voluptatem consequuntur nostrum dolorem atque architecto",
                new Extent(176.3233,
                        56.6902,
                        59.3508,
                        -1.4739,
                        871.7693,
                        982.2775,
                        263.4034,
                        579.8096,
                    new SpatialReference(9,
                            "qui",
                            "non",
                            "incidunt"),
                        true,
                        true),
                    ["ut",
                        "id"],
                    "laudantium",
                    new DateTime(2023, 2, 14, 21, 21, 33),
                    "title",
                    437.5031);
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    13859112.1772,
                    31739.3952,
                    0.0890,
                    true,
                    "minima rerum omnis",
                    true,
                    "voluptatum",
                new LayerFloorInfo("itaque"),
                [new Label(LabelPlacement.BelowCenter,
                        "sit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        34149481.9739,
                        26225.0598,
                        true,
                        new Dimension(315.8022),
                    new TextSymbol("harum minus ut",
                        new MapColor(136, 184, 94),
                        new MapColor(115, 241, 7),
                            new Dimension(460.5831),
                        new MapFont(new Dimension(560.5291),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            386.1446,
                        new MapColor(130, 217, 220),
                        new MapColor(184, 222, 209),
                            236.3742,
                        HorizontalAlignment.Center,
                            true,
                            674.3361,
                            new Dimension(24.4125),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.BelowAfter,
                        "cupiditate",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        43934126.0795,
                        14792.3497,
                        true,
                        new Dimension(736.4858),
                    new TextSymbol("vitae aliquam id",
                        new MapColor(108, 93, 149),
                        new MapColor(129, 227, 236),
                            new Dimension(251.6400),
                        new MapFont(new Dimension(22.9975),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            205.4132,
                        new MapColor(154, 79, 3),
                        new MapColor(200, 178, 148),
                            53.5818,
                        HorizontalAlignment.Left,
                            true,
                            188.9568,
                            new Dimension(384.2547),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.BelowBefore,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        34041845.4086,
                        476.1791,
                        true,
                        new Dimension(772.1270),
                    new TextSymbol("ipsa sit id",
                        new MapColor(41, 146, 3),
                        new MapColor(178, 11, 14),
                            new Dimension(432.6394),
                        new MapFont(new Dimension(251.2508),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            776.5477,
                        new MapColor(33, 129, 59),
                        new MapColor(138, 232, 192),
                            250.5423,
                        HorizontalAlignment.Center,
                            true,
                            799.7856,
                            new Dimension(175.8047),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("doloremque enim iusto",
                        "impedit",
                        ["vero",
                            "autem",
                            "mollitia",
                            "veritatis"],
                    [new FieldInfo("email",
                            "voluptatibus",
                            "quia",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("name",
                            "voluptatibus",
                            "quasi",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Count)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "et",
                                "et voluptas vel")),
                    new MediaPopupContent("quia porro qui",
                            "assumenda adipisci magni sit laboriosam dolorem soluta",
                        [new ImageMediaInfo("enim ullam deserunt",
                                "corrupti",
                                "reprehenderit ipsam corporis",
                            new ImageMediaInfoValue("http://rasheed.org",
                                    "https://mackenzie.com"),
                                350.3178),
                        new ColumnChartMediaInfo("cum praesentium culpa",
                                "repellendus",
                                "aliquam quia mollitia",
                            new ChartMediaInfoValue(["voluptatem",
                                    "non",
                                    "minima",
                                    "doloribus"],
                                    "sequi",
                                    "tenetur",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "in",
                                        143.1753),
                                new ChartMediaInfoValueSeries("group",
                                        "officiis",
                                        686.5807),
                                new ChartMediaInfoValueSeries("id",
                                        "officiis",
                                        617.4494)],
                                [new MapColor(132, 231, 20),
                                new MapColor(114, 69, 120)])),
                        new ImageMediaInfo("voluptatibus necessitatibus dolor",
                                "expedita",
                                "facere et exercitationem",
                            new ImageMediaInfoValue("http://maurice.org",
                                    "http://adelbert.name"),
                                192.1030),
                        new PieChartMediaInfo("et a illo",
                                "qui",
                                "unde ab quis",
                            new ChartMediaInfoValue(["omnis",
                                    "et",
                                    "qui"],
                                    "et",
                                    "aut",
                                [new ChartMediaInfoValueSeries("status",
                                        "optio",
                                        910.7191),
                                new ChartMediaInfoValueSeries("password",
                                        "consequatur",
                                        654.7064),
                                new ChartMediaInfoValueSeries("title",
                                        "aperiam",
                                        314.4459),
                                new ChartMediaInfoValueSeries("name",
                                        "voluptas",
                                        598.3630)],
                                [new MapColor(223, 54, 248)]))],
                            5),
                    new RelationshipPopupContent("tempora dicta nisi",
                            "fuga molestiae inventore velit dicta tempore voluptatum",
                            2,
                            "similique",
                        [new RelatedRecordsInfoFieldOrder("nulla",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("nobis",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("ad",
                            OrderBy.Asc)],
                            4)],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "name",
                            "dicta vel fugiat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "title",
                            "voluptatem harum qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "category",
                            "suscipit placeat qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "createdAt",
                            "aut architecto voluptas",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("est necessitatibus assumenda",
                            "ed413498-e5b6-62e5-08d7-09e3f71d629c",
                            () => { Console.WriteLine("eius"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "status",
                            "repellat"),
                    new ActionToggle("et ratione distinctio",
                            "25794dc3-0a35-f858-28c4-784d63e3f2a0",
                            () => { Console.WriteLine("quisquam"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "ut")])),
            new Sublayer(4,
                    true,
                    true,
                ListMode.Hide,
                    31695072.7020,
                    13766.6224,
                    0.0477,
                    true,
                    "ipsum harum sed",
                    true,
                    "eos",
                new LayerFloorInfo("voluptate"),
                [new Label(LabelPlacement.CenterAfter,
                        "sapiente",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        36968606.3033,
                        31135.4065,
                        true,
                        new Dimension(713.7299),
                    new TextSymbol("ut laboriosam illum",
                        new MapColor(70, 145, 51),
                        new MapColor(101, 108, 179),
                            new Dimension(955.3272),
                        new MapFont(new Dimension(396.9025),
                                "Arial",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            707.2342,
                        new MapColor(177, 190, 26),
                        new MapColor(204, 98, 249),
                            319.5341,
                        HorizontalAlignment.Center,
                            true,
                            891.3153,
                            new Dimension(522.2956),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.AboveStart,
                        "quibusdam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        24656082.5022,
                        41168.5777,
                        true,
                        new Dimension(621.6362),
                    new TextSymbol("delectus ab hic",
                        new MapColor(83, 125, 93),
                        new MapColor(144, 18, 98),
                            new Dimension(757.2053),
                        new MapFont(new Dimension(970.6810),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            567.2599,
                        new MapColor(245, 15, 20),
                        new MapColor(119, 180, 70),
                            719.7968,
                        HorizontalAlignment.Right,
                            true,
                            719.6955,
                            new Dimension(661.7560),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("voluptas iure alias",
                        "aut",
                        ["sint",
                            "totam",
                            "praesentium",
                            "pariatur"],
                    [new FieldInfo("title",
                            "ullam",
                            "ipsa",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("updatedAt",
                            "iste",
                            "iure",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("password",
                            "veniam",
                            "at",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new FieldsPopupContent([new FieldInfo("phone",
                                "quia",
                                "ad",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("avatar",
                                "minus",
                                "id",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("title",
                                "voluptate",
                                "ut",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongMonthDayYearLongTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("id",
                                "quisquam",
                                "ut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.ShortMonthYear),
                                true,
                                true,
                            StatisticType.Avg)],
                            "illum atque aspernatur reprehenderit nam recusandae",
                            "sint et earum")],
                    [new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "id",
                            "praesentium dignissimos eveniet",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "title",
                            "consequatur soluta corporis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "category",
                            "cumque soluta nulla",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("consequuntur eum laborum",
                            "b5c0cffe-7137-e734-6003-8ebcfd874b8c",
                            () => { Console.WriteLine("nisi"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "odit"),
                    new ActionToggle("et nesciunt labore",
                            "c113e839-318d-d584-1d1a-4768d947b370",
                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "laborum")])),
            new Sublayer(7,
                    true,
                    true,
                ListMode.Show,
                    47651770.8187,
                    30687.8566,
                    0.3976,
                    true,
                    "sapiente odio pariatur",
                    true,
                    "voluptatem",
                new LayerFloorInfo("totam"),
                [new Label(LabelPlacement.AlwaysHorizontal,
                        "similique",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        38245667.8535,
                        45228.4244,
                        true,
                        new Dimension(553.0448),
                    new TextSymbol("unde non voluptas",
                        new MapColor(157, 253, 68),
                        new MapColor(234, 217, 83),
                            new Dimension(341.7510),
                        new MapFont(new Dimension(358.5550),
                                "Garamond",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.None),
                            85.4355,
                        new MapColor(82, 218, 157),
                        new MapColor(102, 143, 116),
                            527.3013,
                        HorizontalAlignment.Left,
                            true,
                            48.8769,
                            new Dimension(147.3070),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("et qui sit",
                        "optio",
                        ["aut",
                            "et",
                            "ipsa",
                            "voluptatem"],
                    [new FieldInfo("phone",
                            "placeat",
                            "est",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("group",
                            "culpa",
                            "modi",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("name",
                            "est",
                            "voluptas",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new AttachmentsPopupContent("perferendis corrupti laudantium",
                            "ut tempora accusantium ipsum",
                            AttachmentsPopupContentDisplayType.Auto),
                    new AttachmentsPopupContent("quae officia repellendus",
                            "similique non non deserunt saepe nihil aperiam",
                            AttachmentsPopupContentDisplayType.Preview)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "password",
                            "est laborum sunt",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("dolorem ut occaecati",
                            "d19ba610-d8ea-1179-eac8-99c7be09b504",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "email",
                            "recusandae"),
                    new ActionButton("rerum aperiam quam",
                            "https://picsum.photos/640/480/?image=568",
                            "abde9830-d9ec-f5d3-8e9c-be1c364bfea8",
                            () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "dicta"),
                    new ActionToggle("esse est optio",
                            "ed015a52-a71b-184b-e971-3a7657d23e71",
                            () => { Console.WriteLine("earum"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "id"),
                    new ActionToggle("qui quia voluptatem",
                            "77ab53e1-a0b6-9222-50a4-c3274508c056",
                            () => { Console.WriteLine("quasi"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "voluptatum")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(243.6965,
                    TileInfoFormat.Svg,
                    true,
                [new LOD(4,
                        "maxime",
                        80.6254,
                        21922891.8102),
                new LOD(7,
                        "incidunt",
                        30.3536,
                        3338219.3650),
                new LOD(1,
                        "dolor",
                        22.9348,
                        19922661.2865)],
                new Point(55.3889,
                        23.4864,
                        151.9561,
                        -19.0501,
                        15.9930,
                    new SpatialReference(7,
                            "eveniet",
                            "in",
                            "aspernatur"),
                        true,
                        true,
                        284.3529),
                    [7,
                        8,
                        7,
                        7],
                new SpatialReference(4,
                        "rerum",
                        "voluptatem",
                        "sed"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2003, 10, 8, 20, 49, 23),
                    new DateTime(2003, 6, 25, 18, 10, 53));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
