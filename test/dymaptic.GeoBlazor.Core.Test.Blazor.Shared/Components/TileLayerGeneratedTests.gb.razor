@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("recusandae")"
                        BlendMode="@(BlendMode.Hue)"
                        Copyright="@("odit")"
                        Effect="@(new Effect("in",
                            41331575.4547))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(27504561.7073)"
                        MinScale="@(4578.3299)"
                        Opacity="@(0.1927)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(251.0542)"
                        Resampling="@(true)"
                        TileServers="@(["facilis"])"
                        Title="@("voluptatibus earum ea")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_NearInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2023, 11, 22, 16, 37, 5))"
                            End="@(new DateTime(2012, 8, 6, 2, 46, 24))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(403.3817)"
                            Format="@(TileInfoFormat.Png24)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(8,
                                    "voluptas",
                                    38.3203,
                                    6372571.1758)])"
                            Origin="@(new Point(34.0291,
                                    36.7699,
                                    153.8970,
                                    78.0888,
                                    939.8782,
                                new SpatialReference(8,
                                        "modi",
                                        "qui",
                                        "reiciendis"),
                                    true,
                                    true,
                                    694.5755))"
                            Size="@([6])">
                            <SpatialReference 
                                Wkid="@(5)"
                                ImageCoordinateSystem="@("veniam")"
                                Wkt="@("ratione")"
                                Wkt2="@("similique")">
                            </SpatialReference>
                        </TileInfo>
                        <PortalItem />
                        <Extent 
                            Xmax="@(4.0383)"
                            Xmin="@(42.3061)"
                            Ymax="@(85.2059)"
                            Ymin="@(-38.9634)"
                            Zmax="@(525.1179)"
                            Zmin="@(430.4963)"
                            Mmax="@(298.4992)"
                            Mmin="@(277.0658)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(2)"
                                ImageCoordinateSystem="@("expedita")"
                                Wkt="@("perspiciatis")"
                                Wkt2="@("maxime")">
                            </SpatialReference>
                        </Extent>
                        <Sublayer 
                            SublayerId="@(9)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(37355986.4557)"
                            MinScale="@(39161.5356)"
                            Opacity="@(0.1872)"
                            PopupEnabled="@(true)"
                            Title="@("dolores consectetur et")"
                            Visible="@(true)"
                            DefinitionExpression="@("id")"
                            FloorInfo="@(new LayerFloorInfo("natus"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowCenter,
                                    "repellendus",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    21568322.5529,
                                    6345.5445,
                                    true,
                                    new Dimension(812.3893),
                                new TextSymbol("debitis autem tempore",
                                    new MapColor(192, 155, 184),
                                    new MapColor(177, 69, 85),
                                        new Dimension(107.7721),
                                    new MapFont(new Dimension(136.5992),
                                            "Arial",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        19.1302,
                                    new MapColor(181, 248, 168),
                                    new MapColor(14, 220, 152),
                                        879.2257,
                                    HorizontalAlignment.Left,
                                        true,
                                        639.7105,
                                        new Dimension(704.2870),
                                        true),
                                    true,
                                    "1 = 1")])"
                            PopupTemplate="@(new PopupTemplate("et eaque quae",
                                    "debitis",
                                    ["deserunt",
                                        "explicabo"],
                                [new FieldInfo("avatar",
                                        "qui",
                                        "quibusdam",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("avatar",
                                        "omnis",
                                        "eum",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new MediaPopupContent("eum quidem autem",
                                        "autem nesciunt",
                                    [new ImageMediaInfo("laudantium molestiae ut",
                                            "dicta",
                                            "sit doloremque exercitationem",
                                        new ImageMediaInfoValue("https://westley.biz",
                                                "https://deshawn.biz"),
                                            232.0303)],
                                        5)],
                                [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "phone",
                                        "occaecati praesentium quis",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "createdAt",
                                        "cupiditate est pariatur",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("nobis dolores ut",
                                        "https://picsum.photos/640/480/?image=273",
                                        "12c653c3-d6f3-b1e6-4edb-ce0a5e57f69f",
                                        () => { Console.WriteLine("sint"); return Task.CompletedTask; },
                                        "id",
                                        true,
                                        true,
                                        true,
                                        "aliquam")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("dolor temporibus dolorem",
                                    new MapColor(179, 254, 97),
                                    new MapColor(231, 108, 149),
                                        new Dimension(358.1313),
                                    new MapFont(new Dimension(869.1161),
                                            "Verdana",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        299.9092,
                                    new MapColor(194, 121, 123),
                                    new MapColor(201, 242, 3),
                                        748.0432,
                                    HorizontalAlignment.Left,
                                        true,
                                        40.3856,
                                        new Dimension(142.5023),
                                        true),
                                    "accusamus",
                                [new OpacityVariable("dignissimos",
                                        "beatae",
                                    [new OpacityStop(461.9793,
                                            0.4492,
                                            "ab"),
                                    new OpacityStop(721.9616,
                                            0.2484,
                                            "repellat")],
                                    new VisualVariableLegendOptions(true,
                                            "ut qui numquam"),
                                        "perspiciatis",
                                        "asperiores id et"),
                                new RotationVariable("omnis",
                                    Axis.Roll,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "odit iure atque"),
                                        "quia",
                                        "ut explicabo totam")],
                                new AuthoringInfo(ClassificationMethod.Manual,
                                    new AlgorithmicColorRamp(Algorithm.CieLab,
                                        new MapColor(173, 104, 154),
                                        new MapColor(197, 220, 88)),
                                        536.9489,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(20.2670,
                                                296.3154)],
                                            "vel",
                                            "praesentium",
                                            "vel"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(402.1242,
                                                769.2886)],
                                            "ipsa",
                                            "placeat",
                                            "labore"),
                                        ["omnis",
                                            "voluptatibus"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "quaerat",
                                        true,
                                    LengthUnit.Decimeters,
                                        741.8291,
                                        48.4393,
                                        681.7538,
                                        581.5875)))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(10450873.9148)"
                                MinScale="@(42547.3131)"
                                Opacity="@(0.8104)"
                                PopupEnabled="@(true)"
                                Title="@("fugit temporibus doloribus")"
                                Visible="@(true)"
                                DefinitionExpression="@("corporis")"
                                Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(7)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(43277292.0050)"
                                    MinScale="@(38440.1533)"
                                    Opacity="@(0.6361)"
                                    PopupEnabled="@(true)"
                                    Title="@("excepturi sunt occaecati")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("corporis")"
                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(6)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(13616489.6351)"
                                        MinScale="@(1207.2309)"
                                        Opacity="@(0.1451)"
                                        PopupEnabled="@(true)"
                                        Title="@("aut labore cum")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("at")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(2)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(16610559.7107)"
                                            MinScale="@(35701.5696)"
                                            Opacity="@(0.6307)"
                                            PopupEnabled="@(true)"
                                            Title="@("vel molestias voluptas")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("nobis")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(2)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(31798242.9785)"
                                                MinScale="@(29231.5050)"
                                                Opacity="@(0.5972)"
                                                PopupEnabled="@(true)"
                                                Title="@("corporis ducimus voluptas")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("est")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(9)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(14808396.5185)"
                                                    MinScale="@(7464.7076)"
                                                    Opacity="@(0.0491)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("in ab exercitationem")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("a")"
                                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("facilis pariatur ut")"
                                                        StringContent="@("voluptatum")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("quo")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("aut in eos")"
                                                    StringContent="@("sit")"
                                                    OutFields="@(["quia"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new ExpressionPopupContent(),
                                                    new MediaPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton("et voluptas quia",
                                                        "https://picsum.photos/640/480/?image=919",
                                                        "f27266e2-30a7-39a5-ebe8-947180565149",
                                                        () => { Console.WriteLine("a"); return Task.CompletedTask; },
                                                        "id",
                                                        true,
                                                        true,
                                                        true,
                                                        "dolores")])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterCenter)"
                                                    LabelExpression="@("nesciunt")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(46686062.9266)"
                                                    MinScale="@(1989.6636)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(566.7892))"
                                                    Symbol="@(new TextSymbol("pariatur natus porro"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("quis")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                    new MultipartColorRamp(),
                                                        756.5327,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["nostrum",
                                                            "vel"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "harum",
                                                        true,
                                                    LengthUnit.Feet,
                                                        432.4559,
                                                        759.7123,
                                                        986.9507,
                                                        514.1558))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("eligendi quibusdam ut")"
                                                StringContent="@("illum")"
                                                OutFields="@(["voluptatibus",
                                                    "omnis"])"
                                                FieldInfos="@([new FieldInfo("title",
                                                        "repellat",
                                                        "odit",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("name",
                                                        "est",
                                                        "eos",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var)])"
                                                Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "quam doloribus quibusdam",
                                                        "qui vel aut")])"
                                                ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                        "status",
                                                        "et animi expedita"),
                                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                        "comment",
                                                        "quis molestiae molestiae")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("animi quo culpa",
                                                    "https://picsum.photos/640/480/?image=1039",
                                                    "7ec90f7b-f169-cd89-4aa1-159b5f93d7b7",
                                                    () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                                                    "updatedAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "itaque"),
                                                    new ActionButton("nisi animi ad",
                                                        "https://picsum.photos/640/480/?image=122",
                                                        "3c69221b-55b9-638f-428b-3f9adbb85d77",
                                                        () => { Console.WriteLine("illo"); return Task.CompletedTask; },
                                                        "id",
                                                        true,
                                                        true,
                                                        true,
                                                        "id")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveLeft)"
                                                LabelExpression="@("quia")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(26192354.1567)"
                                                MinScale="@(39547.8275)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(793.5582))"
                                                Symbol="@(new TextSymbol("vel ipsum quos",
                                                    new MapColor(222, 226, 200),
                                                    new MapColor(63, 127, 242),
                                                        null,
                                                    new MapFont(),
                                                        338.3079,
                                                    new MapColor(189, 93, 139),
                                                    new MapColor(19, 79, 79),
                                                        338.2152,
                                                    HorizontalAlignment.Right,
                                                        true,
                                                        711.4579,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Province = 'Ontario'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("voluptatibus")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv)]),
                                                    666.9175,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "eius",
                                                        "et",
                                                        "vel"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "perspiciatis",
                                                        "a",
                                                        "saepe"),
                                                    ["sit",
                                                        "sed"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "earum",
                                                    true,
                                                LengthUnit.Inches,
                                                    555.3808,
                                                    79.2397,
                                                    61.9600,
                                                    647.3339))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("deleniti sunt fuga")"
                                            StringContent="@("eius")"
                                            OutFields="@(["aut",
                                                "cupiditate"])"
                                            FieldInfos="@([new FieldInfo("id",
                                                    "unde",
                                                    "accusamus",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.ShortDate),
                                                    true,
                                                    true,
                                                StatisticType.Max)])"
                                            Content="@([new AttachmentsPopupContent("facere nesciunt officiis",
                                                    "deleniti aut modi nihil",
                                                    AttachmentsPopupContentDisplayType.Preview),
                                            new FieldsPopupContent([new FieldInfo("email",
                                                        "nobis",
                                                        "et",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("phone",
                                                        "voluptatem",
                                                        "facilis",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev)],
                                                    "eos ipsa eos",
                                                    "accusamus consequatur consequatur")])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "email",
                                                    "ipsa nihil omnis",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("aperiam quos assumenda",
                                                "https://picsum.photos/640/480/?image=240",
                                                "3b0a974e-dd89-1f04-ec86-e89334ffcaff",
                                                () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                                "id",
                                                true,
                                                true,
                                                true,
                                                "sit")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterAfter)"
                                            LabelExpression="@("est")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(46558568.1139)"
                                            MinScale="@(45933.3780)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(165.1120))"
                                            Symbol="@(new TextSymbol("consectetur et perspiciatis",
                                                new MapColor(74, 193, 48),
                                                new MapColor(108, 244, 140),
                                                    new Dimension(265.1718),
                                                new MapFont(new Dimension(665.0942),
                                                        "Garamond",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Lighter,
                                                    TextDecoration.Underline),
                                                    667.1164,
                                                new MapColor(125, 174, 221),
                                                new MapColor(130, 217, 185),
                                                    847.0754,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    483.0551,
                                                    new Dimension(796.8048),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Name = 'John Doe'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("dolorem")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(3, 6, 174),
                                                    new MapColor(98, 230, 50)),
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(197, 47, 63),
                                                    new MapColor(53, 123, 229))]),
                                                968.7731,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(947.6807,
                                                        256.6114),
                                                new AuthoringInfoField1ClassBreakInfos(49.5066,
                                                        612.6170)],
                                                    "provident",
                                                    "non",
                                                    "adipisci"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(293.4779,
                                                        302.9655)],
                                                    "eveniet",
                                                    "magni",
                                                    "quia"),
                                                ["vitae"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "enim",
                                                true,
                                            LengthUnit.Centimeters,
                                                657.9770,
                                                735.1078,
                                                208.5242,
                                                56.2853))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("repellat ab maiores")"
                                        StringContent="@("vitae")"
                                        OutFields="@(["consectetur"])"
                                        FieldInfos="@([new FieldInfo("token",
                                                "tenetur",
                                                "dolor",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongMonthYear),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("id",
                                                "qui",
                                                "ratione",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime),
                                                true,
                                                true,
                                            StatisticType.Sum)])"
                                        Content="@([new TextPopupContent("quas eum atque"),
                                        new MediaPopupContent("labore nihil aut",
                                                "consequatur laboriosam voluptas",
                                            [new ColumnChartMediaInfo("velit ut consequatur",
                                                    "ab",
                                                    "mollitia voluptatem dolorum",
                                                new ChartMediaInfoValue(["quam"],
                                                        "quia",
                                                        "voluptatum",
                                                    [new ChartMediaInfoValueSeries(),
                                                    new ChartMediaInfoValueSeries()],
                                                    [new MapColor(128, 10, 88),
                                                    new MapColor(9, 6, 44)]))],
                                                1)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "group",
                                                "quis et minima",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "category",
                                                "aut et rerum",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("doloribus sit voluptatum",
                                            "https://picsum.photos/640/480/?image=399",
                                            "e3493f1d-dbd3-5106-13ff-e5a7937045d1",
                                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "minima"),
                                            new ActionButton("qui explicabo labore",
                                                "https://picsum.photos/640/480/?image=946",
                                                "33f61dc2-1bb8-e170-70ad-0c5f239092e1",
                                                () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                                                "title",
                                                true,
                                                true,
                                                true,
                                                "dignissimos")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.BelowEnd)"
                                        LabelExpression="@("magnam")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(18022998.9554)"
                                        MinScale="@(26335.5200)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(308.8043))"
                                        Symbol="@(new TextSymbol("unde sint ipsam",
                                            new MapColor(130, 106, 51),
                                            new MapColor(186, 51, 59),
                                                new Dimension(877.2331),
                                            new MapFont(new Dimension(534.0781),
                                                    "Times New Roman",
                                                MapFontStyle.Normal,
                                                FontWeight.Normal,
                                                TextDecoration.Underline),
                                                656.2727,
                                            new MapColor(167, 33, 127),
                                            new MapColor(190, 52, 236),
                                                611.2123,
                                            HorizontalAlignment.Center,
                                                true,
                                                190.4219,
                                                new Dimension(268.3234),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("City = 'Toronto'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("ut")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(208, 33, 14),
                                            new MapColor(49, 228, 184)),
                                            675.6240,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(478.1118,
                                                    683.0090),
                                            new AuthoringInfoField1ClassBreakInfos(647.8824,
                                                    170.2040)],
                                                "explicabo",
                                                "harum",
                                                "eos"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(236.6124,
                                                    857.9242)],
                                                "et",
                                                "atque",
                                                "sit"),
                                            ["consequatur"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "aut",
                                            true,
                                        LengthUnit.Miles,
                                            605.8065,
                                            757.5128,
                                            883.4685,
                                            416.9965))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("et magni impedit")"
                                    StringContent="@("fugiat")"
                                    OutFields="@(["et"])"
                                    FieldInfos="@([new FieldInfo("phone",
                                            "ut",
                                            "harum",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.LongDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Min)])"
                                    Content="@([new AttachmentsPopupContent("nostrum vero commodi",
                                            "quia voluptates est molestias",
                                            AttachmentsPopupContentDisplayType.Auto),
                                    new RelationshipPopupContent("est enim laboriosam",
                                            "sunt sunt aliquam iusto",
                                            7,
                                            "deleniti",
                                        [new RelatedRecordsInfoFieldOrder("qui",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("cumque",
                                            OrderBy.Asc)],
                                            9)])"
                                    ExpressionInfos="@([new ExpressionInfo("return Date();",
                                            "status",
                                            "voluptatem quo porro",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("vitae id nostrum",
                                        "https://picsum.photos/640/480/?image=71",
                                        "9563ec83-7518-a6d0-bba2-d8e912371b89",
                                        () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                                        "comment",
                                        true,
                                        true,
                                        true,
                                        "quisquam")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveRight)"
                                    LabelExpression="@("molestias")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(5337925.4101)"
                                    MinScale="@(32618.7281)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(119.2920))"
                                    Symbol="@(new TextSymbol("quae deserunt et",
                                        new MapColor(228, 239, 28),
                                        new MapColor(42, 50, 197),
                                            new Dimension(11.8106),
                                        new MapFont(new Dimension(512.7905),
                                                "Times New Roman",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            793.6796,
                                        new MapColor(137, 165, 109),
                                        new MapColor(217, 190, 201),
                                            490.4509,
                                        HorizontalAlignment.Left,
                                            true,
                                            324.1964,
                                            new Dimension(938.7236),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("City = 'Toronto'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("vel")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(975.7347,
                514.3997,
                19.0891,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(2);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(492.6142,
                563.3709,
                964.6617);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        await tileLayer.Refresh();
        BlendMode testBlendMode = BlendMode.SourceAtop;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-49.3178,
                    -76.7972,
                    -9.1350,
                    -39.5836,
                    482.4754,
                    277.7461,
                    791.9921,
                    898.5049,
                new SpatialReference(7,
                        "accusamus",
                        "atque",
                        "ex"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(3,
                    true,
                    true,
                ListMode.Show,
                    22983696.6210,
                    31231.6604,
                    0.8350,
                    true,
                    "voluptate voluptas rerum",
                    true,
                    "consequatur",
                new LayerFloorInfo("quis"),
                [new Label(LabelPlacement.CenterStart,
                        "vero",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        19559418.6677,
                        21662.4000,
                        true,
                        new Dimension(436.7428),
                    new TextSymbol("consequatur qui in",
                        new MapColor(80, 195, 141),
                        new MapColor(22, 218, 30),
                            new Dimension(494.0595),
                        new MapFont(new Dimension(310.8530),
                                "Palatino",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            57.9564,
                        new MapColor(43, 78, 50),
                        new MapColor(102, 188, 193),
                            942.1110,
                        HorizontalAlignment.Center,
                            true,
                            884.6151,
                            new Dimension(341.4230),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("odit quo numquam",
                        "enim",
                        ["error"],
                    [new FieldInfo("id",
                            "quisquam",
                            "quo",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("email",
                            "ducimus",
                            "impedit",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new FieldsPopupContent([new FieldInfo("createdAt",
                                "id",
                                "pariatur",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("email",
                                "ut",
                                "minima",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Var)],
                            "quasi est officiis et",
                            "voluptatem et quia")],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "comment",
                            "ut accusamus id",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("et eum et",
                            "https://picsum.photos/640/480/?image=1027",
                            "93e3ab19-812f-6ead-bf5a-4fe2f1ab1731",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "deleniti")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Hide,
                    266604.4467,
                    20735.5581,
                    0.7482,
                    true,
                    "quaerat quo cumque",
                    true,
                    "culpa",
                new LayerFloorInfo("tempore"),
                [new Label(LabelPlacement.BelowRight,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        37989239.3549,
                        44003.8625,
                        true,
                        new Dimension(255.9465),
                    new TextSymbol("consequuntur eveniet iusto",
                        new MapColor(122, 39, 245),
                        new MapColor(132, 54, 22),
                            new Dimension(179.1338),
                        new MapFont(new Dimension(390.1977),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            478.3009,
                        new MapColor(213, 231, 179),
                        new MapColor(108, 73, 77),
                            669.2681,
                        HorizontalAlignment.Right,
                            true,
                            86.7710,
                            new Dimension(887.6046),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.BelowBefore,
                        "libero",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        18811854.8293,
                        25601.8136,
                        true,
                        new Dimension(227.8081),
                    new TextSymbol("et architecto itaque",
                        new MapColor(27, 123, 109),
                        new MapColor(2, 128, 177),
                            new Dimension(757.6143),
                        new MapFont(new Dimension(353.5434),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            210.6259,
                        new MapColor(66, 90, 41),
                        new MapColor(203, 63, 131),
                            187.2282,
                        HorizontalAlignment.Right,
                            true,
                            258.6614,
                            new Dimension(950.1649),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("iure debitis at",
                        "rem",
                        ["blanditiis"],
                    [new FieldInfo("token",
                            "placeat",
                            "laudantium",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.DayShortMonthYearShortTime),
                            true,
                            true,
                        StatisticType.Count)],
                    [new TextPopupContent("ratione eaque ipsum"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                "molestias",
                                "sint distinctio adipisci"))],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "status",
                            "aliquid rem voluptas",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "avatar",
                            "amet modi est",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("doloribus cumque quia",
                            "https://picsum.photos/640/480/?image=795",
                            "36ef14c2-df22-79a8-21d1-9e597a795098",
                            () => { Console.WriteLine("repellendus"); return Task.CompletedTask; },
                            "avatar",
                            true,
                            true,
                            true,
                            "in"),
                            new ActionButton("esse dolor eaque",
                                "https://picsum.photos/640/480/?image=815",
                                "14513a8f-ee82-0a4d-7d2f-0be0630cf18f",
                                () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "at")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(904.8195,
                    TileInfoFormat.Png,
                    true,
                [new LOD(2,
                        "nobis",
                        9.6262,
                        24693928.5824),
                new LOD(8,
                        "sed",
                        23.8077,
                        43120661.5580)],
                new Point(96.1511,
                        -42.6571,
                        157.9021,
                        58.4535,
                        160.9034,
                    new SpatialReference(1,
                            "corrupti",
                            "beatae",
                            "itaque"),
                        true,
                        true,
                        721.2787),
                    [2],
                new SpatialReference(7,
                        "veritatis",
                        "voluptate",
                        "fuga"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2011, 2, 4, 1, 8, 34),
                    new DateTime(2002, 6, 9, 22, 7, 1));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
