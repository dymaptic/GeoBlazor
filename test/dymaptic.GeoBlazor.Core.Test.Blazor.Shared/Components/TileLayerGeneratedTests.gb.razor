@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("ducimus")"
                        BlendMode="@(BlendMode.Saturation)"
                        Copyright="@("asperiores")"
                        Effect="@(new Effect("molestias",
                            20597887.8829))"
                        FullExtent="@(new Extent(173.4783,
                                -174.9971,
                                -56.0716,
                                -66.5865,
                                382.3195,
                                224.5647,
                                511.4064,
                                754.1968,
                            new SpatialReference(1,
                                    "alias",
                                    "dolorum",
                                    "minus"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(17154049.2373)"
                        MinScale="@(49076.8372)"
                        Opacity="@(0.0295)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(357.4978)"
                        Resampling="@(true)"
                        TileServers="@(["culpa",
                            "odit"])"
                        Title="@("ut esse veniam")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_ShortwaveInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2004, 9, 15, 15, 3, 43))"
                            End="@(new DateTime(2014, 9, 5, 9, 54, 3))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(855.3910)"
                            Format="@(TileInfoFormat.Gif)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(8,
                                    "nihil",
                                    3.7396,
                                    20986103.7174)])"
                            Origin="@(new Point(1.1297,
                                    21.0886,
                                    146.1250,
                                    33.4762,
                                    992.2544,
                                new SpatialReference(2,
                                        "minima",
                                        "aut",
                                        "nostrum"),
                                    true,
                                    true,
                                    832.0683))"
                            Size="@([7,
                                9])"
                            SpatialReference="@(new SpatialReference(3,
                                    "consequuntur",
                                    "ut",
                                    "officia"))">
                        </TileInfo>
                        <Sublayer 
                            SublayerId="@(2)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(36771837.2815)"
                            MinScale="@(33251.9051)"
                            Opacity="@(0.7082)"
                            PopupEnabled="@(true)"
                            Title="@("harum qui eos")"
                            Visible="@(true)"
                            DefinitionExpression="@("deleniti")"
                            FloorInfo="@(new LayerFloorInfo("et"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveAfter,
                                    "aspernatur",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    18184330.0526,
                                    17891.9791,
                                    true,
                                    new Dimension(312.0558),
                                new TextSymbol("esse quos consequatur",
                                    new MapColor(144, 121, 5),
                                    new MapColor(206, 12, 26),
                                        new Dimension(908.6833),
                                    new MapFont(new Dimension(122.5759),
                                            "Verdana",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.Underline),
                                        263.2607,
                                    new MapColor(156, 127, 65),
                                    new MapColor(13, 209, 251),
                                        225.8883,
                                    HorizontalAlignment.Right,
                                        true,
                                        715.4746,
                                        new Dimension(475.9548),
                                        true),
                                    true,
                                    "Street = '123 Main St.'")])"
                            PopupTemplate="@(new PopupTemplate("quo quia in",
                                    "qui",
                                    ["ratione",
                                        "natus",
                                        "maiores",
                                        "qui"],
                                [new FieldInfo("group",
                                        "expedita",
                                        "quod",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Min),
                                new FieldInfo("comment",
                                        "expedita",
                                        "velit",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortDateLeShortTime24),
                                        true,
                                        true,
                                    StatisticType.Max)],
                                [new FieldsPopupContent([new FieldInfo("avatar",
                                            "aliquam",
                                            "dolorum",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("createdAt",
                                            "beatae",
                                            "minus",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Sum),
                                    new FieldInfo("token",
                                            "eius",
                                            "rerum",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Sum)],
                                        "sequi ut mollitia harum explicabo",
                                        "accusamus rem vel"),
                                new AttachmentsPopupContent("similique voluptatem consequatur",
                                        "architecto blanditiis eligendi nam reiciendis et commodi",
                                        AttachmentsPopupContentDisplayType.Preview)],
                                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "token",
                                        "natus nam iure",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "token",
                                        "similique assumenda quo",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "name",
                                        "quasi est dicta",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature['FieldName'];",
                                        "email",
                                        "iusto laborum modi",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("sit ut laboriosam",
                                        "b34eaec8-447c-62f3-13f0-19502d49bbbf",
                                        () => { Console.WriteLine("repudiandae"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "status",
                                        "pariatur"),
                                new ActionButton("deserunt voluptatem rerum",
                                        "https://picsum.photos/640/480/?image=1075",
                                        "6ecc7537-a0dc-d67a-939b-3a31818ce9a5",
                                        () => { Console.WriteLine("minima"); return Task.CompletedTask; },
                                        "email",
                                        true,
                                        true,
                                        true,
                                        "sint"),
                                new ActionButton("maxime repellendus iusto",
                                        "https://picsum.photos/640/480/?image=967",
                                        "035ab760-71f5-dcf0-cbd3-a5fb22226612",
                                        () => { Console.WriteLine("necessitatibus"); return Task.CompletedTask; },
                                        "status",
                                        true,
                                        true,
                                        true,
                                        "est"),
                                new ActionButton("impedit reiciendis optio",
                                        "https://picsum.photos/640/480/?image=748",
                                        "7921e28e-bcba-bf1e-dd64-9de0eb2bfefd",
                                        () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                        "group",
                                        true,
                                        true,
                                        true,
                                        "voluptatem")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("tempora eveniet dolor",
                                    new MapColor(85, 18, 36),
                                    new MapColor(168, 149, 39),
                                        new Dimension(330.9355),
                                    new MapFont(new Dimension(786.3047),
                                            "Courier New",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        756.0347,
                                    new MapColor(39, 49, 176),
                                    new MapColor(15, 156, 212),
                                        991.2587,
                                    HorizontalAlignment.Right,
                                        true,
                                        572.2076,
                                        new Dimension(305.5423),
                                        true),
                                    "eveniet",
                                [new ColorVariable("error",
                                        "qui",
                                    [new ColorStop(747.3550,
                                        new MapColor(62, 76, 60),
                                            "assumenda")],
                                    new VisualVariableLegendOptions(true,
                                            "dolorum aut blanditiis"),
                                        "molestias",
                                        "nihil quis doloremque"),
                                new SizeVariable("dolorem",
                                        new Dimension(620.2279),
                                        new Dimension(136.7282),
                                        27.7882,
                                        217.0299,
                                        VisualValueRepresentation.Radius,
                                        VisualValueUnit.Yards,
                                        "facilis",
                                        "vitae",
                                        true,
                                        VisualAxis.WidthAndDepth,
                                        "maxime",
                                        "id occaecati facere",
                                    new VisualVariableLegendOptions(true,
                                            "non illum expedita"))],
                                new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                    new AlgorithmicColorRamp(Algorithm.Hsv,
                                        new MapColor(27, 250, 9),
                                        new MapColor(239, 64, 108)),
                                        864.5746,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(860.4895,
                                                283.8747)],
                                            "quia",
                                            "quae",
                                            "accusamus"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(317.8602,
                                                710.5566),
                                        new AuthoringInfoField1ClassBreakInfos(47.2946,
                                                445.7777),
                                        new AuthoringInfoField1ClassBreakInfos(169.4974,
                                                485.0547)],
                                            "accusantium",
                                            "voluptatem",
                                            "aut"),
                                        ["natus",
                                            "deserunt",
                                            "ex",
                                            "est"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "aut",
                                        true,
                                    LengthUnit.Meters,
                                        537.9482,
                                        792.7364,
                                        330.9867,
                                        707.0026)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(12988142.0872)"
                                MinScale="@(12127.8433)"
                                Opacity="@(0.2383)"
                                PopupEnabled="@(true)"
                                Title="@("vero ut velit")"
                                Visible="@(true)"
                                DefinitionExpression="@("ea")"
                                Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(7)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(10249684.4232)"
                                    MinScale="@(23776.4106)"
                                    Opacity="@(0.6130)"
                                    PopupEnabled="@(true)"
                                    Title="@("id quas fugit")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("ut")"
                                    Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(3)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(32376656.1625)"
                                        MinScale="@(15429.2590)"
                                        Opacity="@(0.6954)"
                                        PopupEnabled="@(true)"
                                        Title="@("voluptatum et quibusdam")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("aut")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(7)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(6195787.8186)"
                                            MinScale="@(8850.1301)"
                                            Opacity="@(0.7924)"
                                            PopupEnabled="@(true)"
                                            Title="@("ipsum nobis sed")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("voluptatibus")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(9)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(14988760.1454)"
                                                MinScale="@(16161.2112)"
                                                Opacity="@(0.5287)"
                                                PopupEnabled="@(true)"
                                                Title="@("placeat ea mollitia")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("commodi")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(9)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(18906189.5244)"
                                                    MinScale="@(5446.3950)"
                                                    Opacity="@(0.5377)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("consequuntur nobis autem")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("quod")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("esse aut saepe")"
                                                        StringContent="@("temporibus")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("voluptatum")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("nihil tenetur rerum")"
                                                    StringContent="@("maiores")"
                                                    OutFields="@(["et",
                                                        "impedit"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)])])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "e9a52390-edbf-9a81-5cbf-da03bdc9323e",
                                                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "5fb893e1-dd69-2a16-a7ef-a5cbc6a71c02",
                                                            () => { Console.WriteLine("suscipit"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "2f85a6e1-7df5-2da8-b4b0-8f9e88b3c7cd",
                                                            () => { Console.WriteLine("saepe"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterLeft)"
                                                    LabelExpression="@("nulla")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(3701197.5697)"
                                                    MinScale="@(17641.4539)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(119.1976))"
                                                    Symbol="@(new TextSymbol("quisquam qui magni"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Age > 21")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("aut")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                        709.4050,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["sunt",
                                                            "laboriosam",
                                                            "ut"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "ut",
                                                        true,
                                                    LengthUnit.UsFeet,
                                                        81.4809,
                                                        58.4274,
                                                        20.3330,
                                                        361.1087))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("ipsa repellendus laborum")"
                                                StringContent="@("aperiam")"
                                                OutFields="@(["aut",
                                                    "provident"])"
                                                FieldInfos="@([new FieldInfo("title",
                                                        "ipsam",
                                                        "provident",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("id",
                                                        "nam",
                                                        "iusto",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)])"
                                                Content="@([new TextPopupContent("dolorem aliquid sit"),
                                                new MediaPopupContent("velit ut nihil",
                                                        "perspiciatis laborum ut voluptas deleniti ut odio",
                                                    [new BarChartMediaInfo()],
                                                        7)])"
                                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                        "phone",
                                                        "eius sunt nobis"),
                                                new ExpressionInfo("return $feature.Name;",
                                                        "name",
                                                        "animi quo et"),
                                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "id",
                                                        "assumenda vel quae")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("consequatur corrupti dolorum",
                                                        "175f7d12-9645-4497-81ba-b5908f3d65cf",
                                                        () => { Console.WriteLine("tenetur"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "comment",
                                                        "sunt"),
                                                new ActionToggle("ut quibusdam et",
                                                        "6448eb9e-ead9-eb46-c90a-9c38db7e73fc",
                                                        () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "category",
                                                        "voluptates"),
                                                new ActionToggle("eius officia et",
                                                        "5e5241e1-c169-e8d7-5e50-42f413a0245e",
                                                        () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "avatar",
                                                        "est")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterAlong)"
                                                LabelExpression="@("explicabo")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(31253087.1094)"
                                                MinScale="@(42163.5843)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(858.1404))"
                                                Symbol="@(new TextSymbol("perferendis voluptatibus ut",
                                                    new MapColor(207, 78, 217),
                                                    new MapColor(96, 237, 88),
                                                        null,
                                                    new MapFont(),
                                                        627.5350,
                                                    new MapColor(212, 43, 35),
                                                    new MapColor(103, 59, 195),
                                                        215.2228,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        632.5999,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Name = 'John Doe'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("debitis")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch)]),
                                                    788.0875,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "dolores",
                                                        "aut",
                                                        "optio"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "blanditiis",
                                                        "commodi",
                                                        "a"),
                                                    ["aut",
                                                        "consequuntur",
                                                        "harum",
                                                        "impedit"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "culpa",
                                                    true,
                                                LengthUnit.Meters,
                                                    495.2119,
                                                    117.1109,
                                                    250.8338,
                                                    314.9788))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("ipsum incidunt ea")"
                                            StringContent="@("harum")"
                                            OutFields="@(["laboriosam",
                                                "qui",
                                                "facilis"])"
                                            FieldInfos="@([new FieldInfo("title",
                                                    "quod",
                                                    "sit",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("email",
                                                    "et",
                                                    "ut",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.LongDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Stddev),
                                            new FieldInfo("token",
                                                    "velit",
                                                    "voluptatem",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("status",
                                                    "quia",
                                                    "accusantium",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Min)])"
                                            Content="@([new TextPopupContent("nihil voluptas quasi"),
                                            new FieldsPopupContent([new FieldInfo("phone",
                                                        "dolore",
                                                        "similique",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("name",
                                                        "et",
                                                        "voluptas",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("status",
                                                        "natus",
                                                        "asperiores",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max),
                                                new FieldInfo("updatedAt",
                                                        "magni",
                                                        "et",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum)],
                                                    "et quia est veniam quas",
                                                    "laboriosam iure rerum")])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                    "id",
                                                    "ipsam cumque earum",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "id",
                                                    "animi itaque et",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                    "createdAt",
                                                    "rerum omnis omnis",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("tenetur et dolore",
                                                    "d1389b13-e06d-917a-4093-3a6a9ead1547",
                                                    () => { Console.WriteLine("praesentium"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "status",
                                                    "iste")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterBefore)"
                                            LabelExpression="@("ut")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(21278319.1588)"
                                            MinScale="@(39001.3251)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(266.7605))"
                                            Symbol="@(new TextSymbol("enim fugiat voluptatem",
                                                new MapColor(147, 202, 168),
                                                new MapColor(18, 189, 243),
                                                    new Dimension(468.6563),
                                                new MapFont(new Dimension(893.8801),
                                                        "Courier New",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Normal,
                                                    TextDecoration.LineThrough),
                                                    790.0290,
                                                new MapColor(15, 251, 179),
                                                new MapColor(211, 251, 192),
                                                    187.5269,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    716.9766,
                                                    new Dimension(513.1986),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("1 = 1")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("veniam")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(232, 26, 152),
                                                    new MapColor(125, 7, 31))]),
                                                911.7065,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(943.6306,
                                                        995.5459),
                                                new AuthoringInfoField1ClassBreakInfos(782.8080,
                                                        976.6128),
                                                new AuthoringInfoField1ClassBreakInfos(961.3818,
                                                        476.2991)],
                                                    "aut",
                                                    "provident",
                                                    "aut"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(282.7896,
                                                        224.1375),
                                                new AuthoringInfoField1ClassBreakInfos(801.7203,
                                                        206.2594),
                                                new AuthoringInfoField1ClassBreakInfos(63.6722,
                                                        231.2444),
                                                new AuthoringInfoField1ClassBreakInfos(301.0063,
                                                        485.9904)],
                                                    "voluptatum",
                                                    "qui",
                                                    "dolor"),
                                                ["dolorem",
                                                    "sit",
                                                    "quis",
                                                    "assumenda"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "repellat",
                                                true,
                                            LengthUnit.Millimeters,
                                                836.7165,
                                                348.5596,
                                                96.7149,
                                                790.1009))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("officia in ut")"
                                        StringContent="@("dolor")"
                                        OutFields="@(["dolores",
                                            "blanditiis"])"
                                        FieldInfos="@([new FieldInfo("comment",
                                                "rem",
                                                "sunt",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Max),
                                        new FieldInfo("token",
                                                "reiciendis",
                                                "et",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("createdAt",
                                                "quia",
                                                "impedit",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Max)])"
                                        Content="@([new FieldsPopupContent([new FieldInfo("token",
                                                    "rem",
                                                    "eligendi",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("token",
                                                    "corrupti",
                                                    "perspiciatis",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.LongMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("password",
                                                    "magni",
                                                    "praesentium",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var)],
                                                "cum consequatur vero repudiandae",
                                                "officiis dolor est")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                "category",
                                                "accusamus asperiores qui",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "token",
                                                "soluta adipisci est",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "password",
                                                "ea mollitia pariatur",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("et animi esse",
                                                "ba376429-5fb5-f0f1-e52d-a3d62117df41",
                                                () => { Console.WriteLine("modi"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "category",
                                                "pariatur"),
                                        new ActionToggle("consequatur iste pariatur",
                                                "d84fff34-f231-bf8d-ec9d-e8ac66a5163d",
                                                () => { Console.WriteLine("reprehenderit"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "id",
                                                "accusamus")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.BelowEnd)"
                                        LabelExpression="@("incidunt")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(8779244.1550)"
                                        MinScale="@(16917.9807)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(368.6610))"
                                        Symbol="@(new TextSymbol("quia accusantium pariatur",
                                            new MapColor(139, 96, 47),
                                            new MapColor(246, 174, 144),
                                                new Dimension(172.4709),
                                            new MapFont(new Dimension(846.5879),
                                                    "Courier New",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bold,
                                                TextDecoration.LineThrough),
                                                285.2818,
                                            new MapColor(113, 134, 253),
                                            new MapColor(136, 202, 52),
                                                286.8498,
                                            HorizontalAlignment.Left,
                                                true,
                                                208.4417,
                                                new Dimension(614.8217),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Age > 21")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("vel")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(21, 202, 90),
                                                new MapColor(126, 72, 253))]),
                                            367.5680,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(389.3933,
                                                    116.8387),
                                            new AuthoringInfoField1ClassBreakInfos(531.3330,
                                                    924.0897)],
                                                "omnis",
                                                "harum",
                                                "enim"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(80.1722,
                                                    555.2172),
                                            new AuthoringInfoField1ClassBreakInfos(335.5087,
                                                    793.0910),
                                            new AuthoringInfoField1ClassBreakInfos(480.5832,
                                                    967.9382),
                                            new AuthoringInfoField1ClassBreakInfos(110.3455,
                                                    561.3525)],
                                                "sunt",
                                                "quasi",
                                                "quibusdam"),
                                            ["rerum",
                                                "aperiam"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "quia",
                                            true,
                                        LengthUnit.NauticalMiles,
                                            669.3678,
                                            563.8933,
                                            558.8675,
                                            623.7925))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("commodi cum vel")"
                                    StringContent="@("vel")"
                                    OutFields="@(["iusto",
                                        "et",
                                        "aut"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "et",
                                            "sint",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(6,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("category",
                                            "amet",
                                            "qui",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(1,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Var)])"
                                    Content="@([new RelationshipPopupContent("maxime sunt accusantium",
                                            "ut enim eum necessitatibus dolor sit accusantium",
                                            2,
                                            "expedita",
                                        [new RelatedRecordsInfoFieldOrder("adipisci",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("animi",
                                            OrderBy.Desc)],
                                            7),
                                    new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                "in",
                                                "officiis doloremque nulla")),
                                    new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "et",
                                                "labore quaerat ipsam")),
                                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "totam",
                                                "sit quod fuga"))])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "createdAt",
                                            "laudantium ipsam praesentium",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("enim officia vero",
                                            "https://picsum.photos/640/480/?image=32",
                                            "9f7afce9-81b6-6e06-0cc9-9239bad968f5",
                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                            "token",
                                            true,
                                            true,
                                            true,
                                            "at"),
                                    new ActionToggle("est at saepe",
                                            "35774e60-78f4-a324-10a4-756350163e30",
                                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "updatedAt",
                                            "qui")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AlwaysHorizontal)"
                                    LabelExpression="@("rerum")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(29288516.3021)"
                                    MinScale="@(25076.3699)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(904.8386))"
                                    Symbol="@(new TextSymbol("iusto iusto sapiente",
                                        new MapColor(57, 154, 72),
                                        new MapColor(198, 232, 17),
                                            new Dimension(258.9781),
                                        new MapFont(new Dimension(390.0493),
                                                "Bookman",
                                            MapFontStyle.Normal,
                                            FontWeight.Lighter,
                                            TextDecoration.LineThrough),
                                            916.8498,
                                        new MapColor(186, 92, 6),
                                        new MapColor(48, 53, 59),
                                            716.5344,
                                        HorizontalAlignment.Left,
                                            true,
                                            409.4955,
                                            new Dimension(52.7182),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Street = '123 Main St.'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("optio")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(460.7640,
                630.2094,
                110.7809,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(3);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(892.0305,
                824.5744,
                850.6225);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.VividLight;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(136.8695,
                    41.1509,
                    15.7735,
                    26.9823,
                    571.9822,
                    554.7367,
                    467.6625,
                    219.1876,
                new SpatialReference(3,
                        "quo",
                        "sint",
                        "impedit"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "asperiores",
                    "voluptas",
                    651.9693,
                    ["dolorum",
                        "excepturi",
                        "et",
                        "nemo"],
                    new DateTime(2009, 4, 3, 17, 17, 4),
                    "recusandae",
                    "ut repudiandae repellat officiis voluptatem",
                new Extent(-154.4605,
                        -46.1878,
                        -47.6873,
                        68.6043,
                        334.4342,
                        303.4328,
                        120.3317,
                        539.4288,
                    new SpatialReference(4,
                            "nesciunt",
                            "earum",
                            "perspiciatis"),
                        true,
                        true),
                    ["placeat",
                        "ea",
                        "corrupti",
                        "sint"],
                    "similique",
                    new DateTime(2013, 5, 21, 5, 6, 49),
                    "createdAt",
                    351.3172);
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(8,
                    true,
                    true,
                ListMode.Show,
                    14496011.7211,
                    34307.0627,
                    0.8564,
                    true,
                    "eveniet id ipsam",
                    true,
                    "quia",
                new LayerFloorInfo("hic"),
                [new Label(LabelPlacement.BelowRight,
                        "odit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        14874590.1411,
                        44895.8306,
                        true,
                        new Dimension(285.9481),
                    new TextSymbol("voluptates eligendi expedita",
                        new MapColor(221, 216, 219),
                        new MapColor(65, 105, 102),
                            new Dimension(424.8037),
                        new MapFont(new Dimension(122.9563),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            797.5310,
                        new MapColor(154, 126, 94),
                        new MapColor(165, 155, 0),
                            758.9655,
                        HorizontalAlignment.Left,
                            true,
                            375.6397,
                            new Dimension(709.3914),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("pariatur impedit recusandae",
                        "quia",
                        ["delectus",
                            "voluptatem",
                            "rerum",
                            "qui"],
                    [new FieldInfo("email",
                            "voluptatibus",
                            "eligendi",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLeLongTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("createdAt",
                            "sunt",
                            "temporibus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("phone",
                            "et",
                            "soluta",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("comment",
                            "iure",
                            "cumque",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new MediaPopupContent("excepturi et a",
                            "quia ullam est dolorem nesciunt",
                        [new LineChartMediaInfo("qui reprehenderit magni",
                                "delectus",
                                "aut exercitationem autem",
                            new ChartMediaInfoValue(["possimus",
                                    "voluptate",
                                    "iusto",
                                    "et"],
                                    "cum",
                                    "est",
                                [new ChartMediaInfoValueSeries("name",
                                        "veniam",
                                        537.2599),
                                new ChartMediaInfoValueSeries("name",
                                        "quaerat",
                                        388.0516),
                                new ChartMediaInfoValueSeries("group",
                                        "in",
                                        199.3370)],
                                [new MapColor(16, 220, 253),
                                new MapColor(83, 100, 93),
                                new MapColor(81, 64, 208),
                                new MapColor(80, 180, 212)])),
                        new PieChartMediaInfo("non qui ullam",
                                "natus",
                                "quis eius ipsam",
                            new ChartMediaInfoValue(["ipsa",
                                    "impedit",
                                    "et",
                                    "perferendis"],
                                    "culpa",
                                    "in",
                                [new ChartMediaInfoValueSeries("token",
                                        "explicabo",
                                        103.0740),
                                new ChartMediaInfoValueSeries("name",
                                        "corporis",
                                        566.6401)],
                                [new MapColor(152, 251, 238)])),
                        new ColumnChartMediaInfo("assumenda sapiente saepe",
                                "ipsum",
                                "delectus natus vitae",
                            new ChartMediaInfoValue(["rem",
                                    "qui"],
                                    "vel",
                                    "et",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "aperiam",
                                        53.2886),
                                new ChartMediaInfoValueSeries("status",
                                        "consequatur",
                                        310.6052),
                                new ChartMediaInfoValueSeries("group",
                                        "fuga",
                                        284.6054),
                                new ChartMediaInfoValueSeries("phone",
                                        "nostrum",
                                        279.7500)],
                                [new MapColor(150, 197, 164)]))],
                            1),
                    new FieldsPopupContent([new FieldInfo("avatar",
                                "voluptatem",
                                "voluptates",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateShortTime24),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("category",
                                "assumenda",
                                "voluptas",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(6,
                                    true,
                                DateFormat.ShortDateLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("name",
                                "sit",
                                "ut",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("comment",
                                "ad",
                                "inventore",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongMonthDayYearShortTime),
                                true,
                                true,
                            StatisticType.Avg)],
                            "maiores tenetur delectus reiciendis est totam",
                            "corporis delectus et"),
                    new FieldsPopupContent([new FieldInfo("email",
                                "vitae",
                                "culpa",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("avatar",
                                "quae",
                                "officia",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeShortTime24),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("phone",
                                "quo",
                                "amet",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Min)],
                            "maxime tempore quod repellendus",
                            "hic doloremque iste"),
                    new AttachmentsPopupContent("blanditiis quisquam et",
                            "magnam tenetur ut consequatur nisi debitis beatae",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "status",
                            "odit illum possimus",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "title",
                            "voluptas sequi molestiae",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "avatar",
                            "cum vel mollitia",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "name",
                            "saepe veritatis repellat",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("et provident natus",
                            "a13c3bf3-df03-1eb4-d988-e7081ea49020",
                            () => { Console.WriteLine("porro"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "nam"),
                    new ActionToggle("doloribus sit consequuntur",
                            "1c3f5fd6-b5fc-6e05-7033-86cadf0443eb",
                            () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "officiis"),
                    new ActionToggle("quidem veniam reprehenderit",
                            "ee3d7afc-2a4b-132d-b37f-2ebbaeb5c900",
                            () => { Console.WriteLine("optio"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "distinctio"),
                    new ActionButton("fugit vel reprehenderit",
                            "https://picsum.photos/640/480/?image=515",
                            "2f6574dc-ae4b-c164-8062-8d393b21b53b",
                            () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                            "category",
                            true,
                            true,
                            true,
                            "quod")])),
            new Sublayer(1,
                    true,
                    true,
                ListMode.Hide,
                    41125716.6258,
                    38565.4507,
                    0.8559,
                    true,
                    "est excepturi molestiae",
                    true,
                    "perferendis",
                new LayerFloorInfo("est"),
                [new Label(LabelPlacement.AboveCenter,
                        "dolorem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        34980770.1268,
                        38574.1031,
                        true,
                        new Dimension(300.7248),
                    new TextSymbol("quisquam nesciunt culpa",
                        new MapColor(220, 72, 18),
                        new MapColor(228, 45, 246),
                            new Dimension(179.8599),
                        new MapFont(new Dimension(552.1166),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            868.2125,
                        new MapColor(243, 221, 16),
                        new MapColor(23, 165, 86),
                            24.8902,
                        HorizontalAlignment.Right,
                            true,
                            492.8827,
                            new Dimension(803.5374),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.BelowBefore,
                        "nam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        47494989.3384,
                        45736.9756,
                        true,
                        new Dimension(73.0816),
                    new TextSymbol("est ut officia",
                        new MapColor(196, 7, 132),
                        new MapColor(144, 9, 136),
                            new Dimension(295.9639),
                        new MapFont(new Dimension(406.7854),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            244.8843,
                        new MapColor(58, 206, 4),
                        new MapColor(75, 188, 55),
                            532.4766,
                        HorizontalAlignment.Left,
                            true,
                            211.3208,
                            new Dimension(272.4765),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.BelowEnd,
                        "voluptatem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        21980167.3883,
                        16844.6735,
                        true,
                        new Dimension(673.0099),
                    new TextSymbol("voluptatum architecto qui",
                        new MapColor(70, 180, 250),
                        new MapColor(158, 164, 186),
                            new Dimension(567.9767),
                        new MapFont(new Dimension(287.0397),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            375.9687,
                        new MapColor(16, 148, 39),
                        new MapColor(100, 61, 209),
                            723.2600,
                        HorizontalAlignment.Left,
                            true,
                            664.5251,
                            new Dimension(242.1744),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("consequuntur sed est",
                        "doloribus",
                        ["quae",
                            "beatae",
                            "sed",
                            "excepturi"],
                    [new FieldInfo("comment",
                            "tenetur",
                            "maxime",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("title",
                            "et",
                            "deserunt",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("title",
                            "laudantium",
                            "nesciunt",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLongTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new FieldsPopupContent([new FieldInfo("status",
                                "ipsam",
                                "autem",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Sum)],
                            "nostrum fugiat repellendus sint",
                            "necessitatibus dolorum facere"),
                    new FieldsPopupContent([new FieldInfo("name",
                                "doloribus",
                                "est",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(4,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Stddev),
                        new FieldInfo("comment",
                                "laborum",
                                "neque",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongMonthDayYear),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("name",
                                "dolores",
                                "molestias",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Avg)],
                            "quidem qui incidunt ea",
                            "vel sapiente accusamus"),
                    new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                "et",
                                "eos consectetur recusandae"))],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "createdAt",
                            "placeat et illo",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "updatedAt",
                            "et molestiae illo",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "group",
                            "repellat ut omnis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "token",
                            "sit a architecto",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("exercitationem optio quibusdam",
                            "50bca9ff-b789-99a2-cb4d-1337a696086b",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "velit")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(774.9549,
                    TileInfoFormat.Pdf,
                    true,
                [new LOD(6,
                        "dolores",
                        26.2629,
                        5271914.1240),
                new LOD(3,
                        "rerum",
                        78.4928,
                        10306602.0435),
                new LOD(9,
                        "omnis",
                        80.1049,
                        17564123.3250),
                new LOD(9,
                        "id",
                        11.2925,
                        3283098.5141)],
                new Point(126.8213,
                        -60.3113,
                        -138.2385,
                        10.4723,
                        266.5986,
                    new SpatialReference(1,
                            "quas",
                            "sit",
                            "maxime"),
                        true,
                        true,
                        79.7523),
                    [7,
                        4],
                new SpatialReference(2,
                        "et",
                        "et",
                        "corrupti"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2009, 7, 12, 2, 47, 20),
                    new DateTime(2010, 5, 22, 2, 41, 38));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
