@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("aliquid")"
                        BlendMode="@(BlendMode.Overlay)"
                        Copyright="@("eaque")"
                        Effect="@(new Effect("omnis",
                            18387018.7789))"
                        FullExtent="@(new Extent(83.5268,
                                -152.4108,
                                9.5680,
                                35.7952,
                                36.8206,
                                570.3002,
                                464.0936,
                                407.4333,
                            new SpatialReference(5,
                                    "reprehenderit",
                                    "vel",
                                    "unde"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(40255359.4560)"
                        MinScale="@(5497.4741)"
                        Opacity="@(0.0238)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(357.8266)"
                        Resampling="@(true)"
                        TileServers="@(["distinctio",
                            "tenetur",
                            "sed"])"
                        Title="@("possimus sed et")"
                        Url="@("https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2007, 10, 12, 22, 43, 15))"
                            End="@(new DateTime(2007, 1, 18, 3, 46, 12))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(764.9483)"
                            Format="@(TileInfoFormat.Svg)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(3,
                                    "illo",
                                    95.5551,
                                    40003332.8409)])"
                            Origin="@(new Point(43.8522,
                                    -42.6340,
                                    168.1536,
                                    63.7443,
                                    288.8665,
                                new SpatialReference(2,
                                        "sed",
                                        "sed",
                                        "itaque"),
                                    true,
                                    true,
                                    678.0043))"
                            Size="@([1,
                                2,
                                4,
                                3])"
                            SpatialReference="@(new SpatialReference(5,
                                    "quo",
                                    "culpa",
                                    "harum"))">
                        </TileInfo>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(8)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(35845541.2236)"
                            MinScale="@(28977.2013)"
                            Opacity="@(0.1828)"
                            PopupEnabled="@(true)"
                            Title="@("vitae laboriosam et")"
                            Visible="@(true)"
                            DefinitionExpression="@("iusto")"
                            FloorInfo="@(new LayerFloorInfo("eos"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveCenter,
                                    "eius",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    5546296.2759,
                                    45841.4331,
                                    true,
                                    new Dimension(130.3801),
                                new TextSymbol("accusamus neque in",
                                    new MapColor(51, 209, 121),
                                    new MapColor(163, 40, 167),
                                        new Dimension(0.2964),
                                    new MapFont(new Dimension(606.5016),
                                            "Verdana",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        238.3025,
                                    new MapColor(204, 46, 30),
                                    new MapColor(221, 143, 20),
                                        257.9800,
                                    HorizontalAlignment.Center,
                                        true,
                                        806.3732,
                                        new Dimension(301.7347),
                                        true),
                                    true,
                                    "Country = 'Canada'"),
                            new Label(LabelPlacement.AboveEnd,
                                    "est",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    24806202.4002,
                                    34092.7359,
                                    true,
                                    new Dimension(326.7158),
                                new TextSymbol("corrupti at enim",
                                    new MapColor(83, 122, 154),
                                    new MapColor(126, 65, 125),
                                        new Dimension(725.2589),
                                    new MapFont(new Dimension(62.0708),
                                            "Helvetica",
                                        MapFontStyle.Italic,
                                        FontWeight.Normal,
                                        TextDecoration.None),
                                        371.7697,
                                    new MapColor(9, 187, 254),
                                    new MapColor(106, 122, 232),
                                        502.2122,
                                    HorizontalAlignment.Left,
                                        true,
                                        802.0174,
                                        new Dimension(475.5098),
                                        true),
                                    true,
                                    "Country = 'Canada'"),
                            new Label(LabelPlacement.CenterCenter,
                                    "earum",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    30745343.2611,
                                    1646.2106,
                                    true,
                                    new Dimension(0.9329),
                                new TextSymbol("reiciendis nulla non",
                                    new MapColor(66, 200, 236),
                                    new MapColor(115, 84, 221),
                                        new Dimension(918.0161),
                                    new MapFont(new Dimension(880.6421),
                                            "Georgia",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        899.4760,
                                    new MapColor(77, 111, 230),
                                    new MapColor(241, 159, 2),
                                        852.9676,
                                    HorizontalAlignment.Left,
                                        true,
                                        175.0256,
                                        new Dimension(207.2699),
                                        true),
                                    true,
                                    "City = 'Toronto'")])"
                            PopupTemplate="@(new PopupTemplate("quaerat expedita ex",
                                    "quidem",
                                    ["tenetur",
                                        "reprehenderit"],
                                [new FieldInfo("status",
                                        "quos",
                                        "commodi",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.ShortDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new FieldsPopupContent([new FieldInfo("comment",
                                            "aut",
                                            "ex",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateLeShortTime),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("password",
                                            "maiores",
                                            "sed",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("title",
                                            "voluptatibus",
                                            "iste",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.ShortDateLeLongTime),
                                            true,
                                            true,
                                        StatisticType.Count)],
                                        "illum ex maiores et autem modi sed",
                                        "sunt eaque quasi")],
                                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "group",
                                        "molestiae velit est",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("repudiandae magnam nemo",
                                        "43c539a2-1e13-3ae4-4144-df9bec9ba5ad",
                                        () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "createdAt",
                                        "facilis"),
                                new ActionToggle("nemo rerum distinctio",
                                        "b13d3644-5d45-fec1-6f21-c78f1c7583ca",
                                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "category",
                                        "voluptas")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(9, 18, 48),
                                            new MapColor(141, 143, 10)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(198, 8, 7),
                                            new MapColor(152, 32, 14)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(156, 214, 91),
                                            new MapColor(47, 50, 172))]),
                                        743.1914,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(856.3941,
                                                133.0234),
                                        new AuthoringInfoField1ClassBreakInfos(163.3798,
                                                345.7614),
                                        new AuthoringInfoField1ClassBreakInfos(94.8196,
                                                463.4133),
                                        new AuthoringInfoField1ClassBreakInfos(290.3966,
                                                231.9114)],
                                            "eveniet",
                                            "consectetur",
                                            "laudantium"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(300.0943,
                                                673.5168)],
                                            "consectetur",
                                            "dolorum",
                                            "voluptatem"),
                                        ["iste",
                                            "reprehenderit",
                                            "ut"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "et",
                                        true,
                                    LengthUnit.Millimeters,
                                        273.6306,
                                        98.4282,
                                        950.0016,
                                        905.3096),
                                new PictureFillSymbol("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0",
                                    new Dimension(522.8587),
                                    new Dimension(665.9153),
                                    new Dimension(99.4867),
                                    new Dimension(471.2047),
                                    32.9852,
                                    -26.6023,
                                    new Outline(new MapColor(79, 190, 122),
                                        new Dimension(173.8161),
                                        SimpleLineSymbolStyle.Dash,
                                        Cap.Round,
                                        Join.Round,
                                        new LineSymbolMarker(new MapColor(184, 18, 142),
                                            LinePlacement.End,
                                            LineSymbolMarkerStyle.Cross),
                                        914.8069),
                                    new MapColor(213, 251, 152)),
                                    "et",
                                    new DefaultSymbol(),
                                    "quas",
                                    "id",
                                    "ratione",
                                    "est",
                                new UniqueValueRendererLegendOptions("esse beatae cumque"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("quasi",
                                        new TextSymbol("dolor facilis et",
                                            new MapColor(69, 184, 190),
                                            new MapColor(183, 143, 14),
                                                new Dimension(703.9460),
                                            new MapFont(new Dimension(914.7226),
                                                    "Palatino",
                                                MapFontStyle.Normal,
                                                FontWeight.Lighter,
                                                TextDecoration.Underline),
                                                352.4372,
                                            new MapColor(226, 113, 205),
                                            new MapColor(201, 196, 81),
                                                433.3688,
                                            HorizontalAlignment.Right,
                                                true,
                                                568.8674,
                                                new Dimension(362.3287),
                                                true),
                                        [new UniqueValue("id",
                                                "minus",
                                                "ut"),
                                        new UniqueValue("nulla",
                                                "minima",
                                                "commodi"),
                                        new UniqueValue("est",
                                                "corrupti",
                                                "nostrum"),
                                        new UniqueValue("facilis",
                                                "hic",
                                                "voluptas")]),
                                    new UniqueValueClass("fuga",
                                        new TextSymbol("voluptatem aut omnis",
                                            new MapColor(43, 201, 113),
                                            new MapColor(239, 53, 14),
                                                new Dimension(125.6300),
                                            new MapFont(new Dimension(649.5457),
                                                    "Times New Roman",
                                                MapFontStyle.Italic,
                                                FontWeight.Bolder,
                                                TextDecoration.None),
                                                870.9284,
                                            new MapColor(133, 47, 104),
                                            new MapColor(178, 25, 83),
                                                171.0835,
                                            HorizontalAlignment.Right,
                                                true,
                                                517.1106,
                                                new Dimension(199.7554),
                                                true),
                                        [new UniqueValue("deserunt",
                                                "at",
                                                "rerum"),
                                        new UniqueValue("beatae",
                                                "repellendus",
                                                "quod"),
                                        new UniqueValue("iste",
                                                "aut",
                                                "minus")])],
                                        "voluptas"),
                                new UniqueValueGroup([new UniqueValueClass("quod",
                                        new TextSymbol("amet facere est",
                                            new MapColor(132, 44, 178),
                                            new MapColor(60, 153, 224),
                                                new Dimension(341.9526),
                                            new MapFont(new Dimension(718.4689),
                                                    "Garamond",
                                                MapFontStyle.Italic,
                                                FontWeight.Lighter,
                                                TextDecoration.None),
                                                844.4071,
                                            new MapColor(59, 161, 62),
                                            new MapColor(33, 153, 75),
                                                394.3335,
                                            HorizontalAlignment.Center,
                                                true,
                                                155.5661,
                                                new Dimension(280.6235),
                                                true),
                                        [new UniqueValue("ea",
                                                "sed",
                                                "natus"),
                                        new UniqueValue("dolorum",
                                                "quae",
                                                "voluptatem"),
                                        new UniqueValue("similique",
                                                "vero",
                                                "est"),
                                        new UniqueValue("dolorem",
                                                "quos",
                                                "sint")]),
                                    new UniqueValueClass("vel",
                                        new TextSymbol("aperiam saepe odio",
                                            new MapColor(18, 134, 77),
                                            new MapColor(155, 106, 44),
                                                new Dimension(84.2284),
                                            new MapFont(new Dimension(112.2914),
                                                    "Times New Roman",
                                                MapFontStyle.Normal,
                                                FontWeight.Normal,
                                                TextDecoration.None),
                                                71.9515,
                                            new MapColor(28, 130, 61),
                                            new MapColor(234, 149, 17),
                                                814.6988,
                                            HorizontalAlignment.Center,
                                                true,
                                                512.8885,
                                                new Dimension(647.9913),
                                                true),
                                        [new UniqueValue("est",
                                                "quidem",
                                                "odio")])],
                                        "magnam")],
                                [new UniqueValueInfo("aspernatur",
                                    new TextSymbol("veritatis at ab",
                                        new MapColor(167, 155, 124),
                                        new MapColor(84, 205, 124),
                                            new Dimension(622.8910),
                                        new MapFont(new Dimension(512.6312),
                                                "Georgia",
                                            MapFontStyle.Normal,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            452.4401,
                                        new MapColor(82, 123, 63),
                                        new MapColor(247, 239, 42),
                                            578.1471,
                                        HorizontalAlignment.Left,
                                            true,
                                            54.5006,
                                            new Dimension(950.9121),
                                            true),
                                        "natus"),
                                new UniqueValueInfo("ratione",
                                    new TextSymbol("aut et consectetur",
                                        new MapColor(31, 27, 124),
                                        new MapColor(54, 227, 167),
                                            new Dimension(535.9218),
                                        new MapFont(new Dimension(481.6798),
                                                "Times New Roman",
                                            MapFontStyle.Italic,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            965.3812,
                                        new MapColor(204, 58, 110),
                                        new MapColor(85, 115, 193),
                                            16.8224,
                                        HorizontalAlignment.Right,
                                            true,
                                            487.2565,
                                            new Dimension(272.1430),
                                            true),
                                        "quibusdam"),
                                new UniqueValueInfo("pariatur",
                                    new TextSymbol("voluptatem et voluptatem",
                                        new MapColor(224, 74, 165),
                                        new MapColor(32, 142, 70),
                                            new Dimension(475.5714),
                                        new MapFont(new Dimension(887.4212),
                                                "Verdana",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.Underline),
                                            362.8895,
                                        new MapColor(153, 147, 88),
                                        new MapColor(53, 248, 95),
                                            673.9759,
                                        HorizontalAlignment.Right,
                                            true,
                                            506.5911,
                                            new Dimension(274.6386),
                                            true),
                                        "et")],
                                    "alias",
                                    "facere quidem quod"))"
                            Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(7)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(18259973.7347)"
                                MinScale="@(31647.6948)"
                                Opacity="@(0.8713)"
                                PopupEnabled="@(true)"
                                Title="@("nisi dolore amet")"
                                Visible="@(true)"
                                DefinitionExpression="@("quia")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(4)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(6794563.0771)"
                                    MinScale="@(16069.8589)"
                                    Opacity="@(0.2887)"
                                    PopupEnabled="@(true)"
                                    Title="@("labore itaque sed")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("illum")"
                                    Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                    <Sublayer 
                                        SublayerId="@(9)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(2927175.5556)"
                                        MinScale="@(18774.1498)"
                                        Opacity="@(0.2447)"
                                        PopupEnabled="@(true)"
                                        Title="@("rem iste itaque")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("sunt")"
                                        Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(3)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(27702088.6664)"
                                            MinScale="@(20330.5403)"
                                            Opacity="@(0.4633)"
                                            PopupEnabled="@(true)"
                                            Title="@("nihil eos ex")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("alias")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(3)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(36811504.4092)"
                                                MinScale="@(30491.9115)"
                                                Opacity="@(0.2095)"
                                                PopupEnabled="@(true)"
                                                Title="@("quo nemo quaerat")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("libero")"
                                                Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(4)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(18125181.4326)"
                                                    MinScale="@(27796.3211)"
                                                    Opacity="@(0.6584)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("porro nihil aut")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("consequatur")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("unde corrupti dolores")"
                                                        StringContent="@("illo")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("molestiae")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("adipisci tempore delectus")"
                                                    StringContent="@("perferendis")"
                                                    OutFields="@(["voluptatem",
                                                        "soluta",
                                                        "possimus",
                                                        "libero"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new RelationshipPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "d47af197-29ac-80a0-59c4-aadfa4520bda",
                                                            () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveCenter)"
                                                    LabelExpression="@("et")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(38315183.9819)"
                                                    MinScale="@(49078.9074)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(921.9744))"
                                                    Symbol="@(new TextSymbol("et ullam ea"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("odit")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                    new MultipartColorRamp(),
                                                        590.6702,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["esse",
                                                            "qui"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "quis",
                                                        true,
                                                    LengthUnit.Decimeters,
                                                        181.6605,
                                                        938.4891,
                                                        114.9922,
                                                        49.2817))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("facere veniam animi")"
                                                StringContent="@("dolore")"
                                                OutFields="@(["non",
                                                    "eos",
                                                    "eius"])"
                                                FieldInfos="@([new FieldInfo("email",
                                                        "fugit",
                                                        "aut",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("phone",
                                                        "et",
                                                        "ipsam",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max),
                                                new FieldInfo("token",
                                                        "optio",
                                                        "rem",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("name",
                                                        "placeat",
                                                        "omnis",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)])"
                                                Content="@([new TextPopupContent("expedita quia aut"),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "quia dolores cupiditate ullam quisquam",
                                                        "recusandae qui est"),
                                                new ExpressionPopupContent(new ElementExpressionInfo()),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                        "comment",
                                                        "at nihil modi"),
                                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                        "name",
                                                        "distinctio laboriosam recusandae")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("magni ut accusantium",
                                                        "f0e367b8-fc63-9189-fb98-9ec0f1765a34",
                                                        () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "createdAt",
                                                        "dicta")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowBefore)"
                                                LabelExpression="@("est")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(36890694.2953)"
                                                MinScale="@(32054.8422)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(39.0189))"
                                                Symbol="@(new TextSymbol("magnam sint laborum",
                                                    new MapColor(45, 160, 135),
                                                    new MapColor(128, 49, 88),
                                                        null,
                                                    new MapFont(),
                                                        421.7996,
                                                    new MapColor(28, 11, 153),
                                                    new MapColor(113, 148, 69),
                                                        799.3585,
                                                    HorizontalAlignment.Right,
                                                        true,
                                                        955.2947,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Country = 'Canada'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quaerat")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch)]),
                                                    368.9265,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "molestiae",
                                                        "ut",
                                                        "possimus"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "et",
                                                        "qui",
                                                        "rerum"),
                                                    ["cumque",
                                                        "dolorem",
                                                        "nisi"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "et",
                                                    true,
                                                LengthUnit.UsFeet,
                                                    839.5939,
                                                    690.0978,
                                                    161.0959,
                                                    149.3595))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("cupiditate mollitia dolor")"
                                            StringContent="@("quisquam")"
                                            OutFields="@(["quod",
                                                "earum",
                                                "dolores"])"
                                            FieldInfos="@([new FieldInfo("token",
                                                    "repellat",
                                                    "et",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.ShortDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Max)])"
                                            Content="@([new TextPopupContent("doloribus eligendi adipisci"),
                                            new AttachmentsPopupContent("minus adipisci sapiente",
                                                    "perferendis dignissimos ut labore",
                                                    AttachmentsPopupContentDisplayType.Preview),
                                            new RelationshipPopupContent("nam et doloremque",
                                                    "aspernatur mollitia optio vel",
                                                    7,
                                                    "consequatur",
                                                [new RelatedRecordsInfoFieldOrder("et",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("doloremque",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("quidem",
                                                    OrderBy.Desc)],
                                                    9),
                                            new TextPopupContent("maxime pariatur et")])"
                                            ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                    "avatar",
                                                    "qui corrupti aut",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("nobis aperiam rerum",
                                                    "https://picsum.photos/640/480/?image=14",
                                                    "815c1dc0-7f5e-fb4a-8c5f-c4f72869266f",
                                                    () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                                                    "token",
                                                    true,
                                                    true,
                                                    true,
                                                    "consectetur"),
                                            new ActionButton("velit accusamus voluptatum",
                                                    "https://picsum.photos/640/480/?image=1019",
                                                    "105b742a-62eb-ef1f-16b6-b05d19b4429f",
                                                    () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                                    "name",
                                                    true,
                                                    true,
                                                    true,
                                                    "aut"),
                                            new ActionButton("illum soluta nesciunt",
                                                    "https://picsum.photos/640/480/?image=670",
                                                    "86394527-13c2-bbc7-cba2-8cb7a80d96e2",
                                                    () => { Console.WriteLine("ipsum"); return Task.CompletedTask; },
                                                    "category",
                                                    true,
                                                    true,
                                                    true,
                                                    "cupiditate")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterCenter)"
                                            LabelExpression="@("possimus")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(15087796.9907)"
                                            MinScale="@(33707.9438)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(968.3722))"
                                            Symbol="@(new TextSymbol("nam quia libero",
                                                new MapColor(154, 101, 122),
                                                new MapColor(195, 237, 90),
                                                    new Dimension(659.7092),
                                                new MapFont(new Dimension(717.0425),
                                                        "Courier New",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Bolder,
                                                    TextDecoration.LineThrough),
                                                    429.6958,
                                                new MapColor(232, 44, 149),
                                                new MapColor(133, 2, 34),
                                                    376.9710,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    380.2848,
                                                    new Dimension(813.8128),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("PostalCode = 'M5V 1J9'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("asperiores")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(192, 112, 191),
                                                    new MapColor(139, 68, 242)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(223, 27, 175),
                                                    new MapColor(14, 73, 211)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(223, 25, 115),
                                                    new MapColor(98, 221, 186)),
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(208, 78, 201),
                                                    new MapColor(144, 4, 254))]),
                                                531.8925,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(722.5712,
                                                        746.5115),
                                                new AuthoringInfoField1ClassBreakInfos(13.4860,
                                                        363.2816),
                                                new AuthoringInfoField1ClassBreakInfos(682.2419,
                                                        955.3670),
                                                new AuthoringInfoField1ClassBreakInfos(188.8054,
                                                        750.2085)],
                                                    "cumque",
                                                    "laudantium",
                                                    "aut"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(396.9513,
                                                        500.1406),
                                                new AuthoringInfoField1ClassBreakInfos(495.7918,
                                                        179.9177),
                                                new AuthoringInfoField1ClassBreakInfos(357.1691,
                                                        537.7390),
                                                new AuthoringInfoField1ClassBreakInfos(173.0979,
                                                        217.9374)],
                                                    "nihil",
                                                    "sint",
                                                    "ex"),
                                                ["iusto",
                                                    "ut"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "fugiat",
                                                true,
                                            LengthUnit.Kilometers,
                                                374.9226,
                                                546.3056,
                                                914.7136,
                                                407.7251))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("error aut provident")"
                                        StringContent="@("debitis")"
                                        OutFields="@(["ipsum",
                                            "earum"])"
                                        FieldInfos="@([new FieldInfo("avatar",
                                                "veritatis",
                                                "labore",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(9,
                                                    true,
                                                DateFormat.LongDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("status",
                                                "ut",
                                                "ea",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDate),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("category",
                                                "consectetur",
                                                "itaque",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Sum),
                                        new FieldInfo("email",
                                                "itaque",
                                                "nihil",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.DayShortMonthYear),
                                                true,
                                                true,
                                            StatisticType.Max)])"
                                        Content="@([new AttachmentsPopupContent("iusto voluptas eius",
                                                "dolorem exercitationem aliquam et illo ut qui",
                                                AttachmentsPopupContentDisplayType.Preview),
                                        new RelationshipPopupContent("repellat et quod",
                                                "dolor voluptas ea labore dolores sed nihil",
                                                5,
                                                "et",
                                            [new RelatedRecordsInfoFieldOrder("facilis",
                                                OrderBy.Desc)],
                                                4)])"
                                        ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                "status",
                                                "et molestiae et",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "email",
                                                "soluta officiis perferendis",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature['FieldName'];",
                                                "avatar",
                                                "voluptatibus explicabo delectus",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "title",
                                                "tenetur quis aperiam",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("architecto autem et",
                                                "https://picsum.photos/640/480/?image=154",
                                                "b23d30ae-3742-0db3-8681-e65cfa2d56c1",
                                                () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "officiis"),
                                        new ActionToggle("cupiditate atque necessitatibus",
                                                "e2051b88-a86f-0def-acf1-135315b2e3b4",
                                                () => { Console.WriteLine("eos"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "avatar",
                                                "excepturi"),
                                        new ActionButton("laborum cupiditate ipsum",
                                                "https://picsum.photos/640/480/?image=1067",
                                                "32182a9c-128b-ca4c-839a-6c56d378fc5b",
                                                () => { Console.WriteLine("excepturi"); return Task.CompletedTask; },
                                                "updatedAt",
                                                true,
                                                true,
                                                true,
                                                "doloremque"),
                                        new ActionToggle("aut ut nostrum",
                                                "ba0d92b2-ddfa-96c9-8e17-b5ee41d1b200",
                                                () => { Console.WriteLine("temporibus"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "title",
                                                "ullam")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterLeft)"
                                        LabelExpression="@("sit")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(9701814.5479)"
                                        MinScale="@(21063.5725)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(757.1892))"
                                        Symbol="@(new TextSymbol("accusamus ullam non",
                                            new MapColor(252, 138, 164),
                                            new MapColor(145, 128, 58),
                                                new Dimension(728.7794),
                                            new MapFont(new Dimension(504.1589),
                                                    "Verdana",
                                                MapFontStyle.Normal,
                                                FontWeight.Lighter,
                                                TextDecoration.None),
                                                955.8344,
                                            new MapColor(191, 146, 119),
                                            new MapColor(89, 205, 185),
                                                749.0593,
                                            HorizontalAlignment.Left,
                                                true,
                                                35.9687,
                                                new Dimension(538.5064),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Phone = '555-555-5555'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("laborum")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(36, 182, 48),
                                            new MapColor(42, 155, 160)),
                                            643.1926,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(40.6523,
                                                    760.6607),
                                            new AuthoringInfoField1ClassBreakInfos(970.4549,
                                                    140.6829),
                                            new AuthoringInfoField1ClassBreakInfos(911.8861,
                                                    277.3712),
                                            new AuthoringInfoField1ClassBreakInfos(38.5102,
                                                    177.7612)],
                                                "sequi",
                                                "ut",
                                                "repellat"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(54.3388,
                                                    358.0350),
                                            new AuthoringInfoField1ClassBreakInfos(175.4640,
                                                    613.0042),
                                            new AuthoringInfoField1ClassBreakInfos(252.3837,
                                                    966.6682),
                                            new AuthoringInfoField1ClassBreakInfos(636.7427,
                                                    944.1202)],
                                                "dicta",
                                                "ut",
                                                "ut"),
                                            ["est",
                                                "omnis",
                                                "doloribus"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "amet",
                                            true,
                                        LengthUnit.Millimeters,
                                            834.6543,
                                            668.4754,
                                            660.0271,
                                            716.6396))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("vitae et inventore")"
                                    StringContent="@("nam")"
                                    OutFields="@(["provident",
                                        "aut",
                                        "est",
                                        "eum"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "consequuntur",
                                            "qui",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.DayShortMonthYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("title",
                                            "repudiandae",
                                            "similique",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.ShortDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Avg)])"
                                    Content="@([new AttachmentsPopupContent("voluptatem cum numquam",
                                            "doloremque perspiciatis voluptas laborum fugiat",
                                            AttachmentsPopupContentDisplayType.Preview),
                                    new RelationshipPopupContent("qui quaerat aut",
                                            "beatae natus repudiandae sed voluptatibus et odio",
                                            5,
                                            "itaque",
                                        [new RelatedRecordsInfoFieldOrder("in",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("consequatur",
                                            OrderBy.Asc)],
                                            5),
                                    new TextPopupContent("dolores quia ut"),
                                    new RelationshipPopupContent("recusandae eligendi cupiditate",
                                            "maxime fuga reprehenderit qui et",
                                            9,
                                            "quis",
                                        [new RelatedRecordsInfoFieldOrder("dolor",
                                            OrderBy.Asc)],
                                            2)])"
                                    ExpressionInfos="@([new ExpressionInfo("return Date();",
                                            "group",
                                            "doloremque quas velit",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "createdAt",
                                            "similique pariatur est",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("quasi sint saepe",
                                            "https://picsum.photos/640/480/?image=308",
                                            "8eb8a188-1a07-fac3-db3a-c419ab7d6226",
                                            () => { Console.WriteLine("laborum"); return Task.CompletedTask; },
                                            "updatedAt",
                                            true,
                                            true,
                                            true,
                                            "totam"),
                                    new ActionToggle("ea aspernatur quia",
                                            "2ab1bab7-3fcc-4ab0-62ab-748687a350fa",
                                            () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "password",
                                            "eveniet")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterRight)"
                                    LabelExpression="@("incidunt")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(6683483.3885)"
                                    MinScale="@(2807.5130)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(693.8232))"
                                    Symbol="@(new TextSymbol("et quia repellat",
                                        new MapColor(238, 156, 57),
                                        new MapColor(43, 135, 86),
                                            new Dimension(154.1698),
                                        new MapFont(new Dimension(255.6717),
                                                "Garamond",
                                            MapFontStyle.Normal,
                                            FontWeight.Bold,
                                            TextDecoration.None),
                                            860.1140,
                                        new MapColor(99, 42, 158),
                                        new MapColor(196, 145, 66),
                                            9.9994,
                                        HorizontalAlignment.Right,
                                            true,
                                            579.0749,
                                            new Dimension(568.6524),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("City = 'Toronto'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("eum")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(599.7365,
                301.3500,
                71.0817,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(1);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(995.5239,
                959.7407,
                211.6981);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.Invert;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-15.0129,
                    -107.8383,
                    -83.4651,
                    -25.3997,
                    379.0988,
                    115.3529,
                    546.2990,
                    382.4843,
                new SpatialReference(8,
                        "ab",
                        "vero",
                        "illum"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(3,
                    true,
                    true,
                ListMode.Show,
                    6487648.3408,
                    27174.3156,
                    0.3734,
                    true,
                    "aliquam veniam omnis",
                    true,
                    "non",
                new LayerFloorInfo("voluptatum"),
                [new Label(LabelPlacement.CenterAlong,
                        "consequatur",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        23965685.8543,
                        2756.0244,
                        true,
                        new Dimension(162.1695),
                    new TextSymbol("iste ut enim",
                        new MapColor(29, 131, 28),
                        new MapColor(228, 166, 52),
                            new Dimension(619.0987),
                        new MapFont(new Dimension(431.7959),
                                "Palatino",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            255.5420,
                        new MapColor(152, 116, 160),
                        new MapColor(203, 91, 62),
                            765.6005,
                        HorizontalAlignment.Left,
                            true,
                            733.5203,
                            new Dimension(721.5499),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("non qui consequatur",
                        "ullam",
                        ["repellendus",
                            "incidunt",
                            "accusantium"],
                    [new FieldInfo("token",
                            "corporis",
                            "quod",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongDateShortTime),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("comment",
                            "tempora",
                            "magnam",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongMonthDayYearLongTime),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("category",
                            "incidunt",
                            "aut",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("id",
                            "repellendus",
                            "sint",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Count)],
                    [new FieldsPopupContent([new FieldInfo("group",
                                "laudantium",
                                "et",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(7,
                                    true,
                                DateFormat.ShortDateLe),
                                true,
                                true,
                            StatisticType.Var),
                        new FieldInfo("comment",
                                "dolorem",
                                "sequi",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.LongDateLongTime),
                                true,
                                true,
                            StatisticType.Min),
                        new FieldInfo("createdAt",
                                "sint",
                                "aut",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.LongMonthDayYearLongTime),
                                true,
                                true,
                            StatisticType.Max)],
                            "sapiente non consectetur impedit fuga",
                            "quas aut porro"),
                    new AttachmentsPopupContent("qui est culpa",
                            "est odit ut eos est",
                            AttachmentsPopupContentDisplayType.Auto),
                    new AttachmentsPopupContent("atque dolor repellat",
                            "nam porro sequi similique modi",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return Date();",
                            "category",
                            "perspiciatis consequatur a",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "title",
                            "culpa sed quibusdam",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("earum beatae et",
                            "84232b01-8399-89a6-5607-d8500b036998",
                            () => { Console.WriteLine("natus"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "password",
                            "consequatur"),
                    new ActionToggle("quis ad ipsam",
                            "e23e19f8-3d97-317e-1dc9-8dd51fee9f2b",
                            () => { Console.WriteLine("dolores"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "nihil")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(184.6501,
                    TileInfoFormat.Gif,
                    true,
                [new LOD(1,
                        "vel",
                        27.3340,
                        1875624.9604),
                new LOD(3,
                        "in",
                        95.8573,
                        28993581.4164),
                new LOD(8,
                        "quaerat",
                        86.2568,
                        23393366.0992),
                new LOD(6,
                        "ut",
                        63.4399,
                        26812790.2053)],
                new Point(127.7813,
                        70.9457,
                        -149.4658,
                        10.3194,
                        240.3839,
                    new SpatialReference(4,
                            "laboriosam",
                            "voluptatum",
                            "autem"),
                        true,
                        true,
                        337.1358),
                    [6,
                        9,
                        2],
                new SpatialReference(8,
                        "qui",
                        "iste",
                        "excepturi"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2018, 6, 27, 7, 26, 5),
                    new DateTime(2013, 3, 3, 15, 31, 51));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
