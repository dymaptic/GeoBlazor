@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("consequuntur")"
                        BlendMode="@(BlendMode.Normal)"
                        Copyright="@("ab")"
                        Effect="@(new Effect("magnam",
                            13686862.9096))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(14676436.1557)"
                        MinScale="@(34534.0481)"
                        Opacity="@(0.4760)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(286.1151)"
                        Resampling="@(true)"
                        TileServers="@(["dignissimos",
                            "ducimus"])"
                        Title="@("commodi eos nam")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_NearInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2019, 1, 17, 1, 46, 56))"
                            End="@(new DateTime(2023, 10, 14, 15, 51, 42))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(97.3200)"
                            Format="@(TileInfoFormat.Svgz)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(4,
                                    "aut",
                                    46.3036,
                                    25013700.7344)])"
                            Origin="@(new Point(-171.4571,
                                    11.4589,
                                    -93.3147,
                                    47.2381,
                                    652.5860,
                                new SpatialReference(5,
                                        "rerum",
                                        "nemo",
                                        "harum"),
                                    true,
                                    true,
                                    875.8401))"
                            Size="@([7,
                                1])">
                            <SpatialReference 
                                Wkid="@(4)"
                                ImageCoordinateSystem="@("tenetur")"
                                Wkt="@("amet")"
                                Wkt2="@("magnam")">
                            </SpatialReference>
                        </TileInfo>
                        <PortalItem />
                        <Extent 
                            Xmax="@(-174.9413)"
                            Xmin="@(-61.4412)"
                            Ymax="@(2.4054)"
                            Ymin="@(65.4866)"
                            Zmax="@(650.2054)"
                            Zmin="@(76.3808)"
                            Mmax="@(529.6953)"
                            Mmin="@(217.7421)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(7)"
                                ImageCoordinateSystem="@("veritatis")"
                                Wkt="@("ipsum")"
                                Wkt2="@("eos")">
                            </SpatialReference>
                        </Extent>
                        <Sublayer 
                            SublayerId="@(1)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(12704259.8971)"
                            MinScale="@(40458.8156)"
                            Opacity="@(0.0425)"
                            PopupEnabled="@(true)"
                            Title="@("consequuntur et quis")"
                            Visible="@(true)"
                            DefinitionExpression="@("iusto")"
                            FloorInfo="@(new LayerFloorInfo("earum"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveRight,
                                    "maxime",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    15710724.1235,
                                    20480.0987,
                                    true,
                                    new Dimension(702.3670),
                                new TextSymbol("unde pariatur quam",
                                    new MapColor(87, 150, 213),
                                    new MapColor(163, 240, 183),
                                        new Dimension(319.3541),
                                    new MapFont(new Dimension(131.9538),
                                            "Palatino",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.Underline),
                                        825.0293,
                                    new MapColor(81, 207, 189),
                                    new MapColor(105, 64, 85),
                                        454.9617,
                                    HorizontalAlignment.Center,
                                        true,
                                        806.5372,
                                        new Dimension(5.6003),
                                        true),
                                    true,
                                    "1 = 1")])"
                            PopupTemplate="@(new PopupTemplate("unde quia debitis",
                                    "facere",
                                    ["officiis",
                                        "veniam"],
                                [new FieldInfo("title",
                                        "et",
                                        "voluptatem",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("email",
                                        "est",
                                        "est",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.ShortDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new TextPopupContent("enim distinctio maiores")],
                                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "email",
                                        "dolore officiis ex",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("laboriosam incidunt beatae",
                                        "https://picsum.photos/640/480/?image=276",
                                        "54a490e3-226e-fa5a-a248-13876c3a25b8",
                                        () => { Console.WriteLine("eum"); return Task.CompletedTask; },
                                        "comment",
                                        true,
                                        true,
                                        true,
                                        "exercitationem"),
                                        new ActionButton("illo aut ipsam",
                                            "https://picsum.photos/640/480/?image=903",
                                            "c186fee2-9421-f3c8-34f8-2c0a7550ee9c",
                                            () => { Console.WriteLine("temporibus"); return Task.CompletedTask; },
                                            "updatedAt",
                                            true,
                                            true,
                                            true,
                                            "eligendi")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("sed debitis fugiat",
                                    new MapColor(238, 30, 10),
                                    new MapColor(237, 12, 114),
                                        new Dimension(718.0593),
                                    new MapFont(new Dimension(138.1764),
                                            "Times New Roman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.LineThrough),
                                        537.4039,
                                    new MapColor(24, 209, 9),
                                    new MapColor(88, 48, 9),
                                        484.3284,
                                    HorizontalAlignment.Center,
                                        true,
                                        995.7233,
                                        new Dimension(358.8198),
                                        true),
                                    "sint",
                                [new OpacityVariable("soluta",
                                        "sed",
                                    [new OpacityStop(841.5696,
                                            0.5119,
                                            "ut")],
                                    new VisualVariableLegendOptions(true,
                                            "doloremque harum iusto"),
                                        "maxime",
                                        "et quo provident")],
                                new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(195, 67, 149),
                                        new MapColor(57, 128, 51)),
                                        386.0278,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(885.5812,
                                                610.0647),
                                        new AuthoringInfoField1ClassBreakInfos(260.3728,
                                                185.9747)],
                                            "excepturi",
                                            "vero",
                                            "fuga"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(726.2952,
                                                468.3958)],
                                            "inventore",
                                            "sit",
                                            "ut"),
                                        ["omnis",
                                            "dolores"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "ipsum",
                                        true,
                                    LengthUnit.NauticalMiles,
                                        622.8398,
                                        810.7465,
                                        631.3700,
                                        449.9492)))"
                            Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                            <Sublayer 
                                SublayerId="@(1)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(33451502.9972)"
                                MinScale="@(39430.0491)"
                                Opacity="@(0.8616)"
                                PopupEnabled="@(true)"
                                Title="@("commodi fugiat perferendis")"
                                Visible="@(true)"
                                DefinitionExpression="@("ut")"
                                Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(8)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(26660513.9896)"
                                    MinScale="@(26232.8586)"
                                    Opacity="@(0.7994)"
                                    PopupEnabled="@(true)"
                                    Title="@("accusantium eum a")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("quia")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(8)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(10918639.0704)"
                                        MinScale="@(5367.3160)"
                                        Opacity="@(0.1519)"
                                        PopupEnabled="@(true)"
                                        Title="@("voluptatum dolorum in")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("dolor")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(8)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(13222187.2488)"
                                            MinScale="@(30394.1508)"
                                            Opacity="@(0.4029)"
                                            PopupEnabled="@(true)"
                                            Title="@("molestiae nihil ipsam")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("non")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(3)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(3324722.3571)"
                                                MinScale="@(48080.5977)"
                                                Opacity="@(0.6410)"
                                                PopupEnabled="@(true)"
                                                Title="@("sit est culpa")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("quidem")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(7)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(15533146.1303)"
                                                    MinScale="@(1506.5481)"
                                                    Opacity="@(0.6545)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("quisquam in placeat")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("dicta")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("natus iste cum")"
                                                        StringContent="@("dolores")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("corporis")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("vitae quas eaque")"
                                                    StringContent="@("beatae")"
                                                    OutFields="@(["ad"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new RelationshipPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton("consequuntur voluptas exercitationem",
                                                        "https://picsum.photos/640/480/?image=818",
                                                        "c52a400e-9caa-db74-a757-2e8de13aed15",
                                                        () => { Console.WriteLine("ducimus"); return Task.CompletedTask; },
                                                        "name",
                                                        true,
                                                        true,
                                                        true,
                                                        "debitis"),
                                                        null])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterEnd)"
                                                    LabelExpression="@("quo")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(27852401.9798)"
                                                    MinScale="@(49386.8786)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(131.0044))"
                                                    Symbol="@(new TextSymbol("voluptatem eum omnis"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("omnis")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                    new MultipartColorRamp(),
                                                        89.9794,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["quas",
                                                            "a"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "aut",
                                                        true,
                                                    LengthUnit.Millimeters,
                                                        429.5716,
                                                        97.4857,
                                                        13.6952,
                                                        159.9706))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("atque dolor est")"
                                                StringContent="@("est")"
                                                OutFields="@(["odio"])"
                                                FieldInfos="@([new FieldInfo("createdAt",
                                                        "similique",
                                                        "dolore",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("email",
                                                        "necessitatibus",
                                                        "esse",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max)])"
                                                Content="@([new TextPopupContent("voluptatem et voluptates")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "status",
                                                        "cum quis perspiciatis"),
                                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "status",
                                                        "qui dolorem laboriosam")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("sunt illo dolorum",
                                                    "https://picsum.photos/640/480/?image=560",
                                                    "38918f72-34b6-f1d1-3ab5-8064d9826708",
                                                    () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                    "status",
                                                    true,
                                                    true,
                                                    true,
                                                    "voluptatem"),
                                                    new ActionButton("necessitatibus reprehenderit omnis",
                                                        "https://picsum.photos/640/480/?image=924",
                                                        "8737c690-db33-8bb0-b579-4b6699a14964",
                                                        () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                        "email",
                                                        true,
                                                        true,
                                                        true,
                                                        "et")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.BelowLeft)"
                                                LabelExpression="@("voluptas")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(33030993.6437)"
                                                MinScale="@(46365.3809)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(80.6869))"
                                                Symbol="@(new TextSymbol("vitae eum repellendus",
                                                    new MapColor(162, 94, 3),
                                                    new MapColor(165, 47, 238),
                                                        null,
                                                    new MapFont(),
                                                        176.4476,
                                                    new MapColor(110, 128, 222),
                                                    new MapColor(21, 4, 132),
                                                        652.9201,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        136.8687,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Province = 'Ontario'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("consequatur")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(123, 89, 140),
                                                    new MapColor(130, 134, 146)),
                                                    144.0079,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "vel",
                                                        "et",
                                                        "sed"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "repellendus",
                                                        "veniam",
                                                        "sit"),
                                                    ["autem",
                                                        "qui"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "doloribus",
                                                    true,
                                                LengthUnit.NauticalMiles,
                                                    668.3192,
                                                    802.5064,
                                                    658.9101,
                                                    318.1358))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("hic nam saepe")"
                                            StringContent="@("odit")"
                                            OutFields="@(["animi"])"
                                            FieldInfos="@([new FieldInfo("token",
                                                    "at",
                                                    "qui",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Min)])"
                                            Content="@([new FieldsPopupContent([new FieldInfo("email",
                                                        "nulla",
                                                        "iure",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count)],
                                                    "quibusdam error ut",
                                                    "ea mollitia sint"),
                                            new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                                        "sed",
                                                        "soluta eum harum"))])"
                                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "category",
                                                    "asperiores aut maiores",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("eius similique ut",
                                                "https://picsum.photos/640/480/?image=839",
                                                "f9a33367-6f59-6eec-6d5a-152f4777d67b",
                                                () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                "email",
                                                true,
                                                true,
                                                true,
                                                "delectus"),
                                                new ActionButton("tenetur dolore magni",
                                                    "https://picsum.photos/640/480/?image=150",
                                                    "c56d27d4-d5e3-a8b9-aa50-baf73eb6b718",
                                                    () => { Console.WriteLine("illum"); return Task.CompletedTask; },
                                                    "updatedAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "qui")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveAlong)"
                                            LabelExpression="@("illo")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(45248428.2086)"
                                            MinScale="@(23397.7852)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(833.7072))"
                                            Symbol="@(new TextSymbol("distinctio voluptatum ea",
                                                new MapColor(226, 55, 206),
                                                new MapColor(99, 211, 240),
                                                    new Dimension(666.7704),
                                                new MapFont(new Dimension(626.7311),
                                                        "Garamond",
                                                    MapFontStyle.Italic,
                                                    FontWeight.Lighter,
                                                    TextDecoration.None),
                                                    697.0165,
                                                new MapColor(153, 246, 105),
                                                new MapColor(106, 139, 196),
                                                    935.6605,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    822.1668,
                                                    new Dimension(193.7376),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Province = 'Ontario'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("laborum")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(105, 188, 186),
                                                new MapColor(253, 113, 22)),
                                                133.2043,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(28.0610,
                                                        740.7780)],
                                                    "cum",
                                                    "iure",
                                                    "aliquid"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(739.3327,
                                                        265.9743),
                                                new AuthoringInfoField1ClassBreakInfos(589.2256,
                                                        309.2770)],
                                                    "deleniti",
                                                    "ea",
                                                    "velit"),
                                                ["repellat",
                                                    "autem"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "voluptate",
                                                true,
                                            LengthUnit.NauticalMiles,
                                                456.2639,
                                                219.4826,
                                                674.8479,
                                                84.5820))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("porro dolores consequatur")"
                                        StringContent="@("qui")"
                                        OutFields="@(["et",
                                            "provident"])"
                                        FieldInfos="@([new FieldInfo("status",
                                                "id",
                                                "quaerat",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Stddev)])"
                                        Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                                    "quod",
                                                    "libero assumenda temporibus")),
                                        new RelationshipPopupContent("consequatur occaecati at",
                                                "quos consectetur et",
                                                8,
                                                "vel",
                                            [new RelatedRecordsInfoFieldOrder("omnis",
                                                OrderBy.Asc)],
                                                7)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "email",
                                                "molestias ullam accusantium",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("dolorum optio officiis",
                                            "https://picsum.photos/640/480/?image=800",
                                            "95f28c50-cf65-5cee-3ea7-0abe07ac9a98",
                                            () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                            "createdAt",
                                            true,
                                            true,
                                            true,
                                            "dignissimos"),
                                            new ActionButton("nesciunt sequi perspiciatis",
                                                "https://picsum.photos/640/480/?image=477",
                                                "09ceabaa-535f-a591-488b-3233a7c2fa88",
                                                () => { Console.WriteLine("id"); return Task.CompletedTask; },
                                                "password",
                                                true,
                                                true,
                                                true,
                                                "id")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.CenterStart)"
                                        LabelExpression="@("sapiente")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(6475756.4756)"
                                        MinScale="@(12768.2502)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(512.3891))"
                                        Symbol="@(new TextSymbol("non nisi ut",
                                            new MapColor(182, 237, 112),
                                            new MapColor(141, 124, 88),
                                                new Dimension(548.2715),
                                            new MapFont(new Dimension(384.7209),
                                                    "Garamond",
                                                MapFontStyle.Normal,
                                                FontWeight.Lighter,
                                                TextDecoration.Underline),
                                                809.3542,
                                            new MapColor(46, 26, 159),
                                            new MapColor(114, 36, 28),
                                                286.6743,
                                            HorizontalAlignment.Center,
                                                true,
                                                119.6966,
                                                new Dimension(119.8192),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("ObjectID = 1")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("esse")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(189, 166, 88),
                                                new MapColor(66, 30, 5)),
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(217, 251, 4),
                                                new MapColor(101, 249, 219))]),
                                            166.2576,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(683.2336,
                                                    436.1517),
                                            new AuthoringInfoField1ClassBreakInfos(977.7712,
                                                    223.2770)],
                                                "officiis",
                                                "voluptas",
                                                "aut"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(769.5218,
                                                    267.1165)],
                                                "dolore",
                                                "dolor",
                                                "dolorum"),
                                            ["saepe"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "quis",
                                            true,
                                        LengthUnit.Decimeters,
                                            965.5303,
                                            236.0598,
                                            341.1843,
                                            445.4478))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("aut perferendis consequatur")"
                                    StringContent="@("et")"
                                    OutFields="@(["ullam",
                                        "sit"])"
                                    FieldInfos="@([new FieldInfo("password",
                                            "rerum",
                                            "nesciunt",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.LongDateShortTime),
                                            true,
                                            true,
                                        StatisticType.Max)])"
                                    Content="@([new TextPopupContent("ullam pariatur doloribus"),
                                    new RelationshipPopupContent("amet aut non",
                                            "ea omnis facilis",
                                            5,
                                            "id",
                                        [new RelatedRecordsInfoFieldOrder("deserunt",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("sit",
                                            OrderBy.Asc)],
                                            6)])"
                                    ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "email",
                                            "culpa rerum architecto",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "comment",
                                            "quod ad ut",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("ex consequatur recusandae",
                                        "https://picsum.photos/640/480/?image=273",
                                        "d134ab44-6960-c15f-f463-728441d278a8",
                                        () => { Console.WriteLine("sequi"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "ut")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterAfter)"
                                    LabelExpression="@("minus")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(49631222.4872)"
                                    MinScale="@(10025.7122)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(631.2748))"
                                    Symbol="@(new TextSymbol("et repellat ab",
                                        new MapColor(3, 113, 216),
                                        new MapColor(129, 30, 39),
                                            new Dimension(267.0362),
                                        new MapFont(new Dimension(873.0251),
                                                "Garamond",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            990.8959,
                                        new MapColor(159, 156, 107),
                                        new MapColor(71, 59, 235),
                                            350.6655,
                                        HorizontalAlignment.Center,
                                            true,
                                            880.5681,
                                            new Dimension(175.6584),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Age > 21")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("dicta")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(134.7294,
                887.9522,
                848.1607,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(585.3592,
                472.4749,
                782.0135);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        await tileLayer.Refresh();
        BlendMode testBlendMode = BlendMode.Xor;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-57.4008,
                    -89.8322,
                    53.9436,
                    -11.0307,
                    557.0891,
                    581.5435,
                    854.4302,
                    83.7653,
                new SpatialReference(5,
                        "ut",
                        "possimus",
                        "aliquid"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(7,
                    true,
                    true,
                ListMode.Show,
                    8806645.5019,
                    46903.9551,
                    0.7022,
                    true,
                    "est ea iusto",
                    true,
                    "exercitationem",
                new LayerFloorInfo("nihil"),
                [new Label(LabelPlacement.AboveStart,
                        "porro",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        46076524.4154,
                        17154.2917,
                        true,
                        new Dimension(58.2581),
                    new TextSymbol("eum reprehenderit nihil",
                        new MapColor(36, 120, 121),
                        new MapColor(215, 251, 192),
                            new Dimension(384.6856),
                        new MapFont(new Dimension(147.8315),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            0.5336,
                        new MapColor(238, 11, 155),
                        new MapColor(169, 43, 103),
                            103.0821,
                        HorizontalAlignment.Right,
                            true,
                            555.4637,
                            new Dimension(22.3720),
                            true),
                        true,
                        "Country = 'Canada'")],
                new PopupTemplate("autem eaque mollitia",
                        "quod",
                        ["inventore"],
                    [new FieldInfo("comment",
                            "et",
                            "necessitatibus",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("comment",
                            "quia",
                            "iusto",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Var)],
                    [new FieldsPopupContent([new FieldInfo("title",
                                "deserunt",
                                "rerum",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(5,
                                    true,
                                DateFormat.LongDate),
                                true,
                                true,
                            StatisticType.Min)],
                            "et exercitationem",
                            "in in voluptatum"),
                    new FieldsPopupContent([new FieldInfo("title",
                                "rerum",
                                "quia",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLeShortTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("avatar",
                                "saepe",
                                "dignissimos",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(8,
                                    true,
                                DateFormat.DayShortMonthYearLongTime24),
                                true,
                                true,
                            StatisticType.Avg)],
                            "qui est",
                            "officia fuga ut")],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "comment",
                            "dolore rerum modi",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Population / $feature.Area;",
                            "category",
                            "dolorem consequatur non",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("eius at quod",
                            "https://picsum.photos/640/480/?image=892",
                            "971fe84a-3185-d26e-61e4-d20ac8f726f9",
                            () => { Console.WriteLine("debitis"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "atque"),
                            new ActionButton("et velit vero",
                                "https://picsum.photos/640/480/?image=350",
                                "bc10ac67-4bbb-80f5-b1a4-56d6ef61b773",
                                () => { Console.WriteLine("quos"); return Task.CompletedTask; },
                                "token",
                                true,
                                true,
                                true,
                                "quo")])),
            new Sublayer(2,
                    true,
                    true,
                ListMode.Hide,
                    24283052.1217,
                    47224.4938,
                    0.6695,
                    true,
                    "facilis doloribus fuga",
                    true,
                    "atque",
                new LayerFloorInfo("error"),
                [new Label(LabelPlacement.CenterBefore,
                        "eveniet",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        45202146.6881,
                        26620.2286,
                        true,
                        new Dimension(700.6045),
                    new TextSymbol("quibusdam quia qui",
                        new MapColor(14, 178, 131),
                        new MapColor(216, 213, 252),
                            new Dimension(239.0672),
                        new MapFont(new Dimension(996.8727),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            142.5317,
                        new MapColor(129, 56, 99),
                        new MapColor(87, 58, 148),
                            30.9256,
                        HorizontalAlignment.Right,
                            true,
                            525.0050,
                            new Dimension(219.5107),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.CenterAfter,
                        "id",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        15960368.2630,
                        31631.5633,
                        true,
                        new Dimension(620.0269),
                    new TextSymbol("reprehenderit sunt id",
                        new MapColor(44, 5, 64),
                        new MapColor(227, 27, 164),
                            new Dimension(679.0338),
                        new MapFont(new Dimension(816.3551),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.None),
                            471.8163,
                        new MapColor(72, 161, 214),
                        new MapColor(227, 81, 166),
                            599.9603,
                        HorizontalAlignment.Center,
                            true,
                            149.0700,
                            new Dimension(303.4114),
                            true),
                        true,
                        "Name = 'John Doe'")],
                new PopupTemplate("nisi corrupti quia",
                        "deserunt",
                        ["voluptatem"],
                    [new FieldInfo("id",
                            "beatae",
                            "laborum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Max)],
                    [new MediaPopupContent("est occaecati nobis",
                            "pariatur in",
                        [new ImageMediaInfo("quas ut perspiciatis",
                                "qui",
                                "maiores blanditiis voluptatibus",
                            new ImageMediaInfoValue("http://annamarie.net",
                                    "https://gay.net"),
                                10.4663),
                        new BarChartMediaInfo("quidem sit mollitia",
                                "necessitatibus",
                                "repellendus qui est",
                            new ChartMediaInfoValue(["quisquam",
                                    "atque"],
                                    "et",
                                    "aut",
                                [new ChartMediaInfoValueSeries("category",
                                        "deleniti",
                                        900.3991)],
                                [new MapColor(201, 133, 234),
                                new MapColor(72, 188, 127)]))],
                            4),
                    new RelationshipPopupContent("alias quibusdam magni",
                            "quisquam illo sunt",
                            7,
                            "impedit",
                        [new RelatedRecordsInfoFieldOrder("et",
                            OrderBy.Asc)],
                            5)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "createdAt",
                            "in unde harum",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("in rerum dolores",
                            "https://picsum.photos/640/480/?image=703",
                            "10d091b7-ebaa-5599-a0f0-021d4bd4bd9a",
                            () => { Console.WriteLine("rem"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "quo")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(845.5534,
                    TileInfoFormat.Svg,
                    true,
                [new LOD(1,
                        "omnis",
                        11.1466,
                        27225200.8101)],
                new Point(-49.5018,
                        11.5122,
                        35.1475,
                        -21.1519,
                        568.2024,
                    new SpatialReference(6,
                            "ipsa",
                            "officiis",
                            "reprehenderit"),
                        true,
                        true,
                        944.9579),
                    [5],
                new SpatialReference(2,
                        "alias",
                        "omnis",
                        "quas"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2001, 9, 5, 12, 25, 41),
                    new DateTime(2001, 10, 26, 16, 17, 4));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
