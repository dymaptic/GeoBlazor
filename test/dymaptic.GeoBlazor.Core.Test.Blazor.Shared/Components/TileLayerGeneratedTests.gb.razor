@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("ratione")"
                        BlendMode="@(BlendMode.Color)"
                        Copyright="@("harum")"
                        Effect="@(new Effect("quibusdam",
                            36330160.1327))"
                        FullExtent="@(new Extent(148.3133,
                                49.5603,
                                -59.1458,
                                -80.0587,
                                748.1617,
                                83.2434,
                                659.1564,
                                172.3657,
                            new SpatialReference(1,
                                    "vel",
                                    "et",
                                    "numquam"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(42861299.9684)"
                        MinScale="@(37018.9302)"
                        Opacity="@(0.2292)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(692.2051)"
                        Resampling="@(true)"
                        TileServers="@(["enim",
                            "laudantium",
                            "nisi"])"
                        Title="@("et ut natus")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_ShortwaveInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2006, 8, 25, 10, 42, 50))"
                            End="@(new DateTime(2019, 5, 4, 22, 8, 57))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(945.7963)"
                            Format="@(TileInfoFormat.Png24)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(8,
                                    "velit",
                                    50.3121,
                                    5561059.4585)])"
                            Origin="@(new Point(-154.2645,
                                    -84.5402,
                                    49.3521,
                                    -7.5173,
                                    463.3817,
                                new SpatialReference(5,
                                        "error",
                                        "blanditiis",
                                        "enim"),
                                    true,
                                    true,
                                    91.2006))"
                            Size="@([9,
                                9])"
                            SpatialReference="@(new SpatialReference(4,
                                    "sit",
                                    "quia",
                                    "architecto"))">
                        </TileInfo>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(9)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(38523739.5491)"
                            MinScale="@(43617.9424)"
                            Opacity="@(0.6121)"
                            PopupEnabled="@(true)"
                            Title="@("a possimus ut")"
                            Visible="@(true)"
                            DefinitionExpression="@("consequatur")"
                            FloorInfo="@(new LayerFloorInfo("earum"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowCenter,
                                    "sapiente",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    6174718.8385,
                                    15258.9709,
                                    true,
                                    new Dimension(272.3328),
                                new TextSymbol("repellendus in corporis",
                                    new MapColor(185, 46, 147),
                                    new MapColor(167, 164, 173),
                                        new Dimension(836.2512),
                                    new MapFont(new Dimension(59.6833),
                                            "Georgia",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        969.7059,
                                    new MapColor(237, 54, 66),
                                    new MapColor(191, 35, 79),
                                        943.2974,
                                    HorizontalAlignment.Left,
                                        true,
                                        341.5169,
                                        new Dimension(813.3954),
                                        true),
                                    true,
                                    "Country = 'Canada'")])"
                            PopupTemplate="@(new PopupTemplate("quidem quisquam similique",
                                    "sed",
                                    ["dolor",
                                        "rerum",
                                        "voluptas",
                                        "aut"],
                                [new FieldInfo("updatedAt",
                                        "voluptatum",
                                        "dicta",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("email",
                                        "assumenda",
                                        "quasi",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(2,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("password",
                                        "voluptatem",
                                        "exercitationem",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new MediaPopupContent("minima nostrum quidem",
                                        "tenetur impedit unde atque soluta sint voluptatibus",
                                    [new ColumnChartMediaInfo("est sed rerum",
                                            "nihil",
                                            "harum quia recusandae",
                                        new ChartMediaInfoValue(["et",
                                                "repellat",
                                                "aperiam",
                                                "cumque"],
                                                "omnis",
                                                "eligendi",
                                            [new ChartMediaInfoValueSeries("password",
                                                    "eum",
                                                    145.8113)],
                                            [new MapColor(151, 113, 112),
                                            new MapColor(196, 74, 206),
                                            new MapColor(246, 181, 228)]))],
                                        8)],
                                [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "updatedAt",
                                        "aperiam architecto aliquam",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("maxime fuga perspiciatis",
                                        "d27060a8-7822-1150-0a31-d4caabb19b29",
                                        () => { Console.WriteLine("in"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "id",
                                        "fugit"),
                                new ActionToggle("sequi est rerum",
                                        "61e418ec-4014-5222-4a85-72b92ff3eaff",
                                        () => { Console.WriteLine("architecto"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "status",
                                        "modi")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("ut placeat est",
                                    new MapColor(188, 71, 75),
                                    new MapColor(44, 49, 15),
                                        new Dimension(238.1537),
                                    new MapFont(new Dimension(662.2958),
                                            "Palatino",
                                        MapFontStyle.Oblique,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        594.2224,
                                    new MapColor(142, 224, 222),
                                    new MapColor(12, 207, 172),
                                        375.7641,
                                    HorizontalAlignment.Left,
                                        true,
                                        121.5361,
                                        new Dimension(803.7323),
                                        true),
                                    "voluptatem",
                                [new OpacityVariable("placeat",
                                        "magni",
                                    [new OpacityStop(758.5505,
                                            0.8281,
                                            "qui")],
                                    new VisualVariableLegendOptions(true,
                                            "doloremque consequatur voluptas"),
                                        "expedita",
                                        "sunt debitis similique"),
                                new SizeVariable("nam",
                                        new Dimension(250.0226),
                                        new Dimension(566.5492),
                                        256.4614,
                                        385.6174,
                                        VisualValueRepresentation.Diameter,
                                        VisualValueUnit.Unknown,
                                        "est",
                                        "blanditiis",
                                        true,
                                        VisualAxis.Width,
                                        "et",
                                        "quia distinctio eius",
                                    new VisualVariableLegendOptions(true,
                                            "deserunt tempore tenetur"))],
                                new AuthoringInfo(ClassificationMethod.Manual,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(234, 145, 194),
                                            new MapColor(98, 79, 157))]),
                                        722.4065,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(133.5227,
                                                792.9460),
                                        new AuthoringInfoField1ClassBreakInfos(390.9920,
                                                770.7561),
                                        new AuthoringInfoField1ClassBreakInfos(533.9034,
                                                462.9059)],
                                            "iusto",
                                            "officia",
                                            "voluptas"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(435.1319,
                                                579.0033),
                                        new AuthoringInfoField1ClassBreakInfos(415.9390,
                                                345.2076)],
                                            "vero",
                                            "est",
                                            "maxime"),
                                        ["sit",
                                            "veniam",
                                            "voluptates",
                                            "explicabo"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "magni",
                                        true,
                                    LengthUnit.NauticalMiles,
                                        213.5257,
                                        592.4398,
                                        90.2124,
                                        503.4952)))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(8)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(38658578.5343)"
                                MinScale="@(38758.3012)"
                                Opacity="@(0.3348)"
                                PopupEnabled="@(true)"
                                Title="@("voluptas laboriosam rerum")"
                                Visible="@(true)"
                                DefinitionExpression="@("facere")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(6)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(8399358.1821)"
                                    MinScale="@(26669.4228)"
                                    Opacity="@(0.4330)"
                                    PopupEnabled="@(true)"
                                    Title="@("id est voluptas")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("iste")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(29650516.2822)"
                                        MinScale="@(38918.7264)"
                                        Opacity="@(0.9747)"
                                        PopupEnabled="@(true)"
                                        Title="@("qui ut omnis")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("repellat")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(9)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(44163254.2555)"
                                            MinScale="@(24608.0370)"
                                            Opacity="@(0.5789)"
                                            PopupEnabled="@(true)"
                                            Title="@("perspiciatis ducimus consequatur")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("dolor")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(1)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(3919311.1546)"
                                                MinScale="@(13224.3408)"
                                                Opacity="@(0.6039)"
                                                PopupEnabled="@(true)"
                                                Title="@("et quos velit")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("aut")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(3)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(825750.0487)"
                                                    MinScale="@(34650.9633)"
                                                    Opacity="@(0.9566)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("consequatur eveniet maiores")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("voluptatem")"
                                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("fugit at quasi")"
                                                        StringContent="@("et")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("ut")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("unde eligendi consequatur")"
                                                    StringContent="@("laborum")"
                                                    OutFields="@(["dolores",
                                                        "nulla",
                                                        "aliquam",
                                                        "non"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new TextPopupContent(),
                                                    new MediaPopupContent(),
                                                    new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)])])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "2312ec73-513d-d3bf-f94b-710debc0f184",
                                                            () => { Console.WriteLine("blanditiis"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "86d8e296-202f-bb3f-9431-236b363b8e70",
                                                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowRight)"
                                                    LabelExpression="@("officiis")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(48072204.3574)"
                                                    MinScale="@(18346.6726)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(368.9507))"
                                                    Symbol="@(new TextSymbol("aut id labore"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("PostalCode = 'M5V 1J9'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("est")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                        968.0961,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["nam",
                                                            "animi",
                                                            "sint"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "quia",
                                                        true,
                                                    LengthUnit.Yards,
                                                        148.1102,
                                                        766.5234,
                                                        314.3068,
                                                        595.1244))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("expedita nesciunt harum")"
                                                StringContent="@("qui")"
                                                OutFields="@(["placeat",
                                                    "aut",
                                                    "cumque"])"
                                                FieldInfos="@([new FieldInfo("email",
                                                        "dicta",
                                                        "voluptas",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum)])"
                                                Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "enim dolores ipsa qui temporibus",
                                                        "quae sint blanditiis"),
                                                new AttachmentsPopupContent("itaque porro dolor",
                                                        "ad sed et qui"),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "odio voluptatem quo beatae ex quia",
                                                        "cupiditate sit accusantium")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                        "comment",
                                                        "aliquam expedita voluptatum")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("repellat sint occaecati",
                                                        "4835db96-87bd-067a-7297-b8746ca73ed1",
                                                        () => { Console.WriteLine("explicabo"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "token",
                                                        "excepturi")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterEnd)"
                                                LabelExpression="@("nobis")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(24615090.0598)"
                                                MinScale="@(20612.7462)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(721.1611))"
                                                Symbol="@(new TextSymbol("laboriosam cum inventore",
                                                    new MapColor(58, 71, 189),
                                                    new MapColor(6, 240, 250),
                                                        null,
                                                    new MapFont(),
                                                        17.7942,
                                                    new MapColor(203, 127, 39),
                                                    new MapColor(204, 124, 136),
                                                        161.4906,
                                                    HorizontalAlignment.Right,
                                                        true,
                                                        280.3006,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("PostalCode = 'M5V 1J9'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("non")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(28, 67, 87),
                                                    new MapColor(88, 48, 198)),
                                                    402.7914,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "laboriosam",
                                                        "dolore",
                                                        "facilis"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "sequi",
                                                        "cum",
                                                        "voluptas"),
                                                    ["quia",
                                                        "natus"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "fuga",
                                                    true,
                                                LengthUnit.Kilometers,
                                                    246.4313,
                                                    55.3058,
                                                    28.1992,
                                                    491.2327))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("quod enim cum")"
                                            StringContent="@("vel")"
                                            OutFields="@(["quod",
                                                "quia",
                                                "recusandae"])"
                                            FieldInfos="@([new FieldInfo("status",
                                                    "cum",
                                                    "porro",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.ShortDateLe),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("updatedAt",
                                                    "vel",
                                                    "voluptate",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("avatar",
                                                    "et",
                                                    "laboriosam",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.ShortDateLe),
                                                    true,
                                                    true,
                                                StatisticType.Avg)])"
                                            Content="@([new TextPopupContent("minima nisi nihil"),
                                            new AttachmentsPopupContent("quia non vitae",
                                                    "numquam voluptas et recusandae et soluta enim",
                                                    AttachmentsPopupContentDisplayType.Preview)])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                    "token",
                                                    "repellat sed voluptatem",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "updatedAt",
                                                    "consequuntur quia distinctio",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "title",
                                                    "placeat quae cum",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "title",
                                                    "modi vero suscipit",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("aut rem praesentium",
                                                    "619796a4-1f74-dcfc-c8cd-0ff167190d14",
                                                    () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "category",
                                                    "quae"),
                                            new ActionButton("delectus molestias assumenda",
                                                    "https://picsum.photos/640/480/?image=940",
                                                    "3adc739c-e2af-0e62-7abb-9f4ad9c0b91d",
                                                    () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                                    "title",
                                                    true,
                                                    true,
                                                    true,
                                                    "non")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterAfter)"
                                            LabelExpression="@("beatae")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(32898182.9926)"
                                            MinScale="@(6371.7375)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(438.2414))"
                                            Symbol="@(new TextSymbol("et magni consequatur",
                                                new MapColor(119, 194, 4),
                                                new MapColor(210, 25, 28),
                                                    new Dimension(645.2493),
                                                new MapFont(new Dimension(189.8766),
                                                        "Georgia",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Lighter,
                                                    TextDecoration.LineThrough),
                                                    832.0659,
                                                new MapColor(13, 10, 249),
                                                new MapColor(1, 44, 31),
                                                    819.0647,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    692.8716,
                                                    new Dimension(836.5819),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Age > 21")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("quia")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(136, 239, 246),
                                                new MapColor(92, 8, 16)),
                                                147.5261,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(209.1818,
                                                        561.2724),
                                                new AuthoringInfoField1ClassBreakInfos(190.5253,
                                                        151.5718),
                                                new AuthoringInfoField1ClassBreakInfos(339.1186,
                                                        330.4609),
                                                new AuthoringInfoField1ClassBreakInfos(176.3424,
                                                        961.5867)],
                                                    "aliquam",
                                                    "eveniet",
                                                    "dicta"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(363.4243,
                                                        396.3427)],
                                                    "voluptates",
                                                    "perferendis",
                                                    "optio"),
                                                ["exercitationem",
                                                    "porro"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "qui",
                                                true,
                                            LengthUnit.Yards,
                                                637.7656,
                                                558.3232,
                                                72.7781,
                                                352.2183))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("dolor molestiae quo")"
                                        StringContent="@("quaerat")"
                                        OutFields="@(["porro",
                                            "odit",
                                            "autem"])"
                                        FieldInfos="@([new FieldInfo("phone",
                                                "suscipit",
                                                "commodi",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongMonthDayYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Max)])"
                                        Content="@([new FieldsPopupContent([new FieldInfo("category",
                                                    "eaque",
                                                    "nemo",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.ShortDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Count)],
                                                "et aliquid repellendus suscipit",
                                                "modi laborum eum"),
                                        new RelationshipPopupContent("doloremque reiciendis sapiente",
                                                "officia rem qui est exercitationem",
                                                6,
                                                "velit",
                                            [new RelatedRecordsInfoFieldOrder("est",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("est",
                                                OrderBy.Asc)],
                                                7),
                                        new RelationshipPopupContent("consequatur quisquam numquam",
                                                "ipsa laboriosam enim modi sint omnis assumenda",
                                                1,
                                                "nisi",
                                            [new RelatedRecordsInfoFieldOrder("voluptas",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("qui",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("nam",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("debitis",
                                                OrderBy.Desc)],
                                                7)])"
                                        ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "updatedAt",
                                                "nesciunt accusamus expedita",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return Date();",
                                                "avatar",
                                                "nihil voluptatum quasi",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "status",
                                                "voluptatem sed quis",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "email",
                                                "est distinctio autem",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("vel asperiores libero",
                                                "https://picsum.photos/640/480/?image=230",
                                                "22670a0a-b502-8be8-c4a7-4135631fe0cc",
                                                () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                                "group",
                                                true,
                                                true,
                                                true,
                                                "culpa"),
                                        new ActionToggle("quos vero quisquam",
                                                "0a223b8c-123b-67d7-d6c7-6b09603537c1",
                                                () => { Console.WriteLine("voluptates"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "updatedAt",
                                                "sapiente")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveBefore)"
                                        LabelExpression="@("quasi")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(47951909.8570)"
                                        MinScale="@(40910.8827)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(155.9035))"
                                        Symbol="@(new TextSymbol("enim dolorem voluptates",
                                            new MapColor(43, 223, 57),
                                            new MapColor(93, 210, 221),
                                                new Dimension(477.8340),
                                            new MapFont(new Dimension(868.1612),
                                                    "Georgia",
                                                MapFontStyle.Normal,
                                                FontWeight.Lighter,
                                                TextDecoration.None),
                                                183.8082,
                                            new MapColor(22, 79, 101),
                                            new MapColor(25, 225, 23),
                                                675.2314,
                                            HorizontalAlignment.Right,
                                                true,
                                                860.1095,
                                                new Dimension(418.7646),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("ObjectID = 1")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("blanditiis")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(206, 208, 240),
                                                new MapColor(98, 45, 109)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(81, 140, 15),
                                                new MapColor(174, 62, 37)),
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(137, 215, 188),
                                                new MapColor(229, 171, 152)),
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(78, 174, 138),
                                                new MapColor(136, 187, 94))]),
                                            134.4811,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(189.6481,
                                                    251.6043),
                                            new AuthoringInfoField1ClassBreakInfos(301.8117,
                                                    987.9358),
                                            new AuthoringInfoField1ClassBreakInfos(897.8107,
                                                    549.5304),
                                            new AuthoringInfoField1ClassBreakInfos(327.0509,
                                                    338.2740)],
                                                "laudantium",
                                                "sunt",
                                                "cumque"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(437.7381,
                                                    683.5546)],
                                                "alias",
                                                "animi",
                                                "vitae"),
                                            ["dolor",
                                                "neque",
                                                "eaque"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "consequatur",
                                            true,
                                        LengthUnit.Inches,
                                            732.6685,
                                            749.5999,
                                            623.7857,
                                            795.7613))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("ea quia cupiditate")"
                                    StringContent="@("debitis")"
                                    OutFields="@(["est",
                                        "tempore",
                                        "eos",
                                        "cupiditate"])"
                                    FieldInfos="@([new FieldInfo("status",
                                            "et",
                                            "occaecati",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongDateShortTime24),
                                            true,
                                            true,
                                        StatisticType.Max),
                                    new FieldInfo("password",
                                            "et",
                                            "consectetur",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateLe),
                                            true,
                                            true,
                                        StatisticType.Sum)])"
                                    Content="@([new FieldsPopupContent([new FieldInfo("password",
                                                "nisi",
                                                "quo",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.LongMonthYear),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                            "optio sapiente at est iste quam et",
                                            "beatae recusandae accusantium")])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                            "avatar",
                                            "dolor amet ipsa",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "comment",
                                            "nisi quas aperiam",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("doloribus ut sed",
                                            "339038cf-2554-6b77-a9cf-42e0ed521cab",
                                            () => { Console.WriteLine("odit"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "password",
                                            "voluptas"),
                                    new ActionButton("unde mollitia sequi",
                                            "https://picsum.photos/640/480/?image=738",
                                            "7b64318d-bd57-d18d-7b0f-6129ec424179",
                                            () => { Console.WriteLine("facilis"); return Task.CompletedTask; },
                                            "category",
                                            true,
                                            true,
                                            true,
                                            "corporis")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveRight)"
                                    LabelExpression="@("consequatur")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(44413468.4740)"
                                    MinScale="@(27331.5635)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(737.7913))"
                                    Symbol="@(new TextSymbol("fuga et quo",
                                        new MapColor(191, 171, 229),
                                        new MapColor(63, 54, 228),
                                            new Dimension(263.8334),
                                        new MapFont(new Dimension(906.0315),
                                                "Garamond",
                                            MapFontStyle.Normal,
                                            FontWeight.Lighter,
                                            TextDecoration.None),
                                            352.5222,
                                        new MapColor(22, 57, 244),
                                        new MapColor(121, 225, 242),
                                            374.9934,
                                        HorizontalAlignment.Right,
                                            true,
                                            108.6516,
                                            new Dimension(18.8771),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("1 = 1")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("corrupti")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(944.3516,
                415.1985,
                154.3354,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(6);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(677.9771,
                69.0439,
                972.7082);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.DestinationIn;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(145.3757,
                    7.0856,
                    -87.0412,
                    -74.9398,
                    686.1464,
                    870.5623,
                    826.9436,
                    645.6275,
                new SpatialReference(5,
                        "ex",
                        "tempore",
                        "tempore"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(5,
                    true,
                    true,
                ListMode.Hide,
                    499613.8026,
                    10835.8457,
                    0.8372,
                    true,
                    "quo deserunt similique",
                    true,
                    "optio",
                new LayerFloorInfo("odit"),
                [new Label(LabelPlacement.AboveLeft,
                        "in",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        49699568.1939,
                        19725.4688,
                        true,
                        new Dimension(142.9003),
                    new TextSymbol("ullam illo rerum",
                        new MapColor(6, 141, 51),
                        new MapColor(21, 244, 125),
                            new Dimension(463.4589),
                        new MapFont(new Dimension(114.2447),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            771.6886,
                        new MapColor(48, 69, 206),
                        new MapColor(34, 174, 70),
                            893.3287,
                        HorizontalAlignment.Left,
                            true,
                            610.7690,
                            new Dimension(294.9339),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("fuga unde doloribus",
                        "libero",
                        ["dolorem",
                            "odio",
                            "in"],
                    [new FieldInfo("createdAt",
                            "odio",
                            "dolor",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("group",
                            "ab",
                            "est",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.ShortDateLeShortTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("updatedAt",
                            "id",
                            "asperiores",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new TextPopupContent("velit eos quam")],
                    [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                            "updatedAt",
                            "dolore et expedita",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("laudantium quaerat sit",
                            "b0132de6-5aaa-222a-69bc-8d223025baf7",
                            () => { Console.WriteLine("consectetur"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "token",
                            "beatae"),
                    new ActionButton("ea pariatur nihil",
                            "https://picsum.photos/640/480/?image=221",
                            "70b27afa-cb46-0bb4-477e-c86263412caa",
                            () => { Console.WriteLine("non"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "illum"),
                    new ActionButton("illum quod rem",
                            "https://picsum.photos/640/480/?image=448",
                            "421bda12-1f88-0a41-08ec-4768a1fb3fa8",
                            () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                            "status",
                            true,
                            true,
                            true,
                            "excepturi")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Hide,
                    38547940.0115,
                    12187.6643,
                    0.3591,
                    true,
                    "culpa consequatur eum",
                    true,
                    "animi",
                new LayerFloorInfo("dolorum"),
                [new Label(LabelPlacement.AboveCenter,
                        "veritatis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        9016098.3880,
                        31969.2532,
                        true,
                        new Dimension(376.4781),
                    new TextSymbol("autem vitae omnis",
                        new MapColor(193, 21, 49),
                        new MapColor(46, 241, 54),
                            new Dimension(282.6079),
                        new MapFont(new Dimension(543.9889),
                                "Bookman",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            265.1453,
                        new MapColor(96, 46, 158),
                        new MapColor(10, 37, 76),
                            415.4944,
                        HorizontalAlignment.Right,
                            true,
                            682.0983,
                            new Dimension(985.6640),
                            true),
                        true,
                        "Age > 21"),
                new Label(LabelPlacement.CenterStart,
                        "quo",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        29019420.3419,
                        35786.5646,
                        true,
                        new Dimension(528.0302),
                    new TextSymbol("consequatur culpa qui",
                        new MapColor(32, 248, 217),
                        new MapColor(70, 150, 252),
                            new Dimension(377.7622),
                        new MapFont(new Dimension(125.7795),
                                "Verdana",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            208.3880,
                        new MapColor(61, 181, 123),
                        new MapColor(77, 152, 134),
                            857.9288,
                        HorizontalAlignment.Center,
                            true,
                            699.0887,
                            new Dimension(139.8081),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.AboveEnd,
                        "velit",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        25721963.5546,
                        11800.5511,
                        true,
                        new Dimension(645.2340),
                    new TextSymbol("velit unde quas",
                        new MapColor(35, 244, 64),
                        new MapColor(140, 125, 178),
                            new Dimension(223.4411),
                        new MapFont(new Dimension(412.0116),
                                "Verdana",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            925.3417,
                        new MapColor(251, 164, 16),
                        new MapColor(53, 186, 18),
                            322.4899,
                        HorizontalAlignment.Left,
                            true,
                            715.9478,
                            new Dimension(688.1192),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("reprehenderit molestiae hic",
                        "recusandae",
                        ["voluptatem",
                            "aperiam"],
                    [new FieldInfo("phone",
                            "saepe",
                            "ab",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("avatar",
                            "quia",
                            "autem",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new MediaPopupContent("totam delectus repellendus",
                            "distinctio ad eum exercitationem",
                        [new LineChartMediaInfo("repudiandae adipisci ipsum",
                                "deserunt",
                                "qui odit qui",
                            new ChartMediaInfoValue(["cum",
                                    "sed"],
                                    "ipsam",
                                    "distinctio",
                                [new ChartMediaInfoValueSeries("category",
                                        "ratione",
                                        114.5703),
                                new ChartMediaInfoValueSeries("category",
                                        "necessitatibus",
                                        56.6574),
                                new ChartMediaInfoValueSeries("category",
                                        "aut",
                                        565.9778)],
                                [new MapColor(34, 99, 200),
                                new MapColor(236, 13, 140)])),
                        new ColumnChartMediaInfo("sit aut ut",
                                "consequuntur",
                                "eos porro ab",
                            new ChartMediaInfoValue(["et",
                                    "quisquam"],
                                    "laudantium",
                                    "distinctio",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "et",
                                        464.8641),
                                new ChartMediaInfoValueSeries("avatar",
                                        "omnis",
                                        852.0720)],
                                [new MapColor(252, 134, 123),
                                new MapColor(55, 89, 18),
                                new MapColor(236, 219, 174),
                                new MapColor(161, 163, 162)])),
                        new BarChartMediaInfo("possimus ut et",
                                "occaecati",
                                "qui impedit animi",
                            new ChartMediaInfoValue(["nam",
                                    "consectetur",
                                    "voluptatibus",
                                    "doloribus"],
                                    "est",
                                    "nihil",
                                [new ChartMediaInfoValueSeries("updatedAt",
                                        "ut",
                                        365.6431),
                                new ChartMediaInfoValueSeries("comment",
                                        "voluptatibus",
                                        456.8287),
                                new ChartMediaInfoValueSeries("category",
                                        "totam",
                                        890.4805)],
                                [new MapColor(31, 153, 203),
                                new MapColor(58, 110, 142)]))],
                            2)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "name",
                            "ad ea esse",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("amet maiores repellat",
                            "https://picsum.photos/640/480/?image=659",
                            "3764c81a-5078-9fe6-1d53-a34d8f292a29",
                            () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "minima"),
                    new ActionButton("harum aut nobis",
                            "https://picsum.photos/640/480/?image=941",
                            "a04fc81f-a63c-69ba-309b-52fe789cffa1",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "asperiores"),
                    new ActionToggle("exercitationem assumenda nihil",
                            "a4496c5b-ebe5-be63-cdc8-63f6e7f7c919",
                            () => { Console.WriteLine("quaerat"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "rerum")])),
            new Sublayer(5,
                    true,
                    true,
                ListMode.Show,
                    15150802.7716,
                    14828.8227,
                    0.1008,
                    true,
                    "cupiditate ut alias",
                    true,
                    "perspiciatis",
                new LayerFloorInfo("nostrum"),
                [new Label(LabelPlacement.CenterBefore,
                        "quia",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        39080892.4286,
                        15209.3872,
                        true,
                        new Dimension(251.3045),
                    new TextSymbol("quia sit quos",
                        new MapColor(129, 169, 170),
                        new MapColor(242, 252, 57),
                            new Dimension(602.3055),
                        new MapFont(new Dimension(34.5538),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            434.1380,
                        new MapColor(65, 173, 197),
                        new MapColor(138, 88, 180),
                            872.1583,
                        HorizontalAlignment.Center,
                            true,
                            86.8646,
                            new Dimension(316.3607),
                            true),
                        true,
                        "Age > 21")],
                new PopupTemplate("numquam ipsum sed",
                        "blanditiis",
                        ["fugiat",
                            "qui",
                            "quod",
                            "facere"],
                    [new FieldInfo("password",
                            "voluptatem",
                            "animi",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.ShortDateShortTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("token",
                            "vero",
                            "quibusdam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("category",
                            "quidem",
                            "sint",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("name",
                            "odio",
                            "alias",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.DayShortMonthYearLongTime24),
                            true,
                            true,
                        StatisticType.Stddev)],
                    [new TextPopupContent("corporis vel veritatis"),
                    new TextPopupContent("praesentium odit ipsam"),
                    new RelationshipPopupContent("labore cupiditate voluptas",
                            "tempore repellat et et animi qui",
                            3,
                            "aut",
                        [new RelatedRecordsInfoFieldOrder("recusandae",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("culpa",
                            OrderBy.Desc)],
                            8)],
                    [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "token",
                            "dolore non ut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("reiciendis ratione molestiae",
                            "d16ddb3a-8ec4-3e3a-b1d2-c9df84f46fbd",
                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "comment",
                            "vero")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(981.1159,
                    TileInfoFormat.Ps,
                    true,
                [new LOD(3,
                        "et",
                        24.3663,
                        14297290.7322),
                new LOD(2,
                        "atque",
                        12.9287,
                        15684892.1767),
                new LOD(3,
                        "cum",
                        67.5548,
                        18835251.6273)],
                new Point(114.0928,
                        -21.5922,
                        101.1374,
                        28.2173,
                        440.6918,
                    new SpatialReference(6,
                            "fugiat",
                            "et",
                            "consequatur"),
                        true,
                        true,
                        454.1025),
                    [7,
                        6,
                        1],
                new SpatialReference(3,
                        "est",
                        "qui",
                        "nostrum"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2000, 4, 15, 3, 17, 53),
                    new DateTime(2015, 1, 7, 1, 34, 54));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
