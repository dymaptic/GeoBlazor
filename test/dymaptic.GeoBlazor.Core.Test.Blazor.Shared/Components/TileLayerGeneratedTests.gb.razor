@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("aliquam")"
                        BlendMode="@(BlendMode.ColorBurn)"
                        Copyright="@("recusandae")"
                        Effect="@(new Effect("vel",
                            19859140.5238))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(37502312.3168)"
                        MinScale="@(19269.7499)"
                        Opacity="@(0.4414)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(270.7445)"
                        Resampling="@(true)"
                        TileServers="@(["rerum"])"
                        Title="@("nostrum consequatur delectus")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_ShortwaveInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2017, 11, 25, 0, 41, 18))"
                            End="@(new DateTime(2016, 8, 11, 10, 50, 38))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(958.7709)"
                            Format="@(TileInfoFormat.Png24)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(5,
                                    "eum",
                                    50.3090,
                                    29734875.2290),
                            new LOD(9,
                                    "omnis",
                                    68.7494,
                                    29409185.4280)])"
                            Origin="@(new Point(-30.7122,
                                    -53.5363,
                                    -169.9547,
                                    -39.2475,
                                    880.3060,
                                new SpatialReference(2,
                                        "mollitia",
                                        "sed",
                                        "est"),
                                    true,
                                    true,
                                    44.1357))"
                            Size="@([1])">
                            <SpatialReference 
                                Wkid="@(8)"
                                ImageCoordinateSystem="@("modi")"
                                Wkt="@("voluptatem")"
                                Wkt2="@("sint")">
                            </SpatialReference>
                        </TileInfo>
                        <PortalItem />
                        <Extent 
                            Xmax="@(-50.0366)"
                            Xmin="@(10.0457)"
                            Ymax="@(75.5332)"
                            Ymin="@(58.5339)"
                            Zmax="@(957.0092)"
                            Zmin="@(152.0246)"
                            Mmax="@(999.3166)"
                            Mmin="@(988.9369)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(9)"
                                ImageCoordinateSystem="@("eaque")"
                                Wkt="@("dolores")"
                                Wkt2="@("nobis")">
                            </SpatialReference>
                        </Extent>
                        <Sublayer 
                            SublayerId="@(5)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(29973515.2920)"
                            MinScale="@(30407.7280)"
                            Opacity="@(0.1710)"
                            PopupEnabled="@(true)"
                            Title="@("sunt enim exercitationem")"
                            Visible="@(true)"
                            DefinitionExpression="@("velit")"
                            FloorInfo="@(new LayerFloorInfo("magnam"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterCenter,
                                    "eum",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    9914181.0125,
                                    15459.9607,
                                    true,
                                    new Dimension(761.7918),
                                new TextSymbol("tempora ut officiis",
                                    new MapColor(54, 172, 94),
                                    new MapColor(38, 30, 96),
                                        new Dimension(619.3842),
                                    new MapFont(new Dimension(541.3196),
                                            "Garamond",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.Underline),
                                        51.3219,
                                    new MapColor(114, 18, 2),
                                    new MapColor(25, 166, 19),
                                        291.5802,
                                    HorizontalAlignment.Left,
                                        true,
                                        371.1890,
                                        new Dimension(711.1067),
                                        true),
                                    true,
                                    "Country = 'Canada'")])"
                            PopupTemplate="@(new PopupTemplate("natus tempore quo",
                                    "non",
                                    ["dicta"],
                                [new FieldInfo("status",
                                        "cupiditate",
                                        "sint",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(6,
                                            true,
                                        DateFormat.DayShortMonthYear),
                                        true,
                                        true,
                                    StatisticType.Stddev)],
                                [new TextPopupContent("aspernatur blanditiis voluptatem")],
                                [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "updatedAt",
                                        "ipsam consequatur ut",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("qui qui sed",
                                        "https://picsum.photos/640/480/?image=260",
                                        "b474e0ac-1cd0-706b-97eb-c981c78ac244",
                                        () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                                        "password",
                                        true,
                                        true,
                                        true,
                                        "enim"),
                                        new ActionButton("sed deleniti qui",
                                            "https://picsum.photos/640/480/?image=817",
                                            "f834a294-5441-2e84-f40f-6df9d37274f7",
                                            () => { Console.WriteLine("temporibus"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "et")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("reiciendis quo sequi",
                                    new MapColor(122, 104, 40),
                                    new MapColor(36, 223, 15),
                                        new Dimension(390.1523),
                                    new MapFont(new Dimension(855.8078),
                                            "Times New Roman",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        937.4748,
                                    new MapColor(254, 229, 242),
                                    new MapColor(92, 80, 154),
                                        710.1882,
                                    HorizontalAlignment.Center,
                                        true,
                                        35.8963,
                                        new Dimension(178.9356),
                                        true),
                                    "blanditiis",
                                [new RotationVariable("rerum",
                                    Axis.Roll,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "delectus vero ut"),
                                        "ab",
                                        "laboriosam repudiandae saepe")],
                                new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(149, 218, 239),
                                        new MapColor(76, 237, 198)),
                                        879.6060,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(756.0149,
                                                59.8121)],
                                            "deleniti",
                                            "adipisci",
                                            "nihil"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(330.2426,
                                                576.2673),
                                        new AuthoringInfoField1ClassBreakInfos(446.0537,
                                                592.5572)],
                                            "ducimus",
                                            "tenetur",
                                            "quis"),
                                        ["sed"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "quas",
                                        true,
                                    LengthUnit.Inches,
                                        289.0675,
                                        901.1628,
                                        558.2664,
                                        446.6275)))"
                            Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(2008395.4359)"
                                MinScale="@(48159.2719)"
                                Opacity="@(0.9741)"
                                PopupEnabled="@(true)"
                                Title="@("atque tenetur veritatis")"
                                Visible="@(true)"
                                DefinitionExpression="@("omnis")"
                                Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(3)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(28457160.8181)"
                                    MinScale="@(44650.5836)"
                                    Opacity="@(0.4457)"
                                    PopupEnabled="@(true)"
                                    Title="@("sequi et et")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("quam")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(8)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(12480751.0551)"
                                        MinScale="@(10737.6173)"
                                        Opacity="@(0.0436)"
                                        PopupEnabled="@(true)"
                                        Title="@("corporis quam ducimus")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("tempore")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(6)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(48636399.6900)"
                                            MinScale="@(34510.9482)"
                                            Opacity="@(0.3157)"
                                            PopupEnabled="@(true)"
                                            Title="@("et explicabo itaque")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("modi")"
                                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(9)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(25840969.9577)"
                                                MinScale="@(7838.5431)"
                                                Opacity="@(0.4961)"
                                                PopupEnabled="@(true)"
                                                Title="@("porro ut et")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("enim")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(5)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(19634831.8274)"
                                                    MinScale="@(18299.2391)"
                                                    Opacity="@(0.7450)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("excepturi dolor illo")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("error")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("rerum temporibus voluptas")"
                                                        StringContent="@("aut")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("explicabo")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("omnis cum et")"
                                                    StringContent="@("autem")"
                                                    OutFields="@(["nulla",
                                                        "molestiae"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new MediaPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton("labore et explicabo",
                                                        "https://picsum.photos/640/480/?image=116",
                                                        "388dfb99-2f66-a44b-b987-2ada2be3b13b",
                                                        () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                                        "createdAt",
                                                        true,
                                                        true,
                                                        true,
                                                        "nihil")])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveEnd)"
                                                    LabelExpression="@("est")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(16019817.8174)"
                                                    MinScale="@(31470.5899)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(494.7944))"
                                                    Symbol="@(new TextSymbol("magni adipisci eligendi"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Age > 21")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("aspernatur")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                    new MultipartColorRamp(),
                                                        156.1953,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["assumenda",
                                                            "consectetur"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "qui",
                                                        true,
                                                    LengthUnit.Centimeters,
                                                        349.8853,
                                                        269.7058,
                                                        75.5772,
                                                        489.0448))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("quam molestiae exercitationem")"
                                                StringContent="@("doloremque")"
                                                OutFields="@(["eos",
                                                    "voluptatem"])"
                                                FieldInfos="@([new FieldInfo("createdAt",
                                                        "veniam",
                                                        "eos",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("phone",
                                                        "asperiores",
                                                        "quisquam",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg)])"
                                                Content="@([new TextPopupContent("ut minima aut"),
                                                new RelationshipPopupContent("repellendus eos consequuntur",
                                                        "pariatur vel iusto",
                                                        9,
                                                        "reiciendis",
                                                    [new RelatedRecordsInfoFieldOrder()],
                                                        8)])"
                                                ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                        "comment",
                                                        "est amet illo"),
                                                new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                        "email",
                                                        "et eveniet distinctio")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("quae sit ratione",
                                                    "https://picsum.photos/640/480/?image=818",
                                                    "26f4cdc1-5555-5efc-9a43-8a2a43b7fd23",
                                                    () => { Console.WriteLine("illo"); return Task.CompletedTask; },
                                                    "createdAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "nesciunt"),
                                                    new ActionButton("tenetur autem est",
                                                        "https://picsum.photos/640/480/?image=970",
                                                        "a945efb7-846f-0212-d584-6648db35bc46",
                                                        () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                        "category",
                                                        true,
                                                        true,
                                                        true,
                                                        "fugiat")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveLeft)"
                                                LabelExpression="@("ea")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(31584612.8974)"
                                                MinScale="@(3987.9726)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(508.9328))"
                                                Symbol="@(new TextSymbol("praesentium qui molestiae",
                                                    new MapColor(7, 184, 178),
                                                    new MapColor(46, 97, 189),
                                                        null,
                                                    new MapFont(),
                                                        685.2610,
                                                    new MapColor(254, 180, 76),
                                                    new MapColor(201, 88, 85),
                                                        634.3789,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        884.3439,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("1 = 1")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("aut")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(168, 170, 225),
                                                    new MapColor(199, 43, 18)),
                                                    264.7676,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "et",
                                                        "nihil",
                                                        "et"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "libero",
                                                        "consequatur",
                                                        "ab"),
                                                    ["et"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "aspernatur",
                                                    true,
                                                LengthUnit.Kilometers,
                                                    63.5228,
                                                    929.0218,
                                                    848.1047,
                                                    657.1822))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("voluptatum fugit quibusdam")"
                                            StringContent="@("corporis")"
                                            OutFields="@(["nulla"])"
                                            FieldInfos="@([new FieldInfo("token",
                                                    "itaque",
                                                    "aut",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.LongDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count)])"
                                            Content="@([new FieldsPopupContent([new FieldInfo("token",
                                                        "rerum",
                                                        "rem",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum)],
                                                    "qui ab",
                                                    "et omnis pariatur"),
                                            new MediaPopupContent("aut soluta voluptatem",
                                                    "repudiandae blanditiis",
                                                [new ColumnChartMediaInfo("suscipit et animi",
                                                        "corrupti",
                                                        "minima consequatur quia",
                                                    new ChartMediaInfoValue())],
                                                    3)])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                    "password",
                                                    "et expedita quos",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "password",
                                                    "corporis iusto tempora",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("et aut dolores",
                                                "https://picsum.photos/640/480/?image=450",
                                                "f09e48c7-1424-de51-2074-047158de30f8",
                                                () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                                                "group",
                                                true,
                                                true,
                                                true,
                                                "veritatis")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.CenterAlong)"
                                            LabelExpression="@("atque")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(10248496.5417)"
                                            MinScale="@(19757.1202)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(406.7965))"
                                            Symbol="@(new TextSymbol("cum rerum cum",
                                                new MapColor(173, 241, 132),
                                                new MapColor(25, 201, 25),
                                                    new Dimension(973.1821),
                                                new MapFont(new Dimension(384.7593),
                                                        "Palatino",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Bold,
                                                    TextDecoration.Underline),
                                                    10.7267,
                                                new MapColor(100, 70, 199),
                                                new MapColor(48, 168, 122),
                                                    173.7126,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    33.9323,
                                                    new Dimension(250.0112),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Name = 'John Doe'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("nesciunt")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(232, 66, 118),
                                                new MapColor(93, 147, 26)),
                                                328.9429,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(955.2732,
                                                        981.3212)],
                                                    "autem",
                                                    "eaque",
                                                    "qui"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(466.4035,
                                                        414.9267)],
                                                    "et",
                                                    "deserunt",
                                                    "perspiciatis"),
                                                ["aut",
                                                    "dolores"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "quam",
                                                true,
                                            LengthUnit.Inches,
                                                596.3110,
                                                866.9180,
                                                972.0864,
                                                693.0368))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("excepturi ab aut")"
                                        StringContent="@("quas")"
                                        OutFields="@(["tenetur"])"
                                        FieldInfos="@([new FieldInfo("id",
                                                "sapiente",
                                                "nisi",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Min)])"
                                        Content="@([new RelationshipPopupContent("commodi modi perferendis",
                                                "inventore placeat quisquam",
                                                4,
                                                "et",
                                            [new RelatedRecordsInfoFieldOrder("ad",
                                                OrderBy.Asc),
                                            new RelatedRecordsInfoFieldOrder("facere",
                                                OrderBy.Desc)],
                                                8),
                                        new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "ipsam",
                                                    "sit animi et"))])"
                                        ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "token",
                                                "veniam harum quae",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("ab et repellendus",
                                            "https://picsum.photos/640/480/?image=241",
                                            "d7af7683-6cfb-976a-a914-af3b960a0a1d",
                                            () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                            "email",
                                            true,
                                            true,
                                            true,
                                            "sed")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.BelowCenter)"
                                        LabelExpression="@("sint")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(4398103.0550)"
                                        MinScale="@(38171.4034)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(249.1544))"
                                        Symbol="@(new TextSymbol("occaecati adipisci praesentium",
                                            new MapColor(60, 222, 127),
                                            new MapColor(92, 43, 67),
                                                new Dimension(651.0966),
                                            new MapFont(new Dimension(667.9338),
                                                    "Bookman",
                                                MapFontStyle.Normal,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                270.7430,
                                            new MapColor(69, 17, 241),
                                            new MapColor(92, 170, 122),
                                                783.9969,
                                            HorizontalAlignment.Left,
                                                true,
                                                255.3314,
                                                new Dimension(250.3728),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Name = 'John Doe'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("eligendi")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(14, 210, 135),
                                                new MapColor(86, 129, 13)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(184, 201, 45),
                                                new MapColor(64, 25, 179))]),
                                            594.3213,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(492.9963,
                                                    12.1474),
                                            new AuthoringInfoField1ClassBreakInfos(766.3051,
                                                    879.9324)],
                                                "sequi",
                                                "enim",
                                                "qui"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(663.0612,
                                                    584.0655)],
                                                "ullam",
                                                "minima",
                                                "quam"),
                                            ["voluptates"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "ut",
                                            true,
                                        LengthUnit.Millimeters,
                                            91.5010,
                                            991.8472,
                                            544.3467,
                                            808.5748))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("dolorem consequuntur repudiandae")"
                                    StringContent="@("ullam")"
                                    OutFields="@(["nobis"])"
                                    FieldInfos="@([new FieldInfo("id",
                                            "sit",
                                            "nostrum",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(3,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Var)])"
                                    Content="@([new TextPopupContent("odio distinctio quibusdam")])"
                                    ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "avatar",
                                            "voluptates cum tenetur",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("incidunt animi quos",
                                        "https://picsum.photos/640/480/?image=497",
                                        "17ef9d39-9543-0134-bae1-fe4e50053d61",
                                        () => { Console.WriteLine("minus"); return Task.CompletedTask; },
                                        "token",
                                        true,
                                        true,
                                        true,
                                        "rerum"),
                                        new ActionButton("inventore alias exercitationem",
                                            "https://picsum.photos/640/480/?image=234",
                                            "a240eee9-e6aa-0141-18b9-34c11ff7abaa",
                                            () => { Console.WriteLine("illo"); return Task.CompletedTask; },
                                            "category",
                                            true,
                                            true,
                                            true,
                                            "id")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterLeft)"
                                    LabelExpression="@("qui")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(19925280.5585)"
                                    MinScale="@(43604.2462)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(626.3303))"
                                    Symbol="@(new TextSymbol("est excepturi quis",
                                        new MapColor(60, 47, 82),
                                        new MapColor(176, 176, 188),
                                            new Dimension(992.1458),
                                        new MapFont(new Dimension(459.4243),
                                                "Georgia",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bolder,
                                            TextDecoration.Underline),
                                            33.1460,
                                        new MapColor(215, 30, 162),
                                        new MapColor(202, 161, 238),
                                            565.5621,
                                        HorizontalAlignment.Left,
                                            true,
                                            385.7466,
                                            new Dimension(18.6397),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Name = 'John Doe'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("tenetur")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(974.7383,
                216.3150,
                625.8231,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(8);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(817.4297,
                106.7968,
                299.4767);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.SourceAtop;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(179.8438,
                    146.8526,
                    -39.2855,
                    -6.8374,
                    63.5697,
                    40.4763,
                    355.6634,
                    578.6213,
                new SpatialReference(5,
                        "eaque",
                        "aperiam",
                        "deleniti"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(4,
                    true,
                    true,
                ListMode.Show,
                    17002359.7425,
                    14935.2999,
                    0.0952,
                    true,
                    "tempore sequi architecto",
                    true,
                    "ut",
                new LayerFloorInfo("cupiditate"),
                [new Label(LabelPlacement.CenterBefore,
                        "autem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        42914991.0969,
                        23480.3161,
                        true,
                        new Dimension(774.6114),
                    new TextSymbol("nisi sit illum",
                        new MapColor(252, 20, 118),
                        new MapColor(56, 38, 68),
                            new Dimension(488.2647),
                        new MapFont(new Dimension(141.0914),
                                "Courier New",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            327.8655,
                        new MapColor(208, 64, 205),
                        new MapColor(112, 230, 74),
                            770.8031,
                        HorizontalAlignment.Center,
                            true,
                            460.3357,
                            new Dimension(608.9131),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'")],
                new PopupTemplate("in impedit at",
                        "ut",
                        ["ut"],
                    [new FieldInfo("password",
                            "quae",
                            "nemo",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Max)],
                    [new AttachmentsPopupContent("consequatur minima non",
                            "animi esse iusto similique",
                            AttachmentsPopupContentDisplayType.Auto)],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "group",
                            "labore ex blanditiis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "group",
                            "iure et fugiat",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("magni est ut",
                            "https://picsum.photos/640/480/?image=483",
                            "5d95347d-f494-c677-011d-a3db2d8b99df",
                            () => { Console.WriteLine("perspiciatis"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "enim"),
                            new ActionButton("amet reprehenderit qui",
                                "https://picsum.photos/640/480/?image=280",
                                "3be352eb-baf2-f63c-8123-bd73c6e6e736",
                                () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                "email",
                                true,
                                true,
                                true,
                                "cupiditate")])),
            new Sublayer(6,
                    true,
                    true,
                ListMode.Show,
                    47109111.9871,
                    39091.3044,
                    0.5372,
                    true,
                    "repellat unde ut",
                    true,
                    "eligendi",
                new LayerFloorInfo("aperiam"),
                [new Label(LabelPlacement.CenterBefore,
                        "quia",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        32702440.1318,
                        34999.2183,
                        true,
                        new Dimension(570.5898),
                    new TextSymbol("dolor expedita sit",
                        new MapColor(159, 7, 22),
                        new MapColor(107, 121, 184),
                            new Dimension(568.8540),
                        new MapFont(new Dimension(85.8752),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            585.0061,
                        new MapColor(8, 196, 215),
                        new MapColor(225, 237, 195),
                            811.0186,
                        HorizontalAlignment.Left,
                            true,
                            965.7692,
                            new Dimension(840.5515),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.CenterAfter,
                        "quia",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        8208130.2835,
                        6545.1104,
                        true,
                        new Dimension(644.0772),
                    new TextSymbol("amet possimus recusandae",
                        new MapColor(36, 158, 170),
                        new MapColor(97, 158, 225),
                            new Dimension(664.2004),
                        new MapFont(new Dimension(489.2848),
                                "Courier New",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            403.8292,
                        new MapColor(155, 32, 254),
                        new MapColor(181, 230, 108),
                            406.2526,
                        HorizontalAlignment.Left,
                            true,
                            318.7630,
                            new Dimension(524.7178),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("culpa ex tenetur",
                        "ut",
                        ["autem"],
                    [new FieldInfo("email",
                            "sit",
                            "sunt",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearLongTime),
                            true,
                            true,
                        StatisticType.Stddev),
                    new FieldInfo("name",
                            "ducimus",
                            "vitae",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.ShortDateLeShortTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                "fugit",
                                "exercitationem aut aperiam"))],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "id",
                            "quia in minima",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "email",
                            "fugit hic corrupti",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("sed occaecati deserunt",
                            "https://picsum.photos/640/480/?image=354",
                            "152798c1-f318-601f-1df3-19b58357b035",
                            () => { Console.WriteLine("numquam"); return Task.CompletedTask; },
                            "comment",
                            true,
                            true,
                            true,
                            "reprehenderit")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(639.5945,
                    TileInfoFormat.Ps,
                    true,
                [new LOD(7,
                        "in",
                        2.8284,
                        5307437.2767)],
                new Point(-74.0127,
                        -61.8088,
                        -63.6012,
                        -38.1788,
                        141.8555,
                    new SpatialReference(3,
                            "architecto",
                            "perspiciatis",
                            "pariatur"),
                        true,
                        true,
                        759.8865),
                    [2,
                        9],
                new SpatialReference(2,
                        "id",
                        "temporibus",
                        "pariatur"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2007, 9, 23, 9, 18, 46),
                    new DateTime(2002, 10, 15, 5, 19, 51));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
