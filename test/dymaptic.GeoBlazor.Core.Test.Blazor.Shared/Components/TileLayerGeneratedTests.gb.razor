@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("necessitatibus")"
                        BlendMode="@(BlendMode.ColorDodge)"
                        Copyright="@("minima")"
                        Effect="@(new Effect("perferendis",
                            35000540.9079))"
                        FullExtent="@(new Extent(-72.5676,
                                113.5403,
                                -16.2546,
                                -20.0385,
                                995.7509,
                                598.7862,
                                785.5552,
                                118.2511,
                            new SpatialReference(5,
                                    "eos",
                                    "fugiat",
                                    "eos"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(2573224.2962)"
                        MinScale="@(24430.1932)"
                        Opacity="@(0.2402)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(91.5036)"
                        Resampling="@(true)"
                        TileServers="@(["id",
                            "nisi"])"
                        Title="@("possimus nesciunt perferendis")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_NearInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2015, 2, 12, 5, 24, 18))"
                            End="@(new DateTime(2013, 3, 16, 21, 10, 28))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(546.4429)"
                            Format="@(TileInfoFormat.Svg)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(4,
                                    "dolores",
                                    64.0166,
                                    43458877.7431),
                            new LOD(5,
                                    "quis",
                                    59.7832,
                                    8939490.3320),
                            new LOD(5,
                                    "incidunt",
                                    31.1639,
                                    10766846.5701),
                            new LOD(7,
                                    "et",
                                    86.1485,
                                    32217058.9888)])"
                            Origin="@(new Point(-36.3285,
                                    -44.4842,
                                    -14.4280,
                                    -83.4829,
                                    625.4401,
                                new SpatialReference(9,
                                        "alias",
                                        "animi",
                                        "laudantium"),
                                    true,
                                    true,
                                    459.4577))"
                            Size="@([1,
                                5,
                                1,
                                5])"
                            SpatialReference="@(new SpatialReference(6,
                                    "est",
                                    "vel",
                                    "reprehenderit"))">
                        </TileInfo>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(2)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Show)"
                            MaxScale="@(41146060.5025)"
                            MinScale="@(21135.1213)"
                            Opacity="@(0.5627)"
                            PopupEnabled="@(true)"
                            Title="@("aut ex eos")"
                            Visible="@(true)"
                            DefinitionExpression="@("ut")"
                            FloorInfo="@(new LayerFloorInfo("voluptatem"))"
                            LabelingInfo="@([new Label(LabelPlacement.BelowAfter,
                                    "laboriosam",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    34458969.3706,
                                    2863.2328,
                                    true,
                                    new Dimension(809.3985),
                                new TextSymbol("animi earum consequatur",
                                    new MapColor(22, 131, 199),
                                    new MapColor(64, 174, 112),
                                        new Dimension(870.9932),
                                    new MapFont(new Dimension(17.1606),
                                            "Georgia",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        211.9978,
                                    new MapColor(33, 62, 114),
                                    new MapColor(45, 251, 232),
                                        610.5435,
                                    HorizontalAlignment.Center,
                                        true,
                                        892.9665,
                                        new Dimension(737.2078),
                                        true),
                                    true,
                                    "Name = 'John Doe'"),
                            new Label(LabelPlacement.CenterAfter,
                                    "quaerat",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    39070183.1315,
                                    38632.5987,
                                    true,
                                    new Dimension(552.6750),
                                new TextSymbol("omnis rerum nisi",
                                    new MapColor(225, 13, 244),
                                    new MapColor(127, 20, 129),
                                        new Dimension(137.4942),
                                    new MapFont(new Dimension(69.1771),
                                            "Helvetica",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.Underline),
                                        813.8071,
                                    new MapColor(254, 110, 186),
                                    new MapColor(159, 185, 222),
                                        101.1062,
                                    HorizontalAlignment.Left,
                                        true,
                                        880.0300,
                                        new Dimension(330.2168),
                                        true),
                                    true,
                                    "1 = 1"),
                            new Label(LabelPlacement.BelowCenter,
                                    "incidunt",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    15643463.8433,
                                    22665.6174,
                                    true,
                                    new Dimension(41.9410),
                                new TextSymbol("nesciunt ullam earum",
                                    new MapColor(242, 37, 175),
                                    new MapColor(140, 97, 168),
                                        new Dimension(759.7071),
                                    new MapFont(new Dimension(667.4944),
                                            "Verdana",
                                        MapFontStyle.Normal,
                                        FontWeight.Normal,
                                        TextDecoration.None),
                                        898.0634,
                                    new MapColor(170, 211, 241),
                                    new MapColor(84, 200, 212),
                                        720.0794,
                                    HorizontalAlignment.Left,
                                        true,
                                        835.6536,
                                        new Dimension(269.1579),
                                        true),
                                    true,
                                    "PostalCode = 'M5V 1J9'"),
                            new Label(LabelPlacement.AboveBefore,
                                    "id",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    13590876.7276,
                                    1706.5057,
                                    true,
                                    new Dimension(552.4287),
                                new TextSymbol("quidem autem est",
                                    new MapColor(129, 86, 123),
                                    new MapColor(208, 236, 35),
                                        new Dimension(526.0061),
                                    new MapFont(new Dimension(760.9292),
                                            "Helvetica",
                                        MapFontStyle.Normal,
                                        FontWeight.Lighter,
                                        TextDecoration.LineThrough),
                                        66.9182,
                                    new MapColor(35, 3, 58),
                                    new MapColor(109, 146, 58),
                                        63.6117,
                                    HorizontalAlignment.Left,
                                        true,
                                        501.6586,
                                        new Dimension(388.2161),
                                        true),
                                    true,
                                    "Country = 'Canada'")])"
                            PopupTemplate="@(new PopupTemplate("beatae iure nobis",
                                    "autem",
                                    ["maiores",
                                        "rem",
                                        "earum"],
                                [new FieldInfo("token",
                                        "aliquam",
                                        "quaerat",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongMonthYear),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new TextPopupContent("debitis sunt ut"),
                                new RelationshipPopupContent("iure error et",
                                        "nisi soluta modi consequatur",
                                        1,
                                        "harum",
                                    [new RelatedRecordsInfoFieldOrder("corrupti",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("eveniet",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("ab",
                                        OrderBy.Asc)],
                                        9),
                                new TextPopupContent("et mollitia doloremque")],
                                [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "comment",
                                        "laborum iusto dicta",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                        "title",
                                        "autem deserunt autem",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("corporis omnis doloremque",
                                        "https://picsum.photos/640/480/?image=510",
                                        "2121e1db-2029-b689-42bc-ad616da2cb66",
                                        () => { Console.WriteLine("iusto"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "et"),
                                new ActionToggle("delectus vero magni",
                                        "a1ea4e80-0b4b-adbc-8ae5-ebad8bbf6d1b",
                                        () => { Console.WriteLine("cum"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "name",
                                        "sit")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("velit iste velit",
                                    new MapColor(87, 55, 46),
                                    new MapColor(126, 4, 254),
                                        new Dimension(159.4427),
                                    new MapFont(new Dimension(485.2791),
                                            "Palatino",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        596.3972,
                                    new MapColor(192, 236, 111),
                                    new MapColor(3, 90, 158),
                                        14.3820,
                                    HorizontalAlignment.Left,
                                        true,
                                        160.6299,
                                        new Dimension(62.7225),
                                        true),
                                    "est",
                                [new OpacityVariable("id",
                                        "ipsum",
                                    [new OpacityStop(27.2362,
                                            0.3785,
                                            "odit"),
                                    new OpacityStop(839.6529,
                                            0.4042,
                                            "adipisci")],
                                    new VisualVariableLegendOptions(true,
                                            "aut illo unde"),
                                        "esse",
                                        "aut omnis ut")],
                                new AuthoringInfo(ClassificationMethod.Manual,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(87, 77, 107),
                                            new MapColor(208, 44, 4)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(24, 57, 232),
                                            new MapColor(111, 66, 182)),
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(67, 222, 162),
                                            new MapColor(120, 47, 187))]),
                                        100.5616,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(953.0807,
                                                383.8489),
                                        new AuthoringInfoField1ClassBreakInfos(968.5784,
                                                598.0003)],
                                            "quis",
                                            "autem",
                                            "quam"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(399.8351,
                                                741.8772),
                                        new AuthoringInfoField1ClassBreakInfos(162.5204,
                                                746.1196)],
                                            "et",
                                            "ipsam",
                                            "fugit"),
                                        ["nemo",
                                            "sit"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "eos",
                                        true,
                                    LengthUnit.Millimeters,
                                        607.7689,
                                        362.1381,
                                        492.1087,
                                        773.8428)))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(1)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(45886132.6108)"
                                MinScale="@(48105.3346)"
                                Opacity="@(0.8348)"
                                PopupEnabled="@(true)"
                                Title="@("voluptates sint maiores")"
                                Visible="@(true)"
                                DefinitionExpression="@("voluptatem")"
                                Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                <Sublayer 
                                    SublayerId="@(6)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(25877281.0379)"
                                    MinScale="@(12592.5440)"
                                    Opacity="@(0.0009)"
                                    PopupEnabled="@(true)"
                                    Title="@("deserunt omnis vel")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("sequi")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(7)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(18773640.6179)"
                                        MinScale="@(463.3474)"
                                        Opacity="@(0.8706)"
                                        PopupEnabled="@(true)"
                                        Title="@("fugiat repellat quam")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("asperiores")"
                                        Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(7)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(5006731.4397)"
                                            MinScale="@(33959.3038)"
                                            Opacity="@(0.5009)"
                                            PopupEnabled="@(true)"
                                            Title="@("tempore eum corporis")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("quod")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(3)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(1015856.2996)"
                                                MinScale="@(38632.2747)"
                                                Opacity="@(0.2735)"
                                                PopupEnabled="@(true)"
                                                Title="@("laboriosam provident quidem")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("minus")"
                                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(1)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(28166924.2085)"
                                                    MinScale="@(39915.8789)"
                                                    Opacity="@(0.2430)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("fuga ut enim")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("est")"
                                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("nihil placeat consequatur")"
                                                        StringContent="@("et")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("ut")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("qui cupiditate assumenda")"
                                                    StringContent="@("accusantium")"
                                                    OutFields="@(["ipsam",
                                                        "quod",
                                                        "in",
                                                        "aut"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new MediaPopupContent(),
                                                    new MediaPopupContent(),
                                                    new ExpressionPopupContent(),
                                                    new ExpressionPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "c3c8356e-ba48-b856-78a3-b91e6d1d6ca3",
                                                            () => { Console.WriteLine("ea"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "48cca917-a8ad-7dd8-93a0-09e3123858f7",
                                                            () => { Console.WriteLine("quasi"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterBefore)"
                                                    LabelExpression="@("ex")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Curved)"
                                                    MaxScale="@(8635308.0859)"
                                                    MinScale="@(11341.8769)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(361.1588))"
                                                    Symbol="@(new TextSymbol("et rerum qui"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Name = 'John Doe'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("dolore")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                    new MultipartColorRamp(),
                                                        341.0030,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["et",
                                                            "est",
                                                            "quia",
                                                            "sint"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "accusamus",
                                                        true,
                                                    LengthUnit.Meters,
                                                        859.3391,
                                                        565.3067,
                                                        799.2090,
                                                        394.9196))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("nulla rerum minima")"
                                                StringContent="@("inventore")"
                                                OutFields="@(["ut",
                                                    "rerum",
                                                    "autem"])"
                                                FieldInfos="@([new FieldInfo("id",
                                                        "aliquam",
                                                        "dolore",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Max),
                                                new FieldInfo("phone",
                                                        "quia",
                                                        "consequatur",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("group",
                                                        "molestias",
                                                        "voluptatem",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)])"
                                                Content="@([new AttachmentsPopupContent("sint asperiores vero",
                                                        "dolores doloremque aut tempore beatae dolor"),
                                                new AttachmentsPopupContent("rerum esse ab",
                                                        "culpa enim repudiandae id"),
                                                new MediaPopupContent("tempore porro at",
                                                        "ut magnam consequatur et commodi enim",
                                                    [new LineChartMediaInfo()],
                                                        5),
                                                new TextPopupContent("aliquam quia veniam")])"
                                                ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "category",
                                                        "quod autem facere"),
                                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                        "password",
                                                        "saepe voluptatem at"),
                                                new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                        "category",
                                                        "architecto et reiciendis")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("laboriosam officia nam",
                                                        "136fc5bd-89a1-ad25-bca2-6eacec01fbbb",
                                                        () => { Console.WriteLine("autem"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "updatedAt",
                                                        "qui"),
                                                new ActionToggle("aspernatur hic et",
                                                        "cfe300be-5399-e127-7b7a-797181963018",
                                                        () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "phone",
                                                        "est"),
                                                new ActionButton("minima totam eum",
                                                        "https://picsum.photos/640/480/?image=791",
                                                        "6c9e9481-0aca-46d0-8d4f-8d9cfe7ff775",
                                                        () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                                                        "category",
                                                        true,
                                                        true,
                                                        true,
                                                        "ab"),
                                                new ActionButton("aut voluptatem officia",
                                                        "https://picsum.photos/640/480/?image=1049",
                                                        "6c11311e-8ac4-efa3-5906-60dd8443dd60",
                                                        () => { Console.WriteLine("pariatur"); return Task.CompletedTask; },
                                                        "category",
                                                        true,
                                                        true,
                                                        true,
                                                        "est")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveAlong)"
                                                LabelExpression="@("vel")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(41709900.7911)"
                                                MinScale="@(29515.0587)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(267.1355))"
                                                Symbol="@(new TextSymbol("architecto deserunt possimus",
                                                    new MapColor(55, 63, 225),
                                                    new MapColor(2, 230, 171),
                                                        null,
                                                    new MapFont(),
                                                        429.2336,
                                                    new MapColor(82, 189, 243),
                                                    new MapColor(76, 185, 112),
                                                        936.9253,
                                                    HorizontalAlignment.Right,
                                                        true,
                                                        517.9742,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Name = 'John Doe'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("rerum")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.CieLab)]),
                                                    44.5761,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "iste",
                                                        "velit",
                                                        "saepe"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "maxime",
                                                        "dolorem",
                                                        "rem"),
                                                    ["doloremque",
                                                        "dolorem"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "magnam",
                                                    true,
                                                LengthUnit.Miles,
                                                    553.0587,
                                                    52.7072,
                                                    172.7958,
                                                    385.4904))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("quod repellat quo")"
                                            StringContent="@("in")"
                                            OutFields="@(["sunt",
                                                "ut"])"
                                            FieldInfos="@([new FieldInfo("createdAt",
                                                    "sed",
                                                    "placeat",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.LongMonthDayYear),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("avatar",
                                                    "dolor",
                                                    "blanditiis",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(9,
                                                        true,
                                                    DateFormat.ShortDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Sum)])"
                                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "beatae",
                                                        "expedita laborum esse")),
                                            new TextPopupContent("temporibus qui ut"),
                                            new TextPopupContent("voluptate labore tempora"),
                                            new FieldsPopupContent([new FieldInfo("group",
                                                        "magnam",
                                                        "aut",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Var),
                                                new FieldInfo("title",
                                                        "sed",
                                                        "enim",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum)],
                                                    "officia reprehenderit vitae enim perferendis qui",
                                                    "reprehenderit dicta ea")])"
                                            ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "name",
                                                    "laboriosam debitis temporibus",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("dignissimos sit porro",
                                                    "https://picsum.photos/640/480/?image=513",
                                                    "f61c0672-6ca4-0767-3594-218e4d2c3a76",
                                                    () => { Console.WriteLine("error"); return Task.CompletedTask; },
                                                    "name",
                                                    true,
                                                    true,
                                                    true,
                                                    "distinctio"),
                                            new ActionButton("omnis enim et",
                                                    "https://picsum.photos/640/480/?image=178",
                                                    "1f92ec60-e350-8a05-833e-e12141d18e6b",
                                                    () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                                    "title",
                                                    true,
                                                    true,
                                                    true,
                                                    "eaque"),
                                            new ActionToggle("unde voluptatem corporis",
                                                    "c1b1a53a-374f-3451-e537-853c374dc3c9",
                                                    () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "updatedAt",
                                                    "velit"),
                                            new ActionButton("et non earum",
                                                    "https://picsum.photos/640/480/?image=566",
                                                    "d3e86b9b-e424-f4a3-7483-f3cd97937c21",
                                                    () => { Console.WriteLine("laboriosam"); return Task.CompletedTask; },
                                                    "email",
                                                    true,
                                                    true,
                                                    true,
                                                    "ex")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveBefore)"
                                            LabelExpression="@("veritatis")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(3085266.0391)"
                                            MinScale="@(26531.1232)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(141.9831))"
                                            Symbol="@(new TextSymbol("voluptatem corporis hic",
                                                new MapColor(233, 169, 118),
                                                new MapColor(40, 25, 76),
                                                    new Dimension(50.9298),
                                                new MapFont(new Dimension(891.3808),
                                                        "Verdana",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Normal,
                                                    TextDecoration.None),
                                                    182.6619,
                                                new MapColor(2, 78, 75),
                                                new MapColor(31, 19, 27),
                                                    250.8407,
                                                HorizontalAlignment.Right,
                                                    true,
                                                    680.8972,
                                                    new Dimension(175.7838),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("1 = 1")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("debitis")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(194, 73, 39),
                                                new MapColor(23, 173, 180)),
                                                144.4693,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(18.3962,
                                                        498.2994),
                                                new AuthoringInfoField1ClassBreakInfos(625.8142,
                                                        860.2566),
                                                new AuthoringInfoField1ClassBreakInfos(710.8667,
                                                        553.7277)],
                                                    "voluptas",
                                                    "autem",
                                                    "necessitatibus"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(369.6311,
                                                        765.4720),
                                                new AuthoringInfoField1ClassBreakInfos(737.8824,
                                                        583.9734),
                                                new AuthoringInfoField1ClassBreakInfos(219.9123,
                                                        927.0555),
                                                new AuthoringInfoField1ClassBreakInfos(797.6521,
                                                        246.5007)],
                                                    "quisquam",
                                                    "et",
                                                    "quos"),
                                                ["dolorem",
                                                    "dolorem",
                                                    "corporis",
                                                    "cupiditate"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "sunt",
                                                true,
                                            LengthUnit.Yards,
                                                40.5927,
                                                987.5444,
                                                827.2287,
                                                383.9462))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("sit dignissimos praesentium")"
                                        StringContent="@("quibusdam")"
                                        OutFields="@(["earum",
                                            "nostrum"])"
                                        FieldInfos="@([new FieldInfo("token",
                                                "ipsam",
                                                "cum",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("email",
                                                "in",
                                                "nostrum",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(5,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("phone",
                                                "vel",
                                                "quas",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("name",
                                                "culpa",
                                                "exercitationem",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.DayShortMonthYearLongTime24),
                                                true,
                                                true,
                                            StatisticType.Var)])"
                                        Content="@([new FieldsPopupContent([new FieldInfo("avatar",
                                                    "ex",
                                                    "voluptatum",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortDateLongTime),
                                                    true,
                                                    true,
                                                StatisticType.Var)],
                                                "dolorum molestiae suscipit nesciunt",
                                                "porro non est")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "comment",
                                                "occaecati asperiores et",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("soluta fugiat amet",
                                                "https://picsum.photos/640/480/?image=653",
                                                "0ae0a1a1-8f4b-a725-5077-536e5802cbdf",
                                                () => { Console.WriteLine("fugiat"); return Task.CompletedTask; },
                                                "createdAt",
                                                true,
                                                true,
                                                true,
                                                "itaque")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveEnd)"
                                        LabelExpression="@("sapiente")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(19321055.0767)"
                                        MinScale="@(49858.0739)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(591.5613))"
                                        Symbol="@(new TextSymbol("pariatur fugiat cum",
                                            new MapColor(66, 17, 29),
                                            new MapColor(43, 99, 5),
                                                new Dimension(869.5647),
                                            new MapFont(new Dimension(815.7864),
                                                    "Bookman",
                                                MapFontStyle.Oblique,
                                                FontWeight.Normal,
                                                TextDecoration.Underline),
                                                836.8021,
                                            new MapColor(170, 131, 16),
                                            new MapColor(198, 97, 95),
                                                59.6781,
                                            HorizontalAlignment.Right,
                                                true,
                                                536.9361,
                                                new Dimension(196.3920),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("ObjectID = 1")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("perspiciatis")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(236, 37, 242),
                                                new MapColor(58, 227, 47)),
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(84, 144, 17),
                                                new MapColor(159, 249, 205)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(252, 114, 143),
                                                new MapColor(129, 99, 116)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(5, 108, 19),
                                                new MapColor(39, 122, 100))]),
                                            892.7997,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(447.0174,
                                                    255.6776),
                                            new AuthoringInfoField1ClassBreakInfos(707.2761,
                                                    448.9462),
                                            new AuthoringInfoField1ClassBreakInfos(17.6407,
                                                    913.2171),
                                            new AuthoringInfoField1ClassBreakInfos(809.0830,
                                                    927.1122)],
                                                "minima",
                                                "distinctio",
                                                "qui"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(140.6246,
                                                    678.6019),
                                            new AuthoringInfoField1ClassBreakInfos(261.0710,
                                                    465.3218),
                                            new AuthoringInfoField1ClassBreakInfos(549.0665,
                                                    783.9357),
                                            new AuthoringInfoField1ClassBreakInfos(432.5051,
                                                    760.1592)],
                                                "aut",
                                                "aut",
                                                "est"),
                                            ["ea",
                                                "vitae"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "debitis",
                                            true,
                                        LengthUnit.Yards,
                                            455.4820,
                                            377.0443,
                                            149.6192,
                                            682.4170))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("non similique ipsam")"
                                    StringContent="@("recusandae")"
                                    OutFields="@(["natus",
                                        "animi",
                                        "ut"])"
                                    FieldInfos="@([new FieldInfo("comment",
                                            "cumque",
                                            "unde",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("password",
                                            "exercitationem",
                                            "eveniet",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDateLe),
                                            true,
                                            true,
                                        StatisticType.Count),
                                    new FieldInfo("createdAt",
                                            "placeat",
                                            "voluptatem",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.LongMonthYear),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("name",
                                            "velit",
                                            "nam",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongMonthDayYearShortTime24),
                                            true,
                                            true,
                                        StatisticType.Min)])"
                                    Content="@([new AttachmentsPopupContent("modi minus quidem",
                                            "ipsa libero dolorem aliquam",
                                            AttachmentsPopupContentDisplayType.Preview),
                                    new AttachmentsPopupContent("natus dolores enim",
                                            "quaerat ut autem incidunt consectetur sit",
                                            AttachmentsPopupContentDisplayType.Preview),
                                    new TextPopupContent("numquam eius similique")])"
                                    ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "avatar",
                                            "facere sed nostrum",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("aut et ut",
                                            "3e84467b-dc25-8533-0445-16d5c506c955",
                                            () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "updatedAt",
                                            "commodi")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterCenter)"
                                    LabelExpression="@("ut")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(5415572.0846)"
                                    MinScale="@(26419.4443)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(946.6469))"
                                    Symbol="@(new TextSymbol("impedit non autem",
                                        new MapColor(10, 62, 64),
                                        new MapColor(245, 95, 131),
                                            new Dimension(685.5551),
                                        new MapFont(new Dimension(939.3761),
                                                "Palatino",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bolder,
                                            TextDecoration.Underline),
                                            484.9233,
                                        new MapColor(101, 125, 83),
                                        new MapColor(184, 230, 231),
                                            697.9560,
                                        HorizontalAlignment.Right,
                                            true,
                                            873.2627,
                                            new Dimension(178.6700),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Country = 'Canada'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("rerum")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(515.3951,
                356.9686,
                211.5898,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(48.5724,
                793.0216,
                19.1315);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.DestinationIn;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-92.3314,
                    38.6636,
                    68.8995,
                    -50.8469,
                    86.1953,
                    184.1034,
                    787.6436,
                    602.9952,
                new SpatialReference(3,
                        "et",
                        "dicta",
                        "dolor"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(2,
                    true,
                    true,
                ListMode.Hide,
                    35965025.3263,
                    20889.1000,
                    0.0107,
                    true,
                    "modi quia nesciunt",
                    true,
                    "ad",
                new LayerFloorInfo("fugiat"),
                [new Label(LabelPlacement.AboveAlong,
                        "eum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        2805587.1745,
                        9302.6349,
                        true,
                        new Dimension(503.2711),
                    new TextSymbol("non quo omnis",
                        new MapColor(20, 158, 46),
                        new MapColor(210, 112, 225),
                            new Dimension(736.9544),
                        new MapFont(new Dimension(19.7733),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            238.2921,
                        new MapColor(146, 40, 5),
                        new MapColor(48, 16, 23),
                            97.7045,
                        HorizontalAlignment.Left,
                            true,
                            530.2115,
                            new Dimension(170.6439),
                            true),
                        true,
                        "Name = 'John Doe'"),
                new Label(LabelPlacement.CenterStart,
                        "et",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        38002050.7794,
                        32094.8379,
                        true,
                        new Dimension(23.3155),
                    new TextSymbol("architecto sed doloribus",
                        new MapColor(68, 9, 135),
                        new MapColor(208, 92, 39),
                            new Dimension(533.0080),
                        new MapFont(new Dimension(727.5866),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            982.4693,
                        new MapColor(9, 108, 144),
                        new MapColor(120, 130, 152),
                            264.2691,
                        HorizontalAlignment.Center,
                            true,
                            792.6811,
                            new Dimension(576.5192),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("quisquam ducimus libero",
                        "tempora",
                        ["velit",
                            "amet",
                            "officia"],
                    [new FieldInfo("name",
                            "quasi",
                            "placeat",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(5,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("createdAt",
                            "iure",
                            "impedit",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateShortTime),
                            true,
                            true,
                        StatisticType.Var)],
                    [new MediaPopupContent("id tempore facere",
                            "saepe debitis quia ut laboriosam nemo quaerat",
                        [new LineChartMediaInfo("in iste accusamus",
                                "recusandae",
                                "vero aut velit",
                            new ChartMediaInfoValue(["atque",
                                    "doloremque",
                                    "delectus"],
                                    "voluptas",
                                    "sequi",
                                [new ChartMediaInfoValueSeries("email",
                                        "aut",
                                        67.7631)],
                                [new MapColor(133, 5, 195),
                                new MapColor(135, 210, 144),
                                new MapColor(228, 11, 216)])),
                        new PieChartMediaInfo("eius voluptate iste",
                                "dignissimos",
                                "sed qui et",
                            new ChartMediaInfoValue(["minima",
                                    "repudiandae",
                                    "corporis"],
                                    "debitis",
                                    "dolorem",
                                [new ChartMediaInfoValueSeries("password",
                                        "sunt",
                                        533.8260),
                                new ChartMediaInfoValueSeries("phone",
                                        "voluptatem",
                                        196.0587),
                                new ChartMediaInfoValueSeries("id",
                                        "non",
                                        139.7086)],
                                [new MapColor(158, 7, 225),
                                new MapColor(31, 189, 153)])),
                        new LineChartMediaInfo("nulla quae sapiente",
                                "voluptatibus",
                                "doloribus magni et",
                            new ChartMediaInfoValue(["molestiae",
                                    "at",
                                    "eveniet"],
                                    "doloribus",
                                    "id",
                                [new ChartMediaInfoValueSeries("name",
                                        "nostrum",
                                        166.4976),
                                new ChartMediaInfoValueSeries("title",
                                        "eos",
                                        71.0630),
                                new ChartMediaInfoValueSeries("name",
                                        "eveniet",
                                        688.0307),
                                new ChartMediaInfoValueSeries("category",
                                        "qui",
                                        686.0627)],
                                [new MapColor(29, 77, 180),
                                new MapColor(151, 150, 20)]))],
                            8),
                    new TextPopupContent("at deserunt quis")],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "token",
                            "amet praesentium architecto",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "createdAt",
                            "reiciendis voluptas voluptatem",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "group",
                            "reiciendis ad ut",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("provident quis sunt",
                            "https://picsum.photos/640/480/?image=776",
                            "79880886-d687-c6d5-480c-263120f58d95",
                            () => { Console.WriteLine("nulla"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "nobis"),
                    new ActionButton("est autem rerum",
                            "https://picsum.photos/640/480/?image=108",
                            "733fcb5f-f4b3-b434-466a-4d57ee69e155",
                            () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "aspernatur")])),
            new Sublayer(8,
                    true,
                    true,
                ListMode.Show,
                    21573677.7749,
                    44011.7331,
                    0.6386,
                    true,
                    "vero illo nihil",
                    true,
                    "necessitatibus",
                new LayerFloorInfo("eos"),
                [new Label(LabelPlacement.CenterAlong,
                        "ipsum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        30843435.7357,
                        46920.6253,
                        true,
                        new Dimension(673.3459),
                    new TextSymbol("et rerum enim",
                        new MapColor(83, 124, 83),
                        new MapColor(128, 68, 192),
                            new Dimension(114.5219),
                        new MapFont(new Dimension(828.5781),
                                "Bookman",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.Underline),
                            383.8900,
                        new MapColor(154, 217, 231),
                        new MapColor(71, 60, 142),
                            640.1106,
                        HorizontalAlignment.Center,
                            true,
                            302.3422,
                            new Dimension(846.7694),
                            true),
                        true,
                        "1 = 1"),
                new Label(LabelPlacement.CenterAfter,
                        "voluptatem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        24255664.3690,
                        34291.8807,
                        true,
                        new Dimension(830.1129),
                    new TextSymbol("voluptatem voluptates reprehenderit",
                        new MapColor(150, 57, 148),
                        new MapColor(128, 172, 191),
                            new Dimension(165.0844),
                        new MapFont(new Dimension(445.5212),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.None),
                            477.9047,
                        new MapColor(27, 224, 40),
                        new MapColor(192, 153, 116),
                            368.5496,
                        HorizontalAlignment.Left,
                            true,
                            76.6494,
                            new Dimension(975.0557),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.AboveCenter,
                        "rem",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        49005379.7550,
                        10287.0806,
                        true,
                        new Dimension(206.7852),
                    new TextSymbol("fuga magni recusandae",
                        new MapColor(85, 171, 72),
                        new MapColor(30, 211, 22),
                            new Dimension(148.3102),
                        new MapFont(new Dimension(953.4224),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            518.3786,
                        new MapColor(105, 241, 27),
                        new MapColor(67, 11, 36),
                            311.7900,
                        HorizontalAlignment.Right,
                            true,
                            539.0662,
                            new Dimension(456.3185),
                            true),
                        true,
                        "Country = 'Canada'"),
                new Label(LabelPlacement.BelowRight,
                        "laboriosam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        26033102.9107,
                        3309.6919,
                        true,
                        new Dimension(72.2702),
                    new TextSymbol("ducimus id culpa",
                        new MapColor(234, 54, 28),
                        new MapColor(76, 220, 253),
                            new Dimension(552.2698),
                        new MapFont(new Dimension(648.8615),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            881.0730,
                        new MapColor(193, 203, 119),
                        new MapColor(42, 99, 17),
                            312.5040,
                        HorizontalAlignment.Right,
                            true,
                            712.4648,
                            new Dimension(859.2932),
                            true),
                        true,
                        "Province = 'Ontario'")],
                new PopupTemplate("reiciendis nihil dolorem",
                        "unde",
                        ["totam",
                            "deserunt",
                            "porro",
                            "dolores"],
                    [new FieldInfo("createdAt",
                            "natus",
                            "aliquid",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(3,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Max)],
                    [new MediaPopupContent("vel doloribus est",
                            "velit aut consequatur eum",
                        [new LineChartMediaInfo("tempore voluptatibus et",
                                "dolor",
                                "et voluptates molestiae",
                            new ChartMediaInfoValue(["officiis",
                                    "necessitatibus"],
                                    "laudantium",
                                    "quae",
                                [new ChartMediaInfoValueSeries("id",
                                        "dolorem",
                                        689.8727)],
                                [new MapColor(84, 211, 95)])),
                        new ImageMediaInfo("quae doloremque est",
                                "nostrum",
                                "quae aperiam commodi",
                            new ImageMediaInfoValue("http://leatha.biz",
                                    "http://murray.info"),
                                759.3444)],
                            9)],
                    [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                            "password",
                            "consequatur dolorum voluptate",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return Date();",
                            "group",
                            "et unde asperiores",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "comment",
                            "officiis quia officiis",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "status",
                            "omnis distinctio perspiciatis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("quia quos enim",
                            "63529254-5256-ec8e-4f01-158e6c300e71",
                            () => { Console.WriteLine("consequatur"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "ipsam"),
                    new ActionToggle("illo aut quia",
                            "04ad6216-784e-ad29-792b-461edacafa48",
                            () => { Console.WriteLine("hic"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "dolorem"),
                    new ActionToggle("facilis quod omnis",
                            "7fb40fd0-5d4f-64d4-b169-b0dae3297132",
                            () => { Console.WriteLine("reprehenderit"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "title",
                            "qui"),
                    new ActionToggle("qui et porro",
                            "8eb5d504-37b7-95ef-5666-35fbb45aebb6",
                            () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "provident")])),
            new Sublayer(1,
                    true,
                    true,
                ListMode.Hide,
                    648446.1537,
                    932.4117,
                    0.5630,
                    true,
                    "soluta et magni",
                    true,
                    "deleniti",
                new LayerFloorInfo("et"),
                [new Label(LabelPlacement.AboveAfter,
                        "quam",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        27825702.4714,
                        7937.2971,
                        true,
                        new Dimension(766.2049),
                    new TextSymbol("dolore rerum eius",
                        new MapColor(212, 123, 66),
                        new MapColor(125, 9, 77),
                            new Dimension(693.9900),
                        new MapFont(new Dimension(371.6399),
                                "Garamond",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            989.1219,
                        new MapColor(204, 43, 240),
                        new MapColor(5, 30, 119),
                            472.6814,
                        HorizontalAlignment.Center,
                            true,
                            564.6352,
                            new Dimension(154.8188),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.CenterAfter,
                        "laudantium",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        18277267.6614,
                        44121.7830,
                        true,
                        new Dimension(992.7902),
                    new TextSymbol("maiores dolorum eum",
                        new MapColor(148, 159, 135),
                        new MapColor(41, 60, 21),
                            new Dimension(607.4955),
                        new MapFont(new Dimension(578.9872),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            234.4464,
                        new MapColor(66, 234, 181),
                        new MapColor(214, 104, 143),
                            738.5653,
                        HorizontalAlignment.Left,
                            true,
                            765.5952,
                            new Dimension(374.2167),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AboveRight,
                        "itaque",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        12319597.7257,
                        42254.3678,
                        true,
                        new Dimension(659.2133),
                    new TextSymbol("qui aut non",
                        new MapColor(88, 210, 155),
                        new MapColor(131, 31, 181),
                            new Dimension(228.4227),
                        new MapFont(new Dimension(857.1546),
                                "Helvetica",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.None),
                            446.4504,
                        new MapColor(164, 219, 196),
                        new MapColor(2, 137, 172),
                            47.0471,
                        HorizontalAlignment.Center,
                            true,
                            633.0775,
                            new Dimension(680.7575),
                            true),
                        true,
                        "City = 'Toronto'"),
                new Label(LabelPlacement.AboveStart,
                        "porro",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        6505767.7116,
                        41736.9982,
                        true,
                        new Dimension(418.1144),
                    new TextSymbol("voluptatem perspiciatis porro",
                        new MapColor(242, 251, 54),
                        new MapColor(58, 27, 186),
                            new Dimension(374.7293),
                        new MapFont(new Dimension(190.9527),
                                "Georgia",
                            MapFontStyle.Oblique,
                            FontWeight.Normal,
                            TextDecoration.LineThrough),
                            812.1556,
                        new MapColor(78, 161, 90),
                        new MapColor(91, 60, 125),
                            750.4803,
                        HorizontalAlignment.Center,
                            true,
                            165.1450,
                            new Dimension(328.5200),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("officia totam est",
                        "sint",
                        ["earum",
                            "quis",
                            "vel",
                            "amet"],
                    [new FieldInfo("email",
                            "quis",
                            "magnam",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("email",
                            "debitis",
                            "non",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.Year),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("id",
                            "cumque",
                            "dolorum",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Var)],
                    [new TextPopupContent("repudiandae non dicta"),
                    new FieldsPopupContent([new FieldInfo("avatar",
                                "assumenda",
                                "voluptas",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.ShortDateLeLongTime),
                                true,
                                true,
                            StatisticType.Count),
                        new FieldInfo("phone",
                                "est",
                                "sequi",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.LongDateLongTime24),
                                true,
                                true,
                            StatisticType.Max)],
                            "voluptates vitae qui nesciunt modi ut voluptates",
                            "nam doloremque et"),
                    new MediaPopupContent("placeat quia quos",
                            "sunt minus dolorem ea ut aut",
                        [new LineChartMediaInfo("aut iusto et",
                                "voluptatem",
                                "omnis quis ex",
                            new ChartMediaInfoValue(["numquam",
                                    "consequatur",
                                    "debitis"],
                                    "voluptatem",
                                    "autem",
                                [new ChartMediaInfoValueSeries("id",
                                        "amet",
                                        623.5597)],
                                [new MapColor(101, 78, 51)])),
                        new ColumnChartMediaInfo("voluptatem sint ab",
                                "et",
                                "saepe eum aperiam",
                            new ChartMediaInfoValue(["id",
                                    "repellat",
                                    "ipsum"],
                                    "delectus",
                                    "aliquam",
                                [new ChartMediaInfoValueSeries("id",
                                        "et",
                                        362.7047),
                                new ChartMediaInfoValueSeries("phone",
                                        "repellat",
                                        624.8184)],
                                [new MapColor(175, 107, 59),
                                new MapColor(98, 223, 228),
                                new MapColor(93, 172, 53),
                                new MapColor(65, 178, 108)])),
                        new PieChartMediaInfo("ea provident ipsum",
                                "qui",
                                "explicabo itaque in",
                            new ChartMediaInfoValue(["quis",
                                    "et"],
                                    "voluptate",
                                    "velit",
                                [new ChartMediaInfoValueSeries("email",
                                        "qui",
                                        756.8994),
                                new ChartMediaInfoValueSeries("email",
                                        "velit",
                                        187.1961)],
                                [new MapColor(75, 223, 216)])),
                        new ImageMediaInfo("cumque sit omnis",
                                "reprehenderit",
                                "neque ex facere",
                            new ImageMediaInfoValue("https://beth.name",
                                    "https://queen.name"),
                                454.3646)],
                            8)],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "updatedAt",
                            "laudantium minus non",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "category",
                            "voluptatum inventore quibusdam",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "comment",
                            "et molestiae et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("dolorum dolores natus",
                            "https://picsum.photos/640/480/?image=539",
                            "7d4e655a-9ef8-9acd-4180-f4884835163d",
                            () => { Console.WriteLine("unde"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "eaque"),
                    new ActionButton("consectetur quasi nesciunt",
                            "https://picsum.photos/640/480/?image=643",
                            "fb8f5dc8-5ee7-2450-2f7b-403543b04ebc",
                            () => { Console.WriteLine("asperiores"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "alias")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(4.8428,
                    TileInfoFormat.Png24,
                    true,
                [new LOD(1,
                        "distinctio",
                        3.4873,
                        4396692.4683)],
                new Point(46.0831,
                        -56.2369,
                        80.7123,
                        43.1292,
                        795.7992,
                    new SpatialReference(3,
                            "et",
                            "in",
                            "ut"),
                        true,
                        true,
                        702.9424),
                    [3,
                        3],
                new SpatialReference(1,
                        "qui",
                        "et",
                        "iste"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2002, 9, 12, 7, 57, 31),
                    new DateTime(2008, 10, 23, 20, 28, 58));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
