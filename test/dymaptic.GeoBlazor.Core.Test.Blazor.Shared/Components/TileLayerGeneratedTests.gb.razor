@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("aperiam")"
                        BlendMode="@(BlendMode.Minus)"
                        Copyright="@("est")"
                        Effect="@(new Effect("nulla",
                            26086354.6948))"
                        FullExtent="@(new Extent(-74.5500,
                                122.6766,
                                28.4743,
                                20.7364,
                                278.4237,
                                641.0139,
                                879.4832,
                                773.0683,
                            new SpatialReference(4,
                                    "sapiente",
                                    "itaque",
                                    "aspernatur"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(2515606.9635)"
                        MinScale="@(33511.5824)"
                        Opacity="@(0.0368)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(84.7012)"
                        Resampling="@(true)"
                        TileServers="@(["odio",
                            "laudantium"])"
                        Title="@("cum qui a")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_NearInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2021, 1, 9, 21, 53, 32))"
                            End="@(new DateTime(2016, 6, 14, 20, 2, 14))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(700.1609)"
                            Format="@(TileInfoFormat.Ps)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(9,
                                    "delectus",
                                    46.3452,
                                    1810754.2731),
                            new LOD(4,
                                    "libero",
                                    78.1576,
                                    3476955.4381),
                            new LOD(5,
                                    "qui",
                                    29.8814,
                                    9651894.7807),
                            new LOD(2,
                                    "earum",
                                    46.9360,
                                    6092862.0491)])"
                            Origin="@(new Point(-91.4930,
                                    -18.9904,
                                    -70.5514,
                                    -63.8784,
                                    744.1100,
                                new SpatialReference(9,
                                        "eos",
                                        "perferendis",
                                        "aperiam"),
                                    true,
                                    true,
                                    444.7526))"
                            Size="@([8,
                                4])"
                            SpatialReference="@(new SpatialReference(5,
                                    "sint",
                                    "quis",
                                    "labore"))">
                        </TileInfo>
                        <PortalItem />
                        <Sublayer 
                            SublayerId="@(8)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(49320706.7413)"
                            MinScale="@(5179.8222)"
                            Opacity="@(0.6251)"
                            PopupEnabled="@(true)"
                            Title="@("veritatis dolores aliquam")"
                            Visible="@(true)"
                            DefinitionExpression="@("necessitatibus")"
                            FloorInfo="@(new LayerFloorInfo("quae"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveRight,
                                    "nemo",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    1398915.2080,
                                    11038.8716,
                                    true,
                                    new Dimension(21.2955),
                                new TextSymbol("id soluta et",
                                    new MapColor(53, 62, 192),
                                    new MapColor(188, 156, 73),
                                        new Dimension(956.1693),
                                    new MapFont(new Dimension(876.3616),
                                            "Bookman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Normal,
                                        TextDecoration.Underline),
                                        912.7750,
                                    new MapColor(169, 123, 27),
                                    new MapColor(151, 66, 39),
                                        60.8512,
                                    HorizontalAlignment.Right,
                                        true,
                                        39.2964,
                                        new Dimension(763.2021),
                                        true),
                                    true,
                                    "Province = 'Ontario'"),
                            new Label(LabelPlacement.BelowRight,
                                    "voluptas",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    100399.3394,
                                    36933.1322,
                                    true,
                                    new Dimension(423.1309),
                                new TextSymbol("sequi ab sunt",
                                    new MapColor(100, 153, 220),
                                    new MapColor(163, 244, 251),
                                        new Dimension(822.1840),
                                    new MapFont(new Dimension(444.2902),
                                            "Courier New",
                                        MapFontStyle.Normal,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        985.1348,
                                    new MapColor(66, 122, 149),
                                    new MapColor(227, 140, 66),
                                        433.7978,
                                    HorizontalAlignment.Center,
                                        true,
                                        744.9055,
                                        new Dimension(361.6996),
                                        true),
                                    true,
                                    "Age > 21"),
                            new Label(LabelPlacement.BelowAlong,
                                    "ut",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Parallel,
                                    48340943.4653,
                                    2095.0416,
                                    true,
                                    new Dimension(356.8772),
                                new TextSymbol("fugit explicabo dignissimos",
                                    new MapColor(13, 1, 19),
                                    new MapColor(178, 166, 90),
                                        new Dimension(364.8710),
                                    new MapFont(new Dimension(677.8871),
                                            "Bookman",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        5.1535,
                                    new MapColor(23, 187, 23),
                                    new MapColor(148, 30, 153),
                                        307.9179,
                                    HorizontalAlignment.Left,
                                        true,
                                        697.7656,
                                        new Dimension(60.1633),
                                        true),
                                    true,
                                    "Country = 'Canada'")])"
                            PopupTemplate="@(new PopupTemplate("sunt necessitatibus maiores",
                                    "natus",
                                    ["rerum",
                                        "voluptatem"],
                                [new FieldInfo("createdAt",
                                        "qui",
                                        "saepe",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("group",
                                        "voluptatibus",
                                        "ipsum",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("name",
                                        "reprehenderit",
                                        "possimus",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(9,
                                            true,
                                        DateFormat.LongMonthDayYearShortTime),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("name",
                                        "quis",
                                        "blanditiis",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Min)],
                                [new TextPopupContent("rerum omnis commodi"),
                                new RelationshipPopupContent("nisi saepe eum",
                                        "placeat dolor natus aut quos voluptatem excepturi",
                                        9,
                                        "vitae",
                                    [new RelatedRecordsInfoFieldOrder("qui",
                                        OrderBy.Asc),
                                    new RelatedRecordsInfoFieldOrder("ducimus",
                                        OrderBy.Desc)],
                                        3)],
                                [new ExpressionInfo("return $feature['FieldName'];",
                                        "group",
                                        "assumenda doloribus optio",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                        "comment",
                                        "sed sapiente iure",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                        "updatedAt",
                                        "quas quas tempore",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Name;",
                                        "comment",
                                        "velit corrupti aut",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("aut ullam libero",
                                        "cb835523-c4d7-2c96-168e-90c5f9eefc3e",
                                        () => { Console.WriteLine("veritatis"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "category",
                                        "modi"),
                                new ActionButton("omnis exercitationem dolorem",
                                        "https://picsum.photos/640/480/?image=1019",
                                        "1000704f-d378-8d55-ff62-a73b48461e26",
                                        () => { Console.WriteLine("explicabo"); return Task.CompletedTask; },
                                        "category",
                                        true,
                                        true,
                                        true,
                                        "rerum"),
                                new ActionToggle("error quas magnam",
                                        "2885284f-f2c1-a128-9cb8-e64c4bc68f8b",
                                        () => { Console.WriteLine("quae"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "phone",
                                        "consequatur"),
                                new ActionToggle("quidem laboriosam omnis",
                                        "e323837b-87f1-c6c9-746c-ccb95212f0d4",
                                        () => { Console.WriteLine("quis"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "name",
                                        "error")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("eum odio omnis",
                                    new MapColor(50, 246, 233),
                                    new MapColor(94, 192, 176),
                                        new Dimension(938.1474),
                                    new MapFont(new Dimension(54.2515),
                                            "Georgia",
                                        MapFontStyle.Italic,
                                        FontWeight.Bold,
                                        TextDecoration.LineThrough),
                                        314.6764,
                                    new MapColor(148, 248, 45),
                                    new MapColor(178, 219, 182),
                                        841.4084,
                                    HorizontalAlignment.Left,
                                        true,
                                        408.6611,
                                        new Dimension(847.8816),
                                        true),
                                    "vero",
                                [new OpacityVariable("voluptatibus",
                                        "modi",
                                    [new OpacityStop(23.5042,
                                            0.5176,
                                            "tempora"),
                                    new OpacityStop(641.5502,
                                            0.3117,
                                            "odit"),
                                    new OpacityStop(115.1975,
                                            0.5524,
                                            "sit")],
                                    new VisualVariableLegendOptions(true,
                                            "tenetur unde et"),
                                        "nam",
                                        "molestiae eveniet illum"),
                                new OpacityVariable("quia",
                                        "et",
                                    [new OpacityStop(281.0004,
                                            0.8035,
                                            "eius"),
                                    new OpacityStop(564.6902,
                                            0.5190,
                                            "consequatur"),
                                    new OpacityStop(571.6753,
                                            0.9064,
                                            "quisquam")],
                                    new VisualVariableLegendOptions(true,
                                            "excepturi quis assumenda"),
                                        "reprehenderit",
                                        "suscipit aut labore"),
                                new SizeVariable("nam",
                                        new Dimension(392.7848),
                                        new Dimension(804.1956),
                                        447.6490,
                                        357.8214,
                                        VisualValueRepresentation.Diameter,
                                        VisualValueUnit.Meters,
                                        "ab",
                                        "in",
                                        true,
                                        VisualAxis.WidthAndDepth,
                                        "velit",
                                        "accusamus quo ea",
                                    new VisualVariableLegendOptions(true,
                                            "est ut quasi")),
                                new OpacityVariable("velit",
                                        "optio",
                                    [new OpacityStop(107.4357,
                                            0.0338,
                                            "officia"),
                                    new OpacityStop(616.3542,
                                            0.3809,
                                            "vel")],
                                    new VisualVariableLegendOptions(true,
                                            "vitae odit dolorem"),
                                        "illum",
                                        "accusantium in facere")],
                                new AuthoringInfo(ClassificationMethod.Quantile,
                                    new AlgorithmicColorRamp(Algorithm.LabLch,
                                        new MapColor(224, 173, 34),
                                        new MapColor(82, 208, 248)),
                                        982.5138,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(818.6029,
                                                863.5785),
                                        new AuthoringInfoField1ClassBreakInfos(450.3199,
                                                669.1235),
                                        new AuthoringInfoField1ClassBreakInfos(629.1864,
                                                244.3732)],
                                            "soluta",
                                            "ut",
                                            "aut"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(423.1798,
                                                508.6879)],
                                            "asperiores",
                                            "eos",
                                            "optio"),
                                        ["corrupti",
                                            "repellat",
                                            "cum",
                                            "animi"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "totam",
                                        true,
                                    LengthUnit.Inches,
                                        820.1004,
                                        20.4239,
                                        876.3478,
                                        896.6131)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(2)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(37347508.2229)"
                                MinScale="@(21774.0562)"
                                Opacity="@(0.0001)"
                                PopupEnabled="@(true)"
                                Title="@("velit aut eius")"
                                Visible="@(true)"
                                DefinitionExpression="@("molestiae")"
                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(4)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Show)"
                                    MaxScale="@(25384663.9456)"
                                    MinScale="@(40020.8045)"
                                    Opacity="@(0.3129)"
                                    PopupEnabled="@(true)"
                                    Title="@("at inventore consequatur")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("quam")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(5)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Hide)"
                                        MaxScale="@(13268789.2434)"
                                        MinScale="@(13504.9154)"
                                        Opacity="@(0.4107)"
                                        PopupEnabled="@(true)"
                                        Title="@("cum vel nulla")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("culpa")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(8)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Hide)"
                                            MaxScale="@(47490985.1387)"
                                            MinScale="@(10918.6127)"
                                            Opacity="@(0.1083)"
                                            PopupEnabled="@(true)"
                                            Title="@("in accusantium tempora")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("accusantium")"
                                            Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(7)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(25671259.9655)"
                                                MinScale="@(37724.6631)"
                                                Opacity="@(0.5807)"
                                                PopupEnabled="@(true)"
                                                Title="@("facere mollitia ut")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("nihil")"
                                                Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(4)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(17725359.3603)"
                                                    MinScale="@(36826.4944)"
                                                    Opacity="@(0.3887)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("officia officiis omnis")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("magnam")"
                                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("eum explicabo similique")"
                                                        StringContent="@("qui")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("in")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("in ducimus eum")"
                                                    StringContent="@("et")"
                                                    OutFields="@(["voluptatem",
                                                        "nisi",
                                                        "veritatis"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new MediaPopupContent(),
                                                    new ExpressionPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionToggle(null,
                                                            "ee3104f9-3c50-d799-1a2c-26f5793d50ec",
                                                            () => { Console.WriteLine("corporis"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "f3716b24-d69f-59e7-e05a-52989e0d4d8d",
                                                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionToggle(null,
                                                            "4a11f645-7854-ce79-db5e-a0e0e0cfe999",
                                                            () => { Console.WriteLine("quisquam"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterAfter)"
                                                    LabelExpression="@("qui")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(20293781.1897)"
                                                    MinScale="@(21995.9336)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(124.9393))"
                                                    Symbol="@(new TextSymbol("veniam qui quia"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("1 = 1")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("facilis")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                        892.5392,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["et",
                                                            "magni"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "asperiores",
                                                        true,
                                                    LengthUnit.Kilometers,
                                                        408.9827,
                                                        684.4455,
                                                        430.2956,
                                                        633.9786))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("a non sed")"
                                                StringContent="@("quam")"
                                                OutFields="@(["ex",
                                                    "ut",
                                                    "iste",
                                                    "ea"])"
                                                FieldInfos="@([new FieldInfo("id",
                                                        "a",
                                                        "quasi",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Avg),
                                                new FieldInfo("updatedAt",
                                                        "dignissimos",
                                                        "similique",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("avatar",
                                                        "enim",
                                                        "aut",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)])"
                                                Content="@([new ExpressionPopupContent(new ElementExpressionInfo()),
                                                new RelationshipPopupContent("corrupti nulla et",
                                                        "fugiat hic est incidunt",
                                                        8,
                                                        "tempora",
                                                    [new RelatedRecordsInfoFieldOrder()],
                                                        9),
                                                new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "qui voluptatem aut quidem quas",
                                                        "libero temporibus dolores"),
                                                new TextPopupContent("autem eum reprehenderit")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                        "avatar",
                                                        "omnis dolores voluptas"),
                                                new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                        "token",
                                                        "minima perferendis voluptatum"),
                                                new ExpressionInfo("return $feature.Name;",
                                                        "status",
                                                        "ratione necessitatibus aut")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("perferendis et id",
                                                        "https://picsum.photos/640/480/?image=680",
                                                        "7cb879df-f467-288a-924f-0933d531bc92",
                                                        () => { Console.WriteLine("dicta"); return Task.CompletedTask; },
                                                        "name",
                                                        true,
                                                        true,
                                                        true,
                                                        "mollitia"),
                                                new ActionToggle("omnis dolor temporibus",
                                                        "3bb7a000-309e-450d-4e4b-1ec85f30a11e",
                                                        () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "phone",
                                                        "magni"),
                                                new ActionButton("aut consequuntur illo",
                                                        "https://picsum.photos/640/480/?image=1039",
                                                        "825ce191-22c5-20e4-e720-3e0a41cb2188",
                                                        () => { Console.WriteLine("laudantium"); return Task.CompletedTask; },
                                                        "password",
                                                        true,
                                                        true,
                                                        true,
                                                        "fugiat"),
                                                new ActionToggle("praesentium sint possimus",
                                                        "7ac49ada-beed-bcb3-4b3f-cd38ea1c2884",
                                                        () => { Console.WriteLine("modi"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "id",
                                                        "dignissimos")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterBefore)"
                                                LabelExpression="@("aut")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(7116093.8131)"
                                                MinScale="@(15955.7750)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(269.7245))"
                                                Symbol="@(new TextSymbol("dolore officia cumque",
                                                    new MapColor(187, 31, 115),
                                                    new MapColor(213, 43, 56),
                                                        null,
                                                    new MapFont(),
                                                        208.4155,
                                                    new MapColor(158, 33, 204),
                                                    new MapColor(222, 69, 220),
                                                        781.1237,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        20.7929,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("City = 'Toronto'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("quasi")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.StandardDeviation,
                                                new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(13, 237, 141),
                                                    new MapColor(220, 39, 17)),
                                                    977.1231,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "alias",
                                                        "alias",
                                                        "repudiandae"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "a",
                                                        "provident",
                                                        "ullam"),
                                                    ["modi",
                                                        "nemo"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "recusandae",
                                                    true,
                                                LengthUnit.Meters,
                                                    217.5060,
                                                    885.2784,
                                                    162.8052,
                                                    934.0252))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("tempore maxime veniam")"
                                            StringContent="@("incidunt")"
                                            OutFields="@(["similique",
                                                "autem",
                                                "aut",
                                                "aspernatur"])"
                                            FieldInfos="@([new FieldInfo("updatedAt",
                                                    "neque",
                                                    "officia",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.ShortDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("email",
                                                    "deleniti",
                                                    "molestias",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.LongDateShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("email",
                                                    "vero",
                                                    "et",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.ShortDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Var),
                                            new FieldInfo("avatar",
                                                    "consequatur",
                                                    "perferendis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.ShortDateLeLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count)])"
                                            Content="@([new FieldsPopupContent([new FieldInfo("token",
                                                        "dicta",
                                                        "iste",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev)],
                                                    "nostrum commodi pariatur et expedita molestiae voluptatem",
                                                    "distinctio tempora qui")])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "avatar",
                                                    "repellat dolores nulla",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                    "category",
                                                    "dolorum est voluptatem",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("inventore autem a",
                                                    "https://picsum.photos/640/480/?image=827",
                                                    "2a54556d-98b1-fbdb-a7d3-2da04e8f1ee6",
                                                    () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                                    "password",
                                                    true,
                                                    true,
                                                    true,
                                                    "eum"),
                                            new ActionToggle("ut repellat dolor",
                                                    "d842fa53-2e31-e567-5800-fcfeb9a2c83a",
                                                    () => { Console.WriteLine("aut"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "name",
                                                    "ea"),
                                            new ActionToggle("alias non architecto",
                                                    "b0bd61c0-532e-ef48-1043-2b66ae6c5ca5",
                                                    () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "comment",
                                                    "natus")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowAfter)"
                                            LabelExpression="@("ut")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(3928170.7814)"
                                            MinScale="@(30964.0359)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(564.8161))"
                                            Symbol="@(new TextSymbol("rerum rerum qui",
                                                new MapColor(158, 51, 84),
                                                new MapColor(202, 225, 222),
                                                    new Dimension(80.6057),
                                                new MapFont(new Dimension(793.9618),
                                                        "Garamond",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Bolder,
                                                    TextDecoration.None),
                                                    542.7036,
                                                new MapColor(190, 72, 164),
                                                new MapColor(248, 174, 160),
                                                    633.8611,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    789.2200,
                                                    new Dimension(82.8933),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Age > 21")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("deserunt")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <SimpleRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(236, 49, 45),
                                                    new MapColor(29, 13, 190)),
                                                new AlgorithmicColorRamp(Algorithm.CieLab,
                                                    new MapColor(202, 148, 69),
                                                    new MapColor(14, 18, 175)),
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(212, 24, 4),
                                                    new MapColor(61, 177, 215))]),
                                                812.6526,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(56.3824,
                                                        525.9466)],
                                                    "voluptas",
                                                    "temporibus",
                                                    "dolorum"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(300.0300,
                                                        521.1535),
                                                new AuthoringInfoField1ClassBreakInfos(683.5315,
                                                        932.4805),
                                                new AuthoringInfoField1ClassBreakInfos(135.4028,
                                                        313.7136)],
                                                    "qui",
                                                    "optio",
                                                    "voluptatem"),
                                                ["modi",
                                                    "non"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "dolores",
                                                true,
                                            LengthUnit.Inches,
                                                644.0155,
                                                575.4781,
                                                933.5022,
                                                104.3077))">
                                    </SimpleRenderer>
                                    <PopupTemplate 
                                        Title="@("iusto consequatur pariatur")"
                                        StringContent="@("quia")"
                                        OutFields="@(["beatae",
                                            "et",
                                            "deserunt"])"
                                        FieldInfos="@([new FieldInfo("id",
                                                "quod",
                                                "qui",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateShortTime),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("name",
                                                "tenetur",
                                                "ratione",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(4,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Count),
                                        new FieldInfo("name",
                                                "sint",
                                                "enim",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateLongTime24),
                                                true,
                                                true,
                                            StatisticType.Max)])"
                                        Content="@([new AttachmentsPopupContent("doloremque quia dolores",
                                                "ut explicabo sit voluptatem",
                                                AttachmentsPopupContentDisplayType.Auto),
                                        new FieldsPopupContent([new FieldInfo("title",
                                                    "et",
                                                    "veritatis",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("email",
                                                    "dicta",
                                                    "consequatur",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("email",
                                                    "et",
                                                    "ab",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(8,
                                                        true,
                                                    DateFormat.ShortDateLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Avg)],
                                                "porro dolores perspiciatis velit veritatis",
                                                "et quis ea"),
                                        new RelationshipPopupContent("qui sit voluptate",
                                                "molestias tempora voluptatem et enim non qui",
                                                3,
                                                "molestias",
                                            [new RelatedRecordsInfoFieldOrder("saepe",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("et",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("officia",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("dolor",
                                                OrderBy.Desc)],
                                                1)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "group",
                                                "consequatur rem laborum",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                "email",
                                                "consequatur labore magnam",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("ut blanditiis voluptatibus",
                                                "8cf2d732-19e6-f70c-7f4f-ce36f8391098",
                                                () => { Console.WriteLine("voluptate"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "createdAt",
                                                "sed")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.BelowRight)"
                                        LabelExpression="@("et")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(25517380.5948)"
                                        MinScale="@(37464.5820)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(476.9771))"
                                        Symbol="@(new TextSymbol("doloribus atque consectetur",
                                            new MapColor(42, 94, 112),
                                            new MapColor(236, 222, 219),
                                                new Dimension(185.2335),
                                            new MapFont(new Dimension(340.3863),
                                                    "Arial",
                                                MapFontStyle.Normal,
                                                FontWeight.Bold,
                                                TextDecoration.None),
                                                527.7570,
                                            new MapColor(68, 140, 33),
                                            new MapColor(173, 240, 179),
                                                98.1467,
                                            HorizontalAlignment.Right,
                                                true,
                                                633.6493,
                                                new Dimension(556.6363),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Age > 21")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("et")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <UniqueValueRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(191, 105, 18),
                                                new MapColor(89, 17, 217)),
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(158, 33, 246),
                                                new MapColor(125, 116, 179))]),
                                            911.9172,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(996.5939,
                                                    114.1543)],
                                                "est",
                                                "quasi",
                                                "dolores"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(534.7237,
                                                    484.4797),
                                            new AuthoringInfoField1ClassBreakInfos(570.2028,
                                                    765.9449)],
                                                "magnam",
                                                "incidunt",
                                                "quod"),
                                            ["est",
                                                "sapiente",
                                                "non",
                                                "vitae"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "autem",
                                            true,
                                        LengthUnit.Centimeters,
                                            493.7897,
                                            569.8232,
                                            348.1633,
                                            637.3859))">
                                </UniqueValueRenderer>
                                <PopupTemplate 
                                    Title="@("autem voluptatem optio")"
                                    StringContent="@("laudantium")"
                                    OutFields="@(["beatae",
                                        "ducimus"])"
                                    FieldInfos="@([new FieldInfo("id",
                                            "cupiditate",
                                            "ea",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(4,
                                                true,
                                            DateFormat.DayShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Max)])"
                                    Content="@([new RelationshipPopupContent("sunt tempore et",
                                            "dolorem reiciendis est aut et inventore id",
                                            2,
                                            "quidem",
                                        [new RelatedRecordsInfoFieldOrder("deleniti",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("in",
                                            OrderBy.Asc)],
                                            5),
                                    new AttachmentsPopupContent("ducimus architecto aliquid",
                                            "assumenda pariatur repellendus vero nemo atque temporibus",
                                            AttachmentsPopupContentDisplayType.Auto)])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                            "updatedAt",
                                            "voluptate consequatur quisquam",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("aspernatur officiis in",
                                            "e667dae3-42a1-de3d-1506-9bf23e295130",
                                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "updatedAt",
                                            "eligendi"),
                                    new ActionButton("rerum repellat perspiciatis",
                                            "https://picsum.photos/640/480/?image=770",
                                            "5c1d7985-b7c1-653a-2642-b40ce5f3cd42",
                                            () => { Console.WriteLine("nihil"); return Task.CompletedTask; },
                                            "group",
                                            true,
                                            true,
                                            true,
                                            "quo"),
                                    new ActionButton("inventore incidunt sapiente",
                                            "https://picsum.photos/640/480/?image=308",
                                            "1ded9e5e-3591-14b4-dc85-38e4486522b4",
                                            () => { Console.WriteLine("ut"); return Task.CompletedTask; },
                                            "name",
                                            true,
                                            true,
                                            true,
                                            "ex"),
                                    new ActionToggle("non aliquam quia",
                                            "51f54a0f-a2bb-6e33-7e65-102a246ba7df",
                                            () => { Console.WriteLine("qui"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "email",
                                            "accusamus")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveBefore)"
                                    LabelExpression="@("voluptates")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Curved)"
                                    MaxScale="@(4269566.3223)"
                                    MinScale="@(39172.4061)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(152.8010))"
                                    Symbol="@(new TextSymbol("cumque sit saepe",
                                        new MapColor(96, 244, 58),
                                        new MapColor(17, 76, 120),
                                            new Dimension(587.2343),
                                        new MapFont(new Dimension(939.9617),
                                                "Georgia",
                                            MapFontStyle.Italic,
                                            FontWeight.Lighter,
                                            TextDecoration.None),
                                            357.5527,
                                        new MapColor(91, 108, 242),
                                        new MapColor(254, 13, 71),
                                            244.3167,
                                        HorizontalAlignment.Right,
                                            true,
                                            597.3432,
                                            new Dimension(888.9696),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("1 = 1")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("quas")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(727.9628,
                418.7092,
                769.2073,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(9);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(822.0091,
                330.5545,
                245.4447);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.ColorBurn;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(66.3549,
                    37.4790,
                    47.2950,
                    80.3774,
                    195.8458,
                    866.5227,
                    571.2322,
                    577.1682,
                new SpatialReference(7,
                        "est",
                        "omnis",
                        "sed"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(8,
                    true,
                    true,
                ListMode.Hide,
                    33247080.4263,
                    38491.3322,
                    0.3853,
                    true,
                    "esse et facere",
                    true,
                    "nulla",
                new LayerFloorInfo("dolor"),
                [new Label(LabelPlacement.CenterBefore,
                        "consequatur",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        36841443.5149,
                        49816.6049,
                        true,
                        new Dimension(395.8827),
                    new TextSymbol("delectus ducimus exercitationem",
                        new MapColor(154, 77, 38),
                        new MapColor(5, 65, 134),
                            new Dimension(812.0680),
                        new MapFont(new Dimension(848.0396),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            154.1112,
                        new MapColor(24, 29, 190),
                        new MapColor(127, 209, 149),
                            703.1285,
                        HorizontalAlignment.Left,
                            true,
                            510.8724,
                            new Dimension(982.3450),
                            true),
                        true,
                        "PostalCode = 'M5V 1J9'"),
                new Label(LabelPlacement.CenterAlong,
                        "ut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        26852628.8043,
                        33771.3084,
                        true,
                        new Dimension(97.5293),
                    new TextSymbol("quam nihil ut",
                        new MapColor(161, 62, 116),
                        new MapColor(114, 252, 65),
                            new Dimension(41.3380),
                        new MapFont(new Dimension(428.3590),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.None),
                            745.8520,
                        new MapColor(77, 135, 121),
                        new MapColor(44, 132, 80),
                            601.9316,
                        HorizontalAlignment.Right,
                            true,
                            916.3794,
                            new Dimension(511.2876),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.CenterCenter,
                        "voluptas",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        1882357.8049,
                        17093.9952,
                        true,
                        new Dimension(666.4436),
                    new TextSymbol("dolores unde eos",
                        new MapColor(146, 80, 188),
                        new MapColor(123, 123, 151),
                            new Dimension(754.5612),
                        new MapFont(new Dimension(657.5870),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            205.6076,
                        new MapColor(200, 246, 136),
                        new MapColor(36, 27, 119),
                            301.9313,
                        HorizontalAlignment.Left,
                            true,
                            300.0179,
                            new Dimension(909.9443),
                            true),
                        true,
                        "Street = '123 Main St.'")],
                new PopupTemplate("eum animi praesentium",
                        "id",
                        ["necessitatibus",
                            "beatae"],
                    [new FieldInfo("name",
                            "est",
                            "quia",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Min)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "sed",
                                "quia totam at"))],
                    [new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "password",
                            "voluptate eum nobis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("maxime sit beatae",
                            "https://picsum.photos/640/480/?image=921",
                            "6c52b8be-63c6-1b72-01c8-c52597c745d6",
                            () => { Console.WriteLine("ab"); return Task.CompletedTask; },
                            "password",
                            true,
                            true,
                            true,
                            "explicabo")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(541.8901,
                    TileInfoFormat.Tiff,
                    true,
                [new LOD(3,
                        "voluptate",
                        72.3133,
                        49847208.8018),
                new LOD(9,
                        "alias",
                        6.5889,
                        45072660.6788),
                new LOD(1,
                        "ratione",
                        67.4952,
                        34850284.3043)],
                new Point(-147.9411,
                        -74.8215,
                        -101.3386,
                        -64.3605,
                        243.8889,
                    new SpatialReference(7,
                            "autem",
                            "omnis",
                            "quis"),
                        true,
                        true,
                        848.4626),
                    [8,
                        7,
                        5],
                new SpatialReference(9,
                        "fuga",
                        "debitis",
                        "nulla"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2008, 2, 5, 5, 41, 21),
                    new DateTime(2014, 3, 27, 2, 33, 47));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
