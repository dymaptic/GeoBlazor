@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("iste")"
                        BlendMode="@(BlendMode.Screen)"
                        Copyright="@("magni")"
                        Effect="@(new Effect("quo",
                            43103172.5867))"
                        FullExtent="@(new Extent(-76.5951,
                                24.1914,
                                39.6675,
                                -61.4629,
                                84.5798,
                                273.5216,
                                960.9893,
                                820.1778,
                            new SpatialReference(1,
                                    "occaecati",
                                    "dolor",
                                    "tempora"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(19294527.6621)"
                        MinScale="@(43757.3123)"
                        Opacity="@(0.1073)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(606.0919)"
                        Resampling="@(true)"
                        TileServers="@(["fuga",
                            "id",
                            "dolorum",
                            "perferendis"])"
                        Title="@("vel culpa velit")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_NearInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2013, 2, 17, 14, 56, 52))"
                            End="@(new DateTime(2017, 11, 14, 16, 18, 51))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(473.2024)"
                            Format="@(TileInfoFormat.Mixed)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(2,
                                    "rerum",
                                    19.0097,
                                    19415437.6363)])"
                            Origin="@(new Point(-85.3087,
                                    65.4964,
                                    -21.4233,
                                    4.0315,
                                    694.2748,
                                new SpatialReference(6,
                                        "ullam",
                                        "adipisci",
                                        "et"),
                                    true,
                                    true,
                                    607.9260))"
                            Size="@([1,
                                7,
                                9,
                                5])"
                            SpatialReference="@(new SpatialReference(3,
                                    "earum",
                                    "nulla",
                                    "ex"))">
                        </TileInfo>
                        <Sublayer 
                            SublayerId="@(7)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(221442.6593)"
                            MinScale="@(20649.7322)"
                            Opacity="@(0.2231)"
                            PopupEnabled="@(true)"
                            Title="@("ea velit quibusdam")"
                            Visible="@(true)"
                            DefinitionExpression="@("molestiae")"
                            FloorInfo="@(new LayerFloorInfo("libero"))"
                            LabelingInfo="@([new Label(LabelPlacement.AlwaysHorizontal,
                                    "commodi",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    1201510.8010,
                                    27036.1427,
                                    true,
                                    new Dimension(145.4113),
                                new TextSymbol("qui nihil qui",
                                    new MapColor(68, 149, 114),
                                    new MapColor(86, 205, 37),
                                        new Dimension(234.2261),
                                    new MapFont(new Dimension(720.6450),
                                            "Courier New",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        17.1054,
                                    new MapColor(62, 58, 190),
                                    new MapColor(206, 229, 214),
                                        397.3754,
                                    HorizontalAlignment.Right,
                                        true,
                                        541.9316,
                                        new Dimension(229.1770),
                                        true),
                                    true,
                                    "1 = 1"),
                            new Label(LabelPlacement.CenterBefore,
                                    "commodi",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    14054343.8271,
                                    12952.1551,
                                    true,
                                    new Dimension(135.5486),
                                new TextSymbol("delectus commodi a",
                                    new MapColor(180, 75, 92),
                                    new MapColor(225, 71, 130),
                                        new Dimension(166.5964),
                                    new MapFont(new Dimension(259.0468),
                                            "Times New Roman",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bolder,
                                        TextDecoration.LineThrough),
                                        947.4803,
                                    new MapColor(240, 113, 7),
                                    new MapColor(144, 193, 217),
                                        70.8276,
                                    HorizontalAlignment.Left,
                                        true,
                                        776.8892,
                                        new Dimension(175.7786),
                                        true),
                                    true,
                                    "Name = 'John Doe'"),
                            new Label(LabelPlacement.AboveBefore,
                                    "laborum",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    16417645.9306,
                                    31550.7813,
                                    true,
                                    new Dimension(276.2001),
                                new TextSymbol("iusto rerum aut",
                                    new MapColor(250, 65, 243),
                                    new MapColor(178, 141, 195),
                                        new Dimension(125.6101),
                                    new MapFont(new Dimension(74.1628),
                                            "Arial",
                                        MapFontStyle.Oblique,
                                        FontWeight.Bold,
                                        TextDecoration.None),
                                        194.4548,
                                    new MapColor(53, 169, 89),
                                    new MapColor(204, 75, 228),
                                        794.6119,
                                    HorizontalAlignment.Center,
                                        true,
                                        671.8186,
                                        new Dimension(166.6858),
                                        true),
                                    true,
                                    "Phone = '555-555-5555'")])"
                            PopupTemplate="@(new PopupTemplate("asperiores praesentium deleniti",
                                    "et",
                                    ["ut",
                                        "ea",
                                        "sunt"],
                                [new FieldInfo("password",
                                        "ut",
                                        "dolores",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateShortTime24),
                                        true,
                                        true,
                                    StatisticType.Stddev),
                                new FieldInfo("phone",
                                        "non",
                                        "maxime",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLeLongTime),
                                        true,
                                        true,
                                    StatisticType.Max),
                                new FieldInfo("category",
                                        "facere",
                                        "sed",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(5,
                                            true,
                                        DateFormat.ShortDateLeShortTime24),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                            "libero",
                                            "sed saepe provident"))],
                                [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                        "name",
                                        "optio aperiam corporis",
                                        ExpressionInfoReturnType.String),
                                new ExpressionInfo("return $feature.Population / $feature.Area;",
                                        "title",
                                        "quia molestiae dolore",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionButton("aspernatur illo enim",
                                        "https://picsum.photos/640/480/?image=985",
                                        "53e92ee3-26b1-9756-ee16-4ba2e6f72d83",
                                        () => { Console.WriteLine("possimus"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "dolore"),
                                new ActionToggle("illum laudantium voluptatem",
                                        "ce075f61-8766-56bb-bfdd-2fd23ab39d84",
                                        () => { Console.WriteLine("saepe"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "name",
                                        "voluptatem")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("officia ut quasi",
                                    new MapColor(189, 58, 33),
                                    new MapColor(240, 201, 254),
                                        new Dimension(157.6804),
                                    new MapFont(new Dimension(189.0480),
                                            "Georgia",
                                        MapFontStyle.Italic,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        769.4075,
                                    new MapColor(124, 197, 64),
                                    new MapColor(50, 30, 175),
                                        672.8083,
                                    HorizontalAlignment.Center,
                                        true,
                                        292.5395,
                                        new Dimension(108.7977),
                                        true),
                                    "vel",
                                [new RotationVariable("odio",
                                    Axis.Tilt,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "omnis illum quae"),
                                        "temporibus",
                                        "rerum et rerum"),
                                new OpacityVariable("atque",
                                        "aut",
                                    [new OpacityStop(788.8693,
                                            0.4085,
                                            "soluta"),
                                    new OpacityStop(113.1980,
                                            0.7721,
                                            "dolorum"),
                                    new OpacityStop(922.1102,
                                            0.3513,
                                            "fugiat"),
                                    new OpacityStop(411.8286,
                                            0.8617,
                                            "expedita")],
                                    new VisualVariableLegendOptions(true,
                                            "ut sit vel"),
                                        "aperiam",
                                        "accusantium quo est"),
                                new ColorVariable("officiis",
                                        "tempora",
                                    [new ColorStop(268.9523,
                                        new MapColor(144, 3, 194),
                                            "neque")],
                                    new VisualVariableLegendOptions(true,
                                            "ea nesciunt eos"),
                                        "culpa",
                                        "dolore magni sint")],
                                new AuthoringInfo(ClassificationMethod.Quantile,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(70, 149, 8),
                                            new MapColor(102, 5, 242))]),
                                        333.5396,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(642.2298,
                                                510.8547),
                                        new AuthoringInfoField1ClassBreakInfos(572.1027,
                                                130.0469),
                                        new AuthoringInfoField1ClassBreakInfos(946.5287,
                                                211.6375),
                                        new AuthoringInfoField1ClassBreakInfos(710.1174,
                                                114.3158)],
                                            "eligendi",
                                            "vitae",
                                            "nostrum"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(259.0133,
                                                271.1495),
                                        new AuthoringInfoField1ClassBreakInfos(227.6640,
                                                642.6800)],
                                            "ea",
                                            "et",
                                            "consequuntur"),
                                        ["recusandae",
                                            "consectetur",
                                            "excepturi"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "eaque",
                                        true,
                                    LengthUnit.NauticalMiles,
                                        487.4002,
                                        456.8722,
                                        494.7222,
                                        897.0165)))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(9)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Hide)"
                                MaxScale="@(13427864.3739)"
                                MinScale="@(3325.5812)"
                                Opacity="@(0.5025)"
                                PopupEnabled="@(true)"
                                Title="@("omnis excepturi officia")"
                                Visible="@(true)"
                                DefinitionExpression="@("odit")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(4)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(24283728.7245)"
                                    MinScale="@(46261.4621)"
                                    Opacity="@(0.5199)"
                                    PopupEnabled="@(true)"
                                    Title="@("eos vero recusandae")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("sunt")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(4)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(12484194.6003)"
                                        MinScale="@(20852.1728)"
                                        Opacity="@(0.3481)"
                                        PopupEnabled="@(true)"
                                        Title="@("unde vel aut")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("consectetur")"
                                        Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(9)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(20095126.5233)"
                                            MinScale="@(17701.0844)"
                                            Opacity="@(0.1142)"
                                            PopupEnabled="@(true)"
                                            Title="@("et soluta voluptates")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("et")"
                                            Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(9)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(37614585.9824)"
                                                MinScale="@(41208.6244)"
                                                Opacity="@(0.9090)"
                                                PopupEnabled="@(true)"
                                                Title="@("est nesciunt tempore")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("et")"
                                                Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                                <Sublayer 
                                                    SublayerId="@(3)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Hide)"
                                                    MaxScale="@(2244567.5369)"
                                                    MinScale="@(1183.6864)"
                                                    Opacity="@(0.2794)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("omnis ut nihil")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("totam")"
                                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("vitae corporis nostrum")"
                                                        StringContent="@("nihil")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("magnam")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("aperiam modi maxime")"
                                                    StringContent="@("cumque")"
                                                    OutFields="@(["sequi",
                                                        "similique",
                                                        "aut",
                                                        "repudiandae"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true),
                                                        new FieldInfo(null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                                true)]),
                                                    new MediaPopupContent(),
                                                    new AttachmentsPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo(),
                                                    new ExpressionInfo(),
                                                    new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "30d7d683-d65e-6c08-3316-078271a9d413",
                                                            () => { Console.WriteLine("ipsum"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.AboveAfter)"
                                                    LabelExpression="@("autem")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(36233498.5097)"
                                                    MinScale="@(25906.7831)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(670.7666))"
                                                    Symbol="@(new TextSymbol("incidunt facere voluptas"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Phone = '555-555-5555'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("aut")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                    new MultipartColorRamp(),
                                                        798.3351,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["omnis",
                                                            "doloribus",
                                                            "et"],
                                                    AuthoringInfoFlowTheme.WaveFront,
                                                        "ut",
                                                        true,
                                                    LengthUnit.Miles,
                                                        73.3709,
                                                        356.7443,
                                                        171.1454,
                                                        460.1733))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("fugiat in commodi")"
                                                StringContent="@("nostrum")"
                                                OutFields="@(["placeat",
                                                    "ut"])"
                                                FieldInfos="@([new FieldInfo("phone",
                                                        "in",
                                                        "consequatur",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)])"
                                                Content="@([new MediaPopupContent("deleniti sapiente nesciunt",
                                                        "reiciendis ad et tempore aut beatae",
                                                    [new LineChartMediaInfo(),
                                                    new BarChartMediaInfo(),
                                                    new PieChartMediaInfo()],
                                                        5),
                                                new ExpressionPopupContent(new ElementExpressionInfo()),
                                                new ExpressionPopupContent(new ElementExpressionInfo())])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "name",
                                                        "adipisci quibusdam qui")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("omnis quod aut",
                                                        "https://picsum.photos/640/480/?image=423",
                                                        "645201e4-7e35-485d-a865-e689ff9fb81b",
                                                        () => { Console.WriteLine("sunt"); return Task.CompletedTask; },
                                                        "createdAt",
                                                        true,
                                                        true,
                                                        true,
                                                        "sunt"),
                                                new ActionButton("ipsum placeat aut",
                                                        "https://picsum.photos/640/480/?image=880",
                                                        "ab064032-8a54-6e02-ff63-7ff3732f11a5",
                                                        () => { Console.WriteLine("vel"); return Task.CompletedTask; },
                                                        "title",
                                                        true,
                                                        true,
                                                        true,
                                                        "et"),
                                                new ActionButton("iste animi maiores",
                                                        "https://picsum.photos/640/480/?image=624",
                                                        "0926c120-28c7-ad10-31c3-ff67ef016507",
                                                        () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                                        "id",
                                                        true,
                                                        true,
                                                        true,
                                                        "illo")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveStart)"
                                                LabelExpression="@("aliquid")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Curved)"
                                                MaxScale="@(43207182.1140)"
                                                MinScale="@(41796.9809)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(995.0005))"
                                                Symbol="@(new TextSymbol("accusantium sed aperiam",
                                                    new MapColor(29, 7, 51),
                                                    new MapColor(153, 147, 140),
                                                        null,
                                                    new MapFont(),
                                                        134.4614,
                                                    new MapColor(8, 110, 174),
                                                    new MapColor(155, 105, 6),
                                                        383.4871,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        668.5850,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("1 = 1")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("error")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.Hsv)]),
                                                    784.1482,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos()],
                                                        "temporibus",
                                                        "exercitationem",
                                                        "cupiditate"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "illo",
                                                        "quisquam",
                                                        "quis"),
                                                    ["ad",
                                                        "veniam",
                                                        "consequatur",
                                                        "in"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "quia",
                                                    true,
                                                LengthUnit.NauticalMiles,
                                                    168.6561,
                                                    303.6516,
                                                    764.6793,
                                                    475.9479))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("aut ut ea")"
                                            StringContent="@("aliquid")"
                                            OutFields="@(["nostrum",
                                                "sequi",
                                                "quaerat",
                                                "molestiae"])"
                                            FieldInfos="@([new FieldInfo("group",
                                                    "perferendis",
                                                    "eos",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(2,
                                                        true,
                                                    DateFormat.LongMonthDayYear),
                                                    true,
                                                    true,
                                                StatisticType.Count)])"
                                            Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature['FieldName'];",
                                                        "dolorem",
                                                        "eligendi officiis qui")),
                                            new FieldsPopupContent([new FieldInfo("name",
                                                        "natus",
                                                        "vero",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("email",
                                                        "amet",
                                                        "cupiditate",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("comment",
                                                        "voluptates",
                                                        "voluptatem",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min),
                                                new FieldInfo("comment",
                                                        "sed",
                                                        "adipisci",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count)],
                                                    "officiis fugit est omnis maiores quae",
                                                    "aperiam labore autem"),
                                            new RelationshipPopupContent("aut non sit",
                                                    "adipisci dolorem qui omnis tempora placeat vel",
                                                    9,
                                                    "quia",
                                                [new RelatedRecordsInfoFieldOrder("ad",
                                                    OrderBy.Desc)],
                                                    9)])"
                                            ExpressionInfos="@([new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                    "category",
                                                    "voluptas voluptate et",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                    "category",
                                                    "dolorum nihil dolorum",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return Date();",
                                                    "name",
                                                    "saepe deleniti esse",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature['FieldName'];",
                                                    "status",
                                                    "exercitationem facere aperiam",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("similique asperiores aspernatur",
                                                    "41646274-ec3f-6558-3975-a1c688db2c0c",
                                                    () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "category",
                                                    "consequuntur")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowLeft)"
                                            LabelExpression="@("omnis")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(12630633.5757)"
                                            MinScale="@(22351.0323)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(730.9232))"
                                            Symbol="@(new TextSymbol("cum temporibus velit",
                                                new MapColor(66, 102, 34),
                                                new MapColor(24, 42, 54),
                                                    new Dimension(844.2575),
                                                new MapFont(new Dimension(103.6911),
                                                        "Palatino",
                                                    MapFontStyle.Normal,
                                                    FontWeight.Bold,
                                                    TextDecoration.LineThrough),
                                                    974.8442,
                                                new MapColor(234, 8, 232),
                                                new MapColor(115, 234, 103),
                                                    396.4578,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    233.4690,
                                                    new Dimension(521.8764),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Street = '123 Main St.'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("iste")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                            new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                    new MapColor(93, 187, 73),
                                                    new MapColor(223, 88, 181))]),
                                                24.4016,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(52.5394,
                                                        903.6826),
                                                new AuthoringInfoField1ClassBreakInfos(743.4243,
                                                        402.4041)],
                                                    "accusamus",
                                                    "corporis",
                                                    "vel"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(340.8617,
                                                        412.8470),
                                                new AuthoringInfoField1ClassBreakInfos(828.1328,
                                                        854.8404),
                                                new AuthoringInfoField1ClassBreakInfos(342.3452,
                                                        961.6625)],
                                                    "est",
                                                    "labore",
                                                    "delectus"),
                                                ["exercitationem",
                                                    "et",
                                                    "voluptatem"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "deleniti",
                                                true,
                                            LengthUnit.Centimeters,
                                                596.7320,
                                                651.3018,
                                                335.1111,
                                                617.6481))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("dolor quia quasi")"
                                        StringContent="@("voluptatem")"
                                        OutFields="@(["quia",
                                            "nihil",
                                            "ut",
                                            "non"])"
                                        FieldInfos="@([new FieldInfo("group",
                                                "iure",
                                                "dolorem",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.ShortDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("createdAt",
                                                "et",
                                                "blanditiis",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Min),
                                        new FieldInfo("group",
                                                "possimus",
                                                "cumque",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.LongMonthYear),
                                                true,
                                                true,
                                            StatisticType.Avg)])"
                                        Content="@([new RelationshipPopupContent("optio ullam consequatur",
                                                "voluptatem ut magnam quaerat et",
                                                5,
                                                "in",
                                            [new RelatedRecordsInfoFieldOrder("sit",
                                                OrderBy.Desc),
                                            new RelatedRecordsInfoFieldOrder("ex",
                                                OrderBy.Desc)],
                                                2)])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                "title",
                                                "aperiam nihil est",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                                "updatedAt",
                                                "maiores nisi quae",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return Date();",
                                                "updatedAt",
                                                "ipsam nihil et",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "token",
                                                "voluptates quis et",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("consequatur et consequuntur",
                                                "https://picsum.photos/640/480/?image=717",
                                                "000cb965-c1da-f053-b738-f2660d547f52",
                                                () => { Console.WriteLine("odio"); return Task.CompletedTask; },
                                                "category",
                                                true,
                                                true,
                                                true,
                                                "sint")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.BelowBefore)"
                                        LabelExpression="@("harum")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                        LabelPosition="@(LabelPosition.Curved)"
                                        MaxScale="@(39121332.8783)"
                                        MinScale="@(25676.5537)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(674.3945))"
                                        Symbol="@(new TextSymbol("ratione est non",
                                            new MapColor(242, 55, 14),
                                            new MapColor(213, 80, 107),
                                                new Dimension(960.2420),
                                            new MapFont(new Dimension(259.4073),
                                                    "Times New Roman",
                                                MapFontStyle.Oblique,
                                                FontWeight.Normal,
                                                TextDecoration.LineThrough),
                                                879.5532,
                                            new MapColor(190, 133, 67),
                                            new MapColor(96, 138, 29),
                                                73.9896,
                                            HorizontalAlignment.Center,
                                                true,
                                                257.1711,
                                                new Dimension(426.5911),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("Province = 'Ontario'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("et")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(181, 10, 52),
                                                new MapColor(124, 166, 219)),
                                            new AlgorithmicColorRamp(Algorithm.Hsv,
                                                new MapColor(144, 120, 26),
                                                new MapColor(2, 66, 39)),
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(56, 216, 183),
                                                new MapColor(113, 33, 14))]),
                                            35.8779,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(823.4680,
                                                    864.9227)],
                                                "iste",
                                                "minima",
                                                "et"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(799.2067,
                                                    566.8556),
                                            new AuthoringInfoField1ClassBreakInfos(452.3024,
                                                    549.9508),
                                            new AuthoringInfoField1ClassBreakInfos(107.1589,
                                                    982.6235),
                                            new AuthoringInfoField1ClassBreakInfos(803.7692,
                                                    528.2787)],
                                                "nesciunt",
                                                "qui",
                                                "quod"),
                                            ["et",
                                                "aut",
                                                "eius",
                                                "quia"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "minima",
                                            true,
                                        LengthUnit.Inches,
                                            620.0858,
                                            975.2842,
                                            232.0863,
                                            183.9983))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("sit error ratione")"
                                    StringContent="@("autem")"
                                    OutFields="@(["provident",
                                        "sunt",
                                        "atque"])"
                                    FieldInfos="@([new FieldInfo("category",
                                            "quo",
                                            "sed",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.ShortDateLeShortTime24),
                                            true,
                                            true,
                                        StatisticType.Var)])"
                                    Content="@([new TextPopupContent("accusantium a qui"),
                                    new RelationshipPopupContent("earum accusamus nulla",
                                            "temporibus harum veritatis animi a",
                                            2,
                                            "debitis",
                                        [new RelatedRecordsInfoFieldOrder("incidunt",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("fuga",
                                            OrderBy.Desc),
                                        new RelatedRecordsInfoFieldOrder("maiores",
                                            OrderBy.Desc)],
                                            6),
                                    new FieldsPopupContent([new FieldInfo("title",
                                                "consequatur",
                                                "quibusdam",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.LongDate),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("phone",
                                                "omnis",
                                                "voluptates",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(6,
                                                    true,
                                                DateFormat.ShortDateShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("createdAt",
                                                "vero",
                                                "temporibus",
                                            StringFieldOption.TextBox,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongMonthDayYear),
                                                true,
                                                true,
                                            StatisticType.Stddev),
                                        new FieldInfo("title",
                                                "et",
                                                "voluptates",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(1,
                                                    true,
                                                DateFormat.ShortDateLeLongTime),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                            "ipsam consequatur perspiciatis veniam",
                                            "assumenda molestiae ut"),
                                    new MediaPopupContent("sed ea consequatur",
                                            "repellat id eum ratione dolor est rerum",
                                        [new BarChartMediaInfo("eos est et",
                                                "eius",
                                                "aperiam assumenda vel",
                                            new ChartMediaInfoValue(["aut",
                                                    "animi",
                                                    "accusamus"],
                                                    "fugiat",
                                                    "voluptatem",
                                                [new ChartMediaInfoValueSeries("name",
                                                        "architecto",
                                                        633.7801),
                                                new ChartMediaInfoValueSeries("id",
                                                        "et",
                                                        308.7972),
                                                new ChartMediaInfoValueSeries("token",
                                                        "quis",
                                                        183.6779)],
                                                [new MapColor(238, 212, 150)])),
                                        new ColumnChartMediaInfo("quia labore et",
                                                "vel",
                                                "est quas necessitatibus",
                                            new ChartMediaInfoValue(["nam",
                                                    "eaque",
                                                    "alias",
                                                    "sint"],
                                                    "officia",
                                                    "aut",
                                                [new ChartMediaInfoValueSeries("createdAt",
                                                        "laudantium",
                                                        296.2990)],
                                                [new MapColor(85, 114, 84)])),
                                        new LineChartMediaInfo("repudiandae corrupti et",
                                                "repudiandae",
                                                "aut numquam hic",
                                            new ChartMediaInfoValue(["praesentium",
                                                    "ut",
                                                    "amet",
                                                    "magnam"],
                                                    "rerum",
                                                    "et",
                                                [new ChartMediaInfoValueSeries("createdAt",
                                                        "ullam",
                                                        52.6546),
                                                new ChartMediaInfoValueSeries("title",
                                                        "nulla",
                                                        912.1533)],
                                                [new MapColor(147, 9, 94),
                                                new MapColor(160, 113, 145),
                                                new MapColor(234, 16, 177)])),
                                        new LineChartMediaInfo("nesciunt velit voluptatem",
                                                "sequi",
                                                "voluptatem numquam rem",
                                            new ChartMediaInfoValue(["ipsa",
                                                    "eum",
                                                    "est",
                                                    "libero"],
                                                    "illum",
                                                    "assumenda",
                                                [new ChartMediaInfoValueSeries("name",
                                                        "quis",
                                                        413.6225),
                                                new ChartMediaInfoValueSeries("category",
                                                        "ipsam",
                                                        977.6758),
                                                new ChartMediaInfoValueSeries("avatar",
                                                        "aliquam",
                                                        965.3148),
                                                new ChartMediaInfoValueSeries("avatar",
                                                        "libero",
                                                        884.9609)],
                                                [new MapColor(38, 60, 113),
                                                new MapColor(63, 173, 166)]))],
                                            6)])"
                                    ExpressionInfos="@([new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                            "password",
                                            "ea quia et",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature.Name;",
                                            "updatedAt",
                                            "voluptatem rerum amet",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "avatar",
                                            "et omnis facilis",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionToggle("dolorem minus beatae",
                                            "c61f4dab-427e-b3c3-93af-8532cf99e99a",
                                            () => { Console.WriteLine("voluptatem"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "avatar",
                                            "ipsum")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterStart)"
                                    LabelExpression="@("eius")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(13653498.5962)"
                                    MinScale="@(24916.1132)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(134.3770))"
                                    Symbol="@(new TextSymbol("commodi placeat commodi",
                                        new MapColor(54, 6, 41),
                                        new MapColor(191, 175, 196),
                                            new Dimension(917.1433),
                                        new MapFont(new Dimension(626.1238),
                                                "Garamond",
                                            MapFontStyle.Italic,
                                            FontWeight.Lighter,
                                            TextDecoration.None),
                                            528.0718,
                                        new MapColor(219, 110, 44),
                                        new MapColor(144, 182, 56),
                                            751.3477,
                                        HorizontalAlignment.Left,
                                            true,
                                            736.6746,
                                            new Dimension(415.0098),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Country = 'Canada'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("voluptates")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(388.2676,
                57.6108,
                471.0641,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(7);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(17.3890,
                486.0434,
                664.0604);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.Color;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-109.2048,
                    -172.0603,
                    -1.6741,
                    75.6982,
                    830.5873,
                    427.9377,
                    642.5313,
                    97.6913,
                new SpatialReference(6,
                        "quia",
                        "molestiae",
                        "qui"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "id",
                    "maxime",
                    848.6058,
                    ["sed",
                        "eaque",
                        "rerum"],
                    new DateTime(2009, 4, 7, 10, 5, 35),
                    "qui",
                    "aut est est quo vitae",
                new Extent(116.1214,
                        86.8235,
                        0.8505,
                        65.6890,
                        436.5283,
                        648.6597,
                        840.8807,
                        953.5085,
                    new SpatialReference(7,
                            "aut",
                            "maiores",
                            "vitae"),
                        true,
                        true),
                    ["odit",
                        "non",
                        "voluptates",
                        "omnis"],
                    "exercitationem",
                    new DateTime(2003, 6, 12, 7, 21, 7),
                    "email",
                    851.7405);
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(5,
                    true,
                    true,
                ListMode.Show,
                    26561730.2002,
                    39479.7289,
                    0.7827,
                    true,
                    "quia pariatur amet",
                    true,
                    "deleniti",
                new LayerFloorInfo("ut"),
                [new Label(LabelPlacement.CenterAfter,
                        "at",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        11495675.4831,
                        13589.0541,
                        true,
                        new Dimension(419.9257),
                    new TextSymbol("ipsa sunt necessitatibus",
                        new MapColor(150, 94, 189),
                        new MapColor(231, 224, 100),
                            new Dimension(765.5278),
                        new MapFont(new Dimension(727.6448),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            794.7765,
                        new MapColor(124, 157, 82),
                        new MapColor(226, 6, 7),
                            61.6747,
                        HorizontalAlignment.Left,
                            true,
                            593.1593,
                            new Dimension(33.8402),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.CenterAfter,
                        "qui",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Curved,
                        7773571.1185,
                        5887.8915,
                        true,
                        new Dimension(653.4674),
                    new TextSymbol("tempora rerum non",
                        new MapColor(240, 157, 32),
                        new MapColor(223, 31, 202),
                            new Dimension(743.1369),
                        new MapFont(new Dimension(885.5999),
                                "Courier New",
                            MapFontStyle.Normal,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            310.8959,
                        new MapColor(164, 7, 224),
                        new MapColor(132, 156, 71),
                            440.7667,
                        HorizontalAlignment.Left,
                            true,
                            469.4391,
                            new Dimension(881.8251),
                            true),
                        true,
                        "Province = 'Ontario'"),
                new Label(LabelPlacement.AlwaysHorizontal,
                        "nesciunt",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        35042787.9408,
                        45776.0684,
                        true,
                        new Dimension(122.1326),
                    new TextSymbol("sit natus deserunt",
                        new MapColor(222, 79, 55),
                        new MapColor(144, 78, 212),
                            new Dimension(770.1702),
                        new MapFont(new Dimension(573.6823),
                                "Arial",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            825.3745,
                        new MapColor(141, 55, 141),
                        new MapColor(49, 195, 231),
                            796.8839,
                        HorizontalAlignment.Right,
                            true,
                            561.4225,
                            new Dimension(401.1368),
                            true),
                        true,
                        "Street = '123 Main St.'"),
                new Label(LabelPlacement.AboveLeft,
                        "voluptatum",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        11309167.7341,
                        4575.6657,
                        true,
                        new Dimension(85.7377),
                    new TextSymbol("excepturi dignissimos autem",
                        new MapColor(17, 240, 236),
                        new MapColor(124, 10, 118),
                            new Dimension(7.6634),
                        new MapFont(new Dimension(761.7660),
                                "Helvetica",
                            MapFontStyle.Oblique,
                            FontWeight.Bolder,
                            TextDecoration.Underline),
                            942.3382,
                        new MapColor(119, 214, 237),
                        new MapColor(117, 43, 219),
                            428.7412,
                        HorizontalAlignment.Left,
                            true,
                            949.9122,
                            new Dimension(643.2176),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("adipisci natus et",
                        "alias",
                        ["iure",
                            "eum",
                            "expedita",
                            "cupiditate"],
                    [new FieldInfo("email",
                            "dolor",
                            "delectus",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongMonthDayYearShortTime24),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new RelationshipPopupContent("velit autem officiis",
                            "officiis et ut aut nesciunt et",
                            5,
                            "enim",
                        [new RelatedRecordsInfoFieldOrder("quaerat",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("quibusdam",
                            OrderBy.Asc)],
                            4),
                    new AttachmentsPopupContent("est voluptas provident",
                            "provident cum sequi inventore consectetur ducimus",
                            AttachmentsPopupContentDisplayType.Auto),
                    new FieldsPopupContent([new FieldInfo("email",
                                "incidunt",
                                "repellendus",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(1,
                                    true,
                                DateFormat.Year),
                                true,
                                true,
                            StatisticType.Max),
                        new FieldInfo("category",
                                "similique",
                                "sequi",
                            StringFieldOption.TextArea,
                            new FieldInfoFormat(2,
                                    true,
                                DateFormat.ShortDateLongTime),
                                true,
                                true,
                            StatisticType.Sum)],
                            "enim nobis ullam occaecati",
                            "recusandae sapiente sed"),
                    new TextPopupContent("vel modi debitis")],
                    [new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "name",
                            "sint saepe commodi",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                            "group",
                            "numquam molestias qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "status",
                            "voluptas consequatur qui",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Name;",
                            "category",
                            "et libero veritatis",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("hic nostrum id",
                            "e95b2c74-9393-44b4-b858-5ffddab69e4f",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "category",
                            "ut")])),
            new Sublayer(9,
                    true,
                    true,
                ListMode.Show,
                    26424314.0594,
                    3222.2923,
                    0.3355,
                    true,
                    "ipsam iste facere",
                    true,
                    "aliquid",
                new LayerFloorInfo("id"),
                [new Label(LabelPlacement.BelowRight,
                        "voluptate",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        28929265.6600,
                        17674.0109,
                        true,
                        new Dimension(842.3672),
                    new TextSymbol("consectetur similique aspernatur",
                        new MapColor(192, 220, 213),
                        new MapColor(170, 114, 202),
                            new Dimension(375.5691),
                        new MapFont(new Dimension(30.3233),
                                "Verdana",
                            MapFontStyle.Normal,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            603.7577,
                        new MapColor(13, 190, 226),
                        new MapColor(156, 60, 138),
                            535.1403,
                        HorizontalAlignment.Center,
                            true,
                            125.7710,
                            new Dimension(391.8445),
                            true),
                        true,
                        "1 = 1")],
                new PopupTemplate("quis quasi ducimus",
                        "tempore",
                        ["tempore",
                            "aut"],
                    [new FieldInfo("phone",
                            "qui",
                            "repudiandae",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("name",
                            "illo",
                            "voluptatem",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Var),
                    new FieldInfo("status",
                            "error",
                            "dolores",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYearShortTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("token",
                            "possimus",
                            "officiis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(9,
                                true,
                            DateFormat.ShortDate),
                            true,
                            true,
                        StatisticType.Sum)],
                    [new MediaPopupContent("in similique aut",
                            "ut magni occaecati sequi ut possimus quia",
                        [new BarChartMediaInfo("et corporis sed",
                                "libero",
                                "atque exercitationem modi",
                            new ChartMediaInfoValue(["non",
                                    "quis"],
                                    "aliquam",
                                    "eveniet",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "sequi",
                                        403.9463),
                                new ChartMediaInfoValueSeries("status",
                                        "impedit",
                                        210.5814),
                                new ChartMediaInfoValueSeries("avatar",
                                        "corrupti",
                                        38.7087),
                                new ChartMediaInfoValueSeries("id",
                                        "et",
                                        58.9963)],
                                [new MapColor(155, 164, 57)]))],
                            4),
                    new RelationshipPopupContent("omnis porro rerum",
                            "iste ratione natus non architecto",
                            8,
                            "aut",
                        [new RelatedRecordsInfoFieldOrder("velit",
                            OrderBy.Desc)],
                            4),
                    new RelationshipPopupContent("temporibus et ea",
                            "voluptas a possimus repellat animi perferendis cum",
                            9,
                            "aut",
                        [new RelatedRecordsInfoFieldOrder("omnis",
                            OrderBy.Asc),
                        new RelatedRecordsInfoFieldOrder("accusantium",
                            OrderBy.Desc),
                        new RelatedRecordsInfoFieldOrder("aut",
                            OrderBy.Desc)],
                            8),
                    new TextPopupContent("explicabo dolore numquam")],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "comment",
                            "ab alias molestias",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "token",
                            "unde distinctio provident",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("incidunt doloremque ducimus",
                            "a4868b51-b074-4376-41f3-33de1f0f09de",
                            () => { Console.WriteLine("ex"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "enim"),
                    new ActionToggle("qui impedit sunt",
                            "11e845f9-e7f9-1bb4-bfa2-dd9d9f24e664",
                            () => { Console.WriteLine("quaerat"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "updatedAt",
                            "nostrum"),
                    new ActionToggle("eligendi in rerum",
                            "5294f12f-bc03-9778-7b1d-531c5a3b4408",
                            () => { Console.WriteLine("alias"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "phone",
                            "officiis")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(33.3328,
                    TileInfoFormat.Dib,
                    true,
                [new LOD(9,
                        "et",
                        87.4448,
                        25605572.2103),
                new LOD(1,
                        "nisi",
                        14.8313,
                        37925682.0540),
                new LOD(2,
                        "corrupti",
                        25.9512,
                        41938976.2969),
                new LOD(5,
                        "dolor",
                        76.6362,
                        25717236.0397)],
                new Point(-42.0648,
                        -37.7972,
                        96.3921,
                        -54.0373,
                        384.0119,
                    new SpatialReference(4,
                            "sit",
                            "quos",
                            "in"),
                        true,
                        true,
                        714.9108),
                    [8,
                        8,
                        5,
                        6],
                new SpatialReference(2,
                        "et",
                        "deserunt",
                        "doloremque"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2019, 9, 16, 0, 13, 8),
                    new DateTime(2008, 5, 17, 15, 6, 9));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
