@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("tempora")"
                        BlendMode="@(BlendMode.Screen)"
                        Copyright="@("minus")"
                        Effect="@(new Effect("vel",
                            30631821.9657))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(42767907.4168)"
                        MinScale="@(47658.4706)"
                        Opacity="@(0.1569)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(219.4064)"
                        Resampling="@(true)"
                        TileServers="@(["et"])"
                        Title="@("voluptatibus est minima")"
                        Url="@("https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/WV03_Kilauea_20180519_ShortwaveInfrared/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2000, 4, 14, 8, 33, 14))"
                            End="@(new DateTime(2007, 9, 8, 5, 47, 32))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(614.7916)"
                            Format="@(TileInfoFormat.Lerc)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(8,
                                    "hic",
                                    59.3863,
                                    32341765.8997)])"
                            Origin="@(new Point(-91.0057,
                                    -30.1933,
                                    98.7335,
                                    -4.0688,
                                    610.3911,
                                new SpatialReference(6,
                                        "voluptatem",
                                        "dignissimos",
                                        "molestias"),
                                    true,
                                    true,
                                    626.1869))"
                            Size="@([1,
                                8])">
                            <SpatialReference 
                                Wkid="@(4)"
                                ImageCoordinateSystem="@("hic")"
                                Wkt="@("nisi")"
                                Wkt2="@("nulla")">
                            </SpatialReference>
                        </TileInfo>
                        <PortalItem />
                        <Extent 
                            Xmax="@(-179.8293)"
                            Xmin="@(131.4430)"
                            Ymax="@(73.7401)"
                            Ymin="@(7.9808)"
                            Zmax="@(939.8210)"
                            Zmin="@(834.7024)"
                            Mmax="@(161.1111)"
                            Mmin="@(740.8973)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(3)"
                                ImageCoordinateSystem="@("asperiores")"
                                Wkt="@("adipisci")"
                                Wkt2="@("quam")">
                            </SpatialReference>
                        </Extent>
                        <Sublayer 
                            SublayerId="@(7)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(11427872.6149)"
                            MinScale="@(1073.5165)"
                            Opacity="@(0.4059)"
                            PopupEnabled="@(true)"
                            Title="@("quis ut aperiam")"
                            Visible="@(true)"
                            DefinitionExpression="@("sunt")"
                            FloorInfo="@(new LayerFloorInfo("voluptatem"))"
                            LabelingInfo="@([new Label(LabelPlacement.AboveLeft,
                                    "et",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    21835515.5859,
                                    9834.7659,
                                    true,
                                    new Dimension(739.3643),
                                new TextSymbol("veniam quos quia",
                                    new MapColor(47, 204, 43),
                                    new MapColor(154, 181, 244),
                                        new Dimension(817.3495),
                                    new MapFont(new Dimension(531.5569),
                                            "Palatino",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        117.4279,
                                    new MapColor(38, 238, 224),
                                    new MapColor(193, 35, 24),
                                        771.5039,
                                    HorizontalAlignment.Left,
                                        true,
                                        395.9314,
                                        new Dimension(459.7247),
                                        true),
                                    true,
                                    "1 = 1")])"
                            PopupTemplate="@(new PopupTemplate("omnis doloremque cumque",
                                    "cum",
                                    ["sunt",
                                        "dolorem"],
                                [new FieldInfo("name",
                                        "enim",
                                        "occaecati",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.DayShortMonthYearShortTime24),
                                        true,
                                        true,
                                    StatisticType.Sum),
                                new FieldInfo("id",
                                        "ipsa",
                                        "exercitationem",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(3,
                                            true,
                                        DateFormat.ShortDateLongTime24),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new AttachmentsPopupContent("natus et fugit",
                                        "exercitationem atque explicabo rerum",
                                        AttachmentsPopupContentDisplayType.Auto)],
                                [new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                        "name",
                                        "pariatur architecto voluptatem",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("voluptates sequi eum",
                                        "https://picsum.photos/640/480/?image=995",
                                        "4af32250-68d5-9cb2-50f0-16eac38c8fe6",
                                        () => { Console.WriteLine("adipisci"); return Task.CompletedTask; },
                                        "comment",
                                        true,
                                        true,
                                        true,
                                        "nulla")]))"
                            Renderer="@(new UniqueValueRenderer(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(170, 177, 129),
                                            new MapColor(80, 248, 10))]),
                                        414.5615,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(243.7019,
                                                666.5704)],
                                            "porro",
                                            "id",
                                            "sed"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(79.6565,
                                                899.6908)],
                                            "voluptatem",
                                            "vel",
                                            "dolor"),
                                        ["natus",
                                            "perferendis"],
                                    AuthoringInfoFlowTheme.FlowLine,
                                        "deleniti",
                                        true,
                                    LengthUnit.Feet,
                                        263.6736,
                                        322.6838,
                                        303.9396,
                                        873.7295),
                                new PictureFillSymbol("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0",
                                    new Dimension(949.6263),
                                    new Dimension(130.8451),
                                    new Dimension(55.2898),
                                    new Dimension(778.8579),
                                    -172.0573,
                                    -74.8015,
                                    new Outline(new MapColor(47, 26, 136),
                                        new Dimension(976.3594),
                                        SimpleLineSymbolStyle.DashDot,
                                        Cap.Round,
                                        Join.Round,
                                        new LineSymbolMarker(new MapColor(205, 141, 76),
                                            LinePlacement.End,
                                            LineSymbolMarkerStyle.Diamond),
                                        837.9109),
                                    new MapColor(45, 129, 180)),
                                    "possimus",
                                    new DefaultSymbol(),
                                    "qui",
                                    "incidunt",
                                    "soluta",
                                    "excepturi",
                                new UniqueValueRendererLegendOptions("ipsam quasi repellendus"),
                                    true,
                                [new UniqueValueGroup([new UniqueValueClass("tempore",
                                        new TextSymbol("tenetur ut et",
                                            new MapColor(229, 13, 79),
                                            new MapColor(100, 4, 128),
                                                new Dimension(333.2627),
                                            new MapFont(new Dimension(402.7836),
                                                    "Palatino",
                                                MapFontStyle.Oblique,
                                                FontWeight.Normal,
                                                TextDecoration.Underline),
                                                826.8623,
                                            new MapColor(145, 131, 254),
                                            new MapColor(81, 221, 2),
                                                600.4758,
                                            HorizontalAlignment.Center,
                                                true,
                                                726.6404,
                                                new Dimension(738.8894),
                                                true),
                                        [new UniqueValue("sit",
                                                "enim",
                                                "a"),
                                        new UniqueValue("rem",
                                                "dolorem",
                                                "ipsa")]),
                                    new UniqueValueClass("a",
                                        new TextSymbol("ut quisquam ducimus",
                                            new MapColor(229, 123, 205),
                                            new MapColor(101, 34, 246),
                                                new Dimension(284.5751),
                                            new MapFont(new Dimension(163.7109),
                                                    "Arial",
                                                MapFontStyle.Normal,
                                                FontWeight.Lighter,
                                                TextDecoration.Underline),
                                                914.8640,
                                            new MapColor(79, 197, 49),
                                            new MapColor(228, 107, 15),
                                                127.9088,
                                            HorizontalAlignment.Center,
                                                true,
                                                551.2589,
                                                new Dimension(799.7057),
                                                true),
                                        [new UniqueValue("velit",
                                                "nihil",
                                                "debitis"),
                                        new UniqueValue("porro",
                                                "corporis",
                                                "rem")])],
                                        "amet"),
                                new UniqueValueGroup([new UniqueValueClass("culpa",
                                        new TextSymbol("enim provident commodi",
                                            new MapColor(180, 183, 177),
                                            new MapColor(60, 176, 140),
                                                new Dimension(611.4658),
                                            new MapFont(new Dimension(834.6680),
                                                    "Helvetica",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bolder,
                                                TextDecoration.LineThrough),
                                                264.1573,
                                            new MapColor(14, 23, 127),
                                            new MapColor(10, 161, 124),
                                                66.7233,
                                            HorizontalAlignment.Right,
                                                true,
                                                433.0732,
                                                new Dimension(894.2676),
                                                true),
                                        [new UniqueValue("natus",
                                                "recusandae",
                                                "occaecati"),
                                        new UniqueValue("molestias",
                                                "voluptatem",
                                                "culpa")])],
                                        "sapiente")],
                                [new UniqueValueInfo("et",
                                    new TextSymbol("soluta sed neque",
                                        new MapColor(105, 157, 219),
                                        new MapColor(122, 50, 10),
                                            new Dimension(377.2912),
                                        new MapFont(new Dimension(945.7831),
                                                "Verdana",
                                            MapFontStyle.Italic,
                                            FontWeight.Normal,
                                            TextDecoration.None),
                                            775.9343,
                                        new MapColor(166, 245, 165),
                                        new MapColor(85, 53, 165),
                                            774.4840,
                                        HorizontalAlignment.Left,
                                            true,
                                            728.7371,
                                            new Dimension(3.5224),
                                            true),
                                        "est")],
                                    "id",
                                    "quis reiciendis laboriosam"))"
                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(42239110.9007)"
                                MinScale="@(46210.5727)"
                                Opacity="@(0.5421)"
                                PopupEnabled="@(true)"
                                Title="@("corporis deserunt ipsam")"
                                Visible="@(true)"
                                DefinitionExpression="@("impedit")"
                                Url="@("https://sampleserver6.arcgisonline.com/arcgis/rest/services/Hurricanes/MapServer/1")">
                                <Sublayer 
                                    SublayerId="@(3)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(12232298.9064)"
                                    MinScale="@(33629.1582)"
                                    Opacity="@(0.9053)"
                                    PopupEnabled="@(true)"
                                    Title="@("voluptatem quam et")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("nemo")"
                                    Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(9)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(34063678.4394)"
                                        MinScale="@(46092.6782)"
                                        Opacity="@(0.0237)"
                                        PopupEnabled="@(true)"
                                        Title="@("expedita eligendi velit")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("est")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(3)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(30432212.5799)"
                                            MinScale="@(39356.2628)"
                                            Opacity="@(0.7179)"
                                            PopupEnabled="@(true)"
                                            Title="@("et quisquam nostrum")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("et")"
                                            Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(1)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Show)"
                                                MaxScale="@(34745716.1745)"
                                                MinScale="@(7664.8947)"
                                                Opacity="@(0.3169)"
                                                PopupEnabled="@(true)"
                                                Title="@("quaerat illo voluptas")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("quam")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(2)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(32482403.1175)"
                                                    MinScale="@(23273.3228)"
                                                    Opacity="@(0.3623)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("non alias mollitia")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("aperiam")"
                                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <SimpleRenderer 
>
                                                    </SimpleRenderer>
                                                    <PopupTemplate 
                                                        Title="@("sint odio voluptas")"
                                                        StringContent="@("illum")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("nemo")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <UniqueValueRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </UniqueValueRenderer>
                                                <PopupTemplate 
                                                    Title="@("nostrum eos non")"
                                                    StringContent="@("impedit")"
                                                    OutFields="@(["et",
                                                        "officia"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new MediaPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton("sunt neque doloremque",
                                                        "https://picsum.photos/640/480/?image=103",
                                                        "35782b8a-b728-ec3f-5be0-eeff56677911",
                                                        () => { Console.WriteLine("consequuntur"); return Task.CompletedTask; },
                                                        "comment",
                                                        true,
                                                        true,
                                                        true,
                                                        "ratione")])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.BelowStart)"
                                                    LabelExpression="@("sit")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(23205789.4410)"
                                                    MinScale="@(44680.2533)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(556.0607))"
                                                    Symbol="@(new TextSymbol("occaecati et minima"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("ObjectID = 1")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("consequatur")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <SimpleRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                    new MultipartColorRamp(),
                                                        606.1312,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["distinctio"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "quidem",
                                                        true,
                                                    LengthUnit.Decimeters,
                                                        547.1091,
                                                        426.3820,
                                                        724.7089,
                                                        433.8566))">
                                            </SimpleRenderer>
                                            <PopupTemplate 
                                                Title="@("vitae placeat esse")"
                                                StringContent="@("ut")"
                                                OutFields="@(["est"])"
                                                FieldInfos="@([new FieldInfo("group",
                                                        "sed",
                                                        "et",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min),
                                                new FieldInfo("token",
                                                        "eveniet",
                                                        "rerum",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count)])"
                                                Content="@([new FieldsPopupContent([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)],
                                                        "et rerum provident",
                                                        "labore cumque eos")])"
                                                ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                                        "createdAt",
                                                        "tenetur dolore accusantium")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionButton("vel dolores eligendi",
                                                    "https://picsum.photos/640/480/?image=293",
                                                    "c48d0e31-079c-8121-3555-835fc2a539fa",
                                                    () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                                    "avatar",
                                                    true,
                                                    true,
                                                    true,
                                                    "incidunt")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.CenterCenter)"
                                                LabelExpression="@("est")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(36031807.0265)"
                                                MinScale="@(40995.8037)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(405.9452))"
                                                Symbol="@(new TextSymbol("repellendus a tempore",
                                                    new MapColor(28, 188, 232),
                                                    new MapColor(56, 251, 38),
                                                        null,
                                                    new MapFont(),
                                                        948.0073,
                                                    new MapColor(23, 236, 207),
                                                    new MapColor(13, 27, 89),
                                                        790.2926,
                                                    HorizontalAlignment.Center,
                                                        true,
                                                        727.8967,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("Country = 'Canada'")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("dolorum")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <UniqueValueRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Manual,
                                                new AlgorithmicColorRamp(Algorithm.LabLch,
                                                    new MapColor(118, 90, 31),
                                                    new MapColor(193, 171, 224)),
                                                    273.4715,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "sed",
                                                        "molestias",
                                                        "et"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "quia",
                                                        "consectetur",
                                                        "qui"),
                                                    ["cupiditate",
                                                        "hic"],
                                                AuthoringInfoFlowTheme.FlowLine,
                                                    "voluptas",
                                                    true,
                                                LengthUnit.Yards,
                                                    926.2029,
                                                    278.8745,
                                                    555.6321,
                                                    546.7162))">
                                        </UniqueValueRenderer>
                                        <PopupTemplate 
                                            Title="@("reprehenderit delectus velit")"
                                            StringContent="@("commodi")"
                                            OutFields="@(["et"])"
                                            FieldInfos="@([new FieldInfo("token",
                                                    "cum",
                                                    "quia",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortDateLeShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Min)])"
                                            Content="@([new AttachmentsPopupContent("dolor iste in",
                                                    "deserunt voluptas quia earum",
                                                    AttachmentsPopupContentDisplayType.Preview)])"
                                            ExpressionInfos="@([new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                    "avatar",
                                                    "reiciendis eos totam",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionButton("corrupti blanditiis blanditiis",
                                                "https://picsum.photos/640/480/?image=380",
                                                "2f6961df-9858-3769-44bc-3b40f45ba0b2",
                                                () => { Console.WriteLine("odio"); return Task.CompletedTask; },
                                                "token",
                                                true,
                                                true,
                                                true,
                                                "non"),
                                                new ActionButton("consequatur consequuntur ea",
                                                    "https://picsum.photos/640/480/?image=308",
                                                    "40aad116-8a02-7a78-cad9-239607d05bd9",
                                                    () => { Console.WriteLine("omnis"); return Task.CompletedTask; },
                                                    "comment",
                                                    true,
                                                    true,
                                                    true,
                                                    "repellendus")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.BelowLeft)"
                                            LabelExpression="@("magni")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                            LabelPosition="@(LabelPosition.Curved)"
                                            MaxScale="@(20082297.8344)"
                                            MinScale="@(39351.0814)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(168.9841))"
                                            Symbol="@(new TextSymbol("ut in quis",
                                                new MapColor(30, 220, 48),
                                                new MapColor(107, 67, 64),
                                                    new Dimension(266.5244),
                                                new MapFont(new Dimension(486.5305),
                                                        "Verdana",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Bolder,
                                                    TextDecoration.None),
                                                    243.8909,
                                                new MapColor(70, 48, 92),
                                                new MapColor(64, 179, 41),
                                                    3.2656,
                                                HorizontalAlignment.Center,
                                                    true,
                                                    40.3646,
                                                    new Dimension(993.2192),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("Age > 21")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("dolorum")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                            new AlgorithmicColorRamp(Algorithm.LabLch,
                                                new MapColor(160, 143, 108),
                                                new MapColor(126, 174, 36)),
                                                420.9398,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(236.9797,
                                                        488.5685)],
                                                    "est",
                                                    "totam",
                                                    "rerum"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(332.6748,
                                                        555.7118),
                                                new AuthoringInfoField1ClassBreakInfos(314.6505,
                                                        880.1995)],
                                                    "temporibus",
                                                    "dolor",
                                                    "est"),
                                                ["quae"],
                                            AuthoringInfoFlowTheme.WaveFront,
                                                "hic",
                                                true,
                                            LengthUnit.Millimeters,
                                                169.2085,
                                                525.6891,
                                                465.8138,
                                                727.8518))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("eos eveniet sunt")"
                                        StringContent="@("sunt")"
                                        OutFields="@(["iusto"])"
                                        FieldInfos="@([new FieldInfo("name",
                                                "saepe",
                                                "quia",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(3,
                                                    true,
                                                DateFormat.LongDate),
                                                true,
                                                true,
                                            StatisticType.Count)])"
                                        Content="@([new TextPopupContent("voluptas eveniet quo")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature.Name;",
                                                "avatar",
                                                "repellendus quam inventore",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "group",
                                                "illo omnis at",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionButton("quis perspiciatis beatae",
                                            "https://picsum.photos/640/480/?image=297",
                                            "d47e0efe-fb80-6e99-8307-06a39d5fd677",
                                            () => { Console.WriteLine("labore"); return Task.CompletedTask; },
                                            "phone",
                                            true,
                                            true,
                                            true,
                                            "iste"),
                                            new ActionButton("est possimus fugiat",
                                                "https://picsum.photos/640/480/?image=136",
                                                "d0608968-332f-d81f-d029-14e5d2544bbe",
                                                () => { Console.WriteLine("consectetur"); return Task.CompletedTask; },
                                                "id",
                                                true,
                                                true,
                                                true,
                                                "illum")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveLeft)"
                                        LabelExpression="@("ipsam")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(15157933.8879)"
                                        MinScale="@(38001.8266)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(987.7471))"
                                        Symbol="@(new TextSymbol("nihil doloremque quae",
                                            new MapColor(86, 2, 183),
                                            new MapColor(157, 57, 146),
                                                new Dimension(921.8426),
                                            new MapFont(new Dimension(22.4099),
                                                    "Helvetica",
                                                MapFontStyle.Normal,
                                                FontWeight.Lighter,
                                                TextDecoration.LineThrough),
                                                483.0794,
                                            new MapColor(144, 239, 124),
                                            new MapColor(220, 64, 56),
                                                826.6311,
                                            HorizontalAlignment.Center,
                                                true,
                                                918.5697,
                                                new Dimension(33.4166),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("City = 'Toronto'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("laboriosam")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(158, 233, 94),
                                            new MapColor(0, 127, 95)),
                                            44.6066,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(449.5918,
                                                    819.3948)],
                                                "expedita",
                                                "ad",
                                                "debitis"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(599.2164,
                                                    232.2381),
                                            new AuthoringInfoField1ClassBreakInfos(60.9483,
                                                    941.4001)],
                                                "error",
                                                "et",
                                                "dolor"),
                                            ["numquam"],
                                        AuthoringInfoFlowTheme.WaveFront,
                                            "dolorem",
                                            true,
                                        LengthUnit.Decimeters,
                                            16.7763,
                                            936.5565,
                                            117.8679,
                                            338.8771))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("perspiciatis porro libero")"
                                    StringContent="@("velit")"
                                    OutFields="@(["perferendis",
                                        "atque"])"
                                    FieldInfos="@([new FieldInfo("id",
                                            "dignissimos",
                                            "vel",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortMonthYear),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("name",
                                            "nam",
                                            "saepe",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongMonthDayYear),
                                            true,
                                            true,
                                        StatisticType.Stddev)])"
                                    Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                                "vel",
                                                "in quo eligendi")),
                                    new FieldsPopupContent([new FieldInfo("name",
                                                "quae",
                                                "et",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLeShortTime24),
                                                true,
                                                true,
                                            StatisticType.Var)],
                                            "cupiditate quia",
                                            "neque tempora ut")])"
                                    ExpressionInfos="@([new ExpressionInfo("return $feature.Population / $feature.Area;",
                                            "title",
                                            "qui debitis quia",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("return $feature['FieldName'];",
                                            "email",
                                            "asperiores quas saepe",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("et velit vero",
                                        "https://picsum.photos/640/480/?image=137",
                                        "e5eb01d0-5afd-41a2-787e-610506f289bf",
                                        () => { Console.WriteLine("minima"); return Task.CompletedTask; },
                                        "phone",
                                        true,
                                        true,
                                        true,
                                        "sed"),
                                        new ActionButton("ipsa numquam velit",
                                            "https://picsum.photos/640/480/?image=641",
                                            "e7c042da-6a8b-9720-4bab-5f940eb8bbc3",
                                            () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                                            "token",
                                            true,
                                            true,
                                            true,
                                            "expedita")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.CenterStart)"
                                    LabelExpression="@("perferendis")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(14184212.2316)"
                                    MinScale="@(19945.7096)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(17.3713))"
                                    Symbol="@(new TextSymbol("voluptas sed laboriosam",
                                        new MapColor(138, 16, 249),
                                        new MapColor(252, 99, 80),
                                            new Dimension(480.2232),
                                        new MapFont(new Dimension(290.1232),
                                                "Garamond",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.LineThrough),
                                            563.0161,
                                        new MapColor(252, 97, 93),
                                        new MapColor(203, 223, 201),
                                            554.3477,
                                        HorizontalAlignment.Right,
                                            true,
                                            907.3106,
                                            new Dimension(796.1359),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("Country = 'Canada'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("quia")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(148.1940,
                0.8763,
                59.5423,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(7);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(350.5697,
                924.3259,
                191.4792);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        await tileLayer.Refresh();
        BlendMode testBlendMode = BlendMode.Luminosity;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-97.4923,
                    17.2963,
                    12.3189,
                    -50.1019,
                    106.7956,
                    238.9021,
                    233.0720,
                    413.0712,
                new SpatialReference(1,
                        "temporibus",
                        "beatae",
                        "dolores"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem();
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(7,
                    true,
                    true,
                ListMode.Hide,
                    7780635.1484,
                    38017.6295,
                    0.1229,
                    true,
                    "eos laudantium qui",
                    true,
                    "at",
                new LayerFloorInfo("temporibus"),
                [new Label(LabelPlacement.AboveStart,
                        "nobis",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.None,
                    LabelPosition.Parallel,
                        47050407.3421,
                        5659.6462,
                        true,
                        new Dimension(987.9381),
                    new TextSymbol("non et ut",
                        new MapColor(110, 36, 140),
                        new MapColor(34, 213, 211),
                            new Dimension(52.9208),
                        new MapFont(new Dimension(484.2161),
                                "Times New Roman",
                            MapFontStyle.Italic,
                            FontWeight.Bolder,
                            TextDecoration.LineThrough),
                            612.2447,
                        new MapColor(41, 217, 161),
                        new MapColor(6, 140, 161),
                            263.1661,
                        HorizontalAlignment.Left,
                            true,
                            425.2417,
                            new Dimension(747.8605),
                            true),
                        true,
                        "Phone = '555-555-5555'"),
                new Label(LabelPlacement.BelowBefore,
                        "eos",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Curved,
                        1367606.4928,
                        26611.8633,
                        true,
                        new Dimension(290.8581),
                    new TextSymbol("placeat qui in",
                        new MapColor(111, 5, 65),
                        new MapColor(48, 185, 35),
                            new Dimension(407.8711),
                        new MapFont(new Dimension(673.5634),
                                "Garamond",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.Underline),
                            436.2051,
                        new MapColor(30, 28, 168),
                        new MapColor(12, 180, 98),
                            34.7773,
                        HorizontalAlignment.Center,
                            true,
                            937.6208,
                            new Dimension(851.9651),
                            true),
                        true,
                        "City = 'Toronto'")],
                new PopupTemplate("pariatur odit quis",
                        "nobis",
                        ["sunt",
                            "atque"],
                    [new FieldInfo("comment",
                            "sit",
                            "ex",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.LongMonthDayYearShortTime),
                            true,
                            true,
                        StatisticType.Min)],
                    [new MediaPopupContent("non earum animi",
                            "quia iste",
                        [new LineChartMediaInfo("odit omnis nam",
                                "molestiae",
                                "excepturi molestiae ipsam",
                            new ChartMediaInfoValue(["assumenda",
                                    "et"],
                                    "quo",
                                    "architecto",
                                [new ChartMediaInfoValueSeries("phone",
                                        "velit",
                                        108.5228),
                                new ChartMediaInfoValueSeries("avatar",
                                        "eum",
                                        412.7729)],
                                [new MapColor(98, 243, 212),
                                new MapColor(44, 251, 239)])),
                        new ColumnChartMediaInfo("aut repellat ipsa",
                                "quam",
                                "odio earum aliquam",
                            new ChartMediaInfoValue(["repellendus"],
                                    "necessitatibus",
                                    "perferendis",
                                [new ChartMediaInfoValueSeries("createdAt",
                                        "quidem",
                                        342.7148),
                                new ChartMediaInfoValueSeries("group",
                                        "inventore",
                                        337.9068)],
                                [new MapColor(79, 215, 212)]))],
                            3)],
                    [new ExpressionInfo("return $feature.Name;",
                            "password",
                            "et sapiente fugiat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature['FieldName'];",
                            "token",
                            "doloremque officiis maxime",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("facilis quae vero",
                            "https://picsum.photos/640/480/?image=682",
                            "bc6f3637-7229-147e-51b9-793eec40847f",
                            () => { Console.WriteLine("sit"); return Task.CompletedTask; },
                            "phone",
                            true,
                            true,
                            true,
                            "officiis")])),
            new Sublayer(2,
                    true,
                    true,
                ListMode.Hide,
                    15129738.2860,
                    32533.9762,
                    0.0730,
                    true,
                    "voluptatem voluptatibus quod",
                    true,
                    "distinctio",
                new LayerFloorInfo("earum"),
                [new Label(LabelPlacement.CenterStart,
                        "quas",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        28014551.3334,
                        38963.7445,
                        true,
                        new Dimension(631.3450),
                    new TextSymbol("aut ea est",
                        new MapColor(88, 199, 69),
                        new MapColor(114, 227, 198),
                            new Dimension(54.1486),
                        new MapFont(new Dimension(365.0387),
                                "Arial",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.None),
                            616.4681,
                        new MapColor(16, 158, 177),
                        new MapColor(56, 116, 148),
                            659.7782,
                        HorizontalAlignment.Center,
                            true,
                            836.3842,
                            new Dimension(578.5681),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("architecto sapiente ex",
                        "explicabo",
                        ["natus",
                            "nobis"],
                    [new FieldInfo("token",
                            "dolor",
                            "in",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(1,
                                true,
                            DateFormat.LongDate),
                            true,
                            true,
                        StatisticType.Var)],
                    [new AttachmentsPopupContent("ut molestiae praesentium",
                            "maxime ipsa",
                            AttachmentsPopupContentDisplayType.Preview),
                    new RelationshipPopupContent("accusantium deleniti qui",
                            "minima voluptatem velit",
                            6,
                            "qui",
                        [new RelatedRecordsInfoFieldOrder("esse",
                            OrderBy.Asc)],
                            9)],
                    [new ExpressionInfo("return $feature.Name;",
                            "avatar",
                            "in nesciunt repellat",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "email",
                            "asperiores neque consequatur",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("qui nulla impedit",
                            "https://picsum.photos/640/480/?image=869",
                            "3d86aa89-d452-3c65-3d35-4b3212613a46",
                            () => { Console.WriteLine("magni"); return Task.CompletedTask; },
                            "id",
                            true,
                            true,
                            true,
                            "enim")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(812.8945,
                    TileInfoFormat.Pdf,
                    true,
                [new LOD(6,
                        "voluptatem",
                        12.3397,
                        15786944.5742),
                new LOD(5,
                        "in",
                        1.4753,
                        36818215.0176)],
                new Point(28.8690,
                        79.1006,
                        -161.9840,
                        67.6876,
                        403.6060,
                    new SpatialReference(1,
                            "quo",
                            "quas",
                            "consequuntur"),
                        true,
                        true,
                        647.7162),
                    [9,
                        4],
                new SpatialReference(6,
                        "excepturi",
                        "ex",
                        "quaerat"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2021, 3, 8, 9, 8, 18),
                    new DateTime(2020, 11, 9, 21, 54, 12));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
