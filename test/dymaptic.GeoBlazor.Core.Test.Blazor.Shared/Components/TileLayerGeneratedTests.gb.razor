@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderTileLayer(Action renderHandler)
    {
        TileLayer? tileLayer = null;

        RefreshEvent? refreshResult = null;
        void OnRefresh(RefreshEvent result)
        {
            refreshResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <TileLayer 
                        ApiKey="@("praesentium")"
                        BlendMode="@(BlendMode.DestinationOver)"
                        Copyright="@("mollitia")"
                        Effect="@(new Effect("perferendis",
                            35818714.3549))"
                        FullExtent="@(new Extent(161.1292,
                                39.4531,
                                23.6726,
                                24.0354,
                                452.0287,
                                609.8799,
                                490.1586,
                                206.3408,
                            new SpatialReference(6,
                                    "velit",
                                    "tenetur",
                                    "distinctio"),
                                true,
                                true))"
                        LegendEnabled="@(true)"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(22503895.5787)"
                        MinScale="@(10317.4544)"
                        Opacity="@(0.6457)"
                        PersistenceEnabled="@(true)"
                        RefreshInterval="@(542.6337)"
                        Resampling="@(true)"
                        TileServers="@(["suscipit",
                            "expedita"])"
                        Title="@("quisquam voluptatem natus")"
                        Url="@("https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer")"
                        OnRefresh="OnRefresh">
                        <TimeExtent 
                            Start="@(new DateTime(2017, 11, 10, 5, 37, 18))"
                            End="@(new DateTime(2010, 5, 12, 0, 38, 49))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(676.7223)"
                            Format="@(TileInfoFormat.Svgz)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(1,
                                    "accusantium",
                                    71.2426,
                                    12276316.6345),
                            new LOD(1,
                                    "laborum",
                                    84.4206,
                                    725577.5967),
                            new LOD(9,
                                    "pariatur",
                                    84.3464,
                                    42176850.3947),
                            new LOD(5,
                                    "temporibus",
                                    82.5710,
                                    44324045.1902)])"
                            Origin="@(new Point(-145.0050,
                                    4.1830,
                                    11.4812,
                                    -14.0113,
                                    341.5876,
                                new SpatialReference(1,
                                        "magni",
                                        "et",
                                        "sed"),
                                    true,
                                    true,
                                    346.3555))"
                            Size="@([9,
                                5,
                                6])"
                            SpatialReference="@(new SpatialReference(1,
                                    "quae",
                                    "autem",
                                    "voluptas"))">
                        </TileInfo>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("et")"
                            ApiKey="@("omnis")"
                            AvgRating="@(392.2896)"
                            Categories="@(["et",
                                "dicta"])"
                            Created="@(new DateTime(2017, 11, 23, 11, 9, 33))"
                            Culture="@("quia")"
                            Description="@("eum quae asperiores voluptas")"
                            Extent="@(new Extent(-110.6712,
                                    -16.5148,
                                    82.3436,
                                    -78.2962,
                                    102.1331,
                                    405.6438,
                                    129.3836,
                                    641.2493,
                                new SpatialReference(5,
                                        "nostrum",
                                        "quisquam",
                                        "voluptate"),
                                    true,
                                    true))"
                            GroupCategories="@(["consequatur",
                                "veniam",
                                "vel",
                                "sapiente"])"
                            LicenseInfo="@("perferendis")"
                            Modified="@(new DateTime(2008, 6, 19, 17, 49, 5))"
                            Name="@("createdAt")"
                            NumComments="@(495.6054)"
                            NumRatings="@(844.9531)"
                            NumViews="@(603.8727)"
                            Owner="@("Leo McCullough")"
                            OwnerFolder="@("Nelson Hills")"
                            Portal="@(new Portal(PortalAccess.Private,
                                    true,
                                AuthMode.NoPrompt,
                                    ["ducimus",
                                        "sint"],
                                    "consequatur",
                                    "possimus",
                                    "harum",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("officia")"
                            Screenshots="@(["velit",
                                "illum"])"
                            Size="@(7)"
                            Snippet="@("libero")"
                            Tags="@(["officiis",
                                "error"])"
                            Title="@("accusantium maxime amet")"
                            TypeKeywords="@(["voluptatibus",
                                "possimus",
                                "et"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                        </PortalItem>
                        <Sublayer 
                            SublayerId="@(1)"
                            LabelsVisible="@(true)"
                            LegendEnabled="@(true)"
                            ListMode="@(ListMode.Hide)"
                            MaxScale="@(12550747.2188)"
                            MinScale="@(12991.1014)"
                            Opacity="@(0.8062)"
                            PopupEnabled="@(true)"
                            Title="@("corrupti quis qui")"
                            Visible="@(true)"
                            DefinitionExpression="@("non")"
                            FloorInfo="@(new LayerFloorInfo("beatae"))"
                            LabelingInfo="@([new Label(LabelPlacement.CenterCenter,
                                    "sit",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Curved,
                                    22078951.7114,
                                    28185.3550,
                                    true,
                                    new Dimension(197.1486),
                                new TextSymbol("fuga ea nesciunt",
                                    new MapColor(77, 46, 109),
                                    new MapColor(61, 217, 141),
                                        new Dimension(215.8818),
                                    new MapFont(new Dimension(106.4155),
                                            "Garamond",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.None),
                                        278.5117,
                                    new MapColor(190, 172, 99),
                                    new MapColor(234, 253, 39),
                                        358.1364,
                                    HorizontalAlignment.Right,
                                        true,
                                        14.8390,
                                        new Dimension(567.7149),
                                        true),
                                    true,
                                    "Street = '123 Main St.'"),
                            new Label(LabelPlacement.CenterAfter,
                                    "amet",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    38132551.8687,
                                    18103.8923,
                                    true,
                                    new Dimension(979.7166),
                                new TextSymbol("maiores numquam porro",
                                    new MapColor(177, 126, 195),
                                    new MapColor(215, 9, 121),
                                        new Dimension(515.4948),
                                    new MapFont(new Dimension(873.4997),
                                            "Garamond",
                                        MapFontStyle.Oblique,
                                        FontWeight.Lighter,
                                        TextDecoration.LineThrough),
                                        288.6619,
                                    new MapColor(18, 22, 170),
                                    new MapColor(28, 61, 167),
                                        779.9880,
                                    HorizontalAlignment.Right,
                                        true,
                                        722.2352,
                                        new Dimension(786.8152),
                                        true),
                                    true,
                                    "PostalCode = 'M5V 1J9'"),
                            new Label(LabelPlacement.BelowAlong,
                                    "et",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.None,
                                LabelPosition.Parallel,
                                    12869587.8430,
                                    1107.6278,
                                    true,
                                    new Dimension(982.4835),
                                new TextSymbol("enim commodi reiciendis",
                                    new MapColor(63, 214, 132),
                                    new MapColor(224, 205, 250),
                                        new Dimension(990.3152),
                                    new MapFont(new Dimension(672.4856),
                                            "Arial",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        125.7791,
                                    new MapColor(152, 254, 150),
                                    new MapColor(112, 235, 44),
                                        884.1410,
                                    HorizontalAlignment.Center,
                                        true,
                                        949.4309,
                                        new Dimension(83.8582),
                                        true),
                                    true,
                                    "Province = 'Ontario'"),
                            new Label(LabelPlacement.AboveAfter,
                                    "rerum",
                                    new LabelExpressionInfo(),
                                    true,
                                DeconflictionStrategy.Static,
                                LabelPosition.Curved,
                                    20935505.1090,
                                    42805.4041,
                                    true,
                                    new Dimension(504.0616),
                                new TextSymbol("nihil omnis fugit",
                                    new MapColor(243, 197, 49),
                                    new MapColor(123, 144, 5),
                                        new Dimension(295.4407),
                                    new MapFont(new Dimension(242.8309),
                                            "Garamond",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        46.6571,
                                    new MapColor(171, 104, 153),
                                    new MapColor(174, 27, 246),
                                        851.2874,
                                    HorizontalAlignment.Left,
                                        true,
                                        626.1035,
                                        new Dimension(900.7901),
                                        true),
                                    true,
                                    "Province = 'Ontario'")])"
                            PopupTemplate="@(new PopupTemplate("dignissimos tenetur sunt",
                                    "adipisci",
                                    ["sunt",
                                        "animi",
                                        "voluptatem",
                                        "dolore"],
                                [new FieldInfo("id",
                                        "eum",
                                        "ut",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(1,
                                            true,
                                        DateFormat.ShortDateShortTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("title",
                                        "cum",
                                        "quia",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(4,
                                            true,
                                        DateFormat.ShortDateLe),
                                        true,
                                        true,
                                    StatisticType.Avg),
                                new FieldInfo("createdAt",
                                        "dolorem",
                                        "consequatur",
                                    StringFieldOption.TextArea,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Var),
                                new FieldInfo("phone",
                                        "error",
                                        "autem",
                                    StringFieldOption.TextBox,
                                    new FieldInfoFormat(7,
                                            true,
                                        DateFormat.ShortDateLeShortTime),
                                        true,
                                        true,
                                    StatisticType.Avg)],
                                [new FieldsPopupContent([new FieldInfo("email",
                                            "suscipit",
                                            "qui",
                                        StringFieldOption.TextArea,
                                        new FieldInfoFormat(2,
                                                true,
                                            DateFormat.LongMonthDayYearLongTime),
                                            true,
                                            true,
                                        StatisticType.Min),
                                    new FieldInfo("category",
                                            "minus",
                                            "provident",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(7,
                                                true,
                                            DateFormat.ShortDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Var),
                                    new FieldInfo("avatar",
                                            "pariatur",
                                            "vero",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(9,
                                                true,
                                            DateFormat.DayShortMonthYearShortTime),
                                            true,
                                            true,
                                        StatisticType.Min)],
                                        "omnis unde et laborum numquam",
                                        "ut officiis hic"),
                                new TextPopupContent("quos earum distinctio")],
                                [new ExpressionInfo("return $feature['FieldName'];",
                                        "email",
                                        "et perferendis officiis",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                [new ActionToggle("temporibus perferendis hic",
                                        "b8271684-9b27-099e-72b2-69eb911c2050",
                                        () => { Console.WriteLine("quibusdam"); return Task.CompletedTask; },
                                        true,
                                        true,
                                        true,
                                        true,
                                        "token",
                                        "non")]))"
                            Renderer="@(new SimpleRenderer(new TextSymbol("voluptatem impedit accusantium",
                                    new MapColor(147, 66, 215),
                                    new MapColor(216, 171, 142),
                                        new Dimension(946.1726),
                                    new MapFont(new Dimension(115.6779),
                                            "Times New Roman",
                                        MapFontStyle.Normal,
                                        FontWeight.Bolder,
                                        TextDecoration.None),
                                        936.0588,
                                    new MapColor(64, 76, 119),
                                    new MapColor(134, 178, 118),
                                        182.9690,
                                    HorizontalAlignment.Right,
                                        true,
                                        484.3599,
                                        new Dimension(61.8277),
                                        true),
                                    "aspernatur",
                                [new SizeVariable("a",
                                        new Dimension(25.0322),
                                        new Dimension(563.5776),
                                        199.0287,
                                        245.0674,
                                        VisualValueRepresentation.Diameter,
                                        VisualValueUnit.Feet,
                                        "quos",
                                        "ipsa",
                                        true,
                                        VisualAxis.Width,
                                        "officiis",
                                        "quisquam magni nostrum",
                                    new VisualVariableLegendOptions(true,
                                            "recusandae modi earum")),
                                new RotationVariable("aperiam",
                                    Axis.Roll,
                                    RotationType.Arithmetic,
                                    new VisualVariableLegendOptions(true,
                                            "aut aut distinctio"),
                                        "itaque",
                                        "qui rerum quisquam"),
                                new RotationVariable("minus",
                                    Axis.Heading,
                                    RotationType.Geographic,
                                    new VisualVariableLegendOptions(true,
                                            "consectetur sint tenetur"),
                                        "doloremque",
                                        "atque sit qui"),
                                new OpacityVariable("totam",
                                        "quidem",
                                    [new OpacityStop(761.9443,
                                            0.8170,
                                            "aut"),
                                    new OpacityStop(435.7072,
                                            0.0547,
                                            "ipsa")],
                                    new VisualVariableLegendOptions(true,
                                            "dolor officiis eos"),
                                        "in",
                                        "in totam quisquam")],
                                new AuthoringInfo(ClassificationMethod.EqualInterval,
                                    new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(250, 231, 82),
                                            new MapColor(70, 7, 207)),
                                        new AlgorithmicColorRamp(Algorithm.LabLch,
                                            new MapColor(12, 93, 105),
                                            new MapColor(51, 6, 166)),
                                        new AlgorithmicColorRamp(Algorithm.CieLab,
                                            new MapColor(209, 149, 176),
                                            new MapColor(122, 114, 100)),
                                        new AlgorithmicColorRamp(Algorithm.Hsv,
                                            new MapColor(62, 244, 139),
                                            new MapColor(136, 129, 23))]),
                                        258.4232,
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(559.8925,
                                                107.3339),
                                        new AuthoringInfoField1ClassBreakInfos(849.8048,
                                                390.9213),
                                        new AuthoringInfoField1ClassBreakInfos(575.5613,
                                                345.3840)],
                                            "quod",
                                            "velit",
                                            "saepe"),
                                    new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(841.3358,
                                                492.2343)],
                                            "numquam",
                                            "et",
                                            "molestiae"),
                                        ["vel",
                                            "maxime"],
                                    AuthoringInfoFlowTheme.WaveFront,
                                        "et",
                                        true,
                                    LengthUnit.Yards,
                                        431.3625,
                                        963.0808,
                                        750.1340,
                                        668.7299)))"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                            <Sublayer 
                                SublayerId="@(6)"
                                LabelsVisible="@(true)"
                                LegendEnabled="@(true)"
                                ListMode="@(ListMode.Show)"
                                MaxScale="@(10807499.3590)"
                                MinScale="@(18703.0335)"
                                Opacity="@(0.9619)"
                                PopupEnabled="@(true)"
                                Title="@("asperiores est ea")"
                                Visible="@(true)"
                                DefinitionExpression="@("rerum")"
                                Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                <Sublayer 
                                    SublayerId="@(8)"
                                    LabelsVisible="@(true)"
                                    LegendEnabled="@(true)"
                                    ListMode="@(ListMode.Hide)"
                                    MaxScale="@(36872566.2834)"
                                    MinScale="@(45170.5574)"
                                    Opacity="@(0.0053)"
                                    PopupEnabled="@(true)"
                                    Title="@("qui aliquam placeat")"
                                    Visible="@(true)"
                                    DefinitionExpression="@("similique")"
                                    Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0")">
                                    <Sublayer 
                                        SublayerId="@(2)"
                                        LabelsVisible="@(true)"
                                        LegendEnabled="@(true)"
                                        ListMode="@(ListMode.Show)"
                                        MaxScale="@(27049006.5802)"
                                        MinScale="@(18759.2849)"
                                        Opacity="@(0.0902)"
                                        PopupEnabled="@(true)"
                                        Title="@("facilis asperiores praesentium")"
                                        Visible="@(true)"
                                        DefinitionExpression="@("sit")"
                                        Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                        <Sublayer 
                                            SublayerId="@(8)"
                                            LabelsVisible="@(true)"
                                            LegendEnabled="@(true)"
                                            ListMode="@(ListMode.Show)"
                                            MaxScale="@(43631732.0338)"
                                            MinScale="@(11305.7803)"
                                            Opacity="@(0.1261)"
                                            PopupEnabled="@(true)"
                                            Title="@("dolorem vero non")"
                                            Visible="@(true)"
                                            DefinitionExpression="@("aut")"
                                            Url="@("https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0")">
                                            <Sublayer 
                                                SublayerId="@(4)"
                                                LabelsVisible="@(true)"
                                                LegendEnabled="@(true)"
                                                ListMode="@(ListMode.Hide)"
                                                MaxScale="@(32750906.2718)"
                                                MinScale="@(21434.6948)"
                                                Opacity="@(0.6271)"
                                                PopupEnabled="@(true)"
                                                Title="@("quisquam dolor quos")"
                                                Visible="@(true)"
                                                DefinitionExpression="@("itaque")"
                                                Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/US_National_Parks_Annual_Visitation/FeatureServer/0")">
                                                <Sublayer 
                                                    SublayerId="@(8)"
                                                    LabelsVisible="@(true)"
                                                    LegendEnabled="@(true)"
                                                    ListMode="@(ListMode.Show)"
                                                    MaxScale="@(11985401.5639)"
                                                    MinScale="@(19204.7947)"
                                                    Opacity="@(0.7990)"
                                                    PopupEnabled="@(true)"
                                                    Title="@("fuga quis aperiam")"
                                                    Visible="@(true)"
                                                    DefinitionExpression="@("aut")"
                                                    Url="@("https://services9.arcgis.com/RHVPKKiFTONKtxq3/arcgis/rest/services/NDFD_Precipitation_v1/FeatureServer/0")">
                                                    <Sublayer 
                                                        Visible="@(true)"
>
                                                    </Sublayer>
                                                    <UniqueValueRenderer 
>
                                                    </UniqueValueRenderer>
                                                    <PopupTemplate 
                                                        Title="@("quidem sit voluptatem")"
                                                        StringContent="@("in")"
>
                                                    </PopupTemplate>
                                                    <Label 
>
                                                    </Label>
                                                    <LayerFloorInfo 
                                                        FloorField="@("est")">
                                                    </LayerFloorInfo>
                                                </Sublayer>
                                                <SimpleRenderer 
                                                    AuthoringInfo="@(new AuthoringInfo())">
                                                </SimpleRenderer>
                                                <PopupTemplate 
                                                    Title="@("nihil iusto quidem")"
                                                    StringContent="@("eos")"
                                                    OutFields="@(["mollitia",
                                                        "maxime",
                                                        "vero"])"
                                                    FieldInfos="@([new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new FieldInfo(null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                            true)])"
                                                    Content="@([new AttachmentsPopupContent(),
                                                    new AttachmentsPopupContent()])"
                                                    ExpressionInfos="@([new ExpressionInfo()])"
                                                    OverwriteActions="@(true)"
                                                    ReturnGeometry="@(true)"
                                                    Actions="@([new ActionButton(null,
                                                        null,
                                                            "50db2930-d796-2fcc-70a3-50070729d676",
                                                            () => { Console.WriteLine("est"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "8aee9c47-ce7c-6eab-ba6e-92b5de8a8151",
                                                            () => { Console.WriteLine("atque"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "0cf7e2c5-4d52-76a1-ffc1-7b95a1c5fc5c",
                                                            () => { Console.WriteLine("ad"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true),
                                                    new ActionButton(null,
                                                        null,
                                                            "b2176c15-2b3f-1f59-fc8a-e4eda3734962",
                                                            () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                                        null,
                                                        null,
                                                        null,
                                                            true)])">
                                                </PopupTemplate>
                                                <Label 
                                                    LabelPlacement="@(LabelPlacement.CenterBefore)"
                                                    LabelExpression="@("quibusdam")"
                                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                    AllowOverrun="@(true)"
                                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                    LabelPosition="@(LabelPosition.Parallel)"
                                                    MaxScale="@(26799976.7734)"
                                                    MinScale="@(30543.4176)"
                                                    RepeatLabel="@(true)"
                                                    RepeatLabelDistance="@(new Dimension(885.7184))"
                                                    Symbol="@(new TextSymbol("quo reprehenderit eligendi"))"
                                                    UseCodedValues="@(true)"
                                                    Where="@("Country = 'Canada'")">
                                                </Label>
                                                <LayerFloorInfo 
                                                    FloorField="@("neque")">
                                                </LayerFloorInfo>
                                            </Sublayer>
                                            <UniqueValueRenderer 
                                                AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.EqualInterval,
                                                    new MultipartColorRamp(),
                                                        179.5801,
                                                    new AuthoringInfoField(),
                                                    new AuthoringInfoField(),
                                                        ["corrupti",
                                                            "quis",
                                                            "maiores",
                                                            "harum"],
                                                    AuthoringInfoFlowTheme.FlowLine,
                                                        "delectus",
                                                        true,
                                                    LengthUnit.Kilometers,
                                                        197.2525,
                                                        161.6536,
                                                        257.1880,
                                                        897.2228))">
                                            </UniqueValueRenderer>
                                            <PopupTemplate 
                                                Title="@("laudantium est ut")"
                                                StringContent="@("culpa")"
                                                OutFields="@(["quia",
                                                    "quia",
                                                    "quis",
                                                    "eos"])"
                                                FieldInfos="@([new FieldInfo("email",
                                                        "consectetur",
                                                        "fugiat",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Sum),
                                                new FieldInfo("token",
                                                        "et",
                                                        "perspiciatis",
                                                    StringFieldOption.TextArea,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Count),
                                                new FieldInfo("status",
                                                        "quia",
                                                        "ad",
                                                    StringFieldOption.TextBox,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Stddev)])"
                                                Content="@([new AttachmentsPopupContent("assumenda repellat voluptatem",
                                                        "perferendis illum similique aut sit sint tenetur"),
                                                new MediaPopupContent("est voluptas et",
                                                        "odio ipsum ad et ea",
                                                    [new BarChartMediaInfo(),
                                                    new BarChartMediaInfo(),
                                                    new BarChartMediaInfo(),
                                                    new PieChartMediaInfo()],
                                                        6)])"
                                                ExpressionInfos="@([new ExpressionInfo("return Date();",
                                                        "group",
                                                        "aut qui a")])"
                                                OverwriteActions="@(true)"
                                                ReturnGeometry="@(true)"
                                                Actions="@([new ActionToggle("eos perspiciatis atque",
                                                        "7ef7fd57-cba5-f8ab-eb90-74cb8bf609a9",
                                                        () => { Console.WriteLine("dignissimos"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "status",
                                                        "excepturi"),
                                                new ActionButton("nisi dolor autem",
                                                        "https://picsum.photos/640/480/?image=532",
                                                        "e4710fe7-8473-5ef0-6b17-59aafef1e8e3",
                                                        () => { Console.WriteLine("ipsa"); return Task.CompletedTask; },
                                                        "email",
                                                        true,
                                                        true,
                                                        true,
                                                        "sed"),
                                                new ActionToggle("eos ut exercitationem",
                                                        "8f36555b-5b3f-96e8-47d7-6f25498c9b6c",
                                                        () => { Console.WriteLine("voluptas"); return Task.CompletedTask; },
                                                        true,
                                                        true,
                                                        true,
                                                        true,
                                                        "phone",
                                                        "placeat")])">
                                            </PopupTemplate>
                                            <Label 
                                                LabelPlacement="@(LabelPlacement.AboveEnd)"
                                                LabelExpression="@("recusandae")"
                                                LabelExpressionInfo="@(new LabelExpressionInfo())"
                                                AllowOverrun="@(true)"
                                                DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                                LabelPosition="@(LabelPosition.Parallel)"
                                                MaxScale="@(21077835.5247)"
                                                MinScale="@(27325.8967)"
                                                RepeatLabel="@(true)"
                                                RepeatLabelDistance="@(new Dimension(982.1300))"
                                                Symbol="@(new TextSymbol("et voluptates minima",
                                                    new MapColor(226, 169, 80),
                                                    new MapColor(185, 232, 63),
                                                        null,
                                                    new MapFont(),
                                                        577.8772,
                                                    new MapColor(143, 19, 229),
                                                    new MapColor(112, 3, 78),
                                                        694.2925,
                                                    HorizontalAlignment.Left,
                                                        true,
                                                        784.1475,
                                                        null,
                                                        true))"
                                                UseCodedValues="@(true)"
                                                Where="@("1 = 1")">
                                            </Label>
                                            <LayerFloorInfo 
                                                FloorField="@("nihil")">
                                            </LayerFloorInfo>
                                        </Sublayer>
                                        <SimpleRenderer 
                                            AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.NaturalBreaks,
                                                new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.CieLab),
                                                    new AlgorithmicColorRamp(Algorithm.LabLch),
                                                    new AlgorithmicColorRamp(Algorithm.CieLab)]),
                                                    632.2921,
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "esse",
                                                        "delectus",
                                                        "ullam"),
                                                new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos(),
                                                    new AuthoringInfoField1ClassBreakInfos()],
                                                        "dolore",
                                                        "id",
                                                        "recusandae"),
                                                    ["quas",
                                                        "laborum",
                                                        "aut"],
                                                AuthoringInfoFlowTheme.WaveFront,
                                                    "qui",
                                                    true,
                                                LengthUnit.UsFeet,
                                                    507.3847,
                                                    477.7989,
                                                    749.1136,
                                                    577.2516))">
                                        </SimpleRenderer>
                                        <PopupTemplate 
                                            Title="@("aut et ut")"
                                            StringContent="@("omnis")"
                                            OutFields="@(["et",
                                                "fugit"])"
                                            FieldInfos="@([new FieldInfo("id",
                                                    "earum",
                                                    "et",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Avg),
                                            new FieldInfo("id",
                                                    "consequatur",
                                                    "facilis",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(3,
                                                        true,
                                                    DateFormat.ShortDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count),
                                            new FieldInfo("comment",
                                                    "consectetur",
                                                    "culpa",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.DayShortMonthYearLongTime24),
                                                    true,
                                                    true,
                                                StatisticType.Count)])"
                                            Content="@([new FieldsPopupContent([new FieldInfo("token",
                                                        "mollitia",
                                                        "nisi",
                                                    StringFieldOption.RichText,
                                                    new FieldInfoFormat(),
                                                        true,
                                                        true,
                                                    StatisticType.Min)],
                                                    "illum et quae non quasi tempora atque",
                                                    "et nulla est"),
                                            new RelationshipPopupContent("voluptatem tenetur aspernatur",
                                                    "vero error nihil recusandae asperiores voluptatem",
                                                    8,
                                                    "totam",
                                                [new RelatedRecordsInfoFieldOrder("tempora",
                                                    OrderBy.Asc),
                                                new RelatedRecordsInfoFieldOrder("ut",
                                                    OrderBy.Asc)],
                                                    9),
                                            new MediaPopupContent("et eligendi deleniti",
                                                    "suscipit ab sunt eos nobis",
                                                [new ColumnChartMediaInfo("ut id molestiae",
                                                        "sunt",
                                                        "amet et distinctio",
                                                    new ChartMediaInfoValue())],
                                                    1)])"
                                            ExpressionInfos="@([new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                    "id",
                                                    "natus recusandae sed",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                                                    "name",
                                                    "inventore tenetur accusamus",
                                                    ExpressionInfoReturnType.String),
                                            new ExpressionInfo("return $feature['FieldName'];",
                                                    "phone",
                                                    "facere ratione aut",
                                                    ExpressionInfoReturnType.String)])"
                                            OverwriteActions="@(true)"
                                            ReturnGeometry="@(true)"
                                            Actions="@([new ActionToggle("facilis debitis et",
                                                    "402df4d9-c878-caa7-7342-b36dbe989613",
                                                    () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                                                    true,
                                                    true,
                                                    true,
                                                    true,
                                                    "name",
                                                    "fugit"),
                                            new ActionButton("harum nobis blanditiis",
                                                    "https://picsum.photos/640/480/?image=351",
                                                    "32be0c99-ed5f-6c26-f718-a195aa6c2100",
                                                    () => { Console.WriteLine("explicabo"); return Task.CompletedTask; },
                                                    "id",
                                                    true,
                                                    true,
                                                    true,
                                                    "ea"),
                                            new ActionButton("rerum sed non",
                                                    "https://picsum.photos/640/480/?image=662",
                                                    "a73e8449-fda1-5a4c-c8b0-654ae2468921",
                                                    () => { Console.WriteLine("facilis"); return Task.CompletedTask; },
                                                    "id",
                                                    true,
                                                    true,
                                                    true,
                                                    "ea"),
                                            new ActionButton("alias quas qui",
                                                    "https://picsum.photos/640/480/?image=66",
                                                    "55e82bb5-8625-cbb3-fe51-0f19b2f698cd",
                                                    () => { Console.WriteLine("dolorum"); return Task.CompletedTask; },
                                                    "status",
                                                    true,
                                                    true,
                                                    true,
                                                    "reiciendis")])">
                                        </PopupTemplate>
                                        <Label 
                                            LabelPlacement="@(LabelPlacement.AboveLeft)"
                                            LabelExpression="@("suscipit")"
                                            LabelExpressionInfo="@(new LabelExpressionInfo())"
                                            AllowOverrun="@(true)"
                                            DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                            LabelPosition="@(LabelPosition.Parallel)"
                                            MaxScale="@(47463294.2997)"
                                            MinScale="@(2252.1431)"
                                            RepeatLabel="@(true)"
                                            RepeatLabelDistance="@(new Dimension(611.0424))"
                                            Symbol="@(new TextSymbol("quia culpa adipisci",
                                                new MapColor(86, 21, 56),
                                                new MapColor(85, 198, 75),
                                                    new Dimension(967.8513),
                                                new MapFont(new Dimension(371.5023),
                                                        "Arial",
                                                    MapFontStyle.Oblique,
                                                    FontWeight.Normal,
                                                    TextDecoration.LineThrough),
                                                    50.2923,
                                                new MapColor(126, 180, 124),
                                                new MapColor(197, 180, 176),
                                                    322.6546,
                                                HorizontalAlignment.Left,
                                                    true,
                                                    385.3771,
                                                    new Dimension(274.6209),
                                                    true))"
                                            UseCodedValues="@(true)"
                                            Where="@("City = 'Toronto'")">
                                        </Label>
                                        <LayerFloorInfo 
                                            FloorField="@("minima")">
                                        </LayerFloorInfo>
                                    </Sublayer>
                                    <UniqueValueRenderer 
                                        AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.DefinedInterval,
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(212, 187, 44),
                                                new MapColor(137, 63, 228)),
                                                92.9806,
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(188.9216,
                                                        671.2957)],
                                                    "recusandae",
                                                    "ipsum",
                                                    "ad"),
                                            new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(396.3220,
                                                        19.9564)],
                                                    "deleniti",
                                                    "ullam",
                                                    "maxime"),
                                                ["sed",
                                                    "explicabo"],
                                            AuthoringInfoFlowTheme.FlowLine,
                                                "fuga",
                                                true,
                                            LengthUnit.Feet,
                                                110.2754,
                                                162.3308,
                                                814.1360,
                                                660.5644))">
                                    </UniqueValueRenderer>
                                    <PopupTemplate 
                                        Title="@("et sed inventore")"
                                        StringContent="@("et")"
                                        OutFields="@(["accusamus",
                                            "non"])"
                                        FieldInfos="@([new FieldInfo("group",
                                                "veritatis",
                                                "facere",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(7,
                                                    true,
                                                DateFormat.ShortDateLongTime),
                                                true,
                                                true,
                                            StatisticType.Var),
                                        new FieldInfo("group",
                                                "nihil",
                                                "consectetur",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(8,
                                                    true,
                                                DateFormat.LongDate),
                                                true,
                                                true,
                                            StatisticType.Max)])"
                                        Content="@([new FieldsPopupContent([new FieldInfo("avatar",
                                                    "laboriosam",
                                                    "ut",
                                                StringFieldOption.TextArea,
                                                new FieldInfoFormat(5,
                                                        true,
                                                    DateFormat.LongDateShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Sum),
                                            new FieldInfo("email",
                                                    "ut",
                                                    "ipsam",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(4,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime24),
                                                    true,
                                                    true,
                                                StatisticType.Min),
                                            new FieldInfo("token",
                                                    "accusamus",
                                                    "voluptas",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(6,
                                                        true,
                                                    DateFormat.DayShortMonthYearShortTime),
                                                    true,
                                                    true,
                                                StatisticType.Avg)],
                                                "laboriosam perspiciatis quia magni eligendi molestiae architecto",
                                                "et ut qui"),
                                        new FieldsPopupContent([new FieldInfo("token",
                                                    "enim",
                                                    "qui",
                                                StringFieldOption.RichText,
                                                new FieldInfoFormat(7,
                                                        true,
                                                    DateFormat.ShortMonthYear),
                                                    true,
                                                    true,
                                                StatisticType.Max),
                                            new FieldInfo("title",
                                                    "libero",
                                                    "assumenda",
                                                StringFieldOption.TextBox,
                                                new FieldInfoFormat(1,
                                                        true,
                                                    DateFormat.ShortDateLe),
                                                    true,
                                                    true,
                                                StatisticType.Sum)],
                                                "mollitia in nam voluptatem sint",
                                                "ut autem vitae")])"
                                        ExpressionInfos="@([new ExpressionInfo("return $feature['FieldName'];",
                                                "avatar",
                                                "perspiciatis quia perspiciatis",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "category",
                                                "porro sint optio",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                                                "phone",
                                                "corrupti omnis fugiat",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "comment",
                                                "odio omnis culpa",
                                                ExpressionInfoReturnType.String)])"
                                        OverwriteActions="@(true)"
                                        ReturnGeometry="@(true)"
                                        Actions="@([new ActionToggle("sit laudantium veniam",
                                                "2fad6a0b-549b-0568-6e58-024eed60541c",
                                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "name",
                                                "aut"),
                                        new ActionToggle("impedit possimus nesciunt",
                                                "ba984026-05fb-be32-acbd-2800b33b333e",
                                                () => { Console.WriteLine("assumenda"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "phone",
                                                "sed"),
                                        new ActionButton("non quisquam sit",
                                                "https://picsum.photos/640/480/?image=664",
                                                "987d44f3-71d2-600c-0122-53930937e120",
                                                () => { Console.WriteLine("fuga"); return Task.CompletedTask; },
                                                "createdAt",
                                                true,
                                                true,
                                                true,
                                                "animi"),
                                        new ActionToggle("reiciendis culpa fugit",
                                                "285065fa-0021-127a-f941-2cedafff4c33",
                                                () => { Console.WriteLine("enim"); return Task.CompletedTask; },
                                                true,
                                                true,
                                                true,
                                                true,
                                                "comment",
                                                "veniam")])">
                                    </PopupTemplate>
                                    <Label 
                                        LabelPlacement="@(LabelPlacement.AboveRight)"
                                        LabelExpression="@("corrupti")"
                                        LabelExpressionInfo="@(new LabelExpressionInfo())"
                                        AllowOverrun="@(true)"
                                        DeconflictionStrategy="@(DeconflictionStrategy.None)"
                                        LabelPosition="@(LabelPosition.Parallel)"
                                        MaxScale="@(24462771.8665)"
                                        MinScale="@(48766.8639)"
                                        RepeatLabel="@(true)"
                                        RepeatLabelDistance="@(new Dimension(443.0234))"
                                        Symbol="@(new TextSymbol("velit est ut",
                                            new MapColor(142, 149, 23),
                                            new MapColor(9, 188, 70),
                                                new Dimension(847.3942),
                                            new MapFont(new Dimension(71.8723),
                                                    "Arial",
                                                MapFontStyle.Oblique,
                                                FontWeight.Bold,
                                                TextDecoration.LineThrough),
                                                546.2904,
                                            new MapColor(162, 72, 10),
                                            new MapColor(149, 182, 107),
                                                262.5924,
                                            HorizontalAlignment.Center,
                                                true,
                                                953.5440,
                                                new Dimension(869.0363),
                                                true))"
                                        UseCodedValues="@(true)"
                                        Where="@("City = 'Toronto'")">
                                    </Label>
                                    <LayerFloorInfo 
                                        FloorField="@("blanditiis")">
                                    </LayerFloorInfo>
                                </Sublayer>
                                <SimpleRenderer 
                                    AuthoringInfo="@(new AuthoringInfo(ClassificationMethod.Quantile,
                                        new MultipartColorRamp([new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(79, 210, 234),
                                                new MapColor(196, 75, 211)),
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(106, 121, 167),
                                                new MapColor(60, 204, 5)),
                                            new AlgorithmicColorRamp(Algorithm.CieLab,
                                                new MapColor(186, 163, 13),
                                                new MapColor(20, 187, 58))]),
                                            836.6534,
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(303.9675,
                                                    955.9003),
                                            new AuthoringInfoField1ClassBreakInfos(524.1013,
                                                    28.7156),
                                            new AuthoringInfoField1ClassBreakInfos(549.5823,
                                                    128.4957)],
                                                "ipsa",
                                                "eum",
                                                "vitae"),
                                        new AuthoringInfoField([new AuthoringInfoField1ClassBreakInfos(338.1184,
                                                    486.1578),
                                            new AuthoringInfoField1ClassBreakInfos(924.6489,
                                                    537.7413)],
                                                "aut",
                                                "minus",
                                                "natus"),
                                            ["qui",
                                                "qui",
                                                "ipsum"],
                                        AuthoringInfoFlowTheme.FlowLine,
                                            "reprehenderit",
                                            true,
                                        LengthUnit.Kilometers,
                                            437.0638,
                                            273.5298,
                                            356.3626,
                                            879.7163))">
                                </SimpleRenderer>
                                <PopupTemplate 
                                    Title="@("veritatis ut et")"
                                    StringContent="@("libero")"
                                    OutFields="@(["temporibus",
                                        "omnis",
                                        "deserunt",
                                        "atque"])"
                                    FieldInfos="@([new FieldInfo("id",
                                            "quo",
                                            "deleniti",
                                        StringFieldOption.RichText,
                                        new FieldInfoFormat(8,
                                                true,
                                            DateFormat.ShortDateLongTime24),
                                            true,
                                            true,
                                        StatisticType.Stddev),
                                    new FieldInfo("password",
                                            "rerum",
                                            "impedit",
                                        StringFieldOption.TextBox,
                                        new FieldInfoFormat(5,
                                                true,
                                            DateFormat.LongMonthDayYear),
                                            true,
                                            true,
                                        StatisticType.Stddev)])"
                                    Content="@([new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Population / $feature.Area;",
                                                "et",
                                                "ipsam similique aliquam")),
                                    new ExpressionPopupContent(new ElementExpressionInfo("var length = Geometry($feature).length; return length;",
                                                "eos",
                                                "culpa expedita sit")),
                                    new RelationshipPopupContent("delectus reiciendis quis",
                                            "accusantium soluta placeat sit nisi voluptas",
                                            7,
                                            "omnis",
                                        [new RelatedRecordsInfoFieldOrder("at",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("ducimus",
                                            OrderBy.Asc),
                                        new RelatedRecordsInfoFieldOrder("porro",
                                            OrderBy.Asc)],
                                            6)])"
                                    ExpressionInfos="@([new ExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                            "phone",
                                            "aliquid eius ullam",
                                            ExpressionInfoReturnType.String),
                                    new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                            "comment",
                                            "velit nihil asperiores",
                                            ExpressionInfoReturnType.String)])"
                                    OverwriteActions="@(true)"
                                    ReturnGeometry="@(true)"
                                    Actions="@([new ActionButton("nobis ut quo",
                                            "https://picsum.photos/640/480/?image=900",
                                            "ccf27db3-4cb0-f26f-460b-220ebd77c323",
                                            () => { Console.WriteLine("quisquam"); return Task.CompletedTask; },
                                            "avatar",
                                            true,
                                            true,
                                            true,
                                            "reprehenderit"),
                                    new ActionToggle("vero est ut",
                                            "be7fa03a-f002-c76b-f64e-b8ca53a6c9be",
                                            () => { Console.WriteLine("ratione"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "createdAt",
                                            "ut"),
                                    new ActionToggle("pariatur ut dolorem",
                                            "ee555a35-e6f5-689f-d087-9e682b842f98",
                                            () => { Console.WriteLine("aliquid"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "status",
                                            "blanditiis"),
                                    new ActionToggle("quo cumque tenetur",
                                            "b28b31f9-bb3f-cfea-f1f0-08878195adca",
                                            () => { Console.WriteLine("aspernatur"); return Task.CompletedTask; },
                                            true,
                                            true,
                                            true,
                                            true,
                                            "phone",
                                            "hic")])">
                                </PopupTemplate>
                                <Label 
                                    LabelPlacement="@(LabelPlacement.AboveCenter)"
                                    LabelExpression="@("voluptate")"
                                    LabelExpressionInfo="@(new LabelExpressionInfo())"
                                    AllowOverrun="@(true)"
                                    DeconflictionStrategy="@(DeconflictionStrategy.Static)"
                                    LabelPosition="@(LabelPosition.Parallel)"
                                    MaxScale="@(44337713.6581)"
                                    MinScale="@(47077.4581)"
                                    RepeatLabel="@(true)"
                                    RepeatLabelDistance="@(new Dimension(68.3499))"
                                    Symbol="@(new TextSymbol("ut vel commodi",
                                        new MapColor(69, 116, 110),
                                        new MapColor(97, 247, 102),
                                            new Dimension(245.4679),
                                        new MapFont(new Dimension(363.2885),
                                                "Verdana",
                                            MapFontStyle.Oblique,
                                            FontWeight.Normal,
                                            TextDecoration.LineThrough),
                                            235.6354,
                                        new MapColor(195, 99, 30),
                                        new MapColor(149, 106, 193),
                                            502.9276,
                                        HorizontalAlignment.Right,
                                            true,
                                            793.1827,
                                            new Dimension(609.6944),
                                            true))"
                                    UseCodedValues="@(true)"
                                    Where="@("PostalCode = 'M5V 1J9'")">
                                </Label>
                                <LayerFloorInfo 
                                    FloorField="@("iure")">
                                </LayerFloorInfo>
                            </Sublayer>
                        </Sublayer>
                    </TileLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(tileLayer!);
        await AssertJavaScript("dispatchEvent", args: [tileLayer!.Id, "refresh"]);
        int tries = 100;
        while (tries > 0 &&
            (refreshResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<RefreshEvent>(refreshResult);
        await AssertJavaScript("assertLayerExists", args: "tile");
        var createServiceSublayersMethodResult = await tileLayer.CreateServiceSublayers();
        Assert.IsNotNull(createServiceSublayersMethodResult);
        var fetchTileMethodResult = await tileLayer.FetchTile(4.9843,
                686.9056,
                169.8106,
                default);
        Assert.IsNotNull(fetchTileMethodResult);
        var findSublayerByIdMethodResult = await tileLayer.FindSublayerById(7);
        Assert.IsNotNull(findSublayerByIdMethodResult);
        var getTileUrlMethodResult = await tileLayer.GetTileUrl(489.8227,
                15.3668,
                598.7680);
        Assert.IsNotNull(getTileUrlMethodResult);
        var loadAllMethodResult = await tileLayer.LoadAll();
        Assert.IsNotNull(loadAllMethodResult);
        BlendMode testBlendMode = BlendMode.Multiply;
        await tileLayer.SetBlendMode(testBlendMode);
        var blendMode = await tileLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(46.0368,
                    134.3256,
                    40.8214,
                    27.1122,
                    682.6667,
                    126.1017,
                    476.5581,
                    288.7798,
                new SpatialReference(4,
                        "impedit",
                        "quidem",
                        "dolores"),
                    true,
                    true);
        await tileLayer.SetFullExtent(testFullExtent);
        var fullExtent = await tileLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await tileLayer.SetListMode(testListMode);
        var listMode = await tileLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Private,
                    "omnis",
                    "labore",
                    900.1691,
                    ["iste",
                        "ullam",
                        "aut"],
                    new DateTime(2012, 7, 14, 1, 52, 19),
                    "tempora",
                    "cupiditate nihil cupiditate quos",
                new Extent(-98.9216,
                        -57.7521,
                        -42.2077,
                        80.4339,
                        86.3790,
                        935.6869,
                        151.6289,
                        594.0296,
                    new SpatialReference(8,
                            "numquam",
                            "aut",
                            "aliquid"),
                        true,
                        true),
                    ["quia",
                        "praesentium"],
                    "quia",
                    new DateTime(2002, 9, 22, 1, 20, 31),
                    "category",
                    697.1263);
        await tileLayer.SetPortalItem(testPortalItem);
        var portalItem = await tileLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        IReadOnlyList<Sublayer> testSubtables = [new Sublayer(6,
                    true,
                    true,
                ListMode.Hide,
                    27832745.1718,
                    39738.8423,
                    0.0333,
                    true,
                    "consequatur nostrum occaecati",
                    true,
                    "voluptatum",
                new LayerFloorInfo("id"),
                [new Label(LabelPlacement.AboveCenter,
                        "aut",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        41031454.5802,
                        8790.0738,
                        true,
                        new Dimension(782.5084),
                    new TextSymbol("placeat incidunt consequatur",
                        new MapColor(202, 154, 67),
                        new MapColor(187, 54, 39),
                            new Dimension(531.6677),
                        new MapFont(new Dimension(493.0713),
                                "Times New Roman",
                            MapFontStyle.Oblique,
                            FontWeight.Bold,
                            TextDecoration.Underline),
                            983.7994,
                        new MapColor(103, 46, 35),
                        new MapColor(80, 48, 145),
                            901.6631,
                        HorizontalAlignment.Right,
                            true,
                            10.1788,
                            new Dimension(671.8919),
                            true),
                        true,
                        "ObjectID = 1")],
                new PopupTemplate("hic tempore omnis",
                        "amet",
                        ["aut",
                            "quos"],
                    [new FieldInfo("email",
                            "repellendus",
                            "ad",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(6,
                                true,
                            DateFormat.ShortDateLeLongTime24),
                            true,
                            true,
                        StatisticType.Min),
                    new FieldInfo("email",
                            "deserunt",
                            "molestiae",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.LongDateShortTime24),
                            true,
                            true,
                        StatisticType.Sum),
                    new FieldInfo("createdAt",
                            "excepturi",
                            "illum",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(4,
                                true,
                            DateFormat.DayShortMonthYear),
                            true,
                            true,
                        StatisticType.Min)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("return $feature.Name;",
                                "velit",
                                "numquam modi dignissimos")),
                    new MediaPopupContent("provident rerum repudiandae",
                            "adipisci qui aut velit voluptas aut saepe",
                        [new LineChartMediaInfo("ex illo aliquam",
                                "doloribus",
                                "corporis natus commodi",
                            new ChartMediaInfoValue(["velit",
                                    "ducimus",
                                    "repellendus",
                                    "ut"],
                                    "rem",
                                    "a",
                                [new ChartMediaInfoValueSeries("avatar",
                                        "ex",
                                        317.7794),
                                new ChartMediaInfoValueSeries("group",
                                        "et",
                                        754.8831),
                                new ChartMediaInfoValueSeries("group",
                                        "necessitatibus",
                                        264.7708),
                                new ChartMediaInfoValueSeries("phone",
                                        "repellat",
                                        96.0595)],
                                [new MapColor(132, 13, 240),
                                new MapColor(183, 202, 223)])),
                        new PieChartMediaInfo("rem voluptatem qui",
                                "dolorum",
                                "rem sequi est",
                            new ChartMediaInfoValue(["accusantium",
                                    "doloribus",
                                    "consequatur"],
                                    "fuga",
                                    "inventore",
                                [new ChartMediaInfoValueSeries("category",
                                        "sed",
                                        341.0255),
                                new ChartMediaInfoValueSeries("id",
                                        "amet",
                                        850.2663),
                                new ChartMediaInfoValueSeries("comment",
                                        "nisi",
                                        559.0788),
                                new ChartMediaInfoValueSeries("updatedAt",
                                        "voluptatem",
                                        469.3228)],
                                [new MapColor(142, 46, 79),
                                new MapColor(14, 4, 18),
                                new MapColor(172, 57, 53)]))],
                            5)],
                    [new ExpressionInfo("return $feature['FieldName'];",
                            "id",
                            "deleniti perspiciatis unde",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("var x = $feature.X; var y = $feature.Y; return x + ', ' + y;",
                            "name",
                            "quia et et",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionButton("facilis praesentium quaerat",
                            "https://picsum.photos/640/480/?image=150",
                            "a4012cb7-4997-6eb2-6c44-a480e60a5e71",
                            () => { Console.WriteLine("aliquam"); return Task.CompletedTask; },
                            "updatedAt",
                            true,
                            true,
                            true,
                            "incidunt"),
                    new ActionButton("rerum ut libero",
                            "https://picsum.photos/640/480/?image=512",
                            "9fa52a81-bc1e-fb88-c636-486ddf9764f6",
                            () => { Console.WriteLine("aperiam"); return Task.CompletedTask; },
                            "token",
                            true,
                            true,
                            true,
                            "exercitationem"),
                    new ActionButton("molestias qui repellendus",
                            "https://picsum.photos/640/480/?image=1074",
                            "5ac128a5-79ce-fdf0-95b8-856afa13ad8b",
                            () => { Console.WriteLine("et"); return Task.CompletedTask; },
                            "title",
                            true,
                            true,
                            true,
                            "eaque"),
                    new ActionToggle("est eum vel",
                            "e5811990-f324-4e5d-68d0-f51e9110d298",
                            () => { Console.WriteLine("officia"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "name",
                            "sint")])),
            new Sublayer(8,
                    true,
                    true,
                ListMode.Show,
                    45821672.1164,
                    47942.5753,
                    0.0789,
                    true,
                    "autem aperiam dolores",
                    true,
                    "dolorem",
                new LayerFloorInfo("pariatur"),
                [new Label(LabelPlacement.BelowBefore,
                        "placeat",
                        new LabelExpressionInfo(),
                        true,
                    DeconflictionStrategy.Static,
                    LabelPosition.Parallel,
                        3011105.2163,
                        35147.5589,
                        true,
                        new Dimension(170.8607),
                    new TextSymbol("ut quae voluptatem",
                        new MapColor(114, 171, 127),
                        new MapColor(188, 161, 81),
                            new Dimension(191.1038),
                        new MapFont(new Dimension(294.4870),
                                "Helvetica",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            291.8998,
                        new MapColor(146, 106, 207),
                        new MapColor(152, 44, 110),
                            648.0566,
                        HorizontalAlignment.Right,
                            true,
                            641.7170,
                            new Dimension(869.6870),
                            true),
                        true,
                        "Phone = '555-555-5555'")],
                new PopupTemplate("labore ullam neque",
                        "non",
                        ["quos",
                            "ex",
                            "voluptatibus",
                            "quia"],
                    [new FieldInfo("id",
                            "quidem",
                            "modi",
                        StringFieldOption.TextArea,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("token",
                            "voluptas",
                            "officiis",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(8,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Max),
                    new FieldInfo("email",
                            "expedita",
                            "est",
                        StringFieldOption.TextBox,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Avg),
                    new FieldInfo("title",
                            "a",
                            "voluptatem",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime),
                            true,
                            true,
                        StatisticType.Avg)],
                    [new ExpressionPopupContent(new ElementExpressionInfo("if ($feature.Age > 21) { return 'Adult'; } else { return 'Minor'; }",
                                "quia",
                                "eos tempora ducimus")),
                    new ExpressionPopupContent(new ElementExpressionInfo("return Date();",
                                "odio",
                                "dolor ut non"))],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "category",
                            "voluptas expedita molestias",
                            ExpressionInfoReturnType.String),
                    new ExpressionInfo("return $feature.Status == 'Active' ? 'Active' : 'Inactive';",
                            "phone",
                            "ex quae sapiente",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                    [new ActionToggle("cum laborum autem",
                            "db302e6d-dd0c-208c-26c7-bb6bdc241b2b",
                            () => { Console.WriteLine("velit"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "createdAt",
                            "sunt"),
                    new ActionToggle("id asperiores quia",
                            "3af628c4-3783-6d19-a4e2-eccc83a3ff85",
                            () => { Console.WriteLine("hic"); return Task.CompletedTask; },
                            true,
                            true,
                            true,
                            true,
                            "id",
                            "quasi")]))];
        await tileLayer.SetSubtables(testSubtables);
        var subtables = await tileLayer.GetSubtables();
        Assert.AreEqual(testSubtables, subtables);
        TileInfo testTileInfo = new TileInfo(911.9882,
                    TileInfoFormat.Gif,
                    true,
                [new LOD(8,
                        "sit",
                        75.1110,
                        38619071.5477),
                new LOD(5,
                        "corrupti",
                        30.3058,
                        41674625.2135),
                new LOD(9,
                        "corporis",
                        58.9261,
                        49951215.7865),
                new LOD(1,
                        "illo",
                        54.6959,
                        44511809.1299)],
                new Point(-79.4327,
                        8.8274,
                        -9.6682,
                        80.8709,
                        727.9482,
                    new SpatialReference(3,
                            "velit",
                            "veniam",
                            "non"),
                        true,
                        true,
                        318.1198),
                    [9,
                        3],
                new SpatialReference(6,
                        "quis",
                        "consequatur",
                        "praesentium"));
        await tileLayer.SetTileInfo(testTileInfo);
        var tileInfo = await tileLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2000, 11, 25, 13, 12, 27),
                    new DateTime(2023, 2, 20, 1, 24, 1));
        await tileLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await tileLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
