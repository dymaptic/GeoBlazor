@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedBingMapsLayer(Action renderHandler)
    {
        BingMapsLayer? bingMapsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <BingMapsLayer 
                        Key="@("aut")"
                        Style="@(BingImageryStyle.Road)"
                        BlendMode="@(BlendMode.SoftLight)"
                        Effect="@(new Effect("et",
                            36068928.1680))"
                        MaxScale="@(9208971.1397)"
                        MinScale="@(41115.3427)"
                        RefreshInterval="@(251.0892)"
                        FullExtent="@(new Extent(-14.8054,
                                -20.6077,
                                32.6348,
                                23.2336,
                                653.3593,
                                358.8491,
                                323.3603,
                                542.2430,
                            new SpatialReference(1,
                                    "tempore",
                                    "blanditiis",
                                    "vel"),
                                true,
                                true))"
                        ListMode="@(ListMode.Show)"
                        Opacity="@(0.3013)"
                        PersistenceEnabled="@(true)"
                        Region="@("sunt")"
                        Title="@("temporibus consequatur debitis")"
                        VisibilityTimeExtent="@(new TimeExtent(new DateTime(2009, 7, 3, 18, 42, 26),
                                new DateTime(2001, 1, 8, 9, 4, 44)))">
                        <TileInfo 
                            Dpi="@(835.2631)"
                            Format="@(TileInfoFormat.Svg)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(9,
                                    "unde",
                                    74.7466,
                                    42955431.7700)])"
                            Origin="@(new Point(-35.1139,
                                    -59.5325,
                                    132.4217,
                                    53.2703,
                                    16.7835,
                                new SpatialReference(9,
                                        "ab",
                                        "quasi",
                                        "similique"),
                                    true,
                                    true,
                                    483.8193))"
                            Size="@([9])">
                            <SpatialReference 
                                Wkid="@(6)"
                                ImageCoordinateSystem="@("laboriosam")"
                                Wkt="@("suscipit")"
                                Wkt2="@("rerum")">
                            </SpatialReference>
                        </TileInfo>
                        <SpatialReference 
                            Wkid="@(7)"
                            ImageCoordinateSystem="@("magnam")"
                            Wkt="@("veritatis")"
                            Wkt2="@("aut")">
                        </SpatialReference>
                    </BingMapsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(bingMapsLayer!);
        await AssertJavaScript("assertLayerExists", args: "bing-maps");
        BlendMode testBlendMode = BlendMode.SourceOut;
        await bingMapsLayer.SetBlendMode(testBlendMode);
        var blendMode = await bingMapsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        SpatialReference testSpatialReference = new SpatialReference(2,
                    "est",
                    "voluptatem",
                    "et");
        await bingMapsLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await bingMapsLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        TileInfo testTileInfo = new TileInfo(355.9004,
                    TileInfoFormat.Gif,
                    true,
                [new LOD(7,
                        "non",
                        58.0048,
                        8563466.1383)],
                new Point(-144.9318,
                        -87.7987,
                        163.9718,
                        9.0881,
                        986.8185,
                    new SpatialReference(1,
                            "voluptas",
                            "vel",
                            "consequatur"),
                        true,
                        true,
                        28.4026),
                    [3],
                new SpatialReference(4,
                        "dolores",
                        "fugiat",
                        "atque"));
        await bingMapsLayer.SetTileInfo(testTileInfo);
        var tileInfo = await bingMapsLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
    }
}
