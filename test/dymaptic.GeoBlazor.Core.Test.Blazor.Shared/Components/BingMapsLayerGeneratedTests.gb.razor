@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderBingMapsLayer(Action renderHandler)
    {
        BingMapsLayer? bingMapsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <BingMapsLayer 
                        Key="@("quos")"
                        Style="@(BingImageryStyle.Aerial)"
                        BlendMode="@(BlendMode.Normal)"
                        Effect="@(new Effect("qui",
                            4711027.5300))"
                        MaxScale="@(43717110.4805)"
                        MinScale="@(44956.7122)"
                        RefreshInterval="@(853.4567)"
                        SpatialReference="@(new SpatialReference(3,
                                "nulla",
                                "aut",
                                "nulla"))"
                        FullExtent="@(new Extent(-154.0338,
                                -47.4642,
                                67.1599,
                                53.3880,
                                57.3658,
                                52.9281,
                                669.3557,
                                339.3714,
                            new SpatialReference(7,
                                    "velit",
                                    "aliquam",
                                    "ea"),
                                true,
                                true))"
                        ListMode="@(ListMode.Hide)"
                        Opacity="@(0.0240)"
                        PersistenceEnabled="@(true)"
                        Region="@("perferendis")"
                        Title="@("modi nesciunt accusamus")"
                        VisibilityTimeExtent="@(new TimeExtent(new DateTime(2020, 1, 9, 2, 48, 30),
                                new DateTime(2013, 9, 1, 17, 31, 30)))">
                        <TileInfo 
                            Dpi="@(587.8963)"
                            Format="@(TileInfoFormat.Gif)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(7,
                                    "non",
                                    24.6662,
                                    26362879.7666),
                            new LOD(4,
                                    "eum",
                                    98.6085,
                                    1641150.1560),
                            new LOD(9,
                                    "saepe",
                                    4.3296,
                                    23502535.4144)])"
                            Origin="@(new Point(113.2294,
                                    18.9686,
                                    -77.3887,
                                    -36.3220,
                                    989.0681,
                                new SpatialReference(2,
                                        "rerum",
                                        "dolores",
                                        "expedita"),
                                    true,
                                    true,
                                    497.8916))"
                            Size="@([3,
                                1])"
                            SpatialReference="@(new SpatialReference(3,
                                    "possimus",
                                    "odio",
                                    "vitae"))">
                        </TileInfo>
                    </BingMapsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(bingMapsLayer!);
        await AssertJavaScript("assertLayerExists", args: "bing-maps");
        BlendMode testBlendMode = BlendMode.Xor;
        await bingMapsLayer.SetBlendMode(testBlendMode);
        var blendMode = await bingMapsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        SpatialReference testSpatialReference = new SpatialReference(2,
                    "recusandae",
                    "adipisci",
                    "quam");
        await bingMapsLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await bingMapsLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        TileInfo testTileInfo = new TileInfo(489.6259,
                    TileInfoFormat.Png32,
                    true,
                [new LOD(1,
                        "aspernatur",
                        48.1472,
                        25516876.2056),
                new LOD(2,
                        "autem",
                        73.8649,
                        32344054.0010),
                new LOD(3,
                        "porro",
                        1.1134,
                        47115369.5445)],
                new Point(-146.2880,
                        -22.1558,
                        177.7268,
                        54.4785,
                        850.1816,
                    new SpatialReference(3,
                            "quasi",
                            "ut",
                            "officiis"),
                        true,
                        true,
                        384.5819),
                    [6,
                        7,
                        4],
                new SpatialReference(8,
                        "tenetur",
                        "dolorem",
                        "qui"));
        await bingMapsLayer.SetTileInfo(testTileInfo);
        var tileInfo = await bingMapsLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
    }
}
