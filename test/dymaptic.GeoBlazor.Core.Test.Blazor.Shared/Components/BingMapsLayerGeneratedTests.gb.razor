@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderBingMapsLayer(Action renderHandler)
    {
        BingMapsLayer? bingMapsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <BingMapsLayer 
                        Key="@("laboriosam")"
                        Style="@(BingImageryStyle.Aerial)"
                        BlendMode="@(BlendMode.Reflect)"
                        Effect="@(new Effect("sunt",
                            26594175.7215))"
                        MaxScale="@(27686384.8484)"
                        MinScale="@(21270.8288)"
                        RefreshInterval="@(550.9439)"
                        SpatialReference="@(new SpatialReference(2,
                                "consectetur",
                                "quia",
                                "voluptates"))"
                        FullExtent="@(new Extent(-24.1129,
                                -109.6608,
                                49.2403,
                                -88.6575,
                                397.4246,
                                534.9110,
                                451.0275,
                                960.6887,
                            new SpatialReference(8,
                                    "sit",
                                    "rerum",
                                    "similique"),
                                true,
                                true))"
                        ListMode="@(ListMode.Hide)"
                        Opacity="@(0.9836)"
                        PersistenceEnabled="@(true)"
                        Region="@("ut")"
                        Title="@("quis distinctio non")">
                        <TimeExtent 
                            Start="@(new DateTime(2006, 9, 7, 12, 11, 18))"
                            End="@(new DateTime(2004, 10, 24, 13, 35, 55))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(668.6365)"
                            Format="@(TileInfoFormat.Png)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(1,
                                    "dolor",
                                    30.1319,
                                    31216612.6683),
                            new LOD(7,
                                    "distinctio",
                                    37.9338,
                                    29795983.0800),
                            new LOD(5,
                                    "voluptas",
                                    54.2889,
                                    25313259.5932)])"
                            Origin="@(new Point(165.8346,
                                    -21.2610,
                                    -53.9529,
                                    -88.2145,
                                    601.0289,
                                new SpatialReference(7,
                                        "dolore",
                                        "nemo",
                                        "expedita"),
                                    true,
                                    true,
                                    315.1719))"
                            Size="@([1,
                                8,
                                6,
                                1])"
                            SpatialReference="@(new SpatialReference(3,
                                    "aut",
                                    "impedit",
                                    "non"))">
                        </TileInfo>
                    </BingMapsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(bingMapsLayer!);
        await AssertJavaScript("assertLayerExists", args: "bing-maps");
        BlendMode testBlendMode = BlendMode.SourceIn;
        await bingMapsLayer.SetBlendMode(testBlendMode);
        var blendMode = await bingMapsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        SpatialReference testSpatialReference = new SpatialReference(7,
                    "tenetur",
                    "culpa",
                    "atque");
        await bingMapsLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await bingMapsLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        Extent testFullExtent = new Extent(-38.1564,
                    -170.8708,
                    57.0368,
                    33.5755,
                    833.3080,
                    383.6355,
                    562.6136,
                    717.7135,
                new SpatialReference(1,
                        "harum",
                        "nihil",
                        "sapiente"),
                    true,
                    true);
        await bingMapsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await bingMapsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await bingMapsLayer.SetListMode(testListMode);
        var listMode = await bingMapsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        TileInfo testTileInfo = new TileInfo(970.1039,
                    TileInfoFormat.Svgz,
                    true,
                [new LOD(4,
                        "voluptate",
                        75.2611,
                        36645648.0616),
                new LOD(4,
                        "quam",
                        98.3145,
                        4706435.1420)],
                new Point(32.8717,
                        12.9758,
                        -80.2489,
                        -64.7742,
                        313.5249,
                    new SpatialReference(1,
                            "nemo",
                            "qui",
                            "iusto"),
                        true,
                        true,
                        24.5566),
                    [5,
                        5,
                        8],
                new SpatialReference(1,
                        "aut",
                        "non",
                        "quo"));
        await bingMapsLayer.SetTileInfo(testTileInfo);
        var tileInfo = await bingMapsLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2017, 1, 24, 20, 53, 24),
                    new DateTime(2010, 3, 6, 21, 48, 8));
        await bingMapsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await bingMapsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
