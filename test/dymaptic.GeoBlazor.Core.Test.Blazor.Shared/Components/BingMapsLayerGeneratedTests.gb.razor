@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderBingMapsLayer(Action renderHandler)
    {
        BingMapsLayer? bingMapsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <BingMapsLayer 
                        Key="@("similique")"
                        Style="@(BingImageryStyle.Road)"
                        BlendMode="@(BlendMode.Luminosity)"
                        Effect="@(new Effect("eaque",
                            40180446.7108))"
                        MaxScale="@(19431795.4673)"
                        MinScale="@(35380.3784)"
                        RefreshInterval="@(951.0181)"
                        SpatialReference="@(new SpatialReference(5,
                                "doloribus",
                                "nobis",
                                "reprehenderit"))"
                        FullExtent="@(new Extent(-121.4829,
                                115.6054,
                                -78.2314,
                                11.4391,
                                790.3160,
                                931.1116,
                                520.5618,
                                572.0603,
                            new SpatialReference(7,
                                    "recusandae",
                                    "maiores",
                                    "et"),
                                true,
                                true))"
                        ListMode="@(ListMode.Hide)"
                        Opacity="@(0.8244)"
                        PersistenceEnabled="@(true)"
                        Region="@("impedit")"
                        Title="@("delectus ducimus voluptatum")"
                        VisibilityTimeExtent="@(new TimeExtent(new DateTime(2021, 1, 24, 4, 40, 37),
                                new DateTime(2000, 7, 10, 20, 27, 26)))">
                        <TileInfo 
                            Dpi="@(155.6595)"
                            Format="@(TileInfoFormat.Tiff)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(1,
                                    "numquam",
                                    64.2975,
                                    30214935.6043),
                            new LOD(3,
                                    "error",
                                    1.6960,
                                    43369518.4070),
                            new LOD(3,
                                    "adipisci",
                                    94.0512,
                                    13391565.7529),
                            new LOD(2,
                                    "provident",
                                    6.8934,
                                    10675307.8891)])"
                            Origin="@(new Point(150.4873,
                                    12.6697,
                                    -36.8591,
                                    -61.0002,
                                    764.3769,
                                new SpatialReference(7,
                                        "et",
                                        "dicta",
                                        "quia"),
                                    true,
                                    true,
                                    279.5401))"
                            Size="@([6,
                                8])"
                            SpatialReference="@(new SpatialReference(3,
                                    "minima",
                                    "corrupti",
                                    "debitis"))">
                        </TileInfo>
                    </BingMapsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(bingMapsLayer!);
        await AssertJavaScript("assertLayerExists", args: "bing-maps");
        BlendMode testBlendMode = BlendMode.Invert;
        await bingMapsLayer.SetBlendMode(testBlendMode);
        var blendMode = await bingMapsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        SpatialReference testSpatialReference = new SpatialReference(7,
                    "sed",
                    "autem",
                    "soluta");
        await bingMapsLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await bingMapsLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        TileInfo testTileInfo = new TileInfo(558.7638,
                    TileInfoFormat.Ps,
                    true,
                [new LOD(1,
                        "voluptatem",
                        76.2169,
                        48618455.0367),
                new LOD(4,
                        "voluptatem",
                        31.9497,
                        20715046.2572),
                new LOD(6,
                        "aut",
                        36.8485,
                        14380676.4555),
                new LOD(1,
                        "voluptatem",
                        76.5311,
                        47792694.9161)],
                new Point(121.8042,
                        53.2501,
                        43.8549,
                        -60.4486,
                        941.0860,
                    new SpatialReference(8,
                            "ad",
                            "est",
                            "et"),
                        true,
                        true,
                        557.7540),
                    [4,
                        5,
                        2,
                        1],
                new SpatialReference(7,
                        "dolorum",
                        "esse",
                        "nostrum"));
        await bingMapsLayer.SetTileInfo(testTileInfo);
        var tileInfo = await bingMapsLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
    }
}
