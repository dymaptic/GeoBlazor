@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderBingMapsLayer(Action renderHandler)
    {
        BingMapsLayer? bingMapsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <BingMapsLayer 
                        Key="@("et")"
                        Style="@(BingImageryStyle.Road)"
                        BlendMode="@(BlendMode.DestinationIn)"
                        Effect="@(new Effect("quibusdam",
                            35767132.2369))"
                        MaxScale="@(28435914.6654)"
                        MinScale="@(48509.8511)"
                        RefreshInterval="@(462.2982)"
                        SpatialReference="@(new SpatialReference(2,
                                "et",
                                "natus",
                                "aut"))"
                        FullExtent="@(new Extent(126.4280,
                                81.3774,
                                -86.3139,
                                -17.5285,
                                957.2418,
                                816.2743,
                                816.1921,
                                12.9169,
                            new SpatialReference(2,
                                    "ipsum",
                                    "optio",
                                    "quia"),
                                true,
                                true))"
                        ListMode="@(ListMode.Hide)"
                        Opacity="@(0.9182)"
                        PersistenceEnabled="@(true)"
                        Region="@("asperiores")"
                        Title="@("assumenda repellendus amet")">
                        <TimeExtent 
                            Start="@(new DateTime(2013, 10, 10, 4, 8, 1))"
                            End="@(new DateTime(2002, 1, 9, 21, 20, 48))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(307.0124)"
                            Format="@(TileInfoFormat.Png)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(3,
                                    "est",
                                    23.6136,
                                    28061230.8605)])"
                            Origin="@(new Point(-21.0172,
                                    -16.1662,
                                    111.4790,
                                    28.4251,
                                    842.3961,
                                new SpatialReference(1,
                                        "vero",
                                        "fugit",
                                        "velit"),
                                    true,
                                    true,
                                    979.3517))"
                            Size="@([1,
                                5])"
                            SpatialReference="@(new SpatialReference(2,
                                    "in",
                                    "sint",
                                    "quis"))">
                        </TileInfo>
                    </BingMapsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(bingMapsLayer!);
        await AssertJavaScript("assertLayerExists", args: "bing-maps");
        BlendMode testBlendMode = BlendMode.Saturation;
        await bingMapsLayer.SetBlendMode(testBlendMode);
        var blendMode = await bingMapsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        SpatialReference testSpatialReference = new SpatialReference(6,
                    "veritatis",
                    "quis",
                    "quos");
        await bingMapsLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await bingMapsLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        Extent testFullExtent = new Extent(-154.9236,
                    128.4366,
                    -85.2405,
                    -38.5333,
                    387.0262,
                    83.0553,
                    409.7178,
                    888.5012,
                new SpatialReference(7,
                        "suscipit",
                        "sit",
                        "ipsa"),
                    true,
                    true);
        await bingMapsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await bingMapsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await bingMapsLayer.SetListMode(testListMode);
        var listMode = await bingMapsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        TileInfo testTileInfo = new TileInfo(564.9486,
                    TileInfoFormat.Lerc,
                    true,
                [new LOD(4,
                        "corrupti",
                        59.9578,
                        4241188.8439),
                new LOD(5,
                        "assumenda",
                        96.3313,
                        10614944.9834),
                new LOD(6,
                        "architecto",
                        57.1680,
                        45297661.1949)],
                new Point(4.5031,
                        50.6606,
                        -13.8994,
                        -21.1069,
                        591.6501,
                    new SpatialReference(7,
                            "sit",
                            "id",
                            "ipsa"),
                        true,
                        true,
                        269.7745),
                    [5,
                        1],
                new SpatialReference(9,
                        "nisi",
                        "aut",
                        "aperiam"));
        await bingMapsLayer.SetTileInfo(testTileInfo);
        var tileInfo = await bingMapsLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2012, 7, 6, 21, 25, 20),
                    new DateTime(2005, 1, 12, 6, 57, 7));
        await bingMapsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await bingMapsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
