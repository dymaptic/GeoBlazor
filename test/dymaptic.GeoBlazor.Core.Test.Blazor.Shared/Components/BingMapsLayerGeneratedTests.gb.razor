@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedBingMapsLayer(Action renderHandler)
    {
        BingMapsLayer? bingMapsLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <BingMapsLayer 
                        Key="@("odit")"
                        Style="@(BingImageryStyle.Road)"
                        BlendMode="@(BlendMode.Darken)"
                        Effect="@(new Effect("asperiores",
                            6430597.7548))"
                        MaxScale="@(37654472.9124)"
                        MinScale="@(30226.1524)"
                        RefreshInterval="@(54.7732)"
                        ListMode="@(ListMode.Show)"
                        Opacity="@(0.5822)"
                        PersistenceEnabled="@(true)"
                        Region="@("id")"
                        Title="@("officiis consequatur architecto")">
                        <TimeExtent 
                            Start="@(new DateTime(2013, 10, 21, 9, 10, 48))"
                            End="@(new DateTime(2015, 8, 11, 15, 26, 26))">
                        </TimeExtent>
                        <TileInfo 
                            Dpi="@(787.8685)"
                            Format="@(TileInfoFormat.Lerc)"
                            IsWrappable="@(true)"
                            Lods="@([new LOD(7,
                                    "vitae",
                                    6.0287,
                                    46582435.2824)])"
                            Origin="@(new Point(-13.6664,
                                    53.6765,
                                    139.6262,
                                    -32.9966,
                                    808.9488,
                                new SpatialReference(8,
                                        "optio",
                                        "quidem",
                                        "quis"),
                                    true,
                                    true,
                                    17.4202))"
                            Size="@([6])">
                            <SpatialReference 
                                Wkid="@(6)"
                                ImageCoordinateSystem="@("commodi")"
                                Wkt="@("dolorem")"
                                Wkt2="@("consequatur")">
                            </SpatialReference>
                        </TileInfo>
                        <SpatialReference 
                            Wkid="@(2)"
                            ImageCoordinateSystem="@("ex")"
                            Wkt="@("totam")"
                            Wkt2="@("nostrum")">
                        </SpatialReference>
                        <Extent 
                            Xmax="@(33.1474)"
                            Xmin="@(-158.1272)"
                            Ymax="@(-48.0662)"
                            Ymin="@(81.4232)"
                            Zmax="@(82.9911)"
                            Zmin="@(382.4596)"
                            Mmax="@(273.2032)"
                            Mmin="@(669.5455)"
                            HasM="@(true)"
                            HasZ="@(true)">
                            <SpatialReference 
                                Wkid="@(6)"
                                ImageCoordinateSystem="@("molestiae")"
                                Wkt="@("officiis")"
                                Wkt2="@("praesentium")">
                            </SpatialReference>
                        </Extent>
                    </BingMapsLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(bingMapsLayer!);
        await AssertJavaScript("assertLayerExists", args: "bing-maps");
        BlendMode testBlendMode = BlendMode.DestinationOut;
        await bingMapsLayer.SetBlendMode(testBlendMode);
        var blendMode = await bingMapsLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        SpatialReference testSpatialReference = new SpatialReference(6,
                    "vero",
                    "placeat",
                    "assumenda");
        await bingMapsLayer.SetSpatialReference(testSpatialReference);
        var spatialReference = await bingMapsLayer.GetSpatialReference();
        Assert.AreEqual(testSpatialReference, spatialReference);
        Extent testFullExtent = new Extent(91.6843,
                    -173.3499,
                    11.3247,
                    32.9276,
                    248.0729,
                    616.9143,
                    315.8067,
                    522.4889,
                new SpatialReference(4,
                        "consequatur",
                        "est",
                        "suscipit"),
                    true,
                    true);
        await bingMapsLayer.SetFullExtent(testFullExtent);
        var fullExtent = await bingMapsLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await bingMapsLayer.SetListMode(testListMode);
        var listMode = await bingMapsLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        TileInfo testTileInfo = new TileInfo(249.3255,
                    TileInfoFormat.Svgz,
                    true,
                [new LOD(4,
                        "atque",
                        95.3137,
                        12274239.5841),
                new LOD(5,
                        "aliquam",
                        61.6139,
                        33645764.3215)],
                new Point(-52.4163,
                        -82.4692,
                        140.3592,
                        20.2499,
                        810.6768,
                    new SpatialReference(4,
                            "et",
                            "tempore",
                            "ab"),
                        true,
                        true,
                        852.2624),
                    [7,
                        3],
                new SpatialReference(2,
                        "sed",
                        "fugit",
                        "aut"));
        await bingMapsLayer.SetTileInfo(testTileInfo);
        var tileInfo = await bingMapsLayer.GetTileInfo();
        Assert.AreEqual(testTileInfo, tileInfo);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2008, 1, 25, 18, 32, 57),
                    new DateTime(2010, 6, 12, 15, 4, 6));
        await bingMapsLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await bingMapsLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
