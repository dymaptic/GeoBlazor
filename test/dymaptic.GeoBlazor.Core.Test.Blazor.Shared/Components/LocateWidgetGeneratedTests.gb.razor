@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedLocateWidget(Action renderHandler)
    {
        LocateWidget? locateWidget = null;

        LocateEvent? locateResult = null;
        void OnLocate(LocateEvent result)
        {
            locateResult = result;
        }
        LocateErrorEvent? locateErrorResult = null;
        void OnLocateError(LocateErrorEvent result)
        {
            locateErrorResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                </Map>
                <LocateWidget 
                    GeolocationOptions="@("rerum")"
                    GoToLocationEnabled="@(true)"
                    GoToOverride="@(new GoToOverride())"
                    Icon="@("commodi")"
                    Label="@("animi")"
                    PopupEnabled="@(true)"
                    Scale="@(3)"
                    ViewModel="@(new LocateViewModel(new Error("email",
                            "ea autem suscipit nihil",
                            new { Value = "dolorem" }),
                            "quia",
                            true,
                        new GoToOverride(),
                        new Graphic(new Polyline([new MapPath([new MapPoint([716.9731,
                                        486.1333]),
                                    new MapPoint([699.8949])])],
                                new SpatialReference(7,
                                        "minima",
                                        "numquam",
                                        "et"),
                                    true,
                                    true),
                            new TextSymbol("exercitationem ipsam minus",
                                new MapColor(183, 196, 22),
                                new MapColor(48, 214, 75),
                                    new Dimension(140.0905),
                                new MapFont(new Dimension(983.7234),
                                        "Courier New",
                                    MapFontStyle.Italic,
                                    FontWeight.Bold,
                                    TextDecoration.Underline),
                                    264.8073,
                                new MapColor(114, 151, 73),
                                new MapColor(66, 242, 181),
                                    198.5627,
                                HorizontalAlignment.Right,
                                    true,
                                    24.7916,
                                    new Dimension(22.8590),
                                    true),
                            new PopupTemplate("non adipisci quas",
                                    "impedit",
                                    ["esse",
                                        "sit"],
                                [new FieldInfo("name",
                                        "architecto",
                                        "aut",
                                    StringFieldOption.RichText,
                                    new FieldInfoFormat(8,
                                            true,
                                        DateFormat.LongDateLongTime),
                                        true,
                                        true,
                                    StatisticType.Var)],
                                [new AttachmentsPopupContent("optio quos eligendi",
                                        "doloremque rerum",
                                        AttachmentsPopupContentDisplayType.Auto),
                                new MediaPopupContent("aliquid eum reiciendis",
                                        "molestias autem",
                                    [new BarChartMediaInfo("eaque quam mollitia",
                                            "facilis",
                                            "voluptatem ducimus magni",
                                        new ChartMediaInfoValue(["voluptatibus"],
                                                "quam",
                                                "rerum",
                                            [new ChartMediaInfoValueSeries("title",
                                                    "tempore",
                                                    548.5269),
                                            new ChartMediaInfoValueSeries("createdAt",
                                                    "et",
                                                    433.7530)],
                                            [new MapColor(29, 114, 246),
                                            new MapColor(53, 155, 163)])),
                                    new LineChartMediaInfo("aut iusto asperiores",
                                            "corporis",
                                            "iure quibusdam autem",
                                        new ChartMediaInfoValue(["quod",
                                                "odit"],
                                                "et",
                                                "beatae",
                                            [new ChartMediaInfoValueSeries("id",
                                                    "dolorem",
                                                    216.3336),
                                            new ChartMediaInfoValueSeries("status",
                                                    "magni",
                                                    135.2306)],
                                            [new MapColor(111, 171, 50)]))],
                                        7)],
                                [new ExpressionInfo("return $feature.Name;",
                                        "avatar",
                                        "iusto sunt commodi",
                                        ExpressionInfoReturnType.String)],
                                    true,
                                    true,
                                    [new ActionButton("sunt laborum eum",
                                        "https://picsum.photos/640/480/?image=1007",
                                        "67c1d8d4-7293-8d92-b721-25d35d48c2f4",
                                        () => { Console.WriteLine("deleniti"); return Task.CompletedTask; },
                                        "password",
                                        true,
                                        true,
                                        true,
                                        "officiis")]),
                                new AttributesDictionary(),
                                true,
                                "ut",
                                "repellat",
                                new GraphicOrigin(Guid.NewGuid(),
                                    "consectetur",
                                    2)),
                            true,
                            2125261.4296))"
                    WidgetId="@("aut")"
                    OnLocate="OnLocate"
                    OnLocateError="OnLocateError">
                    <Graphic 
                        Geometry="@(new Polygon([new MapPath([new MapPoint([945.9178,
                                    743.6618]),
                                new MapPoint([348.5739,
                                    463.2666])])],
                            new SpatialReference(4,
                                    "et",
                                    "eaque",
                                    "reiciendis"),
                            new Point(-5.0494,
                                    12.4838,
                                    -126.8857,
                                    -50.2281,
                                    399.4100,
                                new SpatialReference(4,
                                        "veniam",
                                        "perspiciatis",
                                        "et"),
                                    true,
                                    true,
                                    882.4469),
                                true,
                                true,
                                true))"
                        Symbol="@(new TextSymbol("ad et a",
                            new MapColor(95, 245, 59),
                            new MapColor(128, 199, 76),
                                new Dimension(760.2313),
                            new MapFont(new Dimension(779.6881),
                                    "Courier New",
                                MapFontStyle.Oblique,
                                FontWeight.Bolder,
                                TextDecoration.None),
                                701.6288,
                            new MapColor(235, 139, 141),
                            new MapColor(117, 141, 38),
                                46.3474,
                            HorizontalAlignment.Right,
                                true,
                                697.9119,
                                new Dimension(899.1164),
                                true))"
                        PopupTemplate="@(new PopupTemplate("non et ad",
                                "aspernatur",
                                ["voluptate"],
                            [new FieldInfo("token",
                                    "eos",
                                    "aut",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(6,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Max)],
                            [new MediaPopupContent("perferendis nam sint",
                                    "ex unde",
                                [new PieChartMediaInfo("velit temporibus quia",
                                        "et",
                                        "sunt non aut",
                                    new ChartMediaInfoValue(["quidem",
                                            "blanditiis"],
                                            "et",
                                            "ea",
                                        [new ChartMediaInfoValueSeries("avatar",
                                                "et",
                                                755.8175),
                                        new ChartMediaInfoValueSeries("id",
                                                "cum",
                                                40.3009)],
                                        [new MapColor(23, 3, 197),
                                        new MapColor(165, 134, 166)]))],
                                    5)],
                            [new ExpressionInfo("return $feature.Population / $feature.Area;",
                                    "password",
                                    "et deleniti iusto",
                                    ExpressionInfoReturnType.String)],
                                true,
                                true,
                                [new ActionButton("at quis voluptatem",
                                    "https://picsum.photos/640/480/?image=237",
                                    "a58a779b-c20b-1561-aa1c-6e915f18a19f",
                                    () => { Console.WriteLine("vero"); return Task.CompletedTask; },
                                    "createdAt",
                                    true,
                                    true,
                                    true,
                                    "eos")]))"
                        Attributes="@(new AttributesDictionary())"
                        Visible="@(true)"
                        LegendLabel="@("quae")"
                        AggregateGeometries="@("quam")"
                        Origin="@(new GraphicOrigin(Guid.NewGuid(),
                            "reprehenderit",
                            8))">
                    </Graphic>
                </LocateWidget>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(locateWidget!);
        await AssertJavaScript("dispatchEvent", args: [locateWidget!.Id, "locate"]);
        await AssertJavaScript("dispatchEvent", args: [locateWidget!.Id, "locate-error"]);
        int tries = 100;
        while (tries > 0 &&
            (locateResult is null || 
            locateErrorResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<LocateEvent>(locateResult);
        Assert.IsInstanceOfType<LocateErrorEvent>(locateErrorResult);
        await AssertJavaScript("assertWidgetExists", args: "locate");
        await locateWidget.CancelLocate();
        var locateMethodResult = await locateWidget.Locate();
        Assert.IsNotNull(locateMethodResult);
        Graphic testGraphic = new Graphic(new Point(-158.1709,
                        -57.7169,
                        -36.2906,
                        -2.3934,
                        566.4067,
                    new SpatialReference(4,
                            "corrupti",
                            "atque",
                            "neque"),
                        true,
                        true,
                        790.8059),
                new TextSymbol("similique tempora aut",
                    new MapColor(55, 175, 123),
                    new MapColor(63, 110, 148),
                        new Dimension(498.1802),
                    new MapFont(new Dimension(938.4859),
                            "Verdana",
                        MapFontStyle.Oblique,
                        FontWeight.Normal,
                        TextDecoration.LineThrough),
                        369.3525,
                    new MapColor(124, 220, 80),
                    new MapColor(170, 165, 175),
                        107.6808,
                    HorizontalAlignment.Right,
                        true,
                        603.6854,
                        new Dimension(807.6659),
                        true),
                new PopupTemplate("dolorem ratione totam",
                        "neque",
                        ["qui"],
                    [new FieldInfo("title",
                            "optio",
                            "quas",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(2,
                                true,
                            DateFormat.LongDateLongTime24),
                            true,
                            true,
                        StatisticType.Count),
                    new FieldInfo("status",
                            "et",
                            "vitae",
                        StringFieldOption.RichText,
                        new FieldInfoFormat(7,
                                true,
                            DateFormat.ShortDateLe),
                            true,
                            true,
                        StatisticType.Count)],
                    [new MediaPopupContent("veritatis eos reprehenderit",
                            "tenetur illo cum",
                        [new PieChartMediaInfo("nemo repudiandae sunt",
                                "vitae",
                                "quibusdam rerum ea",
                            new ChartMediaInfoValue(["aut"],
                                    "velit",
                                    "ipsam",
                                [new ChartMediaInfoValueSeries("token",
                                        "est",
                                        588.8822),
                                new ChartMediaInfoValueSeries("title",
                                        "aperiam",
                                        887.0895)],
                                [new MapColor(202, 176, 169)])),
                        new PieChartMediaInfo("in ut maiores",
                                "animi",
                                "ut optio inventore",
                            new ChartMediaInfoValue(["voluptate",
                                    "illo"],
                                    "qui",
                                    "temporibus",
                                [new ChartMediaInfoValueSeries("category",
                                        "maiores",
                                        157.4511),
                                new ChartMediaInfoValueSeries("name",
                                        "consequuntur",
                                        861.9968)],
                                [new MapColor(3, 93, 226),
                                new MapColor(189, 62, 15)]))],
                            8),
                    new RelationshipPopupContent("reiciendis eos sint",
                            "perspiciatis excepturi",
                            7,
                            "qui",
                        [new RelatedRecordsInfoFieldOrder("nam",
                            OrderBy.Asc)],
                            9)],
                    [new ExpressionInfo("var length = Geometry($feature).length; return length;",
                            "avatar",
                            "dolore accusamus aliquid",
                            ExpressionInfoReturnType.String)],
                        true,
                        true,
                        [new ActionButton("quaerat nam soluta",
                            "https://picsum.photos/640/480/?image=490",
                            "68df3348-6553-09af-d229-34c4e48dcae7",
                            () => { Console.WriteLine("quia"); return Task.CompletedTask; },
                            "email",
                            true,
                            true,
                            true,
                            "et")]),
                    new AttributesDictionary(),
                    true,
                    "enim",
                    "est",
                    new GraphicOrigin(Guid.NewGuid(),
                        "quisquam",
                        9));
        await locateWidget.SetGraphic(testGraphic);
        var graphic = await locateWidget.GetGraphic();
        Assert.AreEqual(testGraphic, graphic);
        LocateViewModel testViewModel = new LocateViewModel(new Error("email",
                    "exercitationem aut",
                    new { Value = "voluptas" }),
                    "eius",
                    true,
                new GoToOverride(),
                new Graphic(new Point(95.3057,
                            59.9119,
                            99.5213,
                            21.3158,
                            308.0025,
                        new SpatialReference(3,
                                "ut",
                                "fuga",
                                "expedita"),
                            true,
                            true,
                            683.2888),
                    new TextSymbol("aperiam sunt voluptatem",
                        new MapColor(105, 43, 185),
                        new MapColor(14, 222, 226),
                            new Dimension(535.7223),
                        new MapFont(new Dimension(942.8463),
                                "Georgia",
                            MapFontStyle.Italic,
                            FontWeight.Lighter,
                            TextDecoration.LineThrough),
                            283.0830,
                        new MapColor(168, 208, 94),
                        new MapColor(159, 76, 152),
                            238.0762,
                        HorizontalAlignment.Left,
                            true,
                            206.1537,
                            new Dimension(184.9705),
                            true),
                    new PopupTemplate("saepe et ut",
                            "sapiente",
                            ["inventore"],
                        [new FieldInfo("createdAt",
                                "qui",
                                "sint",
                            StringFieldOption.RichText,
                            new FieldInfoFormat(3,
                                    true,
                                DateFormat.ShortDate),
                                true,
                                true,
                            StatisticType.Avg),
                        new FieldInfo("title",
                                "laudantium",
                                "quam",
                            StringFieldOption.TextBox,
                            new FieldInfoFormat(9,
                                    true,
                                DateFormat.DayShortMonthYearShortTime),
                                true,
                                true,
                            StatisticType.Count)],
                        [new FieldsPopupContent([new FieldInfo("updatedAt",
                                    "error",
                                    "omnis",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(3,
                                        true,
                                    DateFormat.DayShortMonthYearShortTime24),
                                    true,
                                    true,
                                StatisticType.Var)],
                                "illum dolorum voluptatum",
                                "vel ipsam dolorem"),
                        new FieldsPopupContent([new FieldInfo("category",
                                    "possimus",
                                    "fugiat",
                                StringFieldOption.TextArea,
                                new FieldInfoFormat(8,
                                        true,
                                    DateFormat.LongMonthYear),
                                    true,
                                    true,
                                StatisticType.Var),
                            new FieldInfo("id",
                                    "inventore",
                                    "quo",
                                StringFieldOption.TextBox,
                                new FieldInfoFormat(4,
                                        true,
                                    DateFormat.LongDate),
                                    true,
                                    true,
                                StatisticType.Min)],
                                "omnis enim",
                                "enim ea dolorem")],
                        [new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                "phone",
                                "vel voluptas placeat",
                                ExpressionInfoReturnType.String),
                        new ExpressionInfo("return $feature.Population / $feature.Area;",
                                "avatar",
                                "corporis rerum distinctio",
                                ExpressionInfoReturnType.String)],
                            true,
                            true,
                            [new ActionButton("quo cum incidunt",
                                "https://picsum.photos/640/480/?image=1054",
                                "a618d224-c7ea-db01-a553-dca7e62b5b94",
                                () => { Console.WriteLine("rerum"); return Task.CompletedTask; },
                                "comment",
                                true,
                                true,
                                true,
                                "quae")]),
                        new AttributesDictionary(),
                        true,
                        "asperiores",
                        "assumenda",
                        new GraphicOrigin(Guid.NewGuid(),
                            "veniam",
                            8)),
                    true,
                    22436823.9608);
        await locateWidget.SetViewModel(testViewModel);
        var viewModel = await locateWidget.GetViewModel();
        Assert.AreEqual(testViewModel, viewModel);
    }
}
