@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {
    [TestMethod]
    public async Task TestCanRenderExpandWidgetWithWidgetContent(Action renderHandler)
    {
        LayerListWidget? layerList = null;
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">

                <Map>
        <Basemap>
            <BasemapStyle Name="BasemapStyleName.ArcgisImagery" />
        </Basemap>
    </Map>
                <ExpandWidget Position="OverlayPosition.TopLeft" Expanded="true" Mode="ExpandMode.Floating">
                    <LayerListWidget @ref="layerList" />
                </ExpandWidget>

            </MapView>);

        await WaitForMapToRender();
        await AssertJavaScript("assertWidgetExists", args: "esri.widgets.Expand");
        await AssertJavaScript("expandWidgetAsserts.assertContentByClassName", args: "esri-layer-list");
        Assert.IsNotNull(layerList);
    }
    
    [TestMethod]
    public async Task TestCanRenderExpandWidgetWithHtmlContent(Action renderHandler)
    {
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
    
                <Map>
        <Basemap>
            <BasemapStyle Name="BasemapStyleName.ArcgisImagery" />
        </Basemap>
    </Map>
                <ExpandWidget Position="OverlayPosition.TopLeft" Expanded="true" Mode="ExpandMode.Floating">
                    <button id="test-button" type="button">Click Me</button>
                </ExpandWidget>
    
            </MapView>);
    
        await WaitForMapToRender();
        await AssertJavaScript("assertWidgetExists", args: "esri.widgets.Expand");
        await AssertJavaScript("expandWidgetAsserts.assertContentById", args: "test-button");
    }
    
    [TestMethod]
    public async Task TestCanRenderExpandWidgetWithWidgetAfterHtmlContent(Action renderHandler)
    {
        LegendWidget? legend = null;
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">

                <Map>
        <Basemap>
            <BasemapStyle Name="BasemapStyleName.ArcgisImagery" />
        </Basemap>
    </Map>
                <ExpandWidget Position="OverlayPosition.TopLeft" Expanded="true" Mode="ExpandMode.Floating">
                    <button id="test-button-1" type="button">Click Me</button>
                    <LegendWidget @ref="legend" />
                </ExpandWidget>

            </MapView>);

        await WaitForMapToRender();
        await AssertJavaScript("assertWidgetExists", args: "esri.widgets.Expand");
        await AssertJavaScript("expandWidgetAsserts.assertContentByClassName", args: "esri-legend");
        await AssertJavaScript("expandWidgetAsserts.assertContentById", args: "test-button-1");
        await AssertJavaScript("expandWidgetAsserts.assertContentOrder", 
            args: new object[] {"test-button-1", $"widget-container-{legend!.Id}"});
        Assert.IsNotNull(legend);
    }
    
    [TestMethod]
    public async Task TestCanRenderExpandWidgetWithWidgetBeforeHtmlContent(Action renderHandler)
    {
        LegendWidget? legend = null;
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">

                <Map>
        <Basemap>
            <BasemapStyle Name="BasemapStyleName.ArcgisImagery" />
        </Basemap>
    </Map>
                <ExpandWidget Position="OverlayPosition.TopLeft" Expanded="true" Mode="ExpandMode.Floating">
                    <LegendWidget @ref="legend" />
                    <button id="test-button-2" type="button">Click Me</button>
                </ExpandWidget>

            </MapView>);

        await WaitForMapToRender();
        await AssertJavaScript("assertWidgetExists", args: "esri.widgets.Expand");
        await AssertJavaScript("expandWidgetAsserts.assertContentByClassName", args: "esri-legend");
        await AssertJavaScript("expandWidgetAsserts.assertContentById", args: "test-button-2");
        await AssertJavaScript("expandWidgetAsserts.assertContentOrder", 
            args: new object[] {$"widget-container-{legend!.Id}", "test-button-2"});
        Assert.IsNotNull(legend);
    }
}