@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedLayerListWidget(Action renderHandler)
    {
        LayerListWidget? layerListWidget = null;

        LayerListTriggerActionEvent? triggerActionResult = null;
        void OnTriggerAction(LayerListTriggerActionEvent result)
        {
            triggerActionResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                </Map>
                <LayerListWidget 
                    CatalogOptions="@(new LayerListCatalogOptions("rerum",
                        new CatalogLayerListListItemCreatedHandler(new { Value = "qui" },
                            default),
                            490.4793,
                            "eum",
                            "neque",
                        new LayerListCatalogOptionsVisibleElements(true,
                                true,
                                true,
                                true)))"
                    Collapsed="@(true)"
                    DragEnabled="@(true)"
                    FilterPlaceholder="@("cum")"
                    FilterText="@("aut facilis quibusdam")"
                    HeadingLevel="@(219.8772)"
                    Icon="@("nihil")"
                    KnowledgeGraphOptions="@(new LayerListKnowledgeGraphOptions("eveniet",
                        new TableListListItemCreatedHandler(new { Value = "quia" },
                            default),
                            466.8119,
                            "est",
                        new LayerListKnowledgeGraphOptionsVisibleElements(true,
                                true,
                                true)))"
                    Label="@("sapiente")"
                    ListItemCreatedFunction="@(new LayerListListItemCreatedHandler())"
                    MinDragEnabledItems="@(666.2314)"
                    MinFilterItems="@(202.6705)"
                    SelectionMode="@(SelectionMode.None)"
                    VisibilityAppearance="@(VisibilityAppearance.Checkbox)"
                    WidgetId="@("perferendis")"
                    OnTriggerAction="OnTriggerAction">
                    <LayerListVisibleElements 
                        CatalogLayerList="@(true)"
                        CloseButton="@(true)"
                        CollapseButton="@(true)"
                        Errors="@(true)"
                        Filter="@(true)"
                        Flow="@(true)"
                        Heading="@(true)"
                        StatusIndicators="@(true)"
                        TemporaryLayerIndicators="@(true)">
                    </LayerListVisibleElements>
                    <LayerListViewModel 
                        CheckPublishStatusEnabled="@(true)"
                        ListItemCreatedFunction="@(new LayerListListItemCreatedHandler())"
                        ListModeDisabled="@(true)">
                    </LayerListViewModel>
                    <ListItem 
                        ActionsOpen="@(true)"
                        ActionsSections="@(new ActionButton("quas voluptatem accusantium",
                            "https://picsum.photos/640/480/?image=320",
                            "1cc9b1ed-778a-2593-1f96-48d26e41ffdb",
                            () => { Console.WriteLine("harum"); return Task.CompletedTask; },
                            "name",
                            true,
                            true,
                            true,
                            "ducimus"))"
                        ChildrenSortable="@(true)"
                        Hidden="@(true)"
                        Layer="@(new WebTileLayer(BlendMode.Exclusion,
                                "odio",
                                new Effect("voluptas",
                                    13441608.3460),
                            new Extent(-105.7970,
                                    -153.8275,
                                    26.8113,
                                    -28.6056,
                                    78.3716,
                                    944.2435,
                                    405.0883,
                                    134.1290,
                                new SpatialReference(6,
                                        "a",
                                        "minima",
                                        "officia"),
                                    true,
                                    true),
                            ListMode.Show,
                                48851983.2436,
                                10580.7198,
                                0.2019,
                                true,
                            new PortalItem(),
                                763.1361,
                                ["alias"],
                            new TileInfo(175.3974,
                                    TileInfoFormat.Lerc,
                                    true,
                                [new LOD(1,
                                        "distinctio",
                                        81.4486,
                                        17610833.2236)],
                                new Point(62.8981,
                                        29.8480,
                                        165.7717,
                                        -17.4445,
                                        166.7946,
                                    new SpatialReference(7,
                                            "repudiandae",
                                            "vel",
                                            "autem"),
                                        true,
                                        true,
                                        742.8111),
                                    [1,
                                        9],
                                new SpatialReference(4,
                                        "iusto",
                                        "velit",
                                        "provident")),
                                "illo ut tenetur"))"
                        ListModeDisabled="@(true)"
                        Open="@(true)"
                        Sortable="@(true)"
                        Title="@("laboriosam est sed")">
                    </ListItem>
                </LayerListWidget>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(layerListWidget!);
        await AssertJavaScript("dispatchEvent", args: [layerListWidget!.Id, "trigger-action"]);
        int tries = 100;
        while (tries > 0 &&
            (triggerActionResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<LayerListTriggerActionEvent>(triggerActionResult);
        await AssertJavaScript("assertWidgetExists", args: "layer-list");
        await layerListWidget.TriggerAction(new ActionButton("eaque quae facere",
                "https://picsum.photos/640/480/?image=206",
                "0d6c0fa9-3b43-53a5-a59e-84b3cf4db736",
                () => { Console.WriteLine("debitis"); return Task.CompletedTask; },
                "group",
                true,
                true,
                true,
                "debitis"),
            new ListItem(true,
                    new ActionButton("eveniet quam iste",
                        "https://picsum.photos/640/480/?image=983",
                        "663fdf3a-794a-ef8c-da1e-929c7d017c02",
                        () => { Console.WriteLine("placeat"); return Task.CompletedTask; },
                        "id",
                        true,
                        true,
                        true,
                        "dolore"),
                    true,
                    true,
                new WCSLayer("https://sampleserver6.arcgisonline.com/arcgis/services/ScientificData/SeaTemperature/ImageServer/WCSServer",
                    [new DimensionalDefinition("title",
                            true,
                            "phone"),
                    new DimensionalDefinition("status",
                            true,
                            "id")],
                        new RasterStretchRenderer(new AlgorithmicColorRamp(Algorithm.CieLab,
                                new MapColor(23, 162, 136),
                                new MapColor(229, 106, 10)),
                            true,
                            true,
                            [9,
                            6],
                            9,
                            6,
                            StretchType.StandardDeviation,
                            [new RasterBandStatistics(912.0112,
                                4,
                                600.8327,
                                552.3802,
                                934.2865,
                                186.0287,
                                440.3718,
                                907.5276)],
                            true,
                            6),
                        0.4312,
                        "est repellendus dicta",
                    new PortalItem(),
                        [3,
                            9],
                    BlendMode.ColorBurn,
                        "qui",
                        "id",
                    new CoverageInfo(["updatedAt"],
                        new CoverageDescriptionV100("aliquid rerum",
                            new CoverageDescriptionV100DomainSet(new CoverageDescriptionV100DomainSetSpatialDomain(834.8065,
                                    new Extent(-111.5301,
                                            50.1197,
                                            -42.2619,
                                            -54.1361,
                                            749.4962,
                                            875.7049,
                                            812.7039,
                                            253.2918,
                                        new SpatialReference(8,
                                                "ut",
                                                "earum",
                                                "cum"),
                                            true,
                                            true),
                                    new CoverageDescriptionV100DomainSetSpatialDomainOffset(28.4926,
                                            "saepe"),
                                    new CoverageDescriptionV100DomainSetSpatialDomainOrigin(68.2559,
                                            "possimus"),
                                        5.7044),
                                new TemporalDomain(new DateTime(2002, 7, 6, 19, 55, 17),
                                        new DateTime(2007, 7, 5, 1, 44, 41),
                                        34.6413,
                                        "numquam",
                                        [new DateTime(2019, 8, 11, 16, 27, 55)])),
                                "voluptatem",
                            new Extent(-164.1963,
                                    94.9926,
                                    2.5066,
                                    -27.9408,
                                    404.8350,
                                    769.4155,
                                    374.2626,
                                    982.0535,
                                new SpatialReference(3,
                                        "inventore",
                                        "nihil",
                                        "sed"),
                                    true,
                                    true),
                                "password",
                            [new CoverageDescriptionV100RangeSet([new CoverageDescriptionV100RangeSetAxis("facere",
                                        "status",
                                        ["optio"])],
                                    "deserunt",
                                    "password",
                                    [318.4202,
                                        95.5841]),
                            new CoverageDescriptionV100RangeSet([new CoverageDescriptionV100RangeSetAxis("architecto",
                                        "email",
                                        ["dolor",
                                            "ullam"]),
                                new CoverageDescriptionV100RangeSetAxis("velit",
                                        "email",
                                        ["amet",
                                            "exercitationem"])],
                                    "sunt",
                                    "phone",
                                    [310.7073,
                                        632.9513])],
                            new CoverageDescriptionV100SupportedCRSs(["non",
                                    "unde"],
                                    ["molestias"]),
                                ["iusto"],
                                ["cupiditate"],
                                "9.4.1.1"),
                            "enim",
                            "sequi qui et",
                        new Extent(-143.2735,
                                20.2658,
                                23.8781,
                                31.0376,
                                199.6954,
                                287.5720,
                                377.7974,
                                550.9451,
                            new SpatialReference(3,
                                    "non",
                                    "quis",
                                    "expedita"),
                                true,
                                true),
                        new RasterInfo(new FeatureSet("status",
                                    true,
                                [new Graphic(new Polyline([new MapPath([new MapPoint([841.1180,
                                                498.2778]),
                                            new MapPoint([507.9506])]),
                                            new MapPath([new MapPoint([911.9731]),
                                                new MapPoint([986.7437,
                                                    736.2241])])],
                                        new SpatialReference(5,
                                                "quae",
                                                "recusandae",
                                                "quo"),
                                            true,
                                            true),
                                    new TextSymbol("aut reprehenderit consequatur",
                                        new MapColor(250, 219, 141),
                                        new MapColor(121, 57, 183),
                                            new Dimension(979.6373),
                                        new MapFont(new Dimension(741.8837),
                                                "Palatino",
                                            MapFontStyle.Oblique,
                                            FontWeight.Bold,
                                            TextDecoration.Underline),
                                            794.8520,
                                        new MapColor(242, 217, 129),
                                        new MapColor(165, 181, 108),
                                            824.0809,
                                        HorizontalAlignment.Right,
                                            true,
                                            538.8750,
                                            new Dimension(671.0808),
                                            true),
                                    new PopupTemplate("voluptatibus earum incidunt",
                                            "rem",
                                            ["corrupti"],
                                        [new FieldInfo("comment",
                                                "ab",
                                                "dolore",
                                            StringFieldOption.RichText,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.LongMonthDayYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg),
                                        new FieldInfo("createdAt",
                                                "commodi",
                                                "et",
                                            StringFieldOption.TextArea,
                                            new FieldInfoFormat(2,
                                                    true,
                                                DateFormat.DayShortMonthYearShortTime),
                                                true,
                                                true,
                                            StatisticType.Avg)],
                                        [new RelationshipPopupContent("accusamus corporis voluptate",
                                                "neque repellat",
                                                5,
                                                "autem",
                                            [new RelatedRecordsInfoFieldOrder("sed",
                                                OrderBy.Asc)],
                                                8)],
                                        [new ExpressionInfo("var area = Geometry($feature).area; return area;",
                                                "category",
                                                "sit laborum porro",
                                                ExpressionInfoReturnType.String),
                                        new ExpressionInfo("return $feature.City + ', ' + $feature.Country;",
                                                "status",
                                                "sapiente eos id",
                                                ExpressionInfoReturnType.String)],
                                            true,
                                            true,
                                            [new ActionButton("dolores voluptates ab",
                                                "https://picsum.photos/640/480/?image=437",
                                                "123fa714-c0cb-f412-49cc-4c99bdf6fa35",
                                                () => { Console.WriteLine("sed"); return Task.CompletedTask; },
                                                "group",
                                                true,
                                                true,
                                                true,
                                                "ipsa"),
                                                new ActionButton("omnis aperiam in",
                                                    "https://picsum.photos/640/480/?image=1049",
                                                    "f643fa41-b325-f150-40cc-5d5f8187367c",
                                                    () => { Console.WriteLine("et"); return Task.CompletedTask; },
                                                    "updatedAt",
                                                    true,
                                                    true,
                                                    true,
                                                    "commodi")]),
                                        new AttributesDictionary(),
                                        true,
                                        "facilis",
                                        "dolores",
                                        new GraphicOrigin(Guid.NewGuid(),
                                            "nemo",
                                            5))],
                                [new Field(default,
                                        "id",
                                        "omnis",
                                        "non fugit ipsum",
                                        7,
                                        true,
                                        true,
                                        new { Value = "ea" },
                                    FieldValueType.LocationOrPlaceName,
                                    new InheritedDomain("password")),
                                new Field(default,
                                        "updatedAt",
                                        "aperiam",
                                        "nobis harum vel",
                                        5,
                                        true,
                                        true,
                                        new { Value = "eveniet" },
                                    FieldValueType.Description,
                                    new RangeDomain("eum",
                                            "qui",
                                            "updatedAt"))],
                                GeometryType.Point,
                                new Extent(76.8373,
                                        -31.6948,
                                        33.7457,
                                        39.2083,
                                        701.6651,
                                        333.8590,
                                        892.8652,
                                        174.6561,
                                    new SpatialReference(6,
                                            "tempore",
                                            "totam",
                                            "culpa"),
                                        true,
                                        true),
                                new SpatialReference(4,
                                        "sit",
                                        "reiciendis",
                                        "rerum")),
                                5,
                            [new RasterBandInfo(972.3217,
                                    337.0201,
                                    "phone",
                                    861.2819,
                                    897.3695,
                                    370.1192,
                                    249.4037,
                                    319.5690)],
                                [new ColormapPixel(722.6602,
                                    27.4820,
                                    957.5258,
                                    979.9200),
                                    new ColormapPixel(606.6742,
                                        645.4937,
                                        397.2509,
                                        912.6921)],
                            DataType.VectorMagdir,
                            new Extent(-141.0871,
                                    -101.3148,
                                    36.5894,
                                    49.5781,
                                    954.1938,
                                    820.9275,
                                    274.5279,
                                    224.2888,
                                new SpatialReference(8,
                                        "et",
                                        "porro",
                                        "ullam"),
                                    true,
                                    true),
                                true,
                                5,
                                ["est"],
                                "assumenda",
                            new RasterMultidimensionalInfo([new RasterMultidimensionalInfoVariables("explicabo facere",
                                    [new RasterMultidimensionalInfoVariablesDimensions("sed facilis laborum",
                                            [814.4843,
                                                449.5483],
                                            true,
                                            490.7841,
                                            "distinctio",
                                            "avatar",
                                            "quo",
                                            [222.7235]),
                                    new RasterMultidimensionalInfoVariablesDimensions("qui illo",
                                            [850.5557],
                                            true,
                                            939.8202,
                                            "eos",
                                            "phone",
                                            "ipsam",
                                            [940.4462])],
                                    [new RasterHistogram([347.6243,
                                            431.8360],
                                            [9,
                                                6],
                                            722.1667,
                                            461.7659,
                                            1),
                                    new RasterHistogram([195.6421,
                                            843.5718],
                                            [2],
                                            476.6501,
                                            543.8228,
                                            2)],
                                        "email",
                                    [new RasterBandStatistics(642.6936,
                                            3,
                                            43.0734,
                                            493.3350,
                                            75.0185,
                                            529.8303,
                                            591.0436,
                                            984.9498)],
                                        "recusandae"),
                                new RasterMultidimensionalInfoVariables("sit quis accusantium aliquid",
                                    [new RasterMultidimensionalInfoVariablesDimensions("iusto maiores laudantium",
                                            [56.1270,
                                                285.9909],
                                            true,
                                            838.5468,
                                            "saepe",
                                            "token",
                                            "saepe",
                                            [507.7123]),
                                    new RasterMultidimensionalInfoVariablesDimensions("cupiditate mollitia molestiae et",
                                            [986.0040],
                                            true,
                                            53.2542,
                                            "velit",
                                            "email",
                                            "et",
                                            [662.9097,
                                                979.7501])],
                                    [new RasterHistogram([74.1979,
                                            278.1928],
                                            [1,
                                                4],
                                            88.1903,
                                            12.1164,
                                            4),
                                    new RasterHistogram([778.1344,
                                            707.7045],
                                            [8,
                                                5],
                                            115.8543,
                                            264.4425,
                                            7)],
                                        "status",
                                    [new RasterBandStatistics(465.8018,
                                            7,
                                            169.5109,
                                            590.0208,
                                            734.1263,
                                            693.4538,
                                            643.0255,
                                            412.8865),
                                    new RasterBandStatistics(137.0019,
                                            9,
                                            332.4432,
                                            809.0480,
                                            486.8877,
                                            766.1828,
                                            605.9229,
                                            130.5105)],
                                        "sapiente")]),
                            new RasterInfoPixelSize(-10.4506,
                                    28.6223),
                            PixelType.F32,
                            new RasterSensorInfo(new DateTime(2003, 1, 1, 22, 12, 58),
                                    919.2937,
                                    "updatedAt",
                                    109.8933,
                                    695.3748,
                                    "title",
                                    209.6644,
                                    322.9698)),
                            ["nihil"],
                        [SupportedInterpolations.Bilinear],
                            "magnam delectus minus",
                            true,
                        CoverageInfoVersion.One_1_1),
                        default,
                        new Effect("dolor",
                            28582098.8928),
                    new Extent(158.9068,
                            -41.9901,
                            -6.8572,
                            -82.5405,
                            388.5024,
                            409.3198,
                            106.2889,
                            337.6746,
                        new SpatialReference(6,
                                "consequatur",
                                "similique",
                                "consectetur"),
                            true,
                            true)),
                    true,
                    true,
                    true,
                    "rerum vitae ut"));
        LayerListCatalogOptions testCatalogOptions = new LayerListCatalogOptions("tempore",
                new CatalogLayerListListItemCreatedHandler(new { Value = "omnis" },
                    default),
                    936.1572,
                    "dolorem",
                    "quia",
                new LayerListCatalogOptionsVisibleElements(true,
                        true,
                        true,
                        true));
        await layerListWidget.SetCatalogOptions(testCatalogOptions);
        var catalogOptions = await layerListWidget.GetCatalogOptions();
        Assert.AreEqual(testCatalogOptions, catalogOptions);
        LayerListKnowledgeGraphOptions testKnowledgeGraphOptions = new LayerListKnowledgeGraphOptions("cum",
                new TableListListItemCreatedHandler(new { Value = "quam" },
                    default),
                    57.6027,
                    "officia",
                new LayerListKnowledgeGraphOptionsVisibleElements(true,
                        true,
                        true));
        await layerListWidget.SetKnowledgeGraphOptions(testKnowledgeGraphOptions);
        var knowledgeGraphOptions = await layerListWidget.GetKnowledgeGraphOptions();
        Assert.AreEqual(testKnowledgeGraphOptions, knowledgeGraphOptions);
        IReadOnlyList<ListItem> testSelectedItems = [new ListItem(true,
                    new ActionButton("velit ex eum",
                        "https://picsum.photos/640/480/?image=585",
                        "970b6a5d-9cdb-e7b5-a86b-1535be7d9120",
                        () => { Console.WriteLine("modi"); return Task.CompletedTask; },
                        "title",
                        true,
                        true,
                        true,
                        "modi"),
                    true,
                    true,
                new BaseTileLayer(BlendMode.SourceAtop,
                        new Effect("rerum",
                            45051305.3243),
                        48098491.4714,
                        30829.5281,
                        707.7649,
                    new SpatialReference(3,
                            "facere",
                            "nobis",
                            "omnis"),
                    new Extent(-109.5713,
                            111.4427,
                            -3.1900,
                            3.4081,
                            744.8788,
                            726.8775,
                            326.8011,
                            653.6996,
                        new SpatialReference(3,
                                "perspiciatis",
                                "numquam",
                                "praesentium"),
                            true,
                            true),
                    ListMode.Hide,
                        0.1462,
                        true,
                    new TileInfo(506.1844,
                            TileInfoFormat.Jpg,
                            true,
                        [new LOD(6,
                                "ex",
                                27.0159,
                                4562930.6453)],
                        new Point(-35.1121,
                                82.0836,
                                39.9415,
                                -19.5885,
                                499.8027,
                            new SpatialReference(9,
                                    "expedita",
                                    "quis",
                                    "ea"),
                                true,
                                true,
                                30.6533),
                            [6,
                                3],
                        new SpatialReference(7,
                                "velit",
                                "sit",
                                "laboriosam")),
                        "dolor enim itaque",
                    new TimeExtent(new DateTime(2000, 10, 23, 7, 56, 57),
                            new DateTime(2004, 10, 7, 22, 27, 10))),
                    true,
                    true,
                    true,
                    "soluta voluptatem et")];
        await layerListWidget.SetSelectedItems(testSelectedItems);
        var selectedItems = await layerListWidget.GetSelectedItems();
        Assert.AreEqual(testSelectedItems, selectedItems);
        SelectionMode testSelectionMode = SelectionMode.None;
        await layerListWidget.SetSelectionMode(testSelectionMode);
        var selectionMode = await layerListWidget.GetSelectionMode();
        Assert.AreEqual(testSelectionMode, selectionMode);
        LayerListViewModel testViewModel = new LayerListViewModel(true,
                new LayerListListItemCreatedHandler(),
                    true);
        await layerListWidget.SetViewModel(testViewModel);
        var viewModel = await layerListWidget.GetViewModel();
        Assert.AreEqual(testViewModel, viewModel);
        VisibilityAppearance testVisibilityAppearance = VisibilityAppearance.Default;
        await layerListWidget.SetVisibilityAppearance(testVisibilityAppearance);
        var visibilityAppearance = await layerListWidget.GetVisibilityAppearance();
        Assert.AreEqual(testVisibilityAppearance, visibilityAppearance);
        LayerListVisibleElements testVisibleElements = new LayerListVisibleElements(true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true);
        await layerListWidget.SetVisibleElements(testVisibleElements);
        var visibleElements = await layerListWidget.GetVisibleElements();
        Assert.AreEqual(testVisibleElements, visibleElements);
    }
}
