@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderGeneratedLayerListWidget(Action renderHandler)
    {
        LayerListWidget? layerListWidget = null;

        LayerListTriggerActionEvent? triggerActionResult = null;
        void OnTriggerAction(LayerListTriggerActionEvent result)
        {
            triggerActionResult = result;
        }
        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                </Map>
                <LayerListWidget 
                    CatalogOptions="@(new LayerListCatalogOptions("illum",
                        new CatalogLayerListListItemCreatedHandler(),
                            83.4592,
                            "dignissimos",
                            "est",
                        new LayerListCatalogOptionsVisibleElements(true,
                                true,
                                true,
                                true)))"
                    Collapsed="@(true)"
                    DragEnabled="@(true)"
                    FilterPlaceholder="@("dolore")"
                    FilterText="@("iusto quos voluptatibus")"
                    HeadingLevel="@(566.0848)"
                    Icon="@("quia")"
                    KnowledgeGraphOptions="@(new LayerListKnowledgeGraphOptions("fuga",
                        new TableListListItemCreatedHandler(new { Value = "nobis" },
                            default),
                            695.0791,
                            "ut",
                        new LayerListKnowledgeGraphOptionsVisibleElements(true,
                                true,
                                true)))"
                    Label="@("similique")"
                    ListItemCreatedFunction="@(new LayerListListItemCreatedHandler())"
                    MinDragEnabledItems="@(704.5952)"
                    MinFilterItems="@(598.9574)"
                    SelectionMode="@(SelectionMode.SinglePersist)"
                    VisibilityAppearance="@(VisibilityAppearance.Default)"
                    WidgetId="@("eaque")"
                    OnTriggerAction="OnTriggerAction">
                    <LayerListVisibleElements 
                        CatalogLayerList="@(true)"
                        CloseButton="@(true)"
                        CollapseButton="@(true)"
                        Errors="@(true)"
                        Filter="@(true)"
                        Flow="@(true)"
                        Heading="@(true)"
                        StatusIndicators="@(true)"
                        TemporaryLayerIndicators="@(true)">
                    </LayerListVisibleElements>
                    <LayerListViewModel 
                        CheckPublishStatusEnabled="@(true)"
                        ListItemCreatedFunction="@(new LayerListListItemCreatedHandler())"
                        ListModeDisabled="@(true)">
                    </LayerListViewModel>
                    <ListItem 
                        ActionsOpen="@(true)"
                        ActionsSections="@(new ActionButton("fuga id odit",
                            "https://picsum.photos/640/480/?image=811",
                            "e99132fa-f8b6-1d69-2cb1-2f2c2b6f2c30",
                            () => { Console.WriteLine("ullam"); return Task.CompletedTask; },
                            "group",
                            true,
                            true,
                            true,
                            "dolores"))"
                        ChildrenSortable="@(true)"
                        Hidden="@(true)"
                        Layer="@(new TileLayer("excepturi",
                            BlendMode.Average,
                                "deleniti",
                                default,
                                new Effect("labore",
                                    46643593.9540),
                            new Extent(-45.7682,
                                    152.6868,
                                    24.2675,
                                    -16.9812,
                                    362.2399,
                                    605.5115,
                                    493.9748,
                                    826.2760,
                                new SpatialReference(7,
                                        "recusandae",
                                        "dolorem",
                                        "recusandae"),
                                    true,
                                    true),
                                true,
                            ListMode.Hide,
                                42370155.6871,
                                49438.9615,
                                0.0671,
                                true,
                            new PortalItem(),
                                621.0880))"
                        ListModeDisabled="@(true)"
                        Open="@(true)"
                        Sortable="@(true)"
                        Title="@("maiores mollitia enim")">
                    </ListItem>
                </LayerListWidget>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(layerListWidget!);
        await AssertJavaScript("dispatchEvent", args: [layerListWidget!.Id, "trigger-action"]);
        int tries = 100;
        while (tries > 0 &&
            (triggerActionResult is null))
        {
            await Task.Delay(100);
            tries--;
        }
        Assert.IsInstanceOfType<LayerListTriggerActionEvent>(triggerActionResult);
        await AssertJavaScript("assertWidgetExists", args: "layer-list");
        await layerListWidget.TriggerAction(new ActionButton("pariatur voluptas qui",
                "https://picsum.photos/640/480/?image=899",
                "d9bff20f-df14-b059-a94b-39e07866ab80",
                () => { Console.WriteLine("ullam"); return Task.CompletedTask; },
                "password",
                true,
                true,
                true,
                "repellendus"),
            new ListItem(true,
                    new ActionButton("tempora modi neque",
                        "https://picsum.photos/640/480/?image=383",
                        "6ed3f72d-511d-0801-ab3d-ed8736188c60",
                        () => { Console.WriteLine("vero"); return Task.CompletedTask; },
                        "title",
                        true,
                        true,
                        true,
                        "hic"),
                    true,
                    true,
                new ImageryTileLayer("https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer",
                    new PortalItem(),
                        new RasterStretchRenderer(new AlgorithmicColorRamp(Algorithm.CieLab,
                                new MapColor(6, 233, 228),
                                new MapColor(250, 127, 231)),
                            true,
                            true,
                            [6],
                            4,
                            8,
                            StretchType.None,
                            [new RasterBandStatistics(425.4756,
                                8,
                                931.7471,
                                240.8337,
                                247.6614,
                                96.8966,
                                468.0536,
                                58.0361),
                            new RasterBandStatistics(307.4597,
                                7,
                                319.3422,
                                553.9747,
                                339.2090,
                                737.7972,
                                443.6285,
                                305.0705)],
                            true,
                            8),
                        [7],
                    BlendMode.Average,
                        "voluptatem",
                        new Effect("ipsum",
                            26226617.5309),
                        PixelInterpolation.Bilinear,
                        true,
                    ListMode.Show,
                        37426243.2746,
                        28065.8022,
                    [new DimensionalDefinition("phone",
                            true,
                            "title"),
                    new DimensionalDefinition("createdAt",
                            true,
                            "password")],
                    new MultidimensionalSubset(new Polygon([new MapPath([new MapPoint([164.9785,
                                    620.2737])])],
                            new SpatialReference(3,
                                    "cupiditate",
                                    "molestiae",
                                    "voluptas"),
                            new Point(49.1735,
                                    1.5475,
                                    -73.9918,
                                    -7.8176,
                                    784.5490,
                                new SpatialReference(4,
                                        "soluta",
                                        "est",
                                        "nihil"),
                                    true,
                                    true,
                                    924.6942),
                                true,
                                true,
                                true),
                        [new DimensionalDefinition("avatar",
                                true,
                                "id")])),
                    true,
                    true,
                    true,
                    "ut repudiandae distinctio"));
        LayerListCatalogOptions testCatalogOptions = new LayerListCatalogOptions("ut",
                new CatalogLayerListListItemCreatedHandler(),
                    262.8314,
                    "reprehenderit",
                    "repellendus",
                new LayerListCatalogOptionsVisibleElements(true,
                        true,
                        true,
                        true));
        await layerListWidget.SetCatalogOptions(testCatalogOptions);
        var catalogOptions = await layerListWidget.GetCatalogOptions();
        Assert.AreEqual(testCatalogOptions, catalogOptions);
        LayerListKnowledgeGraphOptions testKnowledgeGraphOptions = new LayerListKnowledgeGraphOptions("voluptas",
                new TableListListItemCreatedHandler(new { Value = "repellat" },
                    default),
                    271.4626,
                    "necessitatibus",
                new LayerListKnowledgeGraphOptionsVisibleElements(true,
                        true,
                        true));
        await layerListWidget.SetKnowledgeGraphOptions(testKnowledgeGraphOptions);
        var knowledgeGraphOptions = await layerListWidget.GetKnowledgeGraphOptions();
        Assert.AreEqual(testKnowledgeGraphOptions, knowledgeGraphOptions);
        IReadOnlyList<ListItem> testSelectedItems = [new ListItem(true,
                    new ActionButton("est maxime eveniet",
                        "https://picsum.photos/640/480/?image=1066",
                        "9719e31e-b5e5-dab1-8e8b-eec6ef03bbbd",
                        () => { Console.WriteLine("corporis"); return Task.CompletedTask; },
                        "id",
                        true,
                        true,
                        true,
                        "debitis"),
                    true,
                    true,
                new TileLayer("tempora",
                    BlendMode.DestinationAtop,
                        "ex",
                        default,
                        new Effect("odit",
                            42881563.7606),
                    new Extent(-160.1638,
                            65.5367,
                            49.0073,
                            51.5082,
                            461.6985,
                            295.6865,
                            335.7956,
                            123.5401,
                        new SpatialReference(7,
                                "repellendus",
                                "similique",
                                "sed"),
                            true,
                            true),
                        true,
                    ListMode.Show,
                        48370485.0239,
                        10177.9623,
                        0.9579,
                        true,
                    new PortalItem(),
                        470.4541),
                    true,
                    true,
                    true,
                    "nesciunt qui laboriosam")];
        await layerListWidget.SetSelectedItems(testSelectedItems);
        var selectedItems = await layerListWidget.GetSelectedItems();
        Assert.AreEqual(testSelectedItems, selectedItems);
        SelectionMode testSelectionMode = SelectionMode.Multiple;
        await layerListWidget.SetSelectionMode(testSelectionMode);
        var selectionMode = await layerListWidget.GetSelectionMode();
        Assert.AreEqual(testSelectionMode, selectionMode);
        LayerListViewModel testViewModel = new LayerListViewModel(true,
                new LayerListListItemCreatedHandler(),
                    true);
        await layerListWidget.SetViewModel(testViewModel);
        var viewModel = await layerListWidget.GetViewModel();
        Assert.AreEqual(testViewModel, viewModel);
        VisibilityAppearance testVisibilityAppearance = VisibilityAppearance.Checkbox;
        await layerListWidget.SetVisibilityAppearance(testVisibilityAppearance);
        var visibilityAppearance = await layerListWidget.GetVisibilityAppearance();
        Assert.AreEqual(testVisibilityAppearance, visibilityAppearance);
        LayerListVisibleElements testVisibleElements = new LayerListVisibleElements(true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true);
        await layerListWidget.SetVisibleElements(testVisibleElements);
        var visibleElements = await layerListWidget.GetVisibleElements();
        Assert.AreEqual(testVisibleElements, visibleElements);
    }
}
