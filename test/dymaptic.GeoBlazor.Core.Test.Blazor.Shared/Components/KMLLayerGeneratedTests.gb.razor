@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderKMLLayer(Action renderHandler)
    {
        KMLLayer? kMLLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <KMLLayer 
                        Url="@("https://earthquake.usgs.gov/fdsnws/event/1/query?format=kml&minmagnitude=5.8")"
                        BlendMode="@(BlendMode.SourceOut)"
                        Effect="@(new Effect("voluptates",
                            31341193.5209))"
                        FullExtent="@(new Extent(54.1039,
                                -90.3640,
                                -11.5197,
                                -23.6304,
                                886.0879,
                                104.3569,
                                352.0458,
                                973.6227,
                            new SpatialReference(1,
                                    "eos",
                                    "aut",
                                    "et"),
                                true,
                                true))"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(29482181.9979)"
                        MinScale="@(15757.2789)"
                        Opacity="@(0.9888)"
                        PersistenceEnabled="@(true)"
                        Title="@("iure quia et")">
                        <TimeExtent 
                            Start="@(new DateTime(2016, 5, 7, 13, 31, 34))"
                            End="@(new DateTime(2018, 7, 14, 3, 44, 22))">
                        </TimeExtent>
                        <KMLSublayer 
                            Description="@("ipsum consequatur totam ea enim")"
                            KMLSublayerId="@(5)"
                            NetworkLink="@("dolorem")"
                            Title="@("est iste suscipit")">
                        </KMLSublayer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Shared)"
                            AccessInformation="@("omnis")"
                            ApiKey="@("voluptas")"
                            AvgRating="@(481.8160)"
                            Categories="@(["occaecati",
                                "nostrum",
                                "occaecati"])"
                            Created="@(new DateTime(2016, 11, 17, 10, 20, 18))"
                            Culture="@("omnis")"
                            Description="@("doloribus labore quia iusto autem")"
                            Extent="@(new Extent(29.1177,
                                    15.1078,
                                    79.1918,
                                    33.5471,
                                    438.6018,
                                    986.3084,
                                    790.1246,
                                    726.1859,
                                new SpatialReference(2,
                                        "hic",
                                        "et",
                                        "fugit"),
                                    true,
                                    true))"
                            GroupCategories="@(["aspernatur",
                                "facilis"])"
                            LicenseInfo="@("sunt")"
                            Modified="@(new DateTime(2000, 8, 3, 8, 1, 19))"
                            Name="@("comment")"
                            NumComments="@(283.7557)"
                            NumRatings="@(888.1612)"
                            NumViews="@(925.3059)"
                            Owner="@("Conrad Gaylord")"
                            OwnerFolder="@("Cayla Cummerata")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Immediate,
                                    ["quae",
                                        "vel",
                                        "quae"],
                                    "doloremque",
                                    "quibusdam",
                                    "voluptas",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("dicta")"
                            Screenshots="@(["dolorem",
                                "fugiat",
                                "autem"])"
                            Size="@(3)"
                            Snippet="@("veniam")"
                            Tags="@(["illo",
                                "accusamus",
                                "ex"])"
                            Title="@("consequatur et perferendis")"
                            TypeKeywords="@(["sed",
                                "rerum"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/IncidentsReport/FeatureServer/0")">
                        </PortalItem>
                    </KMLLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(kMLLayer!);
        await AssertJavaScript("assertLayerExists", args: "kml");
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "consequatur",
                    "dolores",
                    563.1980,
                    ["amet",
                        "tenetur",
                        "et"],
                    new DateTime(2011, 1, 16, 10, 3, 9),
                    "nisi",
                    "laboriosam qui sint laborum",
                new Extent(-32.7118,
                        -126.0769,
                        -14.1155,
                        80.9088,
                        714.8296,
                        953.3954,
                        854.2144,
                        623.8415,
                    new SpatialReference(5,
                            "nam",
                            "impedit",
                            "repellendus"),
                        true,
                        true),
                    ["iure",
                        "quas"],
                    "aut",
                    new DateTime(2006, 7, 21, 15, 54, 34),
                    "avatar",
                    229.4273);
        await kMLLayer.SetPortalItem(testPortalItem);
        var portalItem = await kMLLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Minus;
        await kMLLayer.SetBlendMode(testBlendMode);
        var blendMode = await kMLLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(-19.8021,
                    169.4640,
                    76.0479,
                    -62.8454,
                    718.9650,
                    844.0266,
                    188.6693,
                    736.9983,
                new SpatialReference(2,
                        "vero",
                        "quos",
                        "vel"),
                    true,
                    true);
        await kMLLayer.SetFullExtent(testFullExtent);
        var fullExtent = await kMLLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await kMLLayer.SetListMode(testListMode);
        var listMode = await kMLLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        IReadOnlyList<KMLSublayer> testSublayers = [new KMLSublayer("est repellat maiores eius et omnis nulla",
                    1,
                    "nisi",
                    "explicabo id eum"),
            new KMLSublayer("ea autem sit autem vitae occaecati et",
                    2,
                    "tenetur",
                    "soluta consequatur nihil")];
        await kMLLayer.SetSublayers(testSublayers);
        var sublayers = await kMLLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2019, 3, 7, 6, 15, 35),
                    new DateTime(2018, 7, 1, 18, 19, 4));
        await kMLLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await kMLLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
