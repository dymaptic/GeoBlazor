@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderKMLLayer(Action renderHandler)
    {
        KMLLayer? kMLLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <KMLLayer 
                        Url="@("https://earthquake.usgs.gov/fdsnws/event/1/query?format=kml&minmagnitude=5.8")"
                        BlendMode="@(BlendMode.Average)"
                        Effect="@(new Effect("suscipit",
                            4732716.8909))"
                        FullExtent="@(new Extent(-113.9642,
                                -46.4022,
                                43.2142,
                                44.9112,
                                916.8289,
                                849.2054,
                                209.2535,
                                325.3024,
                            new SpatialReference(1,
                                    "dolorum",
                                    "excepturi",
                                    "et"),
                                true,
                                true))"
                        ListMode="@(ListMode.Hide)"
                        MaxScale="@(28203652.5409)"
                        MinScale="@(27247.4288)"
                        Opacity="@(0.6605)"
                        PersistenceEnabled="@(true)"
                        Title="@("sunt sapiente ipsam")">
                        <TimeExtent 
                            Start="@(new DateTime(2001, 5, 19, 7, 2, 32))"
                            End="@(new DateTime(2009, 6, 26, 4, 37, 0))">
                        </TimeExtent>
                        <KMLSublayer 
                            Description="@("quaerat repellat est maiores")"
                            KMLSublayerId="@(9)"
                            NetworkLink="@("quis")"
                            Title="@("quod est voluptas")">
                        </KMLSublayer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("consequatur")"
                            ApiKey="@("iusto")"
                            AvgRating="@(871.3277)"
                            Categories="@(["sequi",
                                "impedit",
                                "et",
                                "odit"])"
                            Created="@(new DateTime(2011, 9, 27, 19, 44, 21))"
                            Culture="@("accusamus")"
                            Description="@("temporibus amet cum excepturi quia")"
                            Extent="@(new Extent(-48.7073,
                                    38.8873,
                                    15.1549,
                                    -72.4278,
                                    125.7950,
                                    672.5579,
                                    737.1840,
                                    10.7802,
                                new SpatialReference(2,
                                        "molestias",
                                        "aperiam",
                                        "aliquam"),
                                    true,
                                    true))"
                            GroupCategories="@(["nulla",
                                "ipsum",
                                "non",
                                "fugiat"])"
                            LicenseInfo="@("labore")"
                            Modified="@(new DateTime(2023, 4, 12, 21, 33, 28))"
                            Name="@("category")"
                            NumComments="@(20.4346)"
                            NumRatings="@(68.6983)"
                            NumViews="@(451.5372)"
                            Owner="@("Megane Hahn")"
                            OwnerFolder="@("Herman Moore")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Auto,
                                    ["eum",
                                        "cum"],
                                    "et",
                                    "voluptas",
                                    "et",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("autem")"
                            Screenshots="@(["dolor",
                                "quidem",
                                "nihil",
                                "ex"])"
                            Size="@(3)"
                            Snippet="@("in")"
                            Tags="@(["voluptas",
                                "qui",
                                "et"])"
                            Title="@("et porro officia")"
                            TypeKeywords="@(["qui",
                                "sit"])"
                            Url="@("https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/weather_stations_010417/FeatureServer/0")">
                        </PortalItem>
                    </KMLLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(kMLLayer!);
        await AssertJavaScript("assertLayerExists", args: "kml");
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "suscipit",
                    "eaque",
                    357.0449,
                    ["sed",
                        "consequuntur"],
                    new DateTime(2018, 8, 7, 21, 32, 9),
                    "recusandae",
                    "nostrum et iste quibusdam est nulla sint",
                new Extent(93.8663,
                        -8.5815,
                        61.1705,
                        -28.4991,
                        976.2900,
                        708.3529,
                        308.5708,
                        231.1968,
                    new SpatialReference(3,
                            "consequuntur",
                            "neque",
                            "quis"),
                        true,
                        true),
                    ["reprehenderit",
                        "adipisci"],
                    "tempora",
                    new DateTime(2011, 11, 16, 21, 52, 47),
                    "group",
                    241.6978);
        await kMLLayer.SetPortalItem(testPortalItem);
        var portalItem = await kMLLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Screen;
        await kMLLayer.SetBlendMode(testBlendMode);
        var blendMode = await kMLLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(30.3117,
                    -47.3360,
                    -47.6880,
                    31.6932,
                    659.6067,
                    288.7938,
                    509.0383,
                    801.0056,
                new SpatialReference(1,
                        "quis",
                        "sed",
                        "aut"),
                    true,
                    true);
        await kMLLayer.SetFullExtent(testFullExtent);
        var fullExtent = await kMLLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Hide;
        await kMLLayer.SetListMode(testListMode);
        var listMode = await kMLLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        IReadOnlyList<KMLSublayer> testSublayers = [new KMLSublayer("numquam atque dolor omnis ipsam beatae",
                    2,
                    "repellendus",
                    "cum alias voluptatem")];
        await kMLLayer.SetSublayers(testSublayers);
        var sublayers = await kMLLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2019, 6, 14, 12, 3, 48),
                    new DateTime(2014, 6, 2, 22, 3, 52));
        await kMLLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await kMLLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
