@inherits TestRunnerBase

@{
    base.BuildRenderTree(__builder);
}

@code {

    [TestMethod]
    public async Task TestCanRenderKMLLayer(Action renderHandler)
    {
        KMLLayer? kMLLayer = null;

        AddMapRenderFragment(
            @<MapView class="map-view" OnViewRendered="renderHandler">
                <Map>
                    <Basemap>
                        <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
                    </Basemap>
                    <KMLLayer 
                        Url="@("https://earthquake.usgs.gov/fdsnws/event/1/query?format=kml&minmagnitude=5.8")"
                        BlendMode="@(BlendMode.Invert)"
                        Effect="@(new Effect("vel",
                            36929030.4423))"
                        FullExtent="@(new Extent(-63.3960,
                                -80.2317,
                                -77.3847,
                                -20.3686,
                                15.1251,
                                677.5781,
                                543.5397,
                                625.2657,
                            new SpatialReference(5,
                                    "molestiae",
                                    "qui",
                                    "velit"),
                                true,
                                true))"
                        ListMode="@(ListMode.Show)"
                        MaxScale="@(24772852.1438)"
                        MinScale="@(28499.5545)"
                        Opacity="@(0.1942)"
                        PersistenceEnabled="@(true)"
                        Title="@("nihil facilis veniam")">
                        <TimeExtent 
                            Start="@(new DateTime(2003, 4, 4, 15, 54, 10))"
                            End="@(new DateTime(2023, 8, 21, 19, 29, 28))">
                        </TimeExtent>
                        <KMLSublayer 
                            Description="@("quibusdam facilis dolores recusandae omnis fugiat amet")"
                            KMLSublayerId="@(9)"
                            NetworkLink="@("modi")"
                            Title="@("qui dignissimos in")">
                        </KMLSublayer>
                        <PortalItem 
                            Access="@(PortalItemAccess.Org)"
                            AccessInformation="@("omnis")"
                            ApiKey="@("aspernatur")"
                            AvgRating="@(459.3282)"
                            Categories="@(["quam",
                                "illo",
                                "incidunt"])"
                            Created="@(new DateTime(2002, 11, 11, 7, 13, 29))"
                            Culture="@("rerum")"
                            Description="@("est velit maxime est voluptatem cumque")"
                            Extent="@(new Extent(-87.5691,
                                    -37.6629,
                                    -44.4108,
                                    -50.2071,
                                    992.2198,
                                    338.0860,
                                    741.3936,
                                    564.9654,
                                new SpatialReference(8,
                                        "optio",
                                        "quia",
                                        "tenetur"),
                                    true,
                                    true))"
                            GroupCategories="@(["itaque",
                                "laborum",
                                "et"])"
                            LicenseInfo="@("autem")"
                            Modified="@(new DateTime(2012, 10, 4, 4, 21, 50))"
                            Name="@("name")"
                            NumComments="@(599.8610)"
                            NumRatings="@(654.7361)"
                            NumViews="@(295.5353)"
                            Owner="@("Edwin Boyle")"
                            OwnerFolder="@("Oda Morissette")"
                            Portal="@(new Portal(PortalAccess.Public,
                                    true,
                                AuthMode.Anonymous,
                                    ["ut",
                                        "sit"],
                                    "et",
                                    "odio",
                                    "voluptatum",
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true,
                                    true))"
                            PortalItemId="@("rerum")"
                            Screenshots="@(["ut",
                                "qui"])"
                            Size="@(3)"
                            Snippet="@("dolor")"
                            Tags="@(["sint",
                                "eaque",
                                "quae"])"
                            Title="@("odio consectetur voluptates")"
                            TypeKeywords="@(["occaecati",
                                "iusto",
                                "optio"])"
                            Url="@("https://services.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/World_Countries_(Generalized)/FeatureServer/0")">
                        </PortalItem>
                    </KMLLayer>
                </Map>
            </MapView>);
        await WaitForMapToRender();
        Assert.IsNotNull(kMLLayer!);
        await AssertJavaScript("assertLayerExists", args: "kml");
        PortalItem testPortalItem = new PortalItem(PortalItemAccess.Org,
                    "eius",
                    "placeat",
                    325.9305,
                    ["rerum",
                        "occaecati",
                        "nisi"],
                    new DateTime(2023, 1, 1, 13, 58, 18),
                    "et",
                    "rerum magnam sunt alias corrupti id quidem",
                new Extent(51.9830,
                        73.8705,
                        37.0597,
                        -82.6675,
                        266.9492,
                        840.6664,
                        271.3391,
                        971.6335,
                    new SpatialReference(1,
                            "et",
                            "autem",
                            "iusto"),
                        true,
                        true),
                    ["repudiandae",
                        "suscipit"],
                    "delectus",
                    new DateTime(2000, 2, 25, 4, 8, 13),
                    "name",
                    284.5685);
        await kMLLayer.SetPortalItem(testPortalItem);
        var portalItem = await kMLLayer.GetPortalItem();
        Assert.AreEqual(testPortalItem, portalItem);
        BlendMode testBlendMode = BlendMode.Invert;
        await kMLLayer.SetBlendMode(testBlendMode);
        var blendMode = await kMLLayer.GetBlendMode();
        Assert.AreEqual(testBlendMode, blendMode);
        Extent testFullExtent = new Extent(37.0228,
                    -146.3955,
                    89.8217,
                    88.4976,
                    91.7669,
                    987.8664,
                    273.2048,
                    663.8335,
                new SpatialReference(4,
                        "porro",
                        "et",
                        "unde"),
                    true,
                    true);
        await kMLLayer.SetFullExtent(testFullExtent);
        var fullExtent = await kMLLayer.GetFullExtent();
        Assert.AreEqual(testFullExtent, fullExtent);
        ListMode testListMode = ListMode.Show;
        await kMLLayer.SetListMode(testListMode);
        var listMode = await kMLLayer.GetListMode();
        Assert.AreEqual(testListMode, listMode);
        IReadOnlyList<KMLSublayer> testSublayers = [new KMLSublayer("inventore labore totam ad et",
                    8,
                    "qui",
                    "qui culpa non"),
            new KMLSublayer("vitae error ut saepe",
                    4,
                    "soluta",
                    "consequatur perspiciatis occaecati"),
            new KMLSublayer("ipsam et est tempore et iusto",
                    5,
                    "distinctio",
                    "officiis incidunt debitis"),
            new KMLSublayer("fugit earum culpa est qui quo rerum",
                    3,
                    "vel",
                    "asperiores debitis earum")];
        await kMLLayer.SetSublayers(testSublayers);
        var sublayers = await kMLLayer.GetSublayers();
        Assert.AreEqual(testSublayers, sublayers);
        TimeExtent testVisibilityTimeExtent = new TimeExtent(new DateTime(2009, 10, 24, 14, 18, 48),
                    new DateTime(2009, 6, 14, 0, 53, 30));
        await kMLLayer.SetVisibilityTimeExtent(testVisibilityTimeExtent);
        var visibilityTimeExtent = await kMLLayer.GetVisibilityTimeExtent();
        Assert.AreEqual(testVisibilityTimeExtent, visibilityTimeExtent);
    }
}
